{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/asbjornenge/tzkt-api"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "swagger.json",
			"byteSize": 645618,
			"content": "{\n  \"x-generator\": \"NSwag v13.13.2.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v9.0.0.0))\",\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"TzKT API\",\n    \"description\": \"# Introduction\\n\\nTzKT Explorer provides free REST API and WebSocket API for accessing detailed Tezos blockchain data and helps developers build more services and applications on top of Tezos.\\nTzKT is an open-source project, so you can easily clone and build it and use it as a self-hosted service to avoid any risks of depending on third-party services.\\n\\nTzKT API is available for the following Tezos networks with the following base URLs:\\n\\n- Mainnet: `https://api.tzkt.io/` or `https://api.mainnet.tzkt.io/` ([view docs](https://api.tzkt.io)) \\n- Granadanet: `https://api.granadanet.tzkt.io/` ([view docs](https://api.granadanet.tzkt.io))  \\t \\n- Hangzhou2net: `https://api.hangzhou2net.tzkt.io/` ([view docs](https://api.hangzhou2net.tzkt.io))\\n\\nWe also provide a staging environment for testing newest features and pre-updating client applications before deploying to production:\\n\\n- Mainnet staging: `https://staging.api.tzkt.io/` or `https://staging.api.mainnet.tzkt.io/` ([view docs](https://staging.api.tzkt.io))\\n\\nFeel free to contact us if you have any questions or feature requests.\\nYour feedback really helps us make TzKT better!\\n\\n- Discord: https://discord.gg/aG8XKuwsQd\\n- Telegram: https://t.me/baking_bad_chat\\n- Slack: https://tezos-dev.slack.com/archives/CV5NX7F2L\\n- Twitter: https://twitter.com/TezosBakingBad\\n- Email: hello@baking-bad.org\\n\\nAnd don't forget to star TzKT project [on GitHub](https://github.com/baking-bad/tzkt) ;)\\n\\n# Terms of Use\\n\\nTzKT API is free for everyone and for both commercial and non-commercial usage.\\n\\nIf your application or service uses the TzKT API in any forms: directly on frontend or indirectly on backend,\\nyou should mention that fact on your website or application by placing the label\\n**\\\"Powered by TzKT API\\\"** with a direct link to [tzkt.io](https://tzkt.io).\\n\\n\\n# Rate Limits\\n\\nThere will be no rate limits as long as our servers can handle the load without additional infrastructure costs.\\nHowever, any apparent abuse will be prevented by setting targeted rate limits.\\n\\nCheck out [Tezos Explorer API Best Practices](https://baking-bad.org/blog/tag/TzKT/)\\nand in particular [how to optimize requests count](https://baking-bad.org/blog/2020/07/29/tezos-explorer-api-tzkt-how-often-to-make-requests/).\\n\\n---\\n\",\n    \"contact\": {\n      \"name\": \"Baking Bad Team\",\n      \"url\": \"https://baking-bad.org/docs\",\n      \"email\": \"hello@baking-bad.org\"\n    },\n    \"version\": \"v1.6.3\",\n    \"x-logo\": {\n      \"url\": \"https://tzkt.io/logo.png\",\n      \"href\": \"https://tzkt.io/\"\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://api.tzkt.io\"\n    }\n  ],\n  \"paths\": {\n    \"/v1/accounts\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get accounts\",\n        \"description\": \"Returns a list of accounts.\",\n        \"operationId\": \"Accounts_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by type (`user`, `delegate`, `contract`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountTypeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by contract kind (`delegator_contract` or `smart_contract`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ContractKindParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"delegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"balance\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by balance\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"staked\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by participation in staking\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"lastActivity\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by last activity level (where the account was updated)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `balance`, `firstActivity`, `lastActivity`, `numTransactions`, `numContracts`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Account\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get accounts count\",\n        \"description\": \"Returns a number of accounts.\",\n        \"operationId\": \"Accounts_GetCount\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by type (`user`, `delegate`, `contract`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountTypeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by contract kind (`delegator_contract` or `smart_contract`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ContractKindParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"balance\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by balance\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"staked\",\n            \"in\": \"query\",\n            \"description\": \"Filters accounts by participation in staking\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get account by address\",\n        \"description\": \"Returns an account with the specified address.\",\n        \"operationId\": \"Accounts_GetByAddress\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"metadata\",\n            \"in\": \"query\",\n            \"description\": \"Include or not account metadata\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Account\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/contracts\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get account contracts\",\n        \"description\": \"Returns a list of contracts created by (or related to) the specified account.\",\n        \"operationId\": \"Accounts_GetContracts\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts contracts by specified field. Supported fields: `id` (default, desc), `balance`, `creationLevel`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RelatedContract\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/delegators\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get account delegators\",\n        \"description\": \"Returns a list of accounts delegated to the specified account.\",\n        \"operationId\": \"Accounts_GetDelegators\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegators by type (`user`, `delegate`, `contract`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountTypeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"balance\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegators by balance.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"delegationLevel\",\n            \"in\": \"query\",\n            \"description\": \"Number of items to skip\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `delegationLevel` (default, desc), `balance`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Delegator\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/operations\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get account operations\",\n        \"description\": \"Returns a list of operations related to the specified account.\\nNote: for better flexibility this endpoint accumulates query parameters (filters) of each `/operations/{type}` endpoint,\\nso a particular filter may affect several operation types containing this filter.\\nFor example, if you specify an `initiator` it will affect all transactions, delegations and originations,\\nbecause all these types have an `initiator` field.\",\n        \"operationId\": \"Accounts_GetOperations\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Comma separated list of operation types to return (`endorsement`, `ballot`, `proposal`, `activation`, `double_baking`, `double_endorsing`, `nonce_revelation`, `delegation`, `origination`, `transaction`, `reveal`, `migration`, `revelation_penalty`, `baking`). If not specified then all operation types except `endorsement` and `baking` will be returned.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"initiator\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions, delegations and originations by initiator. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions, delegations, originations, reveals and seed nonce revelations by sender. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by target. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"prevDelegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by prev delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"newDelegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by new delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"contractManager\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by manager. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"contractDelegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"originatedContract\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by originated contract. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"accuser\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking and double endorsing by accuser. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"offender\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking and double endorsing by offender. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 12\n          },\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters seed nonce revelation operations by baker. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 13\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 14\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 15\n          },\n          {\n            \"name\": \"entrypoint\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by entrypoint called on the target contract.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/StringParameter\"\n                }\n              ]\n            },\n            \"x-position\": 16\n          },\n          {\n            \"name\": \"parameter\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by parameter value. Note, this query parameter supports the following format: `?parameter{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?parameter.token_id=...` or `?parameter.sigs.0.ne=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 17\n          },\n          {\n            \"name\": \"parameters\",\n            \"in\": \"query\",\n            \"description\": \"**DEPRECATED**. Use `entrypoint` and `parameter` instead.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/StringParameter\"\n                }\n              ]\n            },\n            \"x-position\": 18\n          },\n          {\n            \"name\": \"hasInternals\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by presence of internal operations.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 19\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions, delegations, originations and reveals by operation status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 20\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sort mode (0 - ascending, 1 - descending), operations of different types can only be sorted by ID.\",\n            \"schema\": {\n              \"default\": \"Descending\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortMode\"\n                }\n              ]\n            },\n            \"x-position\": 21\n          },\n          {\n            \"name\": \"lastId\",\n            \"in\": \"query\",\n            \"description\": \"Id of the last operation received, which is used as an offset for pagination\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"nullable\": true\n            },\n            \"x-position\": 22\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 1000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 23\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 24\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 25\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"**DEPRECATED**. Use `timestamp.ge=` intead.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"nullable\": true\n            },\n            \"x-position\": 26\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"description\": \"**DEPRECATED**. Use `timestamp.lt=` intead.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"nullable\": true\n            },\n            \"x-position\": 27\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Operation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/metadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get account metadata\",\n        \"description\": \"Returns metadata of the specified account (alias, logo, website, contacts, etc).\",\n        \"operationId\": \"Accounts_GetMetadata\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AccountMetadata\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/counter\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get counter\",\n        \"description\": \"Returns account counter\",\n        \"operationId\": \"Accounts_GetCounter\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/balance\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get balance\",\n        \"description\": \"Returns account balance\",\n        \"operationId\": \"Accounts_GetBalance\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/balance_history/{level}\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get balance at level\",\n        \"description\": \"Returns account balance at the specified block\",\n        \"operationId\": \"Accounts_GetBalanceAtLevel\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Block height at which you want to know account balance\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/balance_history/{datetime}\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get balance at date\",\n        \"description\": \"Returns account balance at the specified datetime\",\n        \"operationId\": \"Accounts_GetBalanceAtDate\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"datetime\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Datetime at which you want to know account balance (e.g. `2020-01-01`, or `2019-12-30T23:42:59Z`)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/balance_history\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get balance history\",\n        \"description\": \"Returns time series with historical balances (only changes, without duplicates).\",\n        \"operationId\": \"Accounts_GetBalanceHistory\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"step\",\n            \"in\": \"query\",\n            \"description\": \"Step of the time series, for example if `step = 1000` you will get balances at blocks `1000, 2000, 3000, ...`.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts historical balances by specified field. Supported fields: `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/HistoricalBalance\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/accounts/{address}/report\": {\n      \"get\": {\n        \"tags\": [\n          \"Accounts\"\n        ],\n        \"summary\": \"Get account report\",\n        \"description\": \"Exports account balance report in .csv format\",\n        \"operationId\": \"Accounts_GetBalanceReport\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Account address (starting with tz or KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"Start of the datetime range to filter by (ISO 8601, e.g. 2019-11-31)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"description\": \"End of the datetime range to filter by (ISO 8601, e.g. 2019-12-31)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"currency\",\n            \"in\": \"query\",\n            \"description\": \"Currency to convert amounts to (`btc`, `eur`, `usd`, `cny`, `jpy`, `krw`, `eth`, `gbp`)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"historical\",\n            \"in\": \"query\",\n            \"description\": \"`true` if you want to use historical prices, `false` to use current price\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"delimiter\",\n            \"in\": \"query\",\n            \"description\": \"Column delimiter (`comma`, `semicolon`)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"comma\",\n              \"nullable\": true\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"separator\",\n            \"in\": \"query\",\n            \"description\": \"Decimal separator (`comma`, `point`)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"point\",\n              \"nullable\": true\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/count\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmaps count\",\n        \"description\": \"Returns the total number of bigmaps.\",\n        \"operationId\": \"BigMaps_GetBigMapsCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmaps\",\n        \"description\": \"Returns a list of bigmaps.\",\n        \"operationId\": \"BigMaps_GetBigMaps\",\n        \"parameters\": [\n          {\n            \"name\": \"contract\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmaps by smart contract address.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"path\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmaps by path in the contract storage.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/StringParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmaps by tags: `token_metadata` - tzip-12, `metadata` - tzip-16.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BigMapTagsParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmaps by status: `true` - active, `false` - removed.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"lastLevel\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmaps by the last update level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmaps by specified field. Supported fields: `id` (default), `ptr`, `firstLevel`, `lastLevel`, `totalKeys`, `activeKeys`, `updates`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value type: `0` - JSON, `2` - Micheline\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMap\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/updates\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmap updates\",\n        \"description\": \"Returns a list of all bigmap updates.\",\n        \"operationId\": \"BigMaps_GetBigMapUpdates\",\n        \"parameters\": [\n          {\n            \"name\": \"bigmap\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by bigmap ptr\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"path\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by bigmap path\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/StringParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"contract\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by bigmap contract\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by bigmap tags: `token_metadata` - tzip-12, `metadata` - tzip-16\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BigMapTagsParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"action\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by action\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BigMapActionParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by JSON value. Note, this query parameter supports the following format: `?value{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?value.balance.gt=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by level\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters updates by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/TimestampParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmaps by specified field. Supported fields: `id` (default), `ptr`, `firstLevel`, `lastLevel`, `totalKeys`, `activeKeys`, `updates`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value type: `0` - JSON, `2` - Micheline\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 12\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapUpdate\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmap by Id\",\n        \"description\": \"Returns a bigmap with the specified Id.\",\n        \"operationId\": \"BigMaps_GetBigMapById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value type: `0` - JSON, `2` - Micheline\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BigMap\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}/type\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmap type\",\n        \"description\": \"Returns a type of the bigmap with the specified Id in Micheline format (with annotations).\",\n        \"operationId\": \"BigMaps_GetBigMapType\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MichelinePrim\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}/keys\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmap keys\",\n        \"description\": \"Returns a list of bigmap keys.\",\n        \"operationId\": \"BigMaps_GetKeys\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by status: `true` - active, `false` - removed.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON key. Note, this query parameter supports the following format: `?key{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?key.token_id=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON value. Note, this query parameter supports the following format: `?value{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?value.balance.gt=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"lastLevel\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmap keys by the last update level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmap keys by specified field. Supported fields: `id` (default), `firstLevel`, `lastLevel`, `updates`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapKey\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}/keys/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmap key\",\n        \"description\": \"Returns the specified bigmap key.\",\n        \"operationId\": \"BigMaps_GetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Either a key hash (`expr123...`) or a plain value (`abcde...`).\\n            Even if the key is complex (an object or an array), you can specify it as is, for example, `/keys/{\\\"address\\\":\\\"tz123\\\",\\\"nat\\\":\\\"123\\\"}`.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BigMapKey\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}/keys/{key}/updates\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get bigmap key updates\",\n        \"description\": \"Returns updates history for the specified bigmap key.\",\n        \"operationId\": \"BigMaps_GetKeyUpdates\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Either a key hash (`expr123...`) or a plain value (`abcde...`).\\n            Even if the key is complex (an object or an array), you can specify it as is, for example, `/keys/{\\\"address\\\":\\\"tz123\\\",\\\"nat\\\":\\\"123\\\"}`.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmap updates by specified field. Supported fields: `id` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the key value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapKeyUpdate\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}/historical_keys/{level}\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get historical keys\",\n        \"description\": \"Returns a list of bigmap keys at the specific block.\",\n        \"operationId\": \"BigMaps_GetHistoricalKeys\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Level of the block at which you want to get bigmap keys\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by status: `true` - active, `false` - removed.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON key. Note, this query parameter supports the following format: `?key{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?key.token_id=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON value. Note, this query parameter supports the following format: `?value{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?value.balance.gt=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmap keys by specified field. Supported fields: `id` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapKeyHistorical\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/bigmaps/{id}/historical_keys/{level}/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"BigMaps\"\n        ],\n        \"summary\": \"Get historical key\",\n        \"description\": \"Returns the specified bigmap key at the specific block.\",\n        \"operationId\": \"BigMaps_GetKey2\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap Id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Level of the block at which you want to get bigmap key\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Either a key hash (`expr123...`) or a plain value (`abcde...`).\\n            Even if the key is complex (an object or an array), you can specify it as is, for example, `/keys/{\\\"address\\\":\\\"tz123\\\",\\\"nat\\\":\\\"123\\\"}`.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BigMapKeyHistorical\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/blocks/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Blocks\"\n        ],\n        \"summary\": \"Get blocks count\",\n        \"description\": \"Returns the total number of blocks.\",\n        \"operationId\": \"Blocks_GetCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/blocks\": {\n      \"get\": {\n        \"tags\": [\n          \"Blocks\"\n        ],\n        \"summary\": \"Get blocks\",\n        \"description\": \"Returns a list of blocks.\",\n        \"operationId\": \"Blocks_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters blocks by baker. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters blocks by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters blocks by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"priority\",\n            \"in\": \"query\",\n            \"description\": \"Filters blocks by priority.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts blocks by specified field. Supported fields: `id` (default), `level`, `priority`, `validations`, `reward`, `fees`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Block\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/blocks/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Blocks\"\n        ],\n        \"summary\": \"Get block by hash\",\n        \"description\": \"Returns a block with the specified hash.\",\n        \"operationId\": \"Blocks_GetByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Block hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"operations\",\n            \"in\": \"query\",\n            \"description\": \"Flag indicating whether to include block operations into returned object or not\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Block\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/blocks/{level}\": {\n      \"get\": {\n        \"tags\": [\n          \"Blocks\"\n        ],\n        \"summary\": \"Get block by level\",\n        \"description\": \"Returns a block at the specified level.\",\n        \"operationId\": \"Blocks_GetByLevel\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Block level\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"operations\",\n            \"in\": \"query\",\n            \"description\": \"Flag indicating whether to include block operations into returned object or not\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Block\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/commitments/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Commitments\"\n        ],\n        \"summary\": \"Get commitment by blinded address\",\n        \"description\": \"Returns a commitment with the specified blinded address.\",\n        \"operationId\": \"Commitments_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Blinded address (starting with btz)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Commitment\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/commitments\": {\n      \"get\": {\n        \"tags\": [\n          \"Commitments\"\n        ],\n        \"summary\": \"Get commitments\",\n        \"description\": \"Returns a list of commitments.\",\n        \"operationId\": \"Commitments_GetAll\",\n        \"parameters\": [\n          {\n            \"name\": \"activated\",\n            \"in\": \"query\",\n            \"description\": \"Filters commitments by activation status\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"activationLevel\",\n            \"in\": \"query\",\n            \"description\": \"Filters commitments by activation level\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32NullParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"balance\",\n            \"in\": \"query\",\n            \"description\": \"Filters commitments by activated balance\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `balance`, `activationLevel`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Commitment\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/commitments/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Commitments\"\n        ],\n        \"summary\": \"Get commitments count\",\n        \"description\": \"Returns a number of commitments.\",\n        \"operationId\": \"Commitments_GetCount\",\n        \"parameters\": [\n          {\n            \"name\": \"activated\",\n            \"in\": \"query\",\n            \"description\": \"Filters commitments by activation status\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"balance\",\n            \"in\": \"query\",\n            \"description\": \"Filters commitments by activated balance\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/constants\": {\n      \"get\": {\n        \"tags\": [\n          \"Constants\"\n        ],\n        \"summary\": \"Get global constants\",\n        \"description\": \"Returns a list of global constants.\",\n        \"operationId\": \"Constants_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by global address (starts with `expr..`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ExpressionParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"creationLevel\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by creation level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"creationTime\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by creation time.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/TimestampParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"creator\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by creator.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"refs\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by number of refs.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"size\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by size in bytes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `creationLevel`, `size`, `refs`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"Constant value format (`0` - micheline, `1` - michelson, `2` - bytes (base64))\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0,\n              \"maximum\": 2.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Constant\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/constants/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Constants\"\n        ],\n        \"summary\": \"Get global constant by address\",\n        \"description\": \"Returns global constant with specified address (expression hash).\",\n        \"operationId\": \"Constants_GetByAddress\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Global address (starts with `expr..`)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"Constant value format (`0` - micheline, `1` - michelson, `2` - bytes (base64))\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0,\n              \"maximum\": 2.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Constant\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/constants/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Constants\"\n        ],\n        \"summary\": \"Get global constants count\",\n        \"description\": \"Returns a number of global constants.\",\n        \"operationId\": \"Constants_GetCount\",\n        \"parameters\": [\n          {\n            \"name\": \"refs\",\n            \"in\": \"query\",\n            \"description\": \"Filters constants by number of refs.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contracts\",\n        \"description\": \"Returns a list of contract accounts.\",\n        \"operationId\": \"Contracts_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"Contract kind to filter by (`delegator_contract` or `smart_contract`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ContractKindParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"creator\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by creator. Allowed fields for `.eqx` mode: `manager`, `delegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"manager\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by manager. Allowed fields for `.eqx` mode: `creator`, `delegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"delegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by delegate. Allowed fields for `.eqx` mode: `manager`, `creator`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"balance\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by balance\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"lastActivity\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by last activity level (where the contract was updated)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"typeHash\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by 32-bit hash of contract parameter and storage types (helpful for searching similar contracts)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"codeHash\",\n            \"in\": \"query\",\n            \"description\": \"Filters contracts by 32-bit hash of contract code (helpful for searching same contracts)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts contracts by specified field. Supported fields: `id` (default), `balance`, `firstActivity`, `lastActivity`, `numTransactions`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 12\n          },\n          {\n            \"name\": \"includeStorage\",\n            \"in\": \"query\",\n            \"description\": \"Specifies whether to include contract storage value in response.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 13\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Contract\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contracts count\",\n        \"description\": \"Returns a number of contract accounts.\",\n        \"operationId\": \"Contracts_GetCount\",\n        \"parameters\": [\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"Contract kind to filter by (`delegator_contract` or `smart_contract`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ContractKindParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract by address\",\n        \"description\": \"Returns a contract account with the specified address.\",\n        \"operationId\": \"Contracts_GetByAddress\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Contract\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/same\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get same contracts\",\n        \"description\": \"Returns contracts which have the same script as the specified one.\\nNote, contract scripts are compared by 32-bit hash, so in very rare cases there may be collisions.\",\n        \"operationId\": \"Contracts_GetSame\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts contracts by specified field. Supported fields: `id` (default), `balance`, `firstActivity`, `lastActivity`, `numTransactions`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"includeStorage\",\n            \"in\": \"query\",\n            \"description\": \"Specifies whether to include contract storage value in response.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Contract\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/similar\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get similar contracts\",\n        \"description\": \"Returns contracts which have the same interface (parameter and storage types) as the specified one.\\nNote, contract parameter and storage types are compared by 32-bit hash, so in very rare cases there may be collisions.\",\n        \"operationId\": \"Contracts_GetSimilar\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts contracts by specified field. Supported fields: `id` (default), `balance`, `firstActivity`, `lastActivity`, `numTransactions`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"includeStorage\",\n            \"in\": \"query\",\n            \"description\": \"Specifies whether to include contract storage value in response.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Contract\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/code\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract code\",\n        \"description\": \"Returns a code of the specified contract.\",\n        \"operationId\": \"Contracts_GetCode\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Level at which contract code should be taken. If `0` or not specified, the current value will be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"format\",\n            \"in\": \"query\",\n            \"description\": \"Code format (`0` - micheline, `1` - michelson, `2` - bytes (base64))\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0,\n              \"maximum\": 2.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/interface\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get JSON Schema [2020-12] interface for the contract\",\n        \"description\": \"Returns standard JSON Schema for contract storage, entrypoints, and Big_map entries.\",\n        \"operationId\": \"Contracts_GetInterface\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContractInterface\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/entrypoints\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract entrypoints\",\n        \"description\": \"Returns entrypoints of the specified contract.\",\n        \"operationId\": \"Contracts_GetEntrypoints\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"all\",\n            \"in\": \"query\",\n            \"description\": \"If true, returns all entrypoints, including unused ones.\\n            Unused means that the entrypoint can be normalized to a more specific one.\\n            For example here `(or %entry1 (unit %entry2) (nat %entry3))` the `%entry1` is unused entrypoint\\n            because it can be normalized to `%entry2` or `%entry3`\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"json\",\n            \"in\": \"query\",\n            \"description\": \"Include parameters schema in human-readable JSON format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Include parameters schema in micheline format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"michelson\",\n            \"in\": \"query\",\n            \"description\": \"Include parameters schema in michelson format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Entrypoint\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/entrypoints/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get entrypoint by name\",\n        \"description\": \"Returns contract's entrypoint with specified name.\",\n        \"operationId\": \"Contracts_GetEntrypointByName\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Entrypoint name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"json\",\n            \"in\": \"query\",\n            \"description\": \"Include parameters schema in human-readable JSON format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Include parameters schema in micheline format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"michelson\",\n            \"in\": \"query\",\n            \"description\": \"Include parameters schema in michelson format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Entrypoint\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/views\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract views\",\n        \"description\": \"Returns all views of the specified contract.\",\n        \"operationId\": \"Contracts_GetContractViews\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"json\",\n            \"in\": \"query\",\n            \"description\": \"Include parameter and return types in human-readable JSON format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Include parameter and return types in micheline format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"michelson\",\n            \"in\": \"query\",\n            \"description\": \"Include parameter and return types in michelson format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContractView\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/views/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get view by name\",\n        \"description\": \"Returns contract view with specified name.\",\n        \"operationId\": \"Contracts_GetContractViewByName\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address (starting with KT)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"View name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"json\",\n            \"in\": \"query\",\n            \"description\": \"Include parameter and return types in human-readable JSON format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Include parameter and return types in micheline format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"michelson\",\n            \"in\": \"query\",\n            \"description\": \"Include parameter and return types in michelson format\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContractView\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/entrypoints/{name}/build\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Build entrypoint parameters\",\n        \"description\": \"Returns micheline parameters converted from its JSON representation.\",\n        \"operationId\": \"Contracts_BuildEntrypointParametersGET\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Entrypoint name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Json parameters\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Build entrypoint parameters\",\n        \"description\": \"Returns micheline parameters converted from its JSON representation.\",\n        \"operationId\": \"Contracts_BuildEntrypointParametersPOST\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Entrypoint name\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"requestBody\": {\n          \"x-name\": \"value\",\n          \"description\": \"Json parameters\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {}\n            }\n          },\n          \"required\": true,\n          \"x-position\": 3\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/storage\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract storage\",\n        \"description\": \"Returns contract storage value in JSON format.\",\n        \"operationId\": \"Contracts_GetStorage\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Level at which storage value should be taken. If `0` or not specified, the current value will be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"path\",\n            \"in\": \"query\",\n            \"description\": \"Path in the JSON value (point-separated list of field names, e.g. `path=settings.refund_time` to return\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/storage/schema\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract storage schema\",\n        \"description\": \"Returns JSON schema of the contract storage.\",\n        \"operationId\": \"Contracts_GetStorageSchema\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Level at which storage schema should be taken. If `0` or not specified, the current schema will be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"format\": \"binary\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/storage/history\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract storage history\",\n        \"description\": \"Returns contract storage historical values.\",\n        \"operationId\": \"Contracts_GetStorageHistory\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"lastId\",\n            \"in\": \"query\",\n            \"description\": \"Id of the last item received (for pagination)\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10,\n              \"maximum\": 1000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/StorageRecord\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/storage/raw\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get raw contract storage\",\n        \"description\": \"Returns raw contract storage value in micheline format.\",\n        \"operationId\": \"Contracts_GetRawStorage\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Level at which storage value should be taken. If `0` or not specified, the current value will be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IMicheline\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/storage/raw/schema\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get raw contract storage schema\",\n        \"description\": \"Returns micheline schema (type) of the contract storage.\",\n        \"operationId\": \"Contracts_GetRawStorageSchema\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Level at which storage schema should be taken. If `0` or not specified, the current schema will be returned.\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/IMicheline\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/storage/raw/history\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get raw contract storage history\",\n        \"description\": \"Returns raw contract storage historical values.\",\n        \"operationId\": \"Contracts_GetRawStorageHistory\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"lastId\",\n            \"in\": \"query\",\n            \"description\": \"Id of the last item received (for pagination)\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10,\n              \"maximum\": 1000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/StorageRecord\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get contract bigmaps\",\n        \"description\": \"Returns all active bigmaps allocated in the contract storage.\",\n        \"operationId\": \"Contracts_GetBigMaps\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmaps tags (`token_metadata` - tzip-12, `metadata` - tzip-16).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BigMapTagsParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object.\\n            If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmaps by specified field. Supported fields: `id` (default), `firstLevel`, `lastLevel`, `totalKeys`, `activeKeys`, `updates`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMap\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps/{name}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get bigmap by name\",\n        \"description\": \"Returns contract bigmap with the specified name or storage path.\",\n        \"operationId\": \"Contracts_GetBigMapByName\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap name is the last piece of the bigmap storage path.\\n            For example, if the storage path is `ledger` or `assets.ledger`, then the name is `ledger`.\\n            If there are multiple bigmaps with the same name, for example `assets.ledger` and `tokens.ledger`, you can specify the full path.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BigMap\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps/{name}/keys\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get bigmap keys\",\n        \"description\": \"Returns keys of a contract bigmap with the specified name.\",\n        \"operationId\": \"Contracts_GetBigMapByNameKeys\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap name is the last piece of the bigmap storage path.\\n            For example, if the storage path is `ledger` or `assets.ledger`, then the name is `ledger`.\\n            If there are multiple bigmaps with the same name, for example `assets.ledger` and `tokens.ledger`, you can specify the full path.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by status: `true` - active, `false` - removed.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON key. Note, this query parameter supports the following format: `?key{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?key.token_id=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON value. Note, this query parameter supports the following format: `?value{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?value.balance.gt=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"lastLevel\",\n            \"in\": \"query\",\n            \"description\": \"Filters bigmap keys by the last update level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmap keys by specified field. Supported fields: `id` (default), `firstLevel`, `lastLevel`, `updates`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapKey\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps/{name}/keys/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get bigmap key\",\n        \"description\": \"Returns the specified bigmap key.\",\n        \"operationId\": \"Contracts_GetKey\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap name is the last piece of the bigmap storage path.\\n            For example, if the storage path is `ledger` or `assets.ledger`, then the name is `ledger`.\\n            If there are multiple bigmaps with the same name, for example `assets.ledger` and `tokens.ledger`, you can specify the full path.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Either a key hash (`expr123...`) or a plain value (`abcde...`).\\n            Even if the key is complex (an object or an array), you can specify it as is, for example, `/keys/{\\\"address\\\":\\\"tz123\\\",\\\"nat\\\":\\\"123\\\"}`.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BigMapKey\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps/{name}/keys/{key}/updates\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get bigmap key updates\",\n        \"description\": \"Returns updates history for the specified bigmap key.\",\n        \"operationId\": \"Contracts_GetKeyUpdates\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap name is the last piece of the bigmap storage path.\\n            For example, if the storage path is `ledger` or `assets.ledger`, then the name is `ledger`.\\n            If there are multiple bigmaps with the same name, for example `assets.ledger` and `tokens.ledger`, you can specify the full path.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Either a key hash (`expr123...`) or a plain value (`abcde...`).\\n            Even if the key is complex (an object or an array), you can specify it as is, for example, `/keys/{\\\"address\\\":\\\"tz123\\\",\\\"nat\\\":\\\"123\\\"}`.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmap updates by specified field. Supported fields: `id` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the key value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapKeyUpdate\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps/{name}/historical_keys/{level}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get historical keys\",\n        \"description\": \"Returns a list of bigmap keys at the specific block.\",\n        \"operationId\": \"Contracts_GetHistoricalKeys\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap name is the last piece of the bigmap storage path.\\n            For example, if the storage path is `ledger` or `assets.ledger`, then the name is `ledger`.\\n            If there are multiple bigmaps with the same name, for example `assets.ledger` and `tokens.ledger`, you can specify the full path.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Level of the block at which you want to get bigmap keys\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by status: `true` - active, `false` - removed.\",\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"nullable\": true\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON key. Note, this query parameter supports the following format: `?key{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?key.token_id=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"value\",\n            \"in\": \"query\",\n            \"description\": \"Filters keys by JSON value. Note, this query parameter supports the following format: `?value{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?value.balance.gt=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts bigmap keys by specified field. Supported fields: `id` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BigMapKeyHistorical\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/contracts/{address}/bigmaps/{name}/historical_keys/{level}/{key}\": {\n      \"get\": {\n        \"tags\": [\n          \"Contracts\"\n        ],\n        \"summary\": \"Get historical key\",\n        \"description\": \"Returns the specified bigmap key at the specific block.\",\n        \"operationId\": \"Contracts_GetKey2\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Contract address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Bigmap name is the last piece of the bigmap storage path.\\n            For example, if the storage path is `ledger` or `assets.ledger`, then the name is `ledger`.\\n            If there are multiple bigmaps with the same name, for example `assets.ledger` and `tokens.ledger`, you can specify the full path.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Level of the block at which you want to get bigmap key\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"key\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Either a key hash (`expr123...`) or a plain value (`abcde...`).\\n            Even if the key is complex (an object or an array), you can specify it as is, for example, `/keys/{\\\"address\\\":\\\"tz123\\\",\\\"nat\\\":\\\"123\\\"}`.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the bigmap key and value: `0` - JSON, `1` - JSON string, `2` - Micheline, `3` - Micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BigMapKeyHistorical\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/cycles/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Cycles\"\n        ],\n        \"summary\": \"Get cycles count\",\n        \"description\": \"Returns the total number of cycles, including future cycles.\",\n        \"operationId\": \"Cycles_GetCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/cycles\": {\n      \"get\": {\n        \"tags\": [\n          \"Cycles\"\n        ],\n        \"summary\": \"Get cycles\",\n        \"description\": \"Returns a list of cycles, including future cycles.\",\n        \"operationId\": \"Cycles_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"snapshotIndex\",\n            \"in\": \"query\",\n            \"description\": \"Filters cycles by snapshot index (0..15)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts cycles by specified field. Supported fields: `index` (default, desc).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Cycle\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/cycles/{index}\": {\n      \"get\": {\n        \"tags\": [\n          \"Cycles\"\n        ],\n        \"summary\": \"Get cycle by index\",\n        \"description\": \"Returns a cycle at the specified index.\",\n        \"operationId\": \"Cycles_GetByIndex\",\n        \"parameters\": [\n          {\n            \"name\": \"index\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Cycle index starting from zero\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Cycle\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/delegates\": {\n      \"get\": {\n        \"tags\": [\n          \"Delegates\"\n        ],\n        \"summary\": \"Get delegates\",\n        \"description\": \"Returns a list of delegate accounts.\",\n        \"operationId\": \"Delegates_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Delegate status to filter by (true - only active, false - only deactivated, undefined - all delegates)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"lastActivity\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegates by last activity level (where the delegate was updated)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `activationLevel`, `deactivationLevel`, `stakingBalance`, `balance`, `numDelegators`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Delegate\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/delegates/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Delegates\"\n        ],\n        \"summary\": \"Get delegates count\",\n        \"description\": \"Returns a number of delegate accounts.\",\n        \"operationId\": \"Delegates_GetCount\",\n        \"parameters\": [\n          {\n            \"name\": \"active\",\n            \"in\": \"query\",\n            \"description\": \"Delegate status to filter by (true - only active, false - only deactivated, undefined - all delegates)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/delegates/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Delegates\"\n        ],\n        \"summary\": \"Get delegate by address\",\n        \"description\": \"Returns a delegate with the specified address.\",\n        \"operationId\": \"Delegates_GetByAddress\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Delegate address (starting with tz)\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Delegate\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/head\": {\n      \"get\": {\n        \"tags\": [\n          \"Head\"\n        ],\n        \"summary\": \"Get indexer head\",\n        \"description\": \"Returns indexer head and synchronization status.\",\n        \"operationId\": \"Head_Get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/State\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get operations by hash\",\n        \"description\": \"Returns a list of operations with the specified hash.\",\n        \"operationId\": \"Operations_GetByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Operation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/{hash}/{counter}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get operations by hash and counter\",\n        \"description\": \"Returns a list of operations with the specified hash and counter.\",\n        \"operationId\": \"Operations_GetByHashCounter\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"counter\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation counter\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Operation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/{hash}/{counter}/{nonce}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get operations by hash, counter and nonce\",\n        \"description\": \"Returns an internal operations with the specified hash, counter and nonce.\",\n        \"operationId\": \"Operations_GetByHashCounterNonce\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"counter\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation counter\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"nonce\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation nonce (internal)\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Operation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/endorsements\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get endorsements\",\n        \"description\": \"Returns a list of endorsement operations.\",\n        \"operationId\": \"Operations_GetEndorsements\",\n        \"parameters\": [\n          {\n            \"name\": \"delegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters endorsements by delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters endorsements by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters endorsements by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts endorsements by specified field. Supported fields: `id` (default), `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/EndorsementOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/endorsements/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get endorsement by hash\",\n        \"description\": \"Returns an endorsement operation with specified hash.\",\n        \"operationId\": \"Operations_GetEndorsementByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/EndorsementOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/endorsements/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get endorsements count\",\n        \"description\": \"Returns the total number of endorsement operations.\",\n        \"operationId\": \"Operations_GetEndorsementsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters endorsements by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters endorsements by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/ballots\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get ballots\",\n        \"description\": \"Returns a list of ballot operations.\",\n        \"operationId\": \"Operations_GetBallots\",\n        \"parameters\": [\n          {\n            \"name\": \"delegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballots by delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballots by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballots by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"epoch\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballots by voting epoch.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"period\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballots by voting period.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"proposal\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballots by proposal hash.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ProtocolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts ballots by specified field. Supported fields: `id` (default), `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BallotOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/ballots/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get ballot by hash\",\n        \"description\": \"Returns a ballot operation with specified hash.\",\n        \"operationId\": \"Operations_GetBallotByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BallotOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/ballots/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get ballots count\",\n        \"description\": \"Returns the total number of ballot operations.\",\n        \"operationId\": \"Operations_GetBallotsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballot operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters ballot operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/proposals\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get proposals\",\n        \"description\": \"Returns a list of proposal operations.\",\n        \"operationId\": \"Operations_GetProposals\",\n        \"parameters\": [\n          {\n            \"name\": \"delegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by delegate. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"epoch\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by voting epoch.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"period\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by voting period.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"proposal\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by proposal hash.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ProtocolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"duplicated\",\n            \"in\": \"query\",\n            \"description\": \"Specify whether to include or exclude duplicates, which didn't actually upvote a proposal.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts proposal operations by specified field. Supported fields: `id` (default), `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 12\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ProposalOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/proposals/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get proposal by hash\",\n        \"description\": \"Returns a proposal operation with specified hash.\",\n        \"operationId\": \"Operations_GetProposalByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ProposalOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/proposals/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get proposals count\",\n        \"description\": \"Returns the total number of proposal operations.\",\n        \"operationId\": \"Operations_GetProposalsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposal operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/activations\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get activations\",\n        \"description\": \"Returns a list of activation operations.\",\n        \"operationId\": \"Operations_GetActivations\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Filters activations by account. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters activations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters activations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts activations by specified field. Supported fields: `id` (default), `level`, `balance`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ActivationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/activations/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get activation by hash\",\n        \"description\": \"Returns an activation operation with specified hash.\",\n        \"operationId\": \"Operations_GetActivationByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ActivationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/activations/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get activations count\",\n        \"description\": \"Returns the total number of activation operations.\",\n        \"operationId\": \"Operations_GetActivationsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters activations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters activations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/double_baking\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get double baking\",\n        \"description\": \"Returns a list of double baking operations.\",\n        \"operationId\": \"Operations_GetDoubleBaking\",\n        \"parameters\": [\n          {\n            \"name\": \"anyof\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by any of the specified fields. Example: `anyof.accuser.offender=tz1...` will return operations where `accuser` OR `offender` is equal to the specified value. This parameter is useful when you need to retrieve all operations associated with a specified account.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"accuser\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by accuser. Allowed fields for `.eqx` mode: `offender`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offender\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by offender. Allowed fields for `.eqx` mode: `accuser`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts double baking operations by specified field. Supported fields: `id` (default), `level`, `accusedLevel`, `accuserRewards`, `offenderLostDeposits`, `offenderLostRewards`, `offenderLostFees`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DoubleBakingOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/double_baking/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get double baking by hash\",\n        \"description\": \"Returns a double baking operation with specified hash.\",\n        \"operationId\": \"Operations_GetDoubleBakingByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DoubleBakingOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/double_baking/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get double baking count\",\n        \"description\": \"Returns the total number of double baking operations.\",\n        \"operationId\": \"Operations_GetDoubleBakingCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters double baking operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/double_endorsing\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get double endorsing\",\n        \"description\": \"Returns a list of double endorsing operations.\",\n        \"operationId\": \"Operations_GetDoubleEndorsing\",\n        \"parameters\": [\n          {\n            \"name\": \"anyof\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by any of the specified fields. Example: `anyof.accuser.offender=tz1...` will return operations where `accuser` OR `offender` is equal to the specified value. This parameter is useful when you need to retrieve all operations associated with a specified account.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"accuser\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by accuser. Allowed fields for `.eqx` mode: `offender`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offender\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by offender. Allowed fields for `.eqx` mode: `accuser`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts double endorsing operations by specified field. Supported fields: `id` (default), `level`, `accusedLevel`, `accuserRewards`, `offenderLostDeposits`, `offenderLostRewards`, `offenderLostFees`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DoubleEndorsingOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/double_endorsing/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get double endorsing by hash\",\n        \"description\": \"Returns a double endorsing operation with specified hash.\",\n        \"operationId\": \"Operations_GetDoubleEndorsingByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DoubleEndorsingOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/double_endorsing/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get double endorsing count\",\n        \"description\": \"Returns the total number of double endorsing operations.\",\n        \"operationId\": \"Operations_GetDoubleEndorsingCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters double endorsing operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/nonce_revelations\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get nonce revelations\",\n        \"description\": \"Returns a list of seed nonce revelation operations.\",\n        \"operationId\": \"Operations_GetNonceRevelations\",\n        \"parameters\": [\n          {\n            \"name\": \"anyof\",\n            \"in\": \"query\",\n            \"description\": \"Filters nonce revelation operations by any of the specified fields. Example: `anyof.baker.sender=tz1...` will return operations where `baker` OR `sender` is equal to the specified value. This parameter is useful when you need to retrieve all operations associated with a specified account.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters nonce revelation operations by baker. Allowed fields for `.eqx` mode: `sender`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters nonce revelation operations by sender. Allowed fields for `.eqx` mode: `baker`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters nonce revelation operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters nonce revelation operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts nonce revelation operations by specified field. Supported fields: `id` (default), `level`, `revealedLevel`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/NonceRevelationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/nonce_revelations/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get nonce revelation by hash\",\n        \"description\": \"Returns a seed nonce revelation operation with specified hash.\",\n        \"operationId\": \"Operations_GetNonceRevelationByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/NonceRevelationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/nonce_revelations/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get nonce revelations count\",\n        \"description\": \"Returns the total number of seed nonce revelation operations.\",\n        \"operationId\": \"Operations_GetNonceRevelationsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters seed nonce revelation operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters seed nonce revelation operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/delegations\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get delegations\",\n        \"description\": \"Returns a list of delegation operations.\",\n        \"operationId\": \"Operations_GetDelegations\",\n        \"parameters\": [\n          {\n            \"name\": \"anyof\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by any of the specified fields. Example: `anyof.prevDelegate.newDelegate=tz1...` will return operations where `prevDelegate` OR `newDelegate` is equal to the specified value. This parameter is useful when you need to retrieve all delegations associated with a specified account.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"initiator\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by initiator. Allowed fields for `.eqx` mode: `prevDelegate`, `newDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by sender. Allowed fields for `.eqx` mode: `prevDelegate`, `newDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"prevDelegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by prev delegate. Allowed fields for `.eqx` mode: `initiator`, `sender`, `newDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"newDelegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by new delegate. Allowed fields for `.eqx` mode: `initiator`, `sender`, `prevDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by operation status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegations by specified field. Supported fields: `id` (default), `level`, `gasUsed`, `bakerFee`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 12\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 13\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DelegationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/delegations/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get delegation by hash\",\n        \"description\": \"Returns a delegation operation with specified hash.\",\n        \"operationId\": \"Operations_GetDelegationByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DelegationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/delegations/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get delegations count\",\n        \"description\": \"Returns the total number of delegation operations.\",\n        \"operationId\": \"Operations_GetDelegationsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters delegations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/originations\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get originations\",\n        \"description\": \"Returns a list of origination operations.\",\n        \"operationId\": \"Operations_GetOriginations\",\n        \"parameters\": [\n          {\n            \"name\": \"anyof\",\n            \"in\": \"query\",\n            \"description\": \"Filters originations by any of the specified fields. Example: `anyof.sender.initiator=tz1...` will return operations where `sender` OR `initiator` is equal to the specified value. This parameter is useful when you need to retrieve all originations associated with a specified account.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"initiator\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by initiator. Allowed fields for `.eqx` mode: `contractManager`, `contractDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by sender. Allowed fields for `.eqx` mode: `contractManager`, `contractDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"contractManager\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by manager. Allowed fields for `.eqx` mode: `initiator`, `sender`, `contractDelegate`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"contractDelegate\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by delegate. Allowed fields for `.eqx` mode: `initiator`, `sender`, `contractManager`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"originatedContract\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by originated contract. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"typeHash\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by 32-bit hash of originated contract parameter and storage types (helpful for searching originations of similar contracts)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"codeHash\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by 32-bit hash of originated contract code (helpful for searching originations of same contracts)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters origination operations by operation status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 12\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts originations by specified field. Supported fields: `id` (default), `level`, `gasUsed`, `storageUsed`, `bakerFee`, `storageFee`, `allocationFee`, `contractBalance`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 13\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 14\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 15\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 16\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 17\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OriginationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/originations/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get origination by hash\",\n        \"description\": \"Returns origination operations with specified hash.\",\n        \"operationId\": \"Operations_GetOriginationByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/MichelineFormat\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OriginationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/originations/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get originations count\",\n        \"description\": \"Returns the total number of origination operations.\",\n        \"operationId\": \"Operations_GetOriginationsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters originations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters originations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/transactions\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get transactions\",\n        \"description\": \"Returns a list of transaction operations.\",\n        \"operationId\": \"Operations_GetTransactions\",\n        \"parameters\": [\n          {\n            \"name\": \"anyof\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by any of the specified fields. Example: `anyof.sender.target=tz1...` will return operations where `sender` OR `target` is equal to the specified value. This parameter is useful when you need to retrieve all transactions associated with a specified account.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"initiator\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by initiator. Allowed fields for `.eqx` mode: `target`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by sender. Allowed fields for `.eqx` mode: `target`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"target\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by target. Allowed fields for `.eqx` mode: `sender`, `initiator`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"amount\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by amount (microtez).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by id.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"entrypoint\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by entrypoint called on the target contract.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/StringParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"parameter\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by parameter value. Note, this query parameter supports the following format: `?parameter{.path?}{.mode?}=...`,\\n            so you can specify a path to a particular field to filter by, for example: `?parameter.token_id=...` or `?parameter.sigs.0.ne=...`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/JsonParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"parameters\",\n            \"in\": \"query\",\n            \"description\": \"**DEPRECATED**. Use `entrypoint` and `parameter` instead.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/StringParameter\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          },\n          {\n            \"name\": \"hasInternals\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by presence of internal operations.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BoolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 12\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by operation status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 13\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 14\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts transactions by specified field. Supported fields: `id` (default), `level`, `gasUsed`, `storageUsed`, `bakerFee`, `storageFee`, `allocationFee`, `amount`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 15\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 16\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 17\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 18\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 19\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TransactionOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/transactions/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get transaction by hash\",\n        \"description\": \"Returns transaction operations with specified hash.\",\n        \"operationId\": \"Operations_GetTransactionByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TransactionOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/transactions/{hash}/{counter}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get transaction by hash and counter\",\n        \"description\": \"Returns transaction operations with specified hash and counter.\",\n        \"operationId\": \"Operations_GetTransactionByHashCounter\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"counter\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation counter\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TransactionOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/transactions/{hash}/{counter}/{nonce}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get transaction by hash, counter and nonce\",\n        \"description\": \"Returns an internal transaction operation with specified hash, counter and nonce.\",\n        \"operationId\": \"Operations_GetTransactionByHashCounterNonce\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"counter\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation counter\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"nonce\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation nonce (internal)\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TransactionOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/transactions/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get transactions count\",\n        \"description\": \"Returns the total number of transaction operations.\",\n        \"operationId\": \"Operations_GetTransactionsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters transactions by operation status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/reveals\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get reveals\",\n        \"description\": \"Returns a list of reveal operations.\",\n        \"operationId\": \"Operations_GetReveals\",\n        \"parameters\": [\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters reveal operations by sender. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters reveal operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters reveal operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters reveal operations by operation status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts reveals by specified field. Supported fields: `id` (default), `level`, `gasUsed`, `bakerFee`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RevealOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/reveals/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get reveal by hash\",\n        \"description\": \"Returns reveal operation with specified hash.\",\n        \"operationId\": \"Operations_GetRevealByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RevealOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/reveals/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get reveals count\",\n        \"description\": \"Returns the total number of reveal operations.\",\n        \"operationId\": \"Operations_GetRevealsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters reveals by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters reveals by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/register_constants\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get register constants\",\n        \"description\": \"Returns a list of register global constant operations.\",\n        \"operationId\": \"Operations_GetRegisterConstants\",\n        \"parameters\": [\n          {\n            \"name\": \"sender\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by sender. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"address\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by global address of the created constant (starts with `expr..`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ExpressionParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by status (`applied`, `failed`, `backtracked`, `skipped`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OperationStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts operations by specified field. Supported fields: `id` (default), `level`, `gasUsed`, `storageUsed`, `bakerFee`, `storageFee`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the constant value: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RegisterConstantOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/register_constants/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get register constant by hash\",\n        \"description\": \"Returns register global constant operation with specified hash.\",\n        \"operationId\": \"Operations_GetRegisterConstantByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the constant value: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RegisterConstantOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/register_constants/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get register constants count\",\n        \"description\": \"Returns the total number of register global constant operations.\",\n        \"operationId\": \"Operations_GetRegisterConstantsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/migrations\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get migrations\",\n        \"description\": \"Returns a list of migration operations (synthetic type).\",\n        \"operationId\": \"Operations_GetMigrations\",\n        \"parameters\": [\n          {\n            \"name\": \"account\",\n            \"in\": \"query\",\n            \"description\": \"Filters migration operations by account. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"kind\",\n            \"in\": \"query\",\n            \"description\": \"Filters migration operations by kind (`bootstrap`, `activate_delegate`, `airdrop`, `proposal_invoice`, `origination`, `subsidy`).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MigrationKindParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"balanceChange\",\n            \"in\": \"query\",\n            \"description\": \"Filters migration operations by amount.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int64Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters migration operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters migration operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts migrations by specified field. Supported fields: `id` (default), `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MigrationOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/migrations/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get migration by id\",\n        \"description\": \"Returns migration operation with specified id.\",\n        \"operationId\": \"Operations_GetMigrationById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"micheline\",\n            \"in\": \"query\",\n            \"description\": \"Format of the parameters, storage and diffs: `0` - JSON, `1` - JSON string, `2` - raw micheline, `3` - raw micheline string\",\n            \"schema\": {\n              \"default\": \"Json\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/MichelineFormat\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MigrationOperation\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/migrations/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get migrations count\",\n        \"description\": \"Returns the total number of migration operations (synthetic type).\",\n        \"operationId\": \"Operations_GetMigrationsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters migrations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters migrations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/revelation_penalties\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get revelation penalties\",\n        \"description\": \"Returns a list of revelation penalty operations (synthetic type).\",\n        \"operationId\": \"Operations_GetRevelationPenalties\",\n        \"parameters\": [\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters revelation penalty operations by baker. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters revelation penalty operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters revelation penalty operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts revelation penalty operations by specified field. Supported fields: `id` (default), `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RevelationPenaltyOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/revelation_penalties/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get revelation penalty by id\",\n        \"description\": \"Returns revelation penalty operation with specified id.\",\n        \"operationId\": \"Operations_GetRevelationPenaltyById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RevelationPenaltyOperation\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/revelation_penalties/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get revelation penalties count\",\n        \"description\": \"Returns the total number of revelation penalty operations (synthetic type).\",\n        \"operationId\": \"Operations_GetRevelationPenaltiesCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters revelation penalty operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters revelation penalty operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/baking\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get baking\",\n        \"description\": \"Returns a list of baking operations (synthetic type).\",\n        \"operationId\": \"Operations_GetBaking\",\n        \"parameters\": [\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters baking operations by baker. Allowed fields for `.eqx` mode: none.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters baking operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters baking operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts baking operations by specified field. Supported fields: `id` (default), `level`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BakingOperation\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/baking/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get baking by id\",\n        \"description\": \"Returns baking operation with specified id.\",\n        \"operationId\": \"Operations_GetBakingById\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Operation id\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BakingOperation\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/operations/baking/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Operations\"\n        ],\n        \"summary\": \"Get baking count\",\n        \"description\": \"Returns the total number of baking operations (synthetic type).\",\n        \"operationId\": \"Operations_GetBakingCount\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters baking operations by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters baking operations by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/protocols/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Protocols\"\n        ],\n        \"summary\": \"Get protocols count\",\n        \"description\": \"Returns the total number of protocols.\",\n        \"operationId\": \"Protocols_GetCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/protocols\": {\n      \"get\": {\n        \"tags\": [\n          \"Protocols\"\n        ],\n        \"summary\": \"Get protocols\",\n        \"description\": \"Returns a list of protocols.\",\n        \"operationId\": \"Protocols_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts protocols by specified field. Supported fields: `code` (default), `firstLevel`, `lastLevel`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Protocol\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/protocols/current\": {\n      \"get\": {\n        \"tags\": [\n          \"Protocols\"\n        ],\n        \"summary\": \"Get current protocol\",\n        \"description\": \"Returns current protocol.\",\n        \"operationId\": \"Protocols_GetCurrent\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Protocol\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/protocols/{code}\": {\n      \"get\": {\n        \"tags\": [\n          \"Protocols\"\n        ],\n        \"summary\": \"Get protocol by code\",\n        \"description\": \"Returns a protocol with the specified proto code.\",\n        \"operationId\": \"Protocols_GetByCode\",\n        \"parameters\": [\n          {\n            \"name\": \"code\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Protocol code (e.g. 4 for Athens, 5 for Babylon, etc)\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Protocol\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/protocols/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Protocols\"\n        ],\n        \"summary\": \"Get protocol by hash\",\n        \"description\": \"Returns a protocol with the specified hash.\",\n        \"operationId\": \"Protocols_GetByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Protocol hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Protocol\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/protocols/cycles/{cycle}\": {\n      \"get\": {\n        \"tags\": [\n          \"Protocols\"\n        ],\n        \"summary\": \"Get protocol by cycle\",\n        \"description\": \"Returns a protocol at the specified cycle.\",\n        \"operationId\": \"Protocols_GetByCycle\",\n        \"parameters\": [\n          {\n            \"name\": \"cycle\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Cycle index\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Protocol\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/quotes/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Quotes\"\n        ],\n        \"summary\": \"Get quotes count\",\n        \"description\": \"Returns the total number of quotes aligned with blocks.\",\n        \"operationId\": \"Quotes_GetCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/quotes/last\": {\n      \"get\": {\n        \"tags\": [\n          \"Quotes\"\n        ],\n        \"summary\": \"Get last quote\",\n        \"description\": \"Returns last known quote.\",\n        \"operationId\": \"Quotes_GetLast\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Quote\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/quotes\": {\n      \"get\": {\n        \"tags\": [\n          \"Quotes\"\n        ],\n        \"summary\": \"Get quotes\",\n        \"description\": \"Returns a list of quotes aligned with blocks.\",\n        \"operationId\": \"Quotes_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters quotes by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters quotes by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts quotes by specified field. Supported fields: `level` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Quote\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/bakers/{address}/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get baker cycle rewards count\",\n        \"description\": \"Returns total number of cycles where the baker was active\",\n        \"operationId\": \"Rewards_GetBakerRewardsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Baker address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/bakers/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get baker cycle rewards\",\n        \"description\": \"Returns a list of baker rewards for every cycle, including future cycles.\",\n        \"operationId\": \"Rewards_GetBakerRewards\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Baker address.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"query\",\n            \"description\": \"Filters rewards by cycle.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts cycle rewards by specified field. Supported fields: `cycle` (default, desc).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BakerRewards\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/bakers/{address}/{cycle}\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get baker cycle rewards by cycle\",\n        \"description\": \"Returns baker cycle rewards for the specified cycle.\",\n        \"operationId\": \"Rewards_GetBakerRewardsByCycle\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Baker address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Rewards cycle\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/BakerRewards\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/delegators/{address}/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get delegator cycle rewards count\",\n        \"description\": \"Returns total number of cycles where the delegator was delegated to an active baker\",\n        \"operationId\": \"Rewards_GetDelegatorRewardsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Delegator address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/delegators/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get delegator cycle rewards\",\n        \"description\": \"Returns a list of delegator rewards for every cycle, including future cycles.\",\n        \"operationId\": \"Rewards_GetDelegatorRewards\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Delegator address.\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"query\",\n            \"description\": \"Filters rewards by cycle.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts cycle rewards by specified field. Supported fields: `cycle` (default, desc).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DelegatorRewards\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/delegators/{address}/{cycle}\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get delegator cycle rewards by cycle\",\n        \"description\": \"Returns delegator cycle rewards for the specified cycle.\",\n        \"operationId\": \"Rewards_GetDelegatorRewardsByCycle\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Delegator address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Rewards cycle\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/DelegatorRewards\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/split/{baker}/{cycle}\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get reward split\",\n        \"description\": \"Returns baker rewards for the specified cycle with all delegator balances at that cycle to allow rewards distribution in proportion to shares.\",\n        \"operationId\": \"Rewards_GetRewardSplit\",\n        \"parameters\": [\n          {\n            \"name\": \"baker\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Baker address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Rewards cycle\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies how many delegators in the reward split should be skipped\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 0\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of delegators to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RewardSplit\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rewards/split/{baker}/{cycle}/{delegator}\": {\n      \"get\": {\n        \"tags\": [\n          \"Rewards\"\n        ],\n        \"summary\": \"Get reward split delegator\",\n        \"description\": \"Returns delegator from the reward split for the specified cycle.\",\n        \"operationId\": \"Rewards_GetRewardSplitDelegator\",\n        \"parameters\": [\n          {\n            \"name\": \"baker\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Baker address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Reward split cycle\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"delegator\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Delegator address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SplitDelegator\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rights/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Rights\"\n        ],\n        \"summary\": \"Get rights count\",\n        \"description\": \"Returns the total number of stored rights.\",\n        \"operationId\": \"Rights_GetCount\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by type (`baking`, `endorsing`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BakingRightTypeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by baker\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by cycle\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by level\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"slots\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by slots\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32NullParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"priority\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by priority\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32NullParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by status (`future`, `realized`, `uncovered`, `missed`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BakingRightStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/rights\": {\n      \"get\": {\n        \"tags\": [\n          \"Rights\"\n        ],\n        \"summary\": \"Get rights\",\n        \"description\": \"Returns a list of rights.\",\n        \"operationId\": \"Rights_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by type (`baking`, `endorsing`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BakingRightTypeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"baker\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by baker\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/AccountParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"cycle\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by cycle\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by level\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"slots\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by slots\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32NullParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"priority\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by priority\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32NullParameter\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters rights by status (`future`, `realized`, `uncovered`, `missed`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/BakingRightStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 8\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts rights by specified field. Supported fields: `level` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 9\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 10\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 11\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/BakingRight\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/software\": {\n      \"get\": {\n        \"tags\": [\n          \"Software\"\n        ],\n        \"summary\": \"Get baker software\",\n        \"description\": \"Returns a list of baker software.\",\n        \"operationId\": \"Software_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `firstLevel`, `lastLevel`, `blocksCount`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Software\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/software/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Software\"\n        ],\n        \"summary\": \"Get software count\",\n        \"description\": \"Returns a number of software.\",\n        \"operationId\": \"Software_GetCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/statistics\": {\n      \"get\": {\n        \"tags\": [\n          \"Statistics\"\n        ],\n        \"summary\": \"Get statistics\",\n        \"description\": \"Returns a list of end-of-block statistics.\",\n        \"operationId\": \"Statistics_Get\",\n        \"parameters\": [\n          {\n            \"name\": \"level\",\n            \"in\": \"query\",\n            \"description\": \"Filters statistics by level.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"description\": \"Filters statistics by timestamp.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/TimestampParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `level`, `cycle`, `date`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 7\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Statistics\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/statistics/daily\": {\n      \"get\": {\n        \"tags\": [\n          \"Statistics\"\n        ],\n        \"summary\": \"Get daily statistics\",\n        \"description\": \"Returns a list of end-of-day statistics.\",\n        \"operationId\": \"Statistics_GetDaily\",\n        \"parameters\": [\n          {\n            \"name\": \"date\",\n            \"in\": \"query\",\n            \"description\": \"Filters statistics by date.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/DateTimeParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `level`, `cycle`, `date`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Statistics\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/statistics/cyclic\": {\n      \"get\": {\n        \"tags\": [\n          \"Statistics\"\n        ],\n        \"summary\": \"Get cyclic statistics\",\n        \"description\": \"Returns a list of end-of-cycle statistics.\",\n        \"operationId\": \"Statistics_GetCyclesAll\",\n        \"parameters\": [\n          {\n            \"name\": \"cycle\",\n            \"in\": \"query\",\n            \"description\": \"Filters statistics by cycle.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts delegators by specified field. Supported fields: `id` (default), `level`, `cycle`, `date`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Statistics\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/statistics/current\": {\n      \"get\": {\n        \"tags\": [\n          \"Statistics\"\n        ],\n        \"summary\": \"Get current statistics\",\n        \"description\": \"Returns statistics at the end of a head block.\",\n        \"operationId\": \"Statistics_GetCycles\",\n        \"parameters\": [\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"quote\",\n            \"in\": \"query\",\n            \"description\": \"Comma-separated list of ticker symbols to inject historical prices into response\",\n            \"schema\": {\n              \"default\": \"None\",\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Symbols\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Statistics\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/proposals/count\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get proposals count\",\n        \"description\": \"Returns the total number of protocol proposals.\",\n        \"operationId\": \"Voting_GetProposalsCount\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/proposals\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get proposals\",\n        \"description\": \"Returns a list of protocol proposals.\",\n        \"operationId\": \"Voting_GetProposals\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposals by hash\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/ProtocolParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"epoch\",\n            \"in\": \"query\",\n            \"description\": \"Filters proposals by voting epoch\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Int32Parameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts proposals by specified field. Supported fields: `id` (default), `upvotes`, `rolls`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 5\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 6\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Proposal\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/proposals/{hash}\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get proposal by hash\",\n        \"description\": \"Returns the most recent protocol proposal with the specified hash.\",\n        \"operationId\": \"Voting_GetProposalByHash\",\n        \"parameters\": [\n          {\n            \"name\": \"hash\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Proposal hash\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Proposal\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get voting periods\",\n        \"description\": \"Returns a list of voting periods.\",\n        \"operationId\": \"Voting_GetPeriods\",\n        \"parameters\": [\n          {\n            \"name\": \"select\",\n            \"in\": \"query\",\n            \"description\": \"Specify comma-separated list of fields to include into response or leave it undefined to return full object. If you select single field, response will be an array of values in both `.fields` and `.values` modes.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SelectParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts voting periods by specified field. Supported fields: `id` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VotingPeriod\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods/{index}\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get voting period by index\",\n        \"description\": \"Returns a voting period at the specified index.\",\n        \"operationId\": \"Voting_GetPeriod\",\n        \"parameters\": [\n          {\n            \"name\": \"index\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Voting period index starting from zero\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VotingPeriod\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods/current\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get current voting period\",\n        \"description\": \"Returns current voting period.\",\n        \"operationId\": \"Voting_GetCurrentPeriod\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VotingPeriod\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods/{index}/voters\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get period voters\",\n        \"description\": \"Returns voters from the voting period at the specified index.\",\n        \"operationId\": \"Voting_GetPeriodVoters\",\n        \"parameters\": [\n          {\n            \"name\": \"index\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Voting period index starting from zero\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters voters by status (`none`, `upvoted`, `voted_yay`, `voted_nay`, `voted_pass`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/VoterStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts voters by specified field. Supported fields: `id` (default), `rolls`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 4\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 5\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VoterSnapshot\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods/{index}/voters/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get period voter\",\n        \"description\": \"Returns a voter with the specified address from the voting period at the specified index.\",\n        \"operationId\": \"Voting_GetPeriodVoter\",\n        \"parameters\": [\n          {\n            \"name\": \"index\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Voting period index starting from zero\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Voter address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 2\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VoterSnapshot\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods/current/voters\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get current period voters\",\n        \"description\": \"Returns voters from the current period.\",\n        \"operationId\": \"Voting_GetPeriodVoters2\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Filters voters by status (`none`, `upvoted`, `voted_yay`, `voted_nay`, `voted_pass`)\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/VoterStatusParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts voters by specified field. Supported fields: `id` (default), `rolls`.\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 3\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 4\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VoterSnapshot\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/periods/current/voters/{address}\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get current period voter\",\n        \"description\": \"Returns a voter with the specified address from the current period.\",\n        \"operationId\": \"Voting_GetPeriodVoter2\",\n        \"parameters\": [\n          {\n            \"name\": \"address\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Voter address\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"nullable\": true\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VoterSnapshot\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/epochs\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get voting epochs\",\n        \"description\": \"Returns a list of voting epochs.\",\n        \"operationId\": \"Voting_GetEpochs\",\n        \"parameters\": [\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"Sorts voting epochs by specified field. Supported fields: `id` (default).\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/SortParameter\"\n                }\n              ]\n            },\n            \"x-position\": 1\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"Specifies which or how many items should be skipped\",\n            \"schema\": {\n              \"nullable\": true,\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/OffsetParameter\"\n                }\n              ]\n            },\n            \"x-position\": 2\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"Maximum number of items to return\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 100,\n              \"maximum\": 10000.0,\n              \"minimum\": 0.0\n            },\n            \"x-position\": 3\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/VotingEpoch\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/epochs/{index}\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get voting epoch by index\",\n        \"description\": \"Returns a voting epoch at the specified index.\",\n        \"operationId\": \"Voting_GetEpoch\",\n        \"parameters\": [\n          {\n            \"name\": \"index\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"description\": \"Voting epoch index starting from zero\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            },\n            \"x-position\": 1\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VotingEpoch\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/epochs/current\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get current voting epoch\",\n        \"description\": \"Returns the current voting epoch\",\n        \"operationId\": \"Voting_GetCurrentEpoch\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VotingEpoch\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/v1/voting/epochs/latest_voting\": {\n      \"get\": {\n        \"tags\": [\n          \"Voting\"\n        ],\n        \"summary\": \"Get latest voting\",\n        \"description\": \"Returns the latest epoch with at least one proposal\",\n        \"operationId\": \"Voting_GetLatestVoting\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/VotingEpoch\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Account\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"type\",\n          \"mapping\": {\n            \"user\": \"#/components/schemas/User\",\n            \"delegate\": \"#/components/schemas/Delegate\",\n            \"contract\": \"#/components/schemas/Contract\",\n            \"empty\": \"#/components/schemas/EmptyAccount\"\n          }\n        },\n        \"x-abstract\": true,\n        \"additionalProperties\": false,\n        \"required\": [\n          \"type\"\n        ],\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"User\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Account\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"nullable\": true\n              },\n              \"address\": {\n                \"type\": \"string\",\n                \"description\": \"Public key hash of the account\",\n                \"nullable\": true\n              },\n              \"alias\": {\n                \"type\": \"string\",\n                \"description\": \"Name of the project behind the account or account description\",\n                \"nullable\": true\n              },\n              \"publicKey\": {\n                \"type\": \"string\",\n                \"description\": \"Base58 representation of account's public key, revealed by the account\",\n                \"nullable\": true\n              },\n              \"revealed\": {\n                \"type\": \"boolean\",\n                \"description\": \"Public key revelation status. Unrevealed account can't send manager operation (transaction, origination etc.)\"\n              },\n              \"balance\": {\n                \"type\": \"integer\",\n                \"description\": \"Account balance\",\n                \"format\": \"int64\"\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"delegate\": {\n                \"description\": \"Information about the current delegate of the account. `null` if it's not delegated\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/DelegateInfo\"\n                  }\n                ]\n              },\n              \"delegationLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height of latest delegation. `null` if it's not delegated\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"delegationTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime of latest delegation (ISO 8601, e.g. `2020-02-20T02:40:57Z`). `null` if it's not delegated\",\n                \"format\": \"date-time\",\n                \"nullable\": true\n              },\n              \"numContracts\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of contracts, created (originated) and/or managed by the contract\",\n                \"format\": \"int32\"\n              },\n              \"numActivations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of account activation operations. Are used to activate accounts that were recommended allocations of\\ntezos tokens for donations to the Tezos Foundation’s fundraiser\",\n                \"format\": \"int32\"\n              },\n              \"numDelegations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of delegation operations, related to the account\",\n                \"format\": \"int32\"\n              },\n              \"numOriginations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of all origination (deployment / contract creation) operations, related to the account\",\n                \"format\": \"int32\"\n              },\n              \"numTransactions\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of all transaction (tez transfer) operations, related to the account\",\n                \"format\": \"int32\"\n              },\n              \"numReveals\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of reveal (is used to reveal the public key associated with an account) operations of the contract\",\n                \"format\": \"int32\"\n              },\n              \"numRegisterConstants\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of register global constant operations of the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numMigrations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of migration (result of the context (database) migration during a protocol update) operations,\\nrelated to the account (synthetic type) \",\n                \"format\": \"int32\"\n              },\n              \"firstActivity\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height of the first operation, related to the account\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"firstActivityTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime of the first operation, related to the account (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\",\n                \"nullable\": true\n              },\n              \"lastActivity\": {\n                \"type\": \"integer\",\n                \"description\": \"Height of the block in which the account state was changed last time\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"lastActivityTime\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block in which the account state was changed last time (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\",\n                \"nullable\": true\n              },\n              \"metadata\": {\n                \"description\": \"Metadata of the account (alias, logo, website, contacts, etc)\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/AccountMetadata\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"DelegateInfo\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the baking service\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the delegate (baker)\",\n            \"nullable\": true\n          },\n          \"active\": {\n            \"type\": \"boolean\",\n            \"description\": \"Delegation status (`true` - active, `false` - deactivated)\"\n          }\n        }\n      },\n      \"AccountMetadata\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"alias\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"description\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"site\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"support\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"twitter\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"telegram\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"discord\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"reddit\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"slack\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"github\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"gitlab\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"instagram\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"facebook\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          },\n          \"medium\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Delegate\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Account\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the account, `delegate` - account, registered as a delegate (baker)\",\n                \"nullable\": true\n              },\n              \"address\": {\n                \"type\": \"string\",\n                \"description\": \"Public key hash of the delegate (baker)\",\n                \"nullable\": true\n              },\n              \"active\": {\n                \"type\": \"boolean\",\n                \"description\": \"Delegation status (`true` - active, `false` - deactivated)\"\n              },\n              \"alias\": {\n                \"type\": \"string\",\n                \"description\": \"Name of the baking service\",\n                \"nullable\": true\n              },\n              \"publicKey\": {\n                \"type\": \"string\",\n                \"description\": \"Public key of the delegate (baker)\",\n                \"nullable\": true\n              },\n              \"revealed\": {\n                \"type\": \"boolean\",\n                \"description\": \"Public key revelation status. Unrevealed account can't send manager operation (transaction, origination etc.)\"\n              },\n              \"balance\": {\n                \"type\": \"integer\",\n                \"description\": \"Total balance of the delegate (baker), including spendable and frozen funds (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"frozenDeposits\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of security deposit, currently locked for baked (produced) blocks and (or) given endorsements (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"frozenRewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of currently frozen baking rewards (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"frozenFees\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of currently frozen fees paid by operations inside blocks, baked (produced) by the delegate (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"activationLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height when delegate (baker) was registered as a baker last time\",\n                \"format\": \"int32\"\n              },\n              \"activationTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime when delegate (baker) was registered as a baker last time (ISO 8601, e.g. 2019-11-31)\",\n                \"format\": \"date-time\"\n              },\n              \"deactivationLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height when delegate (baker) was deactivated as a baker because of lack of funds or inactivity\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"deactivationTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime when delegate (baker) was deactivated as a baker because of lack of funds or inactivity (ISO 8601, e.g. 2019-11-31)\",\n                \"format\": \"date-time\",\n                \"nullable\": true\n              },\n              \"stakingBalance\": {\n                \"type\": \"integer\",\n                \"description\": \"Sum of delegate (baker) balance and delegated funds minus frozen rewards (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"numContracts\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of contracts, created (originated) and/or managed by the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numDelegators\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of current delegators (accounts, delegated their funds) of the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numBlocks\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of baked (validated) blocks all the time by the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numEndorsements\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of given endorsements (approvals) by the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numBallots\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of submitted by the delegate ballots during a voting period\",\n                \"format\": \"int32\"\n              },\n              \"numProposals\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of submitted (upvoted) by the delegate proposals during a proposal period\",\n                \"format\": \"int32\"\n              },\n              \"numActivations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of account activation operations. Are used to activate accounts that were recommended allocations of\\ntezos tokens for donations to the Tezos Foundation’s fundraiser\",\n                \"format\": \"int32\"\n              },\n              \"numDoubleBaking\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of double baking (baking two different blocks at the same height) evidence operations,\\nincluded in blocks, baked (validated) by the delegate\",\n                \"format\": \"int32\"\n              },\n              \"numDoubleEndorsing\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of double endorsement (endorsing two different blocks at the same block height) evidence operations,\\nincluded in blocks, baked (validated) by the delegate\",\n                \"format\": \"int32\"\n              },\n              \"numNonceRevelations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of seed nonce revelation (are used by the blockchain to create randomness) operations provided by the delegate\",\n                \"format\": \"int32\"\n              },\n              \"numRevelationPenalties\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of operations for all time in which rewards were lost due to unrevealed seed nonces by the delegate (synthetic type)\",\n                \"format\": \"int32\"\n              },\n              \"numDelegations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of all delegation related operations (new delegator, left delegator, registration as a baker),\\nrelated to the delegate (baker) \",\n                \"format\": \"int32\"\n              },\n              \"numOriginations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of all origination (deployment / contract creation) operations, related to the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numTransactions\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of all transaction (tez transfer) operations, related to the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numReveals\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of reveal (is used to reveal the public key associated with an account) operations of the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numRegisterConstants\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of register global constant operations of the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"numMigrations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of migration (result of the context (database) migration during a protocol update) operations,\\nrelated to the delegate (synthetic type) \",\n                \"format\": \"int32\"\n              },\n              \"firstActivity\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height of the first operation, related to the delegate (baker)\",\n                \"format\": \"int32\"\n              },\n              \"firstActivityTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime of the first operation, related to the delegate (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"lastActivity\": {\n                \"type\": \"integer\",\n                \"description\": \"Height of the block in which the account state was changed last time\",\n                \"format\": \"int32\"\n              },\n              \"lastActivityTime\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block in which the account state was changed last time (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"metadata\": {\n                \"description\": \"Metadata of the delegate (alias, logo, website, contacts, etc)\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/AccountMetadata\"\n                  }\n                ]\n              },\n              \"software\": {\n                \"description\": \"Last seen baker's software\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/SoftwareAlias\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"SoftwareAlias\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"Software version (commit tag)\",\n            \"nullable\": true\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"description\": \"Date of the commit or when the software was first seen\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Contract\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Account\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the account, `contract` - smart contract programmable account\",\n                \"nullable\": true\n              },\n              \"address\": {\n                \"type\": \"string\",\n                \"description\": \"Public key hash of the contract\",\n                \"nullable\": true\n              },\n              \"kind\": {\n                \"type\": \"string\",\n                \"description\": \"Kind of the contract (`delegator_contract` or `smart_contract`),\\nwhere `delegator_contract` - manager.tz smart contract for delegation purpose only\",\n                \"nullable\": true\n              },\n              \"tzips\": {\n                \"type\": \"array\",\n                \"description\": \"List of implemented standards (TZIPs)\",\n                \"nullable\": true,\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"alias\": {\n                \"type\": \"string\",\n                \"description\": \"Name of the project behind the contract or contract description\",\n                \"nullable\": true\n              },\n              \"balance\": {\n                \"type\": \"integer\",\n                \"description\": \"Contract balance (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"creator\": {\n                \"description\": \"Information about the account, which has deployed the contract to the blockchain\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/CreatorInfo\"\n                  }\n                ]\n              },\n              \"manager\": {\n                \"description\": \"Information about the account, which was marked as a manager when contract was deployed to the blockchain\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ManagerInfo\"\n                  }\n                ]\n              },\n              \"delegate\": {\n                \"description\": \"Information about the current delegate of the contract. `null` if it's not delegated\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/DelegateInfo\"\n                  }\n                ]\n              },\n              \"delegationLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height of latest delegation. `null` if it's not delegated\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"delegationTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime of latest delegation (ISO 8601, e.g. `2020-02-20T02:40:57Z`). `null` if it's not delegated\",\n                \"format\": \"date-time\",\n                \"nullable\": true\n              },\n              \"numContracts\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of contracts, created (originated) and/or managed by the contract\",\n                \"format\": \"int32\"\n              },\n              \"numDelegations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of delegation operations of the contract\",\n                \"format\": \"int32\"\n              },\n              \"numOriginations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of origination (deployment / contract creation) operations, related the contract\",\n                \"format\": \"int32\"\n              },\n              \"numTransactions\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of transaction (transfer) operations, related to the contract\",\n                \"format\": \"int32\"\n              },\n              \"numReveals\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of reveal (is used to reveal the public key associated with an account) operations of the contract\",\n                \"format\": \"int32\"\n              },\n              \"numMigrations\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of migration (result of the context (database) migration during a protocol update) operations\\nrelated to the contract (synthetic type)\",\n                \"format\": \"int32\"\n              },\n              \"firstActivity\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height of the contract creation\",\n                \"format\": \"int32\"\n              },\n              \"firstActivityTime\": {\n                \"type\": \"string\",\n                \"description\": \"Block datetime of the contract creation (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"lastActivity\": {\n                \"type\": \"integer\",\n                \"description\": \"Height of the block in which the account state was changed last time\",\n                \"format\": \"int32\"\n              },\n              \"lastActivityTime\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block in which the account state was changed last time (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"storage\": {\n                \"description\": \"Contract storage value. Omitted by default. Use `?includeStorage=true` to include it in response.\",\n                \"nullable\": true\n              },\n              \"typeHash\": {\n                \"type\": \"integer\",\n                \"description\": \"32-bit hash of the contract parameter and storage types.\\nThis field can be used for searching similar contracts (which have the same interface).\",\n                \"format\": \"int32\"\n              },\n              \"codeHash\": {\n                \"type\": \"integer\",\n                \"description\": \"32-bit hash of the contract code.\\nThis field can be used for searching same contracts (which have the same script).\",\n                \"format\": \"int32\"\n              },\n              \"metadata\": {\n                \"description\": \"Metadata of the contract (alias, logo, website, contacts, etc)\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/AccountMetadata\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"CreatorInfo\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the project behind the account or account description\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the account\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"ManagerInfo\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the project behind the account or account description\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the account\",\n            \"nullable\": true\n          },\n          \"publicKey\": {\n            \"type\": \"string\",\n            \"description\": \"Base58 representation of account's public key, revealed by the account\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"EmptyAccount\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Account\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the account, `empty` - account hasn't appeared in the blockchain yet\",\n                \"nullable\": true\n              },\n              \"address\": {\n                \"type\": \"string\",\n                \"description\": \"Public key hash of the account\",\n                \"nullable\": true\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              }\n            }\n          }\n        ]\n      },\n      \"AccountTypeParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify an account type to get items where the specified field is equal to the specified value.\\n\\nExample: `?type=delegate`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify an account type to get items where the specified field is not equal to the specified value.\\n\\nExample: `?type.ne=contract`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"ContractKindParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a contract kind to get items where the specified field is equal to the specified value.\\n\\nExample: `?kind=smart_contract`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a contract kind to get items where the specified field is not equal to the specified value.\\n\\nExample: `?kind.ne=delegator_contract`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of contract kinds to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?kind.in=smart_contract,asset`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of contract kinds to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?kind.ni=smart_contract,asset`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"AccountParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a `tz` or `KT` address to get items where the specified field is equal to the specified value.\\n\\nExample: `?sender=tz1WnfXMPaNTBmH7DBPwqCWs9cPDJdkGBTZ8`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a `tz` or `KT` address to get items where the specified field is not equal to the specified value.\\n\\nExample: `?sender.ne=tz1WnfXMPaNTBmH7DBPwqCWs9cPDJdkGBTZ8`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of addresses to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?sender.in=tz1WnfXMPaNTB,tz1SiPXX4MYGNJND`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of addresses to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?sender.ni=tz1WnfXMPaNTB,tz1SiPXX4MYGNJND`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"eqx\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal to another field** filter mode. \\\\\\nSpecify a field name to get items where the specified fields are equal.\\n\\nExample: `?sender.eqx=target`.\",\n            \"nullable\": true\n          },\n          \"nex\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal to another field** filter mode. \\\\\\nSpecify a field name to get items where the specified fields are not equal.\\n\\nExample: `?sender.nex=initiator`.\",\n            \"nullable\": true\n          },\n          \"null\": {\n            \"type\": \"boolean\",\n            \"description\": \"**Is null** filter mode. \\\\\\nUse this mode to get items where the specified field is null or not.\\n\\nExample: `?initiator.null` or `?initiator.null=false`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Int64Parameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"integer\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify an integer number to get items where the specified field is equal to the specified value.\\n\\nExample: `?balance=1234`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"integer\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is not equal to the specified value.\\n\\nExample: `?balance.ne=1234`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          },\n          \"gt\": {\n            \"type\": \"integer\",\n            \"description\": \"**Greater than** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is greater than the specified value.\\n\\nExample: `?balance.gt=1234`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          },\n          \"ge\": {\n            \"type\": \"integer\",\n            \"description\": \"**Greater or equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is greater than equal to the specified value.\\n\\nExample: `?balance.ge=1234`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          },\n          \"lt\": {\n            \"type\": \"integer\",\n            \"description\": \"**Less than** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is less than the specified value.\\n\\nExample: `?balance.lt=1234`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          },\n          \"le\": {\n            \"type\": \"integer\",\n            \"description\": \"**Less or equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is less than or equal to the specified value.\\n\\nExample: `?balance.le=1234`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of integers to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?level.in=12,14,52,69`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of integers to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?level.ni=12,14,52,69`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        }\n      },\n      \"BoolParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"boolean\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=true` is the same as `param=true`). \\\\\\nSpecify a bool flag to get items where the specified field is equal to the specified value.\\n\\nExample: `?active=true` or `?active=1` or `?active`.\",\n            \"nullable\": true\n          },\n          \"null\": {\n            \"type\": \"boolean\",\n            \"description\": \"**Is null** filter mode. \\\\\\nUse this mode to get items where the specified field is null or not.\\n\\nExample: `?active.null` or `?active.null=false`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Int32Parameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"integer\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify an integer number to get items where the specified field is equal to the specified value.\\n\\nExample: `?balance=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"integer\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is not equal to the specified value.\\n\\nExample: `?balance.ne=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"gt\": {\n            \"type\": \"integer\",\n            \"description\": \"**Greater than** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is greater than the specified value.\\n\\nExample: `?balance.gt=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"ge\": {\n            \"type\": \"integer\",\n            \"description\": \"**Greater or equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is greater than equal to the specified value.\\n\\nExample: `?balance.ge=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"lt\": {\n            \"type\": \"integer\",\n            \"description\": \"**Less than** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is less than the specified value.\\n\\nExample: `?balance.lt=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"le\": {\n            \"type\": \"integer\",\n            \"description\": \"**Less or equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is less than or equal to the specified value.\\n\\nExample: `?balance.le=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of integers to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?level.in=12,14,52,69`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of integers to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?level.ni=12,14,52,69`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        }\n      },\n      \"SelectParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"fields\": {\n            \"type\": \"array\",\n            \"description\": \"**Fields** selection mode (optional, i.e. `select.fields=balance` is the same as `select=balance`). \\\\\\nSpecify a comma-separated list of fields to include into response.\\n\\nExample: `?select=address,balance` =\u0026gt; `[ { \\\"address\\\": \\\"asd\\\", \\\"balance\\\": 10 } ]`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"values\": {\n            \"type\": \"array\",\n            \"description\": \"**Values** selection mode. \\\\\\nSpecify a comma-separated list of fields to include their values into response.\\n\\nExample: `?select.values=address,balance` =\u0026gt; `[ [ \\\"asd\\\", 10 ] ]`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"SortParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"asc\": {\n            \"type\": \"string\",\n            \"description\": \"**Ascending** sort mode (optional, i.e. `sort.asc=id` is the same as `sort=id`). \\\\\\nSpecify a field name to sort by.\\n\\nExample: `?sort=balance`.\",\n            \"nullable\": true\n          },\n          \"desc\": {\n            \"type\": \"string\",\n            \"description\": \"**Descending** sort mode. \\\\\\nSpecify a field name to sort by descending.\\n\\nExample: `?sort.desc=id`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"OffsetParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"el\": {\n            \"type\": \"integer\",\n            \"description\": \"**Elements** offset mode (optional, i.e. `offset.el=123` is the same as `offset=123`). \\\\\\nSkips specified number of elements.\\n\\nExample: `?offset=100`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"pg\": {\n            \"type\": \"integer\",\n            \"description\": \"**Page** offset mode. \\\\\\nSkips `page * limit` elements. This is a classic pagination.\\n\\nExample: `?offset.pg=1`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"cr\": {\n            \"type\": \"integer\",\n            \"description\": \"**Cursor** offset mode. \\\\\\nSkips all elements with the `cursor` before (including) the specified value. Cursor is a field used for sorting, e.g. `id`.\\nAvoid using this offset mode with non-unique or non-sequential cursors such as `amount`, `balance`, etc.\\n\\nExample: `?offset.cr=45837`.\",\n            \"format\": \"int64\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"RelatedContract\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\",\n            \"description\": \"Kind of the contract (`delegator_contract` or `smart_contract`),\\nwhere `delegator_contract` - manager.tz smart contract for delegation purpose only\",\n            \"nullable\": true\n          },\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the project behind the contract or contract description\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the contract\",\n            \"nullable\": true\n          },\n          \"balance\": {\n            \"type\": \"integer\",\n            \"description\": \"Contract balance (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"delegate\": {\n            \"description\": \"Information about the current delegate of the contract. `null` if it's not delegated\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/DelegateInfo\"\n              }\n            ]\n          },\n          \"creationLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Height of the block where the contract was created\",\n            \"format\": \"int32\"\n          },\n          \"creationTime\": {\n            \"type\": \"string\",\n            \"description\": \"Datetime of the block where the contract was created (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Delegator\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Delegator type ('contract' for KT.. address or 'user' for tz.. address)\",\n            \"nullable\": true\n          },\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the project behind the account or account description\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the account\",\n            \"nullable\": true\n          },\n          \"balance\": {\n            \"type\": \"integer\",\n            \"description\": \"Account balance (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"delegationLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Block height of last delegation operation\",\n            \"format\": \"int32\"\n          },\n          \"delegationTime\": {\n            \"type\": \"string\",\n            \"description\": \"Block datetime of last delegation operation (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"Operation\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"type\",\n          \"mapping\": {\n            \"endorsement\": \"#/components/schemas/EndorsementOperation\",\n            \"ballot\": \"#/components/schemas/BallotOperation\",\n            \"proposal\": \"#/components/schemas/ProposalOperation\",\n            \"activation\": \"#/components/schemas/ActivationOperation\",\n            \"double_baking\": \"#/components/schemas/DoubleBakingOperation\",\n            \"double_endorsing\": \"#/components/schemas/DoubleEndorsingOperation\",\n            \"nonce_revelation\": \"#/components/schemas/NonceRevelationOperation\",\n            \"delegation\": \"#/components/schemas/DelegationOperation\",\n            \"origination\": \"#/components/schemas/OriginationOperation\",\n            \"transaction\": \"#/components/schemas/TransactionOperation\",\n            \"reveal\": \"#/components/schemas/RevealOperation\",\n            \"migration\": \"#/components/schemas/MigrationOperation\",\n            \"revelation_penalty\": \"#/components/schemas/RevelationPenaltyOperation\",\n            \"baking\": \"#/components/schemas/BakingOperation\",\n            \"RegisterConstantOperation\": \"#/components/schemas/RegisterConstantOperation\"\n          }\n        },\n        \"x-abstract\": true,\n        \"additionalProperties\": false,\n        \"required\": [\n          \"type\"\n        ],\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"EndorsementOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `endorsement` - is operation, which specifies the head of the chain as seen by the endorser of a given slot.\\nThe endorser is randomly selected to be included in the block that extends the head of the chain as specified in this operation.\\nA block with more endorsements improves the weight of the chain and increases the likelihood of that chain being the canonical one.\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"delegate\": {\n                \"description\": \"Information about the baker (delegate) who sent the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"slots\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of assigned endorsement slots (out of 32) to the baker (delegate) who sent the operation\",\n                \"format\": \"int32\"\n              },\n              \"deposit\": {\n                \"type\": \"integer\",\n                \"description\": \"Security deposit frozen on the baker's account\",\n                \"format\": \"int64\"\n              },\n              \"rewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Reward of the baker (delegate) for the operation\",\n                \"format\": \"int64\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"Alias\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the project behind the account or account description\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the account\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"QuoteShort\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"btc\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/BTC price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"eur\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/EUR price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"usd\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/USD price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"cny\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/CNY price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"jpy\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/JPY price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"krw\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/KRW price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"eth\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/ETH price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"gbp\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/GBP price\",\n            \"format\": \"double\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"BallotOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `ballot` - is used to vote for a proposal in a given voting cycle\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"period\": {\n                \"description\": \"Information about the voting period for which the ballot was submitted\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/PeriodInfo\"\n                  }\n                ]\n              },\n              \"proposal\": {\n                \"description\": \"Information about the proposal for which ballot was submitted\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ProposalAlias\"\n                  }\n                ]\n              },\n              \"delegate\": {\n                \"description\": \"Information about the delegate (baker), submitted the ballot\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"rolls\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of baker's rolls (baker's voting power)\",\n                \"format\": \"int32\"\n              },\n              \"vote\": {\n                \"type\": \"string\",\n                \"description\": \"Vote, given in the ballot (`yay`, `nay`, or `pass`)\",\n                \"nullable\": true\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"PeriodInfo\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"index\": {\n            \"type\": \"integer\",\n            \"description\": \"Voting period index, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"epoch\": {\n            \"type\": \"integer\",\n            \"description\": \"Voting epoch index, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"kind\": {\n            \"type\": \"string\",\n            \"description\": \"Kind of the voting period\\n`proposal` - delegates can submit protocol amendment proposals using the proposal operation\\n`exploration` -  bakers (delegates) may vote on the top-ranked proposal from the previous Proposal Period using the ballot operation\\n`testing` - If the proposal is approved in the Exploration Period, the testing (or 'cooldown') period begins and bakers start testing the new protocol\\n`promotion` - delegates can cast one vote to promote or not the tested proposal using the ballot operation\\n`adoption` - after the proposal is actually accepted, the ecosystem has some time to prepare to the upgrade\\nLearn more: https://tezos.gitlab.io/whitedoc/voting.html\",\n            \"nullable\": true\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block in which the period starts\",\n            \"format\": \"int32\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block in which the period ends\",\n            \"format\": \"int32\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"**DEPRECATED**. Use `index` instead.\",\n            \"format\": \"int32\"\n          },\n          \"startLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"**DEPRECATED**. Use `firstLevel` instead.\",\n            \"format\": \"int32\"\n          },\n          \"endLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"**DEPRECATED**. Use `lastLevel` instead.\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"ProposalAlias\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Alias of the proposal\",\n            \"nullable\": true\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Hash of the proposal, which representing a tarball of concatenated .ml/.mli source files\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"ProposalOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `proposal` - is used by bakers (delegates) to submit and/or upvote proposals to amend the protocol\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"period\": {\n                \"description\": \"Information about the proposal period for which the proposal was submitted (upvoted)\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/PeriodInfo\"\n                  }\n                ]\n              },\n              \"proposal\": {\n                \"description\": \"Information about the submitted (upvoted) proposal\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/ProposalAlias\"\n                  }\n                ]\n              },\n              \"delegate\": {\n                \"description\": \"Information about the baker (delegate), submitted (upvoted) the proposal operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"rolls\": {\n                \"type\": \"integer\",\n                \"description\": \"Number of baker's rolls (baker's voting power)\",\n                \"format\": \"int32\"\n              },\n              \"duplicated\": {\n                \"type\": \"boolean\",\n                \"description\": \"Indicates whether proposal upvote has already been pushed. Duplicated proposal operations are not counted when selecting proposal-winner.\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"ActivationOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `activation` - is used to activate accounts that were recommended allocations of\\ntezos tokens for donations to the Tezos Foundation’s fundraiser.\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block, from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"account\": {\n                \"description\": \"Information about activated account\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"balance\": {\n                \"type\": \"integer\",\n                \"description\": \"Account activation balance of tezos tokens that were recommended allocations for donations to the Tezos Foundation’s fundraiser\",\n                \"format\": \"int64\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"DoubleBakingOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `double_baking` - is used by bakers to provide evidence of double baking (baking two different blocks at the same height) by a baker\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"accusedLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, which was double baked\",\n                \"format\": \"int32\"\n              },\n              \"accuser\": {\n                \"description\": \"Information about the baker (delegate), produced the block, in which the operation was included\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"accuserRewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Reward of the baker (delegate), produced the block, in which the operation was included\",\n                \"format\": \"int64\"\n              },\n              \"offender\": {\n                \"description\": \"Information about the baker (delegate), accused for producing two different blocks at the same height\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"offenderLostDeposits\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of frozen security deposit, lost by accused baker (delegate)\",\n                \"format\": \"int64\"\n              },\n              \"offenderLostRewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of frozen rewards, lost by accused baker (delegate)\",\n                \"format\": \"int64\"\n              },\n              \"offenderLostFees\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of frozen fees, lost by accused baker (delegate)\",\n                \"format\": \"int64\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"DoubleEndorsingOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `double_endorsing` - is used by bakers to provide evidence of double endorsement\\n(endorsing two different blocks at the same block height) by a baker\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"accusedLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, at which double endorsing occurred \",\n                \"format\": \"int32\"\n              },\n              \"accuser\": {\n                \"description\": \"Information about the baker (delegate), produced the block, in which the operation was included\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"accuserRewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Reward of the baker (delegate), produced the block, in which the operation was included\",\n                \"format\": \"int64\"\n              },\n              \"offender\": {\n                \"description\": \"Information about the baker (delegate), accused for producing two different endorsements at the same height\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"offenderLostDeposits\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of frozen security deposit, lost by accused baker (delegate)\",\n                \"format\": \"int64\"\n              },\n              \"offenderLostRewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of frozen rewards, lost by accused baker (delegate)\",\n                \"format\": \"int64\"\n              },\n              \"offenderLostFees\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of frozen fees, lost by accused baker (delegate)\",\n                \"format\": \"int64\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"NonceRevelationOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `nonce_revelation` - are used by the blockchain to create randomness\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"baker\": {\n                \"description\": \"Information about the delegate (baker), who produced the block with the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"bakerRewards\": {\n                \"type\": \"integer\",\n                \"description\": \"Reward amount paid to baker, included this operation into a block\",\n                \"format\": \"int64\"\n              },\n              \"sender\": {\n                \"description\": \"Information about the delegate (baker), who revealed the nonce (sent the operation)\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"revealedLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"Block height of the block, where seed nonce hash is stored\",\n                \"format\": \"int32\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"DelegationOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `delegation` -  is used to delegate funds to a delegate (an implicit account registered as a baker)\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"initiator\": {\n                \"description\": \"Information about the initiator of the delegation contract call\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"sender\": {\n                \"description\": \"Information about the delegated account\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"nonce\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent internal operation replay\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"gasLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of gas a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"gasUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of gas, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"bakerFee\": {\n                \"type\": \"integer\",\n                \"description\": \"Fee to a baker, produced block, in which the operation was included\",\n                \"format\": \"int64\"\n              },\n              \"amount\": {\n                \"type\": \"integer\",\n                \"description\": \"Sender's balance at the time of delegation operation (aka delegation amount).\",\n                \"format\": \"int64\"\n              },\n              \"prevDelegate\": {\n                \"description\": \"Information about the previous delegate of the account. `null` if there is no previous delegate\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"newDelegate\": {\n                \"description\": \"Information about the delegate to which the operation was sent. `null` if there is no new delegate (an undelegation operation)\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Operation status (`applied` - an operation applied by the node and successfully added to the blockchain,\\n`failed` - an operation which failed with some particular error (not enough balance, gas limit, etc),\\n`backtracked` - an operation which was successful but reverted due to one of the following operations in the same operation group was failed,\\n`skipped` - all operations after the failed one in an operation group)\",\n                \"nullable\": true\n              },\n              \"errors\": {\n                \"type\": \"array\",\n                \"description\": \"List of errors provided by the node, injected the operation to the blockchain. `null` if there is no errors\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/OperationError\"\n                }\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"OperationError\": {\n        \"type\": \"object\",\n        \"discriminator\": {\n          \"propertyName\": \"type\",\n          \"mapping\": {\n            \"error.id\": \"#/components/schemas/BaseOperationError\",\n            \"contract.balance_too_low\": \"#/components/schemas/BalanceTooLowError\",\n            \"contract.non_existing_contract\": \"#/components/schemas/NonExistingContractError\",\n            \"contract.manager.unregistered_delegate\": \"#/components/schemas/UnregisteredDelegateError\",\n            \"Expression_already_registered\": \"#/components/schemas/ExpressionAlreadyRegisteredError\"\n          }\n        },\n        \"x-abstract\": true,\n        \"additionalProperties\": false,\n        \"required\": [\n          \"type\"\n        ],\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"BaseOperationError\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/OperationError\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of an error\\nhttps://tezos.gitlab.io/api/errors.html - full list of errors\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"BalanceTooLowError\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/OperationError\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of an error, `contract.balance_too_low` - an operation tried to spend more then the contract has\\nhttps://tezos.gitlab.io/api/errors.html - full list of errors\",\n                \"nullable\": true\n              },\n              \"balance\": {\n                \"type\": \"integer\",\n                \"description\": \"Balance of the contract\",\n                \"format\": \"int64\"\n              },\n              \"required\": {\n                \"type\": \"integer\",\n                \"description\": \"Required balance to send the operation\",\n                \"format\": \"int64\"\n              }\n            }\n          }\n        ]\n      },\n      \"NonExistingContractError\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/OperationError\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of an error, `contract.non_existing_contract` - the operation was sent to non-existent contract\\nhttps://tezos.gitlab.io/api/errors.html - full list of errors\",\n                \"nullable\": true\n              },\n              \"contract\": {\n                \"type\": \"string\",\n                \"description\": \"Public key hash of the account to which in the operation tried to send to\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"UnregisteredDelegateError\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/OperationError\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of an error, `contract.manager.unregistered_delegate` - an operation of delegation was sent to an account,\\nnot registered as a delegate (baker)\\nhttps://tezos.gitlab.io/api/errors.html - full list of errors\",\n                \"nullable\": true\n              },\n              \"delegate\": {\n                \"type\": \"string\",\n                \"description\": \"Public key hash of the account to which in the operation tried to delegate to\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"ExpressionAlreadyRegisteredError\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/OperationError\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of an error, `Expression_already_registered` - an operation tried to register\\nan already existing global consant\\nhttps://tezos.gitlab.io/api/errors.html - full list of errors\",\n                \"nullable\": true\n              },\n              \"expression\": {\n                \"type\": \"string\",\n                \"description\": \"Global address of the constant\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"OriginationOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `origination` - deployment / contract creation operation.\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"initiator\": {\n                \"description\": \"Information about the initiator of the contract call\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"sender\": {\n                \"description\": \"Information about the account, created a contract\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"nonce\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent internal operation replay\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"gasLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of gas a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"gasUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of gas, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"storageLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of storage a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"storageUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of storage, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"bakerFee\": {\n                \"type\": \"integer\",\n                \"description\": \"Fee to the baker, produced block, in which the operation was included (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"storageFee\": {\n                \"type\": \"integer\",\n                \"description\": \"The amount of funds burned from the sender account for contract storage in the blockchain (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"allocationFee\": {\n                \"type\": \"integer\",\n                \"description\": \"The amount of funds burned from the sender account for contract account creation (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"contractBalance\": {\n                \"type\": \"integer\",\n                \"description\": \"The contract origination balance (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"contractManager\": {\n                \"description\": \"Information about the account, which was marked as a manager in the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"contractDelegate\": {\n                \"description\": \"Information about the baker (delegate), which was marked as a delegate in the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"code\": {\n                \"description\": \"Contract code. Note: you can configure code format by setting `micheline` query parameter (`0 | 2` - raw micheline, `1 | 3` - raw micheline string).\",\n                \"nullable\": true\n              },\n              \"storage\": {\n                \"description\": \"Initial contract storage value converted to human-readable JSON. Note: you can configure storage format by setting `micheline` query parameter.\",\n                \"nullable\": true\n              },\n              \"diffs\": {\n                \"type\": \"array\",\n                \"description\": \"List of bigmap updates (aka big_map_diffs) caused by the origination.\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/BigMapDiff\"\n                }\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Operation status (`applied` - an operation applied by the node and successfully added to the blockchain,\\n`failed` - an operation which failed with some particular error (not enough balance, gas limit, etc),\\n`backtracked` - an operation which was a successful but reverted due to one of the following operations in the same operation group was failed,\\n`skipped` - all operations after the failed one in an operation group)\",\n                \"nullable\": true\n              },\n              \"errors\": {\n                \"type\": \"array\",\n                \"description\": \"List of errors provided by the node, injected the operation to the blockchain. `null` if there is no errors\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/OperationError\"\n                }\n              },\n              \"originatedContract\": {\n                \"description\": \"Information about the originated ( deployed / created ) contract\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/OriginatedContract\"\n                  }\n                ]\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"BigMapDiff\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"bigmap\": {\n            \"type\": \"integer\",\n            \"description\": \"Bigmap Id\",\n            \"format\": \"int32\"\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"Path to the bigmap in the contract storage\",\n            \"nullable\": true\n          },\n          \"action\": {\n            \"type\": \"string\",\n            \"description\": \"Action with the bigmap (`allocate`, `add_key`, `update_key`, `remove_key`, `remove`)\",\n            \"nullable\": true\n          },\n          \"content\": {\n            \"description\": \"Affected key.\\nIf the action is `allocate` or `remove` the key will be `null`.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/BigMapKeyShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"BigMapKeyShort\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Key hash\",\n            \"nullable\": true\n          },\n          \"key\": {\n            \"description\": \"Key in JSON or Micheline format, depending on the `micheline` query parameter.\",\n            \"nullable\": true\n          },\n          \"value\": {\n            \"description\": \"Value in JSON or Micheline format, depending on the `micheline` query parameter.\\nNote, if the action is `remove_key` it will contain the last non-null value.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"OriginatedContract\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"kind\": {\n            \"type\": \"string\",\n            \"description\": \"Kind of the contract (`delegator_contract` or `smart_contract`),\\nwhere `delegator_contract` - manager.tz smart contract for delegation purpose only\",\n            \"nullable\": true\n          },\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the project behind the contract or contract description\",\n            \"nullable\": true\n          },\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Public key hash of the contract\",\n            \"nullable\": true\n          },\n          \"typeHash\": {\n            \"type\": \"integer\",\n            \"description\": \"32-bit hash of the contract parameter and storage types.\\nThis field can be used for searching similar contracts (which have the same interface).\",\n            \"format\": \"int32\"\n          },\n          \"codeHash\": {\n            \"type\": \"integer\",\n            \"description\": \"32-bit hash of the contract code.\\nThis field can be used for searching same contracts (which have the same script).\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"TransactionOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `transaction` - is a standard operation used to transfer tezos tokens to an account\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"initiator\": {\n                \"description\": \"Information about the initiator of the transaction call\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"sender\": {\n                \"description\": \"Information about the account sent the transaction\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"nonce\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent internal operation replay\",\n                \"format\": \"int32\",\n                \"nullable\": true\n              },\n              \"gasLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of gas a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"gasUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of gas, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"storageLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of storage a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"storageUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of storage, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"bakerFee\": {\n                \"type\": \"integer\",\n                \"description\": \"Fee to the baker, produced block, in which the operation was included (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"storageFee\": {\n                \"type\": \"integer\",\n                \"description\": \"The amount of funds burned from the sender account for used the blockchain storage (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"allocationFee\": {\n                \"type\": \"integer\",\n                \"description\": \"The amount of funds burned from the sender account for account creation (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"target\": {\n                \"description\": \"Information about the target of the transaction\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"amount\": {\n                \"type\": \"integer\",\n                \"description\": \"The transaction amount (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"parameter\": {\n                \"description\": \"Transaction parameter, including called entrypoint and value passed to the entrypoint.\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/TxParameter\"\n                  }\n                ]\n              },\n              \"storage\": {\n                \"description\": \"Contract storage after executing the transaction converted to human-readable JSON. Note: you can configure storage format by setting `micheline` query parameter.\",\n                \"nullable\": true\n              },\n              \"diffs\": {\n                \"type\": \"array\",\n                \"description\": \"List of bigmap updates (aka big_map_diffs) caused by the transaction.\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/BigMapDiff\"\n                }\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Operation status (`applied` - an operation applied by the node and successfully added to the blockchain,\\n`failed` - an operation which failed with some particular error (not enough balance, gas limit, etc),\\n`backtracked` - an operation which was successful but reverted due to one of the following operations in the same operation group was failed,\\n`skipped` - all operations after the failed one in an operation group)\",\n                \"nullable\": true\n              },\n              \"errors\": {\n                \"type\": \"array\",\n                \"description\": \"List of errors provided by the node, injected the operation to the blockchain. `null` if there is no errors\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/OperationError\"\n                }\n              },\n              \"hasInternals\": {\n                \"type\": \"boolean\",\n                \"description\": \"An indication of whether the transaction has an internal operations\\n`true` - there are internal operations\\n`false` - no internal operations\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              },\n              \"parameters\": {\n                \"type\": \"string\",\n                \"description\": \"**DEPRECATED**. Use `entrypoint` and `parameter` instead.\",\n                \"nullable\": true\n              }\n            }\n          }\n        ]\n      },\n      \"TxParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"entrypoint\": {\n            \"type\": \"string\",\n            \"description\": \"Entrypoint called on the target contract\",\n            \"nullable\": true\n          },\n          \"value\": {\n            \"description\": \"Value passed to the called entrypoint converted to human-readable JSON. Note: you can configure parameters format by setting `micheline` query parameter.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"RevealOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `reveal` - is used to reveal the public key associated with an account\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"sender\": {\n                \"description\": \"Information about the account who has sent the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"gasLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of gas a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"gasUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of gas, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"bakerFee\": {\n                \"type\": \"integer\",\n                \"description\": \"Fee to the baker, produced block, in which the operation was included (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Operation status (`applied` - an operation applied by the node and successfully added to the blockchain,\\n`failed` - an operation which failed with some particular error (not enough balance, gas limit, etc),\\n`backtracked` - an operation which was successful but reverted due to one of the following operations in the same operation group was failed,\\n`skipped` - all operations after the failed one in an operation group)\",\n                \"nullable\": true\n              },\n              \"errors\": {\n                \"type\": \"array\",\n                \"description\": \"List of errors provided by the node, injected the operation to the blockchain. `null` if there is no errors\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/OperationError\"\n                }\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"MigrationOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `migration` - result of the context (database) migration during a protocol update (synthetic type)\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"kind\": {\n                \"type\": \"string\",\n                \"description\": \"Kind of the migration \\n`bootstrap` - balance updates, included in the first block after genesis\\n`activate_delegate` - registering a new baker (delegator) during protocol migration\\n`airdrop` - airdrop of 1 micro tez during Babylon protocol upgrade\\n`proposal_invoice` - invoice for creation a proposal for protocol upgrade\\n`code_change` - changing contract scripts during Babylon protocol upgrade\\n`origination` - implicit (hardcoded in the protocol) origination of liquidity baking contracts\\n`subsidy` - liquidity baking subsidy\",\n                \"nullable\": true\n              },\n              \"account\": {\n                \"description\": \"Information about the account whose balance has updated as a result of the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"balanceChange\": {\n                \"type\": \"integer\",\n                \"description\": \"The amount for which the operation updated the balance (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"storage\": {\n                \"description\": \"Contract storage after the migration converted to human-readable JSON. Note: you can configure storage format by setting `micheline` query parameter.\",\n                \"nullable\": true\n              },\n              \"diffs\": {\n                \"type\": \"array\",\n                \"description\": \"List of bigmap updates caused by the migration.\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/BigMapDiff\"\n                }\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"RevelationPenaltyOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `revelation_penalty` - is operation, in which rewards were lost due to unrevealed seed nonces by the delegate (synthetic type)\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"baker\": {\n                \"description\": \"Information about the delegate (baker) who has lost rewards due to unrevealed seed nonces \",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"missedLevel\": {\n                \"type\": \"integer\",\n                \"description\": \"Height of the block, which contains hash of the seed nonce, which was to be revealed\",\n                \"format\": \"int32\"\n              },\n              \"lostReward\": {\n                \"type\": \"integer\",\n                \"description\": \"Reward for baking the block, which was lost due to unrevealed seed nonces (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"lostFees\": {\n                \"type\": \"integer\",\n                \"description\": \"Lost due to unrevealed seed nonce total fee paid by all operations, included in the block, which was to be revealed (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"BakingOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `baking` - an operation which contains brief information about a baked (produced) block (synthetic type)\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"The datetime at which the block is claimed to have been created (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Block hash\",\n                \"nullable\": true\n              },\n              \"baker\": {\n                \"description\": \"Information about a delegate (baker), produced the block\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"priority\": {\n                \"type\": \"integer\",\n                \"description\": \"The position in the priority list of delegates at which the block was baked\",\n                \"format\": \"int32\"\n              },\n              \"deposit\": {\n                \"type\": \"integer\",\n                \"description\": \"Security deposit frozen on the baker's account for producing the block (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"reward\": {\n                \"type\": \"integer\",\n                \"description\": \"Reward of the baker for producing the block (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"fees\": {\n                \"type\": \"integer\",\n                \"description\": \"Total fee paid by all operations, included in the block\",\n                \"format\": \"int64\"\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"DateTimeParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=2020-01-01` is the same as `param=2020-01-01`). \\\\\\nSpecify a datetime to get items where the specified field is equal to the specified value.\\n\\nExample: `?timestamp=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a datetime to get items where the specified field is not equal to the specified value.\\n\\nExample: `?timestamp.ne=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"gt\": {\n            \"type\": \"string\",\n            \"description\": \"**Greater than** filter mode. \\\\\\nSpecify a datetime to get items where the specified field is greater than the specified value.\\n\\nExample: `?timestamp.gt=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"ge\": {\n            \"type\": \"string\",\n            \"description\": \"**Greater or equal** filter mode. \\\\\\nSpecify a datetime to get items where the specified field is greater than equal to the specified value.\\n\\nExample: `?timestamp.ge=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"lt\": {\n            \"type\": \"string\",\n            \"description\": \"**Less than** filter mode. \\\\\\nSpecify a datetime to get items where the specified field is less than the specified value.\\n\\nExample: `?timestamp.lt=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"le\": {\n            \"type\": \"string\",\n            \"description\": \"**Less or equal** filter mode. \\\\\\nSpecify a datetime to get items where the specified field is less than or equal to the specified value.\\n\\nExample: `?timestamp.le=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of datetimes to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?timestamp.in=2020-02-20,2020-02-21`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of datetimes to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?timestamp.ni=2020-02-20,2020-02-21`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          }\n        }\n      },\n      \"StringParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a string to get items where the specified field is equal to the specified value.\\n\\nExample: `?parameters=abc`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a string to get items where the specified field is not equal to the specified value.\\n\\nExample: `?parameters.ne=abc`.\",\n            \"nullable\": true\n          },\n          \"as\": {\n            \"type\": \"string\",\n            \"description\": \"**Same as** filter mode. \\\\\\nSpecify a string template to get items where the specified field matches the specified template. \\\\\\nThis mode supports wildcard `*`. Use `\\\\*` as an escape symbol.\\n\\nExample: `?parameters.as=*mid*` or `?parameters.as=*end`.\",\n            \"nullable\": true\n          },\n          \"un\": {\n            \"type\": \"string\",\n            \"description\": \"**Unlike** filter mode. \\\\\\nSpecify a string template to get items where the specified field doesn't match the specified template.\\nThis mode supports wildcard `*`. Use `\\\\*` as an escape symbol.\\n\\nExample: `?parameters.un=*mid*` or `?parameters.un=*end`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of strings to get items where the specified field is equal to one of the specified values. \\\\\\nUse `\\\\,` as an escape symbol.\\n\\nExample: `?errors.in=bla,bal,abl`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of strings to get items where the specified field is not equal to all the specified values. \\\\\\nUse `\\\\,` as an escape symbol.\\n\\nExample: `?errors.ni=bla,bal,abl`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"null\": {\n            \"type\": \"boolean\",\n            \"description\": \"**Is null** filter mode. \\\\\\nUse this mode to get items where the specified field is null or not.\\n\\nExample: `?parameters.null` or `?parameters.null=false`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"JsonParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a JSON value to get items where the specified field is equal to the specified value.\\n\\nExample: `?parameter.from=tz1...` or `?parameter.signatures.[3].[0]=null` or `?parameter.sigs.[*]=null`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a JSON value to get items where the specified field is not equal to the specified value.\\n\\nExample: `?parameter.ne=true` or `?parameter.amount.ne=0`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"gt\": {\n            \"type\": \"string\",\n            \"description\": \"**Greater than** filter mode. \\\\\\nSpecify a string to get items where the specified field is greater than the specified value.\\nNote that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type,\\ne.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc.\\nOtherwise, result may surprise you.\\n\\nExample: `?parameter.balance.gt=1234` or `?parameter.time.gt=2021-02-01`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"ge\": {\n            \"type\": \"string\",\n            \"description\": \"**Greater or equal** filter mode. \\\\\\nSpecify a string to get items where the specified field is greater than equal to the specified value.\\nNote that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type,\\ne.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc.\\nOtherwise, result may surprise you.\\n\\nExample: `?parameter.balance.ge=1234` or `?parameter.time.ge=2021-02-01`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"lt\": {\n            \"type\": \"string\",\n            \"description\": \"**Less than** filter mode. \\\\\\nSpecify a string to get items where the specified field is less than the specified value.\\nNote that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type,\\ne.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc.\\nOtherwise, result may surprise you.\\n\\nExample: `?parameter.balance.lt=1234` or `?parameter.time.lt=2021-02-01`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"le\": {\n            \"type\": \"string\",\n            \"description\": \"**Less or equal** filter mode. \\\\\\nSpecify a string to get items where the specified field is less than or equal to the specified value.\\nNote that all stored JSON values are strings, so this will be a comparison of two strings, so we recommend comparing values of the same type,\\ne.g. numeric strings with numeric strings (`parameter.number.gt=123`), datetime strings with datetime strings (`parameter.date.gt=2021-01-01`), etc.\\nOtherwise, result may surprise you.\\n\\nExample: `?parameter.balance.le=1234` or `?parameter.time.le=2021-02-01`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"as\": {\n            \"type\": \"string\",\n            \"description\": \"**Same as** filter mode. \\\\\\nSpecify a string template to get items where the specified field matches the specified template. \\\\\\nThis mode supports wildcard `*`. Use `\\\\*` as an escape symbol.\\n\\nExample: `?parameter.as=*mid*` or `?parameter.as=*end`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"un\": {\n            \"type\": \"string\",\n            \"description\": \"**Unlike** filter mode. \\\\\\nSpecify a string template to get items where the specified field doesn't match the specified template.\\nThis mode supports wildcard `*`. Use `\\\\*` as an escape symbol.\\n\\nExample: `?parameter.un=*mid*` or `?parameter.un=*end`.\",\n            \"nullable\": true,\n            \"x-tzkt-jsonFilterType\": \"string\"\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of strings or JSON array to get items where the specified field is equal to one of the specified values. \\\\\\n\\nExample: `?parameter.amount.in=1,2,3` or `?parameter.in=[{\\\"from\\\":\\\"tz1\\\",\\\"to\\\":\\\"tz2\\\"},{\\\"from\\\":\\\"tz2\\\",\\\"to\\\":\\\"tz1\\\"}]`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"x-tzkt-jsonFilterType\": \"array[string]\"\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of strings to get items where the specified field is not equal to all the specified values. \\\\\\nUse `\\\\,` as an escape symbol.\\n\\nExample: `?parameter.amount.ni=1,2,3` or `?parameter.ni=[{\\\"from\\\":\\\"tz1\\\",\\\"to\\\":\\\"tz2\\\"},{\\\"from\\\":\\\"tz2\\\",\\\"to\\\":\\\"tz1\\\"}]`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"x-tzkt-jsonFilterType\": \"array[string]\"\n          },\n          \"null\": {\n            \"type\": \"boolean\",\n            \"description\": \"**Is null** filter mode. \\\\\\nUse this mode to get items where the specified field is null or not.\\n\\nExample: `?parameter.null` or `?parameter.null=false` or `?parameter.sigs.[0].null=false`.\",\n            \"x-tzkt-jsonFilterType\": \"boolean\"\n          }\n        }\n      },\n      \"OperationStatusParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=applied` is the same as `param=applied`). \\\\\\nSpecify an operation status to get items where the specified field is equal to the specified value.\\n\\nExample: `?type=failed`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify an operation status to get items where the specified field is not equal to the specified value.\\n\\nExample: `?type.ne=applied`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"SortMode\": {\n        \"type\": \"string\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"Ascending\",\n          \"Descending\"\n        ],\n        \"enum\": [\n          \"Ascending\",\n          \"Descending\"\n        ]\n      },\n      \"MichelineFormat\": {\n        \"type\": \"string\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"Json\",\n          \"JsonString\",\n          \"Raw\",\n          \"RawString\"\n        ],\n        \"enum\": [\n          \"Json\",\n          \"JsonString\",\n          \"Raw\",\n          \"RawString\"\n        ]\n      },\n      \"Symbols\": {\n        \"type\": \"string\",\n        \"description\": \"\",\n        \"x-enumFlags\": true,\n        \"x-enumNames\": [\n          \"None\",\n          \"Btc\",\n          \"Eur\",\n          \"Usd\",\n          \"Cny\",\n          \"Jpy\",\n          \"Krw\",\n          \"Eth\",\n          \"Gbp\"\n        ],\n        \"enum\": [\n          \"None\",\n          \"Btc\",\n          \"Eur\",\n          \"Usd\",\n          \"Cny\",\n          \"Jpy\",\n          \"Krw\",\n          \"Eth\",\n          \"Gbp\"\n        ]\n      },\n      \"HistoricalBalance\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"Height of the block at which the account balance was calculated\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of the block at which the account balance was calculated\",\n            \"format\": \"date-time\"\n          },\n          \"balance\": {\n            \"type\": \"integer\",\n            \"description\": \"Historical balance\",\n            \"format\": \"int64\"\n          },\n          \"quote\": {\n            \"description\": \"Injected historical quote at the time of balance snapshot\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QuoteShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"BigMap\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"ptr\": {\n            \"type\": \"integer\",\n            \"description\": \"Bigmap pointer\",\n            \"format\": \"int32\"\n          },\n          \"contract\": {\n            \"description\": \"Smart contract in which's storage the bigmap is allocated\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"Path to the bigmap in the contract storage \",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"List of tags (`token_metadata` - tzip-12, `metadata` - tzip-16, `null` - no tags)\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"active\": {\n            \"type\": \"boolean\",\n            \"description\": \"Bigmap status (`true` - active, `false` - removed)\"\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block where the bigmap was seen first time\",\n            \"format\": \"int32\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block where the bigmap was seen last time\",\n            \"format\": \"int32\"\n          },\n          \"totalKeys\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of keys ever added to the bigmap\",\n            \"format\": \"int32\"\n          },\n          \"activeKeys\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of currently active keys\",\n            \"format\": \"int32\"\n          },\n          \"updates\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of actions with the bigmap\",\n            \"format\": \"int32\"\n          },\n          \"keyType\": {\n            \"description\": \"Bigmap key type as JSON schema or Micheline, depending on the `micheline` query parameter.\",\n            \"nullable\": true\n          },\n          \"valueType\": {\n            \"description\": \"Bigmap value type as JSON schema or Micheline, depending on the `micheline` query parameter.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"BigMapTagsParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"array\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a comma-separated list of bigmap tags to get bigmaps with exactly the same set of tags.\\n\\nExample: `?tags=metadata` or `?tags=token_metadata,metadata`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"any\": {\n            \"type\": \"array\",\n            \"description\": \"**Has any** filter mode. \\\\\\nSpecify a comma-separated list of bigmap tags to get bigmaps where at least one of the specified tags is presented.\\n\\nExample: `?tags=metadata` or `?tags=token_metadata,metadata`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"all\": {\n            \"type\": \"array\",\n            \"description\": \"**Has all** filter mode. \\\\\\nSpecify a comma-separated list of bigmap tags to get bigmaps where all of the specified tags are presented.\\n\\nExample: `?tags=metadata` or `?tags=token_metadata,metadata`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"BigMapUpdate\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Internal Id, can be used for pagination\",\n            \"format\": \"int32\"\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block where the bigmap was updated\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of the block where the bigmap was updated\",\n            \"format\": \"date-time\"\n          },\n          \"bigmap\": {\n            \"type\": \"integer\",\n            \"description\": \"Bigmap ptr\",\n            \"format\": \"int32\"\n          },\n          \"contract\": {\n            \"description\": \"Smart contract in which's storage the bigmap is allocated\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"Path to the bigmap in the contract storage\",\n            \"nullable\": true\n          },\n          \"action\": {\n            \"type\": \"string\",\n            \"description\": \"Action with the bigmap (`allocate`, `add_key`, `update_key`, `remove_key`, `remove`)\",\n            \"nullable\": true\n          },\n          \"content\": {\n            \"description\": \"Updated key.\\nIf the action is `allocate` or `remove` the content will be `null`.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/BigMapKeyShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"BigMapActionParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a contract kind to get items where the specified field is equal to the specified value.\\n\\nExample: `?kind=smart_contract`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a contract kind to get items where the specified field is not equal to the specified value.\\n\\nExample: `?kind.ne=delegator_contract`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of contract kinds to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?kind.in=smart_contract,asset`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of contract kinds to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?kind.ni=smart_contract,asset`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"TimestampParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a datetime value to get items where the specified field is equal to the specified value.\\n\\nExample: `?timestamp=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a datetime value to get items where the specified field is not equal to the specified value.\\n\\nExample: `?timestamp.ne=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"gt\": {\n            \"type\": \"string\",\n            \"description\": \"**Greater than** filter mode. \\\\\\nSpecify a datetime value to get items where the specified field is greater than the specified value.\\n\\nExample: `?timestamp.gt=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"ge\": {\n            \"type\": \"string\",\n            \"description\": \"**Greater or equal** filter mode. \\\\\\nSpecify a datetime value to get items where the specified field is greater than equal to the specified value.\\n\\nExample: `?timestamp.ge=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"lt\": {\n            \"type\": \"string\",\n            \"description\": \"**Less than** filter mode. \\\\\\nSpecify a datetime value to get items where the specified field is less than the specified value.\\n\\nExample: `?timestamp.lt=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"le\": {\n            \"type\": \"string\",\n            \"description\": \"**Less or equal** filter mode. \\\\\\nSpecify a datetime value to get items where the specified field is less than or equal to the specified value.\\n\\nExample: `?timestamp.le=2020-02-20T02:40:57Z`.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of datetimes to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?timestamp.in=2020-02-20,2020-02-21`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of datetimes to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?timestamp.ni=2020-02-20,2020-02-21`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"date-time\"\n            }\n          }\n        }\n      },\n      \"MichelinePrim\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"prim\": {\n            \"$ref\": \"#/components/schemas/PrimType\"\n          },\n          \"args\": {\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/IMicheline\"\n            }\n          },\n          \"annots\": {\n            \"type\": \"array\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/IAnnotation\"\n            }\n          }\n        }\n      },\n      \"PrimType\": {\n        \"type\": \"integer\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"parameter\",\n          \"storage\",\n          \"code\",\n          \"False\",\n          \"Elt\",\n          \"Left\",\n          \"None\",\n          \"Pair\",\n          \"Right\",\n          \"Some\",\n          \"True\",\n          \"Unit\",\n          \"PACK\",\n          \"UNPACK\",\n          \"BLAKE2B\",\n          \"SHA256\",\n          \"SHA512\",\n          \"ABS\",\n          \"ADD\",\n          \"AMOUNT\",\n          \"AND\",\n          \"BALANCE\",\n          \"CAR\",\n          \"CDR\",\n          \"CHECK_SIGNATURE\",\n          \"COMPARE\",\n          \"CONCAT\",\n          \"CONS\",\n          \"CREATE_ACCOUNT\",\n          \"CREATE_CONTRACT\",\n          \"IMPLICIT_ACCOUNT\",\n          \"DIP\",\n          \"DROP\",\n          \"DUP\",\n          \"EDIV\",\n          \"EMPTY_MAP\",\n          \"EMPTY_SET\",\n          \"EQ\",\n          \"EXEC\",\n          \"FAILWITH\",\n          \"GE\",\n          \"GET\",\n          \"GT\",\n          \"HASH_KEY\",\n          \"IF\",\n          \"IF_CONS\",\n          \"IF_LEFT\",\n          \"IF_NONE\",\n          \"INT\",\n          \"LAMBDA\",\n          \"LE\",\n          \"LEFT\",\n          \"LOOP\",\n          \"LSL\",\n          \"LSR\",\n          \"LT\",\n          \"MAP\",\n          \"MEM\",\n          \"MUL\",\n          \"NEG\",\n          \"NEQ\",\n          \"NIL\",\n          \"NONE\",\n          \"NOT\",\n          \"NOW\",\n          \"OR\",\n          \"PAIR\",\n          \"PUSH\",\n          \"RIGHT\",\n          \"SIZE\",\n          \"SOME\",\n          \"SOURCE\",\n          \"SENDER\",\n          \"SELF\",\n          \"STEPS_TO_QUOTA\",\n          \"SUB\",\n          \"SWAP\",\n          \"TRANSFER_TOKENS\",\n          \"SET_DELEGATE\",\n          \"UNIT\",\n          \"UPDATE\",\n          \"XOR\",\n          \"ITER\",\n          \"LOOP_LEFT\",\n          \"ADDRESS\",\n          \"CONTRACT\",\n          \"ISNAT\",\n          \"CAST\",\n          \"RENAME\",\n          \"bool\",\n          \"contract\",\n          \"int\",\n          \"key\",\n          \"key_hash\",\n          \"lambda\",\n          \"list\",\n          \"map\",\n          \"big_map\",\n          \"nat\",\n          \"option\",\n          \"or\",\n          \"pair\",\n          \"set\",\n          \"signature\",\n          \"string\",\n          \"bytes\",\n          \"mutez\",\n          \"timestamp\",\n          \"unit\",\n          \"operation\",\n          \"address\",\n          \"SLICE\",\n          \"DIG\",\n          \"DUG\",\n          \"EMPTY_BIG_MAP\",\n          \"APPLY\",\n          \"chain_id\",\n          \"CHAIN_ID\",\n          \"LEVEL\",\n          \"SELF_ADDRESS\",\n          \"never\",\n          \"NEVER\",\n          \"UNPAIR\",\n          \"VOTING_POWER\",\n          \"TOTAL_VOTING_POWER\",\n          \"KECCAK\",\n          \"SHA3\",\n          \"PAIRING_CHECK\",\n          \"bls12_381_g1\",\n          \"bls12_381_g2\",\n          \"bls12_381_fr\",\n          \"sapling_state\",\n          \"sapling_transaction\",\n          \"SAPLING_EMPTY_STATE\",\n          \"SAPLING_VERIFY_UPDATE\",\n          \"ticket\",\n          \"TICKET\",\n          \"READ_TICKET\",\n          \"SPLIT_TICKET\",\n          \"JOIN_TICKETS\",\n          \"GET_AND_UPDATE\",\n          \"chest\",\n          \"chest_key\",\n          \"OPEN_CHEST\",\n          \"VIEW\",\n          \"view\",\n          \"constant\"\n        ],\n        \"enum\": [\n          0,\n          1,\n          2,\n          3,\n          4,\n          5,\n          6,\n          7,\n          8,\n          9,\n          10,\n          11,\n          12,\n          13,\n          14,\n          15,\n          16,\n          17,\n          18,\n          19,\n          20,\n          21,\n          22,\n          23,\n          24,\n          25,\n          26,\n          27,\n          28,\n          29,\n          30,\n          31,\n          32,\n          33,\n          34,\n          35,\n          36,\n          37,\n          38,\n          39,\n          40,\n          41,\n          42,\n          43,\n          44,\n          45,\n          46,\n          47,\n          48,\n          49,\n          50,\n          51,\n          52,\n          53,\n          54,\n          55,\n          56,\n          57,\n          58,\n          59,\n          60,\n          61,\n          62,\n          63,\n          64,\n          65,\n          66,\n          67,\n          68,\n          69,\n          70,\n          71,\n          72,\n          73,\n          74,\n          75,\n          76,\n          77,\n          78,\n          79,\n          80,\n          81,\n          82,\n          83,\n          84,\n          85,\n          86,\n          87,\n          88,\n          89,\n          90,\n          91,\n          92,\n          93,\n          94,\n          95,\n          96,\n          97,\n          98,\n          99,\n          100,\n          101,\n          102,\n          103,\n          104,\n          105,\n          106,\n          107,\n          108,\n          109,\n          110,\n          111,\n          112,\n          113,\n          114,\n          115,\n          116,\n          117,\n          118,\n          119,\n          120,\n          121,\n          122,\n          123,\n          124,\n          125,\n          126,\n          127,\n          128,\n          129,\n          130,\n          131,\n          132,\n          133,\n          134,\n          135,\n          136,\n          137,\n          138,\n          139,\n          140,\n          141,\n          142,\n          143,\n          144,\n          145,\n          146\n        ]\n      },\n      \"IMicheline\": {\n        \"type\": \"object\",\n        \"x-abstract\": true,\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"type\": {\n            \"$ref\": \"#/components/schemas/MichelineType\"\n          }\n        }\n      },\n      \"MichelineType\": {\n        \"type\": \"integer\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"Int\",\n          \"Bytes\",\n          \"String\",\n          \"Array\",\n          \"Prim\"\n        ],\n        \"enum\": [\n          0,\n          32,\n          64,\n          96,\n          128\n        ]\n      },\n      \"IAnnotation\": {\n        \"type\": \"object\",\n        \"x-abstract\": true,\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"type\": {\n            \"$ref\": \"#/components/schemas/AnnotationType\"\n          },\n          \"value\": {\n            \"type\": \"string\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"AnnotationType\": {\n        \"type\": \"integer\",\n        \"description\": \"\",\n        \"x-enumNames\": [\n          \"Unsafe\",\n          \"Field\",\n          \"Type\",\n          \"Variable\"\n        ],\n        \"enum\": [\n          0,\n          64,\n          128,\n          192\n        ]\n      },\n      \"BigMapKey\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Internal Id, can be used for pagination\",\n            \"format\": \"int32\"\n          },\n          \"active\": {\n            \"type\": \"boolean\",\n            \"description\": \"Bigmap key status (`true` - active, `false` - removed)\"\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Key hash\",\n            \"nullable\": true\n          },\n          \"key\": {\n            \"description\": \"Key in JSON or Micheline format, depending on the `micheline` query parameter.\",\n            \"nullable\": true\n          },\n          \"value\": {\n            \"description\": \"Value in JSON or Micheline format, depending on the `micheline` query parameter.\\nNote, if the key is inactive (removed) it will contain the last non-null value.\",\n            \"nullable\": true\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block where the bigmap key was seen first time\",\n            \"format\": \"int32\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block where the bigmap key was seen last time\",\n            \"format\": \"int32\"\n          },\n          \"updates\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of actions with the bigmap key\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"BigMapKeyUpdate\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Internal Id, can be used for pagination\",\n            \"format\": \"int32\"\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block where the bigmap key was updated\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of the block where the bigmap key was updated\",\n            \"format\": \"date-time\"\n          },\n          \"action\": {\n            \"type\": \"string\",\n            \"description\": \"Action with the key (`add_key`, `update_key`, `remove_key`)\",\n            \"nullable\": true\n          },\n          \"value\": {\n            \"description\": \"Value in JSON or Micheline format, depending on the `micheline` query parameter.\\nNote, if the action is `remove_key` it will contain the last non-null value.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"BigMapKeyHistorical\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Internal Id, can be used for pagination\",\n            \"format\": \"int32\"\n          },\n          \"active\": {\n            \"type\": \"boolean\",\n            \"description\": \"Bigmap key status (`true` - active, `false` - removed)\"\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Key hash\",\n            \"nullable\": true\n          },\n          \"key\": {\n            \"description\": \"Key in JSON or Micheline format, depending on the `micheline` query parameter.\",\n            \"nullable\": true\n          },\n          \"value\": {\n            \"description\": \"Value in JSON or Micheline format, depending on the `micheline` query parameter.\\nNote, if the key is inactive (removed) it will contain the last non-null value.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Block\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Index of the cycle\",\n            \"format\": \"int32\"\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block from the genesis block\",\n            \"format\": \"int32\"\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Block hash\",\n            \"nullable\": true\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The datetime at which the block is claimed to have been created (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\"\n          },\n          \"proto\": {\n            \"type\": \"integer\",\n            \"description\": \"Protocol code, representing a number of protocol changes since genesis (mod 256, but `-1` for the genesis block)\",\n            \"format\": \"int32\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"description\": \"The position in the priority list of delegates at which the block was baked\",\n            \"format\": \"int32\"\n          },\n          \"validations\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsements, confirmed the block\",\n            \"format\": \"int32\"\n          },\n          \"deposit\": {\n            \"type\": \"integer\",\n            \"description\": \"Security deposit frozen on the baker's account for producing the block (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"reward\": {\n            \"type\": \"integer\",\n            \"description\": \"Reward of the baker for producing the block (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"fees\": {\n            \"type\": \"integer\",\n            \"description\": \"Total fee paid by all operations, included in the block\",\n            \"format\": \"int64\"\n          },\n          \"nonceRevealed\": {\n            \"type\": \"boolean\",\n            \"description\": \"Status of the seed nonce revelation\\n`true` - seed nonce revealed\\n`false` - there's no `seed_nonce_hash` in the block or seed nonce revelation has missed\"\n          },\n          \"baker\": {\n            \"description\": \"Information about a delegate (baker), produced the block\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"software\": {\n            \"description\": \"Information about baker's software\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/SoftwareAlias\"\n              }\n            ]\n          },\n          \"lbEscapeVote\": {\n            \"type\": \"boolean\",\n            \"description\": \"Flag indicating that the baker has voted for disabling liquidity baking\"\n          },\n          \"lbEscapeEma\": {\n            \"type\": \"integer\",\n            \"description\": \"Liquidity baking escape EMA value with precision of 1000 for integer computation\",\n            \"format\": \"int32\"\n          },\n          \"endorsements\": {\n            \"type\": \"array\",\n            \"description\": \"List of endorsement (is operation, which specifies the head of the chain as seen by the endorser of a given slot)\\noperations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EndorsementOperation\"\n            }\n          },\n          \"proposals\": {\n            \"type\": \"array\",\n            \"description\": \"List of proposal (is used by bakers (delegates) to submit and/or upvote proposals to amend the protocol)\\noperations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ProposalOperation\"\n            }\n          },\n          \"ballots\": {\n            \"type\": \"array\",\n            \"description\": \"List of ballot (is used to vote for a proposal in a given voting cycle) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BallotOperation\"\n            }\n          },\n          \"activations\": {\n            \"type\": \"array\",\n            \"description\": \"List of activation (is used to activate accounts that were recommended allocations of\\ntezos tokens for donations to the Tezos Foundation’s fundraiser) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ActivationOperation\"\n            }\n          },\n          \"doubleBaking\": {\n            \"type\": \"array\",\n            \"description\": \"List of double baking evidence (is used by bakers to provide evidence of double baking (baking two different\\nblocks at the same height) by a baker) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DoubleBakingOperation\"\n            }\n          },\n          \"doubleEndorsing\": {\n            \"type\": \"array\",\n            \"description\": \"List of double endorsement evidence (is used by bakers to provide evidence of double endorsement\\n(endorsing two different blocks at the same block height) by a baker) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DoubleEndorsingOperation\"\n            }\n          },\n          \"nonceRevelations\": {\n            \"type\": \"array\",\n            \"description\": \"List of nonce revelation (are used by the blockchain to create randomness) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NonceRevelationOperation\"\n            }\n          },\n          \"delegations\": {\n            \"type\": \"array\",\n            \"description\": \"List of delegation (is used to delegate funds to a delegate (an implicit account registered as a baker))\\noperations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DelegationOperation\"\n            }\n          },\n          \"originations\": {\n            \"type\": \"array\",\n            \"description\": \"List of origination (deployment / contract creation ) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/OriginationOperation\"\n            }\n          },\n          \"transactions\": {\n            \"type\": \"array\",\n            \"description\": \"List of transaction (is a standard operation used to transfer tezos tokens to an account)\\noperations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/TransactionOperation\"\n            }\n          },\n          \"reveals\": {\n            \"type\": \"array\",\n            \"description\": \"List of reveal (is used to reveal the public key associated with an account) operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RevealOperation\"\n            }\n          },\n          \"registerConstants\": {\n            \"type\": \"array\",\n            \"description\": \"List of register global constant operations, included in the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RegisterConstantOperation\"\n            }\n          },\n          \"migrations\": {\n            \"type\": \"array\",\n            \"description\": \"List of migration operations, implicitly applied at the end of the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MigrationOperation\"\n            }\n          },\n          \"revelationPenalties\": {\n            \"type\": \"array\",\n            \"description\": \"List of revelation penalty operations, implicitly applied at the end of the block\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/RevelationPenaltyOperation\"\n            }\n          },\n          \"quote\": {\n            \"description\": \"Injected historical quote at the time of block\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QuoteShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"RegisterConstantOperation\": {\n        \"allOf\": [\n          {\n            \"$ref\": \"#/components/schemas/Operation\"\n          },\n          {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n              \"type\": {\n                \"type\": \"string\",\n                \"description\": \"Type of the operation, `register_constant` - is used to register a global\\nconstant - Micheline expression that can be reused by multiple smart contracts\",\n                \"nullable\": true\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"description\": \"Unique ID of the operation, stored in the TzKT indexer database\",\n                \"format\": \"int32\"\n              },\n              \"level\": {\n                \"type\": \"integer\",\n                \"description\": \"The height of the block from the genesis block, in which the operation was included\",\n                \"format\": \"int32\"\n              },\n              \"timestamp\": {\n                \"type\": \"string\",\n                \"description\": \"Datetime of the block, in which the operation was included (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n                \"format\": \"date-time\"\n              },\n              \"block\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the block, in which the operation was included\",\n                \"nullable\": true\n              },\n              \"hash\": {\n                \"type\": \"string\",\n                \"description\": \"Hash of the operation\",\n                \"nullable\": true\n              },\n              \"sender\": {\n                \"description\": \"Information about the account who has sent the operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/Alias\"\n                  }\n                ]\n              },\n              \"counter\": {\n                \"type\": \"integer\",\n                \"description\": \"An account nonce which is used to prevent operation replay\",\n                \"format\": \"int32\"\n              },\n              \"gasLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of gas a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"gasUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of gas, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"storageLimit\": {\n                \"type\": \"integer\",\n                \"description\": \"A cap on the amount of storage a given operation can consume\",\n                \"format\": \"int32\"\n              },\n              \"storageUsed\": {\n                \"type\": \"integer\",\n                \"description\": \"Amount of storage, consumed by the operation\",\n                \"format\": \"int32\"\n              },\n              \"bakerFee\": {\n                \"type\": \"integer\",\n                \"description\": \"Fee to the baker, produced block, in which the operation was included (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"storageFee\": {\n                \"type\": \"integer\",\n                \"description\": \"The amount of funds burned from the sender account for used the blockchain storage (micro tez)\",\n                \"format\": \"int64\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Operation status (`applied` - an operation applied by the node and successfully added to the blockchain,\\n`failed` - an operation which failed with some particular error (not enough balance, gas limit, etc),\\n`backtracked` - an operation which was successful but reverted due to one of the following operations in the same operation group was failed,\\n`skipped` - all operations after the failed one in an operation group)\",\n                \"nullable\": true\n              },\n              \"address\": {\n                \"type\": \"string\",\n                \"description\": \"Global address of the registered constant (null if the operation failed)\",\n                \"nullable\": true\n              },\n              \"value\": {\n                \"description\": \"Constant value. Note: you can configure code format by setting `micheline` query parameter (`0 | 2` - raw micheline, `1 | 3` - raw micheline string).\",\n                \"nullable\": true\n              },\n              \"errors\": {\n                \"type\": \"array\",\n                \"description\": \"List of errors provided by the node, injected the operation to the blockchain. `null` if there is no errors\",\n                \"nullable\": true,\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/OperationError\"\n                }\n              },\n              \"quote\": {\n                \"description\": \"Injected historical quote at the time of operation\",\n                \"nullable\": true,\n                \"oneOf\": [\n                  {\n                    \"$ref\": \"#/components/schemas/QuoteShort\"\n                  }\n                ]\n              }\n            }\n          }\n        ]\n      },\n      \"Commitment\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Blinded address of the account\",\n            \"nullable\": true\n          },\n          \"balance\": {\n            \"type\": \"integer\",\n            \"description\": \"Account balance to be activated\",\n            \"format\": \"int64\"\n          },\n          \"activated\": {\n            \"type\": \"boolean\",\n            \"description\": \"Flag showing whether the account has been activated or not.\"\n          },\n          \"activationLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block at which the account has been activated. `null` if the account is not activated yet.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"activationTime\": {\n            \"type\": \"string\",\n            \"description\": \"Datetime of the block at which the account has been activated (ISO 8601, e.g. `2020-02-20T02:40:57Z`). `null` if the account is not activated yet.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"activatedAccount\": {\n            \"description\": \"Info about activated account. `null` if the account is not activated yet.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          }\n        }\n      },\n      \"Int32NullParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"integer\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify an integer number to get items where the specified field is equal to the specified value.\\n\\nExample: `?balance=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"integer\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is not equal to the specified value.\\n\\nExample: `?balance.ne=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"gt\": {\n            \"type\": \"integer\",\n            \"description\": \"**Greater than** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is greater than the specified value.\\n\\nExample: `?balance.gt=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"ge\": {\n            \"type\": \"integer\",\n            \"description\": \"**Greater or equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is greater than equal to the specified value.\\n\\nExample: `?balance.ge=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"lt\": {\n            \"type\": \"integer\",\n            \"description\": \"**Less than** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is less than the specified value.\\n\\nExample: `?balance.lt=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"le\": {\n            \"type\": \"integer\",\n            \"description\": \"**Less or equal** filter mode. \\\\\\nSpecify an integer number to get items where the specified field is less than or equal to the specified value.\\n\\nExample: `?balance.le=1234`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of integers to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?level.in=12,14,52,69`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of integers to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?level.ni=12,14,52,69`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"null\": {\n            \"type\": \"boolean\",\n            \"description\": \"**Is null** filter mode. \\\\\\nUse this mode to get items where the specified field is null or not.\\n\\nExample: `?nonce.null` or `?nonce.null=false`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Constant\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Global address (expression hash)\",\n            \"nullable\": true\n          },\n          \"value\": {\n            \"description\": \"Constant value (either micheline, michelson or bytes, depending on the `format` parameter)\",\n            \"nullable\": true\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"description\": \"Constant size in bytes\",\n            \"format\": \"int32\"\n          },\n          \"refs\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of contracts referencing this constant\",\n            \"format\": \"int32\"\n          },\n          \"creator\": {\n            \"description\": \"Account registered this constant\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"creationLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the first block baked with this software\",\n            \"format\": \"int32\"\n          },\n          \"creationTime\": {\n            \"type\": \"string\",\n            \"description\": \"Datetime of the first block baked with this software\",\n            \"format\": \"date-time\"\n          },\n          \"metadata\": {\n            \"description\": \"Offchain metadata\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RawJson\"\n              }\n            ]\n          }\n        }\n      },\n      \"RawJson\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false\n      },\n      \"ExpressionParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify an expression hash to get items where the specified field is equal to the specified value.\\n\\nExample: `?address=expr...`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify an expression hash to get items where the specified field is not equal to the specified value.\\n\\nExample: `?address.ne=expr...`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of expression hashes to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?address.in=expr1,expr2`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of expression hashes to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?address.ni=expr1,expr2`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"ContractInterface\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"storageSchema\": {\n            \"description\": \"JSON Schema of the contract storage in humanified format (as returned by API)\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RawJson\"\n              }\n            ]\n          },\n          \"entrypoints\": {\n            \"type\": \"array\",\n            \"description\": \"List of terminal entrypoints\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/EntrypointInterface\"\n            }\n          },\n          \"bigMaps\": {\n            \"type\": \"array\",\n            \"description\": \"List of currently available Big_maps\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/BigMapInterface\"\n            }\n          }\n        }\n      },\n      \"EntrypointInterface\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Entrypoint name\",\n            \"nullable\": true\n          },\n          \"parameterSchema\": {\n            \"description\": \"JSON Schema of the entrypoint parameter in humanified format (as returned by API)\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RawJson\"\n              }\n            ]\n          }\n        }\n      },\n      \"BigMapInterface\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"path\": {\n            \"type\": \"string\",\n            \"description\": \"Full path to the Big_map in the contract storage\",\n            \"nullable\": true\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Big_map name, if exists (field annotation)\",\n            \"nullable\": true\n          },\n          \"keySchema\": {\n            \"description\": \"JSON Schema of the Big_map key in humanified format (as returned by API)\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RawJson\"\n              }\n            ]\n          },\n          \"valueSchema\": {\n            \"description\": \"JSON Schema of the Big_map value in humanified format (as returned by API)\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RawJson\"\n              }\n            ]\n          }\n        }\n      },\n      \"Entrypoint\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Entrypoint name\",\n            \"nullable\": true\n          },\n          \"jsonParameters\": {\n            \"description\": \"A kind of JSON schema, describing how parameters will look like in a human-readable JSON format\",\n            \"nullable\": true\n          },\n          \"michelineParameters\": {\n            \"description\": \"Parameters schema in micheline format\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/IMicheline\"\n              }\n            ]\n          },\n          \"michelsonParameters\": {\n            \"type\": \"string\",\n            \"description\": \"Parameters schema in michelson format\",\n            \"nullable\": true\n          },\n          \"unused\": {\n            \"type\": \"boolean\",\n            \"description\": \"Unused means that the entrypoint can be normalized to a more specific one.\\nFor example here `(or %entry1 (unit %entry2) (nat %entry3))` the `%entry1` is unused entrypoint\\nbecause it can be normalized to `%entry2` or `%entry3`\"\n          }\n        }\n      },\n      \"ContractView\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Contract view name\",\n            \"nullable\": true\n          },\n          \"jsonParameterType\": {\n            \"description\": \"Parameter type in human-readable JSON format\",\n            \"nullable\": true\n          },\n          \"jsonReturnType\": {\n            \"description\": \"Return type in human-readable JSON format\",\n            \"nullable\": true\n          },\n          \"michelineParameterType\": {\n            \"description\": \"Parameter type in micheline format\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/IMicheline\"\n              }\n            ]\n          },\n          \"michelineReturnType\": {\n            \"description\": \"Return type in micheline format\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/IMicheline\"\n              }\n            ]\n          },\n          \"michelsonParameterType\": {\n            \"type\": \"string\",\n            \"description\": \"Parameter type in michelson format\",\n            \"nullable\": true\n          },\n          \"michelsonReturnType\": {\n            \"type\": \"string\",\n            \"description\": \"Return type in michelson format\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"StorageRecord\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Id of the record that can be used for pagination\",\n            \"format\": \"int32\"\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"Level at which the storage value was taken\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp at which the storage value was taken\",\n            \"format\": \"date-time\"\n          },\n          \"operation\": {\n            \"description\": \"Operation that caused the storage change\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/SourceOperation\"\n              }\n            ]\n          },\n          \"value\": {\n            \"description\": \"New storage value\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"SourceOperation\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Operation type\",\n            \"nullable\": true\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Operation hash\",\n            \"nullable\": true\n          },\n          \"counter\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation counter (null in case of synthetic operations)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"nonce\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation nonce (null in case of non-internal or synthetic operations)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"parameter\": {\n            \"description\": \"Transaction parameter, including called entrypoint and value passed to the entrypoint.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/TxParameter\"\n              }\n            ]\n          }\n        }\n      },\n      \"Cycle\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"index\": {\n            \"type\": \"integer\",\n            \"description\": \"Cycle index starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the first block in the cycle\",\n            \"format\": \"int32\"\n          },\n          \"startTime\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of the first block in the cycle\",\n            \"format\": \"date-time\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the last block in the cycle\",\n            \"format\": \"int32\"\n          },\n          \"endTime\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of the last block in the cycle\",\n            \"format\": \"date-time\"\n          },\n          \"snapshotIndex\": {\n            \"type\": \"integer\",\n            \"description\": \"Index of the snapshot\",\n            \"format\": \"int32\"\n          },\n          \"snapshotLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Height of the block where the snapshot was taken\",\n            \"format\": \"int32\"\n          },\n          \"randomSeed\": {\n            \"type\": \"string\",\n            \"description\": \"Randomly generated seed used by the network for things like baking rights distribution etc.\",\n            \"nullable\": true\n          },\n          \"totalBakers\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of all active in this cycle bakers\",\n            \"format\": \"int32\"\n          },\n          \"totalRolls\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of rolls involved in baking rights distribution\",\n            \"format\": \"int32\"\n          },\n          \"totalStaking\": {\n            \"type\": \"integer\",\n            \"description\": \"Total staking balance of all active in this cycle bakers\",\n            \"format\": \"int64\"\n          },\n          \"totalDelegators\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of active bakers' delegators\",\n            \"format\": \"int32\"\n          },\n          \"totalDelegated\": {\n            \"type\": \"integer\",\n            \"description\": \"Total balance delegated to active bakers\",\n            \"format\": \"int64\"\n          },\n          \"quote\": {\n            \"description\": \"Injected historical quote at the end of the cycle\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QuoteShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"State\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"chain\": {\n            \"type\": \"string\",\n            \"description\": \"Alias name of the chain (or \\\"private\\\" if it's not on the list of known chains)\",\n            \"nullable\": true\n          },\n          \"chainId\": {\n            \"type\": \"string\",\n            \"description\": \"Unique identificator of the chain\",\n            \"nullable\": true\n          },\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Current cycle\",\n            \"format\": \"int32\"\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the last block from the genesis block\",\n            \"format\": \"int32\"\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Block hash\",\n            \"nullable\": true\n          },\n          \"protocol\": {\n            \"type\": \"string\",\n            \"description\": \"Current protocol hash\",\n            \"nullable\": true\n          },\n          \"nextProtocol\": {\n            \"type\": \"string\",\n            \"description\": \"Next block protocol hash\",\n            \"nullable\": true\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The datetime at which the last block is claimed to have been created (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\"\n          },\n          \"votingEpoch\": {\n            \"type\": \"integer\",\n            \"description\": \"Current voring epoch index, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"votingPeriod\": {\n            \"type\": \"integer\",\n            \"description\": \"Current voting period index, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"knownLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the last known block from the genesis block\",\n            \"format\": \"int32\"\n          },\n          \"lastSync\": {\n            \"type\": \"string\",\n            \"description\": \"The datetime of last TzKT indexer synchronization (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\"\n          },\n          \"synced\": {\n            \"type\": \"boolean\",\n            \"description\": \"State of TzKT indexer synchronization\"\n          },\n          \"quoteLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block where quotes were updated last time\",\n            \"format\": \"int32\"\n          },\n          \"quoteBtc\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/BTC price\",\n            \"format\": \"double\"\n          },\n          \"quoteEur\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/EUR price\",\n            \"format\": \"double\"\n          },\n          \"quoteUsd\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/USD price\",\n            \"format\": \"double\"\n          },\n          \"quoteCny\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/CNY price\",\n            \"format\": \"double\"\n          },\n          \"quoteJpy\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/JPY price\",\n            \"format\": \"double\"\n          },\n          \"quoteKrw\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/KRW price\",\n            \"format\": \"double\"\n          },\n          \"quoteEth\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/ETH price\",\n            \"format\": \"double\"\n          },\n          \"quoteGbp\": {\n            \"type\": \"number\",\n            \"description\": \"Last known XTZ/GBP price\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"ProtocolParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a protocol hash to get items where the specified field is equal to the specified value.\\n\\nExample: `?protocol=PsCARTHAGaz...`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a protocol hash to get items where the specified field is not equal to the specified value.\\n\\nExample: `?sender.ne=PsBabyM1eUX...`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of protocol hashes to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?sender.in=PsCARTHAGaz,PsBabyM1eUX`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of protocol hashes to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?sender.ni=PsCARTHAGaz,PsBabyM1eUX`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"MigrationKindParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a migration kind to get items where the specified field is equal to the specified value.\\n\\nExample: `?kind=bootstrap`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a migration kind to get items where the specified field is not equal to the specified value.\\n\\nExample: `?type.ne=proposal_invoice`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of migration kinds to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?sender.in=bootstrap,proposal_invoice`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of migration kinds to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?sender.ni=airdrop,bootstrap`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Protocol\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"description\": \"Protocol code, representing a number of protocol changes since genesis (mod 256, but `-1` for the genesis block)\",\n            \"format\": \"int32\"\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Hash of the protocol\",\n            \"nullable\": true\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Block height where the protocol was applied\",\n            \"format\": \"int32\"\n          },\n          \"firstCycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Index of the first cycle started with the protocol\",\n            \"format\": \"int32\"\n          },\n          \"firstCycleLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the first block of the first cycle started with the protocol\",\n            \"format\": \"int32\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Block height where the protocol ends. `null` if the protocol is active\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"constants\": {\n            \"description\": \"Information about the protocol constants\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ProtocolConstants\"\n              }\n            ]\n          },\n          \"metadata\": {\n            \"description\": \"Offchain metadata\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ProtocolMetadata\"\n              }\n            ]\n          }\n        }\n      },\n      \"ProtocolConstants\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"rampUpCycles\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of cycles where security deposit is ramping up\",\n            \"format\": \"int32\"\n          },\n          \"noRewardCycles\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of cycles with no baking rewards\",\n            \"format\": \"int32\"\n          },\n          \"preservedCycles\": {\n            \"type\": \"integer\",\n            \"description\": \"A number of cycles in which baker's security deposit and rewards are frozen\",\n            \"format\": \"int32\"\n          },\n          \"blocksPerCycle\": {\n            \"type\": \"integer\",\n            \"description\": \"A number of blocks the cycle contains\",\n            \"format\": \"int32\"\n          },\n          \"blocksPerCommitment\": {\n            \"type\": \"integer\",\n            \"description\": \"A number of blocks that indicates how often seed nonce hash is included in a block. Seed nonce hash presents in only one out of `blocksPerCommitment`\",\n            \"format\": \"int32\"\n          },\n          \"blocksPerSnapshot\": {\n            \"type\": \"integer\",\n            \"description\": \"A number of blocks that indicates how often a snapshot (snapshots are records of the state of rolls distributions) is taken\",\n            \"format\": \"int32\"\n          },\n          \"blocksPerVoting\": {\n            \"type\": \"integer\",\n            \"description\": \"A number of block that indicates how long a voting period takes\",\n            \"format\": \"int32\"\n          },\n          \"timeBetweenBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Minimum amount of seconds between blocks\",\n            \"format\": \"int32\"\n          },\n          \"endorsersPerBlock\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of bakers that assigned to endorse a block\",\n            \"format\": \"int32\"\n          },\n          \"hardOperationGasLimit\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum amount of gas that one operation can consume\",\n            \"format\": \"int32\"\n          },\n          \"hardOperationStorageLimit\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum amount of storage that one operation can consume\",\n            \"format\": \"int32\"\n          },\n          \"hardBlockGasLimit\": {\n            \"type\": \"integer\",\n            \"description\": \"Maximum amount of total gas usage of a single block\",\n            \"format\": \"int32\"\n          },\n          \"tokensPerRoll\": {\n            \"type\": \"integer\",\n            \"description\": \"Required number of tokens to get 1 roll (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"revelationReward\": {\n            \"type\": \"integer\",\n            \"description\": \"Reward for seed nonce revelation (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"blockDeposit\": {\n            \"type\": \"integer\",\n            \"description\": \"Security deposit for baking (producing) a block (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"blockReward\": {\n            \"type\": \"array\",\n            \"description\": \"Reward for baking (producing) a block (micro tez)\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"endorsementDeposit\": {\n            \"type\": \"integer\",\n            \"description\": \"Security deposit for sending an endorsement operation (micro tez)\",\n            \"format\": \"int64\"\n          },\n          \"endorsementReward\": {\n            \"type\": \"array\",\n            \"description\": \"Reward for sending an endorsement operation (micro tez)\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"originationSize\": {\n            \"type\": \"integer\",\n            \"description\": \"Initial storage size of an originated (created) account (bytes)\",\n            \"format\": \"int32\"\n          },\n          \"byteCost\": {\n            \"type\": \"integer\",\n            \"description\": \"Cost of one storage byte in the blockchain (micro tez)\",\n            \"format\": \"int32\"\n          },\n          \"proposalQuorum\": {\n            \"type\": \"number\",\n            \"description\": \"Percentage of the total number of rolls required to select a proposal on the proposal period\",\n            \"format\": \"double\"\n          },\n          \"ballotQuorumMin\": {\n            \"type\": \"number\",\n            \"description\": \"The minimum value of quorum percentage on the exploration and promotion periods\",\n            \"format\": \"double\"\n          },\n          \"ballotQuorumMax\": {\n            \"type\": \"number\",\n            \"description\": \"The maximum value of quorum percentage on the exploration and promotion periods\",\n            \"format\": \"double\"\n          },\n          \"lbSubsidy\": {\n            \"type\": \"integer\",\n            \"description\": \"Liquidity baking subsidy is 1/16th of total rewards for a block of priority 0 with all endorsements\",\n            \"format\": \"int32\"\n          },\n          \"lbSunsetLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level after protocol activation when liquidity baking shuts off\",\n            \"format\": \"int32\"\n          },\n          \"lbEscapeThreshold\": {\n            \"type\": \"integer\",\n            \"description\": \"1/2 window size of 2000 blocks with precision of 1000 for integer computation\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"ProtocolMetadata\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Protocol name\",\n            \"nullable\": true\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Protocol hash\",\n            \"nullable\": true\n          },\n          \"docs\": {\n            \"type\": \"string\",\n            \"description\": \"Link to the documentation with explanation of the protocol and changes\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Quote\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"The level of the block at which the quote has been saved\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"The datetime at which the quote has been saved (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\"\n          },\n          \"btc\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/BTC price\",\n            \"format\": \"double\"\n          },\n          \"eur\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/EUR price\",\n            \"format\": \"double\"\n          },\n          \"usd\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/USD price\",\n            \"format\": \"double\"\n          },\n          \"cny\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/CNY price\",\n            \"format\": \"double\"\n          },\n          \"jpy\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/JPY price\",\n            \"format\": \"double\"\n          },\n          \"krw\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/KRW price\",\n            \"format\": \"double\"\n          },\n          \"eth\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/ETH price\",\n            \"format\": \"double\"\n          },\n          \"gbp\": {\n            \"type\": \"number\",\n            \"description\": \"XTZ/GBP price\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"BakerRewards\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Cycle in which rewards have been or will be earned.\",\n            \"format\": \"int32\"\n          },\n          \"stakingBalance\": {\n            \"type\": \"integer\",\n            \"description\": \"Staking balance of the baker at the snapshot time.\",\n            \"format\": \"int64\"\n          },\n          \"delegatedBalance\": {\n            \"type\": \"integer\",\n            \"description\": \"Balance delegated to the baker at the snapshot time (sum of delegators' balances).\",\n            \"format\": \"int64\"\n          },\n          \"numDelegators\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of delegators at the snapshot time.\",\n            \"format\": \"int32\"\n          },\n          \"expectedBlocks\": {\n            \"type\": \"number\",\n            \"description\": \"Expected value of how many blocks baker should produce based on baker's rolls, total rolls and blocks per cycle.\",\n            \"format\": \"double\"\n          },\n          \"expectedEndorsements\": {\n            \"type\": \"number\",\n            \"description\": \"Expected value of how many slots baker should validate based on baker's rolls, total rolls and endorsing slots per cycle.\",\n            \"format\": \"double\"\n          },\n          \"futureBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which baker is allowed to produce in this cycle based on future baking rights.\",\n            \"format\": \"int32\"\n          },\n          \"futureBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of future block rewards.\",\n            \"format\": \"int64\"\n          },\n          \"futureBlockDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of bonds which will be locked as security deposit for future blocks.\",\n            \"format\": \"int64\"\n          },\n          \"ownBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully baked blocks with priority `0`.\",\n            \"format\": \"int32\"\n          },\n          \"ownBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for blocks baked with priority `0`.\",\n            \"format\": \"int64\"\n          },\n          \"extraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully baked blocks with priority `1+`.\",\n            \"format\": \"int32\"\n          },\n          \"extraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for blocks baked with priority `1+`.\",\n            \"format\": \"int64\"\n          },\n          \"missedOwnBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `0` for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedOwnBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing own blocks.\",\n            \"format\": \"int64\"\n          },\n          \"missedExtraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `1+` for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedExtraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredOwnBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `0` due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredOwnBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing own blocks due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredExtraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `1+` due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredExtraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing extra blocks due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"blockDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds which were locked as a security deposit for baking own and extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"futureEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of slots which baker is allowed to validate in this cycle based on future endorsing rights.\",\n            \"format\": \"int32\"\n          },\n          \"futureEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of future endorsing rewards.\",\n            \"format\": \"int64\"\n          },\n          \"futureEndorsementDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of bonds which will be locked as security deposit for future endorsements.\",\n            \"format\": \"int64\"\n          },\n          \"endorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully endorsed slots.\",\n            \"format\": \"int32\"\n          },\n          \"endorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for endorsed slots.\",\n            \"format\": \"int64\"\n          },\n          \"missedEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsing slots which were missed for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing endorsements.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsing slots which were missed due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing endorsements due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"endorsementDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds which were locked as a security deposit for endorsed slots.\",\n            \"format\": \"int64\"\n          },\n          \"ownBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were harvested from successfully baked blocks with priority `0`.\",\n            \"format\": \"int64\"\n          },\n          \"extraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were harvested from successfully baked blocks with priority `1+`.\",\n            \"format\": \"int64\"\n          },\n          \"missedOwnBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing own blocks.\",\n            \"format\": \"int64\"\n          },\n          \"missedExtraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredOwnBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing own blocks (due to lack of bonds).\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredExtraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing extra blocks (due to lack of bonds).\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for detecting double baking (accusing someone of producing two different blocks at the same level).\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for detecting double endorsing (accusing someone of validating two different blocks at the same level).\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"revelationRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for including into a block seed nonce revelation operations.\",\n            \"format\": \"int64\"\n          },\n          \"revelationLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to missing seed nonce revelation.\",\n            \"format\": \"int64\"\n          },\n          \"revelationLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to missing seed nonce revelation.\",\n            \"format\": \"int64\"\n          },\n          \"quote\": {\n            \"description\": \"Injected historical quote at the end of the cycle\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QuoteShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"DelegatorRewards\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Cycle in which rewards have been or will be earned.\",\n            \"format\": \"int32\"\n          },\n          \"balance\": {\n            \"type\": \"integer\",\n            \"description\": \"Delegator balance at the snapshot time.\",\n            \"format\": \"int64\"\n          },\n          \"baker\": {\n            \"description\": \"Baker at the snapshot time.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"stakingBalance\": {\n            \"type\": \"integer\",\n            \"description\": \"Staking balance of the baker at the snapshot time.\",\n            \"format\": \"int64\"\n          },\n          \"expectedBlocks\": {\n            \"type\": \"number\",\n            \"description\": \"Expected value of how many blocks baker should produce based on baker's rolls, total rolls and blocks per cycle.\",\n            \"format\": \"double\"\n          },\n          \"expectedEndorsements\": {\n            \"type\": \"number\",\n            \"description\": \"Expected value of how many slots baker should validate based on baker's rolls, total rolls and endorsing slots per cycle.\",\n            \"format\": \"double\"\n          },\n          \"futureBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which baker is allowed to produce in this cycle based on future baking rights.\",\n            \"format\": \"int32\"\n          },\n          \"futureBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of future block rewards.\",\n            \"format\": \"int64\"\n          },\n          \"ownBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully baked blocks with priority `0`.\",\n            \"format\": \"int32\"\n          },\n          \"ownBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for blocks baked with priority `0`.\",\n            \"format\": \"int64\"\n          },\n          \"extraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully baked blocks with priority `1+`.\",\n            \"format\": \"int32\"\n          },\n          \"extraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for blocks baked with priority `1+`.\",\n            \"format\": \"int64\"\n          },\n          \"missedOwnBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `0` for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedOwnBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing own blocks.\",\n            \"format\": \"int64\"\n          },\n          \"missedExtraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `1+` for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedExtraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredOwnBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `0` due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredOwnBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing own blocks due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredExtraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `1+` due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredExtraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing extra blocks due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"futureEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of slots which baker is allowed to validate in this cycle based on future endorsing rights.\",\n            \"format\": \"int32\"\n          },\n          \"futureEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of future endorsing rewards.\",\n            \"format\": \"int64\"\n          },\n          \"endorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully endorsed slots.\",\n            \"format\": \"int32\"\n          },\n          \"endorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for endorsed slots.\",\n            \"format\": \"int64\"\n          },\n          \"missedEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsing slots which were missed for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing endorsements.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsing slots which were missed due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing endorsements due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"ownBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were harvested from successfully baked blocks with priority `0`.\",\n            \"format\": \"int64\"\n          },\n          \"extraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were harvested from successfully baked blocks with priority `1+`.\",\n            \"format\": \"int64\"\n          },\n          \"missedOwnBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing own blocks.\",\n            \"format\": \"int64\"\n          },\n          \"missedExtraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredOwnBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing own blocks (due to lack of bonds).\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredExtraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing extra blocks (due to lack of bonds).\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for detecting double baking (accusing someone of producing two different blocks at the same level).\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for detecting double endorsing (accusing someone of validating two different blocks at the same level).\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"revelationRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for including into a block seed nonce revelation operations.\",\n            \"format\": \"int64\"\n          },\n          \"revelationLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to missing seed nonce revelation.\",\n            \"format\": \"int64\"\n          },\n          \"revelationLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to missing seed nonce revelation.\",\n            \"format\": \"int64\"\n          },\n          \"quote\": {\n            \"description\": \"Injected historical quote at the end of the cycle\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QuoteShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"RewardSplit\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Cycle in which rewards have been or will be earned.\",\n            \"format\": \"int32\"\n          },\n          \"stakingBalance\": {\n            \"type\": \"integer\",\n            \"description\": \"Staking balance of the baker at the snapshot time.\",\n            \"format\": \"int64\"\n          },\n          \"delegatedBalance\": {\n            \"type\": \"integer\",\n            \"description\": \"Balance delegated to the baker at the snapshot time (sum of delegators' balances).\",\n            \"format\": \"int64\"\n          },\n          \"numDelegators\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of delegators at the snapshot time.\",\n            \"format\": \"int32\"\n          },\n          \"expectedBlocks\": {\n            \"type\": \"number\",\n            \"description\": \"Expected value of how many blocks baker should produce based on baker's rolls, total rolls and blocks per cycle.\",\n            \"format\": \"double\"\n          },\n          \"expectedEndorsements\": {\n            \"type\": \"number\",\n            \"description\": \"Expected value of how many slots baker should validate based on baker's rolls, total rolls and endorsing slots per cycle.\",\n            \"format\": \"double\"\n          },\n          \"futureBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which baker is allowed to produce in this cycle based on future baking rights.\",\n            \"format\": \"int32\"\n          },\n          \"futureBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of future block rewards.\",\n            \"format\": \"int64\"\n          },\n          \"futureBlockDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of bonds which will be locked as security deposit for future blocks.\",\n            \"format\": \"int64\"\n          },\n          \"ownBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully baked blocks with priority `0`.\",\n            \"format\": \"int32\"\n          },\n          \"ownBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for blocks baked with priority `0`.\",\n            \"format\": \"int64\"\n          },\n          \"extraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully baked blocks with priority `1+`.\",\n            \"format\": \"int32\"\n          },\n          \"extraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for blocks baked with priority `1+`.\",\n            \"format\": \"int64\"\n          },\n          \"missedOwnBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `0` for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedOwnBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing own blocks.\",\n            \"format\": \"int64\"\n          },\n          \"missedExtraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `1+` for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedExtraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredOwnBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `0` due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredOwnBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing own blocks due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredExtraBlocks\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of blocks which were missed at priority `1+` due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredExtraBlockRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing extra blocks due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"blockDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds which were locked as a security deposit for baking own and extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"futureEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of slots which baker is allowed to validate in this cycle based on future endorsing rights.\",\n            \"format\": \"int32\"\n          },\n          \"futureEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of future endorsing rewards.\",\n            \"format\": \"int64\"\n          },\n          \"futureEndorsementDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Estimated value of bonds which will be locked as security deposit for future endorsements.\",\n            \"format\": \"int64\"\n          },\n          \"endorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of successfully endorsed slots.\",\n            \"format\": \"int32\"\n          },\n          \"endorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards received for endorsed slots.\",\n            \"format\": \"int64\"\n          },\n          \"missedEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsing slots which were missed for no apparent reason (usually due to issues with network or node).\",\n            \"format\": \"int32\"\n          },\n          \"missedEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing endorsements.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredEndorsements\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of endorsing slots which were missed due to lack of bonds (for example, when a baker is overdelegated).\",\n            \"format\": \"int32\"\n          },\n          \"uncoveredEndorsementRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards which were not received due to missing endorsements due to lack of bonds.\",\n            \"format\": \"int64\"\n          },\n          \"endorsementDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds which were locked as a security deposit for endorsed slots.\",\n            \"format\": \"int64\"\n          },\n          \"ownBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were harvested from successfully baked blocks with priority `0`.\",\n            \"format\": \"int64\"\n          },\n          \"extraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were harvested from successfully baked blocks with priority `1+`.\",\n            \"format\": \"int64\"\n          },\n          \"missedOwnBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing own blocks.\",\n            \"format\": \"int64\"\n          },\n          \"missedExtraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing extra blocks.\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredOwnBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing own blocks (due to lack of bonds).\",\n            \"format\": \"int64\"\n          },\n          \"uncoveredExtraBlockFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Operation fees which were not received due to missing extra blocks (due to lack of bonds).\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for detecting double baking (accusing someone of producing two different blocks at the same level).\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleBakingLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to double baking\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for detecting double endorsing (accusing someone of validating two different blocks at the same level).\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostDeposits\": {\n            \"type\": \"integer\",\n            \"description\": \"Bonds lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"doubleEndorsingLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to double endorsing\",\n            \"format\": \"int64\"\n          },\n          \"revelationRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards for including into a block seed nonce revelation operations.\",\n            \"format\": \"int64\"\n          },\n          \"revelationLostRewards\": {\n            \"type\": \"integer\",\n            \"description\": \"Rewards lost due to missing seed nonce revelation.\",\n            \"format\": \"int64\"\n          },\n          \"revelationLostFees\": {\n            \"type\": \"integer\",\n            \"description\": \"Fees lost due to missing seed nonce revelation.\",\n            \"format\": \"int64\"\n          },\n          \"delegators\": {\n            \"type\": \"array\",\n            \"description\": \"List of delegators at the snapshot time\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SplitDelegator\"\n            }\n          }\n        }\n      },\n      \"SplitDelegator\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Address of the delegator\",\n            \"nullable\": true\n          },\n          \"balance\": {\n            \"type\": \"integer\",\n            \"description\": \"Balance of the delegator at the snapshot time\",\n            \"format\": \"int64\"\n          },\n          \"currentBalance\": {\n            \"type\": \"integer\",\n            \"description\": \"Balance of the delegator at the moment\",\n            \"format\": \"int64\"\n          },\n          \"emptied\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether the delegator is emptied (at the moment, not at the snapshot time).\\nEmptied accounts (users with zero balance) should be re-allocated, so if you make payment to emptied account you will pay (burn) `0.257 tez` allocation fee.\"\n          }\n        }\n      },\n      \"BakingRightTypeParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify baking right type to get items where the specified field is equal to the specified value.\\n\\nExample: `?type=baking`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify baking right type to get items where the specified field is not equal to the specified value.\\n\\nExample: `?type.ne=endorsing`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"BakingRightStatusParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify baking right status to get items where the specified field is equal to the specified value.\\n\\nExample: `?type=future`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify baking right status to get items where the specified field is not equal to the specified value.\\n\\nExample: `?type.ne=missed`.\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"BakingRight\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Type of the right:\\n- `baking` - right to bake (produce) a block;\\n- `endorsing` - right to endorse (validate) a block.\",\n            \"nullable\": true\n          },\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Cycle on which the right can be realized.\",\n            \"format\": \"int32\"\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"Level at which a block must be baked or an endorsement must be sent.\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"Time (estimated, in case of future rights) when a block must be baked or an endorsement must be sent.\",\n            \"format\": \"date-time\"\n          },\n          \"priority\": {\n            \"type\": \"integer\",\n            \"description\": \"Priority (0 - ∞) with which baker can produce a block.\\nIf a baker with priority `0` doesn't produce a block within a given time interval, then the right goes to a baker with priority` 1`, etc.\\nFor `endorsing` rights this field is always `null`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"slots\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of slots (1 - 32) to be endorsed. For `baking` rights this field is always `null`.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"baker\": {\n            \"description\": \"Baker to which baking or endorsing right has been given.\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Status of the baking or endorsing right:\\n- `future` - the right is not realized yet;\\n- `realized` - the right was successfully realized;\\n- `uncovered` - the right was not realized due to lack of bonds (for example, when a baker is overdelegated);\\n- `missed` - the right was not realized for no apparent reason (usually due to issues with network or node).\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"Software\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"shortHash\": {\n            \"type\": \"string\",\n            \"description\": \"Software ID (short commit hash)\",\n            \"nullable\": true\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the first block baked with this software\",\n            \"format\": \"int32\"\n          },\n          \"firstTime\": {\n            \"type\": \"string\",\n            \"description\": \"Datetime of the first block baked with this software\",\n            \"format\": \"date-time\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the last block baked with this software\",\n            \"format\": \"int32\"\n          },\n          \"lastTime\": {\n            \"type\": \"string\",\n            \"description\": \"Datetime of the last block baked with this software\",\n            \"format\": \"date-time\"\n          },\n          \"blocksCount\": {\n            \"type\": \"integer\",\n            \"description\": \"Total number of blocks baked with this software\",\n            \"format\": \"int32\"\n          },\n          \"metadata\": {\n            \"description\": \"Offchain metadata\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/RawJson\"\n              }\n            ]\n          },\n          \"commitDate\": {\n            \"type\": \"string\",\n            \"description\": \"**DEPRECATED**. Use `metadata` instead.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"commitHash\": {\n            \"type\": \"string\",\n            \"description\": \"**DEPRECATED**. Use `metadata` instead.\",\n            \"nullable\": true\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"**DEPRECATED**. Use `metadata` instead.\",\n            \"nullable\": true\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"description\": \"**DEPRECATED**. Use `metadata` instead.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Statistics\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"cycle\": {\n            \"type\": \"integer\",\n            \"description\": \"Cycle at the end of which the statistics has been calculated. This field is only present in cyclic statistics.\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"date\": {\n            \"type\": \"string\",\n            \"description\": \"Day at the end of which the statistics has been calculated. This field is only present in daily statistics.\",\n            \"format\": \"date-time\",\n            \"nullable\": true\n          },\n          \"level\": {\n            \"type\": \"integer\",\n            \"description\": \"Level of the block at which the statistics has been calculated\",\n            \"format\": \"int32\"\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"description\": \"Timestamp of the block at which the statistics has been calculated (ISO 8601, e.g. `2020-02-20T02:40:57Z`)\",\n            \"format\": \"date-time\"\n          },\n          \"totalSupply\": {\n            \"type\": \"integer\",\n            \"description\": \"Total supply - all existing tokens (including locked vested funds and frozen funds) plus not yet activated fundraiser tokens\",\n            \"format\": \"int64\"\n          },\n          \"circulatingSupply\": {\n            \"type\": \"integer\",\n            \"description\": \"Circulating supply - all active tokens which can affect supply and demand (can be spent/transferred)\",\n            \"format\": \"int64\"\n          },\n          \"totalBootstrapped\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of tokens initially created when starting the blockchain\",\n            \"format\": \"int64\"\n          },\n          \"totalCommitments\": {\n            \"type\": \"integer\",\n            \"description\": \"Total commitment amount (tokens to be activated by fundraisers)\",\n            \"format\": \"int64\"\n          },\n          \"totalActivated\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of tokens activated by fundraisers\",\n            \"format\": \"int64\"\n          },\n          \"totalCreated\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of created/issued tokens\",\n            \"format\": \"int64\"\n          },\n          \"totalBurned\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of burned tokens\",\n            \"format\": \"int64\"\n          },\n          \"totalBanished\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of tokens sent to the null-address, which is equivalent to burning\",\n            \"format\": \"int64\"\n          },\n          \"totalVested\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of tokens locked on vested contracts\",\n            \"format\": \"int64\"\n          },\n          \"totalFrozen\": {\n            \"type\": \"integer\",\n            \"description\": \"Total amount of frozen tokens (frozen security deposits, frozen rewards and frozen fees)\",\n            \"format\": \"int64\"\n          },\n          \"quote\": {\n            \"description\": \"Injected historical quote at the time of the block at which the statistics has been calculated\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/QuoteShort\"\n              }\n            ]\n          }\n        }\n      },\n      \"Proposal\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Hash of the proposal, which representing a tarball of concatenated .ml/.mli source files\",\n            \"nullable\": true\n          },\n          \"initiator\": {\n            \"description\": \"Information about the baker (delegate) submitted the proposal\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"firstPeriod\": {\n            \"type\": \"integer\",\n            \"description\": \"The first voting period where the proposal was active\",\n            \"format\": \"int32\"\n          },\n          \"lastPeriod\": {\n            \"type\": \"integer\",\n            \"description\": \"The last voting period where the proposal was active\",\n            \"format\": \"int32\"\n          },\n          \"epoch\": {\n            \"type\": \"integer\",\n            \"description\": \"The voting epoch where the proposal was active\",\n            \"format\": \"int32\"\n          },\n          \"upvotes\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of upvotes (proposal operations)\",\n            \"format\": \"int32\"\n          },\n          \"rolls\": {\n            \"type\": \"integer\",\n            \"description\": \"The total number of rolls, upvoted the proposal\",\n            \"format\": \"int32\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Status of the proposal\\n`active` - the proposal in the active state\\n`accepted` - the proposal was accepted\\n`rejected` - the proposal was rejected due to too many \\\"nay\\\" ballots\\n`skipped` - the proposal was skipped due to the quorum was not reached\",\n            \"nullable\": true\n          },\n          \"metadata\": {\n            \"description\": \"Offchain metadata\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/ProposalMetadata\"\n              }\n            ]\n          },\n          \"period\": {\n            \"type\": \"integer\",\n            \"description\": \"**DEPRECATED**. Use `firstPeriod` instead.\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"ProposalMetadata\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"alias\": {\n            \"type\": \"string\",\n            \"description\": \"Alias name of the proposal\",\n            \"nullable\": true\n          },\n          \"hash\": {\n            \"type\": \"string\",\n            \"description\": \"Hash of the proposal, which representing a tarball of concatenated .ml/.mli source files\",\n            \"nullable\": true\n          },\n          \"agora\": {\n            \"type\": \"string\",\n            \"description\": \"Link to the proposal on Tezos Agora portall with full details\",\n            \"nullable\": true\n          },\n          \"invoice\": {\n            \"type\": \"integer\",\n            \"description\": \"Reward for the proposal developers, that will be generated if the proposal is accepted\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"VotingPeriod\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"index\": {\n            \"type\": \"integer\",\n            \"description\": \"Index of the voting period, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"epoch\": {\n            \"type\": \"integer\",\n            \"description\": \"Index of the voting epoch, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block in which the period starts\",\n            \"format\": \"int32\"\n          },\n          \"startTime\": {\n            \"type\": \"string\",\n            \"description\": \"The timestamp of the block in which the period starts\",\n            \"format\": \"date-time\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block in which the period ends\",\n            \"format\": \"int32\"\n          },\n          \"endTime\": {\n            \"type\": \"string\",\n            \"description\": \"The timestamp of the block in which the period ends\",\n            \"format\": \"date-time\"\n          },\n          \"kind\": {\n            \"type\": \"string\",\n            \"description\": \"Kind of the voting period:\\n`proposal` - delegates can submit protocol amendment proposals using the proposal operation\\n`exploration` -  bakers (delegates) may vote on the top-ranked proposal from the previous Proposal Period using the ballot operation\\n`testing` - If the proposal is approved in the Exploration Period, the testing (or 'cooldown') period begins and bakers start testing the new protocol\\n`promotion` - delegates can cast one vote to promote or not the tested proposal using the ballot operation\\n`adoption` - after the proposal is actually accepted, the ecosystem has some time to prepare to the upgrade\\nLearn more: https://tezos.gitlab.io/whitedoc/voting.html\",\n            \"nullable\": true\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Status of the voting period:\\n`active` - means that the voting period is in progress\\n`no_proposals` - means that there were no proposals during the voting period\\n`no_quorum` - means that there was a voting but the quorum was not reached\\n`no_supermajority` - means that there was a voting but the supermajority was not reached\\n`success` - means that the period was finished with positive voting result\",\n            \"nullable\": true\n          },\n          \"totalBakers\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of bakers on the voters list\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"totalRolls\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of rolls of bakers on the voters list\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"upvotesQuorum\": {\n            \"type\": \"number\",\n            \"description\": \"Upvotes quorum percentage (only for proposal period)\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"proposalsCount\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of proposals injected during the voting period (only for proposal period)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"topUpvotes\": {\n            \"type\": \"integer\",\n            \"description\": \"This is how many upvotes (proposal operations) the most upvoted proposal has (only for proposal period)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"topRolls\": {\n            \"type\": \"integer\",\n            \"description\": \"This is how many rolls the most upvoted proposal has (only for proposal period)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"ballotsQuorum\": {\n            \"type\": \"number\",\n            \"description\": \"Ballots quorum percentage (only for exploration and promotion periods)\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"supermajority\": {\n            \"type\": \"number\",\n            \"description\": \"Supermajority percentage (only for exploration and promotion periods)\",\n            \"format\": \"double\",\n            \"nullable\": true\n          },\n          \"yayBallots\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of the ballots with \\\"yay\\\" vote (only for exploration and promotion periods)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"yayRolls\": {\n            \"type\": \"integer\",\n            \"description\": \"Total rolls of the ballots with \\\"yay\\\" vote (only for exploration and promotion periods)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"nayBallots\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of the ballots with \\\"nay\\\" vote (only for exploration and promotion periods)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"nayRolls\": {\n            \"type\": \"integer\",\n            \"description\": \"Total rolls of the ballots with \\\"nay\\\" vote (only for exploration and promotion periods)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"passBallots\": {\n            \"type\": \"integer\",\n            \"description\": \"The number of the ballots with \\\"pass\\\" vote (only for exploration and promotion periods)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          },\n          \"passRolls\": {\n            \"type\": \"integer\",\n            \"description\": \"Total rolls of the ballots with \\\"pass\\\" vote (only for exploration and promotion periods)\",\n            \"format\": \"int32\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"VoterSnapshot\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"delegate\": {\n            \"description\": \"Voter identity\",\n            \"nullable\": true,\n            \"oneOf\": [\n              {\n                \"$ref\": \"#/components/schemas/Alias\"\n              }\n            ]\n          },\n          \"rolls\": {\n            \"type\": \"integer\",\n            \"description\": \"Voter's rolls snapshot (aka voting power)\",\n            \"format\": \"int32\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Voter's status:\\n`none` - the voter did nothing\\n`upvoted` - the voter upvoted at least one proposal\\n`voted_yay` - the voter voted \\\"yay\\\"\\n`voted_nay` - the voter voted \\\"nay\\\"\\n`voted_pass` - the voter voted \\\"pass\\\"\",\n            \"nullable\": true\n          }\n        }\n      },\n      \"VoterStatusParameter\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"eq\": {\n            \"type\": \"string\",\n            \"description\": \"**Equal** filter mode (optional, i.e. `param.eq=123` is the same as `param=123`). \\\\\\nSpecify a voter status to get items where the specified field is equal to the specified value.\\n\\nExample: `?status=none`.\",\n            \"nullable\": true\n          },\n          \"ne\": {\n            \"type\": \"string\",\n            \"description\": \"**Not equal** filter mode. \\\\\\nSpecify a voter status to get items where the specified field is not equal to the specified value.\\n\\nExample: `?status.ne=none`.\",\n            \"nullable\": true\n          },\n          \"in\": {\n            \"type\": \"array\",\n            \"description\": \"**In list** (any of) filter mode. \\\\\\nSpecify a comma-separated list of voter statuses to get items where the specified field is equal to one of the specified values.\\n\\nExample: `?status.in=voted_yay,voted_nay`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ni\": {\n            \"type\": \"array\",\n            \"description\": \"**Not in list** (none of) filter mode. \\\\\\nSpecify a comma-separated list of voter statuses to get items where the specified field is not equal to all the specified values.\\n\\nExample: `?status.ni=none,upvoted`.\",\n            \"nullable\": true,\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"VotingEpoch\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"index\": {\n            \"type\": \"integer\",\n            \"description\": \"Index of the voting epoch, starting from zero\",\n            \"format\": \"int32\"\n          },\n          \"firstLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block in which the epoch starts\",\n            \"format\": \"int32\"\n          },\n          \"startTime\": {\n            \"type\": \"string\",\n            \"description\": \"The timestamp of the block in which the epoch starts\",\n            \"format\": \"date-time\"\n          },\n          \"lastLevel\": {\n            \"type\": \"integer\",\n            \"description\": \"The height of the block in which the epoch ends\",\n            \"format\": \"int32\"\n          },\n          \"endTime\": {\n            \"type\": \"string\",\n            \"description\": \"The timestamp of the block in which the epoch ends\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Status of the voting epoch:\\n`no_proposals` - there were no proposals proposed\\n`voting` - there was at least one proposal and the voting is in progress\\n`completed` - voting successfully completed and the proposal was accepted\\n`failed` - voting was not completed due to either quorum or supermajority was not reached\",\n            \"nullable\": true\n          },\n          \"periods\": {\n            \"type\": \"array\",\n            \"description\": \"Voting periods in the epoch\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/VotingPeriod\"\n            }\n          },\n          \"proposals\": {\n            \"type\": \"array\",\n            \"description\": \"Proposals pushed during the voting epoch (null, if there were no proposals).\",\n            \"nullable\": true,\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Proposal\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"tags\": [\n    {\n      \"name\": \"TzKT Events\",\n      \"description\": \"TzKT Events is a WebSocket API based on [SignalR](https://docs.microsoft.com/aspnet/signalr/overview/getting-started/introduction-to-signalr)\\nthat enables receiving data from the Tezos blockchain in real-time.\\n\\nThis is a very useful feature, especially when you need to receive updates immediately, as soon as they appear on the node and are indexed by the indexer.\\nAlso it allows to significantly simplify client's logic responsible for updating/synchronizing data.\\n\\nEvents base URL: `https://{baseUrl}/v1/events`\\n\\n## Message types\\n\\nAfter connecting to the WebSocket and subscribing to some events the client starts receiving messages from the server.\\nThere are three message types that the server sends to the client:\\n\\n#### 1. State message\\n\\n````js\\n{\\n\\ttype: 0,    // 0 - state message\\n\\tstate: 0    // subscription state\\n}\\n````\\n\\nThis is the very first message the client receives from the server after opening a subscription. \\nThis message is a kind of confirmation that the subscription has been successfully processed.\\n\\nThere is just one meaningful field - `state`, that represents current state of the subscription.\\nThe type of that field depends on a particular subscription (see documentation on each subscription).\\nFor example, if you subscribe to new blocks, the `state` will contain a level of the last sent block.\\nSo if you receive a state message with `state: 1300123`, the next block you may expect to receive will be `1300124`.\\n\\nState can be used to fetch historical data from the REST API right after opening a subscription, so that there will be no nor misses nor duplicates.\\n\\n#### 2. Data message\\t  \\n\\n````js\\n{\\n\\ttype: 1,    // 1 - data message\\n\\tstate: 0,   // subscription state\\n\\tdata: {}    // data: object or array, depending on subscription\\n}\\n````\\n\\nAfter subscription is registered and state message is received, client will receive data messages. As you can see, `data` is an array (array of\\nblocks, operations, or whatever you have subscribed to), that means you may receive multiple items in a single message,\\nwhich is great for performance and network traffic.\\n\\nTzKT Events operates with the same data models as the REST API to achieve full compatibility and data consistency.\\n\\n#### 3. Reorg message\\t\\n\\n````js\\n{\\t\\t\\t  \\n\\ttype: 2,    // 2 - reorg message\\n\\tstate: 0    // subscription state\\n}\\n````\\n\\nReorg messages signal about chain reorganizations, when some blocks, including all operations, are rolled back\\nin favor of blocks with higher weight.  Chain reorgs happen quite often, so it's not something you can ignore.\\nYou have to handle such messages correctly, otherwise you will likely accumulate duplicate data or, worse, invalid data.\\n\\nFor example, if you receive blocks `10`, `11`, `12`, `13` and then receive reorg message with `state: 11`,\\nyou should remove blocks `12` and `13` (if you saved them) as they are no longer valid.\"\n    },\n    {\n      \"name\": \"Subscriptions\",\n      \"description\": \"## SubscribeToHead\\n\\nSends the blockchain head every time it is changed.\\n\\t\\t\\n### Method \\n\\n`SubscribeToHead`\\n\\n### Channel \\n\\n`head`\\n\\n### Parameters\\n\\nNo parameters.\\n\\n### Data model\\n\\nSame as in [/head](#tag/Head)\\n\\n### State\\n\\nState contains level (`int`) of the last processed head.\\n\\n### Example\\n\\n````js\\nconnection.on(\\\"head\\\", (msg) =\u003e { console.log(msg); });\\nawait connection.invoke(\\\"SubscribeToHead\\\");\\n````\\n\\n---\\n\\n## SubscribeToBlocks  \\n\\nSends blocks added to the blockchain\\n\\t\\t\\n### Method \\n\\n`SubscribeToBlocks`\\n\\n### Channel \\n\\n`blocks`\\n\\n### Parameters\\n\\nNo parameters.\\n\\n### Data model\\n\\nSame as in [/blocks](#operation/Blocks_GetHead)\\n\\n### State\\n\\nState contains level (`int`) of the last processed block.\\n\\n### Example\\n\\n````js\\nconnection.on(\\\"blocks\\\", (msg) =\u003e { console.log(msg); });\\nawait connection.invoke(\\\"SubscribeToBlocks\\\");\\n````\\n\\n---\\n\\n## SubscribeToAccount\\n\\nSends touched accounts (affected by any operation in any way).\\n\\n### Method\\n\\n`SubscribeToAccounts`\\n\\n### Channel\\n\\n`accounts`\\n\\n### Parameters\\n\\n````js\\n{\\n\\taddresses: [], // [required] array of address you want to subscribe to\\n}\\n````\\n\\n\u003e **Note:** you can invoke this method multiple times with different parameters to register multiple subscriptions.\\n\\n### Data model\\n\\nSame as in [/accounts/{address}](#operation/Accounts_GetByAddress).\\n\\n### State\\n\\nState contains level (`int`) of the last processed block.\\n\\n### Example\\n\\n````js\\nconnection.on(\\\"accounts\\\", (msg) =\u003e { console.log(msg); });\\n// subscribe to an account\\nawait connection.invoke(\\\"SubscribeToAccounts\\\", { addresses: [ 'tz1234...' ] });\\n````\\n\\n---\\t\\t\\t\\n\\n## SubscribeToOperations \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\nSends operations of specified types or related to specified accounts, included into the blockchain\\n\\t\\t\\n### Method \\n\\n`SubscribeToOperations`\\n\\n### Channel \\n\\n`operations`\\n\\n### Parameters\\n\\n````js\\n{\\n\\taddress: '', // address you want to subscribe to,\\n\\t             // or null if you want to subscribe for all operations\\n\\n\\ttypes: ''    // comma-separated list of operation types, any of:\\n\\t             // 'transaction', 'origination', 'delegation', 'reveal'\\n\\t\\t\\t\\t // 'double_baking', 'double_endorsing', 'nonce_revelation', 'activation'\\n\\t\\t\\t\\t // 'proposal', 'ballot', 'endorsement.\\n}\\n````\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t \\n\u003e **Note:** you can invoke this method multiple times with different parameters to register multiple subscriptions.\\n\\n### Data model\\n\\nSame as in [/operations/transactions](#operation/Operations_GetTransactions), [/operations/delegations](#operation/Operations_GetDelegations), etc.\\n\\n### State\\n\\nState contains level (`int`) of the last processed block.\\n\\n### Example\\n\\n````js\\nconnection.on(\\\"operations\\\", (msg) =\u003e { console.log(msg); });\\n// subscribe to all transactions\\nawait connection.invoke(\\\"SubscribeToOperations\\\", { types: 'transaction' });\\n// subscribe to all delegations and originations related to the address 'tz1234...'\\nawait connection.invoke(\\\"SubscribeToOperations\\\", { address: 'tz1234...', types: 'delegation,origination' });\\n````\\n\\n---\\t\\t\\t\\n\\n## SubscribeToBigMaps \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  \\nSends bigmap updates\\n\\t\\t\\n### Method \\n\\n`SubscribeToBigMaps`\\n\\n### Channel \\n\\n`bigmaps`\\n\\n### Parameters\\n\\nThis method accepts the following parameters:\\n\\n````js\\n{\\n\\tptr: 0,         // ptr of the bigmap you want to subscribe to\\n\\ttags: [],       // array of bigmap tags ('metadata' or 'token_metadata')\\n\\tcontract: '',   // contract address\\n\\tpath: ''        // path to the bigmap in the contract strage\\n}\\n````\\n\\nYou can set various combinations of these fields to configure what you want to subscribe to. For example:\\n\\n````js\\n// subscribe to all bigmaps\\n{\\n}\\t \\n\\n// subscribe to all bigmaps with specific tags\\n{\\t\\t\\n\\ttags: ['metadata', 'token_metadata']\\n}\\n\\n// subscribe  to all bigmaps of the specific contract\\n{\\n\\tcontract: 'KT1...'\\n}\\n\\n// subscribe to all bigmaps of the specific contract with specific tags\\n{\\n\\tcontract: 'KT1...',\\n\\ttags: ['metadata']\\n}\\n\\n// subscribe to specific bigmap by ptr\\n{\\n\\tptr: 123\\n}\\n\\t\\n// subscribe to specific bigmap by path\\n{\\n\\tcontract: 'KT1...',\\n\\tpath: 'ledger'\\n}\\n````\\n\\n\u003e **Note:** you can invoke this method multiple times with different parameters to register multiple subscriptions.\\n\\n### Data model\\n\\nSame as in [/bigmaps/updates](#operation/BigMaps_GetBigMapUpdates).\\n\\n### State\\n\\nState contains level (`int`) of the last processed block.\\n\\n### Example\\n\\n````js\\nconnection.on(\\\"bigmaps\\\", (msg) =\u003e { console.log(msg); });\\n// subscribe to all bigmaps of the 'KT123...' contract\\nawait connection.invoke(\\\"SubscribeToBigMaps\\\", { contract: 'KT123...' });\\n// subscribe to bigmap with ptr 123\\nawait connection.invoke(\\\"SubscribeToBigMaps\\\", { ptr: 123 });\\n````\\n\\n---\"\n    },\n    {\n      \"name\": \"Examples\",\n      \"description\": \"Here are some examples of a simple client app in different languages.\\n\\n## C# simple client\\n\\nInstall SignalR package:\\n\\n````sh\\n\u003e dotnet add package Microsoft.AspNetCore.SignalR.Client\\n// if you use .NET 5.0 you will likely also need:\\n\u003e dotnet add package System.Text.Encodings.Web\\n````\\n\\nSee more details [here](https://docs.microsoft.com/aspnet/core/tutorials/signalr).\\n\\n````cs\\nusing System;\\nusing System.Text.Json;\\nusing System.Threading.Tasks;\\nusing Microsoft.AspNetCore.SignalR.Client;\\n\\nnamespace TestConsoleCore\\n{\\n    class Program\\n    {\\n        static async Task Main(string[] args)\\n        {\\n            var connection = new HubConnectionBuilder()\\n                .WithUrl(\\\"https://api.tzkt.io/v1/events\\\")\\n                .Build();\\n\\n            async Task Init(Exception arg = null)\\n            {\\n                // open connection\\n                await connection.StartAsync();\\n                // subscribe to head\\n                await connection.InvokeAsync(\\\"SubscribeToHead\\\");\\n                // subscribe to account transactions\\n                await connection.InvokeAsync(\\\"SubscribeToOperations\\\", new\\n                {\\n                    address = \\\"KT19kgnqC5VWoxktLRdRUERbyUPku9YioE8W\\\",\\n                    types = \\\"transaction\\\"\\n                });\\n            }\\n\\n            // auto-reconnect\\n            connection.Closed += Init;\\n\\n            connection.On(\\\"head\\\", (JsonElement msg) =\u003e\\n            {\\n                Console.WriteLine(msg.GetRawText());\\n            });\\n\\n            connection.On(\\\"operations\\\", (JsonElement msg) =\u003e\\n            {\\n                Console.WriteLine(msg.GetRawText());\\n            });\\n\\n            await Init();\\n\\n            Console.ReadLine();\\n\\n            connection.Closed -= Init;\\n            await connection.StopAsync();\\n            await connection.DisposeAsync();\\n        }\\n    }\\n}\\n````\\n\\n---\\n\\n## JS simple client\\n\\nInstall SignalR package via npm:\\n\\n````sh\\n\u003e npm install @microsoft/signalr\\n\\nconst signalR = require(\\\"@microsoft/signalr\\\");\\n````\\n\\nor via CDN:\\n      \\n````sh\\n\u003cscript src=\\\"https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js\\\"\u003e\u003c/script\u003e\\n````\\n\\nSee more details [here](https://docs.microsoft.com/aspnet/core/signalr/javascript-client).\\n\\n````js\\nconst connection = new signalR.HubConnectionBuilder()\\n\\t.withUrl(\\\"https://api.tzkt.io/v1/events\\\")\\n\\t.build();\\n\\nasync function init() {\\n\\t// open connection\\n\\tawait connection.start();\\n\\t// subscribe to head\\n\\tawait connection.invoke(\\\"SubscribeToHead\\\");\\n\\t// subscribe to account transactions\\n\\tawait connection.invoke(\\\"SubscribeToOperations\\\", {\\n\\t\\taddress: 'KT19kgnqC5VWoxktLRdRUERbyUPku9YioE8W',\\n\\t\\ttypes: 'transaction'\\n\\t});\\n};\\n\\n// auto-reconnect\\nconnection.onclose(init);\\n\\nconnection.on(\\\"head\\\", (msg) =\u003e {\\n\\tconsole.log(msg);\\t\\t\\t\\n});\\n\\nconnection.on(\\\"operations\\\", (msg) =\u003e {\\n\\tconsole.log(msg);\\t\\t\\t\\n});\\n\\ninit();\\n````\\n\\n---\\n\\n## Python simple client\\n\\nInstall SignalR package via pypi:\\n\\n````sh\\n\u003e pip install signalrcore\\n````\\n\\nSee more details [here](https://github.com/mandrewcito/signalrcore#signalr-core-client).\\n\\n````python\\nfrom signalrcore.hub_connection_builder import HubConnectionBuilder\\nfrom time import sleep\\nfrom pprint import pprint\\n\\nconnection = HubConnectionBuilder()\\\\\\n    .with_url('https://api.tzkt.io/v1/events')\\\\\\n    .with_automatic_reconnect({\\n        \\\"type\\\": \\\"interval\\\",\\n        \\\"keep_alive_interval\\\": 10,\\n        \\\"intervals\\\": [1, 3, 5, 6, 7, 87, 3]\\n    })\\\\\\n    .build()\\n  \\ndef init():\\n    print(\\\"connection established, subscribing to blocks and operations\\\")\\n    connection.send('SubscribeToHead', [])\\n    connection.send('SubscribeToOperations', \\n                    [{'address': 'KT1RJ6PbjHpwc3M5rw5s2Nbmefwbuwbdxton', \\n                      'types': 'transaction'}])\\n\\nconnection.on_open(init)\\nconnection.on(\\\"head\\\", pprint)\\nconnection.on(\\\"operations\\\", pprint)\\n\\nconnection.start()\\n\\ntry:\\n    while True:\\n        sleep(1)\\nexcept KeyboardInterrupt:\\n    pass\\nfinally:\\n    print('shutting down...')\\n    connection.stop()\\n````\"\n    }\n  ],\n  \"x-tagGroups\": [\n    {\n      \"name\": \"REST API\",\n      \"tags\": [\n        \"Accounts\",\n        \"BigMaps\",\n        \"Blocks\",\n        \"Commitments\",\n        \"Constants\",\n        \"Contracts\",\n        \"Cycles\",\n        \"Delegates\",\n        \"Head\",\n        \"Operations\",\n        \"Protocols\",\n        \"Quotes\",\n        \"Rewards\",\n        \"Rights\",\n        \"Software\",\n        \"Statistics\",\n        \"Voting\"\n      ]\n    },\n    {\n      \"name\": \"WebSocket API\",\n      \"tags\": [\n        \"TzKT Events\",\n        \"Subscriptions\",\n        \"Examples\"\n      ]\n    }\n  ]\n}",
			"canonicalURL": "/github.com/asbjornenge/tzkt-api@7138ba3161af818114ddcc9f105a23b22cafadf3/-/blob/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/asbjornenge/tzkt-api/blob/7138ba3161af818114ddcc9f105a23b22cafadf3/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/accounts\": get: operation \"Accounts_Get\": parameters: parse parameter \"type\": at 33:11: all oneOf schemas must be simple types"
}