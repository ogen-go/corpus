{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/pagopa/openapi-codegen-ts"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "__mocks__/openapi_v3/api.yaml",
			"byteSize": 23034,
			"content": "openapi: 3.0.1\ninfo:\n  title: Test API\n  description: Test API.\n  version: 1.0.0\nservers:\n- url: https://localhost/api/v1\npaths:\n  /test-auth-bearer:\n    get:\n      operationId: testAuthBearer\n      parameters:\n      - name: qo\n        in: query\n        schema:\n          type: string\n      - name: qr\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: cursor\n        in: query\n        description: An opaque identifier that points to the next item in the collection.\n        schema:\n          minimum: 1\n          type: string\n      responses:\n        200:\n          description: Will send `Authenticated`\n        403:\n          description: You do not have necessary permissions for the resource\n      security:\n      - bearerToken: []\n  /test-auth-bearer-http:\n    get:\n      operationId: testAuthBearerHttp\n      parameters:\n      - name: qo\n        in: query\n        schema:\n          type: string\n      - name: qr\n        in: query\n        required: true\n        schema:\n          type: string\n      - name: cursor\n        in: query\n        description: An opaque identifier that points to the next item in the collection.\n        schema:\n          minimum: 1\n          type: string\n      responses:\n        200:\n          description: Will send `Authenticated`\n        403:\n          description: You do not have necessary permissions for the resource\n      security:\n      - bearerTokenHttp: []\n  /test-simple-token:\n    get:\n      operationId: \"testSimpleToken\"\n      security:\n        - simpleToken: []\n      parameters:\n        - name: \"qo\"\n          in: \"query\"\n          required: false\n          schema:\n            type: \"string\"\n        - name: \"qr\"\n          in: \"query\"\n          required: true\n          schema:\n            type: \"string\"\n        - $ref: \"#/components/parameters/PaginationRequest\"\n      responses:\n        \"200\":\n          description: \"Will send `Authenticated`\"\n        \"403\":\n          description: \"You do not have necessary permissions for the resource\"      \n  /test-multiple-success:\n    get:\n      operationId: \"testMultipleSuccess\"\n      responses:\n        \"200\":\n          description: \"Will return a Message\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Message\"\n        \"202\":\n          description: \"Will return just accepted\"\n        \"403\":\n          description: \"You do not have necessary permissions for the resource\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OneOfTest\"\n        \"404\":\n          description: \"Not found\"\n  /test-file-upload:\n    post:\n      operationId: \"testFileUpload\"\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: \"File uploaded\"\n  /test-binary-file-upload:\n    post:\n      operationId: \"testBinaryFileUpload\"\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  type: string\n                  format: binary\n      responses:\n        \"200\":\n          description: \"File uploaded\"\n  /test-binary-file-download:\n    get:\n      operationId: testBinaryFileDownload\n      responses:\n        '200':\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n                example: 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\n  /test-response-header:\n    get:\n      operationId: \"testResponseHeader\"\n      responses:\n        \"201\":\n          description: \"Will create a Message\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Message\"\n          headers:\n            Location:\n              type: string\n            Id:\n              type: string\n        \"500\":\n          description: \"Fatal error\"\n  /test-parameter-with-reference:\n    post:\n      operationId: \"testParameterWithReference\"\n      parameters:\n        - $ref: \"#/components/parameters/RequestId\"\n      responses:\n        201:\n          description: \"Created\"\n        500:\n          description: \"Fatal error\"   \n  /test-parameter-with-body-ref:\n    post:\n      operationId: \"testParameterWithBodyReference\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewModel\"\n      responses:\n        201:\n          description: \"Created\"\n        500:\n          description: \"Fatal error\"   \n  /put-test-parameter-with-body-ref:\n    put:\n      operationId: \"putTestParameterWithBodyReference\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/NewModel\"\n      responses:\n        201:\n          description: \"Created\"\n        500:\n          description: \"Fatal error\" \n  /test-parameter-with-dash/{path-param}:\n    get:\n      operationId: \"testParameterWithDash\"\n      parameters:\n        - name: path-param\n          in: path\n          schema: \n            type: string\n        - name: foo-bar\n          in: query\n          schema:\n            type: string\n        - name: headerInlineParam\n          in: header\n          required: true\n          schema:\n            type: string\n        - $ref: \"#/components/parameters/RequestId\"\n        - $ref: \"#/components/parameters/HeaderParamWithReference\"\n      responses:\n        \"200\":\n          description: \"Ok\"\n        \"500\":\n          description: \"Fatal error\" \n  /test-parameter-with-dash-and_underscore/{path-param}:\n    get:\n      operationId: \"testParameterWithDashAnUnderscore\"\n      parameters:\n        - name: path-param\n          in: path\n          schema:\n            type: string\n        - name: foo_bar\n          in: query\n          schema:\n            type: string\n        - name: headerInlineParam\n          in: header\n          schema:\n            type: string\n          required: true\n        - $ref: \"#/components/parameters/RequestId\"\n        - $ref: \"#/components/parameters/HeaderParamWithReference\"\n      responses:\n        \"200\":\n          description: \"Ok\"\n        \"500\":\n          description: \"Fatal error\"    \n  /test-two-path-params/{first-param}/{second-param}:\n    get:\n      operationId: \"testWithTwoParams\"\n      parameters:\n        - name: first-param\n          in: path\n          schema:\n            type: string\n        - name: second-param\n          in: path\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: \"Ok\"\n        \"500\":\n          description: \"Fatal error\" \n  /test-path-level-parameter:\n    parameters:\n      - $ref: \"#/components/parameters/RequiredRequestId\"\n      - $ref: \"#/components/parameters/PaginationRequest\"\n    get:\n      operationId: \"testParametersAtPathLevel\"\n      description: when we declare parameters at path level\n      responses:\n        \"200\":\n          description: \"Ok\"\n        \"500\":\n          description: \"Fatal error\"  \n  /test-simple:\n    patch:\n      operationId: \"testSimplePatch\"\n      description: simply test of patch endpoint are considered\n      responses:\n        \"200\":\n          description: \"Ok\"\n        \"500\":\n          description: \"Fatal error\"  \n  /test-custom-token-header:\n    get:\n      operationId: \"testCustomTokenHeader\"\n      security:\n        - customToken: []\n      parameters: []\n      responses:\n        \"200\":\n          description: \"Will send `Authenticated`\"\n        \"403\":\n          description: \"You do not have necessary permissions for the resource\"\n  /test-with-empty-response:\n    get:\n      operationId: \"testWithEmptyResponse\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/NotFound\"\n          \n# -------------\n# Components\n# -------------\ncomponents:\n\n  # -------------\n  # Schemas\n  # -------------\n  schemas:\n\n    Person:\n      $ref: \"definitions.yaml#/Person\"\n    Book:\n      $ref: \"definitions.yaml#/Book\"\n\n    FiscalCode:   \n      type: string\n      description: User's fiscal code.\n      pattern: \"^[A-Z]{6}[0-9LMNPQRSTUV]{2}[ABCDEHLMPRST][0-9LMNPQRSTUV]{2}[A-Z][0-9LMNPQRSTUV]{3}[A-Z]$\"\n      example: SPNDNL80R13C555X\n    EmailAddress:\n      type: string\n      format: email\n      example: foobar@example.com\n    IsInboxEnabled:\n      type: boolean\n      default: false\n      description: True if the recipient of a message wants to store its content for\n        later retrieval.\n    IsWebhookEnabled:\n      type: boolean\n      default: false\n      description: True if the recipient of a message wants to forward the notifications to the default webhook.\n    Profile:\n      title: Profile\n      description: Describes the user's profile.\n      type: object\n      properties:\n        email:\n          $ref: \"#/components/schemas/EmailAddress\"\n        family_name:\n          type: string\n        fiscal_code:\n          $ref: \"#/components/schemas/FiscalCode\"\n        has_profile:\n          type: boolean\n        is_email_set:\n          type: boolean\n        is_inbox_enabled:\n          $ref: \"#/components/schemas/IsInboxEnabled\"\n        is_webhook_enabled:\n          $ref: \"#/components/schemas/IsWebhookEnabled\"\n        name:\n          type: string\n        preferred_email:\n          $ref: \"#/components/schemas/EmailAddress\"\n        preferred_languages:\n          $ref: \"#/components/schemas/PreferredLanguages\"\n        version:\n          type: integer\n        payload:\n          type: object\n          properties: {}\n      required:\n        - fiscal_code\n        - family_name\n        - has_profile\n        - is_email_set\n        - name\n        - version\n    SimpleDefinition:\n      title: SimpleDefinition\n      type: object\n      properties:\n        id:\n          type: string\n      required:\n        - id\n    DefinitionFieldWithDash:\n      type: object\n      properties:\n        id-field:\n          type: string\n    MessageSubject:\n      type: string\n      description: |-\n        The (optional) subject of the message - note that only some notification\n        channels support the display of a subject. When a subject is not provided,\n        one gets generated from the client attributes.\n      minLength: 10\n      maxLength: 120\n      example: Welcome new user !\n    MessageBodyMarkdown:\n      type: string\n      description: |-\n        The full version of the message, in plain text or Markdown format. The\n        content of this field will be delivered to channels that don't have any\n        limit in terms of content size (e.g. email, etc...).\n      minLength: 80\n      maxLength: 10000\n      example: |-\n        # This is a markdown header\n\n        to show how easily markdown can be converted to **HTML**\n\n        Remember: this has to be a long text.\n    MessageContent:\n      type: object\n      properties:\n        subject:\n          $ref: \"#/components/schemas/MessageSubject\"\n        markdown:\n          $ref: \"#/components/schemas/MessageBodyMarkdown\"\n      required:\n        - markdown\n    Message:\n      title: Message\n      type: object\n      properties:\n        id:\n          type: string\n        content:\n          $ref: \"#/components/schemas/MessageContent\"\n        sender_service_id:\n          type: string\n      required:\n        - id\n        - content\n    NewModel:\n      title: NewModel\n      type: object\n      properties:\n        id: \n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n    PaginationResponse:\n      type: object\n      description: Pagination response parameters.\n      properties:\n        page_size:\n          type: integer\n          minimum: 1\n          description: Number of items returned for each page.\n          example: 2\n        next:\n          type: string\n          description: 'Contains an URL to GET the next #\u003cpage_size\u003e results in the\n            retrieved collection of items.'\n          format: uri\n          example: https://example.com/?p=0XXX2\n    OneOfTest:\n      oneOf:\n        - type: object\n          properties:\n            limited:\n              type: boolean\n        - type: object\n          properties:\n            unlimited:\n              type: boolean\n    AllOfWithOneElementTest:\n      description: test if we can use allOf with just one element inside\n      allOf:\n        - type: object\n          properties:\n            key: \n              type: string\n    AllOfWithOneRefElementTest:\n      description: test if we can use allOf with just ref one element inside\n      allOf:\n        - $ref: \"#/components/schemas/Profile\"\n    AllOfWithXExtensibleEnum:\n      description: test if allOf with x-extensible-enum works fine \n      allOf:\n        - $ref: \"#/components/schemas/Profile\"\n        - type: object\n          properties:\n            status:\n              type: string\n              x-extensible-enum:\n                - ACTIVATED\n          required:\n            - status\n    AllOfTest:\n      allOf:\n        - type: object\n          properties:\n            items:\n              type: array\n              items:\n                $ref: \"#/components/schemas/Message\"\n        - $ref: \"#/components/schemas/PaginationResponse\"\n    PreferredLanguage:\n      type: string\n      x-extensible-enum:\n        - it_IT\n        - en_GB\n        - es_ES\n        - de_DE\n        - fr_FR\n      example: it_IT\n    PreferredLanguages:\n      type: array\n      items:\n        $ref: \"#/components/schemas/PreferredLanguage\"\n      description: Indicates the User's preferred written or spoken languages in order\n        of preference. Generally used for selecting a localized User interface. Valid\n        values are concatenation of the ISO 639-1 two letter language code, an underscore,\n        and the ISO 3166-1 2 letter country code; e.g., 'en_US' specifies the language\n        English and country US.\n    AnObjectWithAnItemsField:\n      description: |-\n        What if a object has a field named items?\n        The case is an object like { items: [] }, which is legal\n      type: object\n      properties:\n        items:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DefinitionFieldWithDash\"\n      required:\n        - items\n    AnObjectWithRefImport:\n      title: AnObjectWithRefImport\n      description: Describes an object with a ref import\n      type: object\n      properties:\n        prop1:\n          $ref: \"#/components/schemas/SimpleDefinition\"\n      required:\n      - prop1\n    WithinRangeStringTest:\n      title: WithinRangeStringTest\n      type: string\n      minLength: 8\n      maxLength: 10\n    NonNegativeNumberTest:\n      title: NonNegativeNumberTest\n      type: number\n      minimum: 0\n    NonNegativeIntegerTest:\n      title: NonNegativeIntegerTest\n      type: integer\n      minimum: 0\n    WithinRangeIntegerTest:\n      title: WithinRangeIntegerTest\n      type: integer\n      minimum: 0\n      maximum: 10\n    WithinRangeNumberTest:\n      title: WithinRangeNumberTest\n      type: number\n      minimum: 0\n      maximum: 10\n    WithinRangeExclusiveMaximumIntegerTest:\n      title: WithinRangeExclusiveMaximumIntegerTest\n      type: integer\n      minimum: 0\n      maximum: 10\n      exclusiveMaximum: true\n    WithinRangeExclusiveMinimumIntegerTest:\n      title: WithinRangeExclusiveMinimumIntegerTest\n      type: integer\n      minimum: 0\n      exclusiveMinimum: true\n      maximum: 10\n    WithinRangeExclusiveMinimumNumberTest:\n      title: WithinRangeExclusiveMinimumNumberTest\n      type: number\n      minimum: 0\n      exclusiveMinimum: true\n      maximum: 10\n    WithinRangeExclusiveMinMaxIntegerTest:\n      title: WithinRangeExclusiveMinMaxIntegerTest\n      type: number\n      minimum: 0\n      exclusiveMinimum: true\n      maximum: 10\n      exclusiveMaximum: true\n    WithinRangeExclusiveMinMaxNumberTest:\n      title: WithinRangeExclusiveMinMaxNumberTest\n      type: number\n      minimum: 0\n      exclusiveMinimum: true\n      maximum: 10\n      exclusiveMaximum: true\n    WithinRangeExclusiveMaximumNumberTest:\n      title: WithinRangeExclusiveMaximumNumberTest\n      type: number\n      minimum: 0\n      maximum: 10\n      exclusiveMaximum: true      \n    CustomStringFormatTest:\n      type: string\n      x-import: '@pagopa/ts-commons/lib/strings'\n      format: SomeCustomStringType\n    EnumTest:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - value1\n            - value2\n            - value3\n    AdditionalPropsTest:\n      type: object\n      additionalProperties:\n        type: array\n        items:\n          type: number\n    AdditionalPropsTrueTest:\n      type: object\n      additionalProperties: true\n    AdditionalpropsDefault:\n      type: object\n      default: { \"test\": [1000] }\n      additionalProperties:\n        type: array\n        items:\n          type: number\n    InlinePropertyTest:\n      type: object\n      properties:\n        inlineProp:\n          type: string\n          description: The device global unique identifier.\n          pattern: \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\"\n    NestedObjectTest:\n      type: object\n      properties:\n        inlineProp:\n          type: string\n          description: The device global unique identifier.\n          pattern: \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\"\n        nestedObject:\n          type: object\n          properties:\n            inlineProp:\n              type: string\n              description: The device global unique identifier.\n              pattern: \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\"\n    OrganizationFiscalCode:\n      type: string\n      x-import: '@pagopa/ts-commons/lib/strings'\n      format: OrganizationFiscalCode\n    OrganizationFiscalCodeTest:\n      type: string\n      x-import: '@pagopa/ts-commons/lib/strings'\n      format: OrganizationFiscalCode\n    ListOfDefinitions:\n      description: |-\n          a definition which is a list of other definitions.\n      type: array\n      items:\n        type: object\n        properties:\n          field:\n            type: string\n    ListOfReferences:\n      description: |-\n          a definition which is a list of references to other definitions.\n      type: array\n      items:\n        $ref: \"#/components/schemas/DefinitionFieldWithDash\"\n\n  \n    EnabledUserTest:\n      type: object\n      properties:\n        description:\n          type: string   \n        enabled:\n          type: boolean\n          enum:\n            - true\n        username:\n          type: string\n      required:\n        - enabled \n        - description\n        - username\n    DisabledUserTest:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          enum:\n            - false\n        reason:\n          type: string    \n        username:\n          type: string\n      required:\n        - enabled\n        - reason \n        - username \n    DisjointUnionsUserTest: \n      oneOf:\n        - $ref: \"#/components/schemas/EnabledUserTest\"\n        - $ref: \"#/components/schemas/DisabledUserTest\"\n    EnumTrueTest:\n      type: object\n      properties:\n        flag:\n          type: boolean\n          enum:\n            - true\n    EnumFalseTest:\n      type: object\n      properties:\n        flag:\n          type: boolean\n          enum:\n            - false\n\n  # -------------\n  # Parameters\n  # -------------\n  parameters:\n    PaginationRequest:\n      name: cursor\n      in: query\n      description: An opaque identifier that points to the next item in the collection.\n      schema:\n        minimum: 1\n        type: string\n    RequestId:\n      name: request-id\n      in: query\n      schema:\n        type: string\n    RequiredRequestId:\n      name: request-id\n      in: query\n      required: true\n      schema:\n        type: string\n    HeaderParamWithReference:\n      name: x-header-param\n      in: header\n      description: A header param which has dashes in it\n      required: true\n      schema:\n        type: string\n  \n  # -------------\n  # Responses\n  # -------------\n  responses:\n    NotFound:\n      description: Not found\n\n  # -------------\n  # Sec Schemas\n  # -------------\n  securitySchemes:\n    bearerToken:\n      type: apiKey\n      name: Authorization\n      in: header\n      x-auth-scheme: bearer\n    bearerTokenHttp:\n      type: http\n      scheme: bearer\n    simpleToken:\n      type: apiKey\n      name: X-Functions-Key\n      in: header\n    customToken:\n      type: apiKey\n      name: custom-token\n      in: header\n",
			"canonicalURL": "/github.com/pagopa/openapi-codegen-ts@eea6dbd6a3ddb02e8e20d263ab2d0469049f775a/-/blob/__mocks__/openapi_v3/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/pagopa/openapi-codegen-ts/blob/eea6dbd6a3ddb02e8e20d263ab2d0469049f775a/__mocks__/openapi_v3/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"AdditionalpropsDefault\": resolve \"#/components/schemas/AdditionalpropsDefault\": at __mocks__/openapi_v3/api.yaml:623:16: parse default: unexpected type: \"object\""
}