{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/solarisDigitalAssets/docs"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "docs/openapi.yml",
			"byteSize": 173008,
			"content": "openapi: 3.0.3\ninfo:\n  title: Solarisbank Digital Assets Platform API\n  contact:\n    email: sda-tech@solarisbank.de\n  version: 0.28.0\n  description: |\n    This is a draft for Solarisbank Digital Assets Platform API\n\n    ## Authentication\n\n    We require our partners to generate a pair of private \u0026 public keys.\n    Partners MUST register the public key with the Platform and sign every request to our API\n    using their private key.\n\n    We are using *HTTP Signatures* IETF draft as the base for our authentication mechanism.\n    As the digital signature algorithm in HTTP Signatures we are using *Ed25519*.\n\n    Every HTTP request to the API MUST have following headers in addition to\n    standard ones:\n\n    * Digest\n    * X-Nonce\n    * Signature\n\n    ### Digest Header\n\n    The `Digest` header ensures integrity of the HTTP request body. It MUST be constructed\n    following the HTTP Instance Digests RFC using SHA-256 algorithm.\n\n    In case of GET request, the `Digest` header still must be constructed, assuming the request\n    body is an empty string.\n\n    See:\n\n    * Instance Digests in HTTP \u003chttps://tools.ietf.org/html/rfc3230\u003e\n    * Additional Hash Algorithms for HTTP Instance Digests \u003chttps://tools.ietf.org/html/rfc5843\u003e\n\n    Example:\n    ```\n    Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\n    ```\n\n    ### X-Nonce Header\n\n    The `X-Nonce` header is supposed to uniquely identify the HTTP request\n    and serves to protect against replay/playback attacks.\n    The `X-Nonce` header value MUST be a string of up to 32 characters,\n    which MUST be  unique across all the requests generated using the same\n    API key.\n\n    As an example, `X-Nonce` header value may be generated as 16-bytes\n    random integer in hexadecimal representation.\n\n    Example:\n    ```\n    X-Nonce: 514bdd41b15f6b1a0443f8c673adc9db\n    ```\n\n    ### Signature Header\n\n    Signature Header string is used to provide authentication and integrity assurances\n    without the need for shared secrets. It also does not require an additional round-trip\n    in order to authenticate the client and allows the integrity of a message to be verified\n    independently of the transport.\n\n    Signature Parameters:\n\n    * **keyId**\n\n      Unique ID which is assigned to the Partner's API key.\n\n    * **algorithm**\n\n      The value for the `algorithm` parameter MUST be `\"hs2019\"`.\n\n    * **created**\n\n      The value of the `created` parameter MUST be the time at which\n      the HTTP request was constructed as an integer Unix timestamp.\n\n    * **headers**\n\n      The `headers` parameter identifies how the canonical Signature String is constructed.\n      Its value consists of a list of actual and pseudo- HTTP headers which will form\n      the Signature String according to the HTTP Signatures draft v11.\n\n      The `headers` parameter MUST include following\n      headers: `(request-target)`, `(created)`, `digest`, `x-nonce`.\n\n      The recommended value of the `headers` parameter is:\n      `(request-target) (created) digest x-nonce`.\n\n      See:\n\n      * Signature String Construction\n        \u003chttps://tools.ietf.org/html/draft-cavage-http-signatures-11#section-2.3\u003e\n\n      Example of Signature String for `headers=\"(request-target) (created) digest x-nonce\"`:\n\n      ```\n\n      (request-target): get /foo?bar=123\\n\n      (created): 1557855475\\n\n      digest: SHA-256=47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\\n\n      x-nonce: 7c44d38b63f5e398af62d603b1155f5c\n\n      ```\n\n      Here `\\n` indicate the ASCII newline character. Note the absence of it on the last line.\n\n    * **signature**\n\n      The value of the `signature` parameter is the digital signature of the HTTP request produced\n      by the partner's private key.\n\n      In order to create the `signature` parameter:\n\n      * Construct the canonical Signature String according to the value of the `headers` parameter\n      * Using the private key that corresponds to the provided `keyId` generate an Ed25519\n        signature of the Signature String obtained on a previous step\n      * Base64-encode the signature\n\n    ### Examples\n\n    ```\n    POST /foo/bar\n    Digest: SHA-256=X48E9qOokqqrvdts8nOJRJN3OWDUoyWxBf7kbu9DBPE=\n    X-Nonce: 514bdd41b15f6b1a0443f8c673adc9db\n    Signature: keyId=\"foobar\",algorithm=\"hs2019\",created=1557855475,headers=\"(request-target) (created) digest x-nonce\",signature=\"IKGyxGiUFm3luudWGkTzf0TYQD2Fnkb6ed6BTfuXuDq/U9q6gQk6KxBSPx33ME1O2RLlH5HKG2WZnO8PgRGiDA==\"\n\n    {\"hello\": \"world\"}\n    ```\n\n    ```\n    GET /foo?bar=123\n    Digest: SHA-256=47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\n    X-Nonce: 7c44d38b63f5e398af62d603b1155f5c\n    Signature: keyId=\"foobar\",algorithm=\"hs2019\",created=1557855475,headers=\"(request-target) (created) digest x-nonce\",signature=\"d0Wzjlpt2Y++DJtxKnD1ipkkwF5eU43jwtybqsy3tFqa5P3kYYIJa4TTQyMUZ62i58jwN7gK6q2MVJBDGQ6tDg==\"\n    ```\n\n    See:\n\n    * HTTP Signatures, \u003chttps://tools.ietf.org/html/draft-cavage-http-signatures-11\u003e\n    * Ed25519, \u003chttps://ed25519.cr.yp.to/\u003e\n\n    --\nservers:\n- url: https://api.solarisdigitalassets.com/v1\n  description: Production\n- url: https://api.sb-cryptocustody-sandbox.aws.solarisbank.io/v1\n  description: Sandbox\ntags:\n- name: Account\n  description: Accounts controlled by the Partner\n- name: Address\n  description: Digital Asset Addresses linked with the Accounts\n- name: ApprovalMethod\n  description: ApprovalMethods registered for Entities\n- name: ApprovalRequest\n  description: ApprovalRequests for approving an outgoing Transaction via a second\n    factor\n- name: Asset\n  description: Digital Assets supported by the platform\n- name: ClosureRequest\n  description: The request to end the contractual relationship between SDA and the\n    customer\n- name: Entity\n  description: Entities registered and controlled by the Partner\n- name: LedgerEntry\n  description: Ledger Entries of an Account\n- name: Tier\n  description: Withdrawal restrictions configured per-Partner\n- name: TradingExchangeRate\n  description: Exchange Rates\n- name: TradingLimit\n  description: |\n    Current trading limits configuration\n    for an Entity and the remaining amount they are allowed to trade.\n- name: TradingPair\n  description: Pair of tradeable assets\n- name: TradingPrice\n  description: An indicative trade price for a given Trading Pair\n- name: Trade\n  description: Trades\n- name: Transaction\n  description: Transactions of an Account\n- name: Transfer\n  description: Transfers between Accounts\n- name: Withdrawal\n  description: Creating a Withdrawal\npaths:\n  \"/entities/{entity_id}/accounts\":\n    get:\n      tags:\n      - Account\n      summary: List all Accounts of an Entity\n      description: 'Returns a list of all Accounts owned by the given Entity\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Accounts\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/Account\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    post:\n      tags:\n      - Account\n      summary: Create an Account\n      description: |\n        Creates a new Account owned by the given Entity.\n\n        When creating an Account a valid Asset ID must be provided.\n      parameters:\n      - name: entity_id\n        in: path\n        description: ID of the Entity the new Account belongs to\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        description: 'An `asset_id` attribute must be specified, linking the new Account\n          with an existing Asset.\n\n          '\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - asset_id\n              properties:\n                asset_id:\n                  type: string\n                  description: The ID of an existing Asset\n                  example: 00000000000000000000000000000001asst\n                isolation:\n                  type: string\n                  description: \"(deprecated) The isolation level of the Account is\n                    now determined by the Asset\"\n                  example: POOLED\n                  enum:\n                  - POOLED\n                  - SEGREGATED\n            example:\n              asset_id: 00000000000000000000000000000001asst\n      responses:\n        '201':\n          description: Successfully created Account\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Account\"\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}\":\n    get:\n      tags:\n      - Account\n      summary: Get a single Account\n      description: 'Returns an Account identified by its ID, owned by the given Entity\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Account\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Account\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/addresses\":\n    get:\n      tags:\n      - Address\n      summary: List all Addresses of an Account\n      description: |\n        Returns a list of all Addresses linked with the given Account, owned by the given Entity.\n\n        NOTE: For token Accounts, the list returned is always empty.\n        For such Accounts the Addresses are owned by their corresponding base Account.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Addresses\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/Address\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    post:\n      tags:\n      - Address\n      summary: Create an Address\n      description: |\n        Creates a new Address linked with the given Account, owned by the given Entity.\n\n        As the Account is associated with a single Asset the new Address is created for this particular Asset.\n        No additional parameters are required to create a new Address. This Address\n        can immediately be used to receive funds on the blockchain.\n\n        NOTE: Creating Addresses for token Accounts is not permitted, as you should create them\n        in the corresponding base Account.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '201':\n          description: Successfully created Address\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Address\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '422':\n          \"$ref\": \"#/components/responses/InvalidResource\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/addresses/{address_id}\":\n    get:\n      tags:\n      - Address\n      summary: Get a single Address\n      description: |\n        Returns a single Address identified by its ID, linked with the given Account,\n        owned by the given Entity.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: address_id\n        in: path\n        description: Address ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Address\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Address\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/approval_methods\":\n    get:\n      tags:\n      - ApprovalMethod\n      summary: List ApprovalMethods registered for this Entity\n      description: |\n        Retrieves a list of ApprovalMethods that were registered for\n        an Entity with a given ID.\n\n        ApprovalMethods in `ACTIVATED` state can be used to\n        approve Transactions initiated by this Entity.\n\n        There are different types of ApprovalMethods that can be used:\n\n        * AUTHY_PUSH\n        * SMS\n        * DSA_ED25519\n        * GROUP\n\n        Entities of type `PERSON` can use ApprovalMethods of type `AUTHY_PUSH`\n        and `SMS`.\n        Entities of type `PARTNER` can use ApprovalMethods of type `DSA_ED25519`.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of ApprovalMethods registered for this Entity\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/ApprovalMethod\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    post:\n      tags:\n      - ApprovalMethod\n      summary: Register a new ApprovalMethod for this Entity\n      description: |\n        Registers a new ApprovalMethod for an Entity with a given ID.\n\n        There are different ApprovalMethod types available:\n\n        * AUTHY_PUSH -- Authy push notifications based MFA method,\n          it can only be registered for Entities of type PERSON\n        * DSA_ED25519 -- an ECDSA based MFA method,\n          it can only be registered for Entities of type PARTNER\n\n        There can be no more that one ApprovalMethod of each type\n        registered for one particular Entity.\n\n        After being registered, the ApprovalMethod is in `PENDING` state\n        until it is activated by the platform operator, or by an external\n        service, e.g. Authy.\n\n        ApprovalMethod in `ACTIVATED` state can be used to approve\n        Transactions initiated by this Entity.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n              - type\n              type: object\n              properties:\n                type:\n                  type: string\n                  description: Type of ApprovalMethod\n                  example: AUTHY_PUSH\n                  enum:\n                  - AUTHY_PUSH\n                  - DSA_ED25519\n                pub_key:\n                  type: string\n                  description: |\n                    Public key part of Entity's Approval key *(required if `type` is `DSA_ED25519`)*.\n\n                    A 32-byte Ed25519 public key in a hexadecimal representation.\n            example:\n              type: DSA_ED25519\n              pub_key: f7bdb63a96ecee424a821d1a5e1f7d582eaabac453ba0560d4e05ff67ece2f20\n      responses:\n        '201':\n          description: ApprovalMethod is successfully registered\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalMethod\"\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/approval_methods/{approval_method_id}\":\n    get:\n      tags:\n      - ApprovalMethod\n      summary: Get a single ApprovalMethod\n      description: 'Returns an ApprovalMethod identified by its ID, owned by the given\n        Entity\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: approval_method_id\n        in: path\n        description: ApprovalMethod ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single ApprovalMethod\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalMethod\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions/{transaction_id}/approval_request\":\n    post:\n      deprecated: true\n      tags:\n      - ApprovalRequest\n      summary: Requests an ApprovalRequest for a Transaction\n      description: |\n        Requests the creation of an AppprovalRequest for the given Transaction.\n\n        To approve a Transaction, the Account holder (the Entity owning the Account)\n        MUST provide a second factor approval before the Transaction is processed.\n\n        The second factor approval depends on the ApprovalMethod and the type of\n        the Transaction.\n\n        The ApprovalMethod depends directly on the type of the Entity which\n        owns the Transaction's Account:\n\n        * for Entities of type PERSON  -- the approval method is either `AUTHY_PUSH` or `SMS`\n        * for Entities of type PARTNER -- the approval method is `DSA_ED25519`\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: Transaction ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        description: |\n          A `type` MUST be specified when creating a new ApprovalRequest.\n          * WHEN Account holding Entity is of type `PERSON` THEN type is either `AUTHY_PUSH` or `SMS`\n          * WHEN Account holding Entity is of type `PARTNER` THEN type is `DSA_ED25519`\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - type\n              properties:\n                type:\n                  type: string\n                  description: The type of the to be created ApprovalRequest\n                  enum:\n                  - AUTHY_PUSH\n                  - SMS\n                  - DSA_ED25519\n            example:\n              type: DSA_ED25519\n      responses:\n        '201':\n          description: An ApprovalRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalRequest\"\n              example:\n                id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n                type: DSA_ED25519\n                state: PENDING\n                transaction_id: f59e8c8188500efce5be51eb71e9db08tran\n                challenge:\n                  attrs:\n                  - id\n                  - account_id\n                  - type\n                  - reference\n                  - amount\n                  - fee_amount\n                  - address\n                created_at: '2019-11-23T22:46:38Z'\n                updated_at: '2019-11-23T22:46:38Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '429':\n          \"$ref\": \"#/components/responses/TooManyRequests\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    get:\n      deprecated: true\n      tags:\n      - ApprovalRequest\n      summary: Retrieves the ApprovalRequest for the given Transaction\n      description: |\n        Fetches the ApprovalRequest for an outgoing Transaction identified by given\n        `transaction_id`.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: Transaction ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: An ApprovalRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalRequest\"\n              example:\n                id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n                type: DSA_ED25519\n                state: PENDING\n                transaction_id: f59e8c8188500efce5be51eb71e9db08tran\n                challenge:\n                  attrs:\n                  - id\n                  - account_id\n                  - type\n                  - reference\n                  - amount\n                  - fee_amount\n                  - address\n                created_at: '2019-11-23T22:46:38Z'\n                updated_at: '2019-11-23T22:46:38Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions/{transaction_id}/approval_request/approve\":\n    post:\n      deprecated: true\n      tags:\n      - ApprovalRequest\n      summary: Approve an ApprovalRequest of type `DSA_ED25519`\n      description: |\n        To approve a Transaction – using an ApprovalRequest of type `DSA_ED25519` –\n        the Account holder (an Entity owning the Account), MUST compute a response\n        based on the previously retrieved challenge. The response is posted with this request.\n\n        See Transaction Approvals description [API Guide](API_Guide.md)\n        on how to compute the response for a particular ApprovalMethod.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: Transaction ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        description: 'A response to the ApprovalRequest''s challenge when type is\n          `DSA_ED25519`\n\n          '\n        content:\n          application/json:\n            schema:\n              description: |\n                The Payload that contains the response to the challenge of the\n                ApprovalRequest\n              type: object\n              required:\n              - response\n              properties:\n                challenge:\n                  type: object\n                  description: 'Optional, an object containing a SHA-256 hash of the\n                    challenge message that will be considered for validation\n\n                    '\n                  properties:\n                    sha256:\n                      type: string\n                      description: A SHA-256 hash of the challenge message\n                      example: f6deeecec4aa0cb77e7f2c6f3f44c28ec5ab3ab22d43441f56cbf0bf1ef80c81\n                response:\n                  type: string\n                  description: The response to the challenge. Here a DSA_ED25519 signature\n                  example: c5d5fac9e6fb6b7d27b141625f1c2c991aefc8b9f6e8a6eedb9cdbe9dd691ec310cbdc1bdd9fbd5fb4cfad72ee8fd51cc5f6e7198fecc92d5c465a61ef2c09a1\n            example:\n              type: DSA_ED25519\n              challenge:\n                sha256: f6deeecec4aa0cb77e7f2c6f3f44c28ec5ab3ab22d43441f56cbf0bf1ef80c81\n              response: c5d5fac9e6fb6b7d27b141625f1c2c991aefc8b9f6e8a6eedb9cdbe9dd691ec310cbdc1bdd9fbd5fb4cfad72ee8fd51cc5f6e7198fecc92d5c465a61ef2c09a1\n      responses:\n        '201':\n          description: Transaction is successfully approved\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalRequest\"\n              example:\n                id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n                type: DSA_ED25519\n                state: APPROVED\n                transaction_id: f59e8c8188500efce5be51eb71e9db08tran\n                challenge:\n                  attrs:\n                  - id\n                  - account_id\n                  - type\n                  - reference\n                  - amount\n                  - fee_amount\n                  - address\n                created_at: '2019-11-23T22:46:38Z'\n                updated_at: '2019-11-23T22:46:38Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '422':\n          \"$ref\": \"#/components/responses/InvalidResource\"\n        '429':\n          \"$ref\": \"#/components/responses/TooManyRequests\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/approval_requests\":\n    post:\n      tags:\n      - ApprovalRequest\n      summary: Requests an ApprovalRequest for a Transaction\n      description: |\n        Requests the creation of an AppprovalRequest for the given Transaction.\n\n        To approve a Transaction, a Trade or an ApprovalRequest of type GROUP, the Account holder (the Entity owning the Account)\n        MUST provide a second factor approval before the Transaction or Trade is processed.\n\n        The second factor approval depends on the ApprovalMethod and the type of\n        the Transaction.\n\n        The ApprovalMethod depends directly on the type of the Entity which\n        owns the Transaction's Account:\n\n        * for Entities of type PERSON  -- the ApprovalMethod is either `AUTHY_PUSH` or `SMS`\n        * for Entities of type PARTNER -- the ApprovalMethod is `DSA_ED25519` or `GROUP`\n        * for Entities of type BUSINESS -- the ApprovalMethod is `DSA_ED25519` or `GROUP`\n        * for Entities of type REPRESENTATIVE_PERSON -- the ApprovalMethod is either `AUHTY_PUSH` or `SMS`\n      requestBody:\n        required: true\n        description: 'An ApprovalMethod ID is required, check the [Custody API Guide](Custody_API_Guide.md)\n          for more details\n\n          '\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - entity_id\n              - approval_method_id\n              - resource_type\n              - resource_id\n              properties:\n                entity_id:\n                  type: string\n                  description: The Entity ID that owns the resource\n                approval_method_id:\n                  type: string\n                  description: ID for the ApprovalMethod to be used by the ApprovalRequest\n                resource_type:\n                  type: string\n                  description: Type of the resource to approve using the ApprovalRequest\n                  enum:\n                  - TRANSACTION\n                  - TRADE\n                  - APPROVAL_REQUEST\n                resource_id:\n                  type: string\n                  description: ID of the resource to be approved\n            example:\n              type: DSA_ED25519\n              resource_type: TRANSACTION\n              resource_id: 9c41ec8a82fb99b57cb5078ae0a8b569atrx\n              entity_id: 10ef67dc895d6c19c273b1ffba0c1692enty\n              account_id: 9c41ec8a82fb99b57cb5078ae0a8b569acct\n      responses:\n        '201':\n          description: An ApprovalRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalRequest\"\n              example:\n                id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n                type: DSA_ED25519\n                state: PENDING\n                resource_type: TRANSACTION\n                resource_id: f59e8c8188500efce5be51eb71e9db08tran\n                challenge:\n                  attrs:\n                  - id\n                  - account_id\n                  - type\n                  - reference\n                  - amount\n                  - fee_amount\n                  - address\n                created_at: '2019-11-23T22:46:38Z'\n                updated_at: '2019-11-23T22:46:38Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '429':\n          \"$ref\": \"#/components/responses/TooManyRequests\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/approval_requests/{approval_request_id}\":\n    get:\n      tags:\n      - ApprovalRequest\n      summary: Retrieves the ApprovalRequest for the given Transaction\n      description: 'Fetches the ApprovalRequest for given ApprovalRequest ID\n\n        '\n      parameters:\n      - name: approval_request_id\n        in: path\n        description: ApprovalRequest ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: An ApprovalRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalRequest\"\n              example:\n                id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n                type: DSA_ED25519\n                state: PENDING\n                resource_type: TRANSACTION\n                resource_id: f59e8c8188500efce5be51eb71e9db08tran\n                challenge:\n                  attrs:\n                  - id\n                  - account_id\n                  - type\n                  - reference\n                  - amount\n                  - fee_amount\n                  - address\n                created_at: '2019-11-23T22:46:38Z'\n                updated_at: '2019-11-23T22:46:38Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n  \"/approval_requests/{approval_request_id}/approve\":\n    post:\n      tags:\n      - ApprovalRequest\n      summary: Approve an ApprovalRequest of type `DSA_ED25519`\n      description: |\n        To approve a Transaction – using an ApprovalRequest of type `DSA_ED25519` or `SMS` –\n        the Account holder (an Entity owning the Account), MUST submit a response.\n\n        See ApprovalMethods description [Custody API Guide](Custody_API_Guide.md) for more details\n      parameters:\n      - name: approval_request_id\n        in: path\n        description: ApprovalRequest ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        description: 'A response to the ApprovalRequest''s challenge when type is\n          `DSA_ED25519` or `SMS`\n\n          '\n        content:\n          application/json:\n            schema:\n              description: |\n                The Payload that contains the response to the challenge of the\n                ApprovalRequest\n              type: object\n              required:\n              - response\n              properties:\n                challenge:\n                  type: object\n                  description: 'Optional, an object containing a SHA-256 hash of the\n                    challenge message that will be considered for validation\n\n                    '\n                  properties:\n                    sha256:\n                      type: string\n                      description: A SHA-256 hash of the challenge message\n                      example: f6deeecec4aa0cb77e7f2c6f3f44c28ec5ab3ab22d43441f56cbf0bf1ef80c81\n                response:\n                  type: string\n                  description: The response to the challenge. Here a DSA_ED25519 signature\n                    or the SMS code in the case of an SMS ApprovalRequest\n                  example: c5d5fac9e6fb6b7d27b141625f1c2c991aefc8b9f6e8a6eedb9cdbe9dd691ec310cbdc1bdd9fbd5fb4cfad72ee8fd51cc5f6e7198fecc92d5c465a61ef2c09a1\n            example:\n              challenge:\n                sha256: f6deeecec4aa0cb77e7f2c6f3f44c28ec5ab3ab22d43441f56cbf0bf1ef80c81\n              response: c5d5fac9e6fb6b7d27b141625f1c2c991aefc8b9f6e8a6eedb9cdbe9dd691ec310cbdc1bdd9fbd5fb4cfad72ee8fd51cc5f6e7198fecc92d5c465a61ef2c09a1\n      responses:\n        '201':\n          description: Transaction is successfully approved\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ApprovalRequest\"\n              example:\n                id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n                type: DSA_ED25519\n                state: APPROVED\n                transaction_id: f59e8c8188500efce5be51eb71e9db08tran\n                challenge:\n                  attrs:\n                  - id\n                  - account_id\n                  - type\n                  - reference\n                  - amount\n                  - fee_amount\n                  - address\n                created_at: '2019-11-23T22:46:38Z'\n                updated_at: '2019-11-23T22:46:38Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '422':\n          \"$ref\": \"#/components/responses/InvalidResource\"\n        '429':\n          \"$ref\": \"#/components/responses/TooManyRequests\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/assets\":\n    get:\n      tags:\n      - Asset\n      summary: List all Assets\n      description: 'Returns a list of all Digital Assets supported by the platform.\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Assets\n          content:\n            application/json:\n              schema:\n                required:\n                - items\n                type: object\n                properties:\n                  items:\n                    type: array\n                    description: An array containing Assets\n                    items:\n                      \"$ref\": \"#/components/schemas/Asset\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/assets/{asset_id}\":\n    get:\n      tags:\n      - Asset\n      summary: Get a single Asset\n      description: 'Returns a single Asset found by its ID\n\n        '\n      parameters:\n      - name: asset_id\n        in: path\n        description: Asset ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Asset\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Asset\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/closure_requests\":\n    get:\n      tags:\n      - ClosureRequest\n      summary: List all ClosureRequests\n      description: 'Returns a list of all ClosureRequests of the Entity identified\n        by `entity_id`\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      - name: entity_id\n        in: path\n        description: ID of the Entity that should update the terms and conditions.\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A list of ClosureRequests\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/ClosureRequest\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    post:\n      tags:\n      - ClosureRequest\n      summary: Create a new ClosureRequest for Entity with `entity_id`\n      description: |\n        On behalf of the customer the partner can initiate the request to end the contractual realtionship between the customer and SDA.\n        A call to this endpoint will create a new ClosureRequest for the Entity identified by `entity_id`. This ClosureRequest will be\n        processed in the background.\n      parameters:\n      - name: entity_id\n        in: path\n        description: ID of the Entity that should update the terms and conditions.\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        description: A `reason` attribute must be specified. `reason` must be `CUSTOMER_WISH`.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - reason\n              properties:\n                reason:\n                  type: string\n                  description: The reason for the termination of the contract between\n                    Entity and SDA\n                  example: CUSTOMER_WISH\n            example:\n              reason: CUSTOMER_WISH\n      responses:\n        '201':\n          description: Successfully created a ClosureRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ClosureRequest\"\n              example:\n                id: ae93e4dcb3d0f5d0e36a227a94ff39e5creq\n                reason: CUSTOMER_WISH\n                entity_id: 275cf8f7559fd88710b4c919f85777aaenty\n                state: PROCESSING\n                valid_until: '2019-04-01T22:31:06Z'\n                legal_closure_scheduled_at: '2019-03-01T22:31:06Z'\n                created_at: '2019-03-01T22:31:06Z'\n                updated_at: '2019-03-01T22:31:06Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/closure_requests/{closure_request_id}\":\n    get:\n      tags:\n      - ClosureRequest\n      summary: Get a single ClosureRequest\n      description: 'Returns a single ClosureRequest found by its ID\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: closure_request_id\n        in: path\n        description: ClosureRequest ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single ClosureRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ClosureRequest\"\n              example:\n                id: ae93e4dcb3d0f5d0e36a227a94ff39e5creq\n                reason: CUSTOMER_WISH\n                entity_id: 275cf8f7559fd88710b4c919f85777aaenty\n                state: PROCESSING\n                valid_until: '2019-04-01T22:31:06Z'\n                legal_closure_scheduled_at: '2019-03-01T22:31:06Z'\n                created_at: '2019-03-01T22:31:06Z'\n                updated_at: '2019-03-01T22:31:06Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/closure_requests/{closure_request_id}/confirm\":\n    post:\n      tags:\n      - ClosureRequest\n      summary: Confirm a ClosureRequest with `closure_request_id`\n      description: |\n        After the partner got notified of a ClosureRequest of type `COMPLIANCE_IMMEDIATE_INTERNAL` or `ORDINARY_INTERNAL` the partner\n        must confirm this ClosureRequest to the SDA platform.\n      parameters:\n      - name: entity_id\n        in: path\n        description: ID of the Entity to which the ClosureRequest belongs to\n        required: true\n        schema:\n          type: string\n      - name: closure_request_id\n        in: path\n        description: ID of the ClosureRequest that should be confirmed\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Successfully confirmed a ClosureRequest\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/ClosureRequest\"\n              example:\n                id: ae93e4dcb3d0f5d0e36a227a94ff39e5creq\n                reason: COMPLIANCE_IMMEDIATE_INTERNAL\n                entity_id: 275cf8f7559fd88710b4c919f85777aaenty\n                state: PROCESSING\n                valid_until: '2019-04-01T22:31:06Z'\n                legal_closure_scheduled_at: '2019-03-01T22:31:06Z'\n                created_at: '2019-03-01T22:31:06Z'\n                updated_at: '2019-03-01T22:31:06Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities\":\n    get:\n      tags:\n      - Entity\n      summary: List all Entities\n      description: 'Returns a list of all Entities of this partner\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Entities\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/Entity\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    post:\n      tags:\n      - Entity\n      summary: Create an Entity\n      description: 'Creates a new Entity of type PERSON or BUSINESS owned by the partner.\n\n        '\n      requestBody:\n        required: true\n        description: |\n          A `person_id` attribute must be specified, when creating an Entity of type PERSON.\n          A `name` attribute must be specified, when creating an Entity of type BUSINESS.\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - type\n              - person_id\n              - name\n              properties:\n                person_id:\n                  type: string\n                  description: The ID of the person, provided by Solarisbank's KYC\n                    product (required for PERSON).\n                  example: b27a2b1c7b2ac61e3f0e7a1221ce816ecper\n                business_id:\n                  type: string\n                  description: The ID of the business, provided by solarisBank API\n                    (optional attribute for BUSINESS)\n                type:\n                  type: string\n                  description: The type of the Entity (`PERSON` or `BUSINESS`)\n                  example: PERSON\n                name:\n                  type: string\n                  description: The name of the Entity (required for BUSINESS)\n                  example: Mustermann GmbH\n            example:\n              person_id: f0af0d2164f3f8bcc44bf68d7beecce3cper\n              type: PERSON\n      responses:\n        '201':\n          description: Successfully created Entity\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Entity\"\n              example:\n                id: 7d57be2d17a328150abd28daaae76d47enty\n                type: PERSON\n                person_id: e3c4bc7bdfeaed3c0a3cebd2addcd5accper\n                created_at: '2019-03-01T22:31:06Z'\n                updated_at: '2019-03-01T22:31:06Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}\":\n    get:\n      tags:\n      - Entity\n      summary: Get a single Entity\n      description: 'Returns a single Entity found by its ID\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Entity\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Entity\"\n              example:\n                id: 7d57be2d17a328150abd28daaae76d47enty\n                type: PERSON\n                person_id: e3c4bc7bdfeaed3c0a3cebd2addcd5accper\n                created_at: '2019-03-01T22:31:06Z'\n                updated_at: '2019-03-01T22:31:06Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/terms_and_conditions\":\n    post:\n      tags:\n      - Entity\n      summary: Accept terms and conditions\n      description: |\n        By posting to this endpoint the partner signifies the acceptance of SDA's terms and conditions by the Entity.\n        A call to this enpoint will update the Entity identified by `entity_id` with a timestamp of when this endpoint was first called.\n      parameters:\n      - name: entity_id\n        in: path\n        description: ID of the Entity that should update the terms and conditions.\n        required: true\n        schema:\n          type: string\n      responses:\n        '201':\n          description: Successfully accepted the terms and conditions\n          content:\n            application/json:\n              schema:\n                type: object\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/trading_terms_and_conditions\":\n    post:\n      tags:\n      - Entity\n      summary: Accept terms and conditions for trading\n      description: |\n        By posting to this endpoint the partner signifies the acceptance of SDA's trading terms and conditions by the Entity.\n        A call to this enpoint will update the Entity identified by `entity_id` with a timestamp of when this endpoint was first called.\n      parameters:\n      - name: entity_id\n        in: path\n        description: ID of the Entity that should update the trading terms and conditions.\n        required: true\n        schema:\n          type: string\n      responses:\n        '201':\n          description: Successfully accepted the trading terms and conditions\n          content:\n            application/json:\n              schema:\n                type: object\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/tier\":\n    get:\n      tags:\n      - Entity\n      - Tier\n      summary: Get the details of currently activated Tier for the Entity\n      description: |\n        Returns the currently activated Tier (if any) for the Entity, along with\n        information about when the Tier was activated for the Entity, and how much\n        volume has been transacted in that Tier.\n      parameters:\n      - name: entity_id\n        in: path\n        description: ID of the Entity whose Tier should be returned.\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Entity's activated Tier info\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#components/schemas/EntityTierInfo\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/ledger_entries\":\n    get:\n      tags:\n      - LedgerEntry\n      summary: List all Ledger Entries of an Account\n      description: 'Returns a list of all Ledger Entries of a given Account, owned\n        by the given Entity\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Ledger Entries\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/LedgerEntry\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/ledger_entries/{ledger_entry_id}\":\n    get:\n      tags:\n      - LedgerEntry\n      summary: Get a single Ledger Entry\n      description: |\n        Returns a single Ledger Entry identified by its ID of the given Account,\n        owned by the given Entity.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: ledger_entry_id\n        in: path\n        description: Ledger Entry ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Ledger Entry\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/LedgerEntry\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/tiers\":\n    get:\n      tags:\n      - Tier\n      summary: List all Tiers\n      description: Returns a list of all Tiers configured for a Partner\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Tiers\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/Tier\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/tiers/{tier_id}\":\n    get:\n      tags:\n      - Tier\n      summary: Get a single Tier\n      description: Returns a single Tier found by its ID\n      parameters:\n      - name: tier_id\n        in: path\n        description: Tier ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Tier\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Tier\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/pairs/{trading_pair_id}/daily_rates\":\n    get:\n      tags:\n      - TradingExchangeRate\n      summary: List the Daily Exchange Rates of a Trading Pair\n      description: 'Returns a list of all Daily Exchange Rates identified by a given\n        Trading Pair.\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      - name: trading_pair_id\n        in: path\n        description: Trading Pair ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A list of Daily Exchange Rates\n          content:\n            application/json:\n              schema:\n                required:\n                - items\n                type: object\n                properties:\n                  items:\n                    type: array\n                    description: An array containing Daily Exhange Rates\n                    items:\n                      \"$ref\": \"#/components/schemas/TradingDailyRate\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/pairs/{trading_pair_id}/hourly_rates\":\n    get:\n      tags:\n      - TradingExchangeRate\n      summary: List the Hourly Exchange Rates of a Trading Pair\n      description: 'Returns a list of all Hourly Exchange Rates identified by a given\n        Trading Pair.\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      - name: trading_pair_id\n        in: path\n        description: Trading Pair ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A list of Hourly Exchange Rates\n          content:\n            application/json:\n              schema:\n                required:\n                - items\n                type: object\n                properties:\n                  items:\n                    type: array\n                    description: An array containing Hourly Exchange Rates\n                    items:\n                      \"$ref\": \"#/components/schemas/TradingHourlyRate\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/pairs/{trading_pair_id}/minute_rates\":\n    get:\n      tags:\n      - TradingExchangeRate\n      summary: List the Minute Exchange Rates of a Trading Pair\n      description: 'Returns a list of all Minute Exchange Rates identified by a given\n        Trading Pair.\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      - name: trading_pair_id\n        in: path\n        description: Trading Pair ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A list of Minute Exchange\n          content:\n            application/json:\n              schema:\n                required:\n                - items\n                type: object\n                properties:\n                  items:\n                    type: array\n                    description: An array containing Minute Exchange Rates\n                    items:\n                      \"$ref\": \"#/components/schemas/TradingMinuteRate\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/trading_limits\":\n    get:\n      tags:\n      - TradingLimit\n      summary: Returns the trading limits for an Entity.\n      description: |\n        This endpoint is used to show current trading limits configuration\n        for an Entity and the remaining amount they are allowed to trade.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Trading limits object\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TradingLimit\"\n              example:\n                entity_id: e0a26b1b54a6009d9ad9c6efd3aa5c77enty\n                interval: 604800\n                amount: '50000.00'\n                remaining_amount: '49686.69'\n                created_at: '2021-02-11T22:40:59Z'\n                updated_at: '2021-02-11T22:40:59Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/pairs\":\n    get:\n      tags:\n      - TradingPair\n      summary: List all Trading Pairs\n      description: 'Returns a list of all Trading Pairs supported by the platform.\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Trading Pairs\n          content:\n            application/json:\n              schema:\n                required:\n                - items\n                type: object\n                properties:\n                  items:\n                    type: array\n                    description: An array containing Trading Pairs\n                    items:\n                      \"$ref\": \"#/components/schemas/TradingPair\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/pairs/{trading_pair_id}\":\n    get:\n      tags:\n      - TradingPair\n      summary: Get a single Trading Pair\n      description: 'Returns a single Trading Pair identified by its ID.\n\n        '\n      parameters:\n      - name: trading_pair_id\n        in: path\n        description: Trading Pair ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Trading Pair\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TradingPair\"\n              example:\n                id: 00000000000000000000000000000001trpr\n                from_asset_id: 00000000000000000000000000000001asst\n                to_asset_id: f0000000000000000000000000000001asst\n                code: BTC/EUR\n                precision: 2\n                min_amount: '0.0001'\n                created_at: '2019-03-01T21:47:06Z'\n                updated_at: '2019-03-01T21:47:06Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/pairs/{trading_pair_id}/price\":\n    get:\n      tags:\n      - TradingPrice\n      summary: Returns the trade price for a given Trading Pair.\n      description: |\n        The Price endpoint provides an indicative trade price for a given Trading Pair.\n        The \"amount\" attribute is optional and defaults to \"min_amount\" attribute of a chosen \"Trading Pair\".\n        The provided result can only be used as an estimation and does not guarantee the price during the actual trade on the platform.\n      parameters:\n      - name: trading_pair_id\n        in: path\n        description: Trading Pair ID\n        required: true\n        schema:\n          type: string\n      - name: amount\n        in: query\n        description: amount\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Price\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Price\"\n              example:\n                trading_pair_id: 00000000000000000000000000000001trpr\n                from_amount: '1.12300000'\n                traded_from_amount: '1.12300000'\n                traded_to_amount: '9956.64'\n                to_amount: '9857.07'\n                price: '8866.11'\n                fee_amount: '99.57'\n                created_at: '2020-07-16T11:26:41Z'\n                updated_at: '2020-07-16T11:26:41Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/trades\":\n    get:\n      tags:\n      - Trade\n      summary: List all Trades\n      description: 'Returns a list of all Trades created by a given partner.\n\n        '\n      parameters:\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Trades\n          content:\n            application/json:\n              schema:\n                required:\n                - items\n                type: object\n                properties:\n                  items:\n                    type: array\n                    description: An array containing Trades\n                    items:\n                      \"$ref\": \"#/components/schemas/Trade\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n    post:\n      tags:\n      - Trade\n      summary: Create a new Trade\n      description: 'Creates a new Trade on the platform.\n\n        '\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n              - type\n              properties:\n                entity_id:\n                  type: string\n                  description: The Entity ID\n                trading_pair_id:\n                  type: string\n                  description: The Trading Pair ID\n                from_account_id:\n                  type: string\n                  description: The origin account ID\n                to_account_id:\n                  type: string\n                  description: The destination account ID\n                reference:\n                  type: string\n                  description: The Trade reference\n                from_amount:\n                  type: string\n                  description: The Trade amount\n            example:\n              from_amount: '209.1'\n              entity_id: b6ef80668690fa4dfbb51a3bc49a1fb7enty\n              trading_pair_id: 00000000000000000000000000000002trpr\n              from_account_id: 57e837a08685eff2cee29e82b6b09857cacc\n              to_account_id: d4f01daea26362d0de5fe89cb0f8d905acct\n              reference: 9bcf5ffa4bb4d4ebbf92fb74f3a61f85\n      responses:\n        '201':\n          description: A created Trade\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Trade\"\n              example:\n                id: 82d19e27542a21c950eaae13059cf5f5trad\n                from_amount: '209.10'\n                filled_from_amount: '209.00'\n                traded_from_amount:\n                traded_to_amount:\n                to_amount:\n                fee_amount:\n                price:\n                state: PENDING\n                reference: 9bcf5ffa4bb4d4ebbf92fb74f3a61f85\n                entity_id: b6ef80668690fa4dfbb51a3bc49a1fb7enty\n                trading_pair_id: 00000000000000000000000000000002trpr\n                from_account_id: 57e837a08685eff2cee29e82b6b09857cacc\n                to_account_id: d4f01daea26362d0de5fe89cb0f8d905acct\n                failure_reason:\n                estimations:\n                  traded_from_amount: '207.00'\n                  traded_to_amount: '0.02288435'\n                  to_amount: '0.02288435'\n                  fee_amount: '2.10'\n                  price: '0.00011055'\n                created_at: '2021-11-26T14:35:45Z'\n                updated_at: '2021-11-26T14:35:45Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/trades/{trade_id}\":\n    get:\n      tags:\n      - Trade\n      summary: Get a single Trade\n      description: 'Returns a single Trade identified by its ID.\n\n        '\n      parameters:\n      - name: trade_id\n        in: path\n        description: Trade ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Trade\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Trade\"\n              example:\n                id: 82d19e27542a21c950eaae13059cf5f5trad\n                from_amount: '209.10'\n                traded_from_amount:\n                filled_from_amount:\n                traded_to_amount:\n                to_amount:\n                fee_amount:\n                price:\n                state: PENDING\n                reference: 9bcf5ffa4bb4d4ebbf92fb74f3a61f85\n                entity_id: b6ef80668690fa4dfbb51a3bc49a1fb7enty\n                trading_pair_id: 00000000000000000000000000000002trpr\n                from_account_id: 57e837a08685eff2cee29e82b6b09857cacc\n                to_account_id: d4f01daea26362d0de5fe89cb0f8d905acct\n                failure_reason:\n                estimations:\n                  traded_from_amount: '207.00'\n                  traded_to_amount: '0.02288435'\n                  to_amount: '0.02288435'\n                  fee_amount: '2.10'\n                  price: '0.00011055'\n                created_at: '2021-11-26T14:35:45Z'\n                updated_at: '2021-11-26T14:35:45Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/trading/trades/{trade_id}/cancel\":\n    post:\n      tags:\n      - Trade\n      summary: Cancel an existing Trade\n      description: 'A Trade can be cancelled by the Partner given it is still on the\n        `PENDING` state. In case the Trade cannot be found the endpoint replies with\n        `404 Not Found` status code.\n\n        '\n      parameters:\n      - name: trade_id\n        in: path\n        description: Trade ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A cancelled Trade\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Trade\"\n              example:\n                id: 82d19e27542a21c950eaae13059cf5f5trad\n                from_amount: '209.10'\n                traded_from_amount:\n                filled_from_amount:\n                traded_to_amount:\n                to_amount:\n                fee_amount:\n                price:\n                state: CANCELLED\n                reference: 9bcf5ffa4bb4d4ebbf92fb74f3a61f85\n                entity_id: b6ef80668690fa4dfbb51a3bc49a1fb7enty\n                trading_pair_id: 00000000000000000000000000000002trpr\n                from_account_id: 57e837a08685eff2cee29e82b6b09857cacc\n                to_account_id: d4f01daea26362d0de5fe89cb0f8d905acct\n                failure_reason:\n                estimations:\n                  traded_from_amount: '207.00'\n                  traded_to_amount: '0.02288435'\n                  to_amount: '0.02288435'\n                  fee_amount: '2.10'\n                  price: '0.00011055'\n                created_at: '2021-11-26T14:35:45Z'\n                updated_at: '2021-11-26T14:35:45Z'\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '422':\n          \"$ref\": \"#/components/responses/InvalidResource\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions\":\n    get:\n      tags:\n      - Transaction\n      summary: List all Transactions of an Account\n      description: 'Returns a list of all Transactions of the given Account, owned\n        by the given Entity.\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/filterParams\"\n      - \"$ref\": \"#/components/parameters/sortParams\"\n      - \"$ref\": \"#/components/parameters/limitOffsetParams\"\n      responses:\n        '200':\n          description: A list of Transactions\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                - items\n                properties:\n                  items:\n                    type: array\n                    items:\n                      \"$ref\": \"#/components/schemas/Transaction\"\n                  pagination:\n                    \"$ref\": \"#/components/schemas/paginationResponse\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions/{transaction_id}/cancel\":\n    post:\n      tags:\n      - Transaction\n      summary: Cancel a Transaction\n      description: 'Cancel a Transaction identified by its ID\n\n        '\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: Transaction ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Transaction\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Transaction\"\n              example:\n                id: f59e8c8188500efce5be51eb71e9db08tran\n                account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n                type: WITHDRAWAL\n                state: CANCELLED\n                amount: \"-1.23450000\"\n                fee_amount: '0.00100000'\n                total_amount: \"-1.23550000\"\n                reference: someting-fe8cbeecef486fe6edf9c3690e4f6b0a-unique\n                address: 1HesYJSP1QqcyPEjnQ9vzBL1wujruNGe7R\n                blockchain_txid: 0d0baf05852a856366a302ce9c9a9bbd36f95685a1e3d3bc9ef7715424ed577b\n                blockchain_output_n: 4\n                created_at: '2019-03-01T20:48:38Z'\n                updated_at: '2019-03-01T20:49:07Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '422':\n          \"$ref\": \"#/components/responses/InvalidResource\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions/{transaction_id}\":\n    get:\n      tags:\n      - Transaction\n      summary: Get a single Transaction\n      description: |\n        Returns a single Transaction identified by its ID of the given Account,\n        owned by the given Entity.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      - name: transaction_id\n        in: path\n        description: Transaction ID\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: A single Transaction\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/Transaction\"\n              example:\n                id: f59e8c8188500efce5be51eb71e9db08tran\n                account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n                type: WITHDRAWAL\n                state: PENDING\n                amount: \"-1.23450000\"\n                fee_amount: '0.00100000'\n                reference: someting-fe8cbeecef486fe6edf9c3690e4f6b0a-unique\n                address: 1HesYJSP1QqcyPEjnQ9vzBL1wujruNGe7R\n                blockchain_txid: 0d0baf05852a856366a302ce9c9a9bbd36f95685a1e3d3bc9ef7715424ed577b\n                blockchain_output_n: 4\n                created_at: '2019-03-01T20:48:38Z'\n                updated_at: '2019-03-01T20:49:07Z'\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions/transfer\":\n    post:\n      tags:\n      - Transfer\n      summary: Create a Transfer\n      description: |\n        Issues a request to create a new Transfer\n        from the given Account, owned by the given Entity, to another Account\n        in the same Asset.\n        Transfers can only be initiated from Accounts of `isolation` `POOLED`.\n\n        Two Transactions are created in the course of processing a Transfer:\n        one Transaction of type TRANSFER_OUTGOING in the sender Account,\n        and a corresponding Transaction of type TRANSFER_INCOMING in the receiver Account.\n        The second, Transfer (Incoming) Transaction, is only created if and when the\n        first one, Transfer (Outgoing), is successfully completed.\n\n        The required `reference` attribute serves as idempotency key, and MUST be unique\n        across all Transactions initiated by the partner.\n\n        If a request is issued twice with the same attributes,\n        including the value of the `reference` attribute, the second response will be the same\n        as the first one, and only one Transfer Transaction will be created as the effect.\n\n        In the request to issue a Transfer either the `amount` or the `total_amount`\n        MUST be specified. If the `amount` is specified, it indicates the \"transacted amount\",\n        i.e. the exact amount that will be sent to the recipient Account.\n        If the `total_amount` is specified, it indicates the amount that will be deducted from\n        the Account Balance, the amount that will be sent to the recipient\n        is determined after the fees are calculated and applied. Specifying the `total_amount`\n        is useful in case it is desired to transfer the whole Balance of the Account.\n\n        The successful response of the Transfer request contains a reference to a Transaction,\n        which will *eventually* be created. If right after the partner tries to get this single\n        Transaction by its ID and receives a `\"404 Not found\"` response, it is advised to\n        repeat the attempt after some (rather short) period of time.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n              - reference\n              - receiver_account_id\n              type: object\n              properties:\n                amount:\n                  type: string\n                  description: 'Transacted amount *(required if `total_amount` is\n                    not specified)*\n\n                    '\n                total_amount:\n                  type: string\n                  description: 'Total amount deducted from the Account *(required\n                    if `amount` is not specified)*\n\n                    '\n                reference:\n                  type: string\n                  description: A unique reference identifier provided by the partner\n                receiver_account_id:\n                  type: string\n                  description: An ID of the recipient Account, of the same Account\n            example:\n              reference: something-d4cbde56778cc85c2baf4d1b24c4097f-unique\n              receiver_account_id: 8edc66729b14bf1921292ad7ee0fbce8acct\n              total_amount: '10.00000000'\n      responses:\n        '201':\n          description: Successfully processed Transfer request response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionRequestResponse\"\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\n  \"/entities/{entity_id}/accounts/{account_id}/transactions/withdrawal\":\n    post:\n      tags:\n      - Withdrawal\n      summary: Create a Withdrawal\n      description: |\n        Issues a request to create a new Withdrawal Transaction from the given Account, owned\n        by the given Entity.\n\n        The required `reference` attribute serves as idempotency key, and MUST be unique\n        across all Transactions initiated by the partner.\n\n        If a request is issued twice with the same attributes,\n        including the value of the `reference` attribute, the second response will be the same\n        as the first one, and only one Withdrawal Transaction will be created as the effect.\n\n        In the request to issue a Withdrawal either the `amount` or the `total_amount`\n        MUST be specified. If the `amount` is specified, it indicates the \"transacted amount\",\n        i.e. the exact amount that will be sent to the given address on the blockchain.\n        If the `total_amount` is specified, it indicates the amount that will be deducted from\n        the Account Balance, the amount that will be sent to the recipient on the blockchain\n        is determined after the fees are calculated and applied. Specifying the `total_amount`\n        is useful in case it is desired to withdraw the whole Balance of the Account.\n\n        The successful response of the Withdrawal request contains a reference to a Transaction,\n        which will *eventually* be created. If right after the partner tries to get this single\n        Transaction by its ID and receives a `\"404 Not found\"` response, it is advised to\n        repeat the attempt after some (rather short) period of time.\n      parameters:\n      - name: entity_id\n        in: path\n        description: Entity ID\n        required: true\n        schema:\n          type: string\n      - name: account_id\n        in: path\n        description: Account ID\n        required: true\n        schema:\n          type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              required:\n              - reference\n              - address\n              type: object\n              properties:\n                amount:\n                  type: string\n                  description: 'Transacted amount *(required if `total_amount` is\n                    not specified)*\n\n                    '\n                total_amount:\n                  type: string\n                  description: 'Total amount deducted from the Account *(required\n                    if `amount` is not specified)*\n\n                    '\n                reference:\n                  type: string\n                  description: A unique reference identifier provided by the partner\n                address:\n                  type: string\n                  description: A digital asset specific address, recipient of Withdrawal\n            example:\n              reference: something-daada07e2bcd43ccc443750568effbe2-unique\n              address: 1MbH8VxfH74VLcv8q3BjBQizcnV2c7Tmre\n              amount: '1.15000000'\n      responses:\n        '201':\n          description: Successfully processed Withdrawal request response\n          content:\n            application/json:\n              schema:\n                \"$ref\": \"#/components/schemas/TransactionRequestResponse\"\n        '400':\n          \"$ref\": \"#/components/responses/InvalidRequest\"\n        '401':\n          \"$ref\": \"#/components/responses/Unauthorized\"\n        '404':\n          \"$ref\": \"#/components/responses/NotFound\"\n        '500':\n          \"$ref\": \"#/components/responses/InternalServerError\"\n        '503':\n          \"$ref\": \"#/components/responses/UnavailableError\"\ncomponents:\n  schemas:\n    paginationResponse:\n      required:\n      - next\n      - prev\n      properties:\n        next:\n          type: integer\n          nullable: true\n          description: 'The number of the next page in the dataset if available\n\n            '\n        prev:\n          type: integer\n          nullable: true\n          description: 'The number of the previous page in the dataset if available\n\n            '\n    TransactionRequestResponse:\n      description: 'A successul response to a Transaction initiation request (e.g.\n        Withdrawal or Transfer).\n\n        '\n      type: object\n      required:\n      - transaction_id\n      properties:\n        transaction_id:\n          type: string\n          description: ID of the Transaction that will be eventually created for this\n            request\n      example:\n        transaction_id: afa4bcc92adaad64fdaad3c48b8cb840tran\n    Account:\n      oneOf:\n      - \"$ref\": \"#/components/schemas/AccountBase\"\n      - \"$ref\": \"#/components/schemas/AccountToken\"\n    AccountBase:\n      type: object\n      required:\n      - id\n      - entity_id\n      - asset_id\n      - balance\n      - available_balance\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Account\n        entity_id:\n          type: string\n          description: ID of the Entity owning the Account\n        asset_id:\n          type: string\n          description: ID of the Asset the Account is linked with\n        balance:\n          type: string\n          description: Balance of the Account\n        available_balance:\n          type: string\n          description: Available Balance of the Account\n        type:\n          type: string\n          description: The type of the Account\n          example: BASE\n          enum:\n          - BASE\n        isolation:\n          type: string\n          description: \"(deprecated) The isolation level of the Account\"\n          example: POOLED\n          enum:\n          - POOLED\n          - SEGREGATED\n        created_at:\n          type: string\n          description: Time at which the Account was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Account was last updated\n          format: date-time\n      example:\n        id: '09934947ffdd4bef50ba88ddc5eab0bfacct'\n        entity_id: 359fe08986bbc6b62ea406f864b1ab90enty\n        asset_id: 00000000000000000000000000000001asst\n        balance: '123.45670000'\n        available_balance: '123.45600000'\n        isolation: POOLED\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:31:06Z'\n    AccountToken:\n      type: object\n      required:\n      - id\n      - base_account_id\n      - entity_id\n      - asset_id\n      - balance\n      - available_balance\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Account\n        base_account_id:\n          type: string\n          description: 'The ID of the base Account if Account belongs to an Asset\n            of type `TOKEN`\n\n            '\n        entity_id:\n          type: string\n          description: ID of the Entity owning the Account\n        asset_id:\n          type: string\n          description: ID of the Asset the Account is linked with\n        balance:\n          type: string\n          description: Balance of the Account\n        available_balance:\n          type: string\n          description: Available Balance of the Account\n        type:\n          type: string\n          description: The type of the Account\n          example: TOKEN\n          enum:\n          - TOKEN\n        isolation:\n          type: string\n          description: The isolation level of the Account\n          example: SEGREGATED\n          enum:\n          - POOLED\n          - SEGREGATED\n        created_at:\n          type: string\n          description: Time at which the Account was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Account was last updated\n          format: date-time\n      example:\n        id: '09934947ffdd4bef50ba88ddc5eab0bfacct'\n        base_account_id: e3c4bc7bdfeaed3c0a3cebd2addcd5acct\n        entity_id: 359fe08986bbc6b62ea406f864b1ab90enty\n        asset_id: 00000000000000000000000000000001asst\n        balance: '123.45670000'\n        available_balance: '123.45600000'\n        isolation: SEGREGATED\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:31:06Z'\n    Address:\n      type: object\n      required:\n      - id\n      - account_id\n      - address\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unqiue ID of the Address\n        account_id:\n          type: string\n          description: ID of the Account the Address belongs to\n        address:\n          type: string\n          description: A digital asset specific address\n          example: 1NgiUwkhYVYMy3eoMC9dHcvdHejGxcuaWm\n        created_at:\n          type: string\n          description: Time at which the Address was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Address was last updated\n          format: date-time\n      example:\n        id: dfddb6ba632e3ee65e49f37b059763cdaddr\n        account_id: df10de8c583c8b2ca85ca169df349bffacct\n        address: 1NgiUwkhYVYMy3eoMC9dHcvdHejGxcuaWm\n        created_at: '2019-03-01T21:47:06Z'\n        updated_at: '2019-03-01T21:47:06Z'\n    ApprovalMethod:\n      description: 'An ApprovalMethod registered for some Entity\n\n        '\n      oneOf:\n      - \"$ref\": \"#/components/schemas/ApprovalMethodAUTHY_PUSH\"\n      - \"$ref\": \"#/components/schemas/ApprovalMethodSMS\"\n      - \"$ref\": \"#/components/schemas/ApprovalMethodDSA_ED25519\"\n      - \"$ref\": \"#/components/schemas/ApprovalMethodGROUP\"\n    ApprovalMethodAUTHY_PUSH:\n      description: |\n        An ApprovalMethod of type `AUTHY_PUSH`.\n\n        It represents an MFA method which uses Authy push notifications\n        for approving Transactions.\n\n        In case of AUTHY_PUSH type of ApprovalMethod, an ACTIVATED state\n        means that the person is succesfully enrolled in Authy service,\n        installed and configured the Authy app on their (mobile) device.\n      type: object\n      required:\n      - id\n      - entity_id\n      - type\n      - state\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of this ApprovalMethod\n        entity_id:\n          type: string\n          description: ID of the Entity this ApprovalMethod is registered for\n        type:\n          type: string\n          description: Type of the ApprovalMethod\n          enum:\n          - AUTHY_PUSH\n        state:\n          type: string\n          description: Current state of the ApprovalMethod\n          enum:\n          - PENDING\n          - ACTIVATED\n          - DEACTIVATED\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was updated\n          format: date-time\n      example:\n        id: 6ec2fbc16ccb8238cbc89b3bf7ea7f39apmt\n        entity_id: 31adbcbbcede1a7a8cffb4a0e598ad5centy\n        type: AUTHY_PUSH\n        state: ACTIVATED\n        created_at: '2019-11-03T12:21:16Z'\n        updated_at: '2019-11-03T12:46:10Z'\n    ApprovalMethodSMS:\n      description: |\n        An ApprovalMethod of type `SMS`.\n\n        It represents an MFA method which uses Verify SMS notifications\n        for approving Transactions.\n\n        In case of SMS type of ApprovalMethod, an ACTIVATED state\n        means that the person is succesfully KYCed.\n      type: object\n      required:\n      - id\n      - entity_id\n      - type\n      - state\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of this ApprovalMethod\n        entity_id:\n          type: string\n          description: ID of the Entity this ApprovalMethod is registered for\n        type:\n          type: string\n          description: Type of the ApprovalMethod\n          enum:\n          - SMS\n        state:\n          type: string\n          description: Current state of the ApprovalMethod\n          enum:\n          - PENDING\n          - ACTIVATED\n          - DEACTIVATED\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was updated\n          format: date-time\n      example:\n        id: 6ec2fbc16ccb8238cbc89b3bf7ea7f39apmt\n        entity_id: 31adbcbbcede1a7a8cffb4a0e598ad5centy\n        type: SMS\n        state: ACTIVATED\n        created_at: '2019-11-03T12:21:16Z'\n        updated_at: '2019-11-03T12:46:10Z'\n    ApprovalMethodDSA_ED25519:\n      description: |\n        An ApprovalMethod of type `DSA_ED25519`.\n\n        It represents an MFA method which uses an ECDSA algorithm to produce\n        digitally signed proofs for approving Transactions.\n\n        In case of DSA_ED25519 type of ApprovalMethod, an ACTIVATED state\n        means that the platform operator has successfully validated the sumbitted\n        public key and activated the ApprovalMethod.\n      type: object\n      required:\n      - id\n      - entity_id\n      - type\n      - state\n      - pub_key\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of this ApprovalMethod\n        entity_id:\n          type: string\n          description: ID of the Entity this ApprovalMethod is registered for\n        type:\n          type: string\n          description: Type of the ApprovalMethod\n          enum:\n          - DSA_ED25519\n        state:\n          type: string\n          description: Current state of the ApprovalMethod\n          enum:\n          - PENDING\n          - ACTIVATED\n          - DEACTIVATED\n        pub_key:\n          type: string\n          description: |\n            A public key part of the Entity's Approval key.\n\n            A 32-byte Ed25519 public key in a hexadecimal representation.\n          example: aba6103aef8c3f6e3c38f0d38bee5ebaf6b6f6427aec641d6253155c97f4ed2e\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was updated\n          format: date-time\n      example:\n        id: 2f1beeaf79a1d7ce8afaeaf54bfc9efaapmt\n        entity_id: 0ec4a04df2fcd18416fef957b32cc7b7enty\n        type: DSA_ED25519\n        state: PENDING\n        pub_key: 6db8efd521dd049eb6da49cdd67ef4ec31ca66ca2ac5d219dd9dfef36d2dccb8\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalMethodGROUP:\n      description: 'An ApprovalMethod of type `GROUP`.\n\n        '\n      type: object\n      required:\n      - id\n      - entity_id\n      - type\n      - state\n      - approval_group\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of this ApprovalMethod\n        entity_id:\n          type: string\n          description: ID of the Entity this ApprovalMethod is registered for\n        type:\n          type: string\n          description: Type of the ApprovalMethod\n          enum:\n          - GROUP\n        state:\n          type: string\n          description: Current state of the ApprovalMethod\n          enum:\n          - PENDING\n          - ACTIVATED\n          - DEACTIVATED\n        approval_group:\n          type: object\n          properties:\n            id:\n              type: string\n              description: ApprovalGroup ID\n            quorum:\n              type: integer\n              description: ApprovalGroup quorum\n            members:\n              type: array\n              items:\n                type: string\n                description: Entity ID of the ApprovalGroup Member\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was updated\n          format: date-time\n      example:\n        id: 6ec2fbc16ccb8238cbc89b3bf7ea7f39apmt\n        entity_id: 31adbcbbcede1a7a8cffb4a0e598ad5centy\n        approval_group:\n          id: 4aeeac12d4b92c967cb826ac5dee5a8eapgr\n          quorum: 2\n          memmbers:\n          - 7d57be2d17a328150abd28daaae76d47enty\n          - 9f32fe2d17a328150abd28daaae76d47enty\n        type: GROUP\n        state: ACTIVATED\n        created_at: '2019-11-03T12:21:16Z'\n        updated_at: '2019-11-03T12:46:10Z'\n    ApprovalRequest:\n      description: |\n        The Object that represents an ApprovalRequest. Depending on the type an\n        ApprovalRequest might have different attributes.\n\n        An ApprovalRequest can be of type: `AUTHY_PUSH`, `SMS` or `DSA_ED25519`\n      oneOf:\n      - \"$ref\": \"#/components/schemas/ApprovalRequestAUTHY_PUSH\"\n      - \"$ref\": \"#/components/schemas/ApprovalRequestSMS\"\n      - \"$ref\": \"#/components/schemas/ApprovalRequestDSA_ED25519\"\n      - \"$ref\": \"#/components/schemas/ApprovalRequestGROUP\"\n      - \"$ref\": \"#/components/schemas/ApprovalRequestAUTHY_PUSH_DEPRECATED\"\n      - \"$ref\": \"#/components/schemas/ApprovalRequestSMS_DEPRECATED\"\n      - \"$ref\": \"#/components/schemas/ApprovalRequestDSA_ED25519_DEPRECATED\"\n    ApprovalRequestAUTHY_PUSH:\n      description: |\n        An ApprovalRequest for ApprovalMethod of type `AUTHY_PUSH`.\n\n        This ApprovalMethod is provided for Entities of type `PERSON` as Account holder.\n      type: object\n      required:\n      - id\n      - entity_id\n      - approval_method_id\n      - resource_id\n      - resource_type\n      - state\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        resource_id:\n          type: string\n          description: The ID of the resource that will be approved with this ApprovalRequest\n        resource_type:\n          type: string\n          description: The type of the resource that will be approved with this ApprovalRequest.\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        type:\n          type: string\n          description: Approval method\n          example: AUTHY_PUSH\n          enum:\n          - AUTHY_PUSH\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        resource_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        resource_type: TRANSACTION\n        type: AUTHY_PUSH\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalRequestSMS:\n      description: |\n        An ApprovalRequest for ApprovalMethod of type `SMS`.\n\n        This ApprovalMethod is provided for Entities of type `PERSON` as Account holder.\n      type: object\n      required:\n      - id\n      - entity_id\n      - approval_method_id\n      - resource_id\n      - resource_type\n      - state\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        resource_id:\n          type: string\n          description: The ID of the resource that will be approved with this ApprovalRequest\n        resource_type:\n          type: string\n          description: The type of the resource that will be approved with this ApprovalRequest.\n        type:\n          type: string\n          description: Approval method\n          example: SMS\n          enum:\n          - SMS\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        resource_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        resource_type: TRANSACTION\n        type: SMS\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalRequestDSA_ED25519:\n      description: |\n        An ApprovalRequest for ApprovalMethod of type `DSA_ED25519`.\n\n        This method is provided for Entities of type `PARTNER`, as Account holder.\n\n        When requested, the ApprovalRequest will contain a challenge that MUST be\n        solved by the Account holder in order for the Transaction to be processed.\n      type: object\n      required:\n      - id\n      - entity_id\n      - approval_method_id\n      - resource_id\n      - resource_type\n      - state\n      - type\n      - challenge\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - CREATING\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        resource_id:\n          type: string\n          description: The ID of the resource that will be approved with this ApprovalRequest\n        resource_type:\n          type: string\n          description: The type of the resource that will be approved with this ApprovalRequest.\n        type:\n          type: string\n          description: Approval method\n        challenge:\n          type: object\n          description: |\n            An array containing a list of attributes that are used to construct a\n            signature as a solution to the challenge message\n          properties:\n            attrs:\n              type: array\n              description: 'An array containing the keys used to construct the challenge\n                message\n\n                '\n              items:\n                type: string\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        resource_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        resource_type: TRANSACTION\n        type: DSA_ED25519\n        challenge:\n          attrs:\n          - id\n          - account_id\n          - type\n          - reference\n          - amount\n          - fee_amount\n          - address\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalRequestAUTHY_PUSH_DEPRECATED:\n      description: |\n        -- THIS SCHEMA IS DEPRECATED AND MIGHT BE REMOVED IN THE FUTURE --\n        An ApprovalRequest for ApprovalMethod of type `AUTHY_PUSH`.\n\n        This ApprovalMethod is provided for Entities of type `PERSON` as Account holder.\n      type: object\n      required:\n      - id\n      - entity_id\n      - approval_method_id\n      - resource_id\n      - resource_type\n      - state\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        resource_id:\n          type: string\n          description: The ID of the resource that will be approved with this ApprovalRequest\n        resource_type:\n          type: string\n          description: The type of the resource that will be approved with this ApprovalRequest.\n        transaction_id:\n          type: string\n          description: The ID of the Transaction that will be approved with this ApprovalRequest\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        type:\n          type: string\n          description: Approval method\n          example: AUTHY_PUSH\n          enum:\n          - AUTHY_PUSH\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        resource_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        transaction_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        resource_type: TRANSACTION\n        type: AUTHY_PUSH\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalRequestSMS_DEPRECATED:\n      description: |\n        An ApprovalRequest for ApprovalMethod of type `SMS`.\n\n        This ApprovalMethod is provided for Entities of type `PERSON` as Account holder.\n      type: object\n      required:\n      - id\n      - entity_id\n      - approval_method_id\n      - transaction_id\n      - resource_id\n      - resource_type\n      - state\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        transaction_id:\n          type: string\n          description: The ID of the Transaction that will be approved with this ApprovalRequest\n        resource_id:\n          type: string\n          description: The ID of the resource that will be approved with this ApprovalRequest\n        resource_type:\n          type: string\n          description: The type of the resource that will be approved with this ApprovalRequest.\n        type:\n          type: string\n          description: Approval method\n          example: SMS\n          enum:\n          - SMS\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        resource_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        resource_type: TRANSACTION\n        type: SMS\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalRequestDSA_ED25519_DEPRECATED:\n      description: |\n        An ApprovalRequest for ApprovalMethod of type `DSA_ED25519`.\n\n        This method is provided for Entities of type `PARTNER`, as Account holder.\n\n        When requested, the ApprovalRequest will contain a challenge that MUST be\n        solved by the Account holder in order for the Transaction to be processed.\n      type: object\n      required:\n      - id\n      - entity_id\n      - approval_method_id\n      - resource_id\n      - resource_type\n      - transaction_id\n      - state\n      - type\n      - challenge\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - CREATING\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        transaction_id:\n          type: string\n          description: The ID of the Transaction that will be approved with this ApprovalRequest\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        resource_id:\n          type: string\n          description: The ID of the resource that will be approved with this ApprovalRequest\n        resource_type:\n          type: string\n          description: The type of the resource that will be approved with this ApprovalRequest.\n        type:\n          type: string\n          description: Approval method\n        challenge:\n          type: object\n          description: |\n            An array containing a list of attributes that are used to construct a\n            signature as a solution to the challenge message\n          properties:\n            attrs:\n              type: array\n              description: 'An array containing the keys used to construct the challenge\n                message\n\n                '\n              items:\n                type: string\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        resource_id: d8ffb93a9269086393e271cf564dc1a7atrx\n        resource_type: TRANSACTION\n        type: DSA_ED25519\n        challenge:\n          attrs:\n          - id\n          - account_id\n          - type\n          - reference\n          - amount\n          - fee_amount\n          - address\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    ApprovalRequestGROUP:\n      description: 'An ApprovalRequest for ApprovalMethod of type `GROUP`.\n\n        '\n      type: object\n      required:\n      - id\n      - state\n      - entity_id\n      - approval_method_id\n      - resource_type\n      - resource_id\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: The ID of the ApprovalRequest\n        state:\n          type: string\n          description: The state of the ApprovalRequest\n          enum:\n          - CREATING\n          - PENDING\n          - APPROVED\n          - CANCELLED\n          - FAILED\n        entity_id:\n          type: string\n          description: The ID of the Entity that owns the ApprovalRequest\n        approval_method_id:\n          type: string\n          description: The ID of the associated ApprovalMethod\n        approval_group_id:\n          type: string\n          description: The ID of the associated ApprovalGroup\n        resource_id:\n          type: string\n          description: A reference to the corresponding resource\n        resource_type:\n          type: string\n          description: Type of resource\n        type:\n          type: string\n          description: ApprovalMethod type\n          example: GROUP\n          enum:\n          - GROUP\n        created_at:\n          type: string\n          description: Time at which this resource was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which this resource was last updated\n          format: date-time\n      example:\n        id: 2f1fa4af79a1d7ce8a8ff4f54bfc9efaprq\n        state: PENDING\n        resource_type: TRANSACTION\n        entity_id: c7cbbb0930f21e1525257cac1fc97e54enty\n        approval_method_id: aa28b780ec044732f2a02ab44e6275cfapmt\n        approval_group_id: c05c94a9e4e511df38d345e0642b86b6apgr\n        resource_id: afa4bcc92adaad64fdaad3c48b8cb840tran\n        type: GROUP\n        created_at: '2019-11-03T13:05:51Z'\n        updated_at: '2019-11-03T13:05:51Z'\n    Asset:\n      oneOf:\n      - \"$ref\": \"#/components/schemas/AssetBase\"\n      - \"$ref\": \"#/components/schemas/AssetToken\"\n      - \"$ref\": \"#/components/schemas/AssetFiat\"\n      type: object\n    AssetBase:\n      required:\n      - id\n      - code\n      - description\n      - precision\n      - address_validation\n      - tx_min_amount\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Asset\n        code:\n          type: string\n          description: |\n            A non-unique and non-permanent ISO code-like identifier of\n            the digital asset\n        description:\n          type: string\n          description: 'A human readable description of an Asset\n\n            '\n        precision:\n          type: integer\n          description: 'Precision of monetary amounts in this asset (i.e. number of\n            decimal places)\n\n            '\n        address_validation:\n          type: string\n          description: 'Regular expression which can be used to validate addresses\n            for this Asset\n\n            '\n        tx_min_amount:\n          type: string\n          description: 'Minimal amount allowed for outgoing transactions in this Asset\n\n            '\n        type:\n          type: string\n          description: The type of the Asset. `BASE` in this case.\n          enum:\n          - BASE\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      example:\n        id: 00000000000000000000000000000001asst\n        code: BTC\n        description: Bitcoin\n        precision: 8\n        address_validation: \"^(bc(0([ac-hj-np-z02-9]{39}|[ac-hj-np-z02-9]{59})|1[ac-hj-np-z02-9]{8,87})|[13][a-km-zA-HJ-NP-Z1-9]{25,35})$\"\n        tx_min_amount: '0.00001'\n        type: BASE\n        created_at: '2019-03-01T22:46:38Z'\n        updated_at: '2019-03-01T22:46:38Z'\n    AssetToken:\n      required:\n      - id\n      - code\n      - description\n      - precision\n      - address_validation\n      - tx_min_amount\n      - type\n      - base_asset_id\n      - token_url\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Asset\n        code:\n          type: string\n          description: |\n            A non-unique and non-permanent ISO code-like identifier of\n            the digital asset\n        description:\n          type: string\n          description: 'A human readable description of an Asset\n\n            '\n        precision:\n          type: integer\n          description: 'Precision of monetary amounts in this asset (i.e. number of\n            decimal places)\n\n            '\n        address_validation:\n          type: string\n          description: 'Regular expression which can be used to validate addresses\n            for this Asset\n\n            '\n        tx_min_amount:\n          type: string\n          description: 'Minimal amount allowed for outgoing transactions in this Asset\n\n            '\n        type:\n          type: string\n          description: The type of the Asset. `TOKEN` in this case.\n          enum:\n          - TOKEN\n        base_asset_id:\n          type: string\n          description: 'The ID of the Asset this Token belongs to.\n\n            '\n        token_url:\n          type: string\n          description: |\n            The type and address of the Token Asset in URL form.\n\n            Currently only ERC20 tokens on ETH are supported and the URL form has the following format:\n            `erc20://\u003cCONTRACT_ADDRESS\u003e`. Here `\u003cCONTRACT_ADDRESS\u003e` represents the ETH address\n            of the smart contract implementing the ERC20 token.\n          example: erc20://0x722dd3F80BAC40c951b51BdD28Dd19d435762180\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      example:\n        id: 00030000000000000000000000000002asst\n        code: TKN\n        description: Token\n        precision: 8\n        address_validation: \"^0x[a-fA-F0-9]{40}$\"\n        tx_min_amount: '0.00001'\n        type: TOKEN\n        base_asset_id: 00000000000000000000000000000002asst\n        example: erc20://0x722dd3F80BAC40c951b51BdD28Dd19d435762180\n        created_at: '2019-03-01T22:46:38Z'\n        updated_at: '2019-03-01T22:46:38Z'\n    AssetFiat:\n      required:\n      - id\n      - code\n      - description\n      - precision\n      - address_validation\n      - tx_min_amount\n      - type\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Asset\n        code:\n          type: string\n          description: |\n            A non-unique and non-permanent ISO code-like identifier of\n            the digital asset\n        description:\n          type: string\n          description: 'A human readable description of an Asset\n\n            '\n        precision:\n          type: integer\n          description: 'Precision of monetary amounts in this asset (i.e. number of\n            decimal places)\n\n            '\n        address_validation:\n          type: string\n          nullable: true\n          description: \"(DEPRECATED) Will not be used in FIAT assets\\n\"\n        tx_min_amount:\n          type: string\n          nullable: true\n          description: 'Minimal amount allowed for outgoing transactions in this Asset\n\n            '\n        type:\n          type: string\n          description: The type of the Asset. `FIAT` in this case.\n          enum:\n          - FIAT\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      example:\n        id: f0000000000000000000000000000001asst\n        type: FIAT\n        code: EUR\n        precision: 2\n        description: Euro\n        address_validation:\n        tx_min_amount: '30.0'\n        created_at: '2020-11-24T12:56:55Z'\n        updated_at: '2020-11-24T12:57:09Z'\n    ClosureRequest:\n      type: object\n      required:\n      - id\n      - entity_id\n      - reason\n      - state\n      - valid_until\n      - legal_closure_scheduled_at\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the ClosureRequest\n        reason:\n          type: string\n          description: Reason for Account closure\n          example: ORDINARY_INTERNAL\n          enum:\n          - CUSTOMER_WISH\n          - ORDINARY_INTERNAL\n          - COMPLIANCE_IMMEDIATE_INTERNAL\n        valid_until:\n          type: string\n          description: Time until which the Entity can empty their Accounts\n          format: date-time\n        legal_closure_scheduled_at:\n          type: string\n          description: Time in which the Entity will be Legally Closed\n          format: date-time\n        state:\n          type: string\n          description: The state of the ClosureRequest\n          example: PENDING\n          enum:\n          - PENDING\n          - APPROVED\n          - PROCESSING\n          - FAILED\n          - COMPLETED\n        created_at:\n          type: string\n          description: Time at which the ClosureRequest was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the ClosureRequest was last updated\n          format: date-time\n      example:\n        id: ae93e4dcb3d0f5d0e36a227a94ff39e5creq\n        reason: ORDINARY_INTERNAL\n        entity_id: 275cf8f7559fd88710b4c919f85777aaenty\n        state: APPROVED\n        valid_until: '2019-07-01T22:31:06Z'\n        legal_closure_scheduled_at: '2019-05-01T22:31:06Z'\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:31:06Z'\n    Entity:\n      oneOf:\n      - \"$ref\": \"#/components/schemas/EntityPartner\"\n      - \"$ref\": \"#/components/schemas/EntityPerson\"\n      - \"$ref\": \"#/components/schemas/EntityRepresentativePerson\"\n      - \"$ref\": \"#/components/schemas/EntityBusiness\"\n    EntityPartner:\n      type: object\n      required:\n      - id\n      - type\n      - state\n      - business_id\n      - trading_terms_conditions_signed_at\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Entity\n        state:\n          type: string\n          description: State of Entity\n        type:\n          type: string\n          description: Type of Entity\n          example: PARTNER\n          enum:\n          - PARTNER\n        business_id:\n          type: string\n          description: The ID of the business, provided by Solarisbank API\n        trading_terms_conditions_signed_at:\n          type: string\n          description: Time at which the customer acknowledged the T\u0026Cs for trading\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          description: Time at which the Entity was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Entity was last updated\n          format: date-time\n      example:\n        id: 1cbce42a62fc0cdeb1cf17df3ecd6fd6enty\n        type: PARTNER\n        state: ACTIVE\n        business_id: 880bbac68a34add190786b9c74f4c82fcbiz\n        trading_terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:31:06Z'\n    EntityPerson:\n      type: object\n      required:\n      - id\n      - type\n      - state\n      - person_id\n      - terms_conditions_signed_at\n      - trading_terms_conditions_signed_at\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Entity\n        type:\n          type: string\n          description: Type of Entity\n          example: PERSON\n          enum:\n          - PERSON\n        person_id:\n          type: string\n          description: The ID of the person, provided by solarisBank KYC product\n        terms_conditions_signed_at:\n          type: string\n          description: Time at which the customer acknowledged the T\u0026Cs\n          format: date-time\n          nullable: true\n        state:\n          type: string\n          description: 'The state of an Entity of type `PERSON`.\n\n            '\n          example: ACTIVE\n          enum:\n          - PENDING\n          - LOCKED\n          - ACTIVE\n          - CLOSING\n          - LEGALLY_CLOSED\n          - CLOSED\n        legally_closed_at:\n          type: string\n          description: Time at which the Entity's state was set to `LEGALLY_CLOSED`\n          format: date-time\n          nullable: true\n        closed_at:\n          type: string\n          description: Time at which the Entity's state was set to `CLOSED`\n          format: date-time\n          nullable: true\n        trading_terms_conditions_signed_at:\n          type: string\n          description: Time at which the customer acknowledged the T\u0026Cs for trading\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          description: Time at which the Entity was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Entity was last updated\n          format: date-time\n      example:\n        id: 7d57be2d17a328150abd28daaae76d47enty\n        type: PERSON\n        state: ACTIVE\n        person_id: e3c4bc7bdfeaed3c0a3cebd2addcd5accper\n        terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        legally_closed_at: '2021-02-01T13:22:12Z'\n        closed_at: '2021-03-01T16:54:16Z'\n        trading_terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:45:06Z'\n    EntityRepresentativePerson:\n      type: object\n      required:\n      - id\n      - type\n      - state\n      - entity_id\n      - person_id\n      - trading_terms_conditions_signed_at\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Entity\n        type:\n          type: string\n          description: Type of Entity\n          example: REPRESENTATIVE_PERSON\n          enum:\n          - REPRESENTATIVE_PERSON\n        person_id:\n          type: string\n          description: The ID of the person, provided by Solarisbank's KYC product\n        entity_id:\n          type: string\n          description: The ID of the Entity they respresent.\n        state:\n          type: string\n          description: 'The state of an Entity of type `REPRESENTATIVE_PERSON`.\n\n            '\n          example: ACTIVE\n          enum:\n          - PENDING\n          - LOCKED\n          - ACTIVE\n        trading_terms_conditions_signed_at:\n          type: string\n          description: Time at which the customer acknowledged the T\u0026Cs for trading\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          description: Time at which the Entity was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Entity was last updated\n          format: date-time\n      example:\n        id: 7d57be2d17a328150abd28daaae76d47enty\n        type: REPRESENTATIVE_PERSON\n        state: ACTIVE\n        person_id: e3c4bc7bdfeaed3c0a3cebd2addcd5accper\n        entity_id: 10ef67dc895d6c19c273b1ffba0c1692enty\n        terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        legally_closed_at: '2021-02-01T13:22:12Z'\n        closed_at: '2021-03-01T16:54:16Z'\n        trading_terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:45:06Z'\n    EntityBusiness:\n      type: object\n      required:\n      - id\n      - name\n      - type\n      - state\n      - terms_conditions_signed_at\n      - business_id\n      - trading_terms_conditions_signed_at\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Entity\n        type:\n          type: string\n          description: Type of Entity\n          example: PERSON\n          enum:\n          - BUSINESS\n        state:\n          type: string\n          description: State of Entity\n        name:\n          type: string\n          description: A description for the Entity\n          example: Ono Sendai Ltd.\n        terms_conditions_signed_at:\n          type: string\n          description: Time at which the customer acknowledged the T\u0026Cs\n          format: date-time\n          nullable: true\n        business_id:\n          type: string\n          description: The ID of the business, provided by Solarisbank API\n        trading_terms_conditions_signed_at:\n          type: string\n          description: Time at which the customer acknowledged the T\u0026Cs for trading\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          description: Time at which the Entity was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Entity was last updated\n          format: date-time\n      example:\n        id: 7d57be2d17a328150abd28daaae76d47enty\n        type: BUSINESS\n        state: ACTIVE\n        business_id: 880bbac68a34add190786b9c74f4c82fcbiz\n        terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        trading_terms_conditions_signed_at: '2019-03-01T22:45:06Z'\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:45:06Z'\n    EntityTierInfo:\n      type: object\n      required:\n      - id\n      - send_limit\n      - send_interval\n      - advancement_volume\n      - advancement_interval\n      - volume\n      - activated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Tier\n        send_limit:\n          type: string\n          description: The amount of EUR the Entity is allowed to send every send_interval\n            while on this Tier.\n        send_interval:\n          type: integer\n          description: The unit of time (in seconds) for which the Entity's withdrawal\n            is measured.\n        advancement_volume:\n          type: string\n          description: The amount of EUR the Entity must transact before it can advance\n            to the next Tier, if any.\n        advancement_interval:\n          type: integer\n          description: |\n            The amount of time (in seconds) which the Entity must be in this Tier before it can\n            advance to the next Tier, if any.\n        volume:\n          type: string\n          description: The amount of EUR the Entity has transacted while in this Tier.\n        activated_at:\n          type: string\n          format: date-time\n          description: The time at which the Tier was activated for the Entity.\n    LedgerEntry:\n      description: |\n        A Ledger Entry is an account entry which indicates by which amount the Account\n        balance was changed. The amount of a Ledger Entry can be either positive or negative,\n        where positive amounts represent an increase of the Account balance and negative\n        amounts represent a decrease.\n      type: object\n      required:\n      - id\n      - account_id\n      - transaction_id\n      - type\n      - amount\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Ledger Entry\n        account_id:\n          type: string\n          description: ID of the Account the Ledger Entry belongs to\n        transaction_id:\n          type: string\n          description: ID of the Transaction that produced this Ledger Entry\n        type:\n          type: string\n          description: Type of the Ledger Entry\n          example: DEPOSIT_AMOUNT\n          enum:\n          - DEPOSIT_AMOUNT\n          - DEPOSIT_FEE\n          - WITHDRAWAL_AMOUNT\n          - WITHDRAWAL_FEE\n          - TRANSFER_AMOUNT\n          - TRANSFER_FEE\n          - WITHDRAWAL_BATCH_FEE\n        amount:\n          type: string\n          description: Amount of the Ledger Entry, positive or negative\n          example: '0.15000000'\n        created_at:\n          type: string\n          description: Time at which the Ledger Entry was created\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n      example:\n        id: 1c0fb8dbafa519adba070bba252b1263lent\n        account_id: 1570f8eba8a6cffebf6354b718c138e7acct\n        transaction_id: ce9e6e3d62d7d0811a3f8c8aabbac466tran\n        type: WITHDRAWAL_AMOUNT\n        amount: \"-1.00000000\"\n        created_at: '2019-03-01T22:31:06Z'\n        updated_at: '2019-03-01T22:31:06Z'\n    Tier:\n      type: object\n      required:\n      - id\n      - level\n      - send_limit\n      - send_interval\n      - advancement_volume\n      - advancement_interval\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Tier\n        level:\n          type: integer\n          description: |\n            The level at which the Tier is.  Entities advance to Tier at the next higher\n            level on meeting current Tier's advancement criteria.\n        send_limit:\n          type: string\n          description: The amount of EUR an Entity is allowed to send every send_interval\n            while on this Tier.\n        send_interval:\n          type: integer\n          description: The unit of time (in seconds) for which the Entity's withdrawal\n            is measured.\n        advancement_volume:\n          type: string\n          description: The amount of EUR an Entity must transact before it can advance\n            to the next Tier, if any.\n        advancement_interval:\n          type: integer\n          description: |\n            The amount of time (in seconds) which an Entity must be in this Tier before\n            it can advance to the next Tier, if any.\n        created_at:\n          type: string\n          format: date-time\n          description: The time at which the Tier was created.\n        updated_at:\n          type: string\n          format: date-time\n          description: The time at which the Tier was last updated.\n    TradingExchangeRate:\n      description: 'Represents a Base TradingExchangeRate object.\n\n        '\n      type: object\n      required:\n      - trading_pair_id\n      - price\n      - starts_at\n      - ends_at\n      properties:\n        trading_pair_id:\n          type: string\n          description: An unique ID of the Trading Pair\n        price:\n          type: string\n          description: The TradingRate price on a specific range of time\n        starts_at:\n          type: string\n          description: The start date time of a given TradingExchangeRate price\n          format: date-time\n        ends_at:\n          type: string\n          description: The end date time of a given TradingExchangeRate price\n          format: date-time\n      example:\n        trading_pair_id: 00000000000000000000000000000001trpr\n        price: '7728.19'\n        starts_at: '2021-01-01T01:00:00Z'\n        ends_at: '2021-01-01T01:01:00Z'\n    TradingDailyRate:\n      description: 'Represents a TradingDailyRate object.\n\n        '\n      allOf:\n      - \"$ref\": \"#/components/schemas/TradingExchangeRate\"\n    TradingHourlyRate:\n      description: 'Represents a TradingHourlyRate object.\n\n        '\n      allOf:\n      - \"$ref\": \"#/components/schemas/TradingExchangeRate\"\n    TradingMinuteRate:\n      description: 'Represents a TradingMinuteRate object.\n\n        '\n      allOf:\n      - \"$ref\": \"#/components/schemas/TradingExchangeRate\"\n    TradingLimit:\n      description: |\n        Current trading limits configuration\n        for an Entity and the remaining amount they are allowed to trade.\n      type: object\n      required:\n      - entity_id\n      - interval\n      - amount\n      - remaining_amount\n      - created_at\n      - updated_at\n      properties:\n        entity_id:\n          type: string\n          description: A unique ID of the Entity\n        interval:\n          type: integer\n          description: an Integer, which represents a time interval `amount` is applied\n            within, in seconds\n        amount:\n          type: string\n          description: |\n            a String, which represents maximum cumulative amount of Trades within `interval`,\n            in EUR with EUR asset precision\n        remaining_amount:\n          type: string\n          description: |\n            a String, which represents remaining amount available within `interval`,\n            in EUR with EUR asset precision\n        created_at:\n          type: string\n          description: Time at which the TradingLimit was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the TradingLimit was updated\n          format: date-time\n      example:\n        entity_id: e0a26b1b54a6009d9ad9c6efd3aa5c77enty\n        interval: 604800\n        amount: '50000.00'\n        remaining_amount: '49686.69'\n        created_at: '2021-02-11T22:40:59Z'\n        updated_at: '2021-02-11T22:40:59Z'\n    TradingPair:\n      description: 'A Trading Pair represents two assets (currency) which can be part\n        of a Trade.\n\n        '\n      type: object\n      required:\n      - id\n      - from_asset_id\n      - to_asset_id\n      - code\n      - precision\n      - min_amount\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Trading Pair\n        from_asset_id:\n          type: string\n          description: The base asset (currency) of a Trade\n        to_asset_id:\n          type: string\n          description: The counter asset (currency) of a Trade\n        code:\n          type: string\n          description: The code that represents the Trading Pair\n        precision:\n          type: integer\n          description: The Trading Pair precision\n        min_amount:\n          type: string\n          description: The minimal amount for the Trading Pair\n        created_at:\n          type: string\n          description: Time at which the Trading Pair was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Trading Pair was last updated\n          format: date-time\n      example:\n        id: 00000000000000000000000000000001trpr\n        from_asset_id: 00000000000000000000000000000001asst\n        to_asset_id: f0000000000000000000000000000001asst\n        code: BTC/EUR\n        precision: 2\n        min_amount: '0.0001'\n        created_at: '2019-03-01T21:47:06Z'\n        updated_at: '2019-03-01T21:47:06Z'\n    Price:\n      description: 'A Price indicates a trade price for a given Trading Pair.\n\n        '\n      type: object\n      required:\n      - trading_pair_id\n      - price\n      - amount\n      - value\n      - created_at\n      - updated_at\n      properties:\n        trading_pair_id:\n          type: string\n          description: A unique ID of the Trading Pair\n        from_amount:\n          type: string\n          description: The amount of the Trade\n        traded_from_amount:\n          type: string\n          description: The amount traded on the Exchange(minus Platform fees for fiat-\u003ecrypto)\n        traded_to_amount:\n          type: string\n          description: The amount received from the Exchange(minus Exchange fees)\n        to_amount:\n          type: string\n          description: The final amount sent to the to_account_id(minus Platform fees\n            for crypto-\u003efiat)\n        fee_amount:\n          type: string\n          description: Collected Platform fees\n        price:\n          type: string\n          description: Price, calculated as traded_to_amount / traded_from_amount\n        created_at:\n          type: string\n          description: Time at which the Price was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Price was last updated\n          format: date-time\n      example:\n        trading_pair_id: 00000000000000000000000000000001trpr\n        from_amount: '1.12300000'\n        traded_from_amount: '1.12300000'\n        traded_to_amount: '9956.64'\n        to_amount: '9857.07'\n        price: '8866.11'\n        fee_amount: '99.57'\n        created_at: '2020-07-16T11:26:41Z'\n        updated_at: '2020-07-16T11:26:41Z'\n    Trade:\n      description: 'Represents a Trade on the platform.\n\n        '\n      type: object\n      required:\n      - id\n      - from_amount\n      - traded_from_amount\n      - filled_from_amount\n      - traded_to_amount\n      - to_amount\n      - fee_amount\n      - price\n      - state\n      - reference\n      - entity_id\n      - trading_pair_id\n      - from_account_id\n      - to_account_id\n      - failure_reason\n      - estimations\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of the Trade\n        from_amount:\n          type: string\n          description: Trade amount\n        traded_from_amount:\n          type: string\n          description: The amount traded on the Exchange(minus Platform fees for fiat-\u003ecrypto)\n        filled_from_amount:\n          type: string\n          description: The Trade amount submitted to the Exchange\n        traded_to_amount:\n          type: string\n          description: The amount received from the Exchange(minus Exchange fees)\n        to_amount:\n          type: string\n          description: The final amount sent to the to_account_id(minus Platform fees\n            for crypto-\u003efiat)\n        fee_amount:\n          type: string\n          description: Fee collected by the Platform\n        price:\n          type: string\n          description: |\n            Price, calculated as `filled_from_amount / amount executed on the exchange` and rounded to base asset precision.\n            For example, in a  `BTC -\u003e EUR` trade, the precision gonna be the one related to BTC.\n        state:\n          type: string\n          description: The state of the Trade\n        reference:\n          type: string\n          description: The idempotency key, chosen by the API client\n        entity_id:\n          type: string\n          description: The Entity ID\n        trading_pair_id:\n          type: string\n          description: The Trading Pair ID\n        from_account_id:\n          type: string\n          description: The origin account ID\n        to_account_id:\n          type: string\n          description: The destination account ID\n        failure_reason:\n          type: string\n          description: Machine-readable description of the Trade failure\n        estimations:\n          type: object\n          description: Trade estimations, calculated prior to execution\n        created_at:\n          type: string\n          description: Time at which the Trade was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which the Trade was last updated\n          format: date-time\n      example:\n        id: 82d19e27542a21c950eaae13059cf5f5trad\n        from_amount: '209.10'\n        traded_from_amount:\n        filled_from_amount:\n        traded_to_amount:\n        to_amount:\n        fee_amount:\n        price:\n        state: PENDING\n        reference: 9bcf5ffa4bb4d4ebbf92fb74f3a61f85\n        entity_id: b6ef80668690fa4dfbb51a3bc49a1fb7enty\n        trading_pair_id: 00000000000000000000000000000002trpr\n        from_account_id: 57e837a08685eff2cee29e82b6b09857cacc\n        to_account_id: d4f01daea26362d0de5fe89cb0f8d905acct\n        failure_reason:\n        estimations:\n          traded_from_amount: '207.00'\n          traded_to_amount: '0.02288435'\n          to_amount: '0.02288435'\n          fee_amount: '2.10'\n          price: '0.00011055'\n        created_at: '2021-11-26T14:35:45Z'\n        updated_at: '2021-11-26T14:35:45Z'\n    Transaction:\n      description: |\n        A Transaction can be of type: DEPOSIT, WITHDRAWAL\n        WITHDRAWAL_FEE, TRANSFER_OUTGOING or TRANSFER_INCOMING\n      oneOf:\n      - \"$ref\": \"#/components/schemas/TransactionDeposit\"\n      - \"$ref\": \"#/components/schemas/TransactionWithdrawal\"\n      - \"$ref\": \"#/components/schemas/TransactionWithdrawalFee\"\n      - \"$ref\": \"#/components/schemas/TransactionTransferOutgoing\"\n      - \"$ref\": \"#/components/schemas/TransactionTransferIncoming\"\n    TransactionCommonAttributes:\n      description: 'This schema represents a set of common attributes of a Transaction\n\n        '\n      type: object\n      required:\n      - id\n      - account_id\n      - type\n      - state\n      - amount\n      - fee_amount\n      - fee_account_id\n      - end_to_end_id\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of a Transaction\n        account_id:\n          type: string\n          description: ID of an Account the Transaction belongs to\n        type:\n          type: string\n          description: Type of Transaction\n          enum:\n          - DEPOSIT\n          - WITHDRAWAL\n          - WITHDRAWAL_FEE\n          - TRANSFER_OUTGOING\n          - TRANSFER_INCOMING\n        state:\n          type: string\n          description: Current state of the Transaction\n          enum:\n          - PENDING\n          - APPROVED\n          - COMPLETED\n          - FAILED\n          - CANCELLED\n        amount:\n          type: string\n          description: Transacted amount, positive or negative\n          example: '123.00010000'\n        fee_amount:\n          type: string\n          description: Charged fee, always positive or 0\n          example: '0.00123000'\n        fee_account_id:\n          type: string\n          description: The ID of the Account that will pay for the fees\n        end_to_end_id:\n          type: string\n          description: Identifier used to track a Transaction across the system\n        created_at:\n          type: string\n          description: Time at which a transaction was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which a transaction was updated\n          format: date-time\n    TransactionDeposit:\n      description: |\n        A Deposit is a Transaction, which represents a transfer of funds on blockchain\n        to some  digital asset Address linked with some Account\n      type: object\n      required:\n      - id\n      - account_id\n      - type\n      - state\n      - amount\n      - end_to_end_id\n      - fee_amount\n      - fee_account_id\n      - address\n      - blockchain_txid\n      - blockchain_output_n\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of a Transaction\n        account_id:\n          type: string\n          description: ID of an Account the Transaction belongs to\n        type:\n          type: string\n          description: The type of a transaction\n          enum:\n          - DEPOSIT\n        state:\n          type: string\n          description: Current state of the Transaction\n          enum:\n          - PENDING\n          - APPROVED\n          - COMPLETED\n          - FAILED\n          - CANCELLED\n        amount:\n          type: string\n          description: Transacted amount, positive\n          example: '123.00010000'\n        end_to_end_id:\n          type: string\n          description: Identifier used to track a Transaction across the system\n        fee_amount:\n          type: string\n          description: Charged fee, always positive or 0\n          example: '0.00123000'\n        fee_account_id:\n          type: string\n          description: The ID of the Account that will pay for the fees\n        address:\n          type: string\n          description: A digital asset specific address used for deposit\n          example: 1CU5YgjquupDw6UeXEyA9VEBH34R7fZ19b\n        blockchain_txid:\n          nullable: true\n          description: \"(string) If specified, contains a blockchain transaction reference\n            (txid, hash etc)\"\n          example: b2715bcc492ccfa30beaa7cf0d64bee751d5247a459966ce5b9d190eb1c2f185\n        blockchain_output_n:\n          nullable: true\n          description: \"(integer) If specified, references an index of blockchain\n            transaction output (starts with 0)\"\n          example: 0\n        created_at:\n          type: string\n          description: Time at which a transaction was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which a transaction was updated\n          format: date-time\n      example:\n        id: f59e8c8188500efce5be51eb71e9db08tran\n        account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        type: DEPOSIT\n        state: PENDING\n        amount: '1.23450000'\n        end_to_end_id: 7a444b4839658d2a0c0c8c02a74b6a1207b1f579d9c79afe491a6fe4d56fb0f6\n        fee_amount: '0.00000000'\n        fee_account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        address: 1PC9aZC4hNX2rmmrt7uHTfYAS3hRbph4UN\n        blockchain_txid: b2715bcc492ccfa30beaa7cf0d64bee751d5247a459966ce5b9d190eb1c2f185\n        blockchain_output_n: 0\n        created_at: '2019-03-01T20:31:38Z'\n        updated_at: '2019-03-01T20:46:07Z'\n    TransactionWithdrawal:\n      description: |\n        A Withdrawal is a Transaction, which represents a transfer of funds on blockchain\n        from some Account to an external digital asset address\n      type: object\n      required:\n      - id\n      - account_id\n      - type\n      - state\n      - amount\n      - end_to_end_id\n      - fee_amount\n      - fee_account_id\n      - linked_tx_ids\n      - reference\n      - address\n      - blockchain_txid\n      - blockchain_output_n\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of a Transaction\n        account_id:\n          type: string\n          description: ID of an Account the Transaction belongs to\n        type:\n          type: string\n          description: The type of a transaction\n          enum:\n          - WITHDRAWAL\n        state:\n          type: string\n          description: Current state of the Transaction\n          enum:\n          - PENDING\n          - APPROVED\n          - COMPLETED\n          - FAILED\n          - CANCELLED\n        amount:\n          type: string\n          description: Transacted amount, negative\n          example: \"-123.00000000\"\n        end_to_end_id:\n          type: string\n          description: Identifier used to track a Transaction across the system\n        fee_amount:\n          type: string\n          description: Charged fee, always positive or 0\n          example: '0.00123000'\n        fee_account_id:\n          type: string\n          description: The ID of the Account that will pay for the fees\n        linked_tx_ids:\n          type: array\n          items:\n            type: string\n          description: |\n            An array containing the IDs of Transactions that are linked to this Withdrawal.\n            E.g. the ID the corresponsing WITHDRAWAL_FEE Transaction\n        reference:\n          type: string\n          description: 'A reference identifier supplied with the Withdrawal request\n            by the partner\n\n            '\n        address:\n          type: string\n          description: A digital asset specific address where funds are sent to\n          example: 1MaXZE92yjuy4NYjTspmdWHMRT3jQUcTf4\n        blockchain_txid:\n          nullable: true\n          description: \"(string) If specified, contains a blockchain transaction reference\n            (txid, hash etc)\"\n          example: 0d0baf05852a856366a302ce9c9a9bbd36f95685a1e3d3bc9ef7715424ed577b\n        blockchain_output_n:\n          nullable: true\n          description: \"(integer) If specified, references an index of blockchain\n            transaction output (starts with 0)\"\n          example: 4\n        created_at:\n          type: string\n          description: Time at which a transaction was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which a transaction was updated\n          format: date-time\n      example:\n        id: f59e8c8188500efce5be51eb71e9db08tran\n        account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        type: WITHDRAWAL\n        state: PENDING\n        amount: \"-1.23450000\"\n        fee_amount: '0.00100000'\n        end_to_end_id: 7a444b4839658d2a0c0c8c02a74b6a1207b1f579d9c79afe491a6fe4d56fb0f6\n        fee_account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        linked_tx_ids:\n        - afc2a61eade4b640e49b94e777a0b26aatrx\n        reference: someting-fe8cbeecef486fe6edf9c3690e4f6b0a-unique\n        address: 1HesYJSP1QqcyPEjnQ9vzBL1wujruNGe7R\n        blockchain_txid: 0d0baf05852a856366a302ce9c9a9bbd36f95685a1e3d3bc9ef7715424ed577b\n        blockchain_output_n: 4\n        created_at: '2019-03-01T20:48:38Z'\n        updated_at: '2019-03-01T20:49:07Z'\n    TransactionWithdrawalFee:\n      description: |\n        A Transaction of type WITHDRAWAL_FEE represents the fee that is collected from an\n        Account to pay for a Withdrawal.\n      type: object\n      required:\n      - id\n      - account_id\n      - type\n      - state\n      - amount\n      - end_to_end_id\n      - fee_amount\n      - fee_account_id\n      - linked_tx_ids\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of a Transaction\n        account_id:\n          type: string\n          description: ID of an Account the Transaction belongs to\n        type:\n          type: string\n          description: The type of a transaction\n          enum:\n          - WITHDRAWAL_FEE\n        state:\n          type: string\n          description: Current state of the Transaction\n          enum:\n          - PENDING\n          - APPROVED\n          - COMPLETED\n          - FAILED\n          - CANCELLED\n        amount:\n          type: string\n          description: Transacted amount, negative\n          example: \"-0.00001234\"\n        end_to_end_id:\n          type: string\n          description: Identifier used to track a Transaction across the system\n        fee_amount:\n          type: string\n          description: Charged fee, always 0\n          example: '0'\n        fee_account_id:\n          type: string\n          description: The ID of the Account that will pay for the fees\n        linked_tx_ids:\n          type: array\n          items:\n            type: string\n          description: |\n            An array containing the IDs of Transactions that are linked to this Transaction.\n            E.g. the ID of the Withdrawal that caused this WITHDRAWAL_FEE Transaction.\n        created_at:\n          type: string\n          description: Time at which a transaction was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which a transaction was updated\n          format: date-time\n    TransactionTransferOutgoing:\n      description: |\n        A Transfer (Outgoing) is a Transaction, which represents a transfer of funds from\n        a current Account to another (receiver) Account within the same Asset.\n      type: object\n      required:\n      - id\n      - account_id\n      - type\n      - state\n      - amount\n      - end_to_end_id\n      - fee_amount\n      - fee_account_id\n      - reference\n      - sender_account_id\n      - receiver_account_id\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of a Transaction\n        account_id:\n          type: string\n          description: ID of an Account the Transaction belongs to\n        type:\n          type: string\n          description: The type of a transaction\n          enum:\n          - TRANSFER_OUTGOING\n        state:\n          type: string\n          description: Current state of the Transaction\n          enum:\n          - PENDING\n          - APPROVED\n          - COMPLETED\n          - FAILED\n          - CANCELLED\n        amount:\n          type: string\n          description: Transacted amount, negative\n          example: \"-1.23000000\"\n        end_to_end_id:\n          type: string\n          description: Identifier used to track a Transaction across the system\n        fee_amount:\n          type: string\n          description: Charged fee, always positive or 0\n          example: '0.00100000'\n        fee_account_id:\n          type: string\n          description: The ID of the Account that will pay for the fees\n        reference:\n          type: string\n          description: 'A reference identifier supplied with the Transfer request\n            by the partner\n\n            '\n        sender_account_id:\n          type: string\n          description: ID of the sender Account\n        receiver_account_id:\n          type: string\n          description: ID of the receiver Account\n        created_at:\n          type: string\n          description: Time at which a transaction was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which a transaction was updated\n          format: date-time\n      example:\n        id: f59e8c8188500efce5be51eb71e9db08tran\n        account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        type: TRANSFER_OUTGOING\n        state: COMPLETED\n        amount: \"-0.98760000\"\n        end_to_end_id: 7a444b4839658d2a0c0c8c02a74b6a1207b1f579d9c79afe491a6fe4d56fb0f6\n        fee_amount: '0.000000000'\n        fee_account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        reference: something-fc522958ced6c1b5c2c57d6dddecfa0a-unique\n        sender_account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        receiver_account_id: 4aeeac12d4b92c967cb826ac5dee5a8eacct\n        created_at: '2019-03-01T21:03:43Z'\n        updated_at: '2019-03-01T21:03:51Z'\n    TransactionTransferIncoming:\n      description: |\n        A Transfer (Incoming) is a Transaction, which represents a transfer of funds from\n        another (sender) Account to the current Account\n      type: object\n      required:\n      - id\n      - account_id\n      - type\n      - state\n      - amount\n      - end_to_end_id\n      - fee_amount\n      - fee_account_id\n      - sender_account_id\n      - receiver_account_id\n      - created_at\n      - updated_at\n      properties:\n        id:\n          type: string\n          description: A unique ID of a Transaction\n        account_id:\n          type: string\n          description: ID of an Account the Transaction belongs to\n        type:\n          type: string\n          description: The type of a transaction\n          enum:\n          - TRANSFER_INCOMING\n        state:\n          type: string\n          description: Current state of the Transaction\n          enum:\n          - PENDING\n          - APPROVED\n          - COMPLETED\n          - FAILED\n          - CANCELLED\n        amount:\n          type: string\n          description: Transacted amount, positive\n          example: '123.00000000'\n        end_to_end_id:\n          type: string\n          description: Identifier used to track a Transaction across the system\n        fee_amount:\n          type: string\n          description: Charged fee, always positive or 0\n          example: '0.00100000'\n        fee_account_id:\n          type: string\n          description: The ID of the Account that will pay for the fees\n        sender_account_id:\n          type: string\n          description: ID of the sender Account\n        receiver_account_id:\n          type: string\n          description: ID of the receiver Account\n        created_at:\n          type: string\n          description: Time at which a transaction was created\n          format: date-time\n        updated_at:\n          type: string\n          description: Time at which a transaction was updated\n          format: date-time\n      example:\n        id: f59e8c8188500efce5be51eb71e9db08tran\n        account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        type: TRANSFER_INCOMING\n        state: COMPLETED\n        amount: '1.23450000'\n        end_to_end_id: 7a444b4839658d2a0c0c8c02a74b6a1207b1f579d9c79afe491a6fe4d56fb0f6\n        fee_amount: '0.000100000'\n        fee_account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        reference: something-fc522958ced6c1b5c2c57d6dddecfa0a-unique\n        sender_account_id: ff6dc60c4f76dcea784bdc2ffed66e6facct\n        receiver_account_id: 4aeeac12d4b92c967cb826ac5dee5a8eacct\n        created_at: '2019-03-01T21:03:43Z'\n        updated_at: '2019-03-01T21:03:51Z'\n  parameters:\n    filterParams:\n      in: query\n      name: filter\n      schema:\n        type: object\n        properties:\n          attribute_name:\n            type: string\n      style: deepObject\n      explode: true\n    sortParams:\n      in: query\n      name: sort\n      schema:\n        type: array\n        items:\n          type: string\n      style: form\n      explode: true\n    limitOffsetParams:\n      in: query\n      name: pagination\n      schema:\n        type: object\n        properties:\n          page:\n            type: integer\n          size:\n            type: integer\n            default: 100\n      style: deepObject\n      explode: true\n  responses:\n    InvalidRequest:\n      description: |\n        Request contains invalid parameters.\n\n        This error response includes a `params` object, which contains\n        a set of invalid request attributes and their corresponding attribute error codes.\n\n        The documented attribute error codes are the following:\n\n        * `blank` -- This attribute requires a value, but it was missing in the request.\n        * `invalid` -- The value for this attribute provided by the request is invalid.\n          For example, this may mean an invalid data type, or the formatting, or the correctness\n          of a blockchain address.\n        * `not_found` -- A resource referenced by this attribute was not found. This may happen\n          when sending a request that contains an attribute, which references another resource.\n          E.g. when creating an Account and using `asset_id` to reference the Asset.\n        * `taken` -- The value provided for this attribute is expected to be unique,\n          but it is already taken by another resource. E.g. when providing a `reference` key\n          in creating a Transaction.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            - params\n            properties:\n              message:\n                type: string\n                description: Human readable error message\n              params:\n                type: object\n                description: A map of attributes and machine readable error codes\n                additionalProperties:\n                  type: string\n                  enum:\n                  - blank\n                  - invalid\n                  - not_found\n                  - taken\n            example:\n              message: Invalid request\n              params:\n                entity_id: not_found\n    Unauthorized:\n      description: |\n        Authentication error, either because the authentication scheme is invalid\n        (e.g. missing nonce), or the produced signature is invalid\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            properties:\n              message:\n                type: string\n            example:\n              message: Unauthorized\n    NotFound:\n      description: Requested resource was not found\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            properties:\n              message:\n                type: string\n            example:\n              message: Not found\n    InvalidResource:\n      description: |\n        Invalid resource (Unprocessable entity).\n\n        The request could not be processed, because the referenced resource's state prevents it.\n\n        For example, it is not possible to approve a FAILED Approval Request. In that case this\n        error response is going to be returned.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            properties:\n              message:\n                type: string\n            example:\n              message: Invalid resource\n    TooManyRequests:\n      description: |\n        Too many requests.\n\n        Some endpoints are restricted by limitations of the underlying service\n        or an external provider.\n\n        For example, when creating or approving an Approval Request\n        of type SMS a rate-limiting threshold of an external provider can be reached. In that case\n        this error response is going to be returned.\n\n        NOTE: This is a transient error.\n        The same request with the same attributes may be attempted again.\n        Although it is advised to implement a backoff strategy as a reaction to this error response.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            properties:\n              message:\n                type: string\n            example:\n              message: Too many requests\n    InternalServerError:\n      description: |\n        Internal server error.\n\n        An unspecified failure of an underlying or external service.\n\n        NOTE: This is a transient error. The request with the same attributes may be attempted again.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            properties:\n              message:\n                type: string\n            example:\n              message: Internal server error\n    UnavailableError:\n      description: |\n        The request could not be processed, because the underlying or external\n        service is temporarily unavailable.\n\n        NOTE: This is a transient error. The request with the same attributes may be attempted again.\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n            - message\n            properties:\n              message:\n                type: string\n            example:\n              message: Service Temporarily Unavailable\n",
			"canonicalURL": "/github.com/solarisDigitalAssets/docs@4542a4f89fe294446b02493af329194fcca18944/-/blob/docs/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/solarisDigitalAssets/docs/blob/4542a4f89fe294446b02493af329194fcca18944/docs/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/entities/{entity_id}/tier\": get: responses: 200: content: application/json: schema: parse schema: at docs/openapi.yml:1584:25: $ref: resolve \"#components/schemas/EntityTierInfo\": resolve: invalid pointer \"components/schemas/EntityTierInfo\": pointer must start with '/'"
}