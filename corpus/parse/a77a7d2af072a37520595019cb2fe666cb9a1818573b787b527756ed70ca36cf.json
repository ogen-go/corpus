{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cablelabs/lpwanserver"
		},
		"file": {
			"name": "api.yml",
			"size": 0,
			"path": "app/api.yml",
			"byteSize": 98888,
			"content": "openapi: 3.0.0\nservers: []\ninfo:\n  description: This service goes between an IoT application server and the various networks\n    to which the devices connect.  LPWAN Server uses extensions to support\n    additional networks.\n  version: 1.2.1\n  title: LPWAN Server\n  contact:\n    email: n.baroni@cablelabs.com\n    name: Nick Baroni\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: Application\n    description: An Application is a grouping of devices that share data reporting\n      configuration.\n  - name: ApplicationNetworkTypeLink\n    description: An ApplicationNetworkTypeLink enables an Application for a\n      NetworkType.  These records also store Application configuration for the\n      NetworkType.\n  - name: Company\n    description: A Company is a grouping of Users.  Companies also have an ownership\n      relationship with other entities, such as Applications.\n  - name: CompanyNetworkTypeLink\n    description: A CompanyNetworkTypeLink enables links a company's entities and a\n      NetworkType.\n  - name: Device\n    description: A Device represents a physical device.\n  - name: DeviceNetworkTypeLink\n    description: A DeviceNetworkTypeLink enables a Device for a NetworkType.  These records\n      also store Device configuration for a the NetworkType.\n  - name: DeviceProfile\n    description: A DeviceProfile profiles a type of device for a specific\n      NetworkType.  These records store configuration for Devices in regards to\n      the NetworkType.\n  - name: Network\n    description: A Network represents a remote IoT network, such as an instance of\n      ChirpStack.\n  - name: NetworkProtocol\n    description: A NetworkProtocol wraps the API used by LPWAN Server to communicate with\n      Networks.  A NeworkProtocol references the code that communicates with the\n      remote network.\n  - name: NetworkProvider\n    description: A NetworkProvider identifies who hosts/provides a Network.\n  - name: NetworkType\n    description: A NetworkType represents an LPWAN type, such as LoRa or IP (3GPP).\n  - name: PasswordPolicy\n    description: PasswordPolicies are used by companies to enforce password requirements on\n      their users.\n  - name: ReportingProtocol\n    description: ReportingProtocols are used by the Application to forward data from the\n      devices to the IoT application server.\n  - name: Session\n    description: Session endpoints allow for the management of User authentication.\n  - name: User\n    description: A user of the system\npaths:\n  /api/applications:\n    post:\n      operationId: createApplication\n      summary: Create an Application\n      description: Create an Application\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    name:\n                      type: string\n                      description: The Application's name\n                    description:\n                      type: string\n                      description: The Application's description\n                    companyId:\n                      type: string\n                      description: The ID of the Company to which the Application belongs.\n                        For a Company Admin user, this can only be the Id of\n                        their own Company.\n                    baseUrl:\n                      type: string\n                      description: The URL that the Reporting Protocol sends the data to.\n                        This may have additional paths added, depending on the\n                        Reporting Protocol.\n                    reportingProtocolId:\n                      type: string\n                      description: The ID of the Reporting Protocol the Application will\n                        use to pass Device data back to the Application Vendor\n                - type: object\n                  required:\n                    - name\n                    - companyId\n        description: Application to be created\n        required: true\n      responses:\n        \"200\":\n          description: Application created\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - id\n                properties:\n                  id:\n                    type: string\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listApplications\n      summary: List Applications\n      description: List Applications\n      parameters:\n        - name: offset\n          in: query\n          description: Number of records to skip\n          required: false\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            default: 0\n        - name: limit\n          in: query\n          description: Max records to return\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: search\n          in: query\n          description: Search for a string within name\n          required: false\n          schema:\n            type: string\n        - name: companyId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: reportingProtocolId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required:\n                      - totalCount\n                    properties:\n                      totalCount:\n                        type: integer\n                        format: int32\n                  - type: object\n                    required:\n                      - records\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1applications/post/requestBody/c\\\n                                ontent/application~1json/schema/allOf/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                                running:\n                                  type: boolean\n                                  description: If the Application is currently sending data\n                                    received from the Networks to the baseUrl\n                                    via the Reporting Protocol\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/applications/{id}\":\n    parameters:\n      - name: id\n        in: path\n        description: ID of resource\n        required: true\n        schema:\n          type: string\n    get:\n      operationId: loadApplication\n      summary: Get Application\n      description: Get Application\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      responses:\n        \"200\":\n          description: Application record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                        description: The Application's name\n                      description:\n                        type: string\n                        description: The Application's description\n                      companyId:\n                        type: string\n                        description: The ID of the Company to which the Application\n                          belongs. For a Company Admin user, this can only be\n                          the Id of their own Company.\n                      baseUrl:\n                        type: string\n                        description: The URL that the Reporting Protocol sends the data to.\n                          This may have additional paths added, depending on the\n                          Reporting Protocol.\n                      reportingProtocolId:\n                        type: string\n                        description: The ID of the Reporting Protocol the Application will\n                          use to pass Device data back to the Application Vendor\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n                      running:\n                        type: boolean\n                        description: If the Application is currently sending data received\n                          from the Networks to the baseUrl via the Reporting\n                          Protocol\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Application not found\n    put:\n      operationId: updateApplication\n      summary: Update Application\n      description: Update Application\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1applications~1%7Bid%7D/get/responses/200/conten\\\n                t/application~1json/schema/allOf/0\"\n        description: Application properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: Application update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Application not found\n    delete:\n      operationId: deleteApplication\n      summary: Delete Application\n      description: Delete Application\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      responses:\n        \"204\":\n          description: Application record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Application not found\n  \"/api/applications/{id}/bulk-device-import\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    post:\n      operationId: bulkCreateDevices\n      summary: Add several devices to an application\n      description: Add many devices to an application\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              required:\n                - deviceProfileId\n                - devices\n              properties:\n                deviceProfileId:\n                  type: string\n                  description: The ID of the device profile for the devices being imported\n                devices:\n                  type: array\n                  items:\n                    type: object\n                    required:\n                      - devEUI\n                    properties:\n                      name:\n                        type: string\n                        description: Name of the device\n                      description:\n                        type: string\n                        description: Description of the device\n                      devEUI:\n                        type: string\n                        description: Device's unique devEUI\n      responses:\n        \"200\":\n          description: List of items that report information and status on the creation of\n            each device\n          content:\n            application/json:\n              schema: {}\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/applications/{id}/start\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    post:\n      operationId: startApplication\n      summary: Start application\n      description: Enable application to forward uplinks and downlinks\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      responses:\n        \"200\":\n          description: Application was started. Response contains logs from remote networks.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  \"/api/applications/{id}/stop\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    post:\n      operationId: stopApplication\n      summary: Stop application\n      description: Disable application from forwarding uplinks and downlinks\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Application\n      responses:\n        \"200\":\n          description: Application was stopped. Response contains logs from remote networks.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n  /api/applicationNetworkTypeLinks:\n    post:\n      operationId: createApplicationNetworkTypeLink\n      summary: Create a ApplicationNetworkTypeLink\n      description: Create a ApplicationNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ApplicationNetworkTypeLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    applicationId:\n                      type: string\n                      description: The Application the record is linking to the NetworkType\n                    networkTypeId:\n                      type: string\n                      description: The NetworkType to which the Application is linked\n                    networkSettings:\n                      type: string\n                      description: The settings in a JSON string that correspond to the\n                        NetworkType\n                - type: object\n                  required:\n                    - applicationId\n                    - networkTypeId\n                    - networkSettings\n        description: ApplicationNetworkTypeLink to be created\n        required: true\n      responses:\n        \"200\":\n          description: ApplicationNetworkTypeLink created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listApplicationNetworkTypeLinks\n      summary: List ApplicationNetworkTypeLinks\n      description: List ApplicationNetworkTypeLinks\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - name: applicationId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: networkTypeId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: companyId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - ApplicationNetworkTypeLink\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1applicationNetworkTypeLinks/pos\\\n                                t/requestBody/content/application~1json/schema/\\\n                                allOf/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/applicationNetworkTypeLinks/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadApplicationNetworkTypeLink\n      summary: Get ApplicationNetworkTypeLink\n      description: Get ApplicationNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ApplicationNetworkTypeLink\n      responses:\n        \"200\":\n          description: ApplicationNetworkTypeLink record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      applicationId:\n                        type: string\n                        description: The Application the record is linking to the\n                          NetworkType\n                      networkTypeId:\n                        type: string\n                        description: The NetworkType to which the Application is linked\n                      networkSettings:\n                        type: string\n                        description: The settings in a JSON string that correspond to the\n                          NetworkType\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: ApplicationNetworkTypeLink not found\n    put:\n      operationId: updateApplicationNetworkTypeLink\n      summary: Update ApplicationNetworkTypeLink\n      description: Update ApplicationNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ApplicationNetworkTypeLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1applicationNetworkTypeLinks~1%7Bid%7D/get/respo\\\n                nses/200/content/application~1json/schema/allOf/0\"\n        description: ApplicationNetworkTypeLink properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: ApplicationNetworkTypeLink update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: ApplicationNetworkTypeLink not found\n    delete:\n      operationId: deleteApplicationNetworkTypeLink\n      summary: Delete ApplicationNetworkTypeLink\n      description: Delete ApplicationNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ApplicationNetworkTypeLink\n      responses:\n        \"204\":\n          description: ApplicationNetworkTypeLink record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: ApplicationNetworkTypeLink not found\n  /api/companies:\n    post:\n      operationId: createCompany\n      summary: Create a Company\n      description: Create a Company, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    name:\n                      type: string\n                    type:\n                      type: string\n                      enum:\n                        - ADMIN\n                        - VENDOR\n                - type: object\n                  required:\n                    - name\n                    - type\n        description: Company to be created\n        required: true\n      responses:\n        \"200\":\n          description: Company created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listCompanies\n      summary: List Companies\n      description: List Companies, restricted according to authenticated user\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1companies/post/requestBody/cont\\\n                                ent/application~1json/schema/allOf/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/companies/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadCompany\n      summary: Get Company\n      description: Get Company\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      responses:\n        \"200\":\n          description: Company record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                      type:\n                        type: string\n                        enum:\n                          - ADMIN\n                          - VENDOR\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Company not found\n    put:\n      operationId: updateCompany\n      summary: Update Company\n      description: Update Company, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1companies~1%7Bid%7D/get/responses/200/content/a\\\n                pplication~1json/schema/allOf/0\"\n        description: Company properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: Company update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Company not found\n    delete:\n      operationId: deleteCompany\n      summary: Delete Company\n      description: Delete Company, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Company\n      responses:\n        \"204\":\n          description: Company record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Company not found\n  /api/companyNetworkTypeLinks:\n    post:\n      operationId: createCompanyNetworkTypeLink\n      summary: Create a CompanyNetworkTypeLink\n      description: Create a CompanyNetworkTypeLink, available only to company administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - CompanyNetworkTypeLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    companyId:\n                      type: string\n                      description: The Company the record is linking to the NetworkType\n                    networkTypeId:\n                      type: string\n                      description: The NetworkType to which the Company is linked\n                    networkSettings:\n                      type: string\n                      description: The settings in a JSON string that correspond to the\n                        NetworkType\n                - type: object\n                  required:\n                    - companyId\n                    - networkTypeId\n                    - networkSettings\n        description: CompanyNetworkTypeLink to be created\n        required: true\n      responses:\n        \"200\":\n          description: CompanyNetworkTypeLink created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listCompanyNetworkTypeLinks\n      summary: List CompanyNetworkTypeLinks\n      description: List CompanyNetworkTypeLinks, restricted according to company admins\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - name: companyId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: networkTypeId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - CompanyNetworkTypeLink\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1companyNetworkTypeLinks/post/re\\\n                                questBody/content/application~1json/schema/allO\\\n                                f/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/companyNetworkTypeLinks/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadCompanyNetworkTypeLink\n      summary: Get CompanyNetworkTypeLink\n      description: Get CompanyNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - CompanyNetworkTypeLink\n      responses:\n        \"200\":\n          description: CompanyNetworkTypeLink record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      companyId:\n                        type: string\n                        description: The Company the record is linking to the NetworkType\n                      networkTypeId:\n                        type: string\n                        description: The NetworkType to which the Company is linked\n                      networkSettings:\n                        type: string\n                        description: The settings in a JSON string that correspond to the\n                          NetworkType\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: CompanyNetworkTypeLink not found\n    put:\n      operationId: updateCompanyNetworkTypeLink\n      summary: Update CompanyNetworkTypeLink\n      description: Update CompanyNetworkTypeLink, available only to company administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - CompanyNetworkTypeLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1companyNetworkTypeLinks~1%7Bid%7D/get/responses\\\n                /200/content/application~1json/schema/allOf/0\"\n        description: CompanyNetworkTypeLink properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: CompanyNetworkTypeLink update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: CompanyNetworkTypeLink not found\n    delete:\n      operationId: deleteCompanyNetworkTypeLink\n      summary: Delete CompanyNetworkTypeLink\n      description: Delete CompanyNetworkTypeLink, available only to company administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - CompanyNetworkTypeLink\n      responses:\n        \"204\":\n          description: CompanyNetworkTypeLink record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: CompanyNetworkTypeLink not found\n  /api/devices:\n    post:\n      operationId: createDevice\n      summary: Create a Device\n      description: Create a Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    name:\n                      type: string\n                      description: The Device's name\n                    description:\n                      type: string\n                      description: The Device's description\n                    deviceModel:\n                      type: string\n                      description: The Device's Model information\n                    applicationId:\n                      type: string\n                      description: The ID of the Application to which the device belongs\n                - type: object\n                  required:\n                    - name\n                    - description\n                    - applicationId\n                    - deviceModel\n        description: Device to be created\n        required: true\n      responses:\n        \"200\":\n          description: Device created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listDevices\n      summary: List Devices\n      description: List Devices\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n        - name: companyId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: applicationId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1devices/post/requestBody/conten\\\n                                t/application~1json/schema/allOf/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/devices/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadDevice\n      summary: Get Device\n      description: Get Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      responses:\n        \"200\":\n          description: Device record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                        description: The Device's name\n                      description:\n                        type: string\n                        description: The Device's description\n                      deviceModel:\n                        type: string\n                        description: The Device's Model information\n                      applicationId:\n                        type: string\n                        description: The ID of the Application to which the device belongs\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Device not found\n    put:\n      operationId: updateDevice\n      summary: Update Device\n      description: Update Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1devices~1%7Bid%7D/get/responses/200/content/app\\\n                lication~1json/schema/allOf/0\"\n        description: Device properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: Device update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Device not found\n    delete:\n      operationId: deleteDevice\n      summary: Delete Device\n      description: Delete Device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      responses:\n        \"204\":\n          description: Device record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Device not found\n  \"/api/devices/{id}/downlinks\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    post:\n      operationId: receiveDownlink\n      summary: Send downlink\n      description: Send a unicast downlink to one device\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - fCnt\n                - fPort\n              properties:\n                fCnt:\n                  type: integer\n                  format: int32\n                  description: Application's downlink frame counter\n                fPort:\n                  type: integer\n                  format: int32\n                  description: The intended port for LoRa devices\n                data:\n                  type: string\n                  description: Any string to send as data to the device\n                jsonData:\n                  type: object\n                  description: A JSON object to send to the device\n      responses:\n        \"200\":\n          description: Downlink was sent. Response contains logs from remote networks.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Device not found\n  /api/deviceNetworkTypeLinks:\n    post:\n      operationId: createDeviceNetworkTypeLink\n      summary: Create a DeviceNetworkTypeLink\n      description: Create a DeviceNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceNetworkTypeLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    deviceId:\n                      type: string\n                      description: The Application the record is linking to the NetworkType\n                    networkTypeId:\n                      type: string\n                      description: The NetworkType to which the Application is linked\n                    networkSettings:\n                      type: string\n                      description: The settings in a JSON string that correspond to the\n                        NetworkType\n                - type: object\n                  required:\n                    - deviceId\n                    - networkTypeId\n                    - networkSettings\n        description: DeviceNetworkTypeLink to be created\n        required: true\n      responses:\n        \"200\":\n          description: DeviceNetworkTypeLink created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listDeviceNetworkTypeLinks\n      summary: List DeviceNetworkTypeLinks\n      description: List DeviceNetworkTypeLinks\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - name: deviceId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: networkTypeId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: applicationId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceNetworkTypeLink\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1deviceNetworkTypeLinks/post/req\\\n                                uestBody/content/application~1json/schema/allOf\\\n                                /0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/deviceNetworkTypeLinks/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadDeviceNetworkTypeLink\n      summary: Get DeviceNetworkTypeLink\n      description: Get DeviceNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceNetworkTypeLink\n      responses:\n        \"200\":\n          description: DeviceNetworkTypeLink record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      deviceId:\n                        type: string\n                        description: The Application the record is linking to the\n                          NetworkType\n                      networkTypeId:\n                        type: string\n                        description: The NetworkType to which the Application is linked\n                      networkSettings:\n                        type: string\n                        description: The settings in a JSON string that correspond to the\n                          NetworkType\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceNetworkTypeLink not found\n    put:\n      operationId: updateDeviceNetworkTypeLink\n      summary: Update DeviceNetworkTypeLink\n      description: Update DeviceNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceNetworkTypeLink\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1deviceNetworkTypeLinks~1%7Bid%7D/get/responses/\\\n                200/content/application~1json/schema/allOf/0\"\n        description: DeviceNetworkTypeLink properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: DeviceNetworkTypeLink update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceNetworkTypeLink not found\n    delete:\n      operationId: deleteDeviceNetworkTypeLink\n      summary: Delete DeviceNetworkTypeLink\n      description: Delete DeviceNetworkTypeLink\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceNetworkTypeLink\n      responses:\n        \"204\":\n          description: DeviceNetworkTypeLink record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceNetworkTypeLink not found\n  /api/deviceProfiles:\n    post:\n      operationId: createDeviceProfile\n      summary: Create a DeviceProfile\n      description: Create a DeviceProfile\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceProfile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    name:\n                      type: string\n                      description: The Device Profile's name\n                    description:\n                      type: string\n                      description: The Device Profile's description\n                    companyId:\n                      type: string\n                      description: The ID of the Company to which the DeviceProfile belongs\n                    networkTypeId:\n                      type: string\n                      description: The NetworkType for this DeviceProfile\n                    networkSettings:\n                      type: object\n                      description: The JSON data structure that has the settings for the\n                        NetworkType. This is expected to match the Network\n                        Protocol's expected data used to set up the device on\n                        the remote Network(s).\n                - type: object\n                  required:\n                    - name\n                    - companyId\n                    - networkTypeId\n        description: DeviceProfile to be created\n        required: true\n      responses:\n        \"200\":\n          description: DeviceProfile created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listDeviceProfiles\n      summary: List DeviceProfiles\n      description: List DeviceProfiles\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n        - name: companyId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: networkTypeId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceProfile\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1deviceProfiles/post/requestBody\\\n                                /content/application~1json/schema/allOf/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/deviceProfiles/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadDeviceProfile\n      summary: Get DeviceProfile\n      description: Get DeviceProfile\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceProfile\n      responses:\n        \"200\":\n          description: DeviceProfile record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                        description: The Device Profile's name\n                      description:\n                        type: string\n                        description: The Device Profile's description\n                      companyId:\n                        type: string\n                        description: The ID of the Company to which the DeviceProfile\n                          belongs\n                      networkTypeId:\n                        type: string\n                        description: The NetworkType for this DeviceProfile\n                      networkSettings:\n                        type: object\n                        description: The JSON data structure that has the settings for the\n                          NetworkType. This is expected to match the Network\n                          Protocol's expected data used to set up the device on\n                          the remote Network(s).\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceProfile not found\n    put:\n      operationId: updateDeviceProfile\n      summary: Update DeviceProfile\n      description: Update DeviceProfile\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceProfile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1deviceProfiles~1%7Bid%7D/get/responses/200/cont\\\n                ent/application~1json/schema/allOf/0\"\n        description: DeviceProfile properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: DeviceProfile update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceProfile not found\n    delete:\n      operationId: deleteDeviceProfile\n      summary: Delete DeviceProfile\n      description: Delete DeviceProfile\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceProfile\n      responses:\n        \"204\":\n          description: DeviceProfile record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceProfile not found\n  \"/api/deviceProfiles/{id}/push\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    post:\n      operationId: pushDeviceProfile\n      summary: Push DeviceProfile\n      description: Push DeviceProfile to all networks of the DeviceProfile's NetworkType\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - DeviceProfile\n      responses:\n        \"200\":\n          description: List of logs from pushing DeviceProfile to networks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: DeviceProfile not found\n  \"/api/ingest/{applicationId}/{networkId}\":\n    parameters:\n      - name: applicationId\n        in: path\n        description: ID of application\n        required: true\n        schema:\n          type: string\n      - name: networkId\n        in: path\n        description: ID of network sending device uplink\n        required: true\n        schema:\n          type: string\n    post:\n      operationId: receiveUplink\n      summary: Receive uplink\n      description: Receive a device uplink from a remove network\n      parameters: []\n      security: []\n      tags:\n        - Application\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        \"204\":\n          description: Uplink received\n  /api/ip-device-uplinks:\n    post:\n      operationId: receiveIpDeviceUplink\n      summary: IP-based device uplink\n      description: Submit an uplink from an IP-based device.  TLS authentication required.\n        Client certificate must contain devEUI as the subject CN.\n      parameters: []\n      security: []\n      tags:\n        - Device\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n      responses:\n        \"204\":\n          description: Uplink received\n        \"403\":\n          description: Unable to authenticate device by it's client certificate\n  /api/ip-device-downlinks:\n    get:\n      operationId: listIpDeviceDownlinks\n      summary: Get IP device downlinks\n      description: Get a list of all downlinks for an IP-based device. TLS authentication\n        required. Client certificate must contain devEUI as the subject\n        CN.  Long-polling supported.\n      parameters:\n        - name: prefer\n          in: header\n          description: Use 'wait=n' as the header value, where n is seconds.  If no\n            downlinks available at time of request, request will wait for n\n            seconds before returning.\n          required: false\n          schema:\n            type: string\n      security: []\n      tags:\n        - Device\n      responses:\n        \"200\":\n          description: List of downlinks\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n        \"403\":\n          description: Unable to authenticate device by it's client certificate\n  /api/networks:\n    post:\n      operationId: createNetwork\n      summary: Create a Network\n      description: Create a Network, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Network\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: The Network's name\n                networkProviderId:\n                  type: string\n                  description: The ID of the Network Provider that provides the Network\n                networkTypeId:\n                  type: string\n                  description: The ID of the NetworkType that the Network uses\n                networkProtocolId:\n                  type: string\n                  description: The ID of the Network Protocol that the Network uses\n                baseUrl:\n                  type: string\n                  description: The base URL used by the Network Protocol to reach the\n                    Network's API server\n                securityData:\n                  type: object\n                  description: The data used to grant secure access to the Network's server\n                    API. This data is defined by the NetworkType\n        description: Network to be created\n        required: true\n      responses:\n        \"200\":\n          description: Network created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listNetworks\n      summary: List Networks\n      description: List Networks, available only to system administrators\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n        - name: networkProviderId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: networkTypeId\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: networkProtocolId\n          in: query\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - Network\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1networks/post/requestBody/conte\\\n                                nt/application~1json/schema\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/networks/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadNetwork\n      summary: Get Network\n      description: Get Network\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Network\n      responses:\n        \"200\":\n          description: Network record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                        description: The Network's name\n                      networkProviderId:\n                        type: string\n                        description: The ID of the Network Provider that provides the\n                          Network\n                      networkTypeId:\n                        type: string\n                        description: The ID of the NetworkType that the Network uses\n                      networkProtocolId:\n                        type: string\n                        description: The ID of the Network Protocol that the Network uses\n                      baseUrl:\n                        type: string\n                        description: The base URL used by the Network Protocol to reach the\n                          Network's API server\n                      securityData:\n                        type: object\n                        description: The data used to grant secure access to the Network's\n                          server API. This data is defined by the NetworkType\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Network not found\n    put:\n      operationId: updateNetwork\n      summary: Update Network\n      description: Update Network, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Network\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1networks~1%7Bid%7D/get/responses/200/content/ap\\\n                plication~1json/schema/allOf/0\"\n        description: Network properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: Network update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Network not found\n    delete:\n      operationId: deleteNetwork\n      summary: Delete Network\n      description: Delete Network, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Network\n      responses:\n        \"204\":\n          description: Network record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Network not found\n  /api/networkProtocols:\n    post:\n      operationId: createNetworkProtocol\n      summary: Create a NetworkProtocol\n      description: Create a NetworkProtocol, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProtocol\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                protocolHandler:\n                  type: string\n                  description: Path to file that contains the handler code, relative to the\n                    handlers dir\n                networkTypeId:\n                  type: string\n        description: NetworkProtocol to be created\n        required: true\n      responses:\n        \"200\":\n          description: NetworkProtocol created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listNetworkProtocols\n      summary: List NetworkProtocols\n      description: List NetworkProtocols, available only to system administrators\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProtocol\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1networkProtocols/post/requestBo\\\n                                dy/content/application~1json/schema\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/networkProtocols/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadNetworkProtocol\n      summary: Get NetworkProtocol\n      description: Get NetworkProtocol\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProtocol\n      responses:\n        \"200\":\n          description: NetworkProtocol record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                      protocolHandler:\n                        type: string\n                        description: Path to file that contains the handler code, relative\n                          to the handlers dir\n                      networkTypeId:\n                        type: string\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkProtocol not found\n    put:\n      operationId: updateNetworkProtocol\n      summary: Update NetworkProtocol\n      description: Update NetworkProtocol, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProtocol\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1networkProtocols~1%7Bid%7D/get/responses/200/co\\\n                ntent/application~1json/schema/allOf/0\"\n        description: NetworkProtocol properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: NetworkProtocol update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkProtocol not found\n    delete:\n      operationId: deleteNetworkProtocol\n      summary: Delete NetworkProtocol\n      description: Delete NetworkProtocol, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProtocol\n      responses:\n        \"204\":\n          description: NetworkProtocol record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkProtocol not found\n  /api/networkProtocolHandlers:\n    get:\n      operationId: getNetworkProtocolHandlers\n      summary: Get NetworkProtocol handlers\n      description: Get list of NetworkProtocol handler file paths\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProtocol\n      responses:\n        \"200\":\n          description: Array of NetworkProtocol handler file paths\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                default: []\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  /api/networkProviders:\n    post:\n      operationId: createNetworkProvider\n      summary: Create a NetworkProvider\n      description: Create a NetworkProvider, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n        description: NetworkProvider to be created\n        required: true\n      responses:\n        \"200\":\n          description: NetworkProvider created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listNetworkProviders\n      summary: List NetworkProviders\n      description: List NetworkProviders, available only to system administrators\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProvider\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1networkProviders/post/requestBo\\\n                                dy/content/application~1json/schema\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/networkProviders/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadNetworkProvider\n      summary: Get NetworkProvider\n      description: Get NetworkProvider\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProvider\n      responses:\n        \"200\":\n          description: NetworkProvider record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required:\n                      - name\n                    properties:\n                      name:\n                        type: string\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkProvider not found\n    put:\n      operationId: updateNetworkProvider\n      summary: Update NetworkProvider\n      description: Update NetworkProvider, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProvider\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1networkProviders~1%7Bid%7D/get/responses/200/co\\\n                ntent/application~1json/schema/allOf/0\"\n        description: NetworkProvider properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: NetworkProvider update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkProvider not found\n    delete:\n      operationId: deleteNetworkProvider\n      summary: Delete NetworkProvider\n      description: Delete NetworkProvider, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkProvider\n      responses:\n        \"204\":\n          description: NetworkProvider record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkProvider not found\n  /api/networkTypes:\n    post:\n      operationId: createNetworkType\n      summary: Create a NetworkType\n      description: Create a NetworkType, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n              properties:\n                name:\n                  type: string\n        description: NetworkType to be created\n        required: true\n      responses:\n        \"200\":\n          description: NetworkType created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listNetworkTypes\n      summary: List NetworkTypes\n      description: List NetworkTypes, available only to system administrators\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkType\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1networkTypes/post/requestBody/c\\\n                                ontent/application~1json/schema\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/networkTypes/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadNetworkType\n      summary: Get NetworkType\n      description: Get NetworkType\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkType\n      responses:\n        \"200\":\n          description: NetworkType record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    required:\n                      - name\n                    properties:\n                      name:\n                        type: string\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkType not found\n    put:\n      operationId: updateNetworkType\n      summary: Update NetworkType\n      description: Update NetworkType, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkType\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1networkTypes~1%7Bid%7D/get/responses/200/conten\\\n                t/application~1json/schema/allOf/0\"\n        description: NetworkType properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: NetworkType update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkType not found\n    delete:\n      operationId: deleteNetworkType\n      summary: Delete NetworkType\n      description: Delete NetworkType, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - NetworkType\n      responses:\n        \"204\":\n          description: NetworkType record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: NetworkType not found\n  /api/passwordPolicies:\n    post:\n      operationId: createPasswordPolicy\n      summary: Create a PasswordPolicy\n      description: Create a PasswordPolicy, available only to company administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - PasswordPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    ruleText:\n                      type: string\n                      description: The Password Policy's description, intended for display\n                        to the end user.\n                    ruleRegExp:\n                      type: string\n                      description: The Password Policy's regular expression, which must\n                        \"match\" the entered password for it to be considered\n                        valid.\n                    companyId:\n                      type: string\n                      description: The id of the company that this Password Policy belongs\n                        to. If not supplied, for a System Admin, defaults to\n                        null (global rule for all users/companies). For Company\n                        Admin, defaults to the user's companyId. If specified by\n                        a Company Admin, it MUST match their own company.\n                - type: object\n                  required:\n                    - ruleText\n                    - ruleRegExp\n        description: PasswordPolicy to be created\n        required: true\n      responses:\n        \"200\":\n          description: PasswordPolicy created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/passwordPolicies/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadPasswordPolicy\n      summary: Get PasswordPolicy\n      description: Get PasswordPolicy\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - PasswordPolicy\n      responses:\n        \"200\":\n          description: PasswordPolicy record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      ruleText:\n                        type: string\n                        description: The Password Policy's description, intended for\n                          display to the end user.\n                      ruleRegExp:\n                        type: string\n                        description: The Password Policy's regular expression, which must\n                          \"match\" the entered password for it to be considered\n                          valid.\n                      companyId:\n                        type: string\n                        description: The id of the company that this Password Policy\n                          belongs to. If not supplied, for a System Admin,\n                          defaults to null (global rule for all\n                          users/companies). For Company Admin, defaults to the\n                          user's companyId. If specified by a Company Admin, it\n                          MUST match their own company.\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: PasswordPolicy not found\n    put:\n      operationId: updatePasswordPolicy\n      summary: Update PasswordPolicy\n      description: Update PasswordPolicy, available only to company administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - PasswordPolicy\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1passwordPolicies~1%7Bid%7D/get/responses/200/co\\\n                ntent/application~1json/schema/allOf/0\"\n        description: PasswordPolicy properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: PasswordPolicy update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: PasswordPolicy not found\n    delete:\n      operationId: deletePasswordPolicy\n      summary: Delete PasswordPolicy\n      description: Delete PasswordPolicy, available only to company administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - PasswordPolicy\n      responses:\n        \"204\":\n          description: PasswordPolicy record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: PasswordPolicy not found\n  /api/reportingProtocols:\n    post:\n      operationId: createReportingProtocol\n      summary: Create a ReportingProtocol\n      description: Create a ReportingProtocol, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ReportingProtocol\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                protocolHandler:\n                  type: string\n                  description: Path to file that contains the handler code, relative to the\n                    handlers dir\n                networkTypeId:\n                  type: string\n        description: ReportingProtocol to be created\n        required: true\n      responses:\n        \"200\":\n          description: ReportingProtocol created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listReportingProtocols\n      summary: List ReportingProtocols\n      description: List ReportingProtocols, available only to system administrators\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/2\"\n      security:\n        - bearer_token: []\n      tags:\n        - ReportingProtocol\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1reportingProtocols/post/request\\\n                                Body/content/application~1json/schema\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/reportingProtocols/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadReportingProtocol\n      summary: Get ReportingProtocol\n      description: Get ReportingProtocol\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ReportingProtocol\n      responses:\n        \"200\":\n          description: ReportingProtocol record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      name:\n                        type: string\n                      protocolHandler:\n                        type: string\n                        description: Path to file that contains the handler code, relative\n                          to the handlers dir\n                      networkTypeId:\n                        type: string\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: ReportingProtocol not found\n    put:\n      operationId: updateReportingProtocol\n      summary: Update ReportingProtocol\n      description: Update ReportingProtocol, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ReportingProtocol\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/paths/~1api~1reportingProtocols~1%7Bid%7D/get/responses/200/\\\n                content/application~1json/schema/allOf/0\"\n        description: ReportingProtocol properties to be updated\n        required: true\n      responses:\n        \"204\":\n          description: ReportingProtocol update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: ReportingProtocol not found\n    delete:\n      operationId: deleteReportingProtocol\n      summary: Delete ReportingProtocol\n      description: Delete ReportingProtocol, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ReportingProtocol\n      responses:\n        \"204\":\n          description: ReportingProtocol record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: ReportingProtocol not found\n  /api/reportingProtocolHandlers:\n    get:\n      operationId: getReportingProtocolHandlers\n      summary: Get ReportingProtocol handlers\n      description: Get list of ReportingProtocol handler file paths\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - ReportingProtocol\n      responses:\n        \"200\":\n          description: Array of ReportingProtocol handler file paths\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n                default: []\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  /api/sessions:\n    post:\n      operationId: createSession\n      summary: Create a Session\n      description: Submit a user's credentials and receive a JWT token\n      parameters: []\n      security: []\n      tags:\n        - Session\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - login_username\n                - login_password\n              properties:\n                login_username:\n                  type: string\n                login_password:\n                  type: string\n        description: User's login credentials\n        required: true\n      responses:\n        \"200\":\n          description: JWT as response body\n          content:\n            text/plain:\n              schema:\n                type: string\n        \"400\":\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n    delete:\n      operationId: deleteSession\n      summary: Delete a Session\n      description: Invalidate the user's current jwt token\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - Session\n      responses:\n        \"204\":\n          description: No content\n  /api/users:\n    post:\n      operationId: createUser\n      summary: Create a User\n      description: Create a User, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    username:\n                      type: string\n                    role:\n                      type: string\n                      enum:\n                        - ADMIN\n                        - USER\n                    email:\n                      type: string\n                      format: email\n                    companyId:\n                      type: string\n                - type: object\n                  required:\n                    - username\n                    - password\n                    - role\n                    - companyId\n                  properties:\n                    password:\n                      type: string\n        description: User to be created\n        required: true\n      responses:\n        \"200\":\n          description: User created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/paths/~1api~1applications/post/responses/200/content/appli\\\n                  cation~1json/schema\"\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n    get:\n      operationId: listUsers\n      summary: List Users\n      description: List Users, available only to system administrators\n      parameters:\n        - $ref: \"#/paths/~1api~1applications/get/parameters/0\"\n        - $ref: \"#/paths/~1api~1applications/get/parameters/1\"\n        - name: companyId\n          in: query\n          description: The ID of the Users' company\n          required: false\n          schema:\n            type: string\n        - name: search\n          in: query\n          description: Search for a string within username\n          required: false\n          schema:\n            type: string\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        \"200\":\n          description: Query response with totalCount and list of records\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: \"#/paths/~1api~1applications/get/responses/200/content/ap\\\n                      plication~1json/schema/allOf/0\"\n                  - type: object\n                    properties:\n                      records:\n                        type: array\n                        items:\n                          allOf:\n                            - $ref: \"#/paths/~1api~1users/post/requestBody/content/\\\n                                application~1json/schema/allOf/0\"\n                            - type: object\n                              properties:\n                                id:\n                                  type: string\n                        default: []\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n  \"/api/users/{id}\":\n    parameters:\n      - $ref: \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\"\n    get:\n      operationId: loadUser\n      summary: Get User\n      description: Get User\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        \"200\":\n          description: User record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      username:\n                        type: string\n                      role:\n                        type: string\n                        enum:\n                          - ADMIN\n                          - USER\n                      email:\n                        type: string\n                        format: email\n                      companyId:\n                        type: string\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: User not found\n    put:\n      operationId: updateUser\n      summary: Update User\n      description: Update User, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      requestBody: {}\n      responses:\n        \"204\":\n          description: User update succeeded\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: User not found\n    delete:\n      operationId: deleteUser\n      summary: Delete User\n      description: Delete User, available only to system administrators\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        \"204\":\n          description: User record was deleted\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: User not found\n  /api/users/me:\n    get:\n      operationId: loadMyUser\n      summary: Load my user\n      description: Load the record of the session user\n      parameters: []\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        \"200\":\n          description: User record\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      username:\n                        type: string\n                      role:\n                        type: string\n                        enum:\n                          - ADMIN\n                          - USER\n                      email:\n                        type: string\n                        format: email\n                      companyId:\n                        type: string\n                  - type: object\n                    properties:\n                      id:\n                        type: string\n        \"404\":\n          description: User not found\n  \"/api/users/verifyEmail/{uuid}\":\n    parameters:\n      - name: uuid\n        in: path\n        description: Email verification link ID\n        required: true\n        schema:\n          type: string\n    put:\n      operationId: verifyUserEmail\n      summary: Verify user email\n      description: Endpoint for email verification links\n      parameteters:\n        - name: function\n          in: query\n          description: Accept or reject new email\n          required: true\n          schema:\n            type: string\n            enum:\n              - accept\n              - reject\n      security:\n        - bearer_token: []\n      tags:\n        - User\n      responses:\n        \"204\":\n          description: Email address was successfully verified or rejected\n        \"400\":\n          description: Bad request\n        \"403\":\n          description: Authenticated user not allowed to perform this operation\n        \"404\":\n          description: Invalid uuid\ncomponents:\n  securitySchemes:\n    bearer_token:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    idParam:\n      name: id\n      in: path\n      description: ID of resource\n      required: true\n      schema:\n        type: string\n    offsetParam:\n      name: offset\n      in: query\n      description: Number of records to skip\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n        default: 0\n    limitParam:\n      name: limit\n      in: query\n      description: Max records to return\n      required: false\n      schema:\n        type: integer\n        format: int32\n    nameSearch:\n      name: search\n      in: query\n      description: Search for a string within name\n      required: false\n      schema:\n        type: string\n  schemas:\n    ResourceCreatedResponse:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    ListResponse:\n      type: object\n      required:\n        - totalCount\n      properties:\n        totalCount:\n          type: integer\n          format: int32\n"
		}
	},
	"Error": "parse: parse spec: parse operations: /api/networkTypes/{id}: parameters: parse parameter \"\": resolve \"#/paths/~1api~1applications~1%7Bid%7D/parameters/0\" reference: invalid parameter reference"
}