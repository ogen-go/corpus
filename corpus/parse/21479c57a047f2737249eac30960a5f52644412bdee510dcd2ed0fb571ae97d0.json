{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperjumptech/monika"
		},
		"file": {
			"name": "petstore.insomnia.yaml",
			"size": 0,
			"path": "src/components/config/__tests__/petstore.insomnia.yaml",
			"byteSize": 45437,
			"content": "_type: export\n__export_format: 4\n__export_date: 2022-01-05T06:54:45.331Z\n__export_source: insomnia.desktop.app:v2021.7.2\nresources:\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6523acbe44\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641196273388\n    created: 1641195562173\n    url: '{{ base_url }}/pet'\n    name: Add a new pet to the store\n    description: ''\n    method: POST\n    body:\n      mimeType: application/json\n      text: |-\n        {\n          \"id\": 10,\n          \"name\": \"doggie\",\n          \"category\": {\n            \"id\": 1,\n            \"name\": \"Dogs\"\n          },\n          \"photoUrls\": [\n            \"string\"\n          ],\n          \"tags\": [\n            {\n              \"id\": 0,\n              \"name\": \"string\"\n            }\n          ],\n          \"status\": \"string\"\n        }\n    parameters: []\n    headers:\n      - name: Content-Type\n        value: application/json\n        id: pair_3ade684a900c4a33ab96cc51362c5257\n    authentication: {}\n    metaSortKey: -1641195562173\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    parentId: wrk_a255aeabb44240f5885e3360f9a6ee65\n    modified: 1641195562179\n    created: 1641195562179\n    name: pet\n    description: Everything about your Pets\n    environment: {}\n    environmentPropertyOrder: null\n    metaSortKey: -1641195562179\n    _type: request_group\n  - _id: wrk_a255aeabb44240f5885e3360f9a6ee65\n    parentId: null\n    modified: 1641195565868\n    created: 1641195565868\n    name: Swagger Petstore - OpenAPI 3.0 1.0.9\n    description: \u003e-\n      This is a sample Pet Store Server based on the OpenAPI 3.0\n      specification.  You can find out more about\n\n      Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\n\n      You can now help us improve the API whether it's by making changes to the definition itself or to the code.\n\n      That way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n\n      Some useful links:\n\n      - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n\n      - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\n    scope: collection\n    _type: workspace\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6574a7a059\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641196278825\n    created: 1641195562172\n    url: '{{ base_url }}/pet'\n    name: Update an existing pet\n    description: ''\n    method: PUT\n    body:\n      mimeType: application/json\n      text: |-\n        {\n          \"id\": 10,\n          \"name\": \"doggie\",\n          \"category\": {\n            \"id\": 1,\n            \"name\": \"Dogs\"\n          },\n          \"photoUrls\": [\n            \"string\"\n          ],\n          \"tags\": [\n            {\n              \"id\": 0,\n              \"name\": \"string\"\n            }\n          ],\n          \"status\": \"string\"\n        }\n    parameters: []\n    headers:\n      - name: Content-Type\n        value: application/json\n        id: pair_f2d1606381bd419aa1c2414c1af2c688\n    authentication: {}\n    metaSortKey: -1641195562172\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6580ab0d08\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641196293753\n    created: 1641195562170\n    url: '{{ base_url }}/pet/findByStatus?status=available'\n    name: Finds Pets by status\n    description: ''\n    method: GET\n    body: {}\n    parameters:\n      - name: status\n        disabled: true\n        value: available\n        id: pair_1ff33812c2c3485aba0f2d0bf41ed0b5\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562170\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6542a17980\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641195562168\n    created: 1641195562168\n    url: '{{ base_url }}/pet/findByTags'\n    name: Finds Pets by tags\n    description: ''\n    method: GET\n    body: {}\n    parameters:\n      - name: tags\n        disabled: true\n        value: string\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562168\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee653d1a51d3\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641195562165\n    created: 1641195562165\n    url: '{{ base_url }}/pet/{{ petId }}'\n    name: Find pet by ID\n    description: ''\n    method: GET\n    body: {}\n    parameters: []\n    headers:\n      - name: api_key\n        disabled: false\n        value: '{{ apiKey }}'\n    authentication: {}\n    metaSortKey: -1641195562165\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65a4608701\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641195562164\n    created: 1641195562164\n    url: '{{ base_url }}/pet/{{ petId }}'\n    name: Updates a pet in the store with form data\n    description: ''\n    method: POST\n    body: {}\n    parameters:\n      - name: name\n        disabled: true\n        value: string\n      - name: status\n        disabled: true\n        value: string\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562164\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65e804bd05\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641195562163\n    created: 1641195562163\n    url: '{{ base_url }}/pet/{{ petId }}'\n    name: Deletes a pet\n    description: ''\n    method: DELETE\n    body: {}\n    parameters: []\n    headers:\n      - name: api_key\n        disabled: true\n        value: string\n    authentication: {}\n    metaSortKey: -1641195562163\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee658081fb6f\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee651b034c38\n    modified: 1641195562160\n    created: 1641195562160\n    url: '{{ base_url }}/pet/{{ petId }}/uploadImage'\n    name: uploads an image\n    description: ''\n    method: POST\n    body:\n      mimeType: application/octet-stream\n    parameters:\n      - name: additionalMetadata\n        disabled: true\n        value: string\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562160\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65443ac9e7\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee653a21295d\n    modified: 1641195562159\n    created: 1641195562159\n    url: '{{ base_url }}/store/inventory'\n    name: Returns pet inventories by status\n    description: ''\n    method: GET\n    body: {}\n    parameters: []\n    headers:\n      - name: api_key\n        disabled: false\n        value: '{{ apiKey }}'\n    authentication: {}\n    metaSortKey: -1641195562159\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: fld_wrk_a255aeabb44240f5885e3360f9a6ee653a21295d\n    parentId: wrk_a255aeabb44240f5885e3360f9a6ee65\n    modified: 1641195562178\n    created: 1641195562178\n    name: store\n    description: Access to Petstore orders\n    environment: {}\n    environmentPropertyOrder: null\n    metaSortKey: -1641195562178\n    _type: request_group\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65e24a4f9e\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee653a21295d\n    modified: 1641195562158\n    created: 1641195562158\n    url: '{{ base_url }}/store/order'\n    name: Place an order for a pet\n    description: ''\n    method: POST\n    body:\n      mimeType: application/json\n      text: |-\n        {\n          \"id\": 10,\n          \"petId\": 198772,\n          \"quantity\": 7,\n          \"shipDate\": \"2022-01-03T07:39:22.140Z\",\n          \"status\": \"approved\",\n          \"complete\": true\n        }\n    parameters: []\n    headers:\n      - name: Content-Type\n        value: application/json\n    authentication: {}\n    metaSortKey: -1641195562158\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65f021bcd3\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee653a21295d\n    modified: 1641195562155\n    created: 1641195562155\n    url: '{{ base_url }}/store/order/{{ orderId }}'\n    name: Find purchase order by ID\n    description: ''\n    method: GET\n    body: {}\n    parameters: []\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562155\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6515e47538\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee653a21295d\n    modified: 1641195562154\n    created: 1641195562154\n    url: '{{ base_url }}/store/order/{{ orderId }}'\n    name: Delete purchase order by ID\n    description: ''\n    method: DELETE\n    body: {}\n    parameters: []\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562154\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65fe3d55d0\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562152\n    created: 1641195562152\n    url: '{{ base_url }}/user'\n    name: Create user\n    description: ''\n    method: POST\n    body:\n      mimeType: application/json\n      text: |-\n        {\n          \"id\": 10,\n          \"username\": \"theUser\",\n          \"firstName\": \"John\",\n          \"lastName\": \"James\",\n          \"email\": \"john@email.com\",\n          \"password\": 12345,\n          \"phone\": 12345,\n          \"userStatus\": 1\n        }\n    parameters: []\n    headers:\n      - name: Content-Type\n        value: application/json\n    authentication: {}\n    metaSortKey: -1641195562152\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    parentId: wrk_a255aeabb44240f5885e3360f9a6ee65\n    modified: 1641195562176\n    created: 1641195562176\n    name: user\n    description: Operations about user\n    environment: {}\n    environmentPropertyOrder: null\n    metaSortKey: -1641195562176\n    _type: request_group\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65e94a615f\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562150\n    created: 1641195562150\n    url: '{{ base_url }}/user/createWithList'\n    name: Creates list of users with given input array\n    description: ''\n    method: POST\n    body:\n      mimeType: application/json\n      text: |-\n        [\n          {\n            \"id\": 10,\n            \"username\": \"theUser\",\n            \"firstName\": \"John\",\n            \"lastName\": \"James\",\n            \"email\": \"john@email.com\",\n            \"password\": 12345,\n            \"phone\": 12345,\n            \"userStatus\": 1\n          }\n        ]\n    parameters: []\n    headers:\n      - name: Content-Type\n        value: application/json\n    authentication: {}\n    metaSortKey: -1641195562150\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6500ac9da2\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562148\n    created: 1641195562148\n    url: '{{ base_url }}/user/login'\n    name: Logs user into the system\n    description: ''\n    method: GET\n    body: {}\n    parameters:\n      - name: username\n        disabled: true\n        value: string\n      - name: password\n        disabled: true\n        value: string\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562148\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee65740025cb\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562147\n    created: 1641195562147\n    url: '{{ base_url }}/user/logout'\n    name: Logs out current logged in user session\n    description: ''\n    method: GET\n    body: {}\n    parameters: []\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562147\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6574f1d1d1\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562146\n    created: 1641195562146\n    url: '{{ base_url }}/user/{{ username }}'\n    name: Get user by user name\n    description: ''\n    method: GET\n    body: {}\n    parameters: []\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562146\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee656d74493f\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562144\n    created: 1641195562144\n    url: '{{ base_url }}/user/{{ username }}'\n    name: Update user\n    description: ''\n    method: PUT\n    body:\n      mimeType: application/json\n      text: |-\n        {\n          \"id\": 10,\n          \"username\": \"theUser\",\n          \"firstName\": \"John\",\n          \"lastName\": \"James\",\n          \"email\": \"john@email.com\",\n          \"password\": 12345,\n          \"phone\": 12345,\n          \"userStatus\": 1\n        }\n    parameters: []\n    headers:\n      - name: Content-Type\n        value: application/json\n    authentication: {}\n    metaSortKey: -1641195562144\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: req_wrk_a255aeabb44240f5885e3360f9a6ee6538e8e88f\n    parentId: fld_wrk_a255aeabb44240f5885e3360f9a6ee6512dea96f\n    modified: 1641195562143\n    created: 1641195562143\n    url: '{{ base_url }}/user/{{ username }}'\n    name: Delete user\n    description: ''\n    method: DELETE\n    body: {}\n    parameters: []\n    headers: []\n    authentication: {}\n    metaSortKey: -1641195562143\n    isPrivate: false\n    settingStoreCookies: true\n    settingSendCookies: true\n    settingDisableRenderRequestBody: false\n    settingEncodeUrl: true\n    settingRebuildPath: true\n    settingFollowRedirects: global\n    _type: request\n  - _id: env_e36ff964c604633ac012e67acde4790806dc20c8\n    parentId: wrk_a255aeabb44240f5885e3360f9a6ee65\n    modified: 1641195562182\n    created: 1641195562180\n    name: Base environment\n    data:\n      base_url: '{{ scheme }}://{{ host }}{{ base_path }}'\n    dataPropertyOrder: null\n    color: null\n    isPrivate: false\n    metaSortKey: 1641195562180\n    _type: environment\n  - _id: jar_e36ff964c604633ac012e67acde4790806dc20c8\n    parentId: wrk_a255aeabb44240f5885e3360f9a6ee65\n    modified: 1641195569855\n    created: 1641195569855\n    name: Default Jar\n    cookies: []\n    _type: cookie_jar\n  - _id: spc_e6315f4190fe459784671aed112ad815\n    parentId: wrk_a255aeabb44240f5885e3360f9a6ee65\n    modified: 1641195565984\n    created: 1641195565877\n    fileName: Swagger Petstore - OpenAPI 3.0 1.0.9\n    contents: \u003e\n      openapi: 3.0.2\n\n      servers:\n        - url: /v3\n      info:\n        description: |-\n          This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\n          Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\n          You can now help us improve the API whether it's by making changes to the definition itself or to the code.\n          That way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n          Some useful links:\n          - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n          - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\n        version: 1.0.9\n        title: Swagger Petstore - OpenAPI 3.0\n        termsOfService: 'http://swagger.io/terms/'\n        contact:\n          email: apiteam@swagger.io\n        license:\n          name: Apache 2.0\n          url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n      tags:\n        - name: pet\n          description: Everything about your Pets\n          externalDocs:\n            description: Find out more\n            url: 'http://swagger.io'\n        - name: store\n          description: Access to Petstore orders\n          externalDocs:\n            description: Find out more about our store\n            url: 'http://swagger.io'\n        - name: user\n          description: Operations about user\n      paths:\n        /pet:\n          post:\n            tags:\n              - pet\n            summary: Add a new pet to the store\n            description: Add a new pet to the store\n            operationId: addPet\n            responses:\n              '200':\n                description: Successful operation\n                content:\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/Pet'\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Pet'\n              '405':\n                description: Invalid input\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n            requestBody:\n              description: Create a new pet in the store\n              required: true\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/x-www-form-urlencoded:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n          put:\n            tags:\n              - pet\n            summary: Update an existing pet\n            description: Update an existing pet by Id\n            operationId: updatePet\n            responses:\n              '200':\n                description: Successful operation\n                content:\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/Pet'\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Pet'\n              '400':\n                description: Invalid ID supplied\n              '404':\n                description: Pet not found\n              '405':\n                description: Validation exception\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n            requestBody:\n              description: Update an existent pet in the store\n              required: true\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n                application/x-www-form-urlencoded:\n                  schema:\n                    $ref: '#/components/schemas/Pet'\n        /pet/findByStatus:\n          get:\n            tags:\n              - pet\n            summary: Finds Pets by status\n            description: Multiple status values can be provided with comma separated strings\n            operationId: findPetsByStatus\n            parameters:\n              - name: status\n                in: query\n                description: Status values that need to be considered for filter\n                required: false\n                explode: true\n                schema:\n                  type: string\n                  enum:\n                    - available\n                    - pending\n                    - sold\n                  default: available\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/xml:\n                    schema:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Pet'\n                  application/json:\n                    schema:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Pet'\n              '400':\n                description: Invalid status value\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n        /pet/findByTags:\n          get:\n            tags:\n              - pet\n            summary: Finds Pets by tags\n            description: \u003e-\n              Multiple tags can be provided with comma separated strings. Use tag1,\n              tag2, tag3 for testing.\n            operationId: findPetsByTags\n            parameters:\n              - name: tags\n                in: query\n                description: Tags to filter by\n                required: false\n                explode: true\n                schema:\n                  type: array\n                  items:\n                    type: string\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/xml:\n                    schema:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Pet'\n                  application/json:\n                    schema:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Pet'\n              '400':\n                description: Invalid tag value\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n        '/pet/{petId}':\n          get:\n            tags:\n              - pet\n            summary: Find pet by ID\n            description: Returns a single pet\n            operationId: getPetById\n            parameters:\n              - name: petId\n                in: path\n                description: ID of pet to return\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/Pet'\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Pet'\n              '400':\n                description: Invalid ID supplied\n              '404':\n                description: Pet not found\n            security:\n              - api_key: []\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n          post:\n            tags:\n              - pet\n            summary: Updates a pet in the store with form data\n            description: ''\n            operationId: updatePetWithForm\n            parameters:\n              - name: petId\n                in: path\n                description: ID of pet that needs to be updated\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n              - name: name\n                in: query\n                description: Name of pet that needs to be updated\n                schema:\n                  type: string\n              - name: status\n                in: query\n                description: Status of pet that needs to be updated\n                schema:\n                  type: string\n            responses:\n              '405':\n                description: Invalid input\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n          delete:\n            tags:\n              - pet\n            summary: Deletes a pet\n            description: ''\n            operationId: deletePet\n            parameters:\n              - name: api_key\n                in: header\n                description: ''\n                required: false\n                schema:\n                  type: string\n              - name: petId\n                in: path\n                description: Pet id to delete\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n            responses:\n              '400':\n                description: Invalid pet value\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n        '/pet/{petId}/uploadImage':\n          post:\n            tags:\n              - pet\n            summary: uploads an image\n            description: ''\n            operationId: uploadFile\n            parameters:\n              - name: petId\n                in: path\n                description: ID of pet to update\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n              - name: additionalMetadata\n                in: query\n                description: Additional Metadata\n                required: false\n                schema:\n                  type: string\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/ApiResponse'\n            security:\n              - petstore_auth:\n                  - 'write:pets'\n                  - 'read:pets'\n            requestBody:\n              content:\n                application/octet-stream:\n                  schema:\n                    type: string\n                    format: binary\n        /store/inventory:\n          get:\n            tags:\n              - store\n            summary: Returns pet inventories by status\n            description: Returns a map of status codes to quantities\n            operationId: getInventory\n            x-swagger-router-controller: OrderController\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/json:\n                    schema:\n                      type: object\n                      additionalProperties:\n                        type: integer\n                        format: int32\n            security:\n              - api_key: []\n        /store/order:\n          post:\n            tags:\n              - store\n            summary: Place an order for a pet\n            description: Place a new order in the store\n            operationId: placeOrder\n            x-swagger-router-controller: OrderController\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Order'\n              '405':\n                description: Invalid input\n            requestBody:\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/Order'\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/Order'\n                application/x-www-form-urlencoded:\n                  schema:\n                    $ref: '#/components/schemas/Order'\n        '/store/order/{orderId}':\n          get:\n            tags:\n              - store\n            summary: Find purchase order by ID\n            x-swagger-router-controller: OrderController\n            description: \u003e-\n              For valid response try integer IDs with value \u003c= 5 or \u003e 10. Other values\n              will generate exceptions.\n            operationId: getOrderById\n            parameters:\n              - name: orderId\n                in: path\n                description: ID of order that needs to be fetched\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/Order'\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/Order'\n              '400':\n                description: Invalid ID supplied\n              '404':\n                description: Order not found\n          delete:\n            tags:\n              - store\n            summary: Delete purchase order by ID\n            x-swagger-router-controller: OrderController\n            description: \u003e-\n              For valid response try integer IDs with value \u003c 1000. Anything above\n              1000 or nonintegers will generate API errors\n            operationId: deleteOrder\n            parameters:\n              - name: orderId\n                in: path\n                description: ID of the order that needs to be deleted\n                required: true\n                schema:\n                  type: integer\n                  format: int64\n            responses:\n              '400':\n                description: Invalid ID supplied\n              '404':\n                description: Order not found\n        /user:\n          post:\n            tags:\n              - user\n            summary: Create user\n            description: This can only be done by the logged in user.\n            operationId: createUser\n            responses:\n              default:\n                description: successful operation\n                content:\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/User'\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/User'\n            requestBody:\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/User'\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/User'\n                application/x-www-form-urlencoded:\n                  schema:\n                    $ref: '#/components/schemas/User'\n              description: Created user object\n        /user/createWithList:\n          post:\n            tags:\n              - user\n            summary: Creates list of users with given input array\n            description: 'Creates list of users with given input array'\n            x-swagger-router-controller: UserController\n            operationId: createUsersWithListInput\n            responses:\n              '200':\n                description: Successful operation\n                content:\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/User'\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/User'\n              default:\n                description: successful operation\n            requestBody:\n              content:\n                application/json:\n                  schema:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/User'\n        /user/login:\n          get:\n            tags:\n              - user\n            summary: Logs user into the system\n            description: ''\n            operationId: loginUser\n            parameters:\n              - name: username\n                in: query\n                description: The user name for login\n                required: false\n                schema:\n                  type: string\n              - name: password\n                in: query\n                description: The password for login in clear text\n                required: false\n                schema:\n                  type: string\n            responses:\n              '200':\n                description: successful operation\n                headers:\n                  X-Rate-Limit:\n                    description: calls per hour allowed by the user\n                    schema:\n                      type: integer\n                      format: int32\n                  X-Expires-After:\n                    description: date in UTC when token expires\n                    schema:\n                      type: string\n                      format: date-time\n                content:\n                  application/xml:\n                    schema:\n                      type: string\n                  application/json:\n                    schema:\n                      type: string\n              '400':\n                description: Invalid username/password supplied\n        /user/logout:\n          get:\n            tags:\n              - user\n            summary: Logs out current logged in user session\n            description: ''\n            operationId: logoutUser\n            parameters: []\n            responses:\n              default:\n                description: successful operation\n        '/user/{username}':\n          get:\n            tags:\n              - user\n            summary: Get user by user name\n            description: ''\n            operationId: getUserByName\n            parameters:\n              - name: username\n                in: path\n                description: 'The name that needs to be fetched. Use user1 for testing. '\n                required: true\n                schema:\n                  type: string\n            responses:\n              '200':\n                description: successful operation\n                content:\n                  application/xml:\n                    schema:\n                      $ref: '#/components/schemas/User'\n                  application/json:\n                    schema:\n                      $ref: '#/components/schemas/User'\n              '400':\n                description: Invalid username supplied\n              '404':\n                description: User not found\n          put:\n            tags:\n              - user\n            summary: Update user\n            x-swagger-router-controller: UserController\n            description: This can only be done by the logged in user.\n            operationId: updateUser\n            parameters:\n              - name: username\n                in: path\n                description: name that need to be deleted\n                required: true\n                schema:\n                  type: string\n            responses:\n              default:\n                description: successful operation\n            requestBody:\n              description: Update an existent user in the store\n              content:\n                application/json:\n                  schema:\n                    $ref: '#/components/schemas/User'\n                application/xml:\n                  schema:\n                    $ref: '#/components/schemas/User'\n                application/x-www-form-urlencoded:\n                  schema:\n                    $ref: '#/components/schemas/User'\n          delete:\n            tags:\n              - user\n            summary: Delete user\n            description: This can only be done by the logged in user.\n            operationId: deleteUser\n            parameters:\n              - name: username\n                in: path\n                description: The name that needs to be deleted\n                required: true\n                schema:\n                  type: string\n            responses:\n              '400':\n                description: Invalid username supplied\n              '404':\n                description: User not found\n      externalDocs:\n        description: Find out more about Swagger\n        url: 'http://swagger.io'\n      components:\n        schemas:\n          Order:\n            x-swagger-router-model: io.swagger.petstore.model.Order\n            properties:\n              id:\n                type: integer\n                format: int64\n                example: 10\n              petId:\n                type: integer\n                format: int64\n                example: 198772\n              quantity:\n                type: integer\n                format: int32\n                example: 7\n              shipDate:\n                type: string\n                format: date-time\n              status:\n                type: string\n                description: Order Status\n                enum:\n                  - placed\n                  - approved\n                  - delivered\n                example: approved\n              complete:\n                type: boolean\n            xml:\n              name: order\n            type: object\n          Customer:\n            properties:\n              id:\n                type: integer\n                format: int64\n                example: 100000\n              username:\n                type: string\n                example: fehguy\n              address:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Address'\n                xml:\n                  wrapped: true\n                  name: addresses\n            xml:\n              name: customer\n            type: object\n          Address:\n            properties:\n              street:\n                type: string\n                example: 437 Lytton\n              city:\n                type: string\n                example: Palo Alto\n              state:\n                type: string\n                example: CA\n              zip:\n                type: string\n                example: 94301\n            xml:\n              name: address\n            type: object\n          Category:\n            x-swagger-router-model: io.swagger.petstore.model.Category\n            properties:\n              id:\n                type: integer\n                format: int64\n                example: 1\n              name:\n                type: string\n                example: Dogs\n            xml:\n              name: category\n            type: object\n          User:\n            x-swagger-router-model: io.swagger.petstore.model.User\n            properties:\n              id:\n                type: integer\n                format: int64\n                example: 10\n              username:\n                type: string\n                example: theUser\n              firstName:\n                type: string\n                example: John\n              lastName:\n                type: string\n                example: James\n              email:\n                type: string\n                example: john@email.com\n              password:\n                type: string\n                example: 12345\n              phone:\n                type: string\n                example: 12345\n              userStatus:\n                type: integer\n                format: int32\n                example: 1\n                description: User Status\n            xml:\n              name: user\n            type: object\n          Tag:\n            x-swagger-router-model: io.swagger.petstore.model.Tag\n            properties:\n              id:\n                type: integer\n                format: int64\n              name:\n                type: string\n            xml:\n              name: tag\n            type: object\n          Pet:\n            x-swagger-router-model: io.swagger.petstore.model.Pet\n            required:\n              - name\n              - photoUrls\n            properties:\n              id:\n                type: integer\n                format: int64\n                example: 10\n              name:\n                type: string\n                example: doggie\n              category:\n                $ref: '#/components/schemas/Category'\n              photoUrls:\n                type: array\n                xml:\n                  wrapped: true\n                items:\n                  type: string\n                  xml:\n                    name: photoUrl\n              tags:\n                type: array\n                xml:\n                  wrapped: true\n                items:\n                  $ref: '#/components/schemas/Tag'\n                  xml:\n                    name: tag\n              status:\n                type: string\n                description: pet status in the store\n                enum:\n                  - available\n                  - pending\n                  - sold\n            xml:\n              name: pet\n            type: object\n          ApiResponse:\n            properties:\n              code:\n                type: integer\n                format: int32\n              type:\n                type: string\n              message:\n                type: string\n            xml:\n              name: '##default'\n            type: object\n        requestBodies:\n          Pet:\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n              application/xml:\n                schema:\n                  $ref: '#/components/schemas/Pet'\n            description: Pet object that needs to be added to the store\n          UserArray:\n            content:\n              application/json:\n                schema:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/User'\n            description: List of user object\n        securitySchemes:\n          petstore_auth:\n            type: oauth2\n            flows:\n              implicit:\n                authorizationUrl: 'https://petstore.swagger.io/oauth/authorize'\n                scopes:\n                  'write:pets': modify pets in your account\n                  'read:pets': read your pets\n          api_key:\n            type: apiKey\n            name: api_key\n            in: header\n    contentType: yaml\n    _type: api_spec\n  - _id: env_env_e36ff964c604633ac012e67acde4790806dc20c8_sub\n    parentId: env_e36ff964c604633ac012e67acde4790806dc20c8\n    modified: 1641196328832\n    created: 1641195562181\n    name: OpenAPI env\n    data:\n      scheme:\n        - https\n      base_path: /v3\n      host: petstore3.swagger.io/api\n      apiKey: apiKey\n    dataPropertyOrder:\n      '\u0026':\n        - scheme\n        - base_path\n        - host\n        - apiKey\n    color: null\n    isPrivate: false\n    metaSortKey: 1641195562181\n    _type: environment\n",
			"canonicalURL": "/github.com/hyperjumptech/monika@d78d1605f68a6d3f6e06209e1d8a09eb65acf375/-/blob/src/components/config/__tests__/petstore.insomnia.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hyperjumptech/monika/blob/d78d1605f68a6d3f6e06209e1d8a09eb65acf375/src/components/config/__tests__/petstore.insomnia.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at src/components/config/__tests__/petstore.insomnia.yaml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}