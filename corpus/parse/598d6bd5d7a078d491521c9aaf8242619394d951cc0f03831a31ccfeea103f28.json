{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opengeospatial/ogcapi-maps"
		},
		"file": {
			"name": "ogc-api-features.yaml",
			"size": 0,
			"path": "openapi/swaggerHubUnresolved/ogc-api-features.yaml",
			"byteSize": 13593,
			"content": "openapi: 3.0.2\n# 2019-07-05 Separated from more complete other examples previously done. It relays on OGC API Common example. Common components used in the OGC API family of standards. Deeply inspired in Clemens Portele work.\n# 2019-07-10 \"Collection\" has a items object to describe the items link and eventually other properties. This makes this diferent form the original WFS3 examples\n# 2019-07-14 Updated with the last WFS3 draft https://github.com/opengeospatial/WFS_FES/blob/master/core/openapi/bbox/ogcapi-features-1.yaml\ninfo:\n  title: OGC API Features Building Blocks\n  description: |-\n    Common components used in the OGC API features standards.\n    Deeply inspired in Clemens Portele WFS3 work but depending on a OGC API Common document\n\n    This document is also available in [GitHub](https://github.com/opengeospatial/OGC-API-Map-Tiles/tree/master/standard/openapi).\n\n  version: \"1.0.0\"\n  contact:\n    name: Joan Maso\n    email: joan.maso@uab.cat\n  license:\n    name: OGC License\n    url: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE'\ncomponents:\n  parameters:\n    featureId:\n      name: featureId\n      in: path\n      description: local identifier of a feature\n      required: true\n      schema:\n        type: string\n    properties:\n      name: properties\n      in: query\n      description: |-\n        The properties that should be included for each feature. The parameter\n        value is a comma-separated list of property names.\n      required: false\n      style: form\n      explode: false\n      schema:\n        type: array\n        items:\n          type: string\n  schemas:\n    collection-link:\n      #This element is not directly linkable by other APIs because they probably will need to add other links to other resource types. Instead, it would be copied and enriched with more examples.\n      type: object\n      required:\n        - links\n      properties:\n        links:\n          type: array\n          items:\n            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'\n          example:\n            - href: 'http://example.com/collections/buildings?f=json'\n              rel: self\n              type: 'application/json'\n              title: This document\n            - href: 'http://example.com/concepts/buildings.html'\n              rel: describedby\n              type: text/html'\n            - href: 'http://data.example.com/collections/buildings/items'\n              rel: 'http://www.opengis.net/def/rel/OGC/1.0/items'\n              title: Retrieve the items of the buildings collection\n              type: 'application/geo+json'\n    queryables:\n      type: array\n      items:\n        oneOf:\n          - $ref: '#/components/schemas/queryable-string'\n          - $ref: '#/components/schemas/queryable-enum'\n          - $ref: '#/components/schemas/queryable-number'\n          - $ref: '#/components/schemas/queryable-boolean'\n          - $ref: '#/components/schemas/queryable-date'\n          - $ref: '#/components/schemas/queryable-dateTime'\n    queryable:\n      type: object\n      required:\n        - id\n        - type\n      properties:\n        id:\n          type: string\n          description: the property name for use in expressions\n        description:\n          type: string\n          description: a description of the property\n        required:\n          type: boolean\n          default: false\n          description: indicator whether the property is always present in features\n        mediaTypes:\n          type: array\n          description: |-\n            In cases where a property is available only in a subset of the\n            supported feature encodings, the list of the media types of the\n            encodings can be specified.\n\n            This capabilitiy is also needed for cases where the names of\n            properties may differ between feature encodings. For example,\n            identifiers in an XML/GML encoding may include a namespace,\n            in GeoJSON or MVT this is not the case.\n\n            There are other reasons, too. For example, the property identifier\n            in a Shapefile may be different because of length restrictions.\n          items:\n            type: string\n        type:\n          type: string\n          description: the data type of the property\n          enum:\n            - string\n            - uri\n            - enum\n            - number\n            - integer\n            - date\n            - dateTime\n            - boolean\n      discriminator:\n        propertyName: type\n        mapping:\n          string: queryable-string\n          enum: queryable-enum\n          uri: queryable-string\n          number: queryable-number\n          integer: queryable-number\n          date: queryable-date\n          dateTime: queryable-dateTie\n          boolean: queryable-boolean\n    queryable-string:\n      allOf:\n      - $ref: '#/components/schemas/queryable'\n      - type: object\n        nullable: true\n        properties:\n          pattern:\n            type: string\n            description: a regular expression to validate the values of the property\n      example:\n        id: name\n        description: the name of the vegetation area\n        required: true\n        type: string\n        example: '[A-Z0-9]{5}'\n    queryable-enum:\n      allOf:\n      - $ref: '#/components/schemas/queryable'\n      - type: object\n        required:\n          - values\n        properties:\n          values:\n            type: array\n            nullable: true\n            description: the list of values of the property\n            items:\n              type: string\n      example:\n        id: type\n        description: the dominant charcteristic of vegetation area\n        type: enum\n        values: [ 'grassland', 'forest', 'farmland' ]\n    queryable-number:\n      allOf:\n      - $ref: '#/components/schemas/queryable'\n      - type: object\n        nullable: true\n        properties:\n          range:\n            type: array\n            nullable: true\n            minItems: 2\n            maxItems: 2\n            items:\n              type: number\n              nullable: true\n            description: a range of valid values; open range can be expressed using `null`\n      example:\n        id: count\n        description: the number of cattle\n        type: integer\n        range: [ 0 , null ]\n    queryable-boolean:\n      allOf:\n      - $ref: '#/components/schemas/queryable'\n      example:\n        id: fenced\n        description: indicator whether the area is walled or fenced\n        type: boolean\n    queryable-date:\n      allOf:\n      - $ref: '#/components/schemas/queryable'\n      - type: object\n        properties:\n          range:\n            type: array\n            nullable: true\n            minItems: 2\n            maxItems: 2\n            items:\n              type: string\n              format: date\n              nullable: true\n            description: a range of valid values; open range can be expressed using `null`\n      example:\n        id: inspectionDate\n        description: the date of the last inspection\n        type: date\n        range: [ '2010-01-01', null ]\n    queryable-dateTime:\n      allOf:\n      - $ref: '#/components/schemas/queryable'\n      - type: object\n        properties:\n          range:\n            type: array\n            nullable: true\n            minItems: 2\n            maxItems: 2\n            items:\n              type: string\n              format: date-time\n              nullable: true\n            description: a range of valid values; open range can be expressed using `null`\n      example:\n        id: lastUpdate\n        description: the date of the last update of the feature\n        type: dateTime\n        range: [ '2018-01-01T00:00:00Z', null ]\n    featureCollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - features\n      properties:\n        type:\n          type: string\n          enum:\n            - FeatureCollection\n        features:\n          type: array\n          items:\n            $ref: '#/components/schemas/featureGeoJSON'\n        links:\n          type: array\n          items:\n            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'\n        timeStamp:\n          $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/timeStamp'\n        numberMatched:\n          type: integer\n          minimum: 0\n        numberReturned:\n          type: integer\n          minimum: 0\n    featureGeoJSON:\n      type: object\n      required:\n        - type\n        - geometry\n        - properties\n      properties:\n        type:\n          type: string\n          enum:\n            - Feature\n        geometry:\n          $ref: '#/components/schemas/geometryGeoJSON'\n        properties:\n          type: object\n          nullable: true\n        id:\n          oneOf:\n            - type: string\n            - type: integer\n        links:\n          type: array\n          items:\n            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'\n    geometryGeoJSON:\n      oneOf:\n      - $ref: \"#/components/schemas/pointGeoJSON\"\n      - $ref: \"#/components/schemas/multipointGeoJSON\"\n      - $ref: \"#/components/schemas/linestringGeoJSON\"\n      - $ref: \"#/components/schemas/multilinestringGeoJSON\"\n      - $ref: \"#/components/schemas/polygonGeoJSON\"\n      - $ref: \"#/components/schemas/multipolygonGeoJSON\"\n      - $ref: \"#/components/schemas/geometrycollectionGeoJSON\"\n    geometryGeoJSONNoCollection:\n      #This element should not exist (and use geometryGeoJSON) but has been created to avoid a stack overflow in the SwaggerHUB due to a circular reference.\n      oneOf:\n      - $ref: \"#/components/schemas/pointGeoJSON\"\n      - $ref: \"#/components/schemas/multipointGeoJSON\"\n      - $ref: \"#/components/schemas/linestringGeoJSON\"\n      - $ref: \"#/components/schemas/multilinestringGeoJSON\"\n      - $ref: \"#/components/schemas/polygonGeoJSON\"\n      - $ref: \"#/components/schemas/multipolygonGeoJSON\"\n      #- $ref: \"#/components/schemas/geometrycollectionGeoJSON\"\n    geometrycollectionGeoJSON:\n      type: object\n      required:\n        - type\n        - geometries\n      properties:\n        type:\n          type: string\n          enum:\n            - GeometryCollection\n        geometries:\n          type: array\n          items:\n            $ref: \"#/components/schemas/geometryGeoJSONNoCollection\"\n    landingPage:\n      type: object\n      required:\n        - links\n      properties:\n        title:\n          type: string\n          example: Buildings in Bonn\n        description:\n          type: string\n          example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.\n        links:\n          type: array\n          items:\n            $ref: 'https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link'\n    linestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - LineString\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    multilinestringGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiLineString\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n    multipointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPoint\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 2\n            items:\n              type: number\n    multipolygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - MultiPolygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              minItems: 4\n              items:\n                type: array\n                minItems: 2\n                items:\n                  type: number\n    pointGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Point\n        coordinates:\n          type: array\n          minItems: 2\n          items:\n            type: number\n    polygonGeoJSON:\n      type: object\n      required:\n        - type\n        - coordinates\n      properties:\n        type:\n          type: string\n          enum:\n            - Polygon\n          example: Polygon\n        coordinates:\n          type: array\n          items:\n            type: array\n            minItems: 4\n            items:\n              type: array\n              minItems: 2\n              items:\n                type: number\n          example:      \n          - - - 35.99601746\n              - 32.50426061\n            - - 36.08110064\n              - 32.50426061\n            - - 36.08110064\n              - 32.57551892\n            - - 35.99601746\n              - 32.57551892\n            - - 35.99601746\n              - 32.50426061"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"featureGeoJSON\": parse schema: property \"links\": parse schema: item: parse schema: resolve \"https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0#/components/schemas/link\": find schema: external base \"https://api.swaggerhub.com/domains/UAB-CREAF/ogc-api-common/1.0.0\" is not supported"
}