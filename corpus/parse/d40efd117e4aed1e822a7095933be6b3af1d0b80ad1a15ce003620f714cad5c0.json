{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hiromaily/go-goa"
		},
		"file": {
			"name": "openapi3.yaml",
			"size": 0,
			"path": "internal/goa/service/resume/gen/http/openapi3.yaml",
			"byteSize": 59445,
			"content": "openapi: 3.0.3\ninfo:\n    title: resume API\n    description: go-goa API with goa framework\n    contact:\n        name: hiromaily\n        url: https://hiromaily.github.io/\n        email: hiromaily@gmail.com\n    license:\n        name: MIT\n        url: https://github.com/goadesign/goa/blob/master/LICENSE\n    version: \"1.0\"\nservers:\n    - url: http://localhost:8080\n    - url: http://localhost:8090\npaths:\n    /{*filepath}:\n        get:\n            tags:\n                - static\n            summary: Download ./docs/\n            operationId: static#/{*filepath}\n            parameters:\n                - name: filepath\n                  in: path\n                  description: Relative file path\n                  required: true\n            responses:\n                \"200\":\n                    description: File not found\n                \"404\":\n                    description: File not found\n    /api/auth/login:\n        post:\n            tags:\n                - auth\n            summary: login auth\n            description: Login and return jwt token\n            operationId: auth#login\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/LoginRequestBody'\n                        example:\n                            email: hy@gmail.com\n                            password: xxxxxxxx\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Authorized'\n                            example:\n                                id: 10\n                                token: token.string\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n    /api/company:\n        get:\n            tags:\n                - hy_company\n            summary: companyList hy_company\n            description: List all companies\n            operationId: hy_company#companyList\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseIDCollection or #/components/schemas/CompanyResponseIdnameCollection'\n                                $ref: '#/components/schemas/CompanyCollection'\n                            example:\n                                - address: Shinagawa Tokyo\n                                  company_id: 10\n                                  company_name: Company\n                                  country_name: Est qui iure eligendi alias.\n                                  created_at: \"2017-03-10T15:00:00Z\"\n                                  updated_at: \"2017-03-10T15:00:00Z\"\n                                - address: Shinagawa Tokyo\n                                  company_id: 10\n                                  company_name: Company\n                                  country_name: Est qui iure eligendi alias.\n                                  created_at: \"2017-03-10T15:00:00Z\"\n                                  updated_at: \"2017-03-10T15:00:00Z\"\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        post:\n            tags:\n                - hy_company\n            summary: createCompany hy_company\n            description: Create new company\n            operationId: hy_company#createCompany\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateCompanyRequestBody'\n                        example:\n                            address: Shinagawa Tokyo\n                            company_name: Company\n                            country_id: 110\n            responses:\n                \"201\":\n                    description: Created response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseID or #/components/schemas/CompanyResponseIdname'\n                                $ref: '#/components/schemas/Company'\n                            example:\n                                address: Shinagawa Tokyo\n                                company_id: 10\n                                company_name: Company\n                                country_name: Quis sit vel.\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                \"400\":\n                    description: 'BadRequest: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/company/{company_id}:\n        delete:\n            tags:\n                - hy_company\n            summary: deleteCompany hy_company\n            description: Delete company\n            operationId: hy_company#deleteCompany\n            parameters:\n                - name: company_id\n                  in: path\n                  description: Company ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: Company ID\n                    example: 2450829123900241451\n                    minimum: 1\n                  example: 3028389055883497065\n            responses:\n                \"200\":\n                    description: OK response.\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        get:\n            tags:\n                - hy_company\n            summary: getCompany hy_company\n            description: returns company by given company_id\n            operationId: hy_company#getCompany\n            parameters:\n                - name: company_id\n                  in: path\n                  description: Company ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: Company ID\n                    example: 2542831557689381724\n                    minimum: 1\n                  example: 6322987545549911868\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be one of #/components/schemas/CompanyResponseID or #/components/schemas/CompanyResponseIdname'\n                                $ref: '#/components/schemas/Company'\n                            example:\n                                address: Shinagawa Tokyo\n                                company_id: 10\n                                company_name: Company\n                                country_name: Qui reprehenderit aut.\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        put:\n            tags:\n                - hy_company\n            summary: updateCompany hy_company\n            description: Update company data\n            operationId: hy_company#updateCompany\n            parameters:\n                - name: company_id\n                  in: path\n                  description: Company ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: Company ID\n                    example: 7119331174720051915\n                    minimum: 1\n                  example: 9032909640699640931\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateCompanyRequestBody'\n                        example:\n                            address: Shinagawa Tokyo\n                            company_name: Company\n                            country_id: 110\n            responses:\n                \"200\":\n                    description: OK response.\n                \"400\":\n                    description: 'BadRequest: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/health:\n        get:\n            tags:\n                - health\n            summary: health health\n            operationId: health#health\n            responses:\n                \"200\":\n                    description: OK response.\n    /api/tech:\n        get:\n            tags:\n                - hy_tech\n            summary: techList hy_tech\n            description: List all techs\n            operationId: hy_tech#techList\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/TechResponseIDCollection'\n                                $ref: '#/components/schemas/TechCollection'\n                            example:\n                                - created_at: \"2017-03-10T15:00:00Z\"\n                                  tech_id: 10\n                                  tech_name: Golang\n                                  updated_at: \"2017-03-10T15:00:00Z\"\n                                - created_at: \"2017-03-10T15:00:00Z\"\n                                  tech_id: 10\n                                  tech_name: Golang\n                                  updated_at: \"2017-03-10T15:00:00Z\"\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        post:\n            tags:\n                - hy_tech\n            summary: createTech hy_tech\n            description: Create new tech\n            operationId: hy_tech#createTech\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateTechRequestBody'\n                        example:\n                            tech_name: Golang\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/TechResponseID'\n                                $ref: '#/components/schemas/Tech'\n                            example:\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                tech_id: 10\n                                tech_name: Golang\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                \"201\":\n                    description: Created response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/TechResponseID'\n                                $ref: '#/components/schemas/Tech'\n                            example:\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                tech_id: 10\n                                tech_name: Golang\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                \"400\":\n                    description: 'BadRequest: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/tech/{tech_id}:\n        delete:\n            tags:\n                - hy_tech\n            summary: deleteTech hy_tech\n            description: Delete tech\n            operationId: hy_tech#deleteTech\n            parameters:\n                - name: tech_id\n                  in: path\n                  description: Tech ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: Tech ID\n                    example: 7001667928654898875\n                    minimum: 1\n                  example: 7436755976610430116\n            responses:\n                \"200\":\n                    description: OK response.\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        get:\n            tags:\n                - hy_tech\n            summary: getTech hy_tech\n            description: returns tech by given tech id\n            operationId: hy_tech#getTech\n            parameters:\n                - name: tech_id\n                  in: path\n                  description: Tech ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: Tech ID\n                    example: 1302648288950901427\n                    minimum: 1\n                  example: 2543899863307384430\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/TechResponseID'\n                                $ref: '#/components/schemas/Tech'\n                            example:\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                tech_id: 10\n                                tech_name: Golang\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        put:\n            tags:\n                - hy_tech\n            summary: updateTech hy_tech\n            description: Update tech data\n            operationId: hy_tech#updateTech\n            parameters:\n                - name: tech_id\n                  in: path\n                  description: Tech ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: Tech ID\n                    example: 6258571356138319433\n                    minimum: 1\n                  example: 7296104000633002390\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateTechRequestBody'\n                        example:\n                            tech_name: Golang\n            responses:\n                \"200\":\n                    description: OK response.\n                \"400\":\n                    description: 'BadRequest: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/user:\n        get:\n            tags:\n                - hy_user\n            summary: userList hy_user\n            description: List all users\n            operationId: hy_user#userList\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/UserResponseIDCollection'\n                                $ref: '#/components/schemas/UserCollection'\n                            example:\n                                - created_at: \"2017-03-10T15:00:00Z\"\n                                  email: hy@gmail.com\n                                  password: xxxxxxxx\n                                  updated_at: \"2017-03-10T15:00:00Z\"\n                                  user_id: 10\n                                  user_name: Hiroki\n                                - created_at: \"2017-03-10T15:00:00Z\"\n                                  email: hy@gmail.com\n                                  password: xxxxxxxx\n                                  updated_at: \"2017-03-10T15:00:00Z\"\n                                  user_id: 10\n                                  user_name: Hiroki\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        post:\n            tags:\n                - hy_user\n            summary: createUser hy_user\n            description: Create new user\n            operationId: hy_user#createUser\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/CreateUserRequestBody'\n                        example:\n                            email: hy@gmail.com\n                            password: xxxxxxxx\n                            user_name: Hiroki\n            responses:\n                \"201\":\n                    description: Created response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/UserResponseID'\n                                $ref: '#/components/schemas/User'\n                            example:\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                email: hy@gmail.com\n                                password: xxxxxxxx\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                                user_id: 10\n                                user_name: Hiroki\n                \"400\":\n                    description: 'BadRequest: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/user/{user_id}:\n        delete:\n            tags:\n                - hy_user\n            summary: deleteUser hy_user\n            description: Delete user\n            operationId: hy_user#deleteUser\n            parameters:\n                - name: user_id\n                  in: path\n                  description: User ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: User ID\n                    example: 6755408238676982526\n                    minimum: 1\n                  example: 928353900552405200\n            responses:\n                \"200\":\n                    description: OK response.\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        get:\n            tags:\n                - hy_user\n            summary: getUser hy_user\n            description: Get user by given user id\n            operationId: hy_user#getUser\n            parameters:\n                - name: user_id\n                  in: path\n                  description: User ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: User ID\n                    example: 8832818538614618330\n                    minimum: 1\n                  example: 3688593088192488874\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/UserResponseID'\n                                $ref: '#/components/schemas/User'\n                            example:\n                                created_at: \"2017-03-10T15:00:00Z\"\n                                email: hy@gmail.com\n                                password: xxxxxxxx\n                                updated_at: \"2017-03-10T15:00:00Z\"\n                                user_id: 10\n                                user_name: Hiroki\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n        put:\n            tags:\n                - hy_user\n            summary: updateUser hy_user\n            description: Update user data\n            operationId: hy_user#updateUser\n            parameters:\n                - name: user_id\n                  in: path\n                  description: User ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: User ID\n                    example: 5593992008448808258\n                    minimum: 1\n                  example: 2939369339074225465\n            requestBody:\n                required: true\n                content:\n                    application/json:\n                        schema:\n                            $ref: '#/components/schemas/UpdateUserRequestBody'\n                        example:\n                            email: hy@gmail.com\n                            password: xxxxxxxx\n                            user_name: Hiroki\n            responses:\n                \"200\":\n                    description: OK response.\n                \"400\":\n                    description: 'BadRequest: Bad Request response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/user/{user_id}/disliketech:\n        get:\n            tags:\n                - hy_usertech\n            summary: getUserDisLikeTech hy_usertech\n            description: get user's dislike techs\n            operationId: hy_usertech#getUserDisLikeTech\n            parameters:\n                - name: user_id\n                  in: path\n                  description: User ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: User ID\n                    example: 2389599537430209477\n                    minimum: 1\n                  example: 1148707235870461175\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/UsertechResponseTechNameCollection'\n                                $ref: '#/components/schemas/UsertechCollection'\n                            example:\n                                - id: 10\n                                  tech_name: Golang\n                                - id: 10\n                                  tech_name: Golang\n                                - id: 10\n                                  tech_name: Golang\n                                - id: 10\n                                  tech_name: Golang\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/user/{user_id}/liketech:\n        get:\n            tags:\n                - hy_usertech\n            summary: getUserLikeTech hy_usertech\n            description: get user's favorite techs\n            operationId: hy_usertech#getUserLikeTech\n            parameters:\n                - name: user_id\n                  in: path\n                  description: User ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: User ID\n                    example: 5607313021983523631\n                    minimum: 1\n                  example: 4516020509322405488\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                description: 'Response body may alternatively be #/components/schemas/UsertechResponseTechNameCollection'\n                                $ref: '#/components/schemas/UsertechCollection'\n                            example:\n                                - id: 10\n                                  tech_name: Golang\n                                - id: 10\n                                  tech_name: Golang\n                                - id: 10\n                                  tech_name: Golang\n                                - id: 10\n                                  tech_name: Golang\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /api/user/{user_id}/workhistory:\n        get:\n            tags:\n                - hy_userWorkHistory\n            summary: getUserWorkHistory hy_userWorkHistory\n            description: get user's work history\n            operationId: hy_userWorkHistory#getUserWorkHistory\n            parameters:\n                - name: user_id\n                  in: path\n                  description: User ID\n                  required: true\n                  schema:\n                    type: integer\n                    description: User ID\n                    example: 1209118562802187822\n                    minimum: 1\n                  example: 6971397286033645297\n            responses:\n                \"200\":\n                    description: OK response.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/UserworkhistoryCollection'\n                            example:\n                                - company_name: Company\n                                  country_name: nl\n                                  description: '[\"Developed resume site for job seeking.\"]'\n                                  techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                                  term: Jul 2017 - Aug 2017\n                                  title: Developer\n                                - company_name: Company\n                                  country_name: nl\n                                  description: '[\"Developed resume site for job seeking.\"]'\n                                  techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                                  term: Jul 2017 - Aug 2017\n                                  title: Developer\n                                - company_name: Company\n                                  country_name: nl\n                                  description: '[\"Developed resume site for job seeking.\"]'\n                                  techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                                  term: Jul 2017 - Aug 2017\n                                  title: Developer\n                \"401\":\n                    description: 'Unauthorized: Unauthorized response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n                \"404\":\n                    description: 'NotFound: Not Found response.'\n                    content:\n                        application/vnd.goa.error:\n                            schema:\n                                $ref: '#/components/schemas/Error'\n            security:\n                - jwt_header_Authorization:\n                    - api:access\n    /openapi.json:\n        get:\n            tags:\n                - static\n            summary: Download ./internal/goa/service/resume/gen/http/openapi.json\n            operationId: static#/openapi.json\n            responses:\n                \"200\":\n                    description: File downloaded\n    /openapi3.json:\n        get:\n            tags:\n                - static\n            summary: Download ./internal/goa/service/resume/gen/http/openapi3.json\n            operationId: static#/openapi3.json\n            responses:\n                \"200\":\n                    description: File downloaded\ncomponents:\n    schemas:\n        Authorized:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n                token:\n                    type: string\n                    description: JWT token\n                    example: token.string\n            example:\n                id: 10\n                token: token.string\n            required:\n                - token\n                - id\n        Company:\n            type: object\n            properties:\n                address:\n                    type: string\n                    description: Company Address\n                    example: Shinagawa Tokyo\n                    minLength: 2\n                    maxLength: 80\n                company_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n                company_name:\n                    type: string\n                    description: Company name\n                    example: Company\n                    minLength: 2\n                    maxLength: 40\n                country_name:\n                    type: string\n                    example: Non aut.\n                created_at:\n                    type: string\n                    description: Datetime\n                    example: \"2017-03-10T15:00:00Z\"\n                    format: date-time\n                updated_at:\n                    type: string\n                    description: Datetime\n                    example: \"2017-03-10T15:00:00Z\"\n                    format: date-time\n            description: A company information\n            example:\n                address: Shinagawa Tokyo\n                company_id: 10\n                company_name: Company\n                country_name: Quos ipsam et harum sunt dolores eligendi.\n                created_at: \"2017-03-10T15:00:00Z\"\n                updated_at: \"2017-03-10T15:00:00Z\"\n        CompanyCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/Company'\n            example:\n                - address: Shinagawa Tokyo\n                  company_id: 10\n                  company_name: Company\n                  country_name: Est qui iure eligendi alias.\n                  created_at: \"2017-03-10T15:00:00Z\"\n                  updated_at: \"2017-03-10T15:00:00Z\"\n                - address: Shinagawa Tokyo\n                  company_id: 10\n                  company_name: Company\n                  country_name: Est qui iure eligendi alias.\n                  created_at: \"2017-03-10T15:00:00Z\"\n                  updated_at: \"2017-03-10T15:00:00Z\"\n                - address: Shinagawa Tokyo\n                  company_id: 10\n                  company_name: Company\n                  country_name: Est qui iure eligendi alias.\n                  created_at: \"2017-03-10T15:00:00Z\"\n                  updated_at: \"2017-03-10T15:00:00Z\"\n        CompanyResponseID:\n            type: object\n            properties:\n                company_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n            description: A company information (id view)\n            example:\n                company_id: 10\n        CompanyResponseIDCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/CompanyResponseID'\n            description: CompanyListResponseBody is the result type for an array of CompanyResponse (id view)\n            example:\n                - company_id: 10\n                - company_id: 10\n                - company_id: 10\n                - company_id: 10\n        CompanyResponseIdname:\n            type: object\n            properties:\n                company_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n                company_name:\n                    type: string\n                    description: Company name\n                    example: Company\n                    minLength: 2\n                    maxLength: 40\n            description: A company information (idname view)\n            example:\n                company_id: 10\n                company_name: Company\n        CompanyResponseIdnameCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/CompanyResponseIdname'\n            description: CompanyListResponseBody is the result type for an array of CompanyResponse (idname view)\n            example:\n                - company_id: 10\n                  company_name: Company\n                - company_id: 10\n                  company_name: Company\n                - company_id: 10\n                  company_name: Company\n        CreateCompanyRequestBody:\n            type: object\n            properties:\n                address:\n                    type: string\n                    description: Company Address\n                    example: Shinagawa Tokyo\n                    minLength: 2\n                    maxLength: 80\n                company_name:\n                    type: string\n                    description: Company name\n                    example: Company\n                    minLength: 2\n                    maxLength: 40\n                country_id:\n                    type: integer\n                    description: Country ID\n                    example: 110\n                    minimum: 1\n                    maximum: 999\n            example:\n                address: Shinagawa Tokyo\n                company_name: Company\n                country_id: 110\n            required:\n                - company_name\n                - country_id\n                - address\n        CreateTechRequestBody:\n            type: object\n            properties:\n                tech_name:\n                    type: string\n                    description: Tech name\n                    example: Golang\n                    minLength: 1\n                    maxLength: 40\n            example:\n                tech_name: Golang\n            required:\n                - tech_name\n        CreateUserRequestBody:\n            type: object\n            properties:\n                email:\n                    type: string\n                    description: E-mail of user\n                    example: hy@gmail.com\n                    format: email\n                password:\n                    type: string\n                    description: Password\n                    example: xxxxxxxx\n                    minLength: 8\n                    maxLength: 20\n                user_name:\n                    type: string\n                    description: User name\n                    example: Hiroki\n                    minLength: 2\n                    maxLength: 20\n            example:\n                email: hy@gmail.com\n                password: xxxxxxxx\n                user_name: Hiroki\n            required:\n                - user_name\n                - email\n                - password\n        Error:\n            type: object\n            properties:\n                fault:\n                    type: boolean\n                    description: Is the error a server-side fault?\n                    example: false\n                id:\n                    type: string\n                    description: ID is a unique identifier for this particular occurrence of the problem.\n                    example: 123abc\n                message:\n                    type: string\n                    description: Message is a human-readable explanation specific to this occurrence of the problem.\n                    example: parameter 'p' must be an integer\n                name:\n                    type: string\n                    description: Name is the name of this class of errors.\n                    example: bad_request\n                temporary:\n                    type: boolean\n                    description: Is the error temporary?\n                    example: false\n                timeout:\n                    type: boolean\n                    description: Is the error a timeout?\n                    example: true\n            example:\n                id: 3F1FKVRR\n                message: Value of ID must be an integer\n                name: bad_request\n            required:\n                - name\n                - id\n                - message\n                - temporary\n                - timeout\n                - fault\n        LoginRequestBody:\n            type: object\n            properties:\n                email:\n                    type: string\n                    description: E-mail of user\n                    example: hy@gmail.com\n                    format: email\n                password:\n                    type: string\n                    description: Password\n                    example: xxxxxxxx\n                    minLength: 8\n                    maxLength: 20\n            example:\n                email: hy@gmail.com\n                password: xxxxxxxx\n            required:\n                - email\n                - password\n        Tech:\n            type: object\n            properties:\n                created_at:\n                    type: string\n                    description: Datetime\n                    example: \"2017-03-10T15:00:00Z\"\n                    format: date-time\n                tech_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n                tech_name:\n                    type: string\n                    description: Tech name\n                    example: Golang\n                    minLength: 1\n                    maxLength: 40\n                updated_at:\n                    type: string\n                    description: Datetime\n                    example: \"2017-03-10T15:00:00Z\"\n                    format: date-time\n            description: A tech information\n            example:\n                created_at: \"2017-03-10T15:00:00Z\"\n                tech_id: 10\n                tech_name: Golang\n                updated_at: \"2017-03-10T15:00:00Z\"\n        TechCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/Tech'\n            example:\n                - created_at: \"2017-03-10T15:00:00Z\"\n                  tech_id: 10\n                  tech_name: Golang\n                  updated_at: \"2017-03-10T15:00:00Z\"\n                - created_at: \"2017-03-10T15:00:00Z\"\n                  tech_id: 10\n                  tech_name: Golang\n                  updated_at: \"2017-03-10T15:00:00Z\"\n        TechResponseID:\n            type: object\n            properties:\n                tech_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n            description: A tech information (id view)\n            example:\n                tech_id: 10\n        TechResponseIDCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/TechResponseID'\n            description: TechListResponseBody is the result type for an array of TechResponse (id view)\n            example:\n                - tech_id: 10\n                - tech_id: 10\n        UpdateCompanyRequestBody:\n            type: object\n            properties:\n                address:\n                    type: string\n                    description: Company Address\n                    example: Shinagawa Tokyo\n                    minLength: 2\n                    maxLength: 80\n                company_name:\n                    type: string\n                    description: Company name\n                    example: Company\n                    minLength: 2\n                    maxLength: 40\n                country_id:\n                    type: integer\n                    description: Country ID\n                    example: 110\n                    minimum: 1\n                    maximum: 999\n            example:\n                address: Shinagawa Tokyo\n                company_name: Company\n                country_id: 110\n        UpdateUserRequestBody:\n            type: object\n            properties:\n                email:\n                    type: string\n                    description: E-mail of user\n                    example: hy@gmail.com\n                    format: email\n                password:\n                    type: string\n                    description: Password\n                    example: xxxxxxxx\n                    minLength: 8\n                    maxLength: 20\n                user_name:\n                    type: string\n                    description: User name\n                    example: Hiroki\n                    minLength: 2\n                    maxLength: 20\n            example:\n                email: hy@gmail.com\n                password: xxxxxxxx\n                user_name: Hiroki\n        User:\n            type: object\n            properties:\n                created_at:\n                    type: string\n                    description: Datetime\n                    example: \"2017-03-10T15:00:00Z\"\n                    format: date-time\n                email:\n                    type: string\n                    description: E-mail of user\n                    example: hy@gmail.com\n                    format: email\n                password:\n                    type: string\n                    description: Password\n                    example: xxxxxxxx\n                    minLength: 8\n                    maxLength: 20\n                updated_at:\n                    type: string\n                    description: Datetime\n                    example: \"2017-03-10T15:00:00Z\"\n                    format: date-time\n                user_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n                user_name:\n                    type: string\n                    description: User name\n                    example: Hiroki\n                    minLength: 2\n                    maxLength: 20\n            description: User information\n            example:\n                created_at: \"2017-03-10T15:00:00Z\"\n                email: hy@gmail.com\n                password: xxxxxxxx\n                updated_at: \"2017-03-10T15:00:00Z\"\n                user_id: 10\n                user_name: Hiroki\n        UserCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/User'\n            example:\n                - created_at: \"2017-03-10T15:00:00Z\"\n                  email: hy@gmail.com\n                  password: xxxxxxxx\n                  updated_at: \"2017-03-10T15:00:00Z\"\n                  user_id: 10\n                  user_name: Hiroki\n                - created_at: \"2017-03-10T15:00:00Z\"\n                  email: hy@gmail.com\n                  password: xxxxxxxx\n                  updated_at: \"2017-03-10T15:00:00Z\"\n                  user_id: 10\n                  user_name: Hiroki\n                - created_at: \"2017-03-10T15:00:00Z\"\n                  email: hy@gmail.com\n                  password: xxxxxxxx\n                  updated_at: \"2017-03-10T15:00:00Z\"\n                  user_id: 10\n                  user_name: Hiroki\n        UserResponseID:\n            type: object\n            properties:\n                user_id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n            description: User information (id view)\n            example:\n                user_id: 10\n        UserResponseIDCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/UserResponseID'\n            description: UserListResponseBody is the result type for an array of UserResponse (id view)\n            example:\n                - user_id: 10\n                - user_id: 10\n                - user_id: 10\n        Usertech:\n            type: object\n            properties:\n                id:\n                    type: integer\n                    description: Key ID\n                    example: 10\n                    minimum: 1\n                tech_name:\n                    type: string\n                    description: Tech name\n                    example: Golang\n                    minLength: 1\n                    maxLength: 40\n            description: A user information\n            example:\n                id: 10\n                tech_name: Golang\n        UsertechCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/Usertech'\n            example:\n                - id: 10\n                  tech_name: Golang\n                - id: 10\n                  tech_name: Golang\n        UsertechResponseTechName:\n            type: object\n            properties:\n                tech_name:\n                    type: string\n                    description: Tech name\n                    example: Golang\n                    minLength: 1\n                    maxLength: 40\n            description: A user information (techName view)\n            example:\n                tech_name: Golang\n        UsertechResponseTechNameCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/UsertechResponseTechName'\n            description: GetUserLikeTechResponseBody is the result type for an array of UsertechResponse (techName view)\n            example:\n                - tech_name: Golang\n                - tech_name: Golang\n                - tech_name: Golang\n                - tech_name: Golang\n        Userworkhistory:\n            type: object\n            properties:\n                company_name:\n                    type: string\n                    description: Company name\n                    example: Company\n                    minLength: 2\n                    maxLength: 40\n                country_name:\n                    type: string\n                    description: Country code\n                    example: nl\n                    minLength: 2\n                    maxLength: 2\n                description:\n                    type: string\n                    description: job description\n                    example: '[\"Developed resume site for job seeking.\"]'\n                    format: binary\n                techs:\n                    type: string\n                    description: used techs\n                    example: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                    format: binary\n                term:\n                    type: string\n                    description: worked period\n                    example: Jul 2017 - Aug 2017\n                    minLength: 10\n                    maxLength: 20\n                title:\n                    type: string\n                    description: Job Title\n                    example: Developer\n                    minLength: 2\n                    maxLength: 40\n            description: A user information\n            example:\n                company_name: Company\n                country_name: nl\n                description: '[\"Developed resume site for job seeking.\"]'\n                techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                term: Jul 2017 - Aug 2017\n                title: Developer\n        UserworkhistoryCollection:\n            type: array\n            items:\n                $ref: '#/components/schemas/Userworkhistory'\n            example:\n                - company_name: Company\n                  country_name: nl\n                  description: '[\"Developed resume site for job seeking.\"]'\n                  techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                  term: Jul 2017 - Aug 2017\n                  title: Developer\n                - company_name: Company\n                  country_name: nl\n                  description: '[\"Developed resume site for job seeking.\"]'\n                  techs: '[\"Golang with goa\", \"Riot.js\", \"Semantic UI\", \"MySQL\", \"Docker\", \"Travis-CI\"]'\n                  term: Jul 2017 - Aug 2017\n                  title: Developer\n    securitySchemes:\n        jwt_header_Authorization:\n            type: http\n            scheme: bearer\ntags:\n    - name: auth\n      description: The auth service performs login with JWT\n    - name: hy_company\n      description: The company service returns company data\n    - name: health\n      description: health check\n    - name: static\n      description: The static service returns static files\n    - name: hy_tech\n      description: The tech service returns tech data\n    - name: hy_user\n      description: The user service returns user data\n    - name: hy_usertech\n      description: The usertech service returns user's tech data\n    - name: hy_userWorkHistory\n      description: The user work history service returns user working history data\n",
			"canonicalURL": "/github.com/hiromaily/go-goa@c35fd69b90bafb3b747d349f7c0942e0efddbfb9/-/blob/internal/goa/service/resume/gen/http/openapi3.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/hiromaily/go-goa/blob/c35fd69b90bafb3b747d349f7c0942e0efddbfb9/internal/goa/service/resume/gen/http/openapi3.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/company\": get: operation \"hy_company#companyList\": security: at internal/goa/service/resume/gen/http/openapi3.yaml:107:23: list of scopes MUST be empty for \"type\" \"http\""
}