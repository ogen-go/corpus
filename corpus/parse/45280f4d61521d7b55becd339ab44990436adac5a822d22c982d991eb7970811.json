{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tetherless-world/whyis"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "docs/api.yaml",
			"byteSize": 29248,
			"content": "openapi: 3.0.2\ninfo: \n  title: Whyis\n  version: 0.1.0\npaths:\n\n  ###### Homepage views ######\n\n  /?view=labels:\n    get:\n      parameters:\n      - name: uris\n        in: query\n        description: \"A comma-delimited list of URIs.\"\n        schema:\n          type: string\n        required: true\n      responses:\n        '200':\n          description: \"Returns a label for each specified URI. The label returned will be taken from, in order of priority: `skos:prefLabel`, `rdfs:label`, `schema:name`, `dc:title`, `foaf:name`, or `skos:notation`. If no label is found, the URI itself will be used as the label.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                description: \"An object whose keys are the URIs passed in as a parameter, and whose corresponding values are the labels for those URIs.\"\n\n  /?view=latest:\n    get:\n      responses:\n        '200':\n          description: \"Lists up to 20 of the most recently-changed nanopublications, sorted from newest to oldest.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  description: \"Contains the URI of a recently-changed entity along with its timestamp.\"\n                  properties:\n                    about:\n                      type: string\n                      format: url\n                    updated:\n                      description: \"Timestamp, in ISO 8601 format, with six-digit precision on fractional seconds\"\n                      type: string\n                      format: timestamp\n\n  /?view=resolve:\n    get:\n      parameters:\n      - name: term\n        in: query\n        description: \"The string to search for\"\n        required: true\n        schema:\n          type: string\n      - name: type\n        in: query\n        description: \"A uri corresponding to an `rdf:type`. If present, only resources of the specified type will be returned.\"\n        required: false\n        schema:\n          type: string\n          format: url\n      - name: context\n        in: query\n        description: \"Additional plaintext to search for in the other attributes of the desired resource.\"\n        required: false\n        schema:\n          type: string\n      responses:\n        '200':\n          description: \"Allows searching for resources by a number of properties representing plaintext identifiers. This includes `dc:title`, `rdfs:label`, `skos:prefLabel`, `skos:altLabel`, `foaf:name`, and `dc:identifier`. Resources of type `sio:Term` are excluded.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  description: \"Describes an RDF resource that is somehow labeled with the desired term.\"\n                  properties:\n                    node:\n                      type: string\n                      format: url\n                      description: \"The URI of the resource that was found\"\n                    title:\n                      type: string\n                      description: \"The `dc:title` of the resource, if present\"\n                    label:\n                      type: string\n                      description: \"The `rdfs:label` of the resource, if present\"\n                    prefLabel:\n                      type: string\n                      description: \"The `skos:prefLabel` of the resource, if present\"\n                    altLabel:\n                      type: string\n                      description: \"The `skos:altLabel` of the resource, if present\"\n                    name:\n                      type: string\n                      description: \"The `foaf:name` of the resource, if present\"\n                    identifier:\n                      type: string\n                      description: \"The `dc:identifier` of the resource, if present\"\n                    score:\n                      type: number\n                      description: \"A representation of how closely this node matched the search term\"\n\n  ###### Resource views ######\n\n  /about/{uri}/?view=summary:\n    get:\n      description: \"Returns a list of summary properties for the given resource URI. By default, summary properties are taken from `skos:definition`, `schema:description`, `dc:abstract`, `dc:description`, `dc:summary`. `rdfs:comment`, `dcelements:description`, `obo:UAO_0000115`, `prov:value`, and `sio:hasValue`. Additional summary properties may be specified by the application configuration.\"\n      parameters:\n      - name: uri\n        in: path\n        description: \"Relative URI to be summarized\"\n        required: true\n        schema:\n          type: string\n          format: uri\n      responses:\n        '200':\n          description: \"A list of tuples (p,o) where p is taken from the list of summary properties and o is the corresponding value\"\n          content:\n            application/json: \n              schema:\n                type: array\n                items:\n                  type: array\n                  items:\n                    type: string\n                  description: \"The zeroth element of this sub-array is the URI of one of the summary properties and the first element is the string literal that is the value of that property for the resource in question.\"\n                \n          \n  /about/{uri}/?view=attributes:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"Relative URI to display attributes for\"\n        required: true\n        schema:\n          type: string\n          format: uri\n      responses:\n        '200':\n          description: \"Returns all properties of `uri` whose values are literals, as well as all sio attributes `uri` has. If units are specified for any attributes, the units are also returned. The following properties are excluded: `foaf:depiction`, `sioc:content`, `skos:definition`, `dc:abstract`, `dc:description`, `dc:summary`, `rdfs:comment`, `dcelements:description`, `\u003chttp://purl.obolibrary.org/obo/IAO_0000115\u003e`, `prov:value`, `sio:hasValue`, and `\u003chttp://dbpedia.org/ontology/abstract\u003e`.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  '@id':\n                    type: string\n                    format: uri\n                    description: \"The URI of this resource.\"\n                  attributes:\n                    description: \"A list of attributes of this URI\"\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        '@id':\n                          type: string\n                          format: uri\n                          description: \"The URI of this attribute\"\n                        label:\n                          type: string\n                          description: \"The label of this attribute\"\n                        values:\n                          type: array\n                          description: \"A list of values this attribute takes\"\n                          items:\n                            type: object\n                            properties:\n                              value:\n                                type: string\n                                description: \"One value this attribute takes\"\n                  description:\n                    description: \"A list of summary properties for the specified URI (see /?view=summary).\"\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        '@id':\n                          type: string\n                          format: url\n                          description: \"The URI of the summary predicate\"\n                        label:\n                          type: string\n                          description: \"A human-readable label for the summary predicate\"\n                        value:\n                          type: string\n                          description: \"The plaintext string that is the value of the summary property\"\n                  label:\n                    type: string\n                    description: \"The label of this resource, taken from the list of label properties.\" #TODO Explain the list of label properties somewhere\n                  type:\n                    description: \"A list of every `rdf:type` this resource is a member of.\"\n                    type: array\n                    items:\n                      type: object\n                      description: \"Represents one `rdf:type` this resource is a member of\"\n                      properties:\n                        '@id': \n                          type: string\n                          format: url\n                          description: \"The URI the `rdf:type`\"\n                        label:\n                          type: string\n                          description: \"The label of the `rdf:type`, taken from the list of label properties\"\n                        \n  /about/{uri}/?view=nanopublications:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"Relative URI to display nanopublications for\"\n        required: true\n        schema:\n          type: string\n          format: url\n      responses:\n        '200':\n          description: \"Lists nanopublications that are about (as `sio:isAbout`) the specified URI, or that have the specified URI as the subject of their assertion.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  description: \"Information about one nanopublication\"\n                  properties:\n                    np:\n                      type: string\n                      description: \"An identifier for this nanopublication\"\n                    created:\n                      type: string\n                      format: timestamp\n                      description: \"The date and time when this nanopublication was originally created\"\n                    updated:\n                      type: string\n                      format: timestamp\n                      description: \"The date and time when this nanopublication was most recently modified, or the creation date if it has not been modified\"\n                    quoted:\n                      type: string\n                      format: uri\n                      description: \"The URI of another nanopublication that this nanopublication's assertion was quoted from\"\n                    about:\n                      type: string\n                      format: uri\n                      description: \"The URI of the topic of this nanopublication, as defined by `sio:isAbout`\"\n                    contributor:\n                      type: string\n                      format: uri\n                      description: \"The URI of a `dc:contributor` of this nanopublication.\"\n                    contributor_label:\n                      type: string\n                      description: \"A human-readable label for the contributor.\"\n                    derived_from:\n                      type: string\n                      format: uri\n                      description: \"The URI of a resource this nanopublication was derived from (as `prov:wasDerivedFrom`).\"\n                    generation_type:\n                      type: string\n                      format: uri\n                      description: \"The type of the activity that generated this nanopublication, as defined by `prov:wasGeneratedBy`.\"\n                    content:\n                      type: string\n                      description: \"The `sioc:content` of this nanopublication.\"\n                    reply_of:\n                      type: string\n                      format: uri\n                      description: \"The URI of a resource this nanopulbication is a reply to (as `sioc:reply_of`).\"                  \n\n  /about/{uri}/?view=related:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The URI to view related nodes for\"\n        required: true\n        schema:\n          type: string\n          format: url\n      responses:\n        '200':\n          description: \"Returns a list of other nodes that are related to the given URI, along with their labels and the URI of the relation between them and the starting point. The relation `sio:hasPart` is excluded from this.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  description: \"A description of a related node\"\n                  properties:\n                    idf:\n                      type: number\n                      description: \"The inverse document frequency of this related node, as specified with `sio:InverseDocumentFrequency`, or 1 if unspecified.\"\n                    label:\n                      type: string\n                      description: \"The label of this related node\"\n                    node:\n                      type: string\n                      format: url\n                      description: \"The URI of this related node\"\n                    relation:\n                      type: string\n                      format: url\n                      description: \"The RDF property linking this related node and the specified URI\"\n                    tf:\n                      type: number\n                      description: \"The term frequency of this related node, defined as the maximum `sio:Frequency` of any term that is part of the queried URI (as `sio:hasPart`) and is a `prov:specializationOf` the related node, or 1 if no such term exists.\"\n                    tfidf:\n                      type: number\n                      description: \"The product of `tf` and `idf`\"\n                    type:\n                      type: string\n                      format: url\n                      description: \"The `rdf:type` of this related node\"\n  /about/{uri}/?view=outgoing:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The URI to find outgoing links for\"\n        required: true\n        schema:\n          type: string\n          format: url\n      responses:\n        '200':\n          description: \"Lists data about other URIs that are the object of RDF triples whose subject is the specified URI.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    articles:\n                      type: array\n                      description: \"A list of citations for this link\"\n                      items:\n                        type: string\n                        format: url\n                    from:\n                      type: array\n                      description: \"A list of nanopublications in which this link is specified.\"\n                      items:\n                        type: string\n                        format: url\n                    label:\n                      type: string\n                      description: \"The label of the named graph containing the link.\"\n                    link:\n                      type: string\n                      format: url\n                      description: \"The URI of the named graph containing the link.\"\n                    link_types:\n                      type: array\n                      description: \"A list of RDF properties linking from the source to the target.\"\n                      items:\n                        type: object\n                        properties:\n                          label:\n                            type: string\n                            description: \"The label of a property\"\n                          uri:\n                            type: string\n                            format: url\n                            description: \"The URI of a property\"\n                    probability:\n                      type: number\n                      description: \"Represents how likely this link is\"\n                    source:\n                      type: string\n                      format: url\n                      description: \"The subject of this link.\"\n                    target:\n                      type: string\n                      format: url\n                      description: \"The object of this link.\"\n                    target_label:\n                      type: string\n                      description: A plaintext label for the URI listed in the `target` field.\n                    target_types:\n                      type: array\n                      description: \"A list of RDF types of the URI listed in the `target` field.\"\n                      items:\n                        type: array\n                        items:\n                          type: string\n                          format: url\n                          description: \"The URI of one RDF type of the URI listed in the `target` field.\"\n                    zscore:\n                      type: number\n                      description: \"The inverse CDF of `probability`\"\n\n  /about/{uri}/?view=incoming:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The URI to find incoming links for\"\n        required: true\n        schema:\n          type: string\n          format: url\n      responses:\n        '200':\n          description: \"Lists data about other URIs that are the subject of RDF triples whose object is the specified URI.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    articles:\n                      type: array\n                      description: \"A list of citations for this link\"\n                      items:\n                        type: string\n                        format: url\n                    from:\n                      type: array\n                      description: \"A list of nanopublications in which this link is specified.\"\n                      items:\n                        type: string\n                        format: url\n                    label:\n                      type: string\n                      description: \"The label of the named graph containing the link.\"\n                    link:\n                      type: string\n                      format: url\n                      description: \"The URI of the named graph containing the link.\"\n                    link_types:\n                      type: array\n                      description: \"A list of RDF properties linking from the source to the target.\"\n                      items:\n                        type: object\n                        properties:\n                          label:\n                            type: string\n                            description: \"The label of a property\"\n                          uri:\n                            type: string\n                            format: url\n                            description: \"The URI of a property\"\n                    probability:\n                      type: number\n                      description: \"Represents how likely this link is\"\n                    source:\n                      type: string\n                      format: url\n                      description: \"The subject of this link.\"\n                    source_label:\n                      type: string\n                      description: A plaintext label for the URI listed in the `source` field.\n                    source_types:\n                      type: array\n                      description: \"A list of RDF types of the URI listed in the `source` field.\"\n                      items:\n                        type: array\n                        items:\n                          type: string\n                          format: url\n                          description: \"The URI of one RDF type of the URI listed in the `source` field.\"\n                    target:\n                      type: string\n                      format: url\n                      description: \"The object of this link.\"\n \n  /about/{uri}/?view=describe:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The relative URI of the resource to describe\"\n        required: true\n        schema:\n          type: string\n          format: uri\n      responses:\n        '200':\n          description: \"Returns all triples that have the given entity as their subject and that originated in the assertion of a nanopublication. If the objects of these triples have human-readable names (specified as `rdfs:label`, `skos:prefLabel`, `dc:title`, or `foaf:name`), these will be returned as well. If there are any `sio:hasAttribute` or `sio:hasPart` relationships specified for the given entity, then all triples whose subject is the attribute or part will be returned, as well as the `rdfs:label` of their objects.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  description: \"Represents all triples in the output with the same subject. One JSON object is returned for each subject; this has an `@id` field containing the URI of the subject, and a field for the URI of each predicate for which triples with this subject are being returned, which contains an array whose elements are single-field objects. If that predicate takes literal objects, the single field in the objects is @value and its value is the corresponding literal; if the predicate takes objects that are non-literals, the single field is @id and its value is the URI of the object.\"\n                  properties:\n                    '@id':\n                      type: string\n                      format: url\n                      description: \"The URI of the subject of the triples this JSON object represents.\"\n                    '@type':\n                      type: array\n                      items:\n                        type: string\n                        format: url\n                        description: \"The URI of an `rdf:type` of the subject. Only present in the object representing the URI being queried.\"\n\n\n  ###### Class views ######\n  \n  /?view=constraints:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The URI of a class to list constraints for.\"\n        required: true\n        schema:\n          type: string\n          format: uri\n      responses:\n        '200':\n          description: \"Lists OWL property restrictions on the specified class and its properties.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  description: \"Represents one range restriction on the queried class. This includes classes of type `owl:Restriction` that the queried class is related to via `rdfs:subClassOf`, `owl:equivalentClass`, and `owl:intersectionOf`, and also properties that have an `rdfs:domain` that is a superclass of the queried class and a specified `rdfs:range`\"\n                  properties:\n                    class:\n                      type: string\n                      format: url\n                      description: \"The URI of the queried class.\"\n                    property:\n                      type: string\n                      format: url\n                      description: \"The URL of the property that this restriction is on.\"\n                    propertyLabel:\n                      type: string\n                      description: \"A human-readable label for the property that this restriction is on\"\n                    propertyType:\n                      type: string\n                      format: url\n                      description: \"The `rdf:type` of this property; or else whichever of `owl:DatatypeProperty` or `owl:ObjectProperty` is most applicable\"\n                    range:\n                      type: string\n                      format: url\n                      description: \"The URI of the range of the constraint.\"\n                    rangeLabel:\n                      type: string\n                      description: \"A human-readable label for the range of this restriction.\"\n                    superClass:\n                      type: string\n                      format: url\n                      description: \"The URI of the class that is the domain of the constraint.\"\n                    extent:\n                      type: string\n                      format: url\n                      description: \"The URI of an OWL property describing the extent of this constraint. For example, whether a range constraint is `owl:someValuesFrom` or `owl:allValuesFrom`, or whether a cardinality constraint is `owl:minCardinality`, `owl:maxCardinality`, or `owl:exactCardinality`.\"\n                    cardinality:\n                      description: \"The object of a cardinality property specified for this restriction, if any.\"\n                    \n  /?view=facets:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The URI to query facets for\"\n        required: true\n        schema:\n          type: string\n          format: uri\n      responses:\n        '200':\n          description: \"Lists entities that are members of classes that are `prov:specializationOf` the class identified by the queried URI, and properties that are specified for them.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    class:\n                      type: string\n                      description: \"The URI of the queried class.\"\n                    property:\n                      type: string\n                      format: url\n                      description: \"The URI of an RDF property that has been specified for this entity\"\n                    propertyType:\n                      type: string\n                      format: url\n                      description: \"Whichever of `owl:DatatypeProperty` or `owl:ObjectPropety` is a more appropriate descriptor of this property\"\n                    inverse:\n                      type: string\n                      format: url                      \n                      description: \"The inverse of this property, as specified by `owl:inverseOf`.\"\n                    \n#  /?view=facet_values: # TODO\n#    get:\n#      description: \"#TODO\"\n#      parameters:\n#      - name: uri\n#        in: path\n#        description:\n#        required: true\n#        schema:\n#          type: string\n#          format: uri\n#      - name: constraints\n#        in: query\n#        description: \"A JSON list of sparql constraints\"\n#        required: false\n#        schema:\n#          type: list\n#          items:\n#            type: string\n#            description: \"A SPARQL constraint\"\n#      - name: variables\n#        in: query\n#        description: \"A JSON list of \"\n#        schema:\n#          type: list\n#          items:\n#            type: object\n#            properties:\n#              field:\n#              predicate:\n#              typeProperty:\n#              unit:\n#              unitPredicate:\n#              value:\n#              valuePredicate:\n  \n\n#  /?view=instance_data: # TODO\n#    get:\n#      description: \"#TODO\"\n#      parameters:\n#      - name: uri\n#        in: path\n#        description: \n#        required: true\n#        schema:\n#          type: string\n#          format: uri\n#      - name: constraints\n#        in: query\n#        description: \"A JSON list of sparql graph patterns that will restrict the query\"\n#        required: false\n#      - name: variables\n#        in: query\n#       description: \"# TODO\"\n#        required: true\n#        schema:\n#          type: list\n#          items:\n#            type: object\n#            properties:\n#              field:\n#              predicate:\n#              selectionType:\n#              specifier:\n#              typeProperty:\n#              unit:\n#              unitPredicate:\n#              valuePredicate:\n#      responses:\n#        '200':\n#          content:\n#            application/json:\n\n  ###### Nanopublication views ######\n  \n  /?view=describe:\n    get:\n      parameters:\n      - name: uri\n        in: path\n        description: \"The URI of the nanopublication to represent\"\n        required: true\n        schema:\n          type: string\n          format: uri\n      responses:\n        '200':\n          description: \"Returns a JSON-LD representation of this nanpublication.\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  description: \"An array of three elements, which correspond to a nanopublication, its assertion, and its publication info, each of which is expressed as a JSON-LD serialization of RDF data.\"\n       \n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /about/{uri}/?view=describe: get: parse path \"/about/{uri}/?view=describe\": path MUST NOT contain a query string"
}