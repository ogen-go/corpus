{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RepreZen/KaiZen-OpenAPI-Editor"
		},
		"file": {
			"name": "schemas.yaml",
			"size": 0,
			"path": "com.reprezen.swagedit.openapi3.tests/resources/spec_examples/spec/schemas.yaml",
			"byteSize": 3672,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Schema Object\n  version: \"1.0.0\"\n  \npaths:  {}\n          \ncomponents:\n  schemas:\n  \n    SimpleObject:\n      type: object\n      required:\n      - name\n      properties:\n        name:\n          type: string\n        address:\n          $ref: \"#/components/schemas/Pet\"\n        age:\n          type: integer\n          format: int32\n          minimum: 0    \n          \n    MapObject:\n      type: object\n      additionalProperties:\n        type: string\n        \n    StringToModelMappingObject:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/Dog\"\n        \n    ModelWithExamples:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      required:\n      - name\n      example:\n        name: Puma\n        id: 1        \n            \n  # Models with composition (https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#models-with-composition)\n    ErrorModel:\n      type: object\n      required:\n      - message\n      - code\n      properties:\n        message:\n          type: string\n        code:\n          type: integer\n          minimum: 100\n          maximum: 600\n    ExtendedErrorModel:\n      allOf:\n      - $ref: '#/components/schemas/ErrorModel'\n      - type: object\n        required:\n        - rootCause\n        properties:\n          rootCause:\n            type: string\n            \n    # Models with Polymorphism Support (https://github.com/OAI/OpenAPI-Specification/blob/OpenAPI.next/versions/3.0.md#models-with-polymorphism-support)    \n    Pet:\n      type: object\n      discriminator:\n        propertyName: petType\n      properties:\n        name:\n          type: string\n        petType:\n          type: string\n      required:\n      - name\n      - petType\n    Cat:  ## \"Cat\" will be used as the discriminator value\n      description: A representation of a cat\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      - type: object\n        properties:\n          huntingSkill:\n            type: string\n            description: The measured skill for hunting\n            enum:\n            - clueless\n            - lazy\n            - adventurous\n            - aggressive\n        required:\n        - huntingSkill\n    Dog:  ## \"Dog\" will be used as the discriminator value\n      description: A representation of a dog\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      - type: object\n        properties:\n          packSize:\n            type: integer\n            format: int32\n            description: the size of the pack the dog is from\n            default: 0\n            minimum: 0\n        required:\n        - packSize        \n        \n    # Discrinimator Object\n    MyResponseType:\n      oneOf:\n        - $ref: '#/components/schemas/Cat'\n        - $ref: '#/components/schemas/Dog'\n        - $ref: '#/components/schemas/Lizard'\n      discriminator:\n          propertyName: pet_type       \n                    \n    MyResponseType2:\n      oneOf:\n      - $ref: '#/components/schemas/Cat'\n      - $ref: '#/components/schemas/Dog'\n      - $ref: '#/components/schemas/Lizard'\n      - $ref: 'https://gigantic-server.com/schemas/Monster/schema.json'\n      discriminator:\n        propertyName: pet_type\n        mapping:\n          dog: '#/components/schemas/Dog'\n          monster: 'https://gigantic-server.com/schemas/Monster/schema.json'    \n          \n          \n    Lizard:\n      allOf:\n      - $ref: '#/components/schemas/Pet'\n      - type: object\n        # all other properties specific to a `Lizard`\n        properties:\n          lovesRocks:\n            type: boolean          \n                    ",
			"canonicalURL": "/github.com/RepreZen/KaiZen-OpenAPI-Editor@7c199211d432c4bbd8915f26791282546fa750e5/-/blob/com.reprezen.swagedit.openapi3.tests/resources/spec_examples/spec/schemas.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/RepreZen/KaiZen-OpenAPI-Editor/blob/7c199211d432c4bbd8915f26791282546fa750e5/com.reprezen.swagedit.openapi3.tests/resources/spec_examples/spec/schemas.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"MyResponseType2\": parse schema: oneOf: [3]: at 1:1762: parse schema: resolve \"https://gigantic-server.com/schemas/Monster/schema.json\": external \"https://gigantic-server.com/schemas/Monster/schema.json\": get: https: do: Get \"https://gigantic-server.com/schemas/Monster/schema.json\": host \"gigantic-server.com\" is not allowed"
}