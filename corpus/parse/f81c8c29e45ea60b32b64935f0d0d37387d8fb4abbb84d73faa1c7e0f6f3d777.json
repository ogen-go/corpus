{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/edge-api"
		},
		"file": {
			"name": "path.yaml",
			"size": 0,
			"path": "cmd/spec/path.yaml",
			"byteSize": 47304,
			"content": "info:\n  license:\n    name: MIT\n  title: edge-api\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /images:\n    post:\n      operationId: createImage\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.Image\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Image\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Composes an image on Image Builder\n    get:\n      operationId: listImages\n      parameters:\n        - name: sort_by\n          in: query\n          description: \"fields: created_at, distribution, name, status. To sort DESC use - before the fields.\"\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: \"field: filter by name\"\n          schema:\n            type: string\n        - name: status\n          in: query\n          description: \"field: filter by status\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 100\n                  data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/v1.Image\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Lists all images for an account.\n  /images/{imageId}/update:\n    post:\n      operationId: CreateImageUpdate\n      parameters:\n        - name: imageId\n          in: path\n          required: true\n          description: ImageID\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.Image\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Image\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Composes an Update for a image\n  /images/{imageId}:\n    get:\n      operationId: getImage\n      parameters:\n        - name: imageId\n          in: path\n          required: true\n          description: ImageID\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Image\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get an image by id.\n  /images/{imageId}/details:\n    get:\n      operationId: getImageDetail\n      parameters:\n        - name: imageId\n          in: path\n          required: true\n          description: ImageID\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.ImageDetail\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get an image by id.\n  /images/{ostreeCommitHash}/info:\n    get:\n      operationId: GetImageByOstree\n      parameters:\n        - name: ostreeCommitHash\n          in: path\n          required: true\n          description: ostreeCommitHash\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Image\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get an image by ostree hash.\n  /images/{imageId}/status:\n    get:\n      operationId: getImageStatus\n      parameters:\n        - name: imageId\n          in: path\n          required: true\n          description: ImageID\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  Status:\n                    type: string\n                    example: BUILDING\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get image status.\n      description: This method goes to image builder if the image is still building and updates the status if needed.\n  /images/{imageId}/repo:\n    get:\n      operationId: getImageRepo\n      parameters:\n        - name: imageId\n          in: path\n          required: true\n          description: ImageID\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Repo\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get Image OSTree repo.\n      description: Returns the information of the OSTree Repository of a particular Image.\n  /images/{imageId}/retry:\n    post:\n      operationId: retryImage\n      parameters:\n        - name: imageId\n          in: path\n          required: true\n          description: ImageID\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Image\"\n          description: Retry is being processed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Retries building an image from scratch\n  /updates:\n    post:\n      operationId: UpdateDevice\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.AddUpdate\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/v1.UpdateTransaction\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: There was an internal server error.\n      summary: Executes a device update.\n      description: Executes a device update.\n    get:\n      operationId: ListUpdates\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/v1.UpdateTransaction\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: There was an internal server error.\n      summary: Gets all device updates.\n      description: Gets all device updates.\n  /updates/{updateID}:\n    get:\n      operationId: GetUpdate\n      parameters:\n        - name: updateID\n          in: path\n          required: true\n          description: An unique ID to identify the update\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.UpdateTransaction\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: The update was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Gets a single requested update.\n      description: Gets a single requested update.\n  /updates/{updateID}/update-playbook.yml:\n    get:\n      operationId: GetUpdatePlaybook\n      parameters:\n        - name: updateID\n          in: path\n          required: true\n          description: An unique ID to identify the update the playbook belongs to\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                type: string\n                example: ansible playbook for an update\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: The update was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n  /updates/device/{DeviceUUID}:\n    get:\n      operationId: GetDeviceByUUID\n      parameters:\n        - name: DeviceUUID\n          in: path\n          required: true\n          description: DeviceUUID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceDetails\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n      summary: Return list of available updates for a device.\n      description: Return list of available updates for a device.\n  /updates/device/{DeviceUUID}/updates:\n    get:\n      operationId: GetUpdateAvailableForDevice\n      parameters:\n        - name: DeviceUUID\n          in: path\n          required: true\n          description: DeviceUUID\n          schema:\n            type: string\n        - name: latest\n          in: query\n          description: \"query the latest or all updates\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    Image:\n                      $ref: \"#/components/schemas/v1.Image\"\n                    PackageDiff:\n                      $ref: \"#/components/schemas/v1.PackageDiff\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Return list of available updates for a device.\n      description: Return list of available updates for a device.\n  /updates/device/{DeviceUUID}/image:\n    get:\n      operationId: GetImageInfo\n      parameters:\n        - name: DeviceUUID\n          in: path\n          required: true\n          description: DeviceUUID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  Image:\n                    $ref: \"#/components/schemas/v1.Image\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Return image running on device.\n      description: Return image running on device.\n  /updates/validate:\n    post:\n      operationId: PostValidateUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: \"#/components/schemas/v1.Image\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.ValidateUpdateResponse\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Validate if the images selection could be updated.\n      description: Validate if the images selection could be updated.\n  /devices:\n    get:\n      operationId: getDevices\n      parameters:\n        - name: per_page\n          in: query\n          description: \"field: maximum devices per page\"\n          schema:\n            type: integer\n        - name: page\n          in: query\n          description: \"field: which page to query from\"\n          schema:\n            type: integer\n        - name: order_by\n          in: query\n          description: \"field: choose which filter to order\"\n          schema:\n            type: string\n        - name: order_how\n          in: query\n          description: \"field: choose to order asc or desc\"\n          schema:\n            type: string\n        - name: hostname_or_id\n          in: query\n          description: \"field: filter by hostname_or_id\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceDetailsList\"\n          description: OK\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n  /devices/devicesview:\n    get:\n      operationId: getDevicesView\n      parameters:\n        - name: sort_by\n          in: query\n          description: \"fields: name, uuid, update_available, image_id. To sort DESC use - before the fields.\"\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: \"field: filter by name\"\n          schema:\n            type: string\n        - name: update_available\n          in: query\n          description: \"field: filter by update_available\"\n          schema:\n            type: boolean\n        - name: limit\n          in: query\n          description: \"field: return number of devices until limit is reached. Default is 100.\"\n          schema:\n            type: integer\n        - name: offset\n          in: query\n          description: \"field: return number of devices begining at the offset.\"\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n               schema:\n                properties:\n                  count:\n                    example: 100\n                    type: integer\n                  data:\n                    $ref: '#/components/schemas/v1.DeviceViewList'\n                type: object\n          description: OK\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n  /devices/{DeviceUUID}:\n    get:\n      operationId: getDevice\n      parameters:\n        - name: DeviceUUID\n          in: path\n          required: true\n          description: DeviceUUID\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceDetails\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: The device was not found.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get a device by UUID.\n  /image-sets:\n    get:\n      operationId: ListAllImageSets\n      parameters:\n        - name: sort_by\n          in: query\n          description: \"Define sort fields: Created_at, Name, Status. To sort DESC use -\"\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: \"field: filter by name\"\n          schema:\n            type: string\n        - name: status\n          in: query\n          description: \"field: filter by status\"\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: \"field: return number of image-sets until limit is reached. Default is 100.\"\n          schema:\n            type: integer\n        - name: offset\n          in: query\n          description: \"field: return number of image-sets begining at the offset.\"\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  Count:\n                    type: integer\n                    example: 100\n                  Data:\n                    type: array\n                    items:\n                      $ref: \"#/components/schemas/v1.ImageSetInstallerURL\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: The Image Set was not found.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Return the list of image sets.\n  /image-sets/{ImageSetId}:\n    get:\n      operationId: GetImageSetsByID\n      parameters:\n        - name: ImageSetId\n          in: path\n          required: true\n          description: ImageSetId\n          schema:\n            type: integer\n        - name: sort_by\n          in: query\n          description: \"Define sort fields: Created_at, Name, Status. To sort DESC use -\"\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: \"field: filter by name\"\n          schema:\n            type: string\n        - name: status\n          in: query\n          description: \"field: filter by status\"\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: \"field: return number of images until limit is reached. Default is 100.\"\n          schema:\n            type: integer\n        - name: offset\n          in: query\n          description: \"field: return number of images begining at the offset.\"\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  Count:\n                    type: integer\n                    example: 100\n                  Data:\n                    $ref: \"#/components/schemas/v1.ImageSetImagePackages\"\n          description: OK\n  /images/checkImageName:\n    post:\n      operationId: checkImageName\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.Image\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.CheckImageResponse\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Check if image name is in use for current account\n  /thirdpartyrepo:\n    post:\n      operationId: CreateThirdPartyRepo\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1.ThirdPartyRepo'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.ThirdPartyRepo'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Create Third Party Repository for an account.\n    get:\n      operationId: GetAllThirdPartyRepo\n      parameters:\n        - name: sort_by\n          in: query\n          description: \"fields: created_at, name, updated_at. To sort DESC use - before the fields.\"\n          schema:\n            type: string\n        - name: name\n          in: query\n          description: \"field: filter by name\"\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 100\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/v1.ThirdPartyRepo'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Lists all Third Party Repository for an account.\n  /thirdpartyrepo/{ID}:\n    get:\n      operationId: GetThirdPartyRepoByID\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: An unique existing third party repository id.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.ThirdPartyRepo'\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: third party repository was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Get third party repository by id.\n    put:\n      operationId: CreateThirdPartyRepoUpdate\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: An unique existing third party repository id.\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.ThirdPartyRepo\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.ThirdPartyRepo\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Creates an Update for third party repository\n    delete:\n      operationId: DeleteThirdPartyRepoByID\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: An unique existing third party repository id.\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.ThirdPartyRepo\"\n          description: OK\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: third party repository was not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Delete third party repository using id.\n  /fdo/ownership_voucher:\n    post:\n      operationId: CreateOwnershipVouchers\n      requestBody:\n        description: CBOR encoding of the ownership vouchers.\n        required: true\n        content:\n          application/cbor:\n            schema:\n              type: object\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  guid:\n                    type: string\n                    description: FDO GUID for the device.\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Upload ownership vouchers.\n  /fdo/ownership_voucher/delete:\n    post:\n      operationId: DeleteOwnershipVouchers\n      requestBody:\n        description: list of GUIDs for which the Ownership Vouchers should get deleted.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Delete ownership vouchers.\n  /fdo/ownership_voucher/parse:\n    post:\n      operationId: ParseOwnershipVouchers\n      requestBody:\n        description: CBOR encoding of the ownership vouchers.\n        required: true\n        content:\n          application/cbor:\n            schema:\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.OwnershipVoucherData'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Parse ownership vouchers.\n  /fdo/ownership_voucher/connect:\n    post:\n      operationId: ConnectDevices\n      requestBody:\n        description: list of GUIDs for which the Ownership Vouchers should get deleted.\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Connect devices by their GUIDs.\n  /device-groups:\n     get:\n       operationId: GetAllDeviceGroups\n       parameters:\n         - name: sort_by\n           in: query\n           description: \"fields: created_at, name, updated_at. To sort DESC use - before the fields.\"\n           schema:\n             type: string\n         - name: name\n           in: query\n           description: \"field: filter by name\"\n           schema:\n             type: string\n       responses:\n         \"200\":\n           content:\n             application/json:\n               schema:\n                 type: object\n                 properties:\n                   count:\n                     type: integer\n                     example: 100\n                   data:\n                     type: array\n                     items:\n                       $ref: '#/components/schemas/v1.DeviceGroupListDetail'\n           description: OK\n         \"400\":\n           content:\n             application/json:\n               schema:\n                 $ref: '#/components/schemas/v1.BadRequest'\n           description: The request sent couldn't be processed.\n         \"500\":\n           content:\n             application/json:\n               schema:\n                 $ref: '#/components/schemas/v1.InternalServerError'\n           description: There was an internal server error.\n     post:\n      operationId: CreateDeviceGroup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/v1.DeviceGroup'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.DeviceGroup'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.BadRequest'\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/v1.InternalServerError'\n          description: There was an internal server error.\n      summary: Create Device Group for an account.\n  /device-groups/{ID}:\n    get:\n      operationId: GetDeviceGroupByID\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceGroup\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get an device group by id.\n    delete:\n      operationId: DeleteDeviceGroupByID\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceGroup\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: device group not found or devices not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Delete device group by id.\n    put:\n      operationId: UpdateDeviceGroup\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: An unique existing device group id.\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.DeviceGroup\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceGroup\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Creates an Update for device group\n  /device-groups/checkName/{name}:\n    get:\n      operationId: CheckGroupName\n      parameters:\n        - name: name\n          in: path\n          required: true\n          description: Group name\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      isValid: \n                        type: boolean\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Checks to see if a group name exists for an account.\n  /device-groups/{ID}/details:\n    get:\n      operationId: GetDeviceGroupDetailsByID\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceGroupDetails\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get an device group by id.\n  /device-groups/{ID}/view:\n    get:\n      operationId: GetDeviceGroupDetailsByIDView\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.DeviceGroupDetailsView\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Get an device group by id.    \n  /device-groups/{ID}/devices:\n    post:\n      operationId: AddDeviceGroupDevices\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.DeviceGroup\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/v1.Device\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: device group not found or devices not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Add devices to device group.\n    delete:\n      operationId: DeleteDeviceGroupDevices\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/v1.DeviceGroup\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/v1.Device\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: device group not found or devices not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Remove devices from device-group.\n  /device-groups/{ID}/devices/{DEVICE_ID}:\n    delete:\n      operationId: DeleteDeviceGroupDevice\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n        - name: DEVICE_ID\n          in: path\n          required: true\n          description: Device Id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.Device\"\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: device group not found or device not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Remove device from device-group.\n  /device-groups/{ID}/updateDevices:\n    post:\n      operationId: UpdateAllDevicesFromGroup\n      parameters:\n        - name: ID\n          in: path\n          required: true\n          description: Device Group Id\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/v1.UpdateTransaction'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.BadRequest\"\n          description: The request sent couldn't be processed.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.NotFound\"\n          description: devices not found.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/v1.InternalServerError\"\n          description: There was an internal server error.\n      summary: Update devices from group.  \n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /image-sets/{ImageSetId}: get: operation \"GetImageSetsByID\": responses: 200: content: application/json: schema: parse schema: property \"Data\": parse schema: resolve \"#/components/schemas/v1.ImageSetImagePackages\": find schema: resolve \"#/components/schemas/v1.ImageSetImagePackages\": can't find value for \"components/schemas/v1.ImageSetImagePackages\""
}