{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/alekshura/SourceApi"
		},
		"file": {
			"name": "Store.yaml",
			"size": 0,
			"path": "Compentio.SourceApi/Compentio.SourceApi.WebExample/OpenApi/Store.yaml",
			"byteSize": 4106,
			"content": "openapi: 3.0.1\ninfo:\n  title: Swagger Petstore\n  description: 'This is a sample server Petstore server.  You can find out more about     Swagger\n    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For\n    this sample, you can use the api key `special-key` to test the authorization     filters.'\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n- url: https://petstore.swagger.io/api/v1\n- url: http://petstore.swagger.io/api/v1\npaths:\n  /store/inventory:\n    get:\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n      security:\n      - api_key: []\n  /store/order:\n    post:\n      summary: Place an order for a pet\n      operationId: placeOrder\n      requestBody:\n        description: order placed for purchasing the pet\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/Order'\n        required: true\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Order'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n        400:\n          description: Invalid Order\n          content: {}\n      x-codegen-request-body-name: body\n  /store/order/{orderId}:\n    get:\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value \u003e= 1 and \u003c= 10.  Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n      - name: orderId\n        in: path\n        description: ID of pet that needs to be fetched\n        required: true\n        schema:\n          maximum: 10.0\n          minimum: 1.0\n          type: integer\n          format: int64\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: '#/components/schemas/Order'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Order'\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Order not found\n          content: {}\n    delete:\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value.         Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n      - name: orderId\n        in: path\n        description: ID of the order that needs to be deleted\n        required: true\n        schema:\n          minimum: 1.0\n          type: integer\n          format: int64\n      responses:\n        400:\n          description: Invalid ID supplied\n          content: {}\n        404:\n          description: Order not found\n          content: {}\ncomponents:\n  schemas:\n    Order:\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n          - placed\n          - approved\n          - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n",
			"canonicalURL": "/github.com/alekshura/SourceApi@afc45debc6ec98566778c34230adb33e4a34f359/-/blob/Compentio.SourceApi/Compentio.SourceApi.WebExample/OpenApi/Store.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/alekshura/SourceApi/blob/afc45debc6ec98566778c34230adb33e4a34f359/Compentio.SourceApi/Compentio.SourceApi.WebExample/OpenApi/Store.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/store/inventory\": get: operation \"getInventory\": security: at Compentio.SourceApi/Compentio.SourceApi.WebExample/OpenApi/Store.yaml:37:9: unknown security scheme \"api_key\""
}