{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/marvin-ai/marvin-public-engines"
		},
		"file": {
			"name": "docs.yaml",
			"size": 0,
			"path": "product-classifier-engine/docs.yaml",
			"byteSize": 17463,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 0.0.1\n  title: marvin_product_classifier_engine API Doc\n  contact:\n      name: mantainer Marvin AI Community\n      email: marvin-ai@googlegroups.com\n      url: https://github.com/marvin-ai\n  license:\n    name: Apache License 2.0\nservers:\n  - url: http://localhost:8000\n  - url: http://0.0.0.0:8000\ntags:\n  - name: Docker\n    description: For Docker users, please use \"make docker-build\" and \"make docker-run\" commands in your engine virtualenv to start the server\n  - name: Acquisitor\n    description: Setup the initial_dataset with all cleaned data necessary to build your dataset in the next action\n  - name: Tpreparator\n    description: Setup the dataset with the transformed data that is compatible with the algorithm used to build the model in the next action\n  - name: Trainer\n    description: Setup the model with the result of the algorithm used to training\n  - name: Evaluator\n    description: Setup the metrics with the result of the algorithms used to test the model\n  - name: Predictor\n    description: Return the predicted value in a json parsable object format\n  - name: Feedback\n    description: Receive feedback message, user can manipulate this message for any use\n  - name: Pipeline\n    description: Perform all batch actions in your right order\npaths:\n  /acquisitor/health:\n    get:\n      summary: Get acquisitor's service health\n      operationId: getHealth\n      tags:\n        - Acquisitor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /acquisitor/status:\n    get:\n      summary: Get acquisitor's service status\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: Use an empty json as body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: getStatus\n      tags:\n        - Acquisitor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /acquisitor:\n    post:\n      summary: Run acquisitor\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: acquisit\n      tags:\n        - Acquisitor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /tpreparator/health:\n    get:\n      summary: Get trainer preparator's service health\n      operationId: getHealth\n      tags:\n        - Tpreparator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /tpreparator/status:\n    get:\n      summary: Get trainer preparator's service status\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: Use an empty json as body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: getStatus\n      tags:\n        - Tpreparator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /tpreparator/reload?protocol=:\n    put:\n      summary: Reload artifact for trainer preparator\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: tpreparator\n      tags:\n        - Tpreparator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /tpreparator:\n    post:\n      summary: Run trainer preparator\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: tpreparator\n      tags:\n        - Tpreparator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /trainer/health:\n    get:\n      summary: Get trainer's service health\n      operationId: getHealth\n      tags:\n        - Trainer\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /trainer/status:\n    get:\n      summary: Get trainer's service status\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: Use an empty json as body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: getStatus\n      tags:\n        - Trainer\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /trainer/reload?protocol=:\n    put:\n      summary: Reload artifact for trainer\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: trainer\n      tags:\n        - Trainer\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /trainer:\n    post:\n      summary: Run trainer\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: trainer\n      tags:\n        - Trainer\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /evaluator/health:\n    get:\n      summary: Get evaluator's service health\n      operationId: getHealth\n      tags:\n        - Evaluator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /evaluator/status:\n    get:\n      summary: Get evaluator's service status\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: Use an empty json as body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: getStatus\n      tags:\n        - Evaluator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /evaluator/reload?protocol=:\n    put:\n      summary: Reload artifact for evaluator\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: evaluator\n      tags:\n        - Evaluator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /evaluator:\n    post:\n      summary: Run evaluator\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: evaluator\n      tags:\n        - Evaluator\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /predictor/health:\n    get:\n      summary: Get predictor's service health\n      operationId: getHealth\n      tags:\n        - Predictor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /predictor/status:\n    get:\n      summary: Get predictor's service status\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: Use an empty json as body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: getStatus\n      tags:\n        - Predictor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /predictor/reload?protocol=:\n    put:\n      summary: Reload artifact for predictor\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: reloadArtifact\n      tags:\n        - Predictor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /predictor:\n    post:\n      summary: Run predictor\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: predict\n      tags:\n        - Predictor\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /feedback/health:\n    get:\n      summary: Get feedback's service health\n      operationId: getHealth\n      tags:\n        - Feedback\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /feedback/status:\n    get:\n      summary: Get feedback's service status\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: Use an empty json as body\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: getStatus\n      tags:\n        - Feedback\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /feedback/reload?protocol=:\n    put:\n      summary: Reload artifact for feedback\n      parameters: \n        - in: query\n          name: protocol\n          schema:\n            type: string\n          required: true\n          description: The Protocol value generated from last action\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: reloadArtifact\n      tags:\n        - Feedback\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /feedback:\n    post:\n      summary: Run feedback\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: feedback\n      tags:\n        - Feedback\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable\n  /pipeline:\n    post:\n      summary: Do all batch actions (from Acquisitor to Evaluator)\n      requestBody:\n        description: The default value for body is an empty json object\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n      operationId: pipeline\n      tags:\n        - Pipeline\n      responses:\n        '200':\n          description: Result Message / Success\n        '400':\n          description: Bad Request / Illegal Argument / Missing Parameters\n        '500':\n          description: Internal Server Error / Timeout\n        '503':\n          description: Service Unavailable",
			"canonicalURL": "/github.com/marvin-ai/marvin-public-engines@d0558edb1c7a00da5733c54d9746be1a44b81783/-/blob/product-classifier-engine/docs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/marvin-ai/marvin-public-engines/blob/d0558edb1c7a00da5733c54d9746be1a44b81783/product-classifier-engine/docs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/evaluator/health\": at 1:2295: get: duplicate operationId: \"getHealth\""
}