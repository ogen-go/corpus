{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/wso2/docs-is"
		},
		"file": {
			"name": "oidc-scope-management.yaml",
			"size": 0,
			"path": "en/docs/apis/restapis/oidc-scope-management.yaml",
			"byteSize": 7468,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n    This is the RESTful API for OIDC Scope management related operations in WSO2 Identity Server.\n  version: \"1.0.0-oas3\"\n  title:  WSO2 Identity Server - OIDC Scope Management API\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: \"WSO2 Identity Server\"\n    url: \"https://wso2.com/identity-and-access-management\"\n    email: \"architecture@wso2.org\"\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\nservers:\n  - url: 'https://localhost:9443/t/{tenant-domain}/api/server/v1'\n    variables:\n      tenant-domain:\n        enum:\n          - carbon.super\n        default: carbon.super\n\n# The base path of the OIDC scope management API.\n# If the tenant domain is carbon.super then basepath can be /api/server/v1\n# basePath: /t/{tenant-domain}/api/server/v1/\n\npaths:\n  /oidc/scopes:\n    get:\n      tags:\n        - OIDC Scope Endpoint\n      summary: Retrieves the list of scopes\n      operationId: getScopes\n      description: This REST API can be used to get details of the available scopes.\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Scope'\n        400:\n          $ref: '#/components/responses/BadRequest'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/ServerError'\n    post:\n      tags:\n        - OIDC Scope Endpoint\n      summary: Add a new OIDC Scope\n      operationId: addScope\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Scope'\n      responses:\n        201:\n          $ref: '#/components/responses/Created'\n        400:\n          $ref: '#/components/responses/InvalidInput'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        409:\n          $ref: '#/components/responses/Conflict'\n        500:\n          $ref: '#/components/responses/ServerError'\n  /oidc/scopes/{id}:\n    get:\n      tags:\n        - OIDC Scope Endpoint\n      summary: Get a scope\n      operationId: getScope\n      description: This REST API can be used to get the scope.\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - name: id\n          in: path\n          description: scope name as the id\n          required: true\n          schema:\n            type: string\n            example: scope1\n      responses:\n        200:\n          description: OK.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Scope'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/ServerError'\n    put:\n      tags:\n        - OIDC Scope Endpoint\n      summary: Update an OIDC Scope\n      operationId: updateScope\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - name: id\n          in: path\n          description: scope name as the ID\n          required: true\n          schema:\n            type: string\n            example: scope1\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScopeUpdateRequest'\n      responses:\n        200:\n          description: OK.\n        400:\n          $ref: '#/components/responses/InvalidInput'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        404:\n          $ref: '#/components/responses/NotFound'\n        500:\n          $ref: '#/components/responses/ServerError'\n    delete:\n      tags:\n        - OIDC Scope Endpoint\n      summary: Delete an OIDC Scope\n      operationId: deleteScope\n      security:\n        - BasicAuth: []\n        - OAuth2: []\n      parameters:\n        - name: id\n          in: path\n          description: scope name as the ID\n          required: true\n          schema:\n            type: string\n            example: scope1\n      responses:\n        204:\n          $ref: '#/components/responses/NoContent'\n        401:\n          $ref: '#/components/responses/Unauthorized'\n        403:\n          $ref: '#/components/responses/Forbidden'\n        500:\n          $ref: '#/components/responses/ServerError'\n\ncomponents:\n  responses:\n    NoContent:\n      description: No Content.\n    BadRequest:\n      description: Bad Request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Unauthorized:\n      description: Unauthorized.\n    Forbidden:\n      description: Resource Forbidden.\n    NotFound:\n      description: Resource Not Found.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    ServerError:\n      description: Internal Server Error.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    InvalidInput:\n      description: Invalid input request.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Conflict:\n      description: Scope already Exists.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n    Created:\n      description: Created\n      headers:\n        Set-Cookie:\n          description: Location of the newly created scope\n          schema:\n            type: string\n            format: uri\n            example: https://apis.is.com/t/wso2.com/api/server/v1/oidc/scopes/Scope1\n  schemas:\n    Scope:\n      type: object\n      required:\n        - name\n        - displayName\n        - claims\n      properties:\n        name:\n          type: string\n          example: Scope1\n        displayName:\n          type: string\n          example: scope1\n        description:\n          type: string\n          example: \"Sample scope one\"\n        claims:\n          type: array\n          items:\n            type: string\n          example: [birthdate,gender]\n    ScopeUpdateRequest:\n      type: object\n      required:\n        - displayName\n        - claims\n      properties:\n        displayName:\n          type: string\n          example: scopeOne\n        description:\n          type: string\n          example: \"Sample updated scope one\"\n        claims:\n          type: array\n          items:\n            type: string\n          example: [birthdate,gender,age]\n    ErrorResponse:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: string\n          example: 'AAA-00000'\n        message:\n          type: string\n          example: 'Some Error Message'\n        description:\n          type: string\n          example: 'Some Error Description'\n        traceId:\n          type: string\n          example: 'e0fbcfeb-3617-43c4-8dd0-7b7d38e13047'"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /oidc/scopes: get: operation \"getScopes\": security: unknown security schema \"BasicAuth\""
}