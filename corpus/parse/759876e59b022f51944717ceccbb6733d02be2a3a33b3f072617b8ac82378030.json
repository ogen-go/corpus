{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/KITrobotics/rll_sdk"
		},
		"file": {
			"name": "openapi3-future.yaml",
			"size": 0,
			"path": "docs/api/openapi3-future.yaml",
			"byteSize": 12846,
			"content": "openapi: 3.0.0\nx-navigateMethodsByName: true\ninfo:\n  version: 0.1.0\n  title: Robot Learning Lab API\nservers: \n  - url: https://rll-api.ipr.kit.edu\ntags:\n- name: jobs\n  description: Management of Jobs\n- name: system\n  description: Retrieve system information\npaths:\n  /jobs:\n    get:\n      tags:\n      - jobs\n      summary: Get status of job or data for job\n      description: ''\n      operationId: getJobs\n      parameters:\n      - in: query\n        name: op\n        description: What operation should be performed, either retrieving status information about job or fetching data of a finished job\n        required: true\n        schema:\n          type: string\n          enum:\n          - status\n          - data_urls\n      - in: query\n        name: job\n        description: Job Id to perform operation on\n        required: true\n        schema:\n          type: string\n        example: 5b391e2af7971f5ba880525b\n      responses:\n        '200':\n          description: Response of the call\n          content:\n            application/json:\n              schema:\n                type: object\n                oneOf:\n                  - $ref: '#/components/schemas/JobStatusSuccess'\n                  - $ref: '#/components/schemas/JobDataSuccess'\n                  - $ref: '#/components/schemas/JobDataError'\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n    post:\n      tags:\n      - jobs\n      summary: Submit a job\n      description: Central submission of jobs using a single secret. It would also be possible to support OpenID and OAuth to directly authenticate users.\n      operationId: submitJob\n      parameters:\n      - in: query \n        name: op\n        description: Operation to perform, either submitting a Git repo URL with a Git tag or a Tar archive with the code\n        required: true\n        schema:\n          type: string\n          enum:\n          - submit_git\n          - submit_tar\n      - in: query\n        name: username\n        description: Author of the submitted code\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: secret\n        description: Password for submission access\n        required: true\n        schema:\n          type: string\n          format: password\n      - in: query\n        name: project\n        description: Name of the project the submission is for\n        required: true\n        schema:\n          type: string\n          enum:\n          - rll_planning_project\n      - in: query\n        name: git_url\n        description: Url to git repository\n        schema:\n          type: string\n      - in: query\n        name: git_tag\n        description: Tag to checkout in the submitted Git repo\n        schema:\n          type: string\n      - in: query\n        name: tar_url\n        description: URL to Tar archive with code\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Response for submission\n          content:\n            application/json:\n              schema:\n                type: object\n                oneOf:\n                - $ref: '#/components/schemas/JobSubmissionSuccess'\n                - $ref: '#/components/schemas/JobSubmissionError'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '500':\n          description: Internal Server Error\n  /system/state:\n    get:\n      tags:\n      - system\n      summary: Get general information about the lab\n      description: ''\n      parameters:\n      - in: query\n        name: op\n        description: What operation should be performed\n        required: true\n        schema:\n          type: string\n          enum:\n          - status\n      responses:\n        '200':\n          description: Response for system state query\n          content:\n            application/json:\n              schema:\n                type: string\n                enum:\n                - online\n                - offline\n                - down for maintenance\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n  /system/job_stats:\n    get:\n      tags:\n      - system\n      summary: Get status of job or data for job\n      description: ''\n      operationId: getJobs\n      parameters:\n      - in: query\n        name: job_info_type\n        description: What operation should be performed, either retrieving status information about job or fetching data of a finished job\n        required: true\n        schema:\n          type: string\n          enum:\n          - status\n          - result\n      - in: query\n        name: project\n        description: Project for which job stats should be generated\n        required: true\n        schema:\n          type: string\n      responses:\n        '200':\n          description: Response of the call\n          content:\n            application/json:\n              schema:\n                  type: object\n                  oneOf:\n                  - $ref: '#/components/schemas/JobStatusStatsSuccess'\n                  - $ref: '#/components/schemas/JobResultStatsSuccess'\n        '400':\n          description: Bad Request\n        '500':\n          description: Internal Server Error\n        \ncomponents:\n  schemas:\n    JobStatusSuccess:\n      title: Successful job status query\n      required:\n      - status\n      - job_status\n      properties:\n        status:\n          type: string\n          description: Status of query\n          enum:\n          - success\n        job_status:\n          type: string\n          description: Status of job\n          enum:\n          - submitted\n          - processing sim started\n          - processing real started\n          - downloading code\n          - building\n          - running sim\n          - waiting for real\n          - running real\n          - finished\n        job_result:\n          type: string\n          description: Result if the job has finished\n          enum:\n          - success sim\n          - success real\n          - failure sim\n          - failure real\n          - internal error\n          - unknown\n          - fetching project code failed\n          - launching project failed\n          - building project failed\n        job_data:\n          type: array\n          items:\n            type: object\n            properties:\n              description:\n                type: string\n                example: duration\n              value:\n                type: number\n        position:\n          type: integer\n          description: Position in queue if status is submitted or waiting\n        cam_url:\n          type: string\n          description: URL to live stream of running job on robot\n    JobDataSuccess:\n      title: Successfull query for job data\n      required:\n      - status\n      - build_log_url\n      properties:\n        status:\n          type: string\n          description: Status of query\n          enum:\n          - success\n        build_log_url:\n          type: string\n          description: URL to build log file\n        video_url:\n          type: string\n          description: URL to video file of job\n        sim_run_client_log_url:\n          type: string\n          description: URL to client log file for simulation run\n        sim_run_iface_log_url:\n          type: string\n          description: URL to interface log file for simulation run\n        real_run_client_log_url:\n          type: string\n          description: URL to client log file for the run on the real robot\n        real_run_iface_log_url:\n          type: string\n          description: URL to interface log file for the run on the real robot\n    JobDataError:\n      title: Failed query for job data\n      required:\n      - status\n      - error\n      properties:\n        status:\n          type: string\n          description: Status of query\n          enum:\n          - error\n        error:\n          type: string\n          description: Error message\n          enum:\n          - No finished job with this ID\n    JobSubmissionSuccess:\n      title: Successful submission\n      required:\n      - status\n      - job_id\n      properties:\n        status:\n          type: string\n          description: Status of submission\n          enum:\n          - success\n        job_id:\n          type: string\n          description: Job id of submitted job\n          example: 5ab955b109b90e5707d2ccbe\n    JobSubmissionError:\n      title: Failed submission\n      required:\n      - status\n      - error\n      properties:\n        status:\n          type: string\n          description: Status of submission\n          enum:\n          - error\n        error:\n          type: string\n          description: Error message\n          enum:\n          - User has a job in the queue\n          - Git tag not found\n          - Git URL invalid\n          - Username invalid\n          - Queue at max size\n    JobStatusStatsSuccess:\n      title: Successful response for status of job_stats request\n      properties:\n        total:\n          type: integer\n          description: Total number of jobs\n        submitted:\n          type: integer\n          description: Number of jobs in state submitted\n        processing sim started:\n          type: integer\n          description: Number of jobs in state processing sim started\n        processing real started:\n          type: integer\n          description: Number of jobs in state processing real started\n        downloading code:\n          type: integer\n          description: Number of jobs in state downloading code\n        building:\n          type: integer\n          description: Number of jobs in state building\n        running sim:\n          type: integer\n          description: Number of jobs in state running sim\n        waiting for real:\n          type: integer\n          description: Number of jobs in state waiting for real\n        running real:\n          type: integer\n          description: Number of jobs in state running real\n        finished:\n          type: integer\n          description: Number of jobs in state finished\n      required:\n      - total\n      - submitted\n      - processing sim started\n      - processing real started\n      - downloading code\n      - building\n      - running sim\n      - waiting for real\n      - running real\n      - finished\n    JobResultStatsSuccess:\n      title: Successful response for results of job_stats request\n      required:\n      - total\n      - sim success\n      - real success\n      - real failure\n      - sim failure\n      - sim internal error\n      - real internal error\n      - unknown\n      - fetching project code failed\n      - launching project failed\n      - building project failed\n      - total real\n      properties:\n        total:\n          type: integer\n          description: Total number of jobs\n        sim success:\n          type: integer\n          description: Number of jobs with result sim success\n        real success:\n          type: integer\n          description: Number of jobs with result real success\n        real failure:\n          type: integer\n          description: Number of jobs with result real failure\n        sim failure:\n          type: integer\n          description: Number of jobs with result sim failure\n        sim internal error:\n          type: integer\n          description: Number of jobs with result sim internal error\n        real internal error:\n          type: integer\n          description: Number of jobs with result real internal error\n        unknown:\n          type: integer\n          description: Number of jobs with result unknown\n        fetching project code failed:\n          type: integer\n          description: Number of jobs with result fetching project code failed\n        launching project failed:\n          type: integer\n          description: Number of jobs with result launching project failed\n        building project failed:\n          type: integer\n          description: Number of jobs with result building project failed\n        total real:\n          type: integer\n          description: Number of jobs that did run on the real robots\n  examples:\n    JobResultStatsSuccess:\n      description: Example response of JobResultStats\n      summary: Example how response of JobResultStats looks like\n      value: {\"sim internal error\": 0, \"launching project failed\": 0, \"real failure\": 0, \"real success\": 0, \"sim success\": 11, \"total real\": 0, \"sim failure\": 1, \"building project failed\": 1, \"fetching project code failed\": 0, \"unknown\": 0, \"total\": 13, \"real internal error\": 0}\n    JobStatusStatsSuccess:\n      description: Example response of JobStatusStats\n      summary: Example how response of JobStatusStats looks like\n      value: {\"running real\": 0, \"submitted\": 0, \"running sim\": 0, \"processing sim started\": 0, \"finished\": 2, \"processing real started\": 0, \"total\": 13, \"waiting for real\": 11, \"downloading code\": 0}\n"
		}
	},
	"Error": "parse: parse spec: paths: /jobs: get: duplicate operationId: \"getJobs\""
}