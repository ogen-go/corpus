{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/arduino/clients-iot-api"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "spec/v2/swagger.yaml",
			"byteSize": 133310,
			"content": "components:\n  responses:\n    Accepted:\n      description: Accepted\n    BadRequest:\n      description: Bad Request\n    NotFound:\n      description: Not Found\n    NotImplemented:\n      description: Not Implemented\n    OK:\n      description: OK\n    Unauthorized:\n      description: Unauthorized\n  schemas:\n    ArduinoCompressedv2:\n      description: compressed contains the info from which to generate the certificate (default view)\n      properties:\n        authority_key_identifier:\n          description: The Authority Key Identifier of the certificate\n          type: string\n        not_after:\n          description: The ending date of the certificate\n          format: date-time\n          type: string\n        not_before:\n          description: The starting date of the certificate\n          format: date-time\n          type: string\n        serial:\n          description: The serial number of the certificate\n          type: string\n        signature:\n          description: The signature of the certificate\n          type: string\n        signature_asn1_x:\n          description: The ASN1 X component of certificate signature\n          type: string\n        signature_asn1_y:\n          description: The ASN1 Y component of certificate signature\n          type: string\n      required:\n      - serial\n      - not_before\n      - not_after\n      - signature\n      - signature_asn1_x\n      - signature_asn1_y\n      title: 'Mediatype identifier: application/vnd.arduino.compressedv2; view=default'\n      type: object\n    ArduinoDashboardshare:\n      description: ArduinoDashboardshare media type (default view)\n      properties:\n        user_id:\n          description: The userID of the user you want to share the dashboard with\n          format: uuid\n          type: string\n        username:\n          description: The username of the user you want to share the dashboard with\n          type: string\n      required:\n      - user_id\n      - username\n      title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json; view=default'\n      type: object\n    ArduinoDashboardshareCollection:\n      description: ArduinoDashboardshareCollection is the media type for an array of ArduinoDashboardshare (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDashboardshare'\n      title: 'Mediatype identifier: application/vnd.arduino.dashboardshare+json; type=collection; view=default'\n      type: array\n    ArduinoDashboardv2:\n      description: Dashboard is a collection of widgets (default view)\n      properties:\n        id:\n          description: The friendly name of the dashboard\n          format: uuid\n          type: string\n        name:\n          description: The friendly name of the dashboard\n          type: string\n        shared_by:\n          $ref: '#/components/schemas/ArduinoDashboardshare'\n        shared_with:\n          $ref: '#/components/schemas/ArduinoDashboardshareCollection'\n        updated_at:\n          description: Last update date\n          format: date-time\n          type: string\n        widgets:\n          $ref: '#/components/schemas/ArduinoWidgetv2Collection'\n      required:\n      - id\n      - name\n      - updated_at\n      title: 'Mediatype identifier: application/vnd.arduino.dashboardv2+json; view=default'\n      type: object\n    ArduinoDashboardv2Collection:\n      description: ArduinoDashboardv2Collection is the media type for an array of ArduinoDashboardv2 (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDashboardv2'\n      title: 'Mediatype identifier: application/vnd.arduino.dashboardv2+json; type=collection; view=default'\n      type: array\n    ArduinoDevicev2:\n      description: ArduinoDevicev2 media type (default view)\n      properties:\n        created_at:\n          description: Creation date of the device\n          format: date-time\n          type: string\n        events:\n          $ref: '#/components/schemas/ArduinoDevicev2SimplePropertiesCollection'\n        fqbn:\n          description: The fully qualified board name\n          type: string\n        href:\n          description: The api reference of this device\n          type: string\n        id:\n          description: The arn of the device\n          format: uuid\n          type: string\n        label:\n          description: The label of the device\n          type: string\n        last_activity_at:\n          description: Last activity date\n          format: date-time\n          type: string\n        latest_wifi_fw_version:\n          description: The latest version of the NINA/WIFI101 firmware available for this device\n          type: string\n        metadata:\n          additionalProperties: true\n          description: The metadata of the device\n          type: object\n        name:\n          description: The friendly name of the device\n          type: string\n        ota_available:\n          description: True if the device type is ready to receive OTA updated\n          type: boolean\n        ota_compatible:\n          description: True if the device type is OTA compatible\n          type: boolean\n        required_wifi_fw_version:\n          description: The required version of the NINA/WIFI101 firmware needed by IoT Cloud\n          type: string\n        serial:\n          description: The serial uuid of the device\n          type: string\n        tags:\n          additionalProperties: true\n          description: Tags belonging to the device\n          type: object\n        thing:\n          $ref: '#/components/schemas/ArduinoThing'\n        type:\n          description: The type of the device\n          type: string\n        user_id:\n          description: The id of the user\n          format: uuid\n          type: string\n        webhooks:\n          $ref: '#/components/schemas/ArduinoDevicev2WebhookCollection'\n        wifi_fw_version:\n          description: The version of the NINA/WIFI101 firmware running on the device\n          type: string\n      required:\n      - id\n      - name\n      - type\n      - label\n      - user_id\n      - href\n      - serial\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2+json; view=default'\n      type: object\n    ArduinoDevicev2Cert:\n      description: DeviceCertV2 describes a certificate associated to the device (default view)\n      properties:\n        ca:\n          description: The Certification Authority used to sign the certificate\n          type: string\n        compressed:\n          $ref: '#/components/schemas/ArduinoCompressedv2'\n        der:\n          description: The certificate in DER format\n          type: string\n        device_id:\n          description: The unique identifier of the device\n          format: uuid\n          type: string\n        enabled:\n          default: true\n          description: Whether the certificate is enabled\n          type: boolean\n        href:\n          description: The api reference of this cert\n          type: string\n        id:\n          description: The unique identifier of the key\n          format: uuid\n          type: string\n        pem:\n          description: The certificate in pem format\n          example: \"-----BEGIN CERTIFICATE-----\\n\\t\\t\\tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAryQICCl6NZ5gDKrnSztO\\n\\t\\t\\t3Hy8PEUcuyvg/ikC+VcIo2SFFSf18a3IMYldIugqqqZCs4/4uVW3sbdLs/6PfgdX\\n\\t\\t\\t7O9D22ZiFWHPYA2k2N744MNiCD1UE+tJyllUhSblK48bn+v1oZHCM0nYQ2NqUkvS\\n\\t\\t\\tj+hwUU3RiWl7x3D2s9wSdNt7XUtW05a/FXehsPSiJfKvHJJnGOX0BgTvkLnkAOTd\\n\\t\\t\\tOrUZ/wK69Dzu4IvrN4vs9Nes8vbwPa/ddZEzGR0cQMt0JBkhk9kU/qwqUseP1QRJ\\n\\t\\t\\t5I1jR4g8aYPL/ke9K35PxZWuDp3U0UPAZ3PjFAh+5T+fc7gzCs9dPzSHloruU+gl\\n\\t\\t\\tFQIDAQAB\\n\\t\\t\\t-----END CERTIFICATE-----\"\n          maxLength: 512\n          type: string\n      required:\n      - id\n      - device_id\n      - enabled\n      - pem\n      - der\n      - compressed\n      - href\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.cert+json; view=default'\n      type: object\n    ArduinoDevicev2CertCollection:\n      description: ArduinoDevicev2CertCollection is the media type for an array of ArduinoDevicev2Cert (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDevicev2Cert'\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.cert+json; type=collection; view=default'\n      type: array\n    ArduinoDevicev2Collection:\n      description: ArduinoDevicev2Collection is the media type for an array of ArduinoDevicev2 (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDevicev2'\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2+json; type=collection; view=default'\n      type: array\n    ArduinoDevicev2EventProperties:\n      description: ArduinoDevicev2EventProperties media type (default view)\n      properties:\n        events:\n          $ref: '#/components/schemas/ArduinoDevicev2SimplePropertiesCollection'\n        id:\n          description: The device of the property\n          format: uuid\n          type: string\n      required:\n      - id\n      - events\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.event.properties+json; view=default'\n      type: object\n    ArduinoDevicev2Pass:\n      description: DeviceCertV2 describes a password associated to a device (default view)\n      properties:\n        set:\n          description: Whether the password is set or not\n          type: boolean\n        suggested_password:\n          description: A random suggested password\n          type: string\n      required:\n      - set\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.pass+json; view=default'\n      type: object\n    ArduinoDevicev2SimpleProperties:\n      description: ArduinoDevicev2SimpleProperties media type (default view)\n      properties:\n        name:\n          description: The name of the property\n          type: string\n        updated_at:\n          description: Update date of the property\n          format: date-time\n          type: string\n        value:\n          description: Value of the property\n      required:\n      - name\n      - value\n      - updated_at\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json; view=default'\n      type: object\n    ArduinoDevicev2SimplePropertiesCollection:\n      description: ArduinoDevicev2SimplePropertiesCollection is the media type for an array of ArduinoDevicev2SimpleProperties (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDevicev2SimpleProperties'\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.simple.properties+json; type=collection; view=default'\n      type: array\n    ArduinoDevicev2Webhook:\n      description: DeviceWebhookV2 describes a webhook associated to the device (default view)\n      properties:\n        active:\n          default: true\n          description: Whether the webhook is active\n          type: boolean\n        id:\n          description: The uuid of the webhook\n          format: uuid\n          type: string\n        uri:\n          description: The uri of the webhook\n          format: uri\n          type: string\n      required:\n      - id\n      - uri\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json; view=default'\n      type: object\n    ArduinoDevicev2WebhookCollection:\n      description: ArduinoDevicev2WebhookCollection is the media type for an array of ArduinoDevicev2Webhook (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDevicev2Webhook'\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2.webhook+json; type=collection; view=default'\n      type: array\n    ArduinoDevicev2properties:\n      description: ArduinoDevicev2properties media type (default view)\n      properties:\n        data_retention_days:\n          description: How many days the data will be kept\n          format: double\n          type: number\n        deviceId:\n          description: The device of the property\n          format: uuid\n          type: string\n        properties:\n          $ref: '#/components/schemas/ArduinoPropertyCollection'\n        user_id:\n          description: The user id of the owner\n          format: uuid\n          type: string\n      required:\n      - deviceId\n      - user_id\n      - data_retention_days\n      - properties\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2properties+json; view=default'\n      type: object\n    ArduinoDevicev2propertyvalue:\n      description: ArduinoDevicev2propertyvalue media type (default view)\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        value:\n          properties:\n            payload:\n              type: string\n            seqno:\n              format: int64\n              type: integer\n            statistics:\n              properties:\n                adr:\n                  format: double\n                  type: number\n                channel:\n                  format: double\n                  type: number\n                duplicate:\n                  format: double\n                  type: number\n                freq:\n                  format: double\n                  type: number\n                modBW:\n                  format: double\n                  type: number\n                rssi:\n                  format: double\n                  type: number\n                seqno:\n                  format: double\n                  type: number\n                sf:\n                  format: double\n                  type: number\n                snr:\n                  format: double\n                  type: number\n                time:\n                  format: double\n                  type: number\n              type: object\n          type: object\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json; view=default'\n      type: object\n    ArduinoDevicev2propertyvalueCollection:\n      description: ArduinoDevicev2propertyvalueCollection is the media type for an array of ArduinoDevicev2propertyvalue (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoDevicev2propertyvalue'\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalue+json; type=collection; view=default'\n      type: array\n    ArduinoDevicev2propertyvalues:\n      description: ArduinoDevicev2propertyvalues media type (default view)\n      properties:\n        id:\n          type: string\n        last_evaluated_key:\n          properties:\n            created_at:\n              format: date-time\n              type: string\n            id:\n              type: string\n            name:\n              type: string\n          type: object\n        name:\n          type: string\n        values:\n          $ref: '#/components/schemas/ArduinoDevicev2propertyvalueCollection'\n      required:\n      - id\n      - last_evaluated_key\n      - name\n      - values\n      title: 'Mediatype identifier: application/vnd.arduino.devicev2propertyvalues+json; view=default'\n      type: object\n    ArduinoLinkedvariable:\n      description: ArduinoLinkedvariable media type (default view)\n      properties:\n        id:\n          description: The id of the linked variable\n          format: uuid\n          type: string\n        last_value:\n          description: Last value of the linked property\n        last_value_updated_at:\n          description: Update date of the last value\n          format: date-time\n          type: string\n        name:\n          description: The name of the variable\n          type: string\n        permission:\n          description: The permission of the linked variable\n          type: string\n        thing_id:\n          description: The id of the related thing\n          format: uuid\n          type: string\n        thing_name:\n          description: The name of the related thing\n          type: string\n        thing_timezone:\n          $ref: '#/components/schemas/ArduinoTimezone'\n        type:\n          description: The type of the variable\n          type: string\n        variable_name:\n          description: The name of the variable in the code\n          type: string\n      required:\n      - id\n      - name\n      - variable_name\n      - thing_id\n      - thing_name\n      - type\n      - permission\n      title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json; view=default'\n      type: object\n    ArduinoLinkedvariableCollection:\n      description: ArduinoLinkedvariableCollection is the media type for an array of ArduinoLinkedvariable (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoLinkedvariable'\n      title: 'Mediatype identifier: application/vnd.arduino.linkedvariable+json; type=collection; view=default'\n      type: array\n    ArduinoLoradevicev1:\n      description: ArduinoLoradevicev1 media type (default view)\n      properties:\n        app_eui:\n          description: The eui of the app\n          type: string\n        app_key:\n          description: The key of the device\n          type: string\n        device_id:\n          description: The id of the device\n          format: uuid\n          type: string\n        eui:\n          description: The eui of the lora device\n          example: \"71619230301\"\n          type: string\n      required:\n      - eui\n      - device_id\n      - app_eui\n      - app_key\n      title: 'Mediatype identifier: application/vnd.arduino.loradevicev1+json; view=default'\n      type: object\n    ArduinoLorafreqplansv1:\n      description: ArduinoLorafreqplansv1 media type (default view)\n      properties:\n        frequency_plans:\n          description: The list of frequency plans\n          items:\n            $ref: '#/components/schemas/ArduinoLorafreqplanv1'\n          type: array\n      title: 'Mediatype identifier: application/vnd.arduino.lorafreqplansv1+json; view=default'\n      type: object\n    ArduinoLorafreqplanv1:\n      description: ArduinoLorafreqplanv1 media type (default view)\n      properties:\n        advanced:\n          description: Frequency plan only for advanced users\n          type: boolean\n        id:\n          description: The ID of the frequency paln\n          type: string\n        name:\n          description: The name of the frequency plan\n          type: string\n      required:\n      - name\n      - id\n      - advanced\n      title: 'Mediatype identifier: application/vnd.arduino.lorafreqplanv1+json; view=default'\n      type: object\n    ArduinoProperty:\n      description: ArduinoProperty media type (default view)\n      properties:\n        created_at:\n          description: Creation date of the property\n          format: date-time\n          type: string\n        deleted_at:\n          description: Delete date of the property\n          format: date-time\n          type: string\n        href:\n          description: The api reference of this property\n          type: string\n        id:\n          description: The id of the property\n          format: uuid\n          type: string\n        last_value:\n          description: Last value of this property\n        max_value:\n          description: Maximum value of this property\n          format: double\n          type: number\n        min_value:\n          description: Minimum value of this property\n          format: double\n          type: number\n        name:\n          description: The friendly name of the property\n          type: string\n        permission:\n          description: The permission of the property\n          type: string\n        persist:\n          description: If true, data will persist into a timeseries database\n          type: boolean\n        sync_id:\n          description: The id of the sync pool\n          format: uuid\n          type: string\n        tag:\n          description: The integer id of the property\n          format: double\n          type: number\n        thing_id:\n          description: The id of the thing\n          format: uuid\n          type: string\n        thing_name:\n          description: The name of the associated thing\n          type: string\n        type:\n          description: The type of the property\n          type: string\n        update_parameter:\n          description: The update frequency in seconds, or the amount of the property has to change in order to trigger an update\n          format: double\n          type: number\n        update_strategy:\n          description: The update strategy for the property value\n          type: string\n        updated_at:\n          description: Update date of the property\n          format: date-time\n          type: string\n        value_updated_at:\n          description: Last update timestamp of this property\n          format: date-time\n          type: string\n        variable_name:\n          description: The sketch variable name of the property\n          type: string\n      required:\n      - id\n      - thing_id\n      - name\n      - type\n      - permission\n      - update_strategy\n      - href\n      title: 'Mediatype identifier: application/vnd.arduino.property+json; view=default'\n      type: object\n    ArduinoPropertyCollection:\n      description: ArduinoPropertyCollection is the media type for an array of ArduinoProperty (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoProperty'\n      title: 'Mediatype identifier: application/vnd.arduino.property+json; type=collection; view=default'\n      type: array\n    ArduinoSeriesBatch:\n      description: ArduinoSeriesBatch media type (default view)\n      properties:\n        resp_version:\n          description: Response version\n          format: int64\n          type: integer\n        responses:\n          description: Responses of the request\n          items:\n            $ref: '#/components/schemas/ArduinoSeriesResponse'\n          type: array\n      required:\n      - responses\n      - resp_version\n      title: 'Mediatype identifier: application/vnd.arduino.series.batch+json; view=default'\n      type: object\n    ArduinoSeriesRawBatch:\n      description: ArduinoSeriesRawBatch media type (default view)\n      properties:\n        resp_version:\n          description: Response version\n          format: int64\n          type: integer\n        responses:\n          description: Responses of the request\n          items:\n            $ref: '#/components/schemas/ArduinoSeriesRawResponse'\n          type: array\n      required:\n      - responses\n      - resp_version\n      title: 'Mediatype identifier: application/vnd.arduino.series.raw.batch+json; view=default'\n      type: object\n    ArduinoSeriesRawBatchLastvalue:\n      description: ArduinoSeriesRawBatchLastvalue media type (default view)\n      properties:\n        responses:\n          description: Responses of the request\n          items:\n            $ref: '#/components/schemas/ArduinoSeriesRawLastValueResponse'\n          type: array\n        status:\n          description: Status of the response\n          type: string\n      required:\n      - status\n      - responses\n      title: 'Mediatype identifier: application/vnd.arduino.series.raw.batch.lastvalue+json; view=default'\n      type: object\n    ArduinoSeriesRawLastValueResponse:\n      description: ArduinoSeriesRawLastValueResponse media type (default view)\n      properties:\n        count_values:\n          description: Total number of values in the array 'values'\n          format: int64\n          type: integer\n        property_id:\n          description: Property id\n          format: uuid\n          type: string\n        thing_id:\n          description: Thing id\n          format: uuid\n          type: string\n        times:\n          description: Timestamp in RFC3339\n          items:\n            format: date-time\n            type: string\n          type: array\n        values:\n          description: Values can be in Float, String, Bool, Object\n          items: {}\n          type: array\n      required:\n      - thing_id\n      - property_id\n      - count_values\n      - values\n      - times\n      title: 'Mediatype identifier: application/vnd.arduino.series.raw.last.value.response+json; view=default'\n      type: object\n    ArduinoSeriesRawResponse:\n      description: ArduinoSeriesRawResponse media type (default view)\n      properties:\n        count_values:\n          description: Total number of values in the array 'values'\n          format: int64\n          type: integer\n        from_date:\n          description: From date\n          format: date-time\n          type: string\n        message:\n          default: \"\"\n          description: If the response is different than 'ok'\n          type: string\n        query:\n          description: Query of for the data\n          type: string\n        resp_version:\n          description: Response version\n          format: int64\n          type: integer\n        series:\n          $ref: '#/components/schemas/BatchQueryRawResponseSeriesMediaV1'\n        series_limit:\n          description: Max of values\n          format: int64\n          type: integer\n        sort:\n          description: Sorting\n          enum:\n          - ASC\n          - DESC\n          type: string\n        status:\n          description: Status of the response\n          type: string\n        times:\n          description: Timestamp in RFC3339\n          items:\n            format: date-time\n            type: string\n          type: array\n        to_date:\n          description: To date\n          format: date-time\n          type: string\n        values:\n          description: Values can be in Float, String, Bool, Object\n          items: {}\n          type: array\n      required:\n      - status\n      - resp_version\n      - series\n      - query\n      - from_date\n      - to_date\n      - sort\n      - times\n      - values\n      - count_values\n      title: 'Mediatype identifier: application/vnd.arduino.series.raw.response+json; view=default'\n      type: object\n    ArduinoSeriesResponse:\n      description: ArduinoSeriesResponse media type (default view)\n      properties:\n        count_values:\n          description: Total number of values in the array 'values'\n          format: int64\n          type: integer\n        from_date:\n          description: From date\n          format: date-time\n          type: string\n        interval:\n          description: Resolution in seconds\n          format: int64\n          type: integer\n        message:\n          default: \"\"\n          description: If the response is different than 'ok'\n          type: string\n        query:\n          description: Query of for the data\n          type: string\n        resp_version:\n          description: Response version\n          format: int64\n          type: integer\n        series_limit:\n          description: Max of values\n          format: int64\n          type: integer\n        status:\n          description: Status of the response\n          type: string\n        times:\n          description: Timestamp in RFC3339\n          items:\n            format: date-time\n            type: string\n          type: array\n        to_date:\n          description: To date\n          format: date-time\n          type: string\n        values:\n          description: Values in Float\n          items:\n            format: double\n            type: number\n          type: array\n      required:\n      - status\n      - resp_version\n      - query\n      - from_date\n      - to_date\n      - interval\n      - times\n      - values\n      - count_values\n      title: 'Mediatype identifier: application/vnd.arduino.series.response+json; view=default'\n      type: object\n    ArduinoTags:\n      description: ArduinoTags media type (default view)\n      properties:\n        tags:\n          items:\n            $ref: '#/components/schemas/tag'\n          type: array\n      required:\n      - tags\n      title: 'Mediatype identifier: application/vnd.arduino.tags+json; view=default'\n      type: object\n    ArduinoThing:\n      description: ArduinoThing media type (default view)\n      properties:\n        created_at:\n          description: Creation date of the thing\n          format: date-time\n          type: string\n        deleted_at:\n          description: Delete date of the thing\n          format: date-time\n          type: string\n        device_fqbn:\n          description: The fqbn of the attached device, if any\n          type: string\n        device_id:\n          description: The id of the device\n          format: uuid\n          type: string\n        device_name:\n          description: The name of the attached device, if any\n          type: string\n        device_type:\n          description: The type of the attached device, if any\n          type: string\n        href:\n          description: The api reference of this thing\n          type: string\n        id:\n          description: The id of the thing\n          format: uuid\n          type: string\n        name:\n          description: The friendly name of the thing\n          type: string\n        properties:\n          $ref: '#/components/schemas/ArduinoPropertyCollection'\n        properties_count:\n          description: The number of properties of the thing\n          format: int64\n          type: integer\n        sketch_id:\n          description: The id of the attached sketch\n          format: uuid\n          type: string\n        tags:\n          additionalProperties: true\n          description: Tags of the thing\n          type: object\n        timezone:\n          description: Time zone of the thing\n          type: string\n        updated_at:\n          description: Update date of the thing\n          format: date-time\n          type: string\n        user_id:\n          description: The user id of the owner\n          format: uuid\n          type: string\n        webhook_active:\n          description: Webhook uri\n          type: boolean\n        webhook_uri:\n          description: Webhook uri\n          type: string\n      required:\n      - id\n      - user_id\n      - name\n      - href\n      - timezone\n      title: 'Mediatype identifier: application/vnd.arduino.thing+json; view=default'\n      type: object\n    ArduinoThingCollection:\n      description: ArduinoThingCollection is the media type for an array of ArduinoThing (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoThing'\n      title: 'Mediatype identifier: application/vnd.arduino.thing+json; type=collection; view=default'\n      type: array\n    ArduinoTimeseriesmedia:\n      description: ArduinoTimeseriesmedia media type (default view)\n      properties:\n        data:\n          items:\n            $ref: '#/components/schemas/TimeseriesDataPoint'\n          type: array\n      required:\n      - data\n      title: 'Mediatype identifier: application/vnd.arduino.timeseriesmedia+json; view=default'\n      type: object\n    ArduinoTimezone:\n      description: ArduinoTimezone media type (default view)\n      properties:\n        name:\n          description: Name of the time zone.\n          type: string\n        offset:\n          description: Current UTC DST offset in seconds.\n          format: int64\n          type: integer\n        until:\n          description: Date until the offset is valid.\n          format: date-time\n          type: string\n      required:\n      - name\n      - offset\n      title: 'Mediatype identifier: application/vnd.arduino.timezone+json; view=default'\n      type: object\n    ArduinoVariableslinks:\n      description: ArduinoVariableslinks media type (default view)\n      properties:\n        variables:\n          description: The ids of the linked variables\n          items:\n            format: uuid\n            type: string\n          type: array\n      required:\n      - variables\n      title: 'Mediatype identifier: application/vnd.arduino.variableslinks+json; view=default'\n      type: object\n    ArduinoWidgetv2:\n      description: Widget describes a dashboard widget (default view)\n      properties:\n        has_permission_incompatibility:\n          description: True if the linked variables permissions are incompatible with the widget\n          type: boolean\n        has_type_incompatibility:\n          description: True if the linked variables types are incompatible with the widget\n          type: boolean\n        has_unlinked_variable:\n          description: If it's true the widget is linked to a soft-deleted variable\n          type: boolean\n        height:\n          description: Widget current height for desktop\n          format: int64\n          type: integer\n        height_mobile:\n          description: Widget current height for mobile\n          format: int64\n          type: integer\n        id:\n          description: The UUID of the widget, set by client\n          format: uuid\n          type: string\n        name:\n          description: The name of the widget\n          type: string\n        options:\n          additionalProperties: true\n          description: Widget options\n          type: object\n        type:\n          description: The type of the widget\n          enum:\n          - slider, gauge\n          type: string\n        variables:\n          $ref: '#/components/schemas/ArduinoLinkedvariableCollection'\n        width:\n          description: Widget current width for desktop\n          format: int64\n          type: integer\n        width_mobile:\n          description: Widget current width for mobile\n          format: int64\n          type: integer\n        x:\n          description: Widget x position for desktop\n          format: int64\n          type: integer\n        x_mobile:\n          description: Widget x position for mobile\n          format: int64\n          type: integer\n        \"y\":\n          description: Widget y position for desktop\n          format: int64\n          type: integer\n        y_mobile:\n          description: Widget y position for mobile\n          format: int64\n          type: integer\n      required:\n      - id\n      - type\n      - width\n      - height\n      - x\n      - \"y\"\n      - options\n      title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; view=default'\n      type: object\n    ArduinoWidgetv2Collection:\n      description: ArduinoWidgetv2Collection is the media type for an array of ArduinoWidgetv2 (default view)\n      items:\n        $ref: '#/components/schemas/ArduinoWidgetv2'\n      title: 'Mediatype identifier: application/vnd.arduino.widgetv2+json; type=collection; view=default'\n      type: array\n    BatchLastValueRequestsMediaV1:\n      properties:\n        requests:\n          description: Requests\n          items:\n            $ref: '#/components/schemas/BatchQueryRawLastValueRequestMediaV1'\n          type: array\n      required:\n      - requests\n      title: BatchLastValueRequestsMediaV1\n      type: object\n    BatchQueryRawLastValueRequestMediaV1:\n      properties:\n        property_id:\n          description: Property id\n          format: uuid\n          type: string\n        thing_id:\n          description: Thing id\n          format: uuid\n          type: string\n      required:\n      - thing_id\n      - property_id\n      title: BatchQueryRawLastValueRequestMediaV1\n      type: object\n    BatchQueryRawRequestMediaV1:\n      properties:\n        from:\n          description: From timestamp\n          format: date-time\n          type: string\n        q:\n          description: Query\n          type: string\n        series_limit:\n          description: Max of values\n          format: int64\n          type: integer\n        sort:\n          default: DESC\n          description: Sorting\n          enum:\n          - ASC\n          - DESC\n          type: string\n        to:\n          description: To timestamp\n          format: date-time\n          type: string\n      required:\n      - q\n      title: BatchQueryRawRequestMediaV1\n      type: object\n    BatchQueryRawRequestsMediaV1:\n      properties:\n        requests:\n          description: Requests\n          items:\n            $ref: '#/components/schemas/BatchQueryRawRequestMediaV1'\n          type: array\n        resp_version:\n          description: Response version\n          format: int64\n          type: integer\n      required:\n      - requests\n      - resp_version\n      title: BatchQueryRawRequestsMediaV1\n      type: object\n    BatchQueryRawResponseSeriesMediaV1:\n      properties:\n        metric:\n          description: Metric name\n          type: string\n      required:\n      - metric\n      title: BatchQueryRawResponseSeriesMediaV1\n      type: object\n    BatchQueryRequestMediaV1:\n      properties:\n        from:\n          description: From timestamp\n          format: date-time\n          type: string\n        interval:\n          description: Resolution in seconds\n          format: int64\n          type: integer\n        q:\n          description: Query\n          type: string\n        series_limit:\n          description: Max of values\n          format: int64\n          type: integer\n        to:\n          description: To timestamp\n          format: date-time\n          type: string\n      required:\n      - q\n      - from\n      - to\n      title: BatchQueryRequestMediaV1\n      type: object\n    BatchQueryRequestsMediaV1:\n      properties:\n        requests:\n          description: Requests\n          items:\n            $ref: '#/components/schemas/BatchQueryRequestMediaV1'\n          type: array\n        resp_version:\n          description: Response version\n          format: int64\n          type: integer\n      required:\n      - requests\n      - resp_version\n      title: BatchQueryRequestsMediaV1\n      type: object\n    CheckDevicesV2PassPayload:\n      properties:\n        password:\n          description: The password for the device\n          type: string\n      required:\n      - password\n      title: CheckDevicesV2PassPayload\n      type: object\n    CreateDevicesV2CertsPayload:\n      properties:\n        ca:\n          description: The Certification Authority you want to use\n          type: string\n        csr:\n          description: The certificate request in pem format\n          example: \"-----BEGIN CERTIFICATE-----\\n\\t\\t\\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\\n\\t\\t\\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\\n\\t\\t\\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\\n\\t\\t\\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\\n\\t\\t\\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\\n\\t\\t\\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\\n\\t\\t\\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\\n\\t\\t\\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\\n\\t\\t\\t-----END CERTIFICATE-----\\n\\t\\t\\t\"\n          maxLength: 1024\n          type: string\n        enabled:\n          description: Whether the certificate is enabled\n          type: boolean\n      required:\n      - enabled\n      - csr\n      title: CreateDevicesV2CertsPayload\n      type: object\n    CreateDevicesV2Payload:\n      description: DeviceV2 describes a device.\n      properties:\n        fqbn:\n          description: The fully qualified board name\n          type: string\n        name:\n          description: The friendly name of the device\n          maxLength: 64\n          pattern: '[a-zA-Z0-9_.@-]+'\n          type: string\n        serial:\n          description: The serial uuid of the device\n          maxLength: 64\n          pattern: '[a-zA-Z0-9_.@-]+'\n          type: string\n        type:\n          description: The type of the device\n          enum:\n          - mkrwifi1010\n          - mkr1000\n          - nano_33_iot\n          - mkrgsm1400\n          - mkrwan1310\n          - mkrwan1300\n          - mkrnb1500\n          - lora-device\n          - login_and_secretkey_wifi\n          - envie_m7\n          - nanorp2040connect\n          type: string\n        user_id:\n          description: The user_id associated to the device. If absent it will be inferred from the authentication header\n          format: uuid\n          type: string\n        wifi_fw_version:\n          description: The version of the NINA/WIFI101 firmware running on the device\n          maxLength: 10\n          pattern: ^(?P\u003cmajor\u003e0|[1-9]\\d*)\\.(?P\u003cminor\u003e0|[1-9]\\d*)\\.(?P\u003cpatch\u003e0|[1-9]\\d*)(?:-(?P\u003cprerelease\u003e(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P\u003cbuildmetadata\u003e[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$\n          type: string\n      required:\n      - type\n      title: CreateDevicesV2Payload\n      type: object\n    CreateLoraDevicesV1Payload:\n      properties:\n        app:\n          description: The app name\n          type: string\n        app_eui:\n          description: The app eui of the lora device\n          pattern: '[0-9a-z]{16}'\n          type: string\n        app_key:\n          description: The app key of the lora device\n          pattern: '[0-9a-z]{16}'\n          type: string\n        eui:\n          description: The eui of the lora device\n          pattern: '[0-9a-z]{16}'\n          type: string\n        frequency_plan:\n          description: 'The frequency plan required by your country '\n          enum:\n          - EU_863_870_TTN\n          - US_902_928_FSB_2\n          - EU_433\n          - AU_915_928_FSB_2\n          - CN_470_510_FSB_11\n          - AS_920_923\n          - AS_920_923_TTN_AU\n          - AS_923_925\n          - AS_923_925_TTN_AU\n          - KR_920_923_TTN\n          - IN_865_867\n          type: string\n        name:\n          description: A common name for the device\n          type: string\n        serial:\n          description: The optional serial number\n          type: string\n        type:\n          description: The type of device\n          enum:\n          - lora-device\n          - mkrwan1300\n          - mkrwan1310\n          type: string\n        user_id:\n          description: The id of the user. Can be the special string 'me'\n          type: string\n      required:\n      - name\n      - eui\n      - frequency_plan\n      - user_id\n      - app\n      - type\n      title: CreateLoraDevicesV1Payload\n      type: object\n    HistoricDataRequest:\n      properties:\n        from:\n          description: Get data starting from this date\n          format: date-time\n          type: string\n        properties:\n          description: IDs of properties\n          items:\n            format: uuid\n            type: string\n          minItems: 1\n          type: array\n        to:\n          description: Get data up to this date\n          format: date-time\n          type: string\n      required:\n      - properties\n      - from\n      - to\n      title: HistoricDataRequest\n      type: object\n    ThingCreate:\n      description: Payload to create a new thing\n      properties:\n        device_id:\n          description: The arn of the associated device\n          format: uuid\n          type: string\n        id:\n          description: The id of the thing\n          format: uuid\n          type: string\n        name:\n          description: The friendly name of the thing\n          maxLength: 64\n          pattern: ^[a-zA-Z0-9_.@ -]+$\n          type: string\n        properties:\n          description: The properties of the thing\n          items:\n            $ref: '#/components/schemas/property'\n          type: array\n        timezone:\n          default: America/New_York\n          description: |-\n            A time zone name\n            Check /v2/timezones for a list of valid names.\n          type: string\n        webhook_active:\n          description: Webhook uri\n          type: boolean\n        webhook_uri:\n          description: Webhook uri\n          type: string\n      title: ThingCreate\n      type: object\n    TimeseriesDataPoint:\n      properties:\n        time:\n          description: Binning timestamp\n          format: date-time\n          type: string\n        value:\n          description: Avg value on the binning interval\n          format: double\n          type: number\n      required:\n      - time\n      - value\n      title: TimeseriesDataPoint\n      type: object\n    dashboardshare:\n      properties:\n        user_id:\n          description: The userID of the user you want to share the dashboard with\n          format: uuid\n          type: string\n        username:\n          description: The username of the user you want to share the dashboard with\n          type: string\n      title: dashboardshare\n      type: object\n    dashboardv2:\n      description: DashboardV2Payload describes a dashboard\n      properties:\n        name:\n          description: The friendly name of the dashboard\n          maxLength: 64\n          pattern: '[a-zA-Z0-9_.@-]+'\n          type: string\n        widgets:\n          description: Widgets attached to this dashboard\n          items:\n            $ref: '#/components/schemas/widget'\n          type: array\n      title: dashboardv2\n      type: object\n    devicev2:\n      description: DeviceV2 describes a device.\n      properties:\n        fqbn:\n          description: The fully qualified board name\n          type: string\n        name:\n          description: The friendly name of the device\n          maxLength: 64\n          pattern: '[a-zA-Z0-9_.@-]+'\n          type: string\n        serial:\n          description: The serial uuid of the device\n          maxLength: 64\n          pattern: '[a-zA-Z0-9_.@-]+'\n          type: string\n        type:\n          description: The type of the device\n          enum:\n          - mkrwifi1010\n          - mkr1000\n          - nano_33_iot\n          - mkrgsm1400\n          - mkrwan1310\n          - mkrwan1300\n          - mkrnb1500\n          - lora-device\n          - login_and_secretkey_wifi\n          - envie_m7\n          - nanorp2040connect\n          type: string\n        user_id:\n          description: The user_id associated to the device. If absent it will be inferred from the authentication header\n          format: uuid\n          type: string\n        wifi_fw_version:\n          description: The version of the NINA/WIFI101 firmware running on the device\n          maxLength: 10\n          pattern: ^(?P\u003cmajor\u003e0|[1-9]\\d*)\\.(?P\u003cminor\u003e0|[1-9]\\d*)\\.(?P\u003cpatch\u003e0|[1-9]\\d*)(?:-(?P\u003cprerelease\u003e(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P\u003cbuildmetadata\u003e[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$\n          type: string\n      title: devicev2\n      type: object\n    devicev2.cert:\n      properties:\n        ca:\n          description: The Certification Authority you want to use\n          type: string\n        csr:\n          description: The certificate request in pem format\n          example: \"-----BEGIN CERTIFICATE-----\\n\\t\\t\\tMIIBeDCCAR4CAQAwgY0xCzAJBgNVBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRl\\n\\t\\t\\tMQ8wDQYDVQQHEwZNeUNpdHkxFDASBgNVBAoTC0NvbXBhbnkgTHRkMQswCQYDVQQL\\n\\t\\t\\tEwJJVDEUMBIGA1UEAxMLZXhhbXBsZS5jb20xHzAdBgkqhkiG9w0BCQEMEHRlc3RA\\n\\t\\t\\tZXhhbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATf6J9Gk79XGJ2I\\n\\t\\t\\t+v6p/r0UmPufUcUwtlx7gx87+DaI8Vpj9R5KN71HsHYw5uq+Lm0cr0CZIdtZU4cP\\n\\t\\t\\tupd6jDQToC4wLAYJKoZIhvcNAQkOMR8wHTAbBgNVHREEFDASgRB0ZXN0QGV4YW1w\\n\\t\\t\\tbGUuY29tMAoGCCqGSM49BAMCA0gAMEUCIGQqtlGzYdjPwYZYJ41albMBcdrKI7+8\\n\\t\\t\\toiNSNWyDxJSGAiEAqQPPxMdr6vaXCCjr5s1J01WLKHzGoPFCR40rqAPs8eQ=\\n\\t\\t\\t-----END CERTIFICATE-----\\n\\t\\t\\t\"\n          maxLength: 1024\n          type: string\n        enabled:\n          description: Whether the certificate is enabled\n          type: boolean\n      title: devicev2.cert\n      type: object\n    devicev2.otabinaryurl:\n      properties:\n        async:\n          default: true\n          description: If false, wait for the full OTA process, until it gets a result from the device\n          type: boolean\n        binary_key:\n          description: The object key of the binary\n          pattern: ^ota/[a-zA-Z0-9_-]+/[a-zA-Z0-9_-]+.ota$\n          type: string\n        expire_in_mins:\n          default: 10\n          description: Binary expire time in minutes, default 10 mins\n          format: int64\n          type: integer\n      required:\n      - binary_key\n      title: devicev2.otabinaryurl\n      type: object\n    devicev2.pass:\n      properties:\n        password:\n          description: The password for the device\n          type: string\n      title: devicev2.pass\n      type: object\n    error:\n      description: Error response media type (default view)\n      properties:\n        code:\n          description: an application-specific error code, expressed as a string value.\n          example: invalid_value\n          type: string\n        detail:\n          description: a human-readable explanation specific to this occurrence of the problem.\n          example: Value of ID must be an integer\n          type: string\n        id:\n          description: a unique identifier for this particular occurrence of the problem.\n          example: 3F1FKVRR\n          type: string\n        meta:\n          additionalProperties: true\n          description: a meta object containing non-standard meta-information about the error.\n          example:\n            timestamp: 1458609066\n          type: object\n        status:\n          description: the HTTP status code applicable to this problem\n          example: 400\n          format: int64\n          type: integer\n      title: 'Mediatype identifier: application/vnd.goa.error+json; view=default'\n      type: object\n    propertiesValue:\n      properties:\n        name:\n          description: The name of the property\n          type: string\n        type:\n          default: infer\n          description: The type of the property\n          enum:\n          - infer\n          - base64\n          - hex\n          - json\n          type: string\n        value:\n          description: The last value of the property\n      required:\n      - name\n      - value\n      - type\n      title: propertiesValue\n      type: object\n    propertiesValues:\n      properties:\n        input:\n          default: false\n          description: If true, send property values to device's input topic.\n          type: boolean\n        properties:\n          items:\n            $ref: '#/components/schemas/propertiesValue'\n          type: array\n      required:\n      - properties\n      title: propertiesValues\n      type: object\n    property:\n      description: PropertyPayload describes a property of a thing. No field is mandatory\n      properties:\n        max_value:\n          description: Maximum value of this property\n          format: double\n          type: number\n        min_value:\n          description: Minimum value of this property\n          format: double\n          type: number\n        name:\n          description: The friendly name of the property\n          type: string\n        permission:\n          description: The permission of the property\n          enum:\n          - READ_ONLY\n          - READ_WRITE\n          type: string\n        persist:\n          default: false\n          description: If true, data will persist into a timeseries database\n          type: boolean\n        tag:\n          description: The integer id of the property\n          format: double\n          type: number\n        type:\n          description: The type of the property\n          enum:\n          - ANALOG\n          - CHARSTRING\n          - FLOAT\n          - INT\n          - LENGHT_C\n          - LENGHT_I\n          - LENGHT_M\n          - PERCENTAGE\n          - STATUS\n          - TEMPERATURE_C\n          - TEMPERATURE_F\n          - METER\n          - KILOGRAM\n          - GRAM\n          - SECOND\n          - AMPERE\n          - KELVIN\n          - CANDELA\n          - MOLE\n          - HERTZ\n          - RADIAN\n          - STERADIAN\n          - NEWTON\n          - PASCAL\n          - JOULE\n          - WATT\n          - COULOMB\n          - VOLT\n          - FARAD\n          - OHM\n          - SIEMENS\n          - WEBER\n          - TESLA\n          - HENRY\n          - DEGREES_CELSIUS\n          - LUMEN\n          - LUX\n          - BECQUEREL\n          - GRAY\n          - SIEVERT\n          - KATAL\n          - SQUARE_METER\n          - CUBIC_METER\n          - LITER\n          - METER_PER_SECOND\n          - METER_PER_SQUARE_SECOND\n          - CUBIC_METER_PER_SECOND\n          - LITER_PER_SECOND\n          - WATT_PER_SQUARE_METER\n          - CANDELA_PER_SQUARE_METER\n          - BIT\n          - BIT_PER_SECOND\n          - DEGREES_LATITUDE\n          - DEGREES_LONGITUDE\n          - PH_VALUE\n          - DECIBEL\n          - DECIBEL_1W\n          - BEL\n          - COUNT\n          - RATIO_DIV\n          - RATIO_MOD\n          - PERCENTAGE_RELATIVE_HUMIDITY\n          - PERCENTAGE_BATTERY_LEVEL\n          - SECONDS_BATTERY_LEVEL\n          - EVENT_RATE_SECOND\n          - EVENT_RATE_MINUTE\n          - HEART_RATE\n          - HEART_BEATS\n          - SIEMENS_PER_METER\n          - LOCATION\n          - COLOR_HSB\n          - COLOR_RGB\n          - GENERIC_COMPLEX_PROPERTY\n          - HOME_COLORED_LIGHT\n          - HOME_DIMMED_LIGHT\n          - HOME_LIGHT\n          - HOME_CONTACT_SENSOR\n          - HOME_MOTION_SENSOR\n          - HOME_SMART_PLUG\n          - HOME_TEMPERATURE\n          - HOME_TEMPERATURE_C\n          - HOME_TEMPERATURE_F\n          - HOME_SWITCH\n          - HOME_TELEVISION\n          - ENERGY\n          - FORCE\n          - TEMPERATURE\n          - POWER\n          - ELECTRIC_CURRENT\n          - ELECTRIC_POTENTIAL\n          - ELECTRICAL_RESISTANCE\n          - CAPACITANCE\n          - TIME\n          - FREQUENCY\n          - DATA_RATE\n          - ACCELERATION\n          - AREA\n          - LENGTH\n          - VELOCITY\n          - MASS\n          - VOLUME\n          - FLOW_RATE\n          - ANGLE\n          - ILLUMINANCE\n          - LUMINOUS_FLUX\n          - LUMINANCE\n          - LUMINOUS_INTENSITY\n          - LOGARITHMIC_QUANTITY\n          - PRESSURE\n          - INFORMATION_CONTENT\n          - SCHEDULE\n          type: string\n        update_parameter:\n          description: The update frequency in seconds, or the amount of the property has to change in order to trigger an update\n          format: double\n          type: number\n        update_strategy:\n          description: The update strategy for the property value\n          enum:\n          - ON_CHANGE\n          - TIMED\n          type: string\n        variable_name:\n          description: The  sketch variable name of the property\n          maxLength: 64\n          pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$\n          type: string\n      required:\n      - name\n      - type\n      - permission\n      - update_strategy\n      title: property\n      type: object\n    propertyValue:\n      description: PropertyValuePayload describes a property value\n      properties:\n        device_id:\n          description: The device who send the property\n          format: uuid\n          type: string\n        value:\n          description: The property value\n      required:\n      - value\n      title: propertyValue\n      type: object\n    sharerequest:\n      properties:\n        message:\n          description: The message the user want to send to the dashboard owner\n          type: string\n      title: sharerequest\n      type: object\n    tag:\n      properties:\n        key:\n          description: Key of the tag\n          maxLength: 64\n          pattern: ^[a-zA-Z0-9_.@-]+$\n          type: string\n        value:\n          description: Value of the tag\n          maxLength: 64\n          pattern: ^[a-zA-Z0-9_.@-]+$\n          type: string\n      required:\n      - key\n      - value\n      title: tag\n      type: object\n    thingSketch:\n      description: ThingSketchPayload describes a sketch of a thing\n      properties:\n        sketch_version:\n          description: The autogenerated sketch version\n          enum:\n          - v1\n          - v2\n          type: string\n      title: thingSketch\n      type: object\n    thingUpdate:\n      description: Payload to update an existing thing\n      properties:\n        device_id:\n          description: The arn of the associated device\n          format: uuid\n          type: string\n        id:\n          description: The id of the thing\n          format: uuid\n          type: string\n        name:\n          description: The friendly name of the thing\n          maxLength: 64\n          pattern: ^[a-zA-Z0-9_.@ -]+$\n          type: string\n        properties:\n          description: The properties of the thing\n          items:\n            $ref: '#/components/schemas/property'\n          type: array\n        timezone:\n          description: |-\n            A time zone name.\n            Check /v2/timezones for a list of valid names.\n          type: string\n        webhook_active:\n          description: Webhook uri\n          type: boolean\n        webhook_uri:\n          description: Webhook uri\n          type: string\n      title: thingUpdate\n      type: object\n    updateSketch:\n      properties:\n        sketch_version:\n          description: The autogenerated sketch version\n          enum:\n          - v1\n          - v2\n          type: string\n      title: updateSketch\n      type: object\n    widget:\n      description: Widget describes a dashboard widget\n      properties:\n        height:\n          description: Widget current height for desktop\n          format: int64\n          type: integer\n        height_mobile:\n          description: Widget current height for mobile\n          format: int64\n          type: integer\n        id:\n          description: The UUID of the widget, set by client\n          format: uuid\n          type: string\n        name:\n          description: The name of the widget\n          type: string\n        options:\n          additionalProperties: true\n          description: Widget options\n          type: object\n        type:\n          description: The type of the widget\n          type: string\n        variables:\n          items:\n            format: uuid\n            type: string\n          type: array\n        width:\n          description: Widget current width for desktop\n          format: int64\n          type: integer\n        width_mobile:\n          description: Widget current width for mobile\n          format: int64\n          type: integer\n        x:\n          description: Widget x position for desktop\n          format: int64\n          type: integer\n        x_mobile:\n          description: Widget x position for mobile\n          format: int64\n          type: integer\n        \"y\":\n          description: Widget y position for desktop\n          format: int64\n          type: integer\n        y_mobile:\n          description: Widget y position for mobile\n          format: int64\n          type: integer\n      required:\n      - id\n      - type\n      - width\n      - height\n      - x\n      - \"y\"\n      - options\n      title: widget\n      type: object\n    widgetlink:\n      properties:\n        variables:\n          items:\n            format: uuid\n            type: string\n          type: array\n      title: widgetlink\n      type: object\ninfo:\n  description: |2-\n\n    Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:\n\n    * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)\n\n    * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)\n\n    * [Golang Module](https://github.com/arduino/iot-client-go)\n  title: Arduino IoT Cloud API\n  version: \"2.0\"\nopenapi: 3.0.3\npaths:\n  /v1/lora-devices/:\n    put:\n      description: Create a new lora device. Its info are saved on our database, and on the lora provider network. Creates a device_v2 automatically\n      operationId: lora_devices_v1#create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateLoraDevicesV1Payload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateLoraDevicesV1Payload'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoLoradevicev1'\n          description: Created\n      summary: create lora_devices_v1\n      tags:\n      - lora_devices_v1\n  /v1/lora-freq-plans/:\n    get:\n      description: List the lora frequency plans supported\n      operationId: lora_freq_plan_v1#list\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoLorafreqplansv1'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: list lora_freq_plan_v1\n      tags:\n      - lora_freq_plan_v1\n  /v2/dashboards:\n    get:\n      description: Returns the list of dashboards\n      operationId: dashboards_v2#list\n      parameters:\n      - description: The name of the dashboard\n        in: query\n        name: name\n        schema:\n          maxLength: 64\n          pattern: '[a-zA-Z0-9_.@-]+'\n          type: string\n      - description: The user_id of the dashboard's owner\n        in: query\n        name: user_id\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDashboardv2Collection'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: list dashboards_v2\n      tags:\n      - dashboards_v2\n    post:\n      description: Create a new dashboard\n      operationId: dashboards_v2#create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/dashboardv2'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/dashboardv2'\n        description: DashboardV2Payload describes a dashboard\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDashboardv2'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: create dashboards_v2\n      tags:\n      - dashboards_v2\n  /v2/dashboards/{id}:\n    delete:\n      description: Delete a dashboard\n      operationId: dashboards_v2#delete\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: delete dashboards_v2\n      tags:\n      - dashboards_v2\n    get:\n      description: Show a dashboard\n      operationId: dashboards_v2#show\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDashboardv2'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: show dashboards_v2\n      tags:\n      - dashboards_v2\n    put:\n      description: Updates an existing dashboard\n      operationId: dashboards_v2#update\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/dashboardv2'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/dashboardv2'\n        description: DashboardV2Payload describes a dashboard\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDashboardv2'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: update dashboards_v2\n      tags:\n      - dashboards_v2\n  /v2/dashboards/{id}/share_request:\n    put:\n      description: Request access to a dashboard\n      operationId: dashboards_v2#requestAccess\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/sharerequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/sharerequest'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: requestAccess dashboards_v2\n      tags:\n      - dashboards_v2\n  /v2/dashboards/{id}/shares:\n    get:\n      description: List of users the dashboard has been shared with\n      operationId: dashboards_v2#listShares\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDashboardshareCollection'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: listShares dashboards_v2\n      tags:\n      - dashboards_v2\n    put:\n      description: Share a dashboard\n      operationId: dashboards_v2#share\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/dashboardshare'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/dashboardshare'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: share dashboards_v2\n      tags:\n      - dashboards_v2\n  /v2/dashboards/{id}/shares/{user_id}:\n    delete:\n      description: Delete a user the dashboard has been shared with\n      operationId: dashboards_v2#deleteShare\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the user\n        in: path\n        name: user_id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: deleteShare dashboards_v2\n      tags:\n      - dashboards_v2\n  /v2/dashboards/{id}/widgets/{widgetId}/variables:\n    put:\n      description: Link or detach widget variables\n      operationId: dashboards_v2#link\n      parameters:\n      - description: The id of the dashboard\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the widget\n        in: path\n        name: widgetId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/widgetlink'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/widgetlink'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoVariableslinks'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      summary: link dashboards_v2\n      tags:\n      - dashboards_v2\n  /v2/devices:\n    get:\n      description: Returns the list of devices associated to the user\n      operationId: devices_v2#list\n      parameters:\n      - description: If true, returns all the devices\n        in: query\n        name: across_user_ids\n        schema:\n          default: false\n          type: boolean\n      - description: Filter by device serial number\n        in: query\n        name: serial\n        schema:\n          type: string\n      - description: Filter by tags\n        in: query\n        name: tags\n        schema:\n          items:\n            maxLength: 129\n            pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$\n            type: string\n          type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2Collection'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: list devices_v2\n      tags:\n      - devices_v2\n    put:\n      description: Creates a new device associated to the user.\n      operationId: devices_v2#create\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDevicesV2Payload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateDevicesV2Payload'\n        description: DeviceV2 describes a device.\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2'\n          description: Created\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: create devices_v2\n      tags:\n      - devices_v2\n  /v2/devices/{id}:\n    delete:\n      description: Removes a device associated to the user\n      operationId: devices_v2#delete\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete devices_v2\n      tags:\n      - devices_v2\n    get:\n      description: Returns the device requested by the user\n      operationId: devices_v2#show\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: show devices_v2\n      tags:\n      - devices_v2\n    post:\n      description: Updates a device associated to the user\n      operationId: devices_v2#update\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/devicev2'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/devicev2'\n        description: DeviceV2 describes a device.\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: update devices_v2\n      tags:\n      - devices_v2\n  /v2/devices/{id}/certs:\n    get:\n      description: Returns the list of certs associated to the device\n      operationId: devices_v2_certs#list\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2CertCollection'\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: list devices_v2_certs\n      tags:\n      - devices_v2_certs\n    put:\n      description: Creates a new cert associated to a device. The csr is signed and saved in database. The CommonName will be replaced with the device id.\n      operationId: devices_v2_certs#create\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDevicesV2CertsPayload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateDevicesV2CertsPayload'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2Cert'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: create devices_v2_certs\n      tags:\n      - devices_v2_certs\n  /v2/devices/{id}/certs/{cid}:\n    delete:\n      description: Removes a cert associated to a device\n      operationId: devices_v2_certs#delete\n      parameters:\n      - description: The id of the cert\n        in: path\n        name: cid\n        required: true\n        schema:\n          type: string\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete devices_v2_certs\n      tags:\n      - devices_v2_certs\n    get:\n      description: Returns the cert requested by the user\n      operationId: devices_v2_certs#show\n      parameters:\n      - description: The id of the cert\n        in: path\n        name: cid\n        required: true\n        schema:\n          type: string\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2Cert'\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: show devices_v2_certs\n      tags:\n      - devices_v2_certs\n    post:\n      description: Updates a cert associated to a device. The csr is signed and saved in database. The CommonName will be replaced with the device id.\n      operationId: devices_v2_certs#update\n      parameters:\n      - description: The id of the cert\n        in: path\n        name: cid\n        required: true\n        schema:\n          type: string\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/devicev2.cert'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/devicev2.cert'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2Cert'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: update devices_v2_certs\n      tags:\n      - devices_v2_certs\n  /v2/devices/{id}/events:\n    get:\n      description: GET device events\n      operationId: devices_v2#getEvents\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The number of events to select\n        in: query\n        name: limit\n        schema:\n          type: integer\n      - description: The time at which to start selecting events\n        in: query\n        name: start\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2EventProperties'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Service Unavailable\n      security:\n      - oauth2: []\n      summary: getEvents devices_v2\n      tags:\n      - devices_v2\n  /v2/devices/{id}/ota:\n    post:\n      description: Upload a binary and send it to a device\n      operationId: devices_v2_ota#upload\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                async:\n                  default: true\n                  description: If false, wait for the full OTA process, until it gets a result from the device\n                  type: boolean\n                  x-formData-name: async\n                expire_in_mins:\n                  default: 10\n                  description: Binary expire time in minutes, default 10 mins\n                  type: integer\n                  x-formData-name: expire_in_mins\n                ota_file:\n                  description: OTA file\n                  format: binary\n                  required:\n                  - ota_file\n                  type: string\n                  x-formData-name: ota_file\n              required:\n              - ota_file\n              type: object\n      responses:\n        \"200\":\n          description: OK\n        \"202\":\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Not Found\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Gone\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: upload devices_v2_ota\n      tags:\n      - devices_v2_ota\n    put:\n      description: Send a binary url to a device\n      operationId: devices_v2_ota#send\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/devicev2.otabinaryurl'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/devicev2.otabinaryurl'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"202\":\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Not Found\n        \"410\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Gone\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: send devices_v2_ota\n      tags:\n      - devices_v2_ota\n  /v2/devices/{id}/pass:\n    delete:\n      description: Removes the password for the device.\n      operationId: devices_v2_pass#delete\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete devices_v2_pass\n      tags:\n      - devices_v2_pass\n    get:\n      description: Returns whether the password for this device is set or not. It doesn't return the password.\n      operationId: devices_v2_pass#get\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: If true, return a suggested password\n        in: query\n        name: suggested_password\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2Pass'\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: get devices_v2_pass\n      tags:\n      - devices_v2_pass\n    post:\n      description: Check if the password matches.\n      operationId: devices_v2_pass#check\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckDevicesV2PassPayload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CheckDevicesV2PassPayload'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: check devices_v2_pass\n      tags:\n      - devices_v2_pass\n    put:\n      description: Sets the password for the device. It can never be read back.\n      operationId: devices_v2_pass#set\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/devicev2.pass'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/devicev2.pass'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2Pass'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: set devices_v2_pass\n      tags:\n      - devices_v2_pass\n  /v2/devices/{id}/properties:\n    get:\n      description: GET device properties\n      operationId: devices_v2#getProperties\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: If true, shows the soft deleted properties\n        in: query\n        name: show_deleted\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2properties'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: getProperties devices_v2\n      tags:\n      - devices_v2\n    put:\n      description: Update device properties last values\n      operationId: devices_v2#updateProperties\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/propertiesValues'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/propertiesValues'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: updateProperties devices_v2\n      tags:\n      - devices_v2\n  /v2/devices/{id}/properties/{pid}:\n    get:\n      description: GET device properties values in a range of time\n      operationId: devices_v2#timeseries\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The number of properties to select\n        in: query\n        name: limit\n        schema:\n          type: integer\n      - description: The id of the property\n        in: path\n        name: pid\n        required: true\n        schema:\n          type: string\n      - description: The time at which to start selecting properties\n        in: query\n        name: start\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoDevicev2propertyvalues'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: timeseries devices_v2\n      tags:\n      - devices_v2\n  /v2/devices/{id}/tags:\n    get:\n      description: List tags associated to the device.\n      operationId: devices_v2_tags#list\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoTags'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: list devices_v2_tags\n      tags:\n      - devices_v2_tags\n    put:\n      description: Creates or updates a tag associated to the device.\n      operationId: devices_v2_tags#upsert\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/tag'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: upsert devices_v2_tags\n      tags:\n      - devices_v2_tags\n  /v2/devices/{id}/tags/{key}:\n    delete:\n      description: Delete a tag associated to the device given its key.\n      operationId: devices_v2_tags#delete\n      parameters:\n      - description: The id of the device\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The key of the tag\n        in: path\n        name: key\n        required: true\n        schema:\n          maxLength: 64\n          pattern: ^[a-zA-Z0-9_.@-]+$\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete devices_v2_tags\n      tags:\n      - devices_v2_tags\n  /v2/series/batch_query:\n    post:\n      description: Returns the batch of time-series data\n      operationId: series_v2#batch_query\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchQueryRequestsMediaV1'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchQueryRequestsMediaV1'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoSeriesBatch'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"501\":\n          description: Not Implemented\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Service Unavailable\n      security:\n      - oauth2: []\n      summary: batch_query series_v2\n      tags:\n      - series_v2\n  /v2/series/batch_query_raw:\n    post:\n      description: Returns the batch of time-series data raw\n      operationId: series_v2#batch_query_raw\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchQueryRawRequestsMediaV1'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchQueryRawRequestsMediaV1'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoSeriesRawBatch'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"501\":\n          description: Not Implemented\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Service Unavailable\n      security:\n      - oauth2: []\n      summary: batch_query_raw series_v2\n      tags:\n      - series_v2\n  /v2/series/batch_query_raw/lastvalue:\n    post:\n      description: Returns the batch of time-series data raw\n      operationId: series_v2#batch_query_raw_last_value\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchLastValueRequestsMediaV1'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BatchLastValueRequestsMediaV1'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoSeriesRawBatchLastvalue'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"501\":\n          description: Not Implemented\n        \"503\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Service Unavailable\n      security:\n      - oauth2: []\n      summary: batch_query_raw_last_value series_v2\n      tags:\n      - series_v2\n  /v2/series/historic_data:\n    post:\n      description: Request sending of historical data of properties by email\n      operationId: series_v2#historic_data\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HistoricDataRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/HistoricDataRequest'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"202\":\n          description: Accepted\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: historic_data series_v2\n      tags:\n      - series_v2\n  /v2/things:\n    get:\n      description: Returns the list of things associated to the user\n      operationId: things_v2#list\n      parameters:\n      - description: If true, returns all the things\n        in: query\n        name: across_user_ids\n        schema:\n          default: false\n          type: boolean\n      - description: The id of the device you want to filter\n        in: query\n        name: device_id\n        schema:\n          type: string\n      - description: Filter only the desired things\n        in: query\n        name: ids\n        schema:\n          items:\n            type: string\n          type: array\n      - description: If true, shows the soft deleted things\n        in: query\n        name: show_deleted\n        schema:\n          default: false\n          type: boolean\n      - description: If true, returns things with their properties, and last values\n        in: query\n        name: show_properties\n        schema:\n          default: false\n          type: boolean\n      - description: Filter by tags\n        in: query\n        name: tags\n        schema:\n          items:\n            maxLength: 129\n            pattern: ^[a-zA-Z0-9_.@-]+:[a-zA-Z0-9_.@-]+$\n            type: string\n          type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThingCollection'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: list things_v2\n      tags:\n      - things_v2\n    put:\n      description: Creates a new thing associated to the user\n      operationId: things_v2#create\n      parameters:\n      - description: If true, detach device from the other thing, and attach to this thing\n        in: query\n        name: force\n        schema:\n          default: false\n          type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ThingCreate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ThingCreate'\n        description: Payload to create a new thing\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThing'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Conflict\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: create things_v2\n      tags:\n      - things_v2\n  /v2/things/{id}:\n    delete:\n      description: Removes a thing associated to the user\n      operationId: things_v2#delete\n      parameters:\n      - description: If true, hard delete the thing\n        in: query\n        name: force\n        schema:\n          default: false\n          type: boolean\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete things_v2\n      tags:\n      - things_v2\n    get:\n      description: Returns the thing requested by the user\n      operationId: things_v2#show\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: If true, shows the soft deleted thing\n        in: query\n        name: show_deleted\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThing'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: show things_v2\n      tags:\n      - things_v2\n    post:\n      description: Updates a thing associated to the user\n      operationId: things_v2#update\n      parameters:\n      - description: If true, detach device from the other thing, and attach to this thing\n        in: query\n        name: force\n        schema:\n          default: false\n          type: boolean\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/thingUpdate'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/thingUpdate'\n        description: Payload to update an existing thing\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThing'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Conflict\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: update things_v2\n      tags:\n      - things_v2\n  /v2/things/{id}/properties:\n    get:\n      description: Returns the list of properties associated to the thing\n      operationId: properties_v2#list\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: If true, shows the soft deleted properties\n        in: query\n        name: show_deleted\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoPropertyCollection'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: list properties_v2\n      tags:\n      - properties_v2\n    put:\n      description: Creates a new property associated to a thing\n      operationId: properties_v2#create\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/property'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/property'\n        description: PropertyPayload describes a property of a thing. No field is mandatory\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoProperty'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: create properties_v2\n      tags:\n      - properties_v2\n  /v2/things/{id}/properties/{pid}:\n    delete:\n      description: Removes a property associated to a thing\n      operationId: properties_v2#delete\n      parameters:\n      - description: If true, hard delete the property\n        in: query\n        name: force\n        schema:\n          default: false\n          type: boolean\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the property\n        in: path\n        name: pid\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete properties_v2\n      tags:\n      - properties_v2\n    get:\n      description: Returns the property requested by the user\n      operationId: properties_v2#show\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the property\n        in: path\n        name: pid\n        required: true\n        schema:\n          type: string\n      - description: If true, shows the soft deleted properties\n        in: query\n        name: show_deleted\n        schema:\n          default: false\n          type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoProperty'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: show properties_v2\n      tags:\n      - properties_v2\n    post:\n      description: Updates a property associated to a thing\n      operationId: properties_v2#update\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the property\n        in: path\n        name: pid\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/property'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/property'\n        description: PropertyPayload describes a property of a thing. No field is mandatory\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoProperty'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: update properties_v2\n      tags:\n      - properties_v2\n  /v2/things/{id}/properties/{pid}/publish:\n    put:\n      description: Publish a property value to MQTT\n      operationId: properties_v2#publish\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the property\n        in: path\n        name: pid\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/propertyValue'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/propertyValue'\n        description: PropertyValuePayload describes a property value\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: publish properties_v2\n      tags:\n      - properties_v2\n  /v2/things/{id}/properties/{pid}/timeseries:\n    get:\n      description: 'Get numerical property''s historic data binned on a specified time interval (note: the total number of data points should NOT be greater than 1000 otherwise the result will be truncated)'\n      operationId: properties_v2#timeseries\n      parameters:\n      - description: Whether data's ordering (by time) should be descending\n        in: query\n        name: desc\n        schema:\n          default: false\n          type: boolean\n      - description: 'Get data with a timestamp \u003e= to this date (default: 2 weeks ago, min: 1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'\n        in: query\n        name: from\n        schema:\n          type: string\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: 'Binning interval in seconds (defaut: the smallest possible value compatibly with the limit of 1000 data points in the response)'\n        in: query\n        name: interval\n        schema:\n          minimum: 1\n          type: integer\n      - description: ID of a numerical property\n        in: path\n        name: pid\n        required: true\n        schema:\n          type: string\n      - description: 'Get data with a timestamp \u003c to this date (default: now, min: 1842-01-01T00:00:00Z, max: 2242-01-01T00:00:00Z)'\n        in: query\n        name: to\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoTimeseriesmedia'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: timeseries properties_v2\n      tags:\n      - properties_v2\n  /v2/things/{id}/sketch:\n    delete:\n      operationId: things_v2#deleteSketch\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThing'\n          description: OK\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: deleteSketch things_v2\n      tags:\n      - things_v2\n    put:\n      description: Creates a new sketch thing associated to the thing\n      operationId: things_v2#createSketch\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/thingSketch'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/thingSketch'\n        description: ThingSketchPayload describes a sketch of a thing\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThing'\n          description: Created\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Not Found\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: createSketch things_v2\n      tags:\n      - things_v2\n  /v2/things/{id}/sketch/{sketchId}:\n    put:\n      description: Update an existing thing sketch\n      operationId: things_v2#updateSketch\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The id of the sketch\n        in: path\n        name: sketchId\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/updateSketch'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/updateSketch'\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoThing'\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Not Found\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Precondition Failed\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: updateSketch things_v2\n      tags:\n      - things_v2\n  /v2/things/{id}/tags:\n    get:\n      description: List tags associated to the thing.\n      operationId: things_v2_tags#list\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArduinoTags'\n          description: OK\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: list things_v2_tags\n      tags:\n      - things_v2_tags\n    put:\n      description: Creates or updates a tag associated to the thing.\n      operationId: things_v2_tags#upsert\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/tag'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/tag'\n        required: true\n        x-originalParamName: payload\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: upsert things_v2_tags\n      tags:\n      - things_v2_tags\n  /v2/things/{id}/tags/{key}:\n    delete:\n      description: Delete a tag associated to the thing given its key.\n      operationId: things_v2_tags#delete\n      parameters:\n      - description: The id of the thing\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n      - description: The key of the tag\n        in: path\n        name: key\n        required: true\n        schema:\n          maxLength: 64\n          type: string\n      responses:\n        \"200\":\n          description: OK\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Unauthorized\n        \"500\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n          description: Internal Server Error\n      security:\n      - oauth2: []\n      summary: delete things_v2_tags\n      tags:\n      - things_v2_tags\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v2/devices/{id}: get: operation \"devices_v2#show\": security: unknown security schema \"oauth2\""
}