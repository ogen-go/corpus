{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aerokube/selenium-openapi"
		},
		"file": {
			"name": "selenium.yaml",
			"path": "selenium.yaml",
			"content": "openapi: 3.0.2\ninfo:\n  title: Selenium WebDriver\n  description: '[Selenium WebDriver](https://www.w3.org/TR/webdriver) API specification'\n  version: 1.0.0\n  contact:\n    email: support@aerokube.com\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0.html\nservers:\n  - url: '{protocol}://{host}:{port}{path}'\n    description: Selenium WebDriver API\n    variables:\n      protocol:\n        enum:\n          - http\n          - https\n        default: http\n      host:\n        default: localhost\n        description: Selenium host name\n      port:\n        description: Selenium port number\n        enum:\n          - '4444'\n          - '4445'\n        default: '4444'\n      path:\n        description: Selenium API base path\n        enum:\n          - '/wd/hub'\n          - '/'\n        default: '/wd/hub'\ntags:\n  - name: sessions\n    description: Commands to start, stop a session and adjust its settings\n  - name: timeouts\n    description: Commands to start, stop a session and adjust its settings\n  - name: navigation\n    description: Navigation commands\n  - name: contexts\n    description: Command contexts\n  - name: elements\n    description: Commands to work with page elements\n  - name: document\n    description: Document handling commands like getting page source\n  - name: cookies\n    description: Commands to work with cookies\n  - name: actions\n    description: Actions like clicking on the buttons, moving the mouse and so on\n  - name: prompts\n    description: Commands to work with alerts\n  - name: print\n    description: Printing commands\n  - name: screenshots\n    description: Commands to take screenshots\n  - name: mozilla\n    description: Commands specific to Mozilla Firefox\n  - name: aerokube\n    description: Commands specific to Selenoid and Moon\ncomponents:\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n  schemas:\n    StatusResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            ready:\n              type: boolean\n            message:\n              type: string\n          required:\n            - ready\n            - message\n      required:\n        - value\n    EmptyResponse:\n      type: object\n      properties:\n        value:\n          description: \"Always null value\"\n          type: string\n          nullable: true\n    StringResponse:\n      type: object\n      properties:\n        value:\n          type: string\n      required:\n        - value\n    NullableStringResponse:\n      type: object\n      properties:\n        value:\n          description: \"String that can sometimes have null value\"\n          type: string\n          nullable: true\n    BooleanResponse:\n      type: object\n      properties:\n        value:\n          type: boolean\n      required:\n        - value\n    ArrayResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: string\n      required:\n        - value\n    ErrorCode:\n      type: string\n      enum:\n        - \"element click intercepted\"\n        - \"element not interactable\"\n        - \"insecure certificate\"\n        - \"invalid argument\"\n        - \"invalid cookie domain\"\n        - \"invalid element state\"\n        - \"invalid selector\"\n        - \"invalid session id\"\n        - \"javascript error\"\n        - \"move target out of bounds\"\n        - \"no such alert\"\n        - \"no such cookie\"\n        - \"no such element\"\n        - \"no such frame\"\n        - \"no such window\"\n        - \"script timeout\"\n        - \"session not created\"\n        - \"stale element reference\"\n        - \"timeout\"\n        - \"unable to set cookie\"\n        - \"unable to capture screen\"\n        - \"unexpected alert open\"\n        - \"unknown command\"\n        - \"unknown error\"\n        - \"unknown method\"\n        - \"unsupported operation\"\n    ErrorResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            error:\n              $ref: '#/components/schemas/ErrorCode'\n            message:\n              type: string\n            stacktrace:\n              type: string\n            data:\n              type: object\n              additionalProperties:\n                type: object\n          required:\n            - error\n            - message\n            - stacktrace\n      required:\n        - value\n    Proxy:\n      type: object\n      properties:\n        proxyType:\n          type: string\n          enum: [pac, direct, autodetect, system, manual]\n        proxyAutoconfigUrl:\n          type: string\n        ftpProxy:\n          type: string\n        httpProxy:\n          type: string\n        noProxy:\n          type: array\n          items:\n            type: string\n        sslProxy:\n          type: string\n        socksProxy:\n          type: string\n        socksVersion:\n          type: integer\n          minimum: 0\n          maximum: 255\n      required:\n        - proxyType\n    Capabilities:\n      type: object\n      additionalProperties:\n        type: object\n      properties:\n        browserName:\n          type: string\n        browserVersion:\n          type: string\n        platformName:\n          type: string\n        acceptInsecureCerts:\n          type: boolean\n        pageLoadStrategy:\n          type: string\n          enum: [none, eager, normal]\n        proxy:\n          $ref: '#/components/schemas/Proxy'\n        setWindowRect:\n          type: boolean\n        timeouts:\n          $ref: '#/components/schemas/Timeouts'\n        strictFileInteractability:\n          type: boolean\n        unhandledPromptBehavior:\n          type: string\n          enum: [\"dismiss\", \"accept\", \"dismiss and notify\", \"accept and notify\", \"ignore\"]\n        'goog:loggingPrefs':\n          $ref: '#/components/schemas/LoggingPrefs'\n        'goog:chromeOptions':\n          $ref: '#/components/schemas/ChromeOptions'\n        'moon:options':\n          $ref: '#/components/schemas/MoonOptions'\n        'moz:firefoxOptions':\n          $ref: '#/components/schemas/FirefoxOptions'\n        'ms:edgeOptions':\n          $ref: '#/components/schemas/EdgeOptions'\n        operaOptions:\n          $ref: '#/components/schemas/EdgeOptions'\n        'selenoid:options':\n          $ref: '#/components/schemas/SelenoidOptions'\n        'safari:automaticInspection':\n          type: boolean\n        'safari:automaticProfiling':\n          type: boolean\n    PreferenceValue:\n      oneOf:\n        - type: boolean\n        - type: integer\n        - type: string\n    FirefoxOptions:\n      type: object\n      properties:\n        androidPackage:\n          type: string\n        androidActivity:\n          type: string\n        androidDeviceSerial:\n          type: string\n        androidIntentArguments:\n          type: array\n          items:\n            type: string\n        args:\n          type: array\n          items:\n            type: string\n        binary:\n          type: string\n        env:\n          type: object\n          additionalProperties:\n            type: string\n        log:\n          type: object\n          properties:\n            level:\n              type: string\n              enum: [trace, debug, config, info, warn, error, fatal]\n          required:\n            - level\n        prefs:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/PreferenceValue'\n        profile:\n          type: string\n    AddonInstallRequest:\n      type: object\n      properties:\n        # There is also \"path\" parameter for installing extension from local file (we consider it useless)\n        addon:\n          type: string\n        temporary:\n          type: boolean\n          description: temporarily installed extension will be removed at the end of browser session\n          default: true\n      required:\n        - addon\n    AddonUninstallRequest:\n      type: object\n      properties:\n        id:\n          type: string\n      required:\n        - id\n    FirefoxContext:\n      type: string\n      enum: [content, chrome]\n    ContextRequest:\n      type: object\n      properties:\n        context:\n          $ref: '#/components/schemas/FirefoxContext'\n      required:\n        - context\n    MobileEmulation:\n      type: object\n      properties:\n        deviceName:\n          type: string\n        deviceMetrics:\n          type: object\n          properties:\n            width:\n              type: integer\n              minimum: 0\n            height:\n              type: integer\n              minimum: 0\n            pixelRatio:\n              type: number\n              format: float\n              minimum: 0.1\n            touch:\n              type: boolean\n              default: true\n          required:\n            - width\n            - height\n            - pixelRatio\n            - touch\n        userAgent:\n          type: string\n    LogType:\n      type: string\n      enum: [ 'browser', 'client', 'driver', 'performance', 'profiler', 'server' ]\n    LogLevel:\n      type: string\n      enum: [ 'OFF', 'SEVERE', 'WARNING', 'INFO', 'CONFIG', 'FINE', 'FINER', 'FINEST', 'ALL' ]\n    LoggingPrefs:\n      type: object\n      properties:\n        browser:\n          $ref: '#/components/schemas/LogLevel'\n        client:\n          $ref: '#/components/schemas/LogLevel'\n        driver:\n          $ref: '#/components/schemas/LogLevel'\n        performance:\n          $ref: '#/components/schemas/LogLevel'\n        profiler:\n          $ref: '#/components/schemas/LogLevel'\n        server:\n          $ref: '#/components/schemas/LogLevel'\n    PerfLoggingPrefs:\n      type: object\n      properties:\n        enableNetwork:\n          type: boolean\n          default: true\n        enablePage:\n          type: boolean\n          default: true\n        traceCategories:\n          type: string\n        bufferUsageReportingInterval:\n          type: integer\n          format: int64\n          default: 1000\n    ChromeOptions:\n      type: object\n      properties:\n        args:\n          type: array\n          items:\n            type: string\n        binary:\n          type: string\n        debuggerAddress:\n          type: string\n        detach:\n          type: boolean\n        excludeSwitches:\n          type: array\n          items:\n            type: string\n        extensions:\n          type: array\n          items:\n            type: string\n        localState:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/PreferenceValue'\n        minidumpPath:\n          type: string\n        mobileEmulation:\n          $ref: '#/components/schemas/MobileEmulation'\n        perfLoggingPrefs:\n          $ref: '#/components/schemas/PerfLoggingPrefs'\n        prefs:\n          type: array\n          items:\n            $ref: '#/components/schemas/PreferenceValue'\n        windowTypes:\n          type: array\n          items:\n            type: string\n    OperaOptions:\n      type: object\n      properties:\n        args:\n          type: array\n          items:\n            type: string\n        binary:\n          type: string\n        extensions:\n          type: array\n          items:\n            type: string\n    EdgeOptions:\n      type: object\n      properties:\n        args:\n          type: array\n          items:\n            type: string\n        binary:\n          type: string\n        extensions:\n          type: array\n          items:\n            type: string\n    SelenoidOptions:\n      type: object\n      properties:\n        enableLog:\n          type: boolean\n        enableVideo:\n          type: boolean\n        enableVNC:\n          type: boolean\n        env:\n          type: array\n          items:\n            type: string\n        logName:\n          type: string\n        name:\n          type: string\n        s3KeyPattern:\n          type: string\n        sessionTimeout:\n          type: string\n        screenResolution:\n          type: string\n          description: Screen resolution in format 1920x1080x32 or 1920x1080\n        timeZone:\n          type: string\n          description: Time zone value like Europe/Moscow\n        videoFrameRate:\n          type: integer\n          format: int64\n        videoName:\n          type: string\n        videoScreenSize:\n          type: string\n          description: Video screen size in format 1920x1080\n    MoonMobileDevice:\n      type: object\n      properties:\n        deviceName:\n          type: string\n        orientation:\n          enum: [portrait, landscape]\n          default: portrait\n      required:\n        - deviceName\n    MoonOptions:\n      type: object\n      properties:\n        enableVNC:\n          type: boolean\n        env:\n          type: array\n          items:\n            type: string\n        logName:\n          type: string\n        mobileDevice:\n          $ref: '#/components/schemas/MoonMobileDevice'\n        name:\n          type: string\n        s3KeyPattern:\n          type: string\n        sessionTimeout:\n          type: string\n        screenResolution:\n          type: string\n          description: Screen resolution in format 1920x1080x32 or 1920x1080\n        timeZone:\n          type: string\n          description: Time zone value like Europe/Moscow\n        videoFrameRate:\n          type: integer\n          format: int64\n        videoName:\n          type: string\n        videoScreenSize:\n          type: string\n          description: Video screen size in format 1920x1080\n    NewSessionRequest:\n      type: object\n      properties:\n        capabilities:\n          type: object\n          properties:\n            alwaysMatch:\n              $ref: '#/components/schemas/Capabilities'\n            firstMatch:\n              type: array\n              items:\n                $ref: '#/components/schemas/Capabilities'\n      required:\n        - capabilities\n    NewSessionResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            sessionId:\n              type: string\n            capabilities:\n              $ref: '#/components/schemas/Capabilities'\n          required:\n            - sessionId\n            - capabilities\n      required:\n        - value\n    Timeouts:\n      type: object\n      properties:\n        script:\n          type: integer\n          format: int64\n          nullable: true\n        pageLoad:\n          type: integer\n          format: int64\n        implicit:\n          type: integer\n          format: int64\n    TimeoutsResponse:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Timeouts'\n      required:\n        - value\n    UrlRequest:\n      type: object\n      properties:\n        url:\n          type: string\n      required:\n        - url\n    EmptyRequest:\n      type: object\n      additionalProperties:\n        type: object\n    AnyValue: {}\n    ScriptRequest:\n      type: object\n      properties:\n        script:\n          type: string\n        args:\n          type: array\n          items:\n            $ref: '#/components/schemas/AnyValue'\n    FileUploadRequest:\n      type: object\n      properties:\n        file:\n          type: string\n    FileUploadResponse:\n      type: object\n      properties:\n        value:\n          type: string\n      required:\n        - value\n    AnyResponse:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/AnyValue'\n      required:\n        - value\n    Cookie:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        path:\n          type: string\n        domain:\n          type: string\n        secure:\n          type: boolean\n        httpOnly:\n          type: boolean\n        expiry:\n          type: integer\n          format: int64\n        sameSite:\n          type: string\n          enum: [None, Lax, Strict]\n      required:\n        - name\n        - value\n        - path\n        - domain\n        - secure\n        - httpOnly\n        - sameSite\n    CookiesResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Cookie'\n      required:\n        - value\n    CookieRequest:\n      type: object\n      properties:\n        cookie:\n          $ref: '#/components/schemas/Cookie'\n      required:\n        - cookie\n    CookieResponse:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Cookie'\n      required:\n        - value\n    SwitchToWindowRequest:\n      type: object\n      properties:\n        handle:\n          type: string\n      required:\n        - handle\n    SwitchToFrameRequest:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/FrameId'\n    FrameId:\n      nullable: true\n      oneOf:\n        - type: integer\n        - $ref: '#/components/schemas/WebElement'\n    WebElement:\n      type: object\n      properties:\n        element-6066-11e4-a52e-4f735466cecf: # Such identifier is hard-coded to spec\n          type: string\n      required:\n        - element-6066-11e4-a52e-4f735466cecf\n    GetWindowHandlesResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: string\n      required:\n        - value\n    NewWindowRequest:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [tab, window]\n      required:\n        - type\n    NewWindowResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            handle:\n              type: string\n            type:\n              type: string\n              enum: [tab, window]\n          required:\n            - handle\n            - type\n      required:\n        - value\n    Rect:\n      type: object\n      properties:\n        x:\n          type: number\n          format: float\n          minimum: 0\n        y:\n          type: number\n          format: float\n          minimum: 0\n        width:\n          type: number\n          format: float\n          minimum: 0\n        height:\n          type: number\n          format: float\n          minimum: 0\n      required:\n        - x\n        - 'y'\n        - width\n        - height\n    RectResponse:\n      type: object\n      properties:\n        value:\n          $ref: '#/components/schemas/Rect'\n      required:\n        - value\n    LocatorStrategy:\n      type: string\n      enum: [\"css selector\", \"link text\", \"partial link text\", \"tag name\", \"xpath\"]\n      description: \"Locator strategy\"\n    FindElementRequest:\n      type: object\n      properties:\n        using:\n          $ref: '#/components/schemas/LocatorStrategy'\n        value:\n          type: string\n          description: \"Selector value\"\n      required:\n        - using\n        - value\n    FindElementResponse:\n      type: object\n      properties:\n        value:\n          type: object\n          properties:\n            element-6066-11e4-a52e-4f735466cecf:\n              type: string\n              description: \"Web element identifier\"\n      required:\n        - value\n    FindElementsResponse:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            type: object\n            properties:\n              element-6066-11e4-a52e-4f735466cecf:\n                type: string\n                description: \"Web element identifier\"\n          description: \"A list of web element identifiers\"\n      required:\n        - value\n    ElementSendKeysRequest:\n      type: object\n      properties:\n        text:\n          type: string\n          description: \"Text to send to element\"\n      required:\n        - text\n    Action:\n      type: object\n      properties:\n        type:\n          type: string\n          enum: [pause, keyDown, keyUp, pointerDown, pointerUp, pointerMove, pointerCancel, scroll]\n        value:\n          type: string\n        button:\n          type: integer\n          enum: [0, 1, 2]\n          description: \"Possible values: `0` - left button, `1` - middle button, `2` - right button\"\n        duration:\n          type: integer\n        x:\n          type: integer\n        y:\n          type: integer\n        origin:\n          type: object\n          additionalProperties:\n            type: string\n    ActionSequence:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n          enum: [key, pointer, wheel, none]\n        parameters:\n          type: object\n          properties:\n            pointerType:\n              type: string\n              enum: [mouse, pen, touch]\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Action'\n    ActionsRequest:\n      type: object\n      properties:\n        actions:\n          type: array\n          items:\n            $ref: '#/components/schemas/ActionSequence'\n          description: \"A list of actions to be performed\"\n      required:\n        - actions\n    SendAlertTextRequest:\n      type: object\n      properties:\n        text:\n          type: string\n      required:\n        - text\n    PrintRequest:\n      type: object\n      properties:\n        options:\n          type: object\n          properties:\n            orientation:\n              type: string\n              enum: [portrait, landscape]\n              default: portrait\n            scale:\n              type: number\n              format: float\n              minimum: 0.1\n              maximum: 2.0\n              default: 1.0\n            background:\n              type: boolean\n              default: false\n              description: print page background\n            page:\n              type: object\n              properties:\n                width:\n                  type: number\n                  format: float\n                  minimum: 0\n                  default: 21.59\n                height:\n                  type: number\n                  format: float\n                  minimum: 0\n                  default: 27.94\n            margin:\n              type: object\n              properties:\n                top:\n                  type: number\n                  format: float\n                  minimum: 0\n                  default: 1\n                bottom:\n                  type: number\n                  format: float\n                  minimum: 0\n                  default: 1\n                left:\n                  type: number\n                  format: float\n                  minimum: 0\n                  default: 1\n                right:\n                  type: number\n                  format: float\n                  minimum: 0\n                  default: 1\n            shrinkToFit:\n              type: boolean\n              default: true\n            pageRanges:\n              type: array\n              items:\n                type: string\n          required:\n            - orientation\n            - scale\n            - background\n            - page\n            - margin\n            - shrinkToFit\n            - pageRanges\n      required:\n        - options\n    ClipboardData:\n      type: object\n      properties:\n        value:\n          type: string\n        media:\n          type: string\n          enum: ['', 'image/png']\n      required:\n        - value\npaths:\n  /status:\n    get:\n      tags:\n        - sessions\n      summary: Gets Selenium API status information\n      operationId: getStatus\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StatusResponse'\n  /session:\n    post:\n      tags:\n        - sessions\n      summary: Creates new Selenium session\n      security:\n        - BasicAuth: []\n      operationId: createSession\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewSessionRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NewSessionResponse'\n        401:\n          description: invalid username or password\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: session not created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}:\n    delete:\n      tags:\n        - sessions\n      summary: Deletes existing Selenium session\n      operationId: deleteSession\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/timeouts:\n    get:\n      tags:\n        - timeouts\n      summary: Get session timeouts\n      operationId: getTimeouts\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TimeoutsResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - timeouts\n      summary: Adjusts session timeouts\n      operationId: setTimeouts\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Timeouts'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/url:\n    get:\n      tags:\n        - navigation\n      summary: Returns current URL\n      operationId: getCurrentUrl\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - navigation\n      summary: Navigates to URL\n      operationId: navigateTo\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UrlRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: insecure certificate\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/back:\n    post:\n      tags:\n        - navigation\n      summary: Navigates to the previous page\n      operationId: navigateBack\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/forward:\n    post:\n      tags:\n        - navigation\n      summary: Navigates to the next page\n      operationId: navigateForward\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/refresh:\n    post:\n      tags:\n        - navigation\n      summary: Reloads current page\n      operationId: refreshPage\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or timeout\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/title:\n    get:\n      tags:\n        - navigation\n      summary: Returns current page title\n      operationId: getPageTitle\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window:\n    get:\n      tags:\n        - contexts\n      summary: Returns current window handle\n      operationId: getWindowHandle\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - contexts\n      summary: Switches to window\n      operationId: switchToWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SwitchToWindowRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - contexts\n      summary: Closes current window\n      operationId: closeWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWindowHandlesResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/handles:\n    get:\n      tags:\n        - contexts\n      summary: Returns all window handles\n      operationId: getWindowHandles\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetWindowHandlesResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/new:\n    post:\n      tags:\n        - contexts\n      summary: Creates a new window or tab\n      operationId: createNewWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewWindowRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NewWindowResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/frame:\n    post:\n      tags:\n        - contexts\n      summary: Switch to frame\n      operationId: switchToFrame\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SwitchToFrameRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such frame\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/frame/parent:\n    post:\n      tags:\n        - contexts\n      summary: Switch to parent frame\n      operationId: switchToParentFrame\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/rect:\n    get:\n      tags:\n        - contexts\n      summary: Get window size\n      operationId: getWindowRect\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RectResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open or unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - contexts\n      summary: Set window rect\n      operationId: setWindowRect\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Rect'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/maximize:\n    post:\n      tags:\n        - contexts\n      summary: Maximize window\n      operationId: maximizeWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/minimize:\n    post:\n      tags:\n        - contexts\n      summary: Minimize window\n      operationId: minimizeWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/window/fullscreen:\n    post:\n      tags:\n        - contexts\n      summary: Fullscreen window\n      operationId: fullscreenWindow\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Rect'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element:\n    post:\n      tags:\n        - elements\n      summary: Find element\n      operationId: findElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/elements:\n    post:\n      tags:\n        - elements\n      summary: Find elements\n      operationId: findElements\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementsResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/element:\n    post:\n      tags:\n        - elements\n      summary: Find element from element\n      operationId: findElementFromElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/elements:\n    post:\n      tags:\n        - elements\n      summary: Find elements from element\n      operationId: findElementsFromElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FindElementRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementsResponse'\n        400:\n          description: invalid argument or invalid selector\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/active:\n    get:\n      tags:\n        - elements\n      summary: Get active element\n      operationId: getActiveElement\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FindElementResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/selected:\n    get:\n      tags:\n        - elements\n      summary: Is element selected\n      operationId: isElementSelected\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BooleanResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/attribute/{name}:\n    get:\n      tags:\n        - elements\n      summary: Get element attribute\n      operationId: getElementAttribute\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Requested attribute name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NullableStringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/property/{name}:\n    get:\n      tags:\n        - elements\n      summary: Get element property\n      operationId: getElementProperty\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Requested property name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NullableStringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/css/{propertyName}:\n    get:\n      tags:\n        - elements\n      summary: Get element CSS property\n      operationId: getElementCSSProperty\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"propertyName\"\n          in: \"path\"\n          description: \"Requested CSS property name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/text:\n    get:\n      tags:\n        - elements\n      summary: Get element text\n      operationId: getElementText\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/name:\n    get:\n      tags:\n        - elements\n      summary: Get element tag name\n      operationId: getElementTagName\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/rect:\n    get:\n      tags:\n        - elements\n      summary: Get element rect\n      operationId: getElementRect\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RectResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/enabled:\n    get:\n      tags:\n        - elements\n      summary: Is element enabled\n      operationId: isElementEnabled\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BooleanResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/displayed:\n    get:\n      tags:\n        - elements\n      summary: Is element displayed\n      description: This operation is not considered a part of specification but is de-facto present in existing implementations.\n      operationId: isElementDisplayed\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BooleanResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/computedrole:\n    get:\n      tags:\n        - elements\n      summary: Get element computed accessibility role\n      operationId: getElementComputedRole\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/computedlabel:\n    get:\n      tags:\n        - elements\n      summary: Get element computed accessibility label\n      operationId: getElementComputedLabel\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/click:\n    post:\n      tags:\n        - elements\n      summary: Click on element\n      operationId: elementClick\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable or element click intercepted\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/clear:\n    post:\n      tags:\n        - elements\n      summary: Clear element\n      operationId: elementClear\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable or invalid element state\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/value:\n    post:\n      tags:\n        - elements\n      summary: Send keys to element\n      operationId: elementSendKeys\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Requested element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ElementSendKeysRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such element\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/source:\n    get:\n      tags:\n        - document\n      summary: Get page source\n      operationId: getPageSource\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/execute/sync:\n    post:\n      tags:\n        - document\n      summary: Execute script\n      operationId: executeScript\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or script timeout or javascript error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/execute/async:\n    post:\n      tags:\n        - document\n      summary: Execute script asynchronously\n      operationId: executeScriptAsync\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScriptRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AnyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or script timeout or javascript error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/file:\n    post:\n      tags:\n        - document\n      summary: Upload file\n      operationId: uploadFile\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileUploadRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileUploadResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/cookie:\n    get:\n      tags:\n        - cookies\n      summary: Get all cookies\n      operationId: getAllCookies\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CookiesResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - cookies\n      summary: Add cookie\n      operationId: addCookie\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CookieRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or invalid cookie domain\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to set cookie\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - cookies\n      summary: Delete all cookies\n      operationId: deleteAllCookies\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/cookie/{name}:\n    get:\n      tags:\n        - cookies\n      summary: Get named cookie\n      operationId: getNamedCookie\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Cookie name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CookieResponse'\n        404:\n          description: invalid session id or no such window or no such cookie\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - cookies\n      summary: Delete cookie\n      operationId: deleteCookie\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"name\"\n          in: \"path\"\n          description: \"Cookie name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/actions:\n    post:\n      tags:\n        - actions\n      summary: Perform actions\n      operationId: performActions\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActionsRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - actions\n      summary: Release actions\n      operationId: releaseActions\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unexpected alert open\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/alert/dismiss:\n    post:\n      tags:\n        - prompts\n      summary: Dismiss alert\n      operationId: dismissAlert\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/alert/accept:\n    post:\n      tags:\n        - prompts\n      summary: Accept alert\n      operationId: acceptAlert\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmptyRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/alert/text:\n    post:\n      tags:\n        - prompts\n      summary: Send alert text\n      operationId: sendAlertText\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SendAlertTextRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument or element not interactable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    get:\n      tags:\n        - prompts\n      summary: Get alert text\n      operationId: getAlertText\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        400:\n          description: invalid argument or element not interactable\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window or no such alert\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/screenshot:\n    get:\n      tags:\n        - screenshots\n      summary: Takes page screenshot\n      operationId: takeScreenshot\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to capture screen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/element/{elementId}/screenshot:\n    get:\n      tags:\n        - screenshots\n      summary: Takes element screenshot\n      operationId: takeElementScreenshot\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"elementId\"\n          in: \"path\"\n          description: \"Selenium element ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to capture screen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/print:\n    post:\n      tags:\n        - print\n      summary: Print page to PDF\n      operationId: printPage\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrintRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/moz/context:\n    get:\n      tags:\n        - mozilla\n      summary: Get current context\n      operationId: getContext\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unknown error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - mozilla\n      summary: Set current context\n      operationId: setContext\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContextRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unknown error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/moz/addon/install:\n    post:\n      tags:\n        - mozilla\n      summary: Install addon\n      operationId: installAddon\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddonInstallRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unknown error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/moz/addon/uninstall:\n    post:\n      tags:\n        - mozilla\n      summary: Uninstall addon\n      operationId: uninstallAddon\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddonUninstallRequest'\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmptyResponse'\n        400:\n          description: invalid argument\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unknown error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/moz/screenshot/full:\n    get:\n      tags:\n        - mozilla\n      summary: Takes full page screenshot\n      operationId: takeFullScreenshot\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or no such window\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n        500:\n          description: unsupported operation or unexpected alert open or unable to capture screen\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/aerokube/download/{fileName}:\n    get:\n      tags:\n        - aerokube\n      summary: Downloads file from remote container with browser\n      operationId: downloadRemoteFile\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"fileName\"\n          in: \"path\"\n          description: \"Requested file name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StringResponse'\n        404:\n          description: invalid session id or file not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    delete:\n      tags:\n        - aerokube\n      summary: Deletes file in remote container with browser\n      operationId: deleteRemoteFile\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"fileName\"\n          in: \"path\"\n          description: \"Requested file name\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n        404:\n          description: invalid session id or file not found\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/aerokube/download:\n    get:\n      tags:\n        - aerokube\n      summary: Lists files in remote container with browser\n      operationId: listRemoteFiles\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n        - name: \"json\"\n          in: \"query\"\n          description: \"Information is returned in JSON format\"\n          required: true\n          schema:\n            type: \"boolean\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ArrayResponse'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n\n  /session/{sessionId}/aerokube/clipboard:\n    get:\n      tags:\n        - aerokube\n      summary: Returns clipboard contents\n      operationId: getClipboard\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      responses:\n        200:\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClipboardData'\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n    post:\n      tags:\n        - aerokube\n      summary: Updates clipboard contents\n      operationId: updateClipboard\n      parameters:\n        - name: \"sessionId\"\n          in: \"path\"\n          description: \"Requested session ID\"\n          required: true\n          schema:\n            type: \"string\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ClipboardData'\n      responses:\n        200:\n          description: successful operation\n        404:\n          description: invalid session id\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'"
		}
	},
	"Error": "callback: callback: json: cannot unmarshal number 0.1 into Go struct field Schema.minimum of type int64"
}