{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackus/ftgogo"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "customer-web/internal/handlers/openapi.yaml",
			"byteSize": 12812,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"1.0.0\"\n  title: Customer Web API\n  description: The Customer Web API is part of the FTGOGO demonstration application\n  contact:\n    name: FTGOGO Issues\n    url: https://github.com/stackus/ftgogo/issues\nservers:\n  - url: http://{host}:{port}/api\n    variables:\n      host:\n        default: localhost\n      port:\n        default: \"8000\"\npaths:\n  /signin:\n    post:\n      operationId: signInConsumer\n      security:\n        - { }\n      requestBody:\n        description: sign in consumer request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ consumer_id ]\n              properties:\n                consumer_id:\n                  type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/SignInResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /register:\n    post:\n      operationId: registerConsumer\n      security:\n        - { }\n      requestBody:\n        description: register consumer request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ name ]\n              properties:\n                name:\n                  type: string\n      responses:\n        '201':\n          $ref: '#/components/responses/ConsumerIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /consumer:\n    get:\n      operationId: getConsumer\n      security:\n        - bearerAuth: [ ]\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsumerResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /addresses:\n    post:\n      operationId: addConsumerAddress\n      security:\n        - bearerAuth: [ ]\n      requestBody:\n        description: add consumer address\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ name, address ]\n              properties:\n                name:\n                  type: string\n                address:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n      responses:\n        '201':\n          $ref: '#/components/responses/ConsumerAddressIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /addresses/{consumerAddressID}:\n    get:\n      operationId: getConsumerAddress\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/ConsumerAddressID'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsumerAddressResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    put:\n      operationId: updateConsumerAddress\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/ConsumerAddressID'\n      requestBody:\n        description: update consumer address\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ address ]\n              properties:\n                address:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n      responses:\n        '200':\n          $ref: '#/components/responses/ConsumerAddressIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    delete:\n      operationId: removeConsumerAddress\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/ConsumerAddressID'\n      responses:\n        '204':\n          $ref: '#/components/responses/EmptyResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /orders:\n    post:\n      operationId: createOrder\n      security:\n        - bearerAuth: [ ]\n      requestBody:\n        description: create order request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ consumer_id, restaurant_id, address_id, line_items ]\n              properties:\n                consumer_id:\n                  type: string\n                restaurant_id:\n                  type: string\n                address_id:\n                  type: string\n                line_items:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/MenuItemQuantities'\n      responses:\n        '201':\n          $ref: '#/components/responses/OrderIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    get:\n      operationId: searchOrders\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - in: query\n          name: filter\n          description: search filters\n          style: deepObject\n          schema:\n            type: object\n            properties:\n              since:\n                type: string\n                format: date-time\n              keywords:\n                type: array\n                items:\n                  type: string\n              status:\n                $ref: '#/components/schemas/OrderState'\n        - $ref: '#/components/parameters/NextQuery'\n        - $ref: '#/components/parameters/LimitQuery'\n      responses:\n        '200':\n          $ref: '#/components/responses/SearchOrdersResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /orders/{orderID}:\n    get:\n      operationId: getOrder\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      responses:\n        '200':\n          $ref: '#/components/responses/OrderResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /orders/{orderID}/cancel:\n    put:\n      operationId: cancelOrder\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      responses:\n        '202':\n          $ref: '#/components/responses/OrderStatusResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /orders/{orderID}/revise:\n    put:\n      operationId: reviseOrder\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/OrderID'\n      requestBody:\n        description: revise order request\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required: [ revised_quantities ]\n              properties:\n                revised_quantities:\n                  $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/MenuItemQuantities'\n      responses:\n        '202':\n          $ref: '#/components/responses/OrderStatusResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n  /restaurants/{restaurantID}:\n    get:\n      operationId: getRestaurant\n      security:\n        - bearerAuth: [ ]\n      parameters:\n        - $ref: '#/components/parameters/RestaurantID'\n      responses:\n        '200':\n          $ref: '#/components/responses/RestaurantIDResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\nsecurity:\n  - { }\n  - bearerAuth: [ ]\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    OrderState:\n      type: string\n      enum: [ Unknown, ApprovalPending, Approved, Rejected, CancelPending, Cancelled, RevisionPending ]\n    Order:\n      type: object\n      required: [ order_id, status, order_total ]\n      properties:\n        order_id:\n          type: string\n        status:\n          $ref: '#/components/schemas/OrderState'\n        order_total:\n          type: integer\n    OrderDetail:\n      type: object\n      required: [ order_id, status, restaurant_id, restaurant_name, created_at ]\n      properties:\n        order_id:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/OrderState'\n        restaurant_id:\n          type: string\n          format: uuid\n        restaurant_name:\n          type: string\n        created_at:\n          type: string\n          format: date-time\n    OrderDetailFilters:\n      type: object\n      properties:\n        since:\n          type: string\n          format: date-time\n        keywords:\n          type: array\n          items:\n            type: string\n        status:\n          $ref: '#/components/schemas/OrderState'\n  parameters:\n    NextQuery:\n      in: query\n      name: next\n      description: provide to read the next page of results\n      required: false\n      schema:\n        type: string\n    LimitQuery:\n      in: query\n      name: limit\n      description: provide to set the results page size\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 50\n        default: 20\n    ConsumerID:\n      in: path\n      name: consumerID\n      description: consumer id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    ConsumerAddressID:\n      in: path\n      name: consumerAddressID\n      description: consumer address id\n      required: true\n      schema:\n        type: string\n    OrderID:\n      in: path\n      name: orderID\n      description: order id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n    RestaurantID:\n      in: path\n      name: restaurantID\n      description: restaurant id (uuid)\n      required: true\n      schema:\n        type: string\n        format: uuid\n  responses:\n    EmptyResponse:\n      description: No Content\n    ErrorResponse:\n      description: Unexpected Error\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ message ]\n            properties:\n              message:\n                type: string\n    UnauthorizedResponse:\n      description: Access token is missing or invalid\n    SignInResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ token ]\n            properties:\n              token:\n                type: string\n    ConsumerIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    ConsumerResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ consumer_id, name ]\n            properties:\n              consumer_id:\n                type: string\n              name:\n                type: string\n    ConsumerAddressIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ consumer_id, address_id ]\n            properties:\n              consumer_id:\n                type: string\n              address_id:\n                type: string\n    ConsumerAddressResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ address ]\n            properties:\n              address:\n                $ref: '../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address'\n    OrderIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    OrderStatusResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ status ]\n            properties:\n              status:\n                $ref: '#/components/schemas/OrderState'\n    OrderResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ order ]\n            properties:\n              order:\n                $ref: '#/components/schemas/Order'\n    RestaurantIDResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ id ]\n            properties:\n              id:\n                type: string\n    SearchOrdersResponse:\n      description: OK\n      content:\n        application/json:\n          schema:\n            type: object\n            required: [ orders, next ]\n            properties:\n              orders:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrderDetail'\n              next:\n                type: string\n",
			"canonicalURL": "/github.com/stackus/ftgogo@94118644edc41c9534884a690572af52f8ea9c74/-/blob/customer-web/internal/handlers/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackus/ftgogo/blob/94118644edc41c9534884a690572af52f8ea9c74/customer-web/internal/handlers/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: responses: \"ConsumerAddressResponse\": at 1:1178: content: application/json: at 1:1209: schema: at 1:1219: parse schema: property \"address\": at 1:1244: parse schema: resolve \"../../../serviceapis/commonapi/spec.yaml#/components/schemas/Address\": external \"../../../serviceapis/commonapi/spec.yaml\": file: local file reference is not allowed"
}