{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/supabase/cli"
		},
		"file": {
			"name": "beta.yaml",
			"size": 0,
			"path": "api/beta.yaml",
			"byteSize": 35904,
			"content": "openapi: 3.0.0\npaths:\n  /v1/projects:\n    get:\n      operationId: getProjects\n      summary: List all projects\n      description: Returns a list of all projects you've previously created.\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ProjectResponse'\n      tags: \u0026ref_0\n        - projects\n      security: \u0026ref_1\n        - bearer: []\n    post:\n      operationId: createProject\n      summary: Create a project\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProjectBody'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProjectResponse'\n      tags: *ref_0\n      security: *ref_1\n  /v1/organizations:\n    get:\n      operationId: getOrganizations\n      summary: List all organizations\n      description: Returns a list of organizations that you currently belong to.\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OrganizationResponse'\n        '500':\n          description: Unexpected error listing organizations\n      tags: \u0026ref_2\n        - organizations\n      security: \u0026ref_3\n        - bearer: []\n    post:\n      operationId: createOrganization\n      summary: Create an organization\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrganizationBody'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationResponse'\n        '500':\n          description: Unexpected error creating an organization\n      tags: *ref_2\n      security: *ref_3\n  /v1/projects/{ref}/functions:\n    post:\n      operationId: createFunction\n      summary: Create a function\n      description: Creates a function and adds it to the specified project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n        - name: slug\n          required: false\n          in: query\n          schema:\n            pattern: /^[A-Za-z0-9_-]+$/\n            type: string\n        - name: name\n          required: false\n          in: query\n          schema:\n            type: string\n        - name: verify_jwt\n          required: false\n          in: query\n          schema:\n            type: boolean\n        - name: import_map\n          required: false\n          in: query\n          schema:\n            type: boolean\n      requestBody:\n        required: true\n        content:\n          application/json: \u0026ref_4\n            schema:\n              $ref: '#/components/schemas/CreateFunctionBody'\n          application/vnd.denoland.eszip: *ref_4\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FunctionResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to create project's function\n      tags: \u0026ref_5\n        - functions\n      security: \u0026ref_6\n        - apiKeyHeader: []\n          apiKeyParam: []\n        - bearer: []\n    get:\n      operationId: getFunctions\n      summary: List all functions\n      description: Returns all functions you've previously added to the specified project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FunctionResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's functions\n      tags: *ref_5\n      security: *ref_6\n  /v1/projects/{ref}/functions/{function_slug}:\n    get:\n      operationId: getFunction\n      summary: Retrieve a function\n      description: Retrieves a function with the specified slug and project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n        - name: function_slug\n          required: true\n          in: path\n          description: Function slug\n          schema:\n            pattern: /^[A-Za-z0-9_-]+$/\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FunctionSlugResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve function with given slug\n      tags: \u0026ref_8\n        - functions\n      security: \u0026ref_9\n        - apiKeyHeader: []\n          apiKeyParam: []\n        - bearer: []\n    patch:\n      operationId: updateFunction\n      summary: Update a function\n      description: Updates a function with the specified slug and project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n        - name: function_slug\n          required: true\n          in: path\n          description: Function slug\n          schema:\n            pattern: /^[A-Za-z0-9_-]+$/\n            type: string\n        - name: slug\n          required: false\n          in: query\n          schema:\n            pattern: /^[A-Za-z0-9_-]+$/\n            type: string\n        - name: name\n          required: false\n          in: query\n          schema:\n            type: string\n        - name: verify_jwt\n          required: false\n          in: query\n          schema:\n            type: boolean\n        - name: import_map\n          required: false\n          in: query\n          schema:\n            type: boolean\n      requestBody:\n        required: true\n        content:\n          application/json: \u0026ref_7\n            schema:\n              $ref: '#/components/schemas/UpdateFunctionBody'\n          application/vnd.denoland.eszip: *ref_7\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FunctionResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to update function with given slug\n      tags: *ref_8\n      security: *ref_9\n    delete:\n      operationId: deleteFunction\n      summary: Delete a function\n      description: Deletes a function with the specified slug from the specified project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n        - name: function_slug\n          required: true\n          in: path\n          description: Function slug\n          schema:\n            pattern: /^[A-Za-z0-9_-]+$/\n            type: string\n      responses:\n        '200':\n          description: ''\n        '403':\n          description: ''\n        '500':\n          description: Failed to delete function with given slug\n      tags: *ref_8\n      security: *ref_9\n  /v1/projects/{ref}/functions/{function_slug}/body:\n    get:\n      operationId: getFunctionBody\n      summary: Retrieve a function body\n      description: Retrieves a function body for the specified slug and project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n        - name: function_slug\n          required: true\n          in: path\n          description: Function slug\n          schema:\n            pattern: /^[A-Za-z0-9_-]+$/\n            type: string\n      responses:\n        '200':\n          description: ''\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve function body with given slug\n      tags: *ref_8\n      security: *ref_9\n  /v1/projects/{ref}/custom-hostname:\n    get:\n      operationId: getCustomHostnameConfig\n      summary: Gets project's custom hostname config\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCustomHostnameResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's custom hostname config\n      tags: \u0026ref_10\n        - custom hostname (beta)\n      security: \u0026ref_11\n        - bearer: []\n    delete:\n      operationId: removeCustomHostnameConfig\n      summary: Deletes a project's custom hostname configuration\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n        '403':\n          description: ''\n        '500':\n          description: Failed to delete project custom hostname configuration\n      tags: *ref_10\n      security: *ref_11\n  /v1/projects/{ref}/custom-hostname/initialize:\n    post:\n      operationId: createCustomHostnameConfig\n      summary: Updates project's custom hostname configuration\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCustomHostnameBody'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCustomHostnameResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to update project custom hostname configuration\n      tags: *ref_10\n      security: *ref_11\n  /v1/projects/{ref}/custom-hostname/reverify:\n    post:\n      operationId: reverify\n      summary: \u003e-\n        Attempts to verify the DNS configuration for project's custom hostname\n        configuration\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCustomHostnameResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to verify project custom hostname configuration\n      tags: *ref_10\n      security: *ref_11\n  /v1/projects/{ref}/custom-hostname/activate:\n    post:\n      operationId: activate\n      summary: Activates a custom hostname for a project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateCustomHostnameResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to activate project custom hostname configuration\n      tags: *ref_10\n      security: *ref_11\n  /v1/projects/{ref}/network-bans/retrieve:\n    post:\n      operationId: getNetworkBans\n      summary: Gets project's network bans\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkBanResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's network bans\n      tags: \u0026ref_12\n        - network bans (beta)\n      security: \u0026ref_13\n        - bearer: []\n  /v1/projects/{ref}/network-bans:\n    delete:\n      operationId: removeNetworkBan\n      summary: Remove network bans.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RemoveNetworkBanRequest'\n      responses:\n        '200':\n          description: ''\n        '403':\n          description: ''\n        '500':\n          description: Failed to remove network bans.\n      tags: *ref_12\n      security: *ref_13\n  /v1/projects/{ref}/network-restrictions:\n    get:\n      operationId: getNetworkRestrictions\n      summary: Gets project's network restrictions\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkRestrictionsResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's network restrictions\n      tags: \u0026ref_14\n        - network restrictions (beta)\n      security: \u0026ref_15\n        - bearer: []\n  /v1/projects/{ref}/network-restrictions/apply:\n    post:\n      operationId: applyNetworkRestrictions\n      summary: Updates project's network restrictions\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NetworkRestrictionsRequest'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkRestrictionsResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to update project network restrictions\n      tags: *ref_14\n      security: *ref_15\n  /v1/projects/{ref}/pgsodium:\n    get:\n      operationId: getConfig\n      summary: Gets project's pgsodium config\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PgsodiumConfigResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's pgsodium config\n      tags: \u0026ref_16\n        - pgsodium (beta)\n      security: \u0026ref_17\n        - bearer: []\n    put:\n      operationId: updateConfig\n      summary: \u003e-\n        Updates project's pgsodium config. Updating the root_key can cause all\n        data encrypted with the older key to become inaccessible.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePgsodiumConfigBody'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PgsodiumConfigResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to update project's pgsodium config\n      tags: *ref_16\n      security: *ref_17\n  /v1/projects/{ref}/postgrest:\n    get:\n      operationId: getPostgRESTConfig\n      summary: Gets project's postgrest config\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostgrestConfigResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's postgrest config\n      tags: \u0026ref_18\n        - services\n      security: \u0026ref_19\n        - bearer: []\n    patch:\n      operationId: updatePostgRESTConfig\n      summary: Updates project's postgrest config\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdatePostgrestConfigBody'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostgrestConfigResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to update project's postgrest config\n      tags: *ref_18\n      security: *ref_19\n  /v1/projects/{ref}/secrets:\n    get:\n      operationId: getSecrets\n      summary: List all secrets\n      description: Returns all secrets you've previously added to the specified project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SecretResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's secrets\n      tags: \u0026ref_20\n        - secrets\n      security: \u0026ref_21\n        - apiKeyHeader: []\n          apiKeyParam: []\n        - bearer: []\n    post:\n      operationId: createSecrets\n      summary: Bulk create secrets\n      description: Creates multiple secrets and adds them to the specified project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CreateSecretBody'\n      responses:\n        '201':\n          description: ''\n        '403':\n          description: ''\n        '500':\n          description: Failed to create project's secrets\n      tags: *ref_20\n      security: *ref_21\n    delete:\n      operationId: deleteSecrets\n      summary: Bulk delete secrets\n      description: Deletes all secrets with the given names from the specified project\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: object\n        '403':\n          description: ''\n        '500':\n          description: Failed to delete secrets with given names\n      tags: *ref_20\n      security: *ref_21\n  /v1/projects/{ref}/ssl-enforcement:\n    get:\n      operationId: getSslEnforcementConfig\n      summary: Get project's SSL enforcement configuration.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SslEnforcementResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to retrieve project's SSL enforcement config\n      tags: \u0026ref_22\n        - ssl enforcement (beta)\n      security: \u0026ref_23\n        - bearer: []\n    put:\n      operationId: updateSslEnforcementConfig\n      summary: Update project's SSL enforcement configuration.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SslEnforcementRequest'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SslEnforcementResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to update project's SSL enforcement configuration.\n      tags: *ref_22\n      security: *ref_23\n  /v1/projects/{ref}/types/typescript:\n    get:\n      operationId: getTypescriptTypes\n      summary: Generate TypeScript types\n      description: Returns the TypeScript types of your schema for use with supabase-js.\n      parameters:\n        - name: included_schemas\n          required: false\n          in: query\n          schema:\n            default: public\n            type: string\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TypescriptResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to generate TypeScript types\n      tags:\n        - projects\n      security:\n        - apiKeyHeader: []\n          apiKeyParam: []\n        - bearer: []\n  /v1/projects/{ref}/vanity-subdomain:\n    get:\n      operationId: getVanitySubdomainConfig\n      summary: Gets current vanity subdomain config\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VanitySubdomainConfigResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to get project vanity subdomain configuration\n      tags: \u0026ref_24\n        - vanity subdomain (beta)\n      security: \u0026ref_25\n        - bearer: []\n    delete:\n      operationId: removeVanitySubdomainConfig\n      summary: Deletes a project's vanity subdomain configuration\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      responses:\n        '200':\n          description: ''\n        '403':\n          description: ''\n        '500':\n          description: Failed to delete project vanity subdomain configuration\n      tags: *ref_24\n      security: *ref_25\n  /v1/projects/{ref}/vanity-subdomain/check-availability:\n    post:\n      operationId: checkVanitySubdomainAvailability\n      summary: Checks vanity subdomain availability\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VanitySubdomainBody'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubdomainAvailabilityResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to check project vanity subdomain configuration\n      tags: *ref_24\n      security: *ref_25\n  /v1/projects/{ref}/vanity-subdomain/activate:\n    post:\n      operationId: activateVanitySubdomainPlease\n      summary: Activates a vanity subdomain for a project.\n      parameters:\n        - name: ref\n          required: true\n          in: path\n          description: Project ref\n          schema:\n            minLength: 20\n            maxLength: 20\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VanitySubdomainBody'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ActivateVanitySubdomainResponse'\n        '403':\n          description: ''\n        '500':\n          description: Failed to activate project vanity subdomain configuration\n      tags: *ref_24\n      security: *ref_25\ninfo:\n  title: Supabase API (v1)\n  description: ''\n  version: 1.0.0\n  contact: {}\ntags:\n  - name: organizations\n    description: Organization endpoints\n  - name: projects\n    description: Project endpoints\nservers: []\ncomponents:\n  securitySchemes:\n    bearer:\n      scheme: bearer\n      bearerFormat: JWT\n      type: http\n  schemas:\n    DatabaseResponse:\n      type: object\n      properties:\n        host:\n          type: string\n        version:\n          type: string\n      required:\n        - host\n        - version\n    ProjectResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        organization_id:\n          type: string\n        name:\n          type: string\n        region:\n          type: string\n        created_at:\n          type: string\n        database:\n          $ref: '#/components/schemas/DatabaseResponse'\n      required:\n        - id\n        - organization_id\n        - name\n        - region\n        - created_at\n    CreateProjectBody:\n      type: object\n      properties:\n        db_pass:\n          type: string\n        name:\n          type: string\n        organization_id:\n          type: string\n        plan:\n          type: string\n          enum:\n            - free\n            - pro\n        region:\n          type: string\n          enum:\n            - us-east-1\n            - us-west-1\n            - ap-southeast-1\n            - ap-northeast-1\n            - ap-northeast-2\n            - ap-southeast-2\n            - eu-west-1\n            - eu-west-2\n            - eu-west-3\n            - eu-central-1\n            - ca-central-1\n            - ap-south-1\n            - sa-east-1\n        kps_enabled:\n          type: boolean\n      required:\n        - db_pass\n        - name\n        - organization_id\n        - plan\n        - region\n    OrganizationResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n      required:\n        - id\n        - name\n    CreateOrganizationBody:\n      type: object\n      properties:\n        name:\n          type: string\n      required:\n        - name\n    CreateFunctionBody:\n      type: object\n      properties:\n        slug:\n          type: string\n          pattern: /^[A-Za-z0-9_-]+$/\n        name:\n          type: string\n        body:\n          type: string\n        verify_jwt:\n          type: boolean\n      required:\n        - slug\n        - name\n        - body\n    FunctionResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        slug:\n          type: string\n        name:\n          type: string\n        status:\n          enum: \u0026ref_26\n            - ACTIVE\n            - REMOVED\n            - THROTTLED\n          type: string\n        version:\n          type: number\n        created_at:\n          type: number\n        updated_at:\n          type: number\n        verify_jwt:\n          type: boolean\n        import_map:\n          type: boolean\n      required:\n        - id\n        - slug\n        - name\n        - status\n        - version\n        - created_at\n        - updated_at\n    FunctionSlugResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        slug:\n          type: string\n        name:\n          type: string\n        status:\n          enum: *ref_26\n          type: string\n        version:\n          type: number\n        created_at:\n          type: number\n        updated_at:\n          type: number\n        verify_jwt:\n          type: boolean\n        import_map:\n          type: boolean\n        body:\n          type: string\n      required:\n        - id\n        - slug\n        - name\n        - status\n        - version\n        - created_at\n        - updated_at\n    UpdateFunctionBody:\n      type: object\n      properties:\n        name:\n          type: string\n        body:\n          type: string\n        verify_jwt:\n          type: boolean\n    UpdateCustomHostnameResponse:\n      type: object\n      properties:\n        status:\n          enum:\n            - 1_not_started\n            - 2_initiated\n            - 3_challenge_verified\n            - 4_origin_setup_completed\n            - 5_services_reconfigured\n          type: string\n        custom_hostname:\n          type: string\n        data:\n          type: object\n      required:\n        - status\n        - custom_hostname\n        - data\n    UpdateCustomHostnameBody:\n      type: object\n      properties:\n        custom_hostname:\n          type: string\n      required:\n        - custom_hostname\n    NetworkBanResponse:\n      type: object\n      properties:\n        banned_ipv4_addresses:\n          type: array\n          items:\n            type: string\n      required:\n        - banned_ipv4_addresses\n    RemoveNetworkBanRequest:\n      type: object\n      properties:\n        ipv4_addresses:\n          type: array\n          items:\n            type: string\n      required:\n        - ipv4_addresses\n    NetworkRestrictionsRequest:\n      type: object\n      properties:\n        dbAllowedCidrs:\n          type: array\n          items:\n            type: string\n      required:\n        - dbAllowedCidrs\n    NetworkRestrictionsResponse:\n      type: object\n      properties:\n        entitlement:\n          enum:\n            - disallowed\n            - allowed\n          type: string\n        config:\n          $ref: '#/components/schemas/NetworkRestrictionsRequest'\n        status:\n          enum:\n            - stored\n            - applied\n          type: string\n      required:\n        - entitlement\n        - config\n        - status\n    PgsodiumConfigResponse:\n      type: object\n      properties:\n        root_key:\n          type: string\n      required:\n        - root_key\n    UpdatePgsodiumConfigBody:\n      type: object\n      properties:\n        root_key:\n          type: string\n      required:\n        - root_key\n    PostgrestConfigResponse:\n      type: object\n      properties:\n        max_rows:\n          type: integer\n        db_schema:\n          type: string\n        db_extra_search_path:\n          type: string\n      required:\n        - max_rows\n        - db_schema\n        - db_extra_search_path\n    UpdatePostgrestConfigBody:\n      type: object\n      properties:\n        max_rows:\n          type: integer\n          minimum: 0\n          maximum: 1000000\n        db_extra_search_path:\n          type: string\n        db_schema:\n          type: string\n    SecretResponse:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n      required:\n        - name\n        - value\n    CreateSecretBody:\n      type: object\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n          pattern: /^(?!SUPABASE_).*/\n      required:\n        - name\n        - value\n    SslEnforcements:\n      type: object\n      properties:\n        database:\n          type: boolean\n      required:\n        - database\n    SslEnforcementResponse:\n      type: object\n      properties:\n        currentConfig:\n          $ref: '#/components/schemas/SslEnforcements'\n        appliedSuccessfully:\n          type: boolean\n      required:\n        - currentConfig\n        - appliedSuccessfully\n    SslEnforcementRequest:\n      type: object\n      properties:\n        requestedConfig:\n          $ref: '#/components/schemas/SslEnforcements'\n      required:\n        - requestedConfig\n    TypescriptResponse:\n      type: object\n      properties:\n        types:\n          type: string\n      required:\n        - types\n    VanitySubdomainConfigResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          enum:\n            - not-used\n            - custom-domain-used\n            - active\n        custom_domain:\n          type: string\n      required:\n        - status\n    VanitySubdomainBody:\n      type: object\n      properties:\n        vanity_subdomain:\n          type: string\n      required:\n        - vanity_subdomain\n    SubdomainAvailabilityResponse:\n      type: object\n      properties:\n        available:\n          type: boolean\n      required:\n        - available\n    ActivateVanitySubdomainResponse:\n      type: object\n      properties:\n        custom_domain:\n          type: string\n      required:\n        - custom_domain\n",
			"canonicalURL": "/github.com/supabase/cli@6eb09036d25103521f4c3ba39e12ed12cb34659a/-/blob/api/beta.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/supabase/cli/blob/6eb09036d25103521f4c3ba39e12ed12cb34659a/api/beta.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/projects/{ref}/functions\": get: operation \"getFunctions\": security: at api/beta.yaml:169:17: unknown security scheme \"apiKeyHeader\""
}