{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kota65535/openapi-merger"
		},
		"file": {
			"name": "expected.yaml",
			"size": 0,
			"path": "test/resources/petstore_14/expected.yaml",
			"byteSize": 6105,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: 'http://petstore.swagger.io/v1'\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n        - tag3\n        - tag4\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - name: petId\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          description: A paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pets'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    post:\n      summary: Create a pet\n      operationId: createPets\n      tags:\n        - pets\n      requestBody:\n        description: body\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pet'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n    put:\n      summary: Update a pet\n      operationId: createPets\n      tags:\n        - pets\n      requestBody:\n        $ref: '#/components/schemas/Pet'\n      responses:\n        '201':\n          description: Null response\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  '/pets/{petId}':\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - tag1\n        - tag2\n      parameters:\n        - name: petId\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/Pet'\n        default:\n          $ref: '#/components/responses/Error'\ncomponents:\n  schemas:\n    Foo:\n      $ref: '#/components/schemas/Pets'\n    Cat:\n      description: A representation of a cat\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            huntingSkill:\n              type: string\n              description: The measured skill for hunting\n              default: lazy\n              enum:\n                - clueless\n                - lazy\n                - adventurous\n                - aggressive\n          required:\n            - huntingSkill\n    Dog:\n      description: A representation of a dog\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            packSize:\n              type: integer\n              format: int32\n              description: the size of the pack the dog is from\n              default: 0\n              minimum: 0\n          required:\n            - packSize\n    Error:\n      type: object\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n    Pet:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n          readOnly: true\n        name:\n          type: string\n        tag:\n          type: string\n        type:\n          type: string\n      discriminator:\n        propertyName: type\n        mapping:\n          猫: '#/components/schemas/Cat'\n          犬: '#/components/schemas/Dog'\n      required:\n        - id\n        - name\n        - type\n    Pets:\n      type: array\n      items:\n        type: object\n        properties:\n          id:\n            type: integer\n            format: int64\n            readOnly: true\n          name:\n            type: string\n          tag:\n            type: string\n          type:\n            type: string\n        discriminator:\n          propertyName: type\n          mapping:\n            猫: '#/components/schemas/Cat'\n            犬: '#/components/schemas/Dog'\n        required:\n          - id\n          - name\n          - type\n  parameters:\n    Foo:\n      $ref: '#/components/parameters/PetId'\n    PetId:\n      name: petId\n      description: The id of the pet to retrieve\n      schema:\n        type: string\n      in: path\n      required: true\n  responses:\n    Foo:\n      $ref: '#/components/responses/Pet'\n    Error:\n      description: unexpected error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Pet:\n      description: Pet\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n          examples:\n            success:\n              $ref: '#/components/examples/Pet'\n      headers:\n        X-Rate-Limit:\n          $ref: '#/components/headers/RateLimit'\n  examples:\n    Foo:\n      $ref: '#/components/examples/Pet'\n    Pet:\n      description: Pet example\n      value:\n        id: 1\n        name: dogie\n  requestBodies:\n    Foo:\n      $ref: '#/components/requestBodies/Pet'\n    Pet:\n      description: Pet\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Pet'\n  headers:\n    Foo:\n      $ref: '#/components/headers/RateLimit'\n    RateLimit:\n      description: Rate Limit\n      schema:\n        type: integer\n  securitySchemes:\n    Foo:\n      $ref: '#/components/securitySchemes/oAuth2'\n    oAuth2:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: 'https://api.example.com/auth/token'\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /pets: put: operation \"createPets\": requestBody: resolve \"#/components/schemas/Pet\" reference: invalid requestBody reference: \"#/components/schemas/Pet\""
}