{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager"
		},
		"file": {
			"name": "kas-fleet-manager-private-admin.yaml",
			"size": 0,
			"path": "openapi/kas-fleet-manager-private-admin.yaml",
			"byteSize": 10728,
			"content": "openapi: 3.0.0\ninfo:\n  title: Kafka Service Fleet Manager Admin APIs\n  description: The admin APIs for the fleet manager of Kafka service\n  version: 0.1.0\n  license:\n    name: 'Apache 2.0'\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\n  contact: \n    name: 'Red Hat Hybrid Cloud Console'\n    email: 'rhosak-support@redhat.com'\nservers:\n  - url: https://api.openshift.com\n    description: Main (production) server\n  - url: https://api.stage.openshift.com\n    description: Staging server\n  - url: http://localhost:8000\n    description: localhost\n  - url: /\n    description: current domain\ntags:\n  - name: Admin APIs\n    description: \"\"\n\npaths:\n  '/api/kafkas_mgmt/v1/admin/kafkas':\n    get:\n      description: Returns a list of Kafkas\n      operationId: getKafkas\n      security:\n        - Bearer: []\n      responses:\n        \"200\":\n          description: Return a list of Kafka instances. This endpoint will return all Kafka instances that are stored in the database and the are not filtered based on user ids or org ids.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KafkaList'\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n      parameters:\n        - $ref: 'kas-fleet-manager.yaml#/components/parameters/page'\n        - $ref: 'kas-fleet-manager.yaml#/components/parameters/size'\n        - $ref: 'kas-fleet-manager.yaml#/components/parameters/orderBy'\n        - $ref: 'kas-fleet-manager.yaml#/components/parameters/search'\n  '/api/kafkas_mgmt/v1/admin/kafkas/{id}':\n    get:\n      description: Return the details of Kafka instance by id\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n      security:\n        - Bearer: []\n      operationId: getKafkaById\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kafka'\n          description: Kafka found by ID\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Kafka found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n    patch:\n      description: Update a Kafka instance by id\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n      security:\n        - Bearer: []\n      operationId: updateKafkaById\n      requestBody:\n        description: Kafka update data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KafkaUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Kafka updated by ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kafka'\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Kafka found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n    delete:\n      description: Delete a Kafka by ID\n      parameters:\n        - $ref: \"kas-fleet-manager.yaml#/components/parameters/id\"\n        - in: query\n          name: async\n          description: Perform the action in an asynchronous manner\n          schema:\n            type: boolean\n          required: true\n      security:\n        - Bearer: [ ]\n      operationId: deleteKafkaById\n      responses:\n        \"200\":\n          description: Kafka updated by ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Kafka'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Kafka found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'kas-fleet-manager.yaml#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    Kafka:\n      allOf:\n        - $ref: 'kas-fleet-manager.yaml#/components/schemas/ObjectReference'\n        - required:\n          - multi_az\n          - strimzi_upgrading\n          - kafka_upgrading\n          - kafka_ibp_upgrading\n        - type: object\n          properties:\n            status:\n              description: \"Values: [accepted, preparing, provisioning, ready, failed, deprovision, deleting] \"\n              type: string\n            cloud_provider:\n              description: \"Name of Cloud used to deploy. For example AWS\"\n              type: string\n            multi_az:\n              type: boolean\n            region:\n              description: \"Values will be regions of specific cloud provider. For example: us-east-1 for AWS\"\n              type: string\n            owner:\n              type: string\n            name:\n              type: string\n            bootstrap_server_host:\n              type: string\n            created_at:\n              format: date-time\n              type: string\n            updated_at:\n              format: date-time\n              type: string\n            failed_reason:\n              type: string\n            actual_kafka_version:\n              type: string\n            actual_strimzi_version:\n              type: string\n            desired_kafka_version:\n              type: string\n            desired_strimzi_version:\n              type: string\n            desired_kafka_ibp_version:\n              type: string\n            actual_kafka_ibp_version:\n              type: string\n            kafka_upgrading:\n              type: boolean\n            strimzi_upgrading:\n              type: boolean\n            kafka_ibp_upgrading:\n              type: boolean\n            kafka_storage_size:\n              deprecated: true\n              description: \"Maximum data storage available to this Kafka. This is now deprecated, please use max_data_retention_size instead.\"\n              type: string\n            organisation_id:\n              type: string\n            subscription_id:\n              type: string\n            owner_account_id:\n              type: string\n            account_number:\n              type: string\n            instance_type:\n              type: string\n            quota_type:\n              type: string\n            routes:\n              type: array\n              items:\n                type: object\n                properties:\n                  domain:\n                    type: string\n                  router:\n                    type: string\n            routes_created:\n              type: boolean\n            cluster_id:\n              type: string\n            namespace:\n              type: string\n            size_id:\n              type: string\n            max_data_retention_size:\n              $ref: '#/components/schemas/SupportedKafkaSizeBytesValueItem'\n    KafkaList:\n      allOf:\n        - $ref: \"kas-fleet-manager.yaml#/components/schemas/List\"\n        - type: object\n          properties:\n            items:\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Kafka\"\n\n    KafkaUpdateRequest:\n      type: object\n      properties:\n        # for now only support updating the following fields. May add more when use cases arise.\n        strimzi_version:\n          type: string\n        kafka_version:\n          type: string\n        kafka_ibp_version:\n          type: string\n        kafka_storage_size:\n          deprecated: true\n          description: \"Maximum data storage available to this Kafka. This is now deprecated, please use max_data_retention_size instead\"\n          type: string\n        max_data_retention_size:\n          description: \"Maximum data storage available to this Kafka\"\n          type: string\n    SupportedKafkaSizeBytesValueItem:\n      $ref: 'kas-fleet-manager.yaml#/components/schemas/SupportedKafkaSizeBytesValueItem'\n\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      bearerFormat: JWT\n      type: http\n",
			"canonicalURL": "/github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager@d7be5b55645b129a5c3c505032b4d52f9827dc41/-/blob/openapi/kas-fleet-manager-private-admin.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bf2fc6cc711aee1a0c2a/kas-fleet-manager/blob/d7be5b55645b129a5c3c505032b4d52f9827dc41/openapi/kas-fleet-manager-private-admin.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Kafka\": parse schema: parse schema: at 1:53: external \"kas-fleet-manager.yaml\": get: file: local file reference is not allowed"
}