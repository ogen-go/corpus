{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "container_instance.yaml",
			"size": 0,
			"path": "providers/src/azure/v0.2.0/services/container_instance.yaml",
			"byteSize": 79473,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: Container Instance Management Client (Microsoft.ContainerInstance)\n  description: Container Instance Management Client\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-29-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  parameters:\n    SubscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n    LocationParameter:\n      name: location\n      in: path\n      description: The identifier for the physical azure location.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ApiVersionParameter:\n      name: api-version\n      in: query\n      description: Client API version\n      required: true\n      x-ms-parameter-location: client\n      schema:\n        type: string\n    ResourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    ContainerGroupNameParameter:\n      name: containerGroupName\n      in: path\n      description: The name of the container group.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    VirtualNetworkNameParameter:\n      name: virtualNetworkName\n      in: path\n      description: The name of the virtual network.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    SubnetNameParameter:\n      name: subnetName\n      in: path\n      description: The name of the subnet.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    OperationIdParameter:\n      name: operationId\n      in: path\n      description: The operation Id.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  schemas:\n    Container:\n      description: A container instance.\n      required:\n        - properties\n        - name\n      properties:\n        image:\n          description: The name of the image used to create the container instance.\n          type: string\n        command:\n          description: The commands to execute within the container instance in exec form.\n          type: array\n          items:\n            type: string\n        ports:\n          description: The exposed ports on the container instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerPort'\n          x-ms-identifiers:\n            - port\n        environmentVariables:\n          description: The environment variables to set in the container instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/EnvironmentVariable'\n          x-ms-identifiers:\n            - name\n        instanceView:\n          description: The instance view of the container instance. Only valid in response.\n          readOnly: true\n          type: object\n          properties:\n            restartCount:\n              readOnly: true\n              type: integer\n              format: int32\n              description: The number of times that the container instance has been restarted.\n            currentState:\n              readOnly: true\n              description: Current container instance state.\n              $ref: '#/components/schemas/ContainerState'\n            previousState:\n              readOnly: true\n              description: Previous container instance state.\n              $ref: '#/components/schemas/ContainerState'\n            events:\n              readOnly: true\n              description: The events of the container instance.\n              type: array\n              items:\n                $ref: '#/components/schemas/Event'\n              x-ms-identifiers:\n                - name\n                - type\n        resources:\n          description: The resource requirements of the container instance.\n          $ref: '#/components/schemas/ResourceRequirements'\n        volumeMounts:\n          description: The volume mounts available to the container instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeMount'\n          x-ms-identifiers:\n            - name\n        livenessProbe:\n          description: The liveness probe.\n          $ref: '#/components/schemas/ContainerProbe'\n        readinessProbe:\n          description: The readiness probe.\n          $ref: '#/components/schemas/ContainerProbe'\n        name:\n          description: The user-provided name of the container instance.\n          type: string\n      type: object\n    ContainerProperties:\n      description: The container instance properties.\n      type: object\n      required:\n        - image\n        - resources\n      properties:\n        image:\n          description: The name of the image used to create the container instance.\n          type: string\n        command:\n          description: The commands to execute within the container instance in exec form.\n          type: array\n          items:\n            type: string\n        ports:\n          description: The exposed ports on the container instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerPort'\n          x-ms-identifiers:\n            - port\n        environmentVariables:\n          description: The environment variables to set in the container instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/EnvironmentVariable'\n          x-ms-identifiers:\n            - name\n        instanceView:\n          description: The instance view of the container instance. Only valid in response.\n          readOnly: true\n          type: object\n          properties:\n            restartCount:\n              readOnly: true\n              type: integer\n              format: int32\n              description: The number of times that the container instance has been restarted.\n            currentState:\n              readOnly: true\n              description: Current container instance state.\n              $ref: '#/components/schemas/ContainerState'\n            previousState:\n              readOnly: true\n              description: Previous container instance state.\n              $ref: '#/components/schemas/ContainerState'\n            events:\n              readOnly: true\n              description: The events of the container instance.\n              type: array\n              items:\n                $ref: '#/components/schemas/Event'\n              x-ms-identifiers:\n                - name\n                - type\n        resources:\n          description: The resource requirements of the container instance.\n          $ref: '#/components/schemas/ResourceRequirements'\n        volumeMounts:\n          description: The volume mounts available to the container instance.\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeMount'\n          x-ms-identifiers:\n            - name\n        livenessProbe:\n          description: The liveness probe.\n          $ref: '#/components/schemas/ContainerProbe'\n        readinessProbe:\n          description: The readiness probe.\n          $ref: '#/components/schemas/ContainerProbe'\n    ContainerState:\n      description: The container instance state.\n      type: object\n      readOnly: true\n      properties:\n        state:\n          type: string\n          readOnly: true\n          description: The state of the container instance.\n        startTime:\n          type: string\n          readOnly: true\n          format: date-time\n          description: The date-time when the container instance state started.\n        exitCode:\n          type: integer\n          format: int32\n          readOnly: true\n          description: The container instance exit codes correspond to those from the `docker run` command.\n        finishTime:\n          type: string\n          readOnly: true\n          format: date-time\n          description: The date-time when the container instance state finished.\n        detailStatus:\n          type: string\n          readOnly: true\n          description: The human-readable status of the container instance state.\n    Event:\n      description: A container group or container instance event.\n      type: object\n      readOnly: true\n      properties:\n        count:\n          type: integer\n          format: int32\n          readOnly: true\n          description: The count of the event.\n        firstTimestamp:\n          type: string\n          readOnly: true\n          format: date-time\n          description: The date-time of the earliest logged event.\n        lastTimestamp:\n          type: string\n          readOnly: true\n          format: date-time\n          description: The date-time of the latest logged event.\n        name:\n          type: string\n          readOnly: true\n          description: The event name.\n        message:\n          type: string\n          readOnly: true\n          description: The event message.\n        type:\n          type: string\n          readOnly: true\n          description: The event type.\n    ResourceRequirements:\n      description: The resource requirements.\n      type: object\n      required:\n        - requests\n      properties:\n        requests:\n          description: The resource requests of this container instance.\n          $ref: '#/components/schemas/ResourceRequests'\n        limits:\n          description: The resource limits of this container instance.\n          $ref: '#/components/schemas/ResourceLimits'\n    ResourceRequests:\n      description: The resource requests.\n      type: object\n      required:\n        - memoryInGB\n        - cpu\n      properties:\n        memoryInGB:\n          description: The memory request in GB of this container instance.\n          type: number\n          format: double\n        cpu:\n          description: The CPU request of this container instance.\n          type: number\n          format: double\n        gpu:\n          description: The GPU request of this container instance.\n          $ref: '#/components/schemas/GpuResource'\n    ResourceLimits:\n      description: The resource limits.\n      type: object\n      properties:\n        memoryInGB:\n          description: The memory limit in GB of this container instance.\n          type: number\n          format: double\n        cpu:\n          description: The CPU limit of this container instance.\n          type: number\n          format: double\n        gpu:\n          description: The GPU limit of this container instance.\n          $ref: '#/components/schemas/GpuResource'\n    GpuResource:\n      description: The GPU resource.\n      type: object\n      required:\n        - count\n        - sku\n      properties:\n        count:\n          description: The count of the GPU resource.\n          type: integer\n          format: int32\n        sku:\n          type: string\n          description: The SKU of the GPU resource.\n          enum:\n            - K80\n            - P100\n            - V100\n          x-ms-enum:\n            name: GpuSku\n            modelAsString: true\n    AzureFileVolume:\n      description: The properties of the Azure File volume. Azure File shares are mounted as volumes.\n      type: object\n      required:\n        - shareName\n        - storageAccountName\n      properties:\n        shareName:\n          description: The name of the Azure File share to be mounted as a volume.\n          type: string\n        readOnly:\n          description: The flag indicating whether the Azure File shared mounted as a volume is read-only.\n          type: boolean\n        storageAccountName:\n          description: The name of the storage account that contains the Azure File share.\n          type: string\n        storageAccountKey:\n          description: The storage account access key used to access the Azure File share.\n          type: string\n    EmptyDirVolume:\n      description: The empty directory volume.\n      type: object\n      properties: {}\n    SecretVolume:\n      description: The secret volume.\n      additionalProperties:\n        type: string\n      properties: {}\n      type: object\n    GitRepoVolume:\n      description: Represents a volume that is populated with the contents of a git repository\n      required:\n        - repository\n      properties:\n        directory:\n          description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.\n          type: string\n        repository:\n          description: Repository URL\n          type: string\n        revision:\n          description: Commit hash for the specified revision.\n          type: string\n      type: object\n    Volume:\n      description: The properties of the volume.\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          description: The name of the volume.\n          type: string\n        azureFile:\n          description: The Azure File volume.\n          $ref: '#/components/schemas/AzureFileVolume'\n        emptyDir:\n          description: The empty directory volume.\n          $ref: '#/components/schemas/EmptyDirVolume'\n        secret:\n          description: The secret volume.\n          $ref: '#/components/schemas/SecretVolume'\n        gitRepo:\n          description: The git repo volume.\n          $ref: '#/components/schemas/GitRepoVolume'\n    VolumeMount:\n      description: The properties of the volume mount.\n      type: object\n      required:\n        - name\n        - mountPath\n      properties:\n        name:\n          description: The name of the volume mount.\n          type: string\n        mountPath:\n          description: The path within the container where the volume should be mounted. Must not contain colon (:).\n          type: string\n        readOnly:\n          description: The flag indicating whether the volume mount is read-only.\n          type: boolean\n    ContainerExec:\n      type: object\n      description: The container execution command, for liveness or readiness probe\n      properties:\n        command:\n          description: The commands to execute within the container.\n          type: array\n          items:\n            type: string\n    ContainerHttpGet:\n      type: object\n      description: The container Http Get settings, for liveness or readiness probe\n      properties:\n        path:\n          description: The path to probe.\n          type: string\n        port:\n          type: integer\n          description: The port number to probe.\n          format: int32\n        scheme:\n          description: The scheme.\n          type: string\n          enum:\n            - http\n            - https\n          x-ms-enum:\n            name: Scheme\n            modelAsString: true\n        httpHeaders:\n          description: The HTTP headers.\n          type: array\n          items:\n            $ref: '#/components/schemas/HttpHeader'\n          x-ms-identifiers:\n            - name\n      required:\n        - port\n    ContainerProbe:\n      type: object\n      description: The container probe, for liveness or readiness\n      properties:\n        exec:\n          description: The execution command to probe\n          $ref: '#/components/schemas/ContainerExec'\n        httpGet:\n          description: The Http Get settings to probe\n          $ref: '#/components/schemas/ContainerHttpGet'\n        initialDelaySeconds:\n          description: The initial delay seconds.\n          type: integer\n          format: int32\n        periodSeconds:\n          description: The period seconds.\n          type: integer\n          format: int32\n        failureThreshold:\n          description: The failure threshold.\n          type: integer\n          format: int32\n        successThreshold:\n          description: The success threshold.\n          type: integer\n          format: int32\n        timeoutSeconds:\n          description: The timeout seconds.\n          type: integer\n          format: int32\n    ContainerGroup:\n      description: A container group.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource id.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        location:\n          type: string\n          description: The resource location.\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: The resource tags.\n        zones:\n          description: The zones for the container group.\n          type: array\n          items:\n            type: string\n        identity:\n          $ref: '#/components/schemas/ContainerGroupIdentity'\n          description: The identity of the container group, if configured.\n        properties:\n          x-ms-client-flatten: true\n          type: object\n          description: The container group properties\n          properties:\n            provisioningState:\n              readOnly: true\n              type: string\n              description: The provisioning state of the container group. This only appears in the response.\n            containers:\n              type: array\n              description: The containers within the container group.\n              items:\n                $ref: '#/components/schemas/Container'\n              x-ms-identifiers:\n                - name\n            imageRegistryCredentials:\n              type: array\n              description: The image registry credentials by which the container group is created from.\n              items:\n                $ref: '#/components/schemas/ImageRegistryCredential'\n              x-ms-identifiers:\n                - username\n            restartPolicy:\n              type: string\n              description: |\n                Restart policy for all containers within the container group. \n                - `Always` Always restart\n                - `OnFailure` Restart on failure\n                - `Never` Never restart\n              enum:\n                - Always\n                - OnFailure\n                - Never\n              x-ms-enum:\n                name: ContainerGroupRestartPolicy\n                modelAsString: true\n            ipAddress:\n              description: The IP address type of the container group.\n              $ref: '#/components/schemas/IpAddress'\n            osType:\n              type: string\n              description: The operating system type required by the containers in the container group.\n              enum:\n                - Windows\n                - Linux\n              x-ms-enum:\n                name: OperatingSystemTypes\n                modelAsString: true\n            volumes:\n              type: array\n              description: The list of volumes that can be mounted by containers in this container group.\n              items:\n                $ref: '#/components/schemas/Volume'\n              x-ms-identifiers:\n                - name\n            instanceView:\n              description: The instance view of the container group. Only valid in response.\n              readOnly: true\n              type: object\n              properties:\n                events:\n                  description: The events of this container group.\n                  readOnly: true\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Event'\n                  x-ms-identifiers:\n                    - name\n                    - type\n                state:\n                  readOnly: true\n                  type: string\n                  description: The state of the container group. Only valid in response.\n            diagnostics:\n              description: The diagnostic information for a container group.\n              $ref: '#/components/schemas/ContainerGroupDiagnostics'\n            subnetIds:\n              type: array\n              description: The subnet resource IDs for a container group.\n              items:\n                $ref: '#/components/schemas/ContainerGroupSubnetId'\n            dnsConfig:\n              description: The DNS config information for a container group.\n              $ref: '#/components/schemas/DnsConfiguration'\n            sku:\n              description: The SKU for a container group.\n              $ref: '#/components/schemas/ContainerGroupSku'\n            encryptionProperties:\n              description: The encryption properties for a container group.\n              $ref: '#/components/schemas/EncryptionProperties'\n            initContainers:\n              type: array\n              description: The init containers for a container group.\n              items:\n                $ref: '#/components/schemas/InitContainerDefinition'\n              x-ms-identifiers:\n                - name\n          required:\n            - containers\n            - osType\n      type: object\n    ContainerGroupProperties:\n      description: The container group properties\n      required:\n        - properties\n      properties:\n        identity:\n          $ref: '#/components/schemas/ContainerGroupIdentity'\n          description: The identity of the container group, if configured.\n        properties:\n          x-ms-client-flatten: true\n          type: object\n          description: The container group properties\n          properties:\n            provisioningState:\n              readOnly: true\n              type: string\n              description: The provisioning state of the container group. This only appears in the response.\n            containers:\n              type: array\n              description: The containers within the container group.\n              items:\n                $ref: '#/components/schemas/Container'\n              x-ms-identifiers:\n                - name\n            imageRegistryCredentials:\n              type: array\n              description: The image registry credentials by which the container group is created from.\n              items:\n                $ref: '#/components/schemas/ImageRegistryCredential'\n              x-ms-identifiers:\n                - username\n            restartPolicy:\n              type: string\n              description: |\n                Restart policy for all containers within the container group. \n                - `Always` Always restart\n                - `OnFailure` Restart on failure\n                - `Never` Never restart\n              enum:\n                - Always\n                - OnFailure\n                - Never\n              x-ms-enum:\n                name: ContainerGroupRestartPolicy\n                modelAsString: true\n            ipAddress:\n              description: The IP address type of the container group.\n              $ref: '#/components/schemas/IpAddress'\n            osType:\n              type: string\n              description: The operating system type required by the containers in the container group.\n              enum:\n                - Windows\n                - Linux\n              x-ms-enum:\n                name: OperatingSystemTypes\n                modelAsString: true\n            volumes:\n              type: array\n              description: The list of volumes that can be mounted by containers in this container group.\n              items:\n                $ref: '#/components/schemas/Volume'\n              x-ms-identifiers:\n                - name\n            instanceView:\n              description: The instance view of the container group. Only valid in response.\n              readOnly: true\n              type: object\n              properties:\n                events:\n                  description: The events of this container group.\n                  readOnly: true\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/Event'\n                  x-ms-identifiers:\n                    - name\n                    - type\n                state:\n                  readOnly: true\n                  type: string\n                  description: The state of the container group. Only valid in response.\n            diagnostics:\n              description: The diagnostic information for a container group.\n              $ref: '#/components/schemas/ContainerGroupDiagnostics'\n            subnetIds:\n              type: array\n              description: The subnet resource IDs for a container group.\n              items:\n                $ref: '#/components/schemas/ContainerGroupSubnetId'\n            dnsConfig:\n              description: The DNS config information for a container group.\n              $ref: '#/components/schemas/DnsConfiguration'\n            sku:\n              description: The SKU for a container group.\n              $ref: '#/components/schemas/ContainerGroupSku'\n            encryptionProperties:\n              description: The encryption properties for a container group.\n              $ref: '#/components/schemas/EncryptionProperties'\n            initContainers:\n              type: array\n              description: The init containers for a container group.\n              items:\n                $ref: '#/components/schemas/InitContainerDefinition'\n              x-ms-identifiers:\n                - name\n          required:\n            - containers\n            - osType\n      type: object\n    ContainerGroupIdentity:\n      description: Identity for the container group.\n      properties:\n        principalId:\n          readOnly: true\n          type: string\n          description: The principal id of the container group identity. This property will only be provided for a system assigned identity.\n        tenantId:\n          readOnly: true\n          type: string\n          description: The tenant id associated with the container group. This property will only be provided for a system assigned identity.\n        type:\n          type: string\n          description: The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group.\n          enum:\n            - SystemAssigned\n            - UserAssigned\n            - SystemAssigned, UserAssigned\n            - None\n          x-ms-enum:\n            name: ResourceIdentityType\n            modelAsString: false\n        userAssignedIdentities:\n          type: object\n          description: The list of user identities associated with the container group.\n          additionalProperties:\n            description: 'The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'\n            $ref: '#/components/schemas/UserAssignedIdentities'\n      type: object\n    UserAssignedIdentities:\n      type: object\n      description: 'The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'\n      properties:\n        principalId:\n          readOnly: true\n          type: string\n          description: The principal id of user assigned identity.\n        clientId:\n          readOnly: true\n          type: string\n          description: The client id of user assigned identity.\n    ImageRegistryCredential:\n      description: Image registry credential.\n      type: object\n      properties:\n        server:\n          type: string\n          description: The Docker image registry server without a protocol such as \"http\" and \"https\".\n        username:\n          type: string\n          description: The username for the private registry.\n        password:\n          type: string\n          description: The password for the private registry.\n          x-ms-secret: true\n        identity:\n          type: string\n          description: The identity for the private registry.\n        identityUrl:\n          type: string\n          description: The identity URL for the private registry.\n      required:\n        - server\n    ContainerGroupDiagnostics:\n      description: Container group diagnostic information.\n      type: object\n      properties:\n        logAnalytics:\n          description: Container group log analytics information.\n          $ref: '#/components/schemas/LogAnalytics'\n    LogAnalytics:\n      description: Container group log analytics information.\n      type: object\n      properties:\n        workspaceId:\n          description: The workspace id for log analytics\n          type: string\n        workspaceKey:\n          description: The workspace key for log analytics\n          type: string\n          x-ms-secret: true\n        logType:\n          type: string\n          description: The log type to be used.\n          enum:\n            - ContainerInsights\n            - ContainerInstanceLogs\n          x-ms-enum:\n            name: LogAnalyticsLogType\n            modelAsString: true\n        metadata:\n          type: object\n          description: Metadata for log analytics.\n          additionalProperties:\n            type: string\n        workspaceResourceId:\n          description: The workspace resource id for log analytics\n          type: string\n          x-ms-secret: true\n      required:\n        - workspaceId\n        - workspaceKey\n    ContainerGroupSubnetId:\n      description: Container group subnet information.\n      type: object\n      properties:\n        id:\n          description: Resource ID of virtual network and subnet.\n          type: string\n        name:\n          description: Friendly name for the subnet.\n          type: string\n      required:\n        - id\n    IpAddress:\n      description: IP address for the container group.\n      type: object\n      properties:\n        ports:\n          type: array\n          description: The list of ports exposed on the container group.\n          items:\n            $ref: '#/components/schemas/Port'\n          x-ms-identifiers:\n            - port\n        type:\n          type: string\n          description: Specifies if the IP is exposed to the public internet or private VNET.\n          enum:\n            - Public\n            - Private\n          x-ms-enum:\n            name: ContainerGroupIpAddressType\n            modelAsString: true\n        ip:\n          type: string\n          description: The IP exposed to the public internet.\n        dnsNameLabel:\n          type: string\n          description: The Dns name label for the IP.\n        autoGeneratedDomainNameLabelScope:\n          type: string\n          description: The value representing the security enum. The 'Unsecure' value is the default value if not selected and means the object's domain name label is not secured against subdomain takeover. The 'TenantReuse' value is the default value if selected and means the object's domain name label can be reused within the same tenant. The 'SubscriptionReuse' value means the object's domain name label can be reused within the same subscription. The 'ResourceGroupReuse' value means the object's domain name label can be reused within the same resource group. The 'NoReuse' value means the object's domain name label cannot be reused within the same resource group, subscription, or tenant.\n          enum:\n            - Unsecure\n            - TenantReuse\n            - SubscriptionReuse\n            - ResourceGroupReuse\n            - Noreuse\n          default: Unsecure\n          x-ms-enum:\n            name: dnsNameLabelReusePolicy\n            modelAsString: true\n        fqdn:\n          readOnly: true\n          type: string\n          description: The FQDN for the IP.\n      required:\n        - ports\n        - type\n    Port:\n      description: The port exposed on the container group.\n      type: object\n      properties:\n        protocol:\n          type: string\n          description: The protocol associated with the port.\n          enum:\n            - TCP\n            - UDP\n          x-ms-enum:\n            name: ContainerGroupNetworkProtocol\n            modelAsString: true\n        port:\n          type: integer\n          description: The port number.\n          format: int32\n      required:\n        - port\n    ContainerPort:\n      description: The port exposed on the container instance.\n      type: object\n      properties:\n        protocol:\n          type: string\n          description: The protocol associated with the port.\n          enum:\n            - TCP\n            - UDP\n          x-ms-enum:\n            name: ContainerNetworkProtocol\n            modelAsString: true\n        port:\n          type: integer\n          format: int32\n          description: The port number exposed within the container group.\n      required:\n        - port\n    EnvironmentVariable:\n      description: The environment variable to set within the container instance.\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the environment variable.\n        value:\n          type: string\n          description: The value of the environment variable.\n        secureValue:\n          type: string\n          description: The value of the secure environment variable.\n          x-ms-secret: true\n      required:\n        - name\n    OperationListResult:\n      description: The operation list response that contains all operations for Azure Container Instance service.\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Operation'\n          x-ms-identifiers:\n            - name\n          description: The list of operations.\n        nextLink:\n          type: string\n          description: The URI to fetch the next page of operations.\n    Operation:\n      description: An operation for Azure Container Instance service.\n      required:\n        - name\n        - display\n      properties:\n        name:\n          type: string\n          description: The name of the operation.\n        display:\n          description: The display information of the operation.\n          type: object\n          properties:\n            provider:\n              description: The name of the provider of the operation.\n              type: string\n            resource:\n              type: string\n              description: The name of the resource type of the operation.\n            operation:\n              description: The friendly name of the operation.\n              type: string\n            description:\n              description: The description of the operation.\n              type: string\n        properties:\n          type: object\n          description: The additional properties.\n          x-ms-client-flatten: true\n        origin:\n          type: string\n          description: The intended executor of the operation.\n          enum:\n            - User\n            - System\n          x-ms-enum:\n            name: ContainerInstanceOperationsOrigin\n            modelAsString: true\n      type: object\n    UsageListResult:\n      description: The response containing the usage data\n      type: object\n      properties:\n        value:\n          readOnly: true\n          type: array\n          description: The usage data.\n          items:\n            $ref: '#/components/schemas/Usage'\n          x-ms-identifiers:\n            - name\n    Usage:\n      description: A single usage result\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Id of the usage result\n        unit:\n          readOnly: true\n          type: string\n          description: Unit of the usage result\n        currentValue:\n          readOnly: true\n          type: integer\n          format: int32\n          description: The current usage of the resource\n        limit:\n          readOnly: true\n          type: integer\n          format: int32\n          description: The maximum permitted usage of the resource.\n        name:\n          readOnly: true\n          type: object\n          description: The name object of the resource\n          properties:\n            value:\n              readOnly: true\n              type: string\n              description: The name of the resource\n            localizedValue:\n              readOnly: true\n              type: string\n              description: The localized name of the resource\n    ContainerGroupListResult:\n      description: The container group list response that contains the container group properties.\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContainerGroup'\n          description: The list of container groups.\n        nextLink:\n          type: string\n          description: The URI to fetch the next page of container groups.\n    Logs:\n      description: The logs.\n      type: object\n      properties:\n        content:\n          type: string\n          description: The content of the log.\n    ContainerExecRequest:\n      description: The container exec request.\n      type: object\n      properties:\n        command:\n          type: string\n          description: The command to be executed.\n        terminalSize:\n          type: object\n          description: The size of the terminal.\n          properties:\n            rows:\n              type: integer\n              format: int32\n              description: The row size of the terminal\n            cols:\n              type: integer\n              format: int32\n              description: The column size of the terminal\n    ContainerExecResponse:\n      description: The information for the container exec command.\n      type: object\n      properties:\n        webSocketUri:\n          type: string\n          description: The uri for the exec websocket.\n        password:\n          type: string\n          description: The password to start the exec command.\n          x-ms-secret: true\n    ContainerAttachResponse:\n      description: The information for the output stream from container attach.\n      type: object\n      properties:\n        webSocketUri:\n          type: string\n          description: The uri for the output stream from the attach.\n        password:\n          type: string\n          description: The password to the output stream from the attach. Send as an Authorization header value when connecting to the websocketUri.\n          x-ms-secret: true\n    HttpHeader:\n      description: The HTTP header.\n      type: object\n      properties:\n        name:\n          type: string\n          description: The header name.\n        value:\n          type: string\n          description: The header value.\n    DnsConfiguration:\n      description: DNS configuration for the container group.\n      type: object\n      required:\n        - nameServers\n      properties:\n        nameServers:\n          description: The DNS servers for the container group.\n          type: array\n          items:\n            type: string\n        searchDomains:\n          description: The DNS search domains for hostname lookup in the container group.\n          type: string\n        options:\n          description: The DNS options for the container group.\n          type: string\n    Resource:\n      type: object\n      description: The Resource model definition.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource id.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        location:\n          type: string\n          description: The resource location.\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: The resource tags.\n        zones:\n          description: The zones for the container group.\n          type: array\n          items:\n            type: string\n      x-ms-azure-resource: true\n    CachedImagesListResult:\n      description: The response containing cached images.\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/cachedImages'\n          x-ms-identifiers:\n            - image\n          description: The list of cached images.\n        nextLink:\n          type: string\n          description: The URI to fetch the next page of cached images.\n    cachedImages:\n      description: The cached image and OS type.\n      type: object\n      required:\n        - osType\n        - image\n      properties:\n        osType:\n          type: string\n          description: The OS type of the cached image.\n        image:\n          type: string\n          description: The cached image name.\n    CapabilitiesListResult:\n      description: The response containing list of capabilities.\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Capabilities'\n          x-ms-identifiers:\n            - resourceType\n            - location\n          description: The list of capabilities.\n        nextLink:\n          type: string\n          description: The URI to fetch the next page of capabilities.\n    Capabilities:\n      description: The regional capabilities.\n      type: object\n      properties:\n        resourceType:\n          type: string\n          readOnly: true\n          description: The resource type that this capability describes.\n        osType:\n          type: string\n          readOnly: true\n          description: The OS type that this capability describes.\n        location:\n          type: string\n          readOnly: true\n          description: The resource location.\n        ipAddressType:\n          type: string\n          readOnly: true\n          description: The ip address type that this capability describes.\n        gpu:\n          type: string\n          readOnly: true\n          description: The GPU sku that this capability describes.\n        capabilities:\n          type: object\n          readOnly: true\n          description: The supported capabilities.\n          properties:\n            maxMemoryInGB:\n              type: number\n              readOnly: true\n              description: The maximum allowed memory request in GB.\n            maxCpu:\n              type: number\n              readOnly: true\n              description: The maximum allowed CPU request in cores.\n            maxGpuCount:\n              type: number\n              readOnly: true\n              description: The maximum allowed GPU count.\n    ContainerGroupSku:\n      description: The container group SKU.\n      type: string\n      enum:\n        - Standard\n        - Dedicated\n      x-ms-enum:\n        name: ContainerGroupSku\n        modelAsString: true\n    EncryptionProperties:\n      description: The container group encryption properties.\n      type: object\n      properties:\n        vaultBaseUrl:\n          description: The keyvault base url.\n          type: string\n        keyName:\n          description: The encryption key name.\n          type: string\n        keyVersion:\n          description: The encryption key version.\n          type: string\n      required:\n        - vaultBaseUrl\n        - keyName\n        - keyVersion\n    InitContainerDefinition:\n      description: The init container definition.\n      required:\n        - name\n        - properties\n      properties:\n        image:\n          description: The image of the init container.\n          type: string\n        command:\n          description: The command to execute within the init container in exec form.\n          type: array\n          items:\n            type: string\n        environmentVariables:\n          description: The environment variables to set in the init container.\n          type: array\n          items:\n            $ref: '#/components/schemas/EnvironmentVariable'\n          x-ms-identifiers:\n            - name\n        instanceView:\n          description: The instance view of the init container. Only valid in response.\n          readOnly: true\n          type: object\n          properties:\n            restartCount:\n              readOnly: true\n              type: integer\n              format: int32\n              description: The number of times that the init container has been restarted.\n            currentState:\n              readOnly: true\n              description: The current state of the init container.\n              $ref: '#/components/schemas/ContainerState'\n            previousState:\n              readOnly: true\n              description: The previous state of the init container.\n              $ref: '#/components/schemas/ContainerState'\n            events:\n              readOnly: true\n              description: The events of the init container.\n              type: array\n              items:\n                $ref: '#/components/schemas/Event'\n              x-ms-identifiers:\n                - name\n                - type\n        volumeMounts:\n          description: The volume mounts available to the init container.\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeMount'\n          x-ms-identifiers:\n            - name\n        name:\n          description: The name for the init container.\n          type: string\n      type: object\n    InitContainerPropertiesDefinition:\n      description: The init container definition properties.\n      type: object\n      properties:\n        image:\n          description: The image of the init container.\n          type: string\n        command:\n          description: The command to execute within the init container in exec form.\n          type: array\n          items:\n            type: string\n        environmentVariables:\n          description: The environment variables to set in the init container.\n          type: array\n          items:\n            $ref: '#/components/schemas/EnvironmentVariable'\n          x-ms-identifiers:\n            - name\n        instanceView:\n          description: The instance view of the init container. Only valid in response.\n          readOnly: true\n          type: object\n          properties:\n            restartCount:\n              readOnly: true\n              type: integer\n              format: int32\n              description: The number of times that the init container has been restarted.\n            currentState:\n              readOnly: true\n              description: The current state of the init container.\n              $ref: '#/components/schemas/ContainerState'\n            previousState:\n              readOnly: true\n              description: The previous state of the init container.\n              $ref: '#/components/schemas/ContainerState'\n            events:\n              readOnly: true\n              description: The events of the init container.\n              type: array\n              items:\n                $ref: '#/components/schemas/Event'\n              x-ms-identifiers:\n                - name\n                - type\n        volumeMounts:\n          description: The volume mounts available to the init container.\n          type: array\n          items:\n            $ref: '#/components/schemas/VolumeMount'\n          x-ms-identifiers:\n            - name\n    CloudError:\n      x-ms-external: true\n      properties:\n        error:\n          $ref: '#/components/schemas/CloudErrorBody'\n      description: An error response from the Container Instance service.\n      type: object\n    CloudErrorBody:\n      x-ms-external: true\n      properties:\n        code:\n          type: string\n          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n        message:\n          type: string\n          description: A message describing the error, intended to be suitable for display in a user interface.\n        target:\n          type: string\n          description: The target of the particular error. For example, the name of the property in error.\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/CloudErrorBody'\n          x-ms-identifiers:\n            - message\n            - target\n          description: A list of additional details about the error.\n      description: An error response from the Container Instance service.\n      type: object\n    NetworkDependenciesResponse:\n      description: Response for network dependencies, always empty list.\n      type: array\n      items:\n        type: string\n  x-stackQL-resources:\n    container_groups:\n      id: azure.container_instance.container_groups\n      name: container_groups\n      title: Container_groups\n      methods:\n        ContainerGroups_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerInstance~1containerGroups~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        ContainerGroups_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        ContainerGroups_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        ContainerGroups_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1?api-version=2021-10-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        ContainerGroups_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1?api-version=2021-10-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        ContainerGroups_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1?api-version=2021-10-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ContainerGroups_Restart:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1restart~1?api-version=2021-10-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ContainerGroups_Stop:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1stop~1?api-version=2021-10-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ContainerGroups_Start:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1start~1?api-version=2021-10-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        ContainerGroups_GetOutboundNetworkDependenciesEndpoints:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1outboundNetworkDependenciesEndpoints~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/container_groups/methods/ContainerGroups_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/container_groups/methods/ContainerGroups_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/container_groups/methods/ContainerGroups_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/container_groups/methods/ContainerGroups_Delete'\n    operations:\n      id: azure.container_instance.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.ContainerInstance~1operations~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\n    location:\n      id: azure.container_instance.location\n      name: location\n      title: Location\n      methods:\n        Location_ListUsage:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerInstance~1locations~1{location}~1usages~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Location_ListCachedImages:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerInstance~1locations~1{location}~1cachedImages~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Location_ListCapabilities:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.ContainerInstance~1locations~1{location}~1capabilities~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    containers:\n      id: azure.container_instance.containers\n      name: containers\n      title: Containers\n      methods:\n        Containers_ListLogs:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1containers~1{containerName}~1logs~1?api-version=2021-10-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Containers_ExecuteCommand:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1containers~1{containerName}~1exec~1?api-version=2021-10-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Containers_Attach:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ContainerInstance~1containerGroups~1{containerGroupName}~1containers~1{containerName}~1attach~1?api-version=2021-10-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\n    subnet_service_association_link:\n      id: azure.container_instance.subnet_service_association_link\n      name: subnet_service_association_link\n      title: Subnet_service_association_link\n      methods:\n        SubnetServiceAssociationLink_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Network~1virtualNetworks~1{virtualNetworkName}~1subnets~1{subnetName}~1providers~1Microsoft.ContainerInstance~1serviceAssociationLinks~1default~1?api-version=2021-10-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/subnet_service_association_link/methods/SubnetServiceAssociationLink_Delete'\npaths:\n  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups/?api-version=2021-10-01:\n    get:\n      operationId: ContainerGroups_List\n      summary: Get a list of container groups in the specified subscription.\n      description: Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroupListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/?api-version=2021-10-01:\n    get:\n      operationId: ContainerGroups_ListByResourceGroup\n      summary: Get a list of container groups in the specified subscription and resource group.\n      description: Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroupListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/?api-version=2021-10-01:\n    get:\n      operationId: ContainerGroups_Get\n      summary: Get the properties of the specified container group.\n      description: Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroup'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: exec\n    put:\n      operationId: ContainerGroups_CreateOrUpdate\n      summary: Create or update container groups.\n      description: Create or update container groups with specified configurations.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      requestBody:\n        description: The properties of the container group to be created or updated.\n        required: true\n        x-ms-requestBody-name: containerGroup\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContainerGroup'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroup'\n        '201':\n          description: Created - the container group is created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroup'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: insert\n    patch:\n      operationId: ContainerGroups_Update\n      summary: Update container groups.\n      description: Updates container group tags with specified values.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      requestBody:\n        description: The container group resource with just the tags to be updated.\n        required: true\n        x-ms-requestBody-name: Resource\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Resource'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroup'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: exec\n    delete:\n      operationId: ContainerGroups_Delete\n      summary: Delete the specified container group.\n      description: Delete the specified container group in the specified subscription and resource group. The operation does not delete other resources provided by the user, such as volumes.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerGroup'\n        '202':\n          description: Delete started.\n        '204':\n          description: No Content - the specified container group was not found.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/restart/?api-version=2021-10-01:\n    post:\n      operationId: ContainerGroups_Restart\n      summary: Restarts all containers in a container group.\n      description: Restarts all containers in a container group in place. If container image has updates, new image will be downloaded.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      responses:\n        '204':\n          description: NoContent\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/stop/?api-version=2021-10-01:\n    post:\n      operationId: ContainerGroups_Stop\n      summary: Stops all containers in a container group.\n      description: Stops all containers in a container group. Compute resources will be deallocated and billing will stop.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      responses:\n        '204':\n          description: NoContent\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/start/?api-version=2021-10-01:\n    post:\n      operationId: ContainerGroups_Start\n      summary: Starts all containers in a container group.\n      description: Starts all containers in a container group. Compute resources will be allocated and billing will start.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      responses:\n        '202':\n          description: Started - the container group is starting.\n        '204':\n          description: Started - the container group is already running or starting.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: exec\n  /providers/Microsoft.ContainerInstance/operations/?api-version=2021-10-01:\n    get:\n      tags:\n        - Operations\n      operationId: Operations_List\n      description: List the operations for Azure Container Instance service.\n      parameters: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages/?api-version=2021-10-01:\n    get:\n      operationId: Location_ListUsage\n      description: Get the usage for a subscription\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/LocationParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsageListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: location\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs/?api-version=2021-10-01:\n    get:\n      operationId: Containers_ListLogs\n      summary: Get the logs for a specified container instance.\n      description: Get the logs for a specified container instance in a specified resource group and container group.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n        - name: containerName\n          in: path\n          description: The name of the container instance.\n          required: true\n          schema:\n            type: string\n        - name: tail\n          in: query\n          description: The number of lines to show from the tail of the container instance log. If not provided, all available logs are shown up to 4mb.\n          schema:\n            format: int32\n            type: integer\n        - name: timestamps\n          in: query\n          description: If true, adds a timestamp at the beginning of every line of log output. If not provided, defaults to false.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Logs'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/exec/?api-version=2021-10-01:\n    post:\n      operationId: Containers_ExecuteCommand\n      summary: Executes a command in a specific container instance.\n      description: Executes a command for a specific container instance in a specified resource group and container group.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n        - name: containerName\n          in: path\n          description: The name of the container instance.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The request for the exec command.\n        required: true\n        x-ms-requestBody-name: containerExecRequest\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContainerExecRequest'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerExecResponse'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/attach/?api-version=2021-10-01:\n    post:\n      operationId: Containers_Attach\n      summary: Attach to the output of a specific container instance.\n      description: Attach to the output stream of a specific container instance in a specified resource group and container group.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n        - name: containerName\n          in: path\n          description: The name of the container instance.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContainerAttachResponse'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/cachedImages/?api-version=2021-10-01:\n    get:\n      operationId: Location_ListCachedImages\n      summary: Get the list of cached images.\n      description: Get the list of cached images on specific OS type for a subscription in a region.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/LocationParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CachedImagesListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: location\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/capabilities/?api-version=2021-10-01:\n    get:\n      operationId: Location_ListCapabilities\n      summary: Get the list of capabilities of the location.\n      description: Get the list of CPU/memory/GPU capabilities of a region.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/LocationParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CapabilitiesListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: location\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/outboundNetworkDependenciesEndpoints/?api-version=2021-10-01:\n    get:\n      operationId: ContainerGroups_GetOutboundNetworkDependenciesEndpoints\n      summary: Get all network dependencies for container group.\n      description: Gets all the network dependencies for this container group to allow complete control of network setting and configuration. For container groups, this will always be an empty list.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/ContainerGroupNameParameter'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkDependenciesResponse'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: container_groups\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}/providers/Microsoft.ContainerInstance/serviceAssociationLinks/default/?api-version=2021-10-01:\n    delete:\n      operationId: SubnetServiceAssociationLink_Delete\n      summary: Delete container group virtual network association links.\n      description: Delete container group virtual network association links. The operation does not delete other resources provided by the user.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/VirtualNetworkNameParameter'\n        - $ref: '#/components/parameters/SubnetNameParameter'\n      responses:\n        '200':\n          description: OK\n        '202':\n          description: Delete started.\n        '204':\n          description: No Content - the specified container group was not found.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: subnet_service_association_link\n      x-stackQL-verb: delete\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/-/blob/providers/src/azure/v0.2.0/services/container_instance.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/providers/src/azure/v0.2.0/services/container_instance.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:46001: path MUST NOT contain a query string"
}