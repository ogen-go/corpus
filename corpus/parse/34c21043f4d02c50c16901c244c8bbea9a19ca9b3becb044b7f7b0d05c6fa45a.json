{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/StephenOTT/TAXII-Server"
		},
		"file": {
			"name": "taxii-client-api-0.5.yml",
			"size": 0,
			"path": "swagger/taxii-client-api-0.5.yml",
			"byteSize": 52721,
			"content": "openapi: 3.0.1\ninfo:\n  title: TAXII Client API\n  description: TAXII Client API (2.1)\n  contact:\n    name: StephenOTT\n    url: http://github.com/stephenott/TAXII-Server\n  license:\n    name: --\n    url: http://github.com/stephenott\n  version: \"0.5\"\npaths:\n  /{apiRoot}:\n    get:\n      summary: Get information about a specific API Root\n      description: This Endpoint provides general information about an API Root, which\n        can be used to help users and clients decide whether and how they want to\n        interact with it. Multiple API Roots MAY be hosted on a single TAXII Server.  Often,\n        an API Root represents a single trust group.\n      operationId: getApiRoot\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/api-root'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The Discovery service is not found, or the client does not\n            have access to the resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/status/{statusId}:\n    get:\n      summary: Get status information for a specific status ID\n      description: This Endpoint provides information about the status of a previous\n        request. In TAXII 2.1, the only request that can be monitored is one to add\n        objects to a Collection. It is typically used by TAXII Clients to monitor\n        a POST request that they made in order to take action when it is complete.\n      operationId: getStatus\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: statusId\n        in: path\n        description: the identifier of the status message being requested\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/status'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root or Status ID are not found, or the client does\n            not have access to the resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections:\n    get:\n      summary: Get information about all collections\n      description: This endpoint provides information about the Collections hosted\n        under this API Root. This is similar to the response to get a Collection,\n        but rather than providing information about one Collection it provides information\n        about all of the Collections. Most importantly, it provides the Collection's\n        id, which is used to request objects or manifest entries from the Collection.\n      operationId: getCollections\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/collections'\n        400:\n          description: The server did not understand the request\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this collections resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root is not found, or the client does not have access\n            to the collections resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections/{collectionId}:\n    get:\n      summary: Get information about a specific collection\n      description: This Endpoint provides general information about a Collection,\n        which can be used to help users and clients decide whether and how they want\n        to interact with it. For example, it will tell clients what it's called and\n        what permissions they have to it.\n      operationId: getCollection\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/collections'\n        400:\n          description: The server did not understand the request\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this collections resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root or Collection ID are not found, or the client\n            does not have access to the collection resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections/{collectionId}/manifest:\n    get:\n      summary: Get manifest information about the contents of a specific collection\n      description: This Endpoint retrieves a manifest about the objects in a Collection.\n        It supports filtering identical to the get objects Endpoint but rather than\n        returning the object itself it returns metadata about the object. It can be\n        used to retrieve metadata to decide whether it's worth retrieving the actual\n        objects.\n      operationId: getCollectionManifest\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: added_after\n        in: query\n        description: a single timestamp\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: a single integer\n        schema:\n          type: integer\n      - name: next\n        in: query\n        description: a single string\n        schema:\n          type: string\n      - name: match[id]\n        in: query\n        description: an id(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[type]\n        in: query\n        description: the type(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[version]\n        in: query\n        description: the version(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[spec_version]\n        in: query\n        description: the specification version(s)\n        schema:\n          type: array\n          items:\n            type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n            X-TAXII-Date-Added-First:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n            X-TAXII-Date-Added-Last:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/manifest'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this manifest resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root or Collection ID are not found, or the client\n            does not have access to the manifest resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections/{collectionId}/objects:\n    get:\n      summary: Get all objects from a collection\n      description: This Endpoint retrieves objects from a Collection. Clients can\n        search for objects in the Collection, retrieve all objects in a Collection,\n        or paginate through objects in the Collection.\n      operationId: getCollectionObjects\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: added_after\n        in: query\n        description: a single timestamp\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: a single integer\n        schema:\n          type: integer\n      - name: next\n        in: query\n        description: a single string\n        schema:\n          type: string\n      - name: match[id]\n        in: query\n        description: an id(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[type]\n        in: query\n        description: the type(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[version]\n        in: query\n        description: the version(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[spec_version]\n        in: query\n        description: the specification version(s)\n        schema:\n          type: array\n          items:\n            type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n            X-TAXII-Date-Added-First:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n            X-TAXII-Date-Added-Last:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/envelop'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this objects resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root or Collection ID are not found, or the client\n            does not have access to the objects resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n    post:\n      summary: Add a new object to a specific collection\n      description: This Endpoint adds objects to a Collection.\n      operationId: addCollectionObjects\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      - name: Content-Type\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/envelop'\n        required: true\n      responses:\n        202:\n          description: The request was successful accepted\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/envelop'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to write to this objects resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root or Collection ID are not found, or the client\n            can not write to this objects resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        413:\n          description: The POSTed payload exceeds the max_content_length of the API\n            Root\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        415:\n          description: The client attempted to POST a payload with a content type\n            the server does not support\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        422:\n          description: The object type of version is not supported of could not be\n            processed.  This can happen, for example, when sending a version of STIX\n            that this TAXII Server does not support and cannot process, when sending\n            a malformed body, or other unprocessable content\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections/{collectionId}/objects/{objectId}:\n    get:\n      summary: Get a specific object from a collection\n      description: This Endpoint gets an object from a Collection by its id. It can\n        be thought of as a search where the match[id] parameter is set to the {objectId}\n        in the path. For STIX 2 objects, the {objectId} MUST be the STIX id.\n      operationId: getCollectionObject\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: objectId\n        in: path\n        description: the ID of the object being requested\n        required: true\n        schema:\n          type: string\n      - name: added_after\n        in: query\n        description: a single timestamp\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: a single integer\n        schema:\n          type: integer\n      - name: next\n        in: query\n        description: a single string\n        schema:\n          type: string\n      - name: match[version]\n        in: query\n        description: the version(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[spec_version]\n        in: query\n        description: the specification version(s)\n        schema:\n          type: array\n          items:\n            type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n            X-TAXII-Date-Added-First:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n            X-TAXII-Date-Added-Last:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/envelop'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this objects resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root, Collection ID and/or Object ID are not found,\n            or the client does not have access to the object resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections/{collectionId}/objects/{objectId}}:\n    delete:\n      summary: Delete a specific object from a collection\n      description: This endpoint deletes an object from a Collection by its id. For\n        STIX 2 objects, the {object-id} MUST be the STIX id.\n      operationId: deleteCollectionObject\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: objectId\n        in: path\n        description: the ID of the object being deleted\n        required: true\n        schema:\n          type: string\n      - name: match[version]\n        in: query\n        description: the version(s) of an object\n        schema:\n          type: array\n          items:\n            type: string\n      - name: match[spec_version]\n        in: query\n        description: the specification version(s)\n        schema:\n          type: array\n          items:\n            type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          content:\n            application/taxii+json;version=2.1: {}\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client has access to the object, but not to delete it\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root, Collection ID and/or Object ID are not found,\n            or the client does not have access to the object\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /{apiRoot}/collections/{collectionId}/objects/{objectId}/versions:\n    get:\n      summary: Get a list of object versions from a collection\n      description: This Endpoint retrieves a list of one or more versions of an object\n        in a Collection. This list can be used to decide whether it's worth retrieving\n        the actual objects, or if new versions have been added. If a STIX object is\n        not versioned (and therefore does not have a modified timestamp), the server\n        MUST use created timestamp.\n      operationId: getCollectionObjectVersions\n      parameters:\n      - name: apiRoot\n        in: path\n        description: the base URL of the API Root\n        required: true\n        schema:\n          type: string\n      - name: collectionId\n        in: path\n        description: the identifier of the Collection being requested\n        required: true\n        schema:\n          type: string\n      - name: objectId\n        in: path\n        description: the ID of the object being requested\n        required: true\n        schema:\n          type: string\n      - name: added_after\n        in: query\n        description: a single timestamp\n        schema:\n          type: string\n      - name: limit\n        in: query\n        description: a single integer\n        schema:\n          type: integer\n      - name: next\n        in: query\n        description: a single string\n        schema:\n          type: string\n      - name: match[spec_version]\n        in: query\n        description: the specification version(s)\n        schema:\n          type: array\n          items:\n            type: string\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n            X-TAXII-Date-Added-First:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n            X-TAXII-Date-Added-Last:\n              description: timestamp\n              required: true\n              schema:\n                $ref: '#/components/schemas/Timestamp'\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/versions'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this objects resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The API Root, Collection ID and/or Object ID are not found,\n            or the client does not have access to the object resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\n  /taxii2:\n    get:\n      summary: Get information about the TAXII Server and any advertised API Roots\n      description: This Endpoint provides general information about a TAXII Server,\n        including the advertised API Roots. It's a common entry point for TAXII Clients\n        into the data and services provided by a TAXII Server.\n      operationId: discovery\n      parameters:\n      - name: Accept\n        in: header\n        required: false\n        schema:\n          type: string\n          default: application/taxii+json;version=2.1\n          enum:\n          - application/taxii+json;version=2.1\n          - application/taxii+json;version=2.0\n          - application/taxii+json\n      responses:\n        200:\n          description: The request was successful\n          headers:\n            Content-Type:\n              description: Always value of application/taxii+json;version=2.1\n              required: true\n              schema:\n                type: string\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/discovery'\n        400:\n          description: The server did not understand the request or filter parameters\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        401:\n          description: The client needs to authenticate\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        403:\n          description: The client does not have access to this resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        404:\n          description: The Discovery service is not found, or the client does not\n            have access to the resource\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n        406:\n          description: The media type provided in the Accept header is invalid\n          content:\n            application/taxii+json;version=2.1:\n              schema:\n                $ref: '#/components/schemas/error'\n      security:\n      - basicAuth: []\ncomponents:\n  schemas:\n    TaxiiMediaType:\n      type: string\n      description: A Media Type that is for TAXII content such as application/taxii+json;version=2.1\n      format: taxii-media-type\n      example: application/taxii+json;version=2.1\n    api-root:\n      type: object\n      properties:\n        title:\n          type: string\n          description: A human readable plain text name used to identify this API\n            instance.\n        description:\n          type: string\n          description: A human readable plain text description for this API Root.\n          nullable: true\n        versions:\n          uniqueItems: true\n          type: array\n          description: The list of TAXII versions that this API Root is compatible\n            with. The values listed in this property MUST match the media types defined\n            in Section 1.6.8.1 and MUST include the optional version parameter.  A\n            value of application/taxii+json;version=2.1 MUST be included in this list\n            to indicate conformance with this specification.\n          items:\n            $ref: '#/components/schemas/TaxiiMediaType'\n        max_content_length:\n          type: integer\n          description: The maximum size of the request body in octets (8-bit bytes)\n            that the server can support. The value of the max_content_length MUST\n            be a positive integer greater than zero. This applies to requests only\n            and is determined by the server. Requests with total body length values\n            smaller than this value MUST NOT result in an HTTP 413 (Request Entity\n            Too Large) response. If for example, the server supported 100 MB of data,\n            the value for this property would be determined by 100*1024*1024 which\n            equals 104,857,600. This property contains useful information for the\n            client when it POSTs requests to the Add Objects endpoint.\n          format: int32\n      description: The api-root resource contains general information about the API\n        Root, such as a human-readable title and description, the TAXII versions it\n        supports, and the maximum size (max_content_length) of the content body it\n        will accept in a PUT or POST request.\n    Dictionary:\n      type: object\n      properties:\n        dictionary:\n          type: object\n          additionalProperties: true\n      description: TAXII Dictionary\n    error:\n      type: object\n      properties:\n        title:\n          type: string\n          description: A human readable plain text title for this error.\n        description:\n          type: string\n          description: A human readable plain text description that gives details\n            about the error or problem that was encountered by the application.\n          nullable: true\n        error_id:\n          type: string\n          description: An identifier for this particular error instance. A TAXII Server\n            might choose to assign each error occurrence its own identifier in order\n            to facilitate debugging.\n          nullable: true\n        error_code:\n          type: string\n          description: The error code for this error type. A TAXII Server might choose\n            to assign a common error code to all errors of the same type. Error codes\n            are application-specific and not intended to be meaningful across different\n            TAXII Servers.\n          nullable: true\n        http_status:\n          type: string\n          description: The HTTP status code applicable to this error. If this property\n            is provided it MUST match the HTTP status code found in the HTTP header.\n          nullable: true\n        external_details:\n          type: string\n          description: A URL that points to additional details. For example, this\n            could be a URL pointing to a knowledge base article describing the error\n            code. Absence of this property indicates that there are no additional\n            details.\n          nullable: true\n        details:\n          $ref: '#/components/schemas/Dictionary'\n      description: The error message is provided by TAXII Servers in the response\n        body when returning an HTTP error status and contains more information describing\n        the error, including a human-readable title and description, an error_code\n        and error_id, and a details structure to capture further structured information\n        about the error. All of the properties are application-specific, and clients\n        shouldn't assume consistent meaning across TAXII Servers even if the codes,\n        IDs, or titles are the same.\n    Identifier:\n      type: string\n      format: uuid\n    RequestStatus:\n      type: string\n      enum:\n      - COMPLETE\n      - PENDING\n    Timestamp:\n      type: string\n      format: date-time\n    status-details:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        version:\n          $ref: '#/components/schemas/Timestamp'\n        message:\n          type: string\n          description: A message indicating more information about the object being\n            created, its pending state, or why the object failed to be created.\n          nullable: true\n      description: This type represents an object that was added, is pending, or not\n        added to the Collection. It contains the id and version of the object along\n        with a message describing any details about its status.\n    status:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        status:\n          $ref: '#/components/schemas/RequestStatus'\n        request_timestamp:\n          $ref: '#/components/schemas/Timestamp'\n        totalCount:\n          type: integer\n          description: The total number of objects that were in the request, which\n            would be the number of objects in the envelope. The value of the total_count\n            MUST be a positive integer greater than or equal to zero. If this property\n            has a value of 0, then the TAXII Server has not yet started processing\n            the request.\n          format: int32\n        success_count:\n          type: integer\n          description: The number of objects that were successfully created. The value\n            of the success_count MUST be a positive integer greater than or equal\n            to zero.\n          format: int32\n        successes:\n          type: array\n          description: A list of objects that was successfully processed.\n          nullable: true\n          items:\n            $ref: '#/components/schemas/status-details'\n        failure_count:\n          type: integer\n          description: The number of objects that failed to be created. The value\n            of the failure_count MUST be a positive integer greater than or equal\n            to zero.\n          format: int32\n        failures:\n          type: array\n          description: A list of objects that was not successfully processed.\n          nullable: true\n          items:\n            $ref: '#/components/schemas/status-details'\n        pending_count:\n          type: integer\n          description: The number of objects that have yet to be processed. The value\n            of the pending_count MUST be a positive integer greater than or equal\n            to zero.\n          format: int32\n        pendings:\n          type: array\n          description: A list of objects that have yet to be processed.\n          nullable: true\n          items:\n            $ref: '#/components/schemas/status-details'\n      description: The status resource represents information about a request to add\n        objects to a Collection. It contains information about the status of the request,\n        such as whether or not it's completed (status) and MAY contain the status\n        of individual objects within the request (i.e. whether they are still pending,\n        completed and failed, or completed and succeeded).\n    collection:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        title:\n          type: string\n          description: A human readable plain text title used to identify this Collection.\n        description:\n          type: string\n          description: A human readable plain text description for this Collection.\n          nullable: true\n        alias:\n          type: string\n          description: A human readable collection name that can be used on systems\n            to alias a collection ID. This could be used by organizations that want\n            to preconfigure a known collection of data, regardless of the underlying,\n            collection ID that is configured on a specific implementations.  If defined,\n            the alias MUST be unique within a single api-root on a single TAXII server.\n            There is no guarantee that an alias is globally unique across api-roots\n            or TAXII server instances.\n          nullable: true\n        can_read:\n          type: boolean\n          description: Indicates if the requester can read (i.e., GET) objects from\n            this Collection. If true, users are allowed to access the Get Objects,\n            Get an Object, or Get Object Manifests endpoints for this Collection.\n            If false, users are not allowed to access these endpoints.\n        can_write:\n          type: boolean\n          description: Indicates if the requester can write (i.e., POST) objects to\n            this Collection. If true, users are allowed to access the Add Objects\n            endpoint for this Collection. If false, users are not allowed to access\n            this endpoint.\n        media_types:\n          type: array\n          description: A list of supported media types for Objects in this Collection.\n            Absence of this property is equivalent to a single-value list containing\n            application/stix+json. This list MUST describe all media types that the\n            Collection can store.\n          items:\n            $ref: '#/components/schemas/TaxiiMediaType'\n      description: The collection resource contains general information about a Collection,\n        such as its id, a human-readable title and description, an optional list of\n        supported media_types (representing the media type of objects can be requested\n        from or added to it), and whether the TAXII Client, as authenticated, can\n        get objects from the Collection and/or add objects to it.\n    collections:\n      type: object\n      properties:\n        collections:\n          uniqueItems: true\n          type: array\n          description: A list of Collections. If there are no Collections in the list,\n            this key MUST be omitted, and the response is an empty object. The collection\n            resource is defined in section 5.2.1.\n          items:\n            $ref: '#/components/schemas/collection'\n      description: The collections resource is a simple wrapper around a list of collection\n        resources.\n    StixMediaType:\n      type: string\n      description: A Media Type that is for STIX content such as application/stix+json;version=2.1\n      format: stix-media-type\n      example: application/stix+json;version=2.1\n    manifest-record:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/Identifier'\n        date_added:\n          $ref: '#/components/schemas/Timestamp'\n        version:\n          $ref: '#/components/schemas/Timestamp'\n        media_type:\n          $ref: '#/components/schemas/StixMediaType'\n      description: The manifest-record type captures metadata about a single version\n        of an object, indicated by the id property. The metadata includes information\n        such as when that version of the object was added to the Collection, the version\n        of the object itself, and the media type that this specific version of the\n        object is available in.\n    manifest:\n      type: object\n      properties:\n        more:\n          type: boolean\n          description: This property identifies if there is more content available\n            based on the search criteria. The absence of this property means the value\n            is false.\n        objects:\n          uniqueItems: true\n          type: array\n          description: The list of manifest entries for objects returned by the request.\n            If there are no manifest-record items in the list, this key MUST be omitted,\n            and the response is an empty object.\n          items:\n            $ref: '#/components/schemas/manifest-record'\n      description: The manifest resource is a simple wrapper around a list of manifest-record\n        items.\n    stix-object:\n      type: object\n      description: A STIX Object\n    envelop:\n      type: object\n      properties:\n        more:\n          type: boolean\n          description: This property identifies if there is more content available\n            based on the search criteria. The absence of this property means the value\n            is false.\n        next:\n          type: string\n          description: This property identifies the server provided value of the next\n            record or set of records in the paginated data set. This property MAY\n            be populated if the more property is set to true.\n          nullable: true\n        objects:\n          uniqueItems: true\n          type: array\n          description: This property contains one or more STIX Objects. Objects in\n            this list MUST be a STIX Object (e.g., SDO, SCO, SRO, Language Content\n            object, or a Marking Definition object).\n          items:\n            $ref: '#/components/schemas/stix-object'\n      description: The envelope is a simple wrapper for STIX 2 content. When returning\n        STIX 2 content in a TAXII response the HTTP root object payload MUST be an\n        envelope. This specification does not define any other form of content wrapper\n        for objects outside of STIX content.\n    versions:\n      type: object\n      properties:\n        more:\n          type: boolean\n          description: This property identifies if there is more content available\n            based on the search criteria. The absence of this property means the value\n            is false.\n          nullable: true\n        versions:\n          uniqueItems: true\n          type: array\n          description: The list of object versions returned by the request. If there\n            are no versions returned, this key MUST be omitted, and the response is\n            an empty object.\n          items:\n            $ref: '#/components/schemas/Timestamp'\n      description: The versions resource is a simple wrapper around a list of versions.\n    discovery:\n      type: object\n      properties:\n        title:\n          type: string\n          description: A human readable plain text name used to identify this server.\n        description:\n          type: string\n          description: A human readable plain text description for this server.\n          nullable: true\n        contact:\n          type: string\n          description: The human readable plain text contact information for this\n            server and/or the administrator of this server.\n          nullable: true\n        default:\n          type: string\n          nullable: true\n        api_roots:\n          type: array\n          description: A list of URLs that identify known API Roots. This list MAY\n            be filtered on a per-client basis.  API Root URLs MUST be HTTPS absolute\n            URLs or relative URLs. API Root relative URLs MUST begin with a single\n            \"/\" character and MUST NOT begin with \"//\" or \"../\". API Root URLs MUST\n            NOT contain a URL query component.\n          nullable: true\n          items:\n            type: string\n      description: The discovery resource contains information about a TAXII Server,\n        such as a human-readable title, description, and contact information, as well\n        as a list of API Roots that it is advertising. It also has an indication of\n        which API Root it considers the default, or the one to use in the absence\n        of another information/user choice.\n  securitySchemes:\n    basicAuth:\n      type: http\n      description: Basic Authentication\n      scheme: basic\n",
			"canonicalURL": "/github.com/StephenOTT/TAXII-Server@5dd88c991c598f616d2c08d620fe4cd058fd0b75/-/blob/swagger/taxii-client-api-0.5.yml",
			"externalURLs": [
				{
					"url": "https://github.com/StephenOTT/TAXII-Server/blob/5dd88c991c598f616d2c08d620fe4cd058fd0b75/swagger/taxii-client-api-0.5.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /{apiRoot}/collections/{collectionId}/objects/{objectId}}: delete: operation \"deleteCollectionObject\": parse path \"/{apiRoot}/collections/{collectionId}/objects/{objectId}}\": invalid path: /{apiRoot}/collections/{collectionId}/objects/{objectId}}"
}