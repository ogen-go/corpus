{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/adorsys/open-banking-gateway"
		},
		"file": {
			"name": "tpp_consent_api.yml",
			"size": 0,
			"path": "opba-consent-rest-api/src/main/resources/static/tpp_consent_api.yml",
			"byteSize": 32967,
			"content": "openapi: 3.0.1\ninfo:\n  title: Open Banking Gateway - Consent Authorization API.\n  termsOfService: urn:tos\n  contact: {}\n  license:\n    name: Affero GNU General Public License v.3\n    url: https://www.gnu.org/licenses/agpl-3.0.txt\n  version: \"1.0\"\n  description: |\n    Interface used by the PsuUserAgent to present consent authorization services to the PSU. The consent authorization process is triggered by redirecting the PSU from\n    the [TppBankingApi](https://adorsys.github.io/open-banking-gateway/doc/latest/architecture/dictionary#TppBankingApi) (2\u003csub\u003ea\u003c/sub\u003e)\n    over the [FinTechApi](https://adorsys.github.io/open-banking-gateway/doc/latest/architecture/dictionary#FinTechApi) (2\u003csub\u003eb\u003c/sub\u003e)\n    to the /consent/{auth-id} entry point of this [ConsentAuthorisationApi](https://adorsys.github.io/open-banking-gateway/doc/latest/architecture/dictionary#ConsentAuthorisationApi) (2\u003csub\u003ec\u003c/sub\u003e).\n    The decision on whether the authorization process is embedded or redirected is taken by this ConsentAuthorisationApi.\n\n    The following picture displays the overall architecture of this open banking consent authorisation api: \n\n    ![High level architecture](/img/open-banking-consent-authorisation-api.png)\n\n\n    #### User Agent\n    This Api assumes that the PsuUserAgent is a modern browsers that :\n    * automatically detects the \"302 Found\" response code and proceeds with the associated location url,\n    * stores httpOnly cookies sent with the redirect under the given domain and path as defined by [RFC 6265](https://tools.ietf.org/html/rfc6265).\n\n    This Api also assumes any other PsuUserAgent like a native mobile or a desktop application can simulate this same behavior of amodern browser with respect to 30X and Cookies. \n\n\n    #### Redirecting to the ConsentAuthorisationApi (2\u003csub\u003ea\u003c/sub\u003e)\n    Any service request of the FinTechUI to the FinTechApi (1\u003csub\u003ea\u003c/sub\u003e) will be forwarded to the TppBankingApi (1\u003csub\u003eb\u003c/sub\u003e).\n    This forward might contain a [PsuConsentSession](https://adorsys.github.io/open-banking-gateway/doc/latest/architecture/dictionary#PsuConsentSession)\n    that is used to identify the PSU in the world of the TPP.\n\n    The TppBankingApi uses the provided PsuConsentSession to retrieve an eventualy suitable consent that will be used to forward the corresponding service request to the OpenBankingApi (1\u003csub\u003ec\u003c/sub\u003e) of the ASPSP.\n    If there is no suitable consent, the TPP might still send a consent initiation request to the OpenBankingApi (1\u003csub\u003ec\u003c/sub\u003e). Whether this request is sent or not\n    depends on the design of the target OpenBankingApi. Finally, the TppBankingApi will if necessary instruct the FinTechApi (2\u003csub\u003ea\u003c/sub\u003e) to redirect the PsuUgerAgent (2\u003csub\u003eb\u003c/sub\u003e) to the /consent/{auth-id} entry point of \n    the ConsentAuthorisationApi (2\u003csub\u003ec\u003c/sub\u003e).\n        \n    #### Issolation Authorisation Request Processing\n    The auth-id parameter is used to make sure paralell authorization requests are not mixup.\n        \n    #### SessionCookies and XSRF\n    Each authorisation session started will be associated with a proper SessionCookie and a corresponding XSRF-TOKEN.\n    * The request that sets a session cookie (E\u003csub\u003e1\u003c/sub\u003e) also add the X-XSRF-TOKEN to the response header.\n    * The cookie path is always extended with the corresponding auth-id, so two Authorization processes can not share state. \n    * Each authenticated request sent to the ConsentAuthorisationApi will provide the X-XSRF-TOKEN matching the sent SessionCookie.\n\n    #### RedirectCookie and XSRF (R\u003csub\u003e1\u003c/sub\u003e)\n    In a redirect approach (Redirecting PSU to the ASPSP), the The retruned AuthorizeResponse object contains information needed\n    to present a suitable redirect info page to the PSU. Redirection can either be actively performed by the UIApplication\n    or performed as a result of a 30x redirect response to the PsuUserAgent. In both cases, a RedirectCookie will be associated with the \n    PsuUserAgent and a corresponding XSRF-TOKEN named redirectState will be addedto the back redirect url.\n        \n    #### Final Result of the Authorization Process\n    The final result of the authorization process is a PsuCosentSession that is returned by the token endpoint of the TppBankingAPi to\n    the FinTechApi (4\u003csub\u003ec\u003c/sub\u003e). This handle will (PsuCosentSession) will be stored by the FinTechApi and added a PSU identifying information to\n    each service request associated with this PSU.\ntags:\n  - name: Consent Authorization\n    description: |\n      Entry point for processing a consent request redirected by the TppBankingApi\n      over the FinTechApi to this ConsentAuthorisationApi.\npaths:\n  /v1/consent/{auth-id}:\n    get:\n      operationId: authUsingGET\n      summary: |\n        Redirect entry point for initiating a consent authorization process.\n      tags:\n        - Auth State Consent Authorization\n      description: |\n        This is the \u003cb\u003eentry point\u003c/b\u003e for processing a consent redirected\n        by the TppBankingApi to this ConsentAuthorisationApi.\n\n        At this entry point, the ConsentAuthorisationApi will use the xXsrfToken to retrieve the RedirectSession from the TppServer.\n        An analysis of the RedirectSession will help decide if the ConsentAuthorisationApi will proceed with an embedded approach (E\u003csub\u003e1\u003c/sub\u003e) or a redirect approach (R\u003csub\u003e1\u003c/sub\u003e).\n\n      parameters:\n        #path\n        - $ref: \"#/components/parameters/auth-id\"\n        #query\n        - $ref: \"#/components/parameters/xXsrfToken\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200_AuthorizeResponse\"\n        \"401\":\n          $ref: \"#/components/responses/401_Unauthorized\"\n\n  /v1/consent/{auth-id}/embedded:\n    post:\n      operationId: embeddedUsingPOST\n      tags:\n        - Update Consent Authorization\n      summary: |\n        Generic challenge response end point for updating consent session with\n        PSU authentication data while requesting remaining challenges for the ongoing\n        authorization process.\n      description: |\n        Update consent session with PSU auth data whereby requesting remaining\n        challenges for the ongoing authorization process.\n        Returns 202 if one should proceed to some other link. Link to follow is in 'Location' header.\n      parameters:\n        #path\n        - $ref: \"#/components/parameters/auth-id\"\n        #query\n        - $ref: \"#/components/parameters/xXsrfToken\"\n        #headers\n        - $ref: \"#/components/parameters/X-Request-ID\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PsuAuthRequest\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200_AuthorizeResponse\"\n        \"202\":\n          $ref: \"#/components/responses/200_AuthorizeResponse\"\n        \"401\":\n          $ref: \"#/components/responses/401_Unauthorized\"\n      security:\n        - sessionCookie: []\n\n  /v1/consent/{auth-id}/deny:\n    post:\n      operationId: denyUsingPOST\n      tags:\n        - Update Consent Authorization\n      summary: |\n        Consent authorization is denied - consent is blocked.\n        Closes this session and redirects the PSU back to the FinTechApi or close the application window.\n      description: |\n        Closes this session and redirects the PSU back to the FinTechApi\n        or close the application window. In any case, the session of the user will\n        be closed and cookies will be deleted with the response to this request.\n      parameters:\n        #path\n        - $ref: \"#/components/parameters/auth-id\"\n        #headers\n        - $ref: \"#/components/parameters/X-Request-ID\"\n      responses:\n        \"302\":\n          $ref: \"#/components/responses/302_Redirect_to_FinTechApi\"\n        \"401\":\n          $ref: \"#/components/responses/401_Unauthorized\"\n      security:\n        - sessionCookie: []\n\n  /v1/consent/{auth-id}/fromAspsp/{redirectState}/ok:\n    get:\n      operationId: fromAspspOkUsingGET\n      tags:\n        - From ASPSP Consent Authorization\n      summary:\n        Redirecting back from ASPSP to ConsentAuthorisationApi after a successful\n        consent authorization.\n      description: |\n        Redirecting back from ASPSP to ConsentAuthorisationApi after a successful consent authorization.\n        In any case, the corresponding redirect session of the user will be closed and cookies will be deleted with the response to this request.\n\n        ##### Desiging the BackRedirectURL (R\u003csub\u003e6\u003c/sub\u003e)\n        The BackRedirectURL (OkUrl, NokUrl, etc... depending of ASPSP API) is the URL used by the ASPSP to send the PsuUserAgent\n        back to the ConsentAuthorisationApi. Event though the structure of this URL might be constrained by the nature of the\n        ASPSP OpenBankingApi, the BackRedirectURL must contains atleast :\n        * A redirect-id (as a path parameter) used to isolate many redirect processes form each order.\n        * A consentAuthState (as a path or query parameter) used to protect the TppConsentSessionCookie as a XSRF parameter.\n        * The consentAuthState might if necessary be used to encrypt the attached ConsentAuthSessionCookie.\n\n        ##### Back-Redirecting PSU to the FinTechApi (4\u003csub\u003eb\u003c/sub\u003e)\n        Prior to redirecting the PSU back to the FinTechApi, consent information will be stored by the ConsentAuthorisationApi in a RedirectSession as well.\n        * The one time resulting xXsrfToken will be attached as a query parameter to the location URL leading back to the FinTechApi.\n        * After verifying the FinTechRedirectSessionCookie (4\u003csub\u003eb\u003c/sub\u003e), the FinTechApi must forward this xXsrfToken to the token endpoint of the TppBankingAPi (4\u003csub\u003ec\u003c/sub\u003e).\n        * The TppBankingApi will then retrieve the RedirectSession using the xXsrfToken and proceed forward with the authorization process.\n\n      parameters:\n        #path\n        - $ref: \"#/components/parameters/auth-id\"\n        - $ref: \"#/components/parameters/redirectState\"\n        #query\n        - $ref: \"#/components/parameters/code\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200_AuthorizeResponse\"\n        \"401\":\n          $ref: \"#/components/responses/401_Unauthorized\"\n      security:\n        - redirectCookie: []\n\n  /v1/consent/{auth-id}/fromAspsp/{redirectState}/nok:\n    get:\n      operationId: fromAspspNokUsingGET\n      tags:\n        - From ASPSP Consent Authorization\n      summary: Redirecting back from ASPSP to TPP after a failed consent authorization.\n      description: |\n        Redirecting back from ASPSP to TPP after a failed consent authorization.\n        In any case, the corresponding redirect session of the user will be closed and cookies will be deleted with the response to this request.\n      parameters:\n        #path\n        - $ref: \"#/components/parameters/auth-id\"\n        - $ref: \"#/components/parameters/redirectState\"\n      responses:\n        \"200\":\n          $ref: \"#/components/responses/200_AuthorizeResponse\"\n        \"401\":\n          $ref: \"#/components/responses/401_Unauthorized\"\n      security:\n        - redirectCookie: []\n\ncomponents:\n  securitySchemes:\n    sessionCookie:\n      type: apiKey\n      in: cookie\n      name: sessionCookie\n\n    redirectCookie:\n      type: apiKey\n      in: cookie\n      name: redirectCookie\n\n  headers:\n    X-Request-ID:\n      required: true\n      description: |\n        Unique ID that identifies this request through common workflow.\n        Shall be contained in HTTP Response as well.\n      example: \"99391c7e-ad88-49ec-a2ad-99ddcb1f7721\"\n      schema:\n        type: string\n        format: uuid\n\n    X-XSRF-TOKEN:\n      name: X-XSRF-TOKEN\n      required: true\n      description: XSRF parameter used to retrieve a redirect session.\n      example: abc123.faadsf93nlas32wx\n      schema:\n        type: string\n\n    Set-SessionCookie:\n      name: Set-Cookie\n      description: |\n        SessionCookie used to maintain the authorization session between the ConsentAuthorisationApi\n        and the ConsentAuthorisationUI. This cookie is validated using an xXsrfToken sent as query with the request.\n        Notice :\n        * The cookie path contains the auth-id so cookie is only sent when auth instance is active.\n        * Request consuming this cookie must present a consentAuthState from their authorization header.\n        * X-XSRF-TOKEN is provided by the response object that sets the cookie.\n      schema:\n        type: string\n        example: |\n          Assuming auth-id=abc123\n          \"Set-Cookie: Session_abc123=ejxs.wersdzxxc23r.asdf; Path=/consent/abc123/; Max-Age=300\"\n\n    Set-RedirectCookie:\n      name: Set-Cookie\n      description: |\n        Cookie set before redirecting PSU to ASPSP. Assuming auth-id=abc123, cookie will look like\n        Redirect_abc123=ejts.adsfa.adfaj; Path=/consent/abc123/fromAspsp/. As a user can initiate more than one sca from the same browser instance.\n        * The cookie path contains the auth-id so cookie is only sent when redirect url is active.\n        * The callback link hast the structure /consent/{auth-id}/fromAspsp/{redirectState}/ok where the redirectState is the XSRF parameter used to validate the RedirectCookie.\n        * The way the callback url is passed to the ASPSP is dependent on the OpenBankingApi of the ASPSP.\n        * The RedirectCookie has an expiration date after which that callback will no longer be accepted.\n        * Generaly an existing session cookie shall be seleted when PSU is redirected to ASPSP.\n      schema:\n        type: string\n        example: |\n          Assuming auth-id=abc123\n          \"Redirect_abc123=ejxs.wersdzxxc23r.asdf; Path=/consent/abc123/fromAspsp/; Max-Age=1800, Session_abc123=ejxs.wersdzxxc23r.asdf; Path=/consent/abc123/; Max-Age=0\"\n\n    Reset-Cookies:\n      name: Set-Cookie\n      description: |\n        Delete all relevant cookies\n      schema:\n        type: string\n        example: |\n          Assuming auth-id=abc123\n          \"Redirect_abc123=null; Path=/consent/abc123/; Max-Age=0, Session_abc123=null; Path=/consent/abc123/; Max-Age=0\"\n\n    Location-ASPSP:\n      name: Location\n      description: |\n        This is the 30X Location Header. It contains the url used to redirect PSU to the OnlineBanking of ASPSP.\n      schema:\n        type: string\n\n    Location-FinTechApi:\n      name: Location\n      description: |\n        This is the 30X Location Header. It contains the url used to redirect PSU back to the FinTech of ASPSP.\n      schema:\n        type: string\n\n  parameters:\n    auth-id:\n      name: auth-id\n      in: path\n      required: true\n      description: |\n        Used to distinguish between different consent authorization processes started by the same PSU.\n        Also included in the corresponding cookie path to limit visibility of the consent cookie to the\n        corresponding consent process.\n      example: abc123\n      schema:\n        type: string\n\n    xXsrfToken:\n      name: xXsrfToken\n      in: query\n      description: XSRF parameter used to retrieve a redirect session. This is\n        generaly transported as a query parameter.\n      example: \"faadsf93nlas32wx\"\n      schema:\n        type: string\n\n    redirectState:\n      name: redirectState\n      required: true\n      in: path\n      description: Code used to retrieve a redirect session. This is\n        generaly transported as a path parameter due to some banks limitiations (ING ASPSP) instead of\n        being transported as query parameter\n      example: \"faadsf93nlas32wx\"\n      schema:\n        type: string\n\n    code:\n      name: code\n      in: query\n      description: Oauth2 code to exchange for token.\n      example: \"faadsf93nlas32wx\"\n      schema:\n        type: string\n\n    X-Request-ID:\n      name: X-Request-ID\n      in: header\n      required: true\n      description: |\n        Unique ID that identifies this request through common workflow.\n        Shall be contained in HTTP Response as well.\n      example: \"99391c7e-ad88-49ec-a2ad-99ddcb1f7721\"\n      schema:\n        type: string\n        format: uuid\n\n  responses:\n    200_AuthorizeResponse:\n      description: |\n        All responses sent by the ConsentAuthorisationApi to the UI are derived from the AuthorizeResponse object. \n        This object presents :\n        * The consentAuthState as a XSRF parameter used to reauthenticate the ConsentAuthSessionCookie. It can also be used if required\n        to encrypt information stored in the corresponding ConsentAuthSessionCookie.\n        * The AuthorizeResponse object info also contains information used to display a qualified page to the PSU \n        prio to eventually redirecting the PSU to the target ASPSP.\n        * Any session, account or payment information needed to manage the authorization process is stored in both AuthorizeResponse and encrypted in the ConsentAuthSessionCookie.\n        * The ConsentAuthSessionCookie is secure and httpOnly.\n      headers:\n        X-Request-ID:\n          $ref: \"#/components/headers/X-Request-ID\"\n        Set-Cookie:\n          $ref: \"#/components/headers/Set-SessionCookie\"\n        X-XSRF-TOKEN:\n          $ref: \"#/components/headers/X-XSRF-TOKEN\"\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ConsentAuth\"\n\n    302_Redirect_to_ASPSP:\n      description: |\n        Redirects UserAgent to the ASPSP online banking interface.\n\n        ##### Setting a RedirectCookie\n        The redirect response to the PsuUserAgent must set a RedirectCookie.\n        * This cookie contains information associated with this specific redirect session.\n        * The XSRF Token used to validate this the RedirectCookie is path parameter redirectState\n        * This RedirectCookie must have a life time equal to the expected duration of the corresponding redirect session at the target ASPSP OnlineBankingApi.\n        * Prior to redirecting any associated SessionCookie (sharing the same auth-id) will be deleted.\n\n      headers:\n        Location:\n          $ref: \"#/components/headers/Location-ASPSP\"\n        X-Request-ID:\n          $ref: \"#/components/headers/X-Request-ID\"\n        Set-Cookie:\n          $ref: \"#/components/headers/Set-RedirectCookie\"\n\n    302_Redirect_to_FinTechApi:\n      description: |\n        Redirects UserAgent back to the FinTechAPI.\n      headers:\n        Location:\n          $ref: \"#/components/headers/Location-FinTechApi\"\n        X-Request-ID:\n          $ref: \"#/components/headers/X-Request-ID\"\n        Set-Cookie:\n          $ref: \"#/components/headers/Reset-Cookies\"\n\n    400_BadRequest:\n      description: Bad request\n      headers:\n        X-Request-ID:\n          $ref: \"#/components/headers/X-Request-ID\"\n        X-XSRF-TOKEN:\n          $ref: \"#/components/headers/X-XSRF-TOKEN\"\n        Set-Cookie:\n          $ref: \"#/components/headers/Set-SessionCookie\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/psuMessage\"\n\n    401_Unauthorized:\n      description: |\n        Access credentials absent or invalid. This happens when\n        * Provided credential for login not matching.\n        * Endpoin expect a session cookie but none is present.\n        * Session cookie is present but associated stateString does not match.\n\n        As a consequence, we reset existing FinTechLoginSessionState if any. \n        Nevertheless we do not reset RedirectSessionCookie.\n      headers:\n        X-Request-ID:\n          $ref: \"#/components/headers/X-Request-ID\"\n        Set-Cookie:\n          $ref: \"#/components/headers/Reset-Cookies\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/psuMessage\"\n\n    404_NotFound:\n      description: The specified resource was not found\n      headers:\n        X-Request-ID:\n          $ref: \"#/components/headers/X-Request-ID\"\n        X-XSRF-TOKEN:\n          $ref: \"#/components/headers/X-XSRF-TOKEN\"\n        Set-Cookie:\n          $ref: \"#/components/headers/Set-SessionCookie\"\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/psuMessage\"\n\n  schemas:\n    psuMessage:\n      title: PsuMessage\n      type: object\n      properties:\n        category:\n          type: string\n          enum:\n            - ERROR\n            - WARNING\n            - INFO\n        code:\n          type: string\n        path:\n          type: string\n        text:\n          type: string\n\n    AccountStatus:\n      type: string\n      enum:\n        - ENABLED\n        - DELETED\n        - BLOCKED\n\n    AccountType:\n      type: string\n      enum:\n        - CACC\n        - CASH\n        - CHAR\n        - CISH\n        - COMM\n        - CPAC\n        - LLSV\n        - LOAN\n        - MGLD\n        - MOMA\n        - NREX\n        - ODFT\n        - ONDP\n        - OTHR\n        - SACC\n        - SLRY\n        - SVGS\n        - TAXE\n        - TRAN\n        - TRAS\n\n    BalanceType:\n      type: string\n      enum:\n        - CLOSING_BOOKED\n        - EXPECTED\n        - AUTHORISED\n        - OPENING_BOOKED\n        - INTERIM_AVAILABLE\n        - FORWARD_AVAILABLE\n        - NONINVOICED\n\n    PaymentProduct:\n      type: string\n      enum:\n        - SEPA\n        - INSTANT_SEPA\n        - TARGET2\n        - CROSS_BORDER\n\n    PaymentStatus:\n      type: string\n      enum:\n        - ACCC\n        - ACCP\n        - ACSC\n        - ACSP\n        - ACTC\n        - ACWC\n        - ACWP\n        - RCVD\n        - PDNG\n        - RJCT\n        - CANC\n        - ACFC\n        - PATC\n\n    ScaStatus:\n      type: string\n      description: The sca status. Used to manage the consent authorization flows.\n      enum:\n        - received\n        - psuIdentified\n        - psuAuthenticated\n        - scaMethodSelected\n        - started\n        - finalised\n        - failed\n        - exempted\n\n    AccountBalance:\n      title: AccountBalance\n      type: object\n      properties:\n        amount:\n          $ref: \"#/components/schemas/Amount\"\n        balanceType:\n          $ref: \"#/components/schemas/BalanceType\"\n        iban:\n          type: string\n        lastChangeDateTime:\n          type: string\n          format: date-time\n        lastCommittedTransaction:\n          type: string\n        referenceDate:\n          type: string\n          format: date\n\n    AccountDetails:\n      title: AccountDetails\n      type: object\n      properties:\n        accountStatus:\n          $ref: \"#/components/schemas/AccountStatus\"\n        accountType:\n          $ref: \"#/components/schemas/AccountType\"\n        balances:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountBalance\"\n        bban:\n          type: string\n        bic:\n          type: string\n        currency:\n          type: string\n        details:\n          type: string\n        iban:\n          type: string\n        id:\n          type: string\n        linkedAccounts:\n          type: string\n        maskedPan:\n          type: string\n        msisdn:\n          type: string\n        name:\n          type: string\n        pan:\n          type: string\n        product:\n          type: string\n        usageType:\n          type: string\n          enum:\n            - PRIV\n            - ORGA\n\n    AccountReference:\n      title: AccountReference\n      type: object\n      properties:\n        bban:\n          type: string\n        currency:\n          type: string\n        iban:\n          type: string\n        maskedPan:\n          type: string\n        msisdn:\n          type: string\n        pan:\n          type: string\n\n    Address:\n      title: Address\n      type: object\n      properties:\n        buildingNumber:\n          type: string\n        city:\n          type: string\n        country:\n          type: string\n        postalCode:\n          type: string\n        street:\n          type: string\n\n    AisAccountAccessInfo:\n      title: AisAccountAccessInfo\n      type: object\n      properties:\n        accounts:\n          type: array\n          description: Access to accounts\n          items:\n            $ref: \"#/components/schemas/AccountReference\"\n        allPsd2:\n          type: string\n          description: Consent on all accounts, balances and transactions of psu\n          example: ALL_ACCOUNTS\n          enum:\n            - ALL_ACCOUNTS\n            - ALL_ACCOUNTS_WITH_BALANCES\n        availableAccounts:\n          type: string\n          description: Consent on all available accounts of psu\n          example: ALL_ACCOUNTS\n          enum:\n            - ALL_ACCOUNTS\n            - ALL_ACCOUNTS_WITH_BALANCES\n        balances:\n          type: array\n          description: Access to balances\n          items:\n            $ref: \"#/components/schemas/AccountReference\"\n        transactions:\n          type: array\n          description: Access to transactions\n          items:\n            $ref: \"#/components/schemas/AccountReference\"\n      description: Ais account access information\n\n    AisConsentRequest:\n      title: AisConsentRequest\n      required:\n        - access\n        - frequencyPerDay\n        - recurringIndicator\n        - validUntil\n      type: object\n      properties:\n        access:\n          $ref: \"#/components/schemas/AisAccountAccessInfo\"\n        frequencyPerDay:\n          type: integer\n          description:\n            Maximum frequency for an access per day. For a once-off access,\n            this attribute is set to 1\n          format: int32\n          example: 4\n        recurringIndicator:\n          type: boolean\n          description:\n            \"'true', if the consent is for recurring access to the account\n            data , 'false', if the consent is for one access to the account data\"\n          example: false\n        validUntil:\n          type: string\n          description:\n            Consent`s expiration date. The content is the local ASPSP date\n            in ISODate Format\n          format: date\n          example: 2020-10-10\n        combinedServiceIndicator:\n          type: boolean\n          description:\n            \"'true', if the consent is i.e. account list and then payment\n            'false', if the consent is for one access to the account data\"\n          default: false\n      description: Ais consent request\n\n    Amount:\n      title: Amount\n      type: object\n      properties:\n        amount:\n          type: number\n        currency:\n          type: string\n\n    AuthViolation:\n      title: AuthViolation\n      type: object\n      description: Missing parameters required for authorization\n      properties:\n        type:\n          type: string\n        scope:\n          type: string\n        code:\n          type: string\n        captionMessage:\n          type: string\n\n    ConsentAuth:\n      title: ConsentAuth\n      type: object\n      description: Transport object for consent API request response\n      properties:\n        action:\n          type: string\n          enum: [LIST_ACCOUNTS, LIST_TRANSACTIONS, INITIATE_PAYMENT]\n        violations:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AuthViolation\"\n        accounts:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountDetails\"\n        supportedConsentTypes:\n          type: array\n          items:\n            type: string\n            enum:\n              - DEDICATED_ALL\n              - GLOBAL_ALL\n              - GLOBAL_ACCOUNTS\n        authMessageTemplate:\n          type: string\n        authenticationMethodId:\n          type: string\n          description:\n            An identification provided by the ASPSP for the later identification\n            of the authentication method selection.\n          example: myAuthenticationID\n        bulkPayment:\n          $ref: \"#/components/schemas/BulkPayment\"\n        consent:\n          $ref: \"#/components/schemas/AisConsentRequest\"\n        bankName:\n          type: string\n          description: Name of current bank\n        fintechName:\n          type: string\n          description: Name of current fintech\n        consentAuthState:\n          type: string\n          description:\n            This is the CSRF-State String of the ConsentAuthorisationApi.\n            It is a transient reference of the consent request. It encodes a key that\n            is used to encrypt information stored in the corresponding ConsentAuthSessionCookie.\n        periodicPayment:\n          $ref: \"#/components/schemas/PeriodicPayment\"\n        psuCorporateId:\n          type: string\n        psuId:\n          type: string\n        scaMethods:\n          type: array\n          description: List of sca methods for selection if necessary.\n          items:\n            $ref: \"#/components/schemas/ScaUserData\"\n        scaMethodSelected:\n          $ref: \"#/components/schemas/ScaUserData\"\n        scaStatus:\n          $ref: \"#/components/schemas/ScaStatus\"\n        singlePayment:\n          $ref: \"#/components/schemas/SinglePayment\"\n        challengeData:\n          $ref: \"#/components/schemas/ChallengeData\"\n\n    PsuAuthRequest:\n      title: PsuAuthRequest\n      required:\n        - scaAuthenticationData\n      type: object\n      description: Contains information used to legitimate a request.\n      properties:\n        consentAuth:\n          $ref: \"#/components/schemas/ConsentAuth\"\n        scaAuthenticationData:\n          type: object\n          additionalProperties:\n            type: string\n          description:\n            SCA authentication data, depending on the chosen authentication\n            method. If the data is binary, then it is base64 encoded.\n        extras:\n          type: object\n          additionalProperties:\n            type: string\n          description: ASPSP customary authorization parameters required to i.e. initiate consent.\n\n    BulkPayment:\n      title: BulkPayment\n      type: object\n      properties:\n        batchBookingPreferred:\n          type: boolean\n        debtorAccount:\n          $ref: \"#/components/schemas/AccountReference\"\n        paymentId:\n          type: string\n        paymentProduct:\n          $ref: \"#/components/schemas/PaymentProduct\"\n        paymentStatus:\n          $ref: \"#/components/schemas/PaymentStatus\"\n        payments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/SinglePayment\"\n        requestedExecutionDate:\n          type: string\n          format: date\n\n    PeriodicPayment:\n      title: PeriodicPayment\n      type: object\n      properties:\n        paymentData:\n          $ref: \"#/components/schemas/SinglePayment\"\n        dayOfExecution:\n          type: integer\n          format: int32\n        endDate:\n          type: string\n          format: date\n        executionRule:\n          type: string\n        frequency:\n          type: string\n          enum:\n            - Daily\n            - Weekly\n            - EveryTwoWeeks\n            - Monthly\n            - EveryTwoMonths\n            - Quarterly\n            - SemiAnnual\n            - Annual\n        startDate:\n          type: string\n          format: date\n\n    ScaUserData:\n      title: ScaUserData\n      type: object\n      properties:\n        decoupled:\n          type: boolean\n        id:\n          type: string\n        methodValue:\n          type: string\n        explanation:\n          type: string\n        scaMethod:\n          type: string\n          enum:\n            - EMAIL\n            - MOBILE\n            - CHIP_OTP\n            - PHOTO_OTP\n            - PUSH_OTP\n            - SMS_OTP\n            - APP_OTP\n        staticTan:\n          type: string\n        usesStaticTan:\n          type: boolean\n\n    SinglePayment:\n      title: SinglePayment\n      type: object\n      properties:\n        creditorAccount:\n          $ref: \"#/components/schemas/AccountReference\"\n        creditorAddress:\n          $ref: \"#/components/schemas/Address\"\n        creditorAgent:\n          type: string\n        creditorName:\n          type: string\n        debtorAccount:\n          $ref: \"#/components/schemas/AccountReference\"\n        endToEndIdentification:\n          type: string\n        instructedAmount:\n          $ref: \"#/components/schemas/Amount\"\n        paymentId:\n          type: string\n        paymentProduct:\n          $ref: \"#/components/schemas/PaymentProduct\"\n        paymentStatus:\n          $ref: \"#/components/schemas/PaymentStatus\"\n        remittanceInformationUnstructured:\n          type: string\n        requestedExecutionDate:\n          type: string\n          format: date\n        requestedExecutionTime:\n          type: string\n\n    ChallengeData:\n      title: ChallengeData\n      type: object\n      description: Challege data for SCA like OpticTAN image\n      properties:\n        image:\n          type: string\n          format: byte\n        data:\n          type: array\n          items:\n            type: string\n        imageLink:\n          type: string\n        otpMaxLength:\n          type: integer\n          format: int32\n        otpFormat:\n          type: string\n          enum:\n            - CHARACTERS\n            - INTEGER\n        additionalInformation:\n          type: string\n",
			"canonicalURL": "/github.com/adorsys/open-banking-gateway@396ed2eba65f4ce23c644157035108b1fed6982b/-/blob/opba-consent-rest-api/src/main/resources/static/tpp_consent_api.yml",
			"externalURLs": [
				{
					"url": "https://github.com/adorsys/open-banking-gateway/blob/396ed2eba65f4ce23c644157035108b1fed6982b/opba-consent-rest-api/src/main/resources/static/tpp_consent_api.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: responses: \"200_AuthorizeResponse\": headers: header \"X-XSRF-TOKEN\": at 1:2815: \"name\" MUST NOT be specified, got \"X-XSRF-TOKEN\""
}