{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/swagger-api/swagger-parser"
		},
		"file": {
			"name": "oas4.yaml",
			"size": 0,
			"path": "modules/swagger-parser-v3/src/test/resources/oas4.yaml",
			"byteSize": 706020,
			"content": "openapi: 3.0.1\nservers:\n  - url: 'https://api.stripe.com/'\nx-origin:\n  - url: 'https://raw.githubusercontent.com/stripe/openapi/master/openapi/spec2.yaml'\n    format: swagger\n    version: '2.0'\n    converter:\n      url: 'https://github.com/mermade/swagger2openapi'\n      version: 2.1.0\ninfo:\n  contact:\n    email: dev-platform@stripe.com\n    name: Stripe Dev Platform Team\n    url: 'https://stripe.com'\n  description: \u003e-\n    The Stripe REST API. Please see https://stripe.com/docs/api for more\n    details.\n  termsOfService: 'https://stripe.com/us/terms/'\n  title: Stripe API\n  version: '2017-04-06'\npaths:\n  /v1/3d_secure:\n    post:\n      description: ''\n      operationId: Create3DSecure\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/three_d_secure'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: \u003e-\n                    Amount of the charge that you will create when\n                    authentication completes.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                card:\n                  description: \u003e-\n                    The ID of a card token, or the ID of a card belonging to the\n                    given customer.\n                  title: card\n                  oneOf:\n                    - type: string\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                customer:\n                  description: ''\n                  title: customer\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                return_url:\n                  description: \u003e-\n                    The URL that the cardholder's browser will be returned to\n                    when authentication completes.\n                  title: return_url\n                  oneOf:\n                    - type: string\n              required:\n                - amount\n                - currency\n                - return_url\n  '/v1/3d_secure/{three_d_secure}':\n    get:\n      description: \u003cp\u003eRetrieves a 3D Secure object.\u003c/p\u003e\n      operationId: Retrieve3DSecure\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the 3D Secure object to be retrieved.\n          in: path\n          name: three_d_secure\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/three_d_secure'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/account:\n    delete:\n      description: \u003e-\n        \u003cp\u003eWith \u003ca href=\"/docs/connect\"\u003eConnect\u003c/a\u003e, you may delete Stripe\n        accounts you manage.\u003c/p\u003e\u003cp\u003eManaged accounts created using test-mode keys\n        can be deleted at any time. Managed accounts created using live-mode\n        keys may only be deleted once all balances are zero.\u003c/p\u003e\u003cp\u003eIf you are\n        looking to close your own account, use the \u003ca\n        href=\"https://dashboard.stripe.com/account/data\"\u003edata tab in your\n        account settings\u003c/a\u003e instead.\u003c/p\u003e\n      operationId: AccountDelete\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                account:\n                  description: \u003e-\n                    The identifier of the account to be deleted. If none is\n                    provided, will default to the account of the API key.\n                  title: account\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n    get:\n      description: \u003cp\u003eRetrieves the details of the account.\u003c/p\u003e\n      operationId: AccountRetrieve\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The identifier of the account to be retrieved. If none is provided,\n            will default to the account of the API key.\n          in: query\n          name: account\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates an account by setting the values of the parameters passed.\n        Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eYou\n        may only update accounts that you \u003ca\n        href=\"/docs/connect/managed-accounts\"\u003emanage\u003c/a\u003e\u003c/strong\u003e. To update\n        your own account, you can currently only do so via the \u003ca\n        href=\"https://dashboard.stripe.com/account\"\u003edashboard\u003c/a\u003e. For more\n        information on updating Managed Accounts, see \u003ca\n        href=\"/docs/connect/updating-accounts\"\u003eour guide\u003c/a\u003e.\u003c/p\u003e\n      operationId: AccountUpdate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload'\n  /v1/account/bank_accounts:\n    post:\n      description: ''\n      operationId: CreateAccountExternalAccount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload2'\n  '/v1/account/bank_accounts/{id}':\n    delete:\n      description: ''\n      operationId: DeleteAccountExternalAccount\n      parameters:\n        - description: The ID of the external account to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveAccountExternalAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the metadata of a bank account belonging to a \u003ca\n        href=\"/docs/connect/managed-accounts\"\u003emanaged accounts\u003c/a\u003e, and\n        optionally sets it as the default for its currency. Other bank account\n        details are not editable by design.\u003c/p\u003e\n      operationId: UpdateAccountBankAccount\n      parameters:\n        - description: The ID of the bank account to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload4'\n  /v1/account/external_accounts:\n    get:\n      description: ''\n      operationId: AllAccountExternalAccounts\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/bank_account'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: ExternalAccountList\n                x-expandableFields:\n                  - data\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateAccountExternalAccount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload2'\n  '/v1/account/external_accounts/{id}':\n    delete:\n      description: ''\n      operationId: DeleteAccountExternalAccount\n      parameters:\n        - description: The ID of the external account to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveAccountExternalAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the metadata of a bank account belonging to a \u003ca\n        href=\"/docs/connect/managed-accounts\"\u003emanaged accounts\u003c/a\u003e, and\n        optionally sets it as the default for its currency. Other bank account\n        details are not editable by design.\u003c/p\u003e\n      operationId: UpdateAccountBankAccount\n      parameters:\n        - description: The ID of the bank account to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload4'\n  /v1/account/login_links:\n    post:\n      description: ''\n      operationId: LoginLinkCreate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/login_link'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                account:\n                  description: The identifier of the account to create a login link for.\n                  title: account\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                id:\n                  description: ''\n                  title: id\n                  oneOf:\n                    - type: string\n                percent_off:\n                  description: ''\n                  title: percent_off\n                  oneOf:\n                    - type: integer\n              required:\n                - account\n  /v1/accounts:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of accounts connected to your platform via \u003ca\n        href=\"/docs/connect\"\u003eConnect\u003c/a\u003e. If you’re not a platform, the list\n        will be empty.\u003c/p\u003e\n      operationId: AllAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/account'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/accounts\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: AccountCreate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account_with_keys'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                business_logo:\n                  description: ''\n                  title: business_logo\n                  oneOf:\n                    - type: string\n                business_name:\n                  description: The publicly sharable name for this account.\n                  title: business_name\n                  oneOf:\n                    - type: string\n                business_primary_color:\n                  description: \u003e-\n                    A CSS hex color value representing the primary branding\n                    color for this account.\n                  title: business_primary_color\n                  oneOf:\n                    - type: string\n                business_url:\n                  description: \u003e-\n                    The URL that best shows the service or product provided for\n                    this account.\n                  title: business_url\n                  oneOf:\n                    - type: string\n                country:\n                  description: ''\n                  title: country\n                  oneOf:\n                    - type: string\n                debit_negative_balances:\n                  description: \u003e-\n                    A boolean for whether or not Stripe should try to reclaim\n                    negative balances from the account holder's bank account.\n                    See our [managed account bank transfer\n                    guide](/docs/connect/account-balances) for more information.\n                  title: debit_negative_balances\n                  oneOf:\n                    - type: boolean\n                decline_charge_on:\n                  description: \u003e-\n                    Account-level settings to automatically decline certain\n                    types of charges regardless of the bank's decision.\n                  title: decline_charge_on\n                  oneOf:\n                    - type: object\n                default_currency:\n                  description: \u003e-\n                    Three-letter ISO currency code representing the default\n                    currency for the account. This must be a currency that\n                    [Stripe supports in the account's\n                    country](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: default_currency\n                  oneOf:\n                    - type: string\n                email:\n                  description: \u003e-\n                    Email address of the account holder. For standalone\n                    accounts, this is used to email them asking them to claim\n                    their Stripe account. For managed accounts, this is only to\n                    make the account easier to identify to you: Stripe will not\n                    email the account holder.\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                external_account:\n                  description: \u003e-\n                    A card or bank account to attach to the account. You can\n                    provide either a token, like the ones returned by\n                    [Stripe.js](/docs/stripe.js), or a dictionary as documented\n                    in the external_account parameter for either\n                    [card](/docs/api#account_create_card) or [bank\n                    account](/docs/api#account_create_bank_account) creation.\n                    \u003cbr\u003e\u003cbr\u003eThis will create a new external account object, make\n                    it the new default external account for its currency, and\n                    delete the old default if one exists. If you want to add\n                    additional external accounts instead of replacing the\n                    existing default for this currency, use the bank account or\n                    card creation API.\n                  title: external_account\n                  oneOf:\n                    - type: object\n                    - type: string\n                legal_entity:\n                  description: \u003e-\n                    Information about the account holder; varies by [account\n                    country](#country_spec_object-verification_fields) and\n                    [account\n                    status](#account_object-verification-fields_needed).\n                  title: legal_entity\n                  oneOf:\n                    - type: object\n                managed:\n                  description: ''\n                  title: managed\n                  oneOf:\n                    - type: boolean\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to an account\n                    object. It can be useful for storing additional information\n                    about the account in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                payout_schedule:\n                  description: \u003e-\n                    Details on when this account will make funds from charges\n                    available, and when they will be paid out to the account\n                    holder's bank account. See our [managed account bank\n                    transfer\n                    guide](/docs/connect/bank-transfers#payout-information) for\n                    more information.\n                  title: payout_schedule\n                  oneOf:\n                    - type: object\n                payout_statement_descriptor:\n                  description: \u003e-\n                    The text that will appear on the account's bank account\n                    statement for payouts. If not set, this will default to your\n                    platform's bank descriptor set on the Dashboard.\n                  title: payout_statement_descriptor\n                  oneOf:\n                    - type: string\n                product_description:\n                  description: \u003e-\n                    Internal-only description of the product being sold or\n                    service being provided by this account. It's used by Stripe\n                    for risk and underwriting purposes.\n                  title: product_description\n                  oneOf:\n                    - type: string\n                statement_descriptor:\n                  description: \u003e-\n                    The text that will appear on credit card statements by\n                    default if a charge is being made [directly on the\n                    account](/docs/connect/direct-charges).\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n                support_email:\n                  description: \u003e-\n                    A publicly shareable email address that can be reached for\n                    support for this account.\n                  title: support_email\n                  oneOf:\n                    - type: string\n                support_phone:\n                  description: \u003e-\n                    A publicly shareable phone number that can be reached for\n                    support for this account.\n                  title: support_phone\n                  oneOf:\n                    - type: string\n                support_url:\n                  description: \u003e-\n                    A publicly shareable URL that can be reached for support for\n                    this account.\n                  title: support_url\n                  oneOf:\n                    - type: string\n                tos_acceptance:\n                  description: \u003e-\n                    Details on who accepted the Stripe terms of service, and\n                    when they accepted it. See our [updating managed accounts\n                    guide](/docs/connect/updating-accounts#tos-acceptance) for\n                    more information.\n                  title: tos_acceptance\n                  oneOf:\n                    - type: object\n  '/v1/accounts/{account}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eWith \u003ca href=\"/docs/connect\"\u003eConnect\u003c/a\u003e, you may delete Stripe\n        accounts you manage.\u003c/p\u003e\u003cp\u003eManaged accounts created using test-mode keys\n        can be deleted at any time. Managed accounts created using live-mode\n        keys may only be deleted once all balances are zero.\u003c/p\u003e\u003cp\u003eIf you are\n        looking to close your own account, use the \u003ca\n        href=\"https://dashboard.stripe.com/account/data\"\u003edata tab in your\n        account settings\u003c/a\u003e instead.\u003c/p\u003e\n      operationId: AccountDelete\n      parameters:\n        - description: \u003e-\n            The identifier of the account to be deleted. If none is provided,\n            will default to the account of the API key.\n          in: path\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003cp\u003eRetrieves the details of the account.\u003c/p\u003e\n      operationId: AccountRetrieve\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The identifier of the account to be retrieved. If none is provided,\n            will default to the account of the API key.\n          in: path\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates an account by setting the values of the parameters passed.\n        Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eYou\n        may only update accounts that you \u003ca\n        href=\"/docs/connect/managed-accounts\"\u003emanage\u003c/a\u003e\u003c/strong\u003e. To update\n        your own account, you can currently only do so via the \u003ca\n        href=\"https://dashboard.stripe.com/account\"\u003edashboard\u003c/a\u003e. For more\n        information on updating Managed Accounts, see \u003ca\n        href=\"/docs/connect/updating-accounts\"\u003eour guide\u003c/a\u003e.\u003c/p\u003e\n      operationId: AccountUpdate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload'\n  '/v1/accounts/{account}/bank_accounts':\n    post:\n      description: ''\n      operationId: CreateAccountExternalAccount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload2'\n  '/v1/accounts/{account}/bank_accounts/{id}':\n    delete:\n      description: ''\n      operationId: DeleteAccountExternalAccount\n      parameters:\n        - description: The ID of the external account to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveAccountExternalAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the metadata of a bank account belonging to a \u003ca\n        href=\"/docs/connect/managed-accounts\"\u003emanaged accounts\u003c/a\u003e, and\n        optionally sets it as the default for its currency. Other bank account\n        details are not editable by design.\u003c/p\u003e\n      operationId: UpdateAccountBankAccount\n      parameters:\n        - description: The ID of the bank account to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload4'\n  '/v1/accounts/{account}/external_accounts':\n    get:\n      description: ''\n      operationId: AllAccountExternalAccounts\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/bank_account'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: ExternalAccountList\n                x-expandableFields:\n                  - data\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateAccountExternalAccount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload2'\n  '/v1/accounts/{account}/external_accounts/{id}':\n    delete:\n      description: ''\n      operationId: DeleteAccountExternalAccount\n      parameters:\n        - description: The ID of the external account to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveAccountExternalAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the metadata of a bank account belonging to a \u003ca\n        href=\"/docs/connect/managed-accounts\"\u003emanaged accounts\u003c/a\u003e, and\n        optionally sets it as the default for its currency. Other bank account\n        details are not editable by design.\u003c/p\u003e\n      operationId: UpdateAccountBankAccount\n      parameters:\n        - description: The ID of the bank account to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/external_account_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload4'\n  '/v1/accounts/{account}/login_links':\n    post:\n      description: ''\n      operationId: LoginLinkCreate\n      parameters:\n        - description: The identifier of the account to create a login link for.\n          in: path\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/login_link'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                id:\n                  description: ''\n                  title: id\n                  oneOf:\n                    - type: string\n                percent_off:\n                  description: ''\n                  title: percent_off\n                  oneOf:\n                    - type: integer\n  '/v1/accounts/{account}/reject':\n    post:\n      description: \u003e-\n        \u003cp\u003eWith \u003ca href=\"/docs/connect\"\u003eConnect\u003c/a\u003e, you may flag managed\n        accounts as suspicious.\u003c/p\u003e\u003cp\u003eManaged accounts created using test-mode\n        keys can be rejected at any time. Managed accounts created using\n        live-mode keys may only be rejected once all balances are zero.\u003c/p\u003e\n      operationId: AccountReject\n      parameters:\n        - description: The identifier of the account to be rejected.\n          in: path\n          name: account\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                reason:\n                  description: \u003e-\n                    The reason for rejecting the account. May be one of `fraud`,\n                    `terms_of_service`, or `other`.\n                  title: reason\n                  oneOf:\n                    - type: string\n              required:\n                - reason\n  /v1/apple_pay/domains:\n    get:\n      description: ''\n      operationId: AllApplePayDomains\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: domain_name\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/apple_pay_domain'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/apple_pay/domains\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: ApplePayDomainList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateApplePayDomain\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/apple_pay_domain'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                domain_name:\n                  description: ''\n                  title: domain_name\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n              required:\n                - domain_name\n  '/v1/apple_pay/domains/{domain}':\n    delete:\n      description: ''\n      operationId: DeleteApplePayDomain\n      parameters:\n        - description: ''\n          in: path\n          name: domain\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/apple_pay_domain'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveApplePayDomain\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: domain\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/apple_pay_domain'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/application_fees:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of application fees you’ve previously collected. The\n        application fees are returned in sorted order, with the most recent fees\n        appearing first.\u003c/p\u003e\n      operationId: AllPlatformEarnings\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            Only return application fees for the charge specified by this charge\n            ID.\n          in: query\n          name: charge\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/platform_earning'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/application_fees\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/application_fees/{fee}/refunds/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eBy default, you can see the 10 most recent refunds stored directly on\n        the application fee object, but you can also retrieve details about a\n        specific refund stored on the application fee.\u003c/p\u003e\n      operationId: RetrievePlatformEarningRefund\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of the application fee refunded.\n          in: path\n          name: fee\n          required: true\n          schema:\n            type: string\n        - description: ID of refund to retrieve.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fee_refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specified application fee refund by setting the values of\n        the parameters passed. Any parameters not provided will be left\n        unchanged.\u003c/p\u003e\u003cp\u003eThis request only accepts metadata as an argument.\u003c/p\u003e\n      operationId: UpdatePlatformEarningRefund\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fee_refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to an\n                    application fee refund object. It can be useful for storing\n                    additional information about the refund in a structured\n                    format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n  '/v1/application_fees/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an application fee that your account has\n        collected. The same information is returned when refunding the\n        application fee.\u003c/p\u003e\n      operationId: RetrievePlatformEarning\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the fee to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/platform_earning'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/application_fees/{id}/refund':\n    post:\n      description: ''\n      operationId: RefundPlatformEarning\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/platform_earning'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                directive:\n                  description: ''\n                  title: directive\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n  '/v1/application_fees/{id}/refunds':\n    get:\n      description: \u003e-\n        \u003cp\u003eYou can see a list of the refunds belonging to a specific application\n        fee. Note that the 10 most recent refunds are always available by\n        default on the application fee object. If you need more than those 10,\n        you can use this API method and the \u003ccode\u003elimit\u003c/code\u003e and\n        \u003ccode\u003estarting_after\u003c/code\u003e parameters to page through additional\n        refunds.\u003c/p\u003e\n      operationId: AllPlatformEarningsRefunds\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the application fee whose refunds will be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/fee_refund'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: FeeRefundList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreatePlatformEarningRefund\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/fee_refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                directive:\n                  description: ''\n                  title: directive\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n  /v1/balance:\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the current account balance, based on the authentication\n        that was used to make the request.\u003c/p\u003e\n      operationId: BalanceRetrieve\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/balance'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/balance/history:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of transactions that have contributed to the Stripe\n        account balance (e.g., charges, transfers, and so forth). The\n        transactions are returned in sorted order, with the most recent\n        transactions appearing first.\u003c/p\u003e\n      operationId: AllBalanceTransactions\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            For automatic Stripe payouts only, only returns transactions that\n            were payed out on the specified payout ID.\n          in: query\n          name: payout\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: available_on\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            Only returns transactions of the given type. One of: `charge`,\n            `refund`, `adjustment`, `application_fee`, `application_fee_refund`,\n            `transfer`, `payment`, `payout`, or `payout_failure`.\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n        - description: Only returns the original transaction.\n          in: query\n          name: source\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: currency\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/balance_transaction'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/balance/history\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: BalanceTransactionsList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/balance/history/{id}':\n    get:\n      description: \u003cp\u003eRetrieves the balance transaction with the given ID.\u003c/p\u003e\n      operationId: RetrieveBalanceTransaction\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The ID of the desired balance transaction (as found on any API\n            object that affects the balance, e.g. a charge or transfer).\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/balance_transaction'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/bitcoin/payments:\n    get:\n      description: ''\n      operationId: AllPayments\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Only return payments for the customer specified by this customer ID.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/charge'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/bitcoin/payments\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreatePayment\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload5'\n  '/v1/bitcoin/payments/{charge}/refund':\n    post:\n      description: ''\n      operationId: CreatePaymentRefundWithPaymentResponse\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload6'\n  '/v1/bitcoin/payments/{id}':\n    get:\n      description: ''\n      operationId: RetrievePayment\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/bitcoin/receivers:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your receivers. Receivers are returned sorted by\n        creation date, with the most recently created receivers appearing\n        first.\u003c/p\u003e\n      operationId: AllReceivers\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Filter for active receivers.\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n        - description: Filter for filled receivers.\n          in: query\n          name: filled\n          required: false\n          schema:\n            type: boolean\n        - description: Filter for receivers with uncaptured funds.\n          in: query\n          name: uncaptured_funds\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/bitcoin_receiver'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/bitcoin/receivers\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eCreates a Bitcoin receiver object that can be used to accept bitcoin\n        payments from your customer. The receiver exposes a Bitcoin address and\n        is created with a bitcoin to USD exchange rate that is valid for 10\n        minutes.\u003c/p\u003e\n      operationId: CreateReceiver\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bitcoin_receiver'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: The amount of `currency` that you will be paid.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO code for the\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n                    to which the bitcoin will be converted. You will be paid out\n                    in this currency. Only USD is currently supported.\n                  title: currency\n                  oneOf:\n                    - type: string\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                email:\n                  description: The email address of the customer.\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a customer\n                    object. It can be useful for storing additional information\n                    about the customer in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                refund_mispayments:\n                  description: \u003e-\n                    A flag that indicates whether you would like Stripe to\n                    automatically handle refunds for any\n                    [mispayments](/docs/guides/bitcoin#mispayments) to the\n                    receiver.\n                  title: refund_mispayments\n                  oneOf:\n                    - type: boolean\n              required:\n                - amount\n                - currency\n  '/v1/bitcoin/receivers/{id}':\n    delete:\n      description: ''\n      operationId: DeleteReceiver\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bitcoin_receiver'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003cp\u003eRetrieves the Bitcoin receiver with the given ID.\u003c/p\u003e\n      operationId: RetrieveReceiver\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bitcoin_receiver'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateReceiver\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bitcoin_receiver'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                email:\n                  description: ''\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                refund_address:\n                  description: ''\n                  title: refund_address\n                  oneOf:\n                    - type: string\n  '/v1/bitcoin/receivers/{id}/refund':\n    post:\n      description: ''\n      operationId: RefundReceiver\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bitcoin_receiver'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                refund_address:\n                  description: \u003e-\n                    If the receiver does not already have a refund address, then\n                    you need to provide one to perform a refund.\n                  title: refund_address\n                  oneOf:\n                    - type: string\n  '/v1/bitcoin/receivers/{receiver}/transactions':\n    get:\n      description: ''\n      operationId: AllTransactions\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return transactions for the customer specified by this customer\n            ID.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return transactions for the receiver specified by this receiver\n            ID.\n          in: path\n          name: receiver\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/bitcoin_transaction'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: BitcoinTransactionList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/bitcoin/transactions:\n    get:\n      description: ''\n      operationId: AllTransactions\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return transactions for the customer specified by this customer\n            ID.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return transactions for the receiver specified by this receiver\n            ID.\n          in: query\n          name: receiver\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/bitcoin_transaction'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: BitcoinTransactionList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/bitcoin/transactions/{id}':\n    get:\n      description: ''\n      operationId: RetrieveTransaction\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bitcoin_transaction'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/charges:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of charges you’ve previously created. The charges are\n        returned in sorted order, with the most recent charges appearing\n        first.\u003c/p\u003e\n      operationId: AllCharges\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Only return charges for the customer specified by this customer ID.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: ''\n          in: query\n          name: source\n          required: false\n          schema:\n            type: string\n        - description: Only return charges for this transfer group.\n          in: query\n          name: transfer_group\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/charge'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/charges\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateCharge\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                alternate_statement_descriptors:\n                  description: ''\n                  title: alternate_statement_descriptors\n                  oneOf:\n                    - type: object\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                application:\n                  description: ''\n                  title: application\n                  oneOf:\n                    - type: string\n                application_fee:\n                  description: ''\n                  title: application_fee\n                  oneOf:\n                    - type: integer\n                capture:\n                  description: ''\n                  title: capture\n                  oneOf:\n                    - type: boolean\n                currency:\n                  description: ''\n                  title: currency\n                  oneOf:\n                    - type: string\n                customer:\n                  description: ''\n                  title: customer\n                  oneOf:\n                    - type: string\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                destination:\n                  description: ''\n                  title: destination\n                  oneOf:\n                    - type: object\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                external_id:\n                  description: ''\n                  title: external_id\n                  oneOf:\n                    - type: string\n                invoice:\n                  description: ''\n                  title: invoice\n                  oneOf:\n                    - type: string\n                invoice_source:\n                  description: ''\n                  title: invoice_source\n                  oneOf:\n                    - type: string\n                ip:\n                  description: ''\n                  title: ip\n                  oneOf:\n                    - type: string\n                level3:\n                  description: ''\n                  title: level3\n                  oneOf:\n                    - type: object\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                on_behalf_of:\n                  description: ''\n                  title: on_behalf_of\n                  oneOf:\n                    - type: string\n                payment_user_agent:\n                  description: ''\n                  title: payment_user_agent\n                  oneOf:\n                    - type: string\n                receipt_email:\n                  description: ''\n                  title: receipt_email\n                  oneOf:\n                    - type: string\n                recurring:\n                  description: ''\n                  title: recurring\n                  oneOf:\n                    - type: boolean\n                referrer:\n                  description: ''\n                  title: referrer\n                  oneOf:\n                    - type: string\n                shipping:\n                  description: ''\n                  title: shipping\n                  oneOf:\n                    - type: object\n                source:\n                  description: ''\n                  title: source\n                  oneOf:\n                    - type: object\n                    - type: string\n                statement_descriptor:\n                  description: ''\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n                transfer_group:\n                  description: ''\n                  title: transfer_group\n                  oneOf:\n                    - type: string\n                trust:\n                  description: ''\n                  title: trust\n                  oneOf:\n                    - type: object\n                uncaptured:\n                  description: ''\n                  title: uncaptured\n                  oneOf:\n                    - type: boolean\n                user_agent:\n                  description: ''\n                  title: user_agent\n                  oneOf:\n                    - type: string\n              required:\n                - amount\n                - currency\n  '/v1/charges/{charge}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of a charge that has previously been created.\n        Supply the unique charge ID that was returned from your previous\n        request, and Stripe will return the corresponding charge information.\n        The same information is returned when creating or refunding the\n        charge.\u003c/p\u003e\n      operationId: RetrieveCharge\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the charge to be retrieved.\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specified charge by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003eThis\n        request accepts only the \u003ccode\u003edescription\u003c/code\u003e,\n        \u003ccode\u003emetadata\u003c/code\u003e, \u003ccode\u003ereceipt_email\u003c/code\u003e,\n        \u003ccode\u003efraud_details\u003c/code\u003e, and \u003ccode\u003eshipping\u003c/code\u003e as arguments.\u003c/p\u003e\n      operationId: UpdateCharge\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                description:\n                  description: \u003e-\n                    An arbitrary string which you can attach to a charge object.\n                    It is displayed when in the web interface alongside the\n                    charge. Note that if you use Stripe to send automatic email\n                    receipts to your customers, your receipt emails will include\n                    the `description` of the charge(s) that they are describing.\n                  title: description\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                fraud_details:\n                  description: \u003e-\n                    A set of key/value pairs you can attach to a charge giving\n                    information about its riskiness. If you believe a charge is\n                    fraudulent, include a `user_report` key with a value of\n                    `fraudulent`. If you believe a charge is safe, include a\n                    `user_report` key with a value of `safe`. Note that you must\n                    refund a charge before setting the `user_report` to\n                    `fraudulent`. Stripe will use the information you send to\n                    improve our fraud detection algorithms.\n                  title: fraud_details\n                  oneOf:\n                    - type: object\n                metadata:\n                  description: \u003e-\n                    Set of key/value pairs that you can attach to an object. It\n                    can be useful for storing additional information about the\n                    object in a structured format. Individual keys can be unset\n                    by posting an empty value to them. All keys can be unset by\n                    posting an empty value to metadata.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                receipt_email:\n                  description: \u003e-\n                    This is the email address that the receipt for this charge\n                    will be sent to. If this field is updated, then a new email\n                    receipt will be sent to the updated address.\n                  title: receipt_email\n                  oneOf:\n                    - type: string\n                shipping:\n                  description: \u003e-\n                    Shipping information for the charge. Helps prevent fraud on\n                    charges for physical goods.\n                  title: shipping\n                  oneOf:\n                    - type: object\n                transfer_group:\n                  description: \u003e-\n                    A string that identifies this transaction as part of a\n                    group. `transfer_group` may only be provided if it has not\n                    been set. See the [Connect\n                    documentation](/docs/connect/charges-transfers#grouping-transactions)\n                    for details.\n                  title: transfer_group\n                  oneOf:\n                    - type: string\n  '/v1/charges/{charge}/capture':\n    post:\n      description: \u003e-\n        \u003cp\u003eCapture the payment of an existing, uncaptured, charge. This is the\n        second half of the two-step payment flow, where first you \u003ca\n        href=\"#create_charge\"\u003ecreated a charge\u003c/a\u003e with the capture option set\n        to false.\u003c/p\u003e\u003cp\u003eUncaptured payments expire exactly seven days after they\n        are created. If they are not captured by that point in time, they will\n        be marked as refunded and will no longer be capturable.\u003c/p\u003e\n      operationId: ChargeCapture\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: \u003e-\n                    The amount to capture, which must be less than or equal to\n                    the original amount. Any additional amount will be\n                    automatically refunded.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                application_fee:\n                  description: \u003e-\n                    An application fee to add on to this charge. Can only be\n                    used with Stripe Connect.\n                  title: application_fee\n                  oneOf:\n                    - type: integer\n                destination:\n                  description: \u003e-\n                    An optional dictionary containing a new destination amount\n                    to use. Can only be used with destination charges created\n                    with Stripe Connect.\n                  title: destination\n                  oneOf:\n                    - type: object\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                receipt_email:\n                  description: \u003e-\n                    The email address to send this charge's receipt to. This\n                    will override the previously-specified email address for\n                    this charge, if one was set. Receipts will not be sent in\n                    test mode.\n                  title: receipt_email\n                  oneOf:\n                    - type: string\n                statement_descriptor:\n                  description: \u003e-\n                    An arbitrary string to be displayed on your customer's\n                    credit card statement. This may be up to *22 characters*. As\n                    an example, if your website is `RunClub` and the item you're\n                    charging for is a race ticket, you may want to specify a\n                    `statement_descriptor` of `RunClub 5K race ticket`. The\n                    statement description may not include `\u003c\u003e\"'` characters, and\n                    will appear on your customer's statement in capital letters.\n                    Non-ASCII characters are automatically stripped. Updating\n                    this value will overwrite the previous statement descriptor\n                    of this charge. While most banks display this information\n                    consistently, some may display it incorrectly or not at all.\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n  '/v1/charges/{charge}/dispute':\n    get:\n      description: ''\n      operationId: RetrieveChargeDispute\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dispute'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateChargeDispute\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dispute'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload7'\n  '/v1/charges/{charge}/dispute/close':\n    post:\n      description: ''\n      operationId: CloseChargeDispute\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dispute'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  '/v1/charges/{charge}/refund':\n    post:\n      description: ''\n      operationId: CreatePaymentRefundWithPaymentResponse\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload6'\n  '/v1/charges/{charge}/refunds':\n    get:\n      description: \u003e-\n        \u003cp\u003eYou can see a list of the refunds belonging to a specific charge.\n        Note that the 10 most recent refunds are always available by default on\n        the charge object. If you need more than those 10, you can use this API\n        method and the \u003ccode\u003elimit\u003c/code\u003e and \u003ccode\u003estarting_after\u003c/code\u003e\n        parameters to page through additional refunds.\u003c/p\u003e\n      operationId: AllChargeRefunds\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the charge whose refunds will be retrieved.\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/refund'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: RefundList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateChargeRefund\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                directive:\n                  description: ''\n                  title: directive\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                reason:\n                  description: ''\n                  title: reason\n                  oneOf:\n                    - type: string\n                refund_application_fee:\n                  description: ''\n                  title: refund_application_fee\n                  oneOf:\n                    - type: boolean\n                reverse_transfer:\n                  description: ''\n                  title: reverse_transfer\n                  oneOf:\n                    - type: boolean\n  '/v1/charges/{charge}/refunds/{refund}':\n    get:\n      description: ''\n      operationId: RetrieveChargeRefund\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of refund to retrieve.\n          in: path\n          name: refund\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateChargeRefund\n      parameters:\n        - description: ''\n          in: path\n          name: charge\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload8'\n  /v1/country_specs:\n    get:\n      description: \u003cp\u003eLists all Country Spec objects available in the API.\u003c/p\u003e\n      operationId: AllCountrySpecs\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/country_spec'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/country_specs\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/country_specs/{country}':\n    get:\n      description: \u003cp\u003eReturns a Country Spec for a given Country code.\u003c/p\u003e\n      operationId: RetrieveCountrySpec\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            An ISO 3166-1 alpha-2 country code. Available country codes can be\n            listed with the [List Country Specs](/docs/api#list_country_specs)\n            endpoint.\n          in: path\n          name: country\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/country_spec'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/coupons:\n    get:\n      description: \u003cp\u003eReturns a list of your coupons.\u003c/p\u003e\n      operationId: AllCoupons\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A filter on the list based on the object `created` field. The value\n            can be a string with an integer Unix timestamp, or it can be a\n            dictionary with a number of different query options.\n          in: query\n          name: created\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/coupon'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/coupons\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eYou can create coupons easily via the \u003ca\n        href=\"https://dashboard.stripe.com/coupons\"\u003ecoupon management\u003c/a\u003e page\n        of the Stripe dashboard. Coupon creation is also accessible via the API\n        if you need to create coupons on the fly.\u003c/p\u003e\u003cp\u003eA coupon has either a\n        \u003ccode\u003epercent_off\u003c/code\u003e or an \u003ccode\u003eamount_off\u003c/code\u003e and\n        \u003ccode\u003ecurrency\u003c/code\u003e. If you set an \u003ccode\u003eamount_off\u003c/code\u003e, that\n        amount will be subtracted from any invoice’s subtotal. For example, an\n        invoice with a subtotal of \u003ccurrency\u003e100\u003c/currency\u003e will have a final\n        total of \u003ccurrency\u003e0\u003c/currency\u003e if a coupon with an\n        \u003ccode\u003eamount_off\u003c/code\u003e of \u003camount\u003e200\u003c/amount\u003e is applied to it and an\n        invoice with a subtotal of \u003ccurrency\u003e300\u003c/currency\u003e will have a final\n        total of \u003ccurrency\u003e100\u003c/currency\u003e if a coupon with an\n        \u003ccode\u003eamount_off\u003c/code\u003e of \u003camount\u003e200\u003c/amount\u003e is applied to it.\u003c/p\u003e\n      operationId: CreateCoupon\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount_off:\n                  description: \u003e-\n                    A positive integer representing the amount to subtract from\n                    an invoice total (required if `percent_off` is not passed).\n                  title: amount_off\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO code for the\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n                    of the `amount_off` parameter (required if `amount_off` is\n                    passed).\n                  title: currency\n                  oneOf:\n                    - type: string\n                duration:\n                  description: \u003e-\n                    Specifies how long the discount will be in effect. Can be\n                    `forever`, `once`, or `repeating`.\n                  title: duration\n                  oneOf:\n                    - type: string\n                duration_in_months:\n                  description: \u003e-\n                    Required only if `duration` is `repeating`, in which case it\n                    must be a positive integer that specifies the number of\n                    months the discount will be in effect.\n                  title: duration_in_months\n                  oneOf:\n                    - type: integer\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                id:\n                  description: \u003e-\n                    Unique string of your choice that will be used to identify\n                    this coupon when applying it to a customer. This is often a\n                    specific code you'll give to your customer to use when\n                    signing up (e.g. *FALL25OFF*). If you don't want to specify\n                    a particular code, you can leave the ID blank and we'll\n                    generate a random code for you.\n                  title: id\n                  oneOf:\n                    - type: string\n                max_redemptions:\n                  description: \u003e-\n                    A positive integer specifying the number of times the coupon\n                    can be redeemed before it's no longer valid. For example,\n                    you might have a 50% off coupon that the first 20 readers of\n                    your blog can use.\n                  title: max_redemptions\n                  oneOf:\n                    - type: integer\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a coupon\n                    object. It can be useful for storing additional information\n                    about the coupon in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                percent_off:\n                  description: \u003e-\n                    A positive integer between 1 and 100 that represents the\n                    discount the coupon will apply (required if `amount_off` is\n                    not passed).\n                  title: percent_off\n                  oneOf:\n                    - type: integer\n                redeem_by:\n                  description: \u003e-\n                    Unix timestamp specifying the last time at which the coupon\n                    can be redeemed. After the redeem_by date, the coupon can no\n                    longer be applied to new customers.\n                  title: redeem_by\n                  oneOf:\n                    - type: integer\n              required:\n                - duration\n  '/v1/coupons/{coupon}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eYou can delete coupons via the \u003ca\n        href=\"https://dashboard.stripe.com/coupons\"\u003ecoupon management\u003c/a\u003e page\n        of the Stripe dashboard. However, deleting a coupon does not affect any\n        customers who have already applied the coupon; it means that new\n        customers can’t redeem the coupon. You can also delete coupons via the\n        API.\u003c/p\u003e\n      operationId: DeleteCoupon\n      parameters:\n        - description: The identifier of the coupon to be deleted.\n          in: path\n          name: coupon\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003cp\u003eRetrieves the coupon with the given ID.\u003c/p\u003e\n      operationId: RetrieveCoupon\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the desired coupon.\n          in: path\n          name: coupon\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the metadata of a coupon. Other coupon details (currency,\n        duration, amount_off) are, by design, not editable.\u003c/p\u003e\n      operationId: UpdateCoupon\n      parameters:\n        - description: The identifier of the coupon to be updated.\n          in: path\n          name: coupon\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/coupon'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a coupon\n                    object. It can be useful for storing additional information\n                    about the coupon in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n  /v1/customers:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your customers. The customers are returned sorted\n        by creation date, with the most recent customers appearing first.\u003c/p\u003e\n      operationId: AllCustomers\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/customer'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/customers\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003cp\u003eCreates a new customer object.\u003c/p\u003e\n      operationId: CustomerCreateWithPlan\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload9'\n  '/v1/customers/{customer}':\n    delete:\n      description: \u003e-\n        \u003cp\u003ePermanently deletes a customer. It cannot be undone. Also immediately\n        cancels any active subscriptions on the customer.\u003c/p\u003e\n      operationId: DeleteCustomer\n      parameters:\n        - description: The identifier of the customer to be deleted.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing customer. You need only supply\n        the unique customer identifier that was returned upon customer\n        creation.\u003c/p\u003e\n      operationId: RetrieveCustomer\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the customer to be retrieved.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CustomerUpdateWithPlan\n      parameters:\n        - description: ''\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload9'\n  '/v1/customers/{customer}/alipay_accounts':\n    get:\n      description: ''\n      operationId: AllCustomerAlipayAccounts\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the customer whose Alipay accounts will be retrieved.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/alipay_account'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: AlipayAccountList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateCustomerSource\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload10'\n  '/v1/customers/{customer}/alipay_accounts/{id}':\n    delete:\n      description: ''\n      operationId: DeleteCustomerSource\n      parameters:\n        - description: The ID of the source to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveCustomerAlipayAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the Alipay account to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/alipay_account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/customers/{customer}/bank_accounts':\n    get:\n      description: \u003e-\n        \u003cp\u003eYou can see a list of the bank accounts belonging to a Customer. Note\n        that the 10 most recent sources are always available by default on the\n        Customer. If you need more than those 10, you can use this API method\n        and the \u003ccode\u003elimit\u003c/code\u003e and \u003ccode\u003estarting_after\u003c/code\u003e parameters to\n        page through additional bank accounts.\u003c/p\u003e\n      operationId: AllCustomerBankAccounts\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the customer whose bank accounts will be retrieved.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/bank_account'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: BankAccountList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateCustomerSource\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload10'\n  '/v1/customers/{customer}/bank_accounts/{id}':\n    delete:\n      description: ''\n      operationId: DeleteCustomerSource\n      parameters:\n        - description: The ID of the source to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003e-\n        \u003cp\u003eBy default, you can see the 10 most recent sources stored on a\n        Customer directly on the object, but you can also retrieve details about\n        a specific bank account stored on the Stripe account.\u003c/p\u003e\n      operationId: RetrieveCustomerBankAccount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of bank account to retrieve.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank_account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateCustomerCard\n      parameters:\n        - description: The ID of the card to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload11'\n  '/v1/customers/{customer}/bank_accounts/{id}/verify':\n    post:\n      description: ''\n      operationId: VerifyCustomerSource\n      parameters:\n        - description: The ID of the source to be verified.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank_account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload12'\n  '/v1/customers/{customer}/cards':\n    get:\n      description: ''\n      operationId: AllCustomerCards\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the customer whose cards will be retrieved.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/card'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: CardList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateCustomerSource\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload10'\n  '/v1/customers/{customer}/cards/{id}':\n    delete:\n      description: ''\n      operationId: DeleteCustomerSource\n      parameters:\n        - description: The ID of the source to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveCustomerCard\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the card to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateCustomerCard\n      parameters:\n        - description: The ID of the card to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload11'\n  '/v1/customers/{customer}/discount':\n    delete:\n      description: \u003cp\u003eRemoves the currently applied discount on a customer.\u003c/p\u003e\n      operationId: DeleteCustomerDiscount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/discount'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveCustomerDiscount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/discount'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/customers/{customer}/sources':\n    get:\n      description: ''\n      operationId: AllCustomerSources\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the customer whose sources will be retrieved.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/account_debit_account'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: SourceList\n                x-expandableFields:\n                  - data\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateCustomerSource\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload10'\n  '/v1/customers/{customer}/sources/{id}':\n    delete:\n      description: ''\n      operationId: DeleteCustomerSource\n      parameters:\n        - description: The ID of the source to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveCustomerSource\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the source to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/customer_source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateCustomerCard\n      parameters:\n        - description: The ID of the card to be updated.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload11'\n  '/v1/customers/{customer}/sources/{id}/verify':\n    post:\n      description: ''\n      operationId: VerifyCustomerSource\n      parameters:\n        - description: The ID of the source to be verified.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank_account'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload12'\n  '/v1/customers/{customer}/subscriptions':\n    get:\n      description: \u003e-\n        \u003cp\u003eYou can see a list of the customer’s active subscriptions. Note that\n        the 10 most recent active subscriptions are always available by default\n        on the customer object. If you need more than those 10, you can use the\n        limit and starting_after parameters to page through additional\n        subscriptions.\u003c/p\u003e\n      operationId: AllCustomerSubscriptions\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the customer whose subscriptions will be retrieved.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/subscription'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: SubscriptionList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003cp\u003eCreates a new subscription on an existing customer.\u003c/p\u003e\n      operationId: CreateCustomerSubscription\n      parameters:\n        - description: The identifier of the customer to subscribe.\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                application_fee_percent:\n                  description: \u003e-\n                    A non-negative decimal (with at most two decimal places)\n                    between 0 and 100. This represents the percentage of the\n                    subscription invoice subtotal that will be transferred to\n                    the application owner's Stripe account. The request must be\n                    made with an OAuth key in order to set an application fee\n                    percentage. For more information, see the application fees\n                    [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).\n                  title: application_fee_percent\n                  oneOf:\n                    - type: number\n                coupon:\n                  description: \u003e-\n                    The code of the coupon to apply to this subscription. A\n                    coupon applied to a subscription will only affect invoices\n                    created for that particular subscription.\n                  title: coupon\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                items:\n                  description: 'List of subscription items, each with an attached plan.'\n                  title: items\n                  oneOf:\n                    - type: array\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a\n                    subscription object. It can be useful for storing additional\n                    information about the subscription in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                plan:\n                  description: The identifier of the plan to subscribe the customer to.\n                  title: plan\n                  oneOf:\n                    - type: string\n                quantity:\n                  description: \u003e-\n                    The quantity you'd like to apply to the subscription you're\n                    creating. For example, if your plan is\n                    \u003ccurrency\u003e10\u003c/currency\u003e/user/month, and your customer has 5\n                    users, you could pass 5 as the quantity to have the customer\n                    charged \u003ccurrency\u003e50\u003c/currency\u003e (5 x\n                    \u003ccurrency\u003e10\u003c/currency\u003e) monthly. If you update a\n                    subscription but don't change the plan ID (e.g. changing\n                    only the trial_end), the subscription will inherit the old\n                    subscription's quantity attribute unless you pass a new\n                    quantity parameter. If you update a subscription and change\n                    the plan ID, the new subscription will not inherit the\n                    quantity attribute and will default to 1 unless you pass a\n                    quantity parameter.\n                  title: quantity\n                  oneOf:\n                    - type: integer\n                source:\n                  description: \u003e-\n                    The source can either be a token, like the ones returned by\n                    [Elements](https://stripe.com/docs/elements), or a\n                    dictionary containing a user's credit card details (with the\n                    options shown below). You must provide a source if the\n                    customer does not already have a valid source attached, and\n                    you are subscribing the customer for a plan that is not\n                    free. Passing `source` will create a new source object, make\n                    it the customer default source, and delete the old customer\n                    default if one exists. If you want to add an additional\n                    source to use with subscriptions, instead use the [card\n                    creation API](https://stripe.com/docs/api#create_card) to\n                    add the card and then the [customer update\n                    API](https://stripe.com/docs/api#update customer) to set it\n                    as the default. Whenever you attach a card to a customer,\n                    Stripe will automatically validate the card.\n                  title: source\n                  oneOf:\n                    - type: object\n                    - type: string\n                tax_percent:\n                  description: \u003e-\n                    A non-negative decimal (with at most four decimal places)\n                    between 0 and 100. This represents the percentage of the\n                    subscription invoice subtotal that will be calculated and\n                    added as tax to the final amount each billing period. For\n                    example, a plan which charges $10/month with a `tax_percent`\n                    of 20.0 will charge $12 per invoice.\n                  title: tax_percent\n                  oneOf:\n                    - type: number\n                trial_end:\n                  description: \u003e-\n                    Unix timestamp representing the end of the trial period the\n                    customer will get before being charged for the first time.\n                    If set, trial_end will override the default trial period of\n                    the plan the customer is being subscribed to. The special\n                    value `now` can be provided to end the customer's trial\n                    immediately.\n                  title: trial_end\n                  oneOf:\n                    - type: integer\n                    - type: string\n                trial_period_days:\n                  description: \u003e-\n                    Integer representing the number of trial period days before\n                    the customer is charged for the first time. If set,\n                    `trial_period_days` overrides the default trial period days\n                    of the plan the customer is being subscribed to.\n                  title: trial_period_days\n                  oneOf:\n                    - type: integer\n  '/v1/customers/{customer}/subscriptions/{subscription_exposed_id}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eCancels a customer’s subscription. If you set the\n        \u003ccode\u003eat_period_end\u003c/code\u003e parameter to true, the subscription will\n        remain active until the end of the period, at which point it will be\n        canceled and not renewed. By default, the subscription is terminated\n        immediately. In either case, the customer will not be charged again for\n        the subscription. Note, however, that any pending invoice items that\n        you’ve created will still be charged for at the end of the period unless\n        manually \u003ca href=\"#delete_invoiceitem\"\u003edeleted\u003c/a\u003e. If you’ve set the\n        subscription to cancel at period end, any pending prorations will also\n        be left in place and collected at the end of the period, but if the\n        subscription is set to cancel immediately, pending prorations will be\n        removed.\u003c/p\u003e\u003cp\u003eBy default, all unpaid invoices for the customer will be\n        closed upon subscription cancellation. We do this in order to prevent\n        unexpected payment retries once the customer has canceled a\n        subscription. However, you can reopen the invoices manually after\n        subscription cancellation to have us proceed with automatic retries, or\n        you could even re-attempt payment yourself on all unpaid invoices before\n        allowing the customer to cancel the subscription at all.\u003c/p\u003e\n      operationId: DeleteCustomerSubscription\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload13'\n    get:\n      description: \u003cp\u003eRetrieves the subscription with the given ID.\u003c/p\u003e\n      operationId: RetrieveCustomerSubscription\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates an existing subscription on a customer to match the specified\n        parameters. When changing plans or quantities, we will optionally\n        prorate the price we charge next month to make up for any price changes.\n        To preview how the proration will be calculated, use the \u003ca\n        href=\"#upcoming_invoice\"\u003eupcoming invoice\u003c/a\u003e endpoint.\u003c/p\u003e\n      operationId: UpdateCustomerSubscription\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload14'\n  '/v1/customers/{customer}/subscriptions/{subscription_exposed_id}/discount':\n    delete:\n      description: \u003cp\u003eRemoves the currently applied discount on a customer.\u003c/p\u003e\n      operationId: DeleteCustomerDiscount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/discount'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveCustomerDiscount\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: customer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/discount'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/disputes:\n    get:\n      description: \u003cp\u003eReturns a list of your disputes.\u003c/p\u003e\n      operationId: AllDisputes\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/dispute'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/disputes\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/disputes/{dispute}':\n    get:\n      description: \u003cp\u003eRetrieves the dispute with the given ID.\u003c/p\u003e\n      operationId: RetrieveDispute\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of dispute to retrieve.\n          in: path\n          name: dispute\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dispute'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eWhen you get a dispute, contacting your customer is always the best\n        first step. If that doesn’t work, you can submit evidence in order to\n        help us resolve the dispute in your favor. You can do this in your \u003ca\n        href=\"https://dashboard.stripe.com/disputes\"\u003edashboard\u003c/a\u003e, but if you\n        prefer, you can use the API to submit evidence\n        programmatically.\u003c/p\u003e\u003cp\u003eDepending on your dispute type, different\n        evidence fields will give you a better chance of winning your dispute.\n        You may want to consult our \u003ca\n        href=\"https://stripe.com/help/dispute-types\"\u003eguide to dispute types\u003c/a\u003e\n        to help you figure out which evidence fields to provide.\u003c/p\u003e\n      operationId: UpdateDispute\n      parameters:\n        - description: ID of the dispute to update.\n          in: path\n          name: dispute\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dispute'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload7'\n  '/v1/disputes/{dispute}/close':\n    post:\n      description: \u003e-\n        \u003cp\u003eClosing the dispute for a charge indicates that you do not have any\n        evidence to submit and are essentially ‘dismissing’ the dispute,\n        acknowledging it as lost\u003c/p\u003e\u003cp\u003eThe status of the dispute will change\n        from \u003ccode\u003eneeds_response\u003c/code\u003e to \u003ccode\u003elost\u003c/code\u003e. \u003cstrong\u003eClosing a\n        dispute is irreversible\u003c/strong\u003e.\u003c/p\u003e\n      operationId: CloseDispute\n      parameters:\n        - description: ID of dispute to close.\n          in: path\n          name: dispute\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dispute'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  /v1/events:\n    get:\n      description: '\u003cp\u003eList events, going back up to 30 days.\u003c/p\u003e'\n      operationId: AllEvents\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A string containing a specific event name, or group of events using\n            * as a wildcard. The list will be filtered to include only events\n            with a matching event property.\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            An array of up to 20 strings containing specific event names. The\n            list will be filtered to include only events with a matching event\n            property. You may pass either `type` or `types`, but not both.\n          in: query\n          name: types\n          required: false\n          schema:\n            type: array\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/event'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/events\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/events/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an event. Supply the unique identifier of\n        the event, which you might have received in a webhook.\u003c/p\u003e\n      operationId: RetrieveEvent\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the event to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/event'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/events/{id}/retry':\n    post:\n      description: \u003cp\u003eResend an event. This only works in testmode\u003c/p\u003e\n      operationId: RetryEvent\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/event'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  /v1/invoiceitems:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your invoice items. Invoice items are returned\n        sorted by creation date, with the most recently created invoice items\n        appearing first.\u003c/p\u003e\n      operationId: AllInvoiceItems\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The identifier of the customer whose invoice items to return. If\n            none is provided, all invoice items will be returned.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/invoice_item'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/invoiceitems\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eAdds an arbitrary charge or credit to the customer’s upcoming\n        invoice.\u003c/p\u003e\n      operationId: CreateInvoiceItem\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: \u003e-\n                    The integer amount in %s of the charge to be applied to the\n                    upcoming invoice. To apply a credit to the customer's\n                    account, pass a negative amount.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                customer:\n                  description: \u003e-\n                    The ID of the customer who will be billed when this invoice\n                    item is billed.\n                  title: customer\n                  oneOf:\n                    - type: string\n                description:\n                  description: \u003e-\n                    An arbitrary string which you can attach to the invoice\n                    item. The description is displayed in the invoice for easy\n                    tracking.\n                  title: description\n                  oneOf:\n                    - type: string\n                discountable:\n                  description: \u003e-\n                    Controls whether discounts apply to this invoice item.\n                    Defaults to false for prorations or negative invoice items,\n                    and true for all other invoice items.\n                  title: discountable\n                  oneOf:\n                    - type: boolean\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                invoice:\n                  description: \u003e-\n                    The ID of an existing invoice to add this invoice item to.\n                    When left blank, the invoice item will be added to the next\n                    upcoming scheduled invoice. Use this when adding invoice\n                    items in response to an invoice.created webhook. You cannot\n                    add an invoice item to an invoice that has already been\n                    paid, attempted or closed.\n                  title: invoice\n                  oneOf:\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to an invoice\n                    item object. It can be useful for storing additional\n                    information about the invoice item in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                subscription:\n                  description: \u003e-\n                    The ID of a subscription to add this invoice item to. When\n                    left blank, the invoice item will be be added to the next\n                    upcoming scheduled invoice. When set, scheduled invoices for\n                    subscriptions other than the specified subscription will\n                    ignore the invoice item. Use this when you want to express\n                    that an invoice item has been accrued within the context of\n                    a particular subscription.\n                  title: subscription\n                  oneOf:\n                    - type: string\n              required:\n                - amount\n                - currency\n                - customer\n  '/v1/invoiceitems/{invoiceitem}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eRemoves an invoice item from the upcoming invoice. Removing an\n        invoice item is only possible before the invoice it’s attached to is\n        closed.\u003c/p\u003e\n      operationId: DeleteInvoiceItem\n      parameters:\n        - description: The identifier of the invoice item to be deleted.\n          in: path\n          name: invoiceitem\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003cp\u003eRetrieves the invoice item with the given ID.\u003c/p\u003e\n      operationId: RetrieveInvoiceItem\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the desired invoice item.\n          in: path\n          name: invoiceitem\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the amount or description of an invoice item on an upcoming\n        invoice. Updating an invoice item is only possible before the invoice\n        it’s attached to is closed.\u003c/p\u003e\n      operationId: UpdateInvoiceItem\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: \u003e-\n                    The integer amount in **%s** of the charge to be applied to\n                    the upcoming invoice. If you want to apply a credit to the\n                    customer's account, pass a negative amount.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                description:\n                  description: \u003e-\n                    An arbitrary string which you can attach to the invoice\n                    item. The description is displayed in the invoice for easy\n                    tracking.\n                  title: description\n                  oneOf:\n                    - type: string\n                discountable:\n                  description: \u003e-\n                    Controls whether discounts apply to this invoice item.\n                    Defaults to false for prorations or negative invoice items,\n                    and true for all other invoice items. Cannot be set to true\n                    for prorations.\n                  title: discountable\n                  oneOf:\n                    - type: boolean\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to an invoice\n                    item object. It can be useful for storing additional\n                    information about the invoice item in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n  /v1/invoices:\n    get:\n      description: \u003e-\n        \u003cp\u003eYou can list all invoices, or list the invoices for a specific\n        customer. The invoices are returned sorted by creation date, with the\n        most recently created invoices appearing first.\u003c/p\u003e\n      operationId: AllInvoices\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Only return invoices for the customer specified by this customer ID.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return invoices for the subscription specified by this\n            subscription ID.\n          in: query\n          name: subscription\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: date\n          required: false\n          schema:\n            type: integer\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/invoice'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/invoices\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eIf you need to invoice your customer outside the regular billing\n        cycle, you can create an invoice that pulls in all pending invoice\n        items, including prorations. The customer’s billing cycle and regular\n        subscription won’t be affected.\u003c/p\u003e\u003cp\u003eOnce you create the invoice, it’ll\n        be picked up and paid automatically, though you can choose to \u003ca\n        href=\"#pay_invoice\"\u003epay it right\u003c/a\u003e away.\u003c/p\u003e\n      operationId: CreateInvoice\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                application_fee:\n                  description: \u003e-\n                    A fee in %s that will be applied to the invoice and\n                    transferred to the application owner's Stripe account. The\n                    request must be made with an OAuth key or the Stripe-Account\n                    header in order to take an application fee. For more\n                    information, see the application fees\n                    [documentation](/docs/connect/subscriptions#working-with-invoices).\n                  title: application_fee\n                  oneOf:\n                    - type: integer\n                customer:\n                  description: ''\n                  title: customer\n                  oneOf:\n                    - type: string\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                statement_descriptor:\n                  description: \u003e-\n                    Extra information about a charge for the customer's credit\n                    card statement.\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n                subscription:\n                  description: \u003e-\n                    The ID of the subscription to invoice. If not set, the\n                    created invoice will include all pending invoice items for\n                    the customer. If set, the created invoice will exclude\n                    pending invoice items that pertain to other subscriptions.\n                  title: subscription\n                  oneOf:\n                    - type: string\n                tax_percent:\n                  description: \u003e-\n                    The percent tax rate applied to the invoice, represented as\n                    a decimal number.\n                  title: tax_percent\n                  oneOf:\n                    - type: number\n              required:\n                - customer\n  /v1/invoices/upcoming:\n    get:\n      description: \u003e-\n        \u003cp\u003eAt any time, you can preview the upcoming invoice for a customer.\n        This will show you all the charges that are pending, including\n        subscription renewal charges, invoice item charges, etc. It will also\n        show you any discount that is applicable to the customer.\u003c/p\u003e\u003cp\u003eNote\n        that when you are viewing an upcoming invoice, you are simply viewing a\n        preview – the invoice has not yet been created. As such, the upcoming\n        invoice will not show up in invoice listing calls, and you cannot use\n        the API to pay or edit the invoice. If you want to change the amount\n        that your customer will be billed, you can add, remove, or update\n        pending invoice items, or update the customer’s discount.\u003c/p\u003e\u003cp\u003eYou can\n        preview the effects of updating a subscription, including a preview of\n        what proration will take place. To ensure that the actual proration is\n        calculated exactly the same as the previewed proration, you should pass\n        a \u003ccode\u003eproration_date\u003c/code\u003e parameter when doing the actual\n        subscription update. The value passed in should be the same as the\n        \u003ccode\u003esubscription_proration_date\u003c/code\u003e returned on the upcoming\n        invoice resource. The recommended way to get only the prorations being\n        previewed is to consider only proration line items where\n        \u003ccode\u003eperiod[start]\u003c/code\u003e is equal to the\n        \u003ccode\u003esubscription_proration_date\u003c/code\u003e on the upcoming invoice\n        resource.\u003c/p\u003e\n      operationId: RetrieveCustomerUpcomingInvoice\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The identifier of the customer whose upcoming invoice you'd like to\n            retrieve.\n          in: query\n          name: customer\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The identifier of the subscription for which you'd like to retrieve\n            the upcoming invoice. If not provided, but a `subscription_plan` is\n            provided, you will preview creating a subscription to that plan. If\n            neither `subscription` nor `subscription_plan` is provided, you will\n            retrieve the next upcoming invoice from among the customer's\n            subscriptions.\n          in: query\n          name: subscription\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            If set, the invoice returned will preview updating the subscription\n            given to this plan, or creating a new subscription to this plan if\n            no `subscription` is given.\n          in: query\n          name: subscription_plan\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            If provided, the invoice returned will preview updating or creating\n            a subscription with that quantity. If set, one of\n            `subscription_plan` or `subscription` is required.\n          in: query\n          name: subscription_quantity\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            If previewing an update to a subscription, this decides whether the\n            preview will show the result of applying prorations or not. If set,\n            one of `subscription_plan` or `subscription`, and one of\n            `subscription_plan`, `subscription_quantity` or\n            `subscription_trial_end` are required.\n          in: query\n          name: subscription_prorate\n          required: false\n          schema:\n            type: boolean\n        - description: \u003e-\n            If previewing an update to a subscription, and doing proration,\n            `subscription_proration_date` forces the proration to be calculated\n            as though the update was done at the specified time. The time given\n            must be within the current subscription period, and cannot be before\n            the subscription was on its current plan.If set, `subscription`, and\n            one of `subscription_plan`, `subscription_quantity` or\n            `subscription_trial_end` are required. Also,\n            `subscription_proration` cannot be set to false.\n          in: query\n          name: subscription_proration_date\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            If provided, the invoice returned will preview updating or creating\n            a subscription with that trial end. If set, one of\n            `subscription_plan` or `subscription` is required.\n          in: query\n          name: subscription_trial_end\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            If provided, the invoice returned will preview updating or creating\n            a subscription with that tax percent. If set, one of\n            `subscription_plan` or `subscription` is required.\n          in: query\n          name: subscription_tax_percent\n          required: false\n          schema:\n            type: number\n        - description: \u003e-\n            The code of the coupon to apply. If a `subscription` or\n            `subscription_plan` is provided, the invoice returned will preview\n            updating or creating a subscription with that coupon. Otherwise, it\n            will preview applying that coupon to the customer for the next\n            upcoming invoice from among the customer's subscriptions.\n          in: query\n          name: coupon\n          required: false\n          schema:\n            type: string\n        - description: 'List of subscription items, each with an attached plan.'\n          in: query\n          name: subscription_items\n          required: false\n          schema:\n            type: array\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/upcoming_invoice'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/invoices/{invoice}':\n    get:\n      description: \u003cp\u003eRetrieves the invoice with the given ID.\u003c/p\u003e\n      operationId: RetrieveInvoice\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the desired invoice.\n          in: path\n          name: invoice\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUntil an invoice is paid, it is marked as open (closed=false). If\n        you’d like to stop Stripe from automatically attempting payment on an\n        invoice or would simply like to close the invoice out as no longer owed\n        by the customer, you can update the closed parameter.\u003c/p\u003e\n      operationId: UpdateInvoice\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                application_fee:\n                  description: \u003e-\n                    A fee in %s that will be applied to the invoice and\n                    transferred to the application owner's Stripe account. The\n                    request must be made with an OAuth key or the Stripe-Account\n                    header in order to take an application fee. For more\n                    information, see the application fees\n                    [documentation](/docs/connect/subscriptions#working-with-invoices).\n                  title: application_fee\n                  oneOf:\n                    - type: integer\n                closed:\n                  description: \u003e-\n                    Boolean representing whether an invoice is closed or not. To\n                    close an invoice, pass true.\n                  title: closed\n                  oneOf:\n                    - type: boolean\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                forgiven:\n                  description: \u003e-\n                    Boolean representing whether an invoice is forgiven or not.\n                    To forgive an invoice, pass true. Forgiving an invoice\n                    instructs us to update the subscription status as if the\n                    invoice were successfully paid. Once an invoice has been\n                    forgiven, it cannot be unforgiven or reopened.\n                  title: forgiven\n                  oneOf:\n                    - type: boolean\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                statement_descriptor:\n                  description: \u003e-\n                    Extra information about a charge for the customer's credit\n                    card statement.\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n                tax_percent:\n                  description: \u003e-\n                    The percent tax rate applied to the invoice, represented as\n                    a decimal number. The tax rate of an attempted, paid or\n                    forgiven invoice cannot be changed.\n                  title: tax_percent\n                  oneOf:\n                    - type: number\n  '/v1/invoices/{invoice}/lines':\n    get:\n      description: \u003e-\n        \u003cp\u003eWhen retrieving an invoice, you’ll get a \u003cstrong\u003elines\u003c/strong\u003e\n        property containing the total count of line items and the first handful\n        of those items. There is also a URL where you can retrieve the full\n        (paginated) list of line items.\u003c/p\u003e\n      operationId: AllInvoiceLines\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of line items to return.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The id of the invoice containing the lines to be retrieved.\n          in: path\n          name: invoice\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            In the case of upcoming invoices, the customer of the upcoming\n            invoice is required. In other cases it is ignored.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            In the case of upcoming invoices, the subscription of the upcoming\n            invoice is optional. In other cases it is ignored.\n          in: query\n          name: subscription\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            For upcoming invoices, preview updating the subscription given to\n            this plan, or creating a new subscription to this plan if no\n            `subscription` is given. Otherwise this parameter is ignored.\n          in: query\n          name: subscription_plan\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            For upcoming invoices, preview updating or creating a subscription\n            with that quantity. If set, one of `subscription_plan` or\n            `subscription` is required. Otherwise this parameter is ignored.\n          in: query\n          name: subscription_quantity\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            For upcoming invoices, this decides whether the preview will show\n            the result of applying prorations or not. If set, one of\n            `subscription_plan` or `subscription`, and one of\n            `subscription_plan`, `subscription_quantity` or\n            `subscription_trial_end` are required. Otherwise this parameter is\n            ignored.\n          in: query\n          name: subscription_prorate\n          required: false\n          schema:\n            type: boolean\n        - description: \u003e-\n            For previewing upcoming invoices with proration,\n            `subscription_proration_date` forces the proration to be calculated\n            as though the update was done at the specified time. The time given\n            must be within the current subscription period, and cannot be before\n            the subscription was on its current plan.If set, `subscription`, and\n            one of `subscription_plan`, `subscription_quantity` or\n            `subscription_trial_end` are required. Also,\n            `subscription_proration` cannot be set to false. Otherwise this\n            parameter is ignored.\n          in: query\n          name: subscription_proration_date\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            For upcoming invoices, preview updating or creating a subscription\n            with that trial end. If set, one of `subscription_plan` or\n            `subscription` is required. Otherwise this parameter is ignored.\n          in: query\n          name: subscription_trial_end\n          required: false\n          schema:\n            type: integer\n        - description: ''\n          in: query\n          name: subscription_tax_percent\n          required: false\n          schema:\n            type: number\n        - description: \u003e-\n            For upcoming invoices, preview applying this coupon to the invoice.\n            If a `subscription` or `subscription_plan` is provided, the invoice\n            returned will preview updating or creating a subscription with that\n            coupon. Otherwise, it will preview applying that coupon to the\n            customer for the next upcoming invoice from among the customer's\n            subscriptions. Otherwise this parameter is ignored.\n          in: query\n          name: coupon\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            For upcoming invoices, preview updating the subscription with this\n            list of items. Otherwise this parameter is ignored.\n          in: query\n          name: subscription_items\n          required: false\n          schema:\n            type: array\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/invoice_line_item'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: InvoiceLinesList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/invoices/{invoice}/pay':\n    post:\n      description: \u003e-\n        \u003cp\u003eStripe automatically creates and then attempts to pay invoices for\n        customers on subscriptions. We’ll also retry unpaid invoices according\n        to your \u003ca href=\"https://dashboard.stripe.com/account/recurring\"\u003eretry\n        settings\u003c/a\u003e. However, if you’d like to attempt to collect payment on an\n        invoice out of the normal retry schedule or for some other reason, you\n        can do so.\u003c/p\u003e\n      operationId: PayInvoice\n      parameters:\n        - description: ID of invoice to pay.\n          in: path\n          name: invoice\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/invoice'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  /v1/order_returns:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your order returns. The returns are returned sorted\n        by creation date, with the most recently created return appearing\n        first.\u003c/p\u003e\n      operationId: AllOrderReturns\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The order to retrieve returns for.\n          in: query\n          name: order\n          required: false\n          schema:\n            type: string\n        - description: Date this return was created.\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/order_return'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/order_returns\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  '/v1/order_returns/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing order return. Supply the unique\n        order ID from either an order return creation request or the order\n        return list, and Stripe will return the corresponding order\n        information.\u003c/p\u003e\n      operationId: RetrieveOrderReturn\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the order return to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order_return'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/orders:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your orders. The orders are returned sorted by\n        creation date, with the most recently created orders appearing\n        first.\u003c/p\u003e\n      operationId: AllOrders\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return orders that have the given status. One of `created`,\n            `paid`, `fulfilled`, or `refunded`.\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n        - description: Only return orders with the given IDs.\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: array\n        - description: Only return orders for the given customer.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: Date this order was created.\n          in: query\n          name: created\n          required: false\n          schema:\n            type: string\n        - description: Only return orders with the given upstream order IDs.\n          in: query\n          name: upstream_ids\n          required: false\n          schema:\n            type: array\n        - description: \u003e-\n            Filter orders based on when they were paid, fulfilled, canceled, or\n            returned.\n          in: query\n          name: status_transitions\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/order'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/orders\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateOrder\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                coupon:\n                  description: \u003e-\n                    A coupon code that represents a discount to be applied to\n                    this order. Must be one-time duration and in same currency\n                    as the order.\n                  title: coupon\n                  oneOf:\n                    - type: string\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                customer:\n                  description: \u003e-\n                    The ID of an existing customer to use for this order. If\n                    provided, the customer email and shipping address will be\n                    used to create the order. Subsequently, the customer will\n                    also be charged to pay the order. If `email` or `shipping`\n                    are also provided, they will override the values retrieved\n                    from the customer object.\n                  title: customer\n                  oneOf:\n                    - type: string\n                email:\n                  description: The email address of the customer placing the order.\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                items:\n                  description: List of items constituting the order.\n                  title: items\n                  oneOf:\n                    - type: array\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to an order\n                    object. It can be useful for storing additional information\n                    about the order in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                shipping:\n                  description: \u003e-\n                    Shipping address for the order. Required if any of the SKUs\n                    are for products that have `shippable` set to true.\n                  title: shipping\n                  oneOf:\n                    - type: object\n              required:\n                - currency\n  '/v1/orders/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing order. Supply the unique order\n        ID from either an order creation request or the order list, and Stripe\n        will return the corresponding order information.\u003c/p\u003e\n      operationId: RetrieveOrder\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the order to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specific order by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged. This request\n        accepts only the \u003ccode\u003emetadata\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e as\n        arguments.\u003c/p\u003e\n      operationId: UpdateOrder\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                coupon:\n                  description: \u003e-\n                    A coupon code that represents a discount to be applied to\n                    this order. Must be one-time duration and in same currency\n                    as the order.\n                  title: coupon\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a product\n                    object. It can be useful for storing additional information\n                    about the order in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                selected_shipping_method:\n                  description: \u003e-\n                    The shipping method to select for fulfilling this order. If\n                    specified, must be one of the `id`s of a shipping method in\n                    the `shipping_methods` array. If specified, will overwrite\n                    the existing selected shipping method, updating `items` as\n                    necessary.\n                  title: selected_shipping_method\n                  oneOf:\n                    - type: string\n                shipping:\n                  description: Tracking information once the order has been fulfilled.\n                  title: shipping\n                  oneOf:\n                    - type: object\n                status:\n                  description: \u003e-\n                    Current order status. One of `created`, `paid`, `canceled`,\n                    `fulfilled`, or `returned`. More detail in the [Relay API\n                    Overview](/docs/orders/guide#understanding-order-statuses).\n                  title: status\n                  oneOf:\n                    - type: string\n  '/v1/orders/{id}/pay':\n    post:\n      description: ''\n      operationId: PayOrder\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                application_fee:\n                  description: ''\n                  title: application_fee\n                  oneOf:\n                    - type: integer\n                customer:\n                  description: \u003e-\n                    The ID of an existing customer that will be charged for this\n                    order. If no customer was attached to the order at creation,\n                    either `source` or `customer` is required. Otherwise, the\n                    specified customer will be charged instead of the one\n                    attached to the order.\n                  title: customer\n                  oneOf:\n                    - type: string\n                email:\n                  description: \u003e-\n                    The email address of the customer placing the order.\n                    Required if not previously specified for the order.\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to an order\n                    object. It can be useful for storing additional information\n                    about the order in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                shipping_method:\n                  description: ''\n                  title: shipping_method\n                  oneOf:\n                    - type: string\n                source:\n                  description: \u003e-\n                    The source can either be a token, like the ones returned by\n                    [Elements](/docs/elements), or a dictionary containing a\n                    user's credit card details (with the options shown below).\n                    Whenever you create a new card for a customer, Stripe will\n                    automatically validate the card. If no customer was attached\n                    to the order at creation, either `source` or `customer is\n                    required. Otherwise, the specified source will be charged\n                    intead of the customer attached to the order.\n                  title: source\n                  oneOf:\n                    - type: object\n                    - type: string\n  '/v1/orders/{id}/returns':\n    post:\n      description: \u003e-\n        \u003cp\u003eReturn all or part of an order. The order must have a status of\n        \u003ccode\u003epaid\u003c/code\u003e or \u003ccode\u003efulfilled\u003c/code\u003e before it can be returned.\n        Once all items have been returned, the order will become\n        \u003ccode\u003ecanceled\u003c/code\u003e or \u003ccode\u003ereturned\u003c/code\u003e depending on which status\n        the order started in.\u003c/p\u003e\n      operationId: CreateOrderReturn\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/order_return'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                items:\n                  description: List of items to return.\n                  title: items\n                  oneOf:\n                    - type: array\n  /v1/payments:\n    get:\n      description: ''\n      operationId: AllPayments\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Only return payments for the customer specified by this customer ID.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: transfer_group\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/charge'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/payments\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreatePayment\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload5'\n  '/v1/payments/{payment}':\n    get:\n      description: ''\n      operationId: RetrievePayment\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: payment\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/charge'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/payouts:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of existing payouts sent to third-party bank accounts\n        or that Stripe has sent you. The payouts are returned in sorted order,\n        with the most recently created payouts appearing first.\u003c/p\u003e\n      operationId: PayoutAll\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: arrival_date\n          required: false\n          schema:\n            type: integer\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            The ID of an external account - only return payouts sent to this\n            external account.\n          in: query\n          name: destination\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return payouts that have the given status: `pending`, `paid`,\n            `failed`, `in_transit`, or `canceled`.\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/payout'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/payouts\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: PayoutList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eTo send funds to your own bank account, you create a new payout\n        object. Your \u003ca href=\"#balance\"\u003eStripe balance\u003c/a\u003e must be able to cover\n        the payout amount, or you’ll receive an “Insufficient Funds”\n        error.\u003c/p\u003e\u003cp\u003eIf your API key is in test mode, money won’t actually be\n        sent, though everything else will occur as if in live mode.\u003c/p\u003e\u003cp\u003eIf you\n        are creating a manual payout on a Stripe account that uses multiple\n        payment source types, you’ll need to specify the source type balance\n        that the payout should draw from. The \u003ca href=\"#balance_object\"\u003ebalance\n        object\u003c/a\u003e details available and pending amounts by source type.\u003c/p\u003e\n      operationId: PayoutCreate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payout'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: A positive integer in cents representing how much to payout.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                destination:\n                  description: \u003e-\n                    The ID of a bank account or a card to send the payout to. If\n                    no destination is supplied, the default external account for\n                    the specified currency will be used.\n                  title: destination\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a payout\n                    object. It can be useful for storing additional information\n                    about the payout in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                method:\n                  description: \u003e-\n                    The method used to send this payout, which can be `standard`\n                    or `instant`. `instant` is only supported for payouts to\n                    debit cards. (See [Instant payouts for marketplaces for more\n                    information](https://stripe.com/blog/instant-payouts-for-marketplaces).)\n                  title: method\n                  oneOf:\n                    - type: string\n                source_type:\n                  description: \u003e-\n                    The source balance to draw this payout from. Balances for\n                    different payment sources are kept separately. You can find\n                    the amounts with the balances API. Valid options are:\n                    `alipay_account`, `bank_account`, `bitcoin_receiver`, and\n                    `card`.\n                  title: source_type\n                  oneOf:\n                    - type: string\n                statement_descriptor:\n                  description: \u003e-\n                    A string to be displayed on the recipient's bank or card\n                    statement. This may be at most 22 characters. Attempting to\n                    use a `statement_descriptor` longer than 22 characters will\n                    return an error. Note: Most banks will truncate this\n                    information and/or display it inconsistently. Some may not\n                    display it at all.\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n              required:\n                - amount\n                - currency\n  '/v1/payouts/{payout}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing payout. Supply the unique payout\n        ID from either a payout creation request or the payout list, and Stripe\n        will return the corresponding payout information.\u003c/p\u003e\n      operationId: PayoutRetrieve\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the payout to be retrieved.\n          in: path\n          name: payout\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payout'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specified payout by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged. This request\n        accepts only the metadata as arguments.\u003c/p\u003e\n      operationId: PayoutUpdate\n      parameters:\n        - description: The identifier of the payout to be updated.\n          in: path\n          name: payout\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payout'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a payout\n                    object. It can be useful for storing additional information\n                    about the payout in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n  '/v1/payouts/{payout}/cancel':\n    post:\n      description: \u003e-\n        \u003cp\u003eA previously created payout can be canceled if it has not yet been\n        paid out. Funds will be refunded to your available balance, and the fees\n        you were originally charged on the payout will be refunded. You may not\n        cancel automatic Stripe payouts.\u003c/p\u003e\n      operationId: PayoutCancel\n      parameters:\n        - description: The identifier of the payout to be canceled.\n          in: path\n          name: payout\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/payout'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  /v1/plans:\n    get:\n      description: \u003cp\u003eReturns a list of your plans.\u003c/p\u003e\n      operationId: AllPlans\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A filter on the list based on the object `created` field. The value\n            can be a string with an integer Unix timestamp, or it can be a\n            dictionary with a number of different query options.\n          in: query\n          name: created\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/plan'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/plans\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eYou can create plans easily via the \u003ca\n        href=\"https://dashboard.stripe.com/plans\"\u003eplan management\u003c/a\u003e page of\n        the Stripe dashboard. Plan creation is also accessible via the API if\n        you need to create plans on the fly.\u003c/p\u003e\n      operationId: CreatePlan\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/plan'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: \u003e-\n                    A positive integer in **%s** (or 0 for a free plan)\n                    representing how much to charge (on a recurring basis).\n                  title: amount\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                id:\n                  description: \u003e-\n                    Unique string of your choice that will be used to identify\n                    this plan when subscribing a customer. This could be an\n                    identifier like \"gold\" or a primary key from your own\n                    database.\n                  title: id\n                  oneOf:\n                    - type: string\n                interval:\n                  description: \u003e-\n                    Specifies billing frequency. Either day, week, month or\n                    year.\n                  title: interval\n                  oneOf:\n                    - type: string\n                interval_count:\n                  description: \u003e-\n                    The number of intervals between each subscription billing.\n                    For example, `interval=month` and `interval_count=3` bills\n                    every 3 months. Maximum of one year interval allowed (1\n                    year, 12 months, or 52 weeks).\n                  title: interval_count\n                  oneOf:\n                    - type: integer\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a plan\n                    object. It can be useful for storing additional information\n                    about the plan in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                name:\n                  description: \u003e-\n                    Name of the plan, to be displayed on invoices and in the web\n                    interface.\n                  title: name\n                  oneOf:\n                    - type: string\n                statement_descriptor:\n                  description: \u003e-\n                    An arbitrary string to be displayed on your customer's\n                    credit card statement. This may be up to **22 characters**.\n                    As an example, if your website is `RunClub` and the item\n                    you're charging for is your Silver Plan, you may want to\n                    specify a `statement_descriptor` of `RunClub Silver Plan`.\n                    The statement description may not include `\u003c\u003e\"'` characters,\n                    and will appear on your customer's statement in capital\n                    letters. Non-ASCII characters are automatically stripped.\n                    While most banks display this information consistently, some\n                    may display it incorrectly or not at all.\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n                trial_period_days:\n                  description: \u003e-\n                    Specifies a trial period in (an integer number of) days. If\n                    you include a trial period, the customer won't be billed for\n                    the first time until the trial period ends. If the customer\n                    cancels before the trial period is over, she'll never be\n                    billed at all.\n                  title: trial_period_days\n                  oneOf:\n                    - type: integer\n              required:\n                - amount\n                - currency\n                - id\n                - interval\n                - name\n  '/v1/plans/{plan}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eYou can delete plans via the \u003ca\n        href=\"https://dashboard.stripe.com/plans\"\u003eplan management\u003c/a\u003e page of\n        the Stripe dashboard. However, deleting a plan does not affect any\n        current subscribers to the plan; it merely means that new subscribers\n        can’t be added to that plan. You can also delete plans via the API.\u003c/p\u003e\n      operationId: DeletePlan\n      parameters:\n        - description: The identifier of the plan to be deleted.\n          in: path\n          name: plan\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/plan'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003cp\u003eRetrieves the plan with the given ID.\u003c/p\u003e\n      operationId: RetrievePlan\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the desired plan.\n          in: path\n          name: plan\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/plan'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the name of a plan. Other plan details (price, interval,\n        etc.) are, by design, not editable.\u003c/p\u003e\n      operationId: UpdatePlan\n      parameters:\n        - description: The identifier of the plan to be updated.\n          in: path\n          name: plan\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/plan'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a plan\n                    object. It can be useful for storing additional information\n                    about the plan in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                name:\n                  description: \u003e-\n                    Name of the plan, to be displayed on invoices and in the web\n                    interface.\n                  title: name\n                  oneOf:\n                    - type: string\n                statement_descriptor:\n                  description: \u003e-\n                    An arbitrary string to be displayed on your customer's\n                    credit card statement. This may be up to **22 characters**.\n                    As an example, if your website is `RunClub` and the item\n                    you're charging for is your Silver Plan, you may want to\n                    specify a `statement_descriptor` of `RunClub Silver Plan`.\n                    The statement description may not include `\u003c\u003e\"'` characters,\n                    and will appear on your customer's statement in capital\n                    letters. Non-ASCII characters are automatically stripped.\n                    While most banks display this information consistently, some\n                    may display it incorrectly or not at all.\n                  title: statement_descriptor\n                  oneOf:\n                    - type: string\n                trial_period_days:\n                  description: \u003e-\n                    Specifies a trial period in (an integer number of) days. If\n                    you include a trial period, the customer won't be billed for\n                    the first time until the trial period ends. If the customer\n                    cancels before the trial period is over, she'll never be\n                    billed at all.\n                  title: trial_period_days\n                  oneOf:\n                    - type: integer\n  /v1/products:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your products. The products are returned sorted by\n        creation date, with the most recently created products appearing\n        first.\u003c/p\u003e\n      operationId: AllProducts\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return products that are active or inactive (e.g. pass `false`\n            to list all inactive products).\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n        - description: Only return products with the given IDs.\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: array\n        - description: \u003e-\n            Only return products that can be shipped (i.e., physical, not\n            digital products).\n          in: query\n          name: shippable\n          required: false\n          schema:\n            type: boolean\n        - description: Only return products with the given url.\n          in: query\n          name: url\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/product'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/products\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003cp\u003eCreates a new product object.\u003c/p\u003e\n      operationId: CreateProduct\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                active:\n                  description: \u003e-\n                    Whether or not the product is currently available for\n                    purchase. Defaults to `true`.\n                  title: active\n                  oneOf:\n                    - type: boolean\n                attributes:\n                  description: \u003e-\n                    A list of up to 5 alphanumeric attributes that each SKU can\n                    provide values for (e.g. `[\"color\", \"size\"]`).\n                  title: attributes\n                  oneOf:\n                    - type: array\n                caption:\n                  description: \u003e-\n                    A short one-line description of the product, meant to be\n                    displayable to the customer.\n                  title: caption\n                  oneOf:\n                    - type: string\n                deactivate_on:\n                  description: \u003e-\n                    An array of Connect application names or identifiers that\n                    should not be able to order the SKUs for this product.\n                  title: deactivate_on\n                  oneOf:\n                    - type: array\n                description:\n                  description: \u003e-\n                    The product's description, meant to be displayable to the\n                    customer.\n                  title: description\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                id:\n                  description: \u003e-\n                    The identifier for the product. Must be unique. If not\n                    provided, an identifier will be randomly generated.\n                  title: id\n                  oneOf:\n                    - type: string\n                images:\n                  description: \u003e-\n                    A list of up to 8 URLs of images for this product, meant to\n                    be displayable to the customer.\n                  title: images\n                  oneOf:\n                    - type: array\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a product\n                    object. It can be useful for storing additional information\n                    about the product in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                name:\n                  description: 'The product''s name, meant to be displayable to the customer.'\n                  title: name\n                  oneOf:\n                    - type: string\n                package_dimensions:\n                  description: \u003e-\n                    The dimensions of this product for shipping purposes. A SKU\n                    associated with this product can override this value by\n                    having its own `package_dimensions`.\n                  title: package_dimensions\n                  oneOf:\n                    - type: object\n                shippable:\n                  description: \u003e-\n                    Whether this product is shipped (i.e. physical goods).\n                    Defaults to `true`.\n                  title: shippable\n                  oneOf:\n                    - type: boolean\n                url:\n                  description: A URL of a publicly-accessible webpage for this product.\n                  title: url\n                  oneOf:\n                    - type: string\n              required:\n                - name\n  '/v1/products/{id}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eDelete a product. Deleting a product is only possible if it has no\n        SKUs associated with it.\u003c/p\u003e\n      operationId: DeleteProduct\n      parameters:\n        - description: The ID of the product to delete.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing product. Supply the unique\n        product ID from either a product creation request or the product list,\n        and Stripe will return the corresponding product information.\u003c/p\u003e\n      operationId: RetrieveProduct\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the product to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specific product by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003eNote\n        that a product’s \u003ccode\u003eattributes\u003c/code\u003e are not editable. Instead, you\n        would need to deactivate the existing product and create a new one with\n        the new attribute values.\u003c/p\u003e\n      operationId: UpdateProduct\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/product'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                active:\n                  description: Whether or not the product is available for purchase.\n                  title: active\n                  oneOf:\n                    - type: boolean\n                attributes:\n                  description: \u003e-\n                    A list of up to 5 alphanumeric attributes that each SKU can\n                    provide values for (e.g. `[\"color\", \"size\"]`). If a value\n                    for `attributes` is specified, the list specified will\n                    replace the existing attributes list on this product. Any\n                    attributes not present after the update will be deleted from\n                    the SKUs for this product.\n                  title: attributes\n                  oneOf:\n                    - type: array\n                    - type: string\n                caption:\n                  description: \u003e-\n                    A short one-line description of the product, meant to be\n                    displayable to the customer.\n                  title: caption\n                  oneOf:\n                    - type: string\n                deactivate_on:\n                  description: \u003e-\n                    An array of Connect application names or identifiers that\n                    should not be able to order the SKUs for this product.\n                  title: deactivate_on\n                  oneOf:\n                    - type: array\n                    - type: string\n                description:\n                  description: \u003e-\n                    The product's description, meant to be displayable to the\n                    customer.\n                  title: description\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                images:\n                  description: \u003e-\n                    A list of up to 8 URLs of images for this product, meant to\n                    be displayable to the customer.\n                  title: images\n                  oneOf:\n                    - type: array\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a product\n                    object. It can be useful for storing additional information\n                    about the product in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                name:\n                  description: 'The product''s name, meant to be displayable to the customer.'\n                  title: name\n                  oneOf:\n                    - type: string\n                package_dimensions:\n                  description: \u003e-\n                    The dimensions of this product for shipping purposes. A SKU\n                    associated with this product can override this value by\n                    having its own `package_dimensions`.\n                  title: package_dimensions\n                  oneOf:\n                    - type: object\n                shippable:\n                  description: \u003e-\n                    Whether this product is shipped (i.e. physical goods).\n                    Defaults to `true`.\n                  title: shippable\n                  oneOf:\n                    - type: boolean\n                url:\n                  description: A URL of a publicly-accessible webpage for this product.\n                  title: url\n                  oneOf:\n                    - type: string\n  /v1/recipients:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your recipients. The recipients are returned sorted\n        by creation date, with the most recently created recipients appearing\n        first.\u003c/p\u003e\n      operationId: AllTransferRecipients\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Only return recipients that are verified or unverified.\n          in: query\n          name: verified\n          required: false\n          schema:\n            type: boolean\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: ''\n          in: query\n          name: type\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/transfer_recipient'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/recipients\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: TransferRecipientCreate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_recipient'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                bank_account:\n                  description: ''\n                  title: bank_account\n                  oneOf:\n                    - type: object\n                    - type: string\n                card:\n                  description: ''\n                  title: card\n                  oneOf:\n                    - type: object\n                    - type: string\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                email:\n                  description: ''\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                name:\n                  description: ''\n                  title: name\n                  oneOf:\n                    - type: string\n                tax_id:\n                  description: ''\n                  title: tax_id\n                  oneOf:\n                    - type: string\n                type:\n                  description: ''\n                  title: type\n                  oneOf:\n                    - type: string\n              required:\n                - name\n                - type\n  '/v1/recipients/{id}':\n    delete:\n      description: \u003cp\u003ePermanently deletes a recipient. It cannot be undone.\u003c/p\u003e\n      operationId: TransferRecipientDelete\n      parameters:\n        - description: The identifier of the recipient to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_recipient'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing recipient. You need only supply\n        the unique recipient identifier that was returned upon recipient\n        creation.\u003c/p\u003e\n      operationId: RetrieveTransferRecipient\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the recipient to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_recipient'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: TransferRecipientUpdate\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_recipient'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                bank_account:\n                  description: ''\n                  title: bank_account\n                  oneOf:\n                    - type: object\n                    - type: string\n                card:\n                  description: ''\n                  title: card\n                  oneOf:\n                    - type: object\n                    - type: string\n                default_card:\n                  description: ''\n                  title: default_card\n                  oneOf:\n                    - type: string\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                email:\n                  description: ''\n                  title: email\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                name:\n                  description: ''\n                  title: name\n                  oneOf:\n                    - type: string\n                tax_id:\n                  description: ''\n                  title: tax_id\n                  oneOf:\n                    - type: string\n                type:\n                  description: ''\n                  title: type\n                  oneOf:\n                    - type: string\n  '/v1/recipients/{id}/cards':\n    get:\n      description: ''\n      operationId: AllTransferRecipientCards\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the recipient whose cards will be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/card'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: CardList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateTransferRecipientCard\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                card:\n                  description: \u003e-\n                    The card can either be a token, like the ones returned by\n                    [Elements](/docs/elements), or a dictionary containing a\n                    user's credit card details (with the options shown below).\n                    Whenever you create a new card for a recipient, Stripe will\n                    automatically validate the card.\n                  title: card\n                  oneOf:\n                    - type: object\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n              required:\n                - card\n  '/v1/recipients/{recipient}/cards/{id}':\n    delete:\n      description: ''\n      operationId: DeleteTransferRecipientCard\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: recipient\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: ''\n      operationId: RetrieveTransferRecipientCard\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of card to retrieve.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: recipient\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateTransferRecipientCard\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                address_city:\n                  description: ''\n                  title: address_city\n                  oneOf:\n                    - type: string\n                address_country:\n                  description: ''\n                  title: address_country\n                  oneOf:\n                    - type: string\n                address_line1:\n                  description: ''\n                  title: address_line1\n                  oneOf:\n                    - type: string\n                address_line2:\n                  description: ''\n                  title: address_line2\n                  oneOf:\n                    - type: string\n                address_state:\n                  description: ''\n                  title: address_state\n                  oneOf:\n                    - type: string\n                address_zip:\n                  description: ''\n                  title: address_zip\n                  oneOf:\n                    - type: string\n                exp_month:\n                  description: ''\n                  title: exp_month\n                  oneOf:\n                    - type: string\n                exp_year:\n                  description: ''\n                  title: exp_year\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                name:\n                  description: ''\n                  title: name\n                  oneOf:\n                    - type: string\n  /v1/refunds:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of all refunds you’ve previously created. The refunds\n        are returned in sorted order, with the most recent refunds appearing\n        first. For convenience, the 10 most recent refunds are always available\n        by default on the charge object.\u003c/p\u003e\n      operationId: AllRefunds\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: Only return refunds for the charge specified by this charge ID.\n          in: query\n          name: charge\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/refund'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/refunds\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateChargeRefund\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                charge:\n                  description: ''\n                  title: charge\n                  oneOf:\n                    - type: string\n                directive:\n                  description: ''\n                  title: directive\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                reason:\n                  description: ''\n                  title: reason\n                  oneOf:\n                    - type: string\n                refund_application_fee:\n                  description: ''\n                  title: refund_application_fee\n                  oneOf:\n                    - type: boolean\n                reverse_transfer:\n                  description: ''\n                  title: reverse_transfer\n                  oneOf:\n                    - type: boolean\n              required:\n                - charge\n  '/v1/refunds/{refund}':\n    get:\n      description: \u003cp\u003eRetrieves the details of an existing refund.\u003c/p\u003e\n      operationId: RetrieveRefund\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of refund to retrieve.\n          in: path\n          name: refund\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specified refund by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003eThis\n        request only accepts \u003ccode\u003emetadata\u003c/code\u003e as an argument.\u003c/p\u003e\n      operationId: UpdateRefund\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/refund'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload8'\n  /v1/skus:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your SKUs. The SKUs are returned sorted by creation\n        date, with the most recently created SKUs appearing first.\u003c/p\u003e\n      operationId: AllSKUs\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the product whose SKUs will be retrieved.\n          in: query\n          name: product\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return SKUs that are active or inactive (e.g. pass `false` to\n            list all inactive products).\n          in: query\n          name: active\n          required: false\n          schema:\n            type: boolean\n        - description: Only return SKUs with the given IDs.\n          in: query\n          name: ids\n          required: false\n          schema:\n            type: array\n        - description: \u003e-\n            Only return SKUs that have the specified key/value pairs in this\n            partially constructed dictionary. Can be specified only if `product`\n            is also supplied. For instance, if the associated product has\n            attributes `[\"color\", \"size\"]`, passing in `attributes[color]=red`\n            returns all the SKUs for this product that have `color` set to\n            `red`.\n          in: query\n          name: attributes\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            Only return SKUs that are either in stock or out of stock (e.g. pass\n            `false` to list all SKUs that are out of stock). If no value is\n            provided, all SKUs are returned.\n          in: query\n          name: in_stock\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/sku'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/skus\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003cp\u003eCreates a new SKU associated with a product.\u003c/p\u003e\n      operationId: CreateSKU\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sku'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                active:\n                  description: \u003e-\n                    Whether or not the SKU is available for purchase. Default to\n                    `true`.\n                  title: active\n                  oneOf:\n                    - type: boolean\n                attributes:\n                  description: \u003e-\n                    A dictionary of attributes and values for the attributes\n                    defined by the product. If, for example, a product's\n                    attributes are `[\"size\", \"gender\"]`, a valid SKU has the\n                    following dictionary of attributes: `{\"size\": \"Medium\",\n                    \"gender\": \"Unisex\"}`.\n                  title: attributes\n                  oneOf:\n                    - type: object\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                id:\n                  description: \u003e-\n                    The identifier for the SKU. Must be unique. If not provided,\n                    an identifier will be randomly generated.\n                  title: id\n                  oneOf:\n                    - type: string\n                image:\n                  description: \u003e-\n                    The URL of an image for this SKU, meant to be displayable to\n                    the customer.\n                  title: image\n                  oneOf:\n                    - type: string\n                inventory:\n                  description: Description of the SKU's inventory.\n                  title: inventory\n                  oneOf:\n                    - type: object\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a SKU\n                    object. It can be useful for storing additional information\n                    about the SKU in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                package_dimensions:\n                  description: The dimensions of this SKU for shipping purposes.\n                  title: package_dimensions\n                  oneOf:\n                    - type: object\n                price:\n                  description: \u003e-\n                    The cost of the item as a nonnegative integer in the\n                    smallest currency unit (that is, 100 cents to charge $1.00,\n                    or 100 to charge ¥100, Japanese Yen being a 0-decimal\n                    currency).\n                  title: price\n                  oneOf:\n                    - type: integer\n                product:\n                  description: The ID of the product this SKU is associated with.\n                  title: product\n                  oneOf:\n                    - type: string\n              required:\n                - currency\n                - inventory\n                - price\n                - product\n  '/v1/skus/{id}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eDelete a SKU. Deleting a SKU is only possible until it has been used\n        in an order.\u003c/p\u003e\n      operationId: DeleteSKU\n      parameters:\n        - description: The identifier of the SKU to be deleted.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sku'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing SKU. Supply the unique SKU\n        identifier from either a SKU creation request or from the product, and\n        Stripe will return the corresponding SKU information.\u003c/p\u003e\n      operationId: RetrieveSKU\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the SKU to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sku'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specific SKU by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003eNote\n        that a SKU’s \u003ccode\u003eattributes\u003c/code\u003e are not editable. Instead, you\n        would need to deactivate the existing SKU and create a new one with the\n        new attribute values.\u003c/p\u003e\n      operationId: UpdateSKU\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/sku'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                active:\n                  description: Whether or not this SKU is available for purchase.\n                  title: active\n                  oneOf:\n                    - type: boolean\n                attributes:\n                  description: \u003e-\n                    A dictionary of attributes and values for the attributes\n                    defined by the product. When specified, `attributes` will\n                    partially update the existing attributes dictionary on the\n                    product, with the postcondition that a value must be present\n                    for each attribute key on the product, and that all SKUs for\n                    the product must have unique sets of attributes.\n                  title: attributes\n                  oneOf:\n                    - type: object\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO currency\n                    code](https://www.iso.org/iso-4217-currency-codes.html), in\n                    lowercase. Must be a [supported\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                  title: currency\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                image:\n                  description: \u003e-\n                    The URL of an image for this SKU, meant to be displayable to\n                    the customer.\n                  title: image\n                  oneOf:\n                    - type: string\n                inventory:\n                  description: Description of the SKU's inventory.\n                  title: inventory\n                  oneOf:\n                    - type: object\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a SKU\n                    object. It can be useful for storing additional information\n                    about the SKU in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                package_dimensions:\n                  description: The dimensions of this SKU for shipping purposes.\n                  title: package_dimensions\n                  oneOf:\n                    - type: object\n                price:\n                  description: \u003e-\n                    The cost of the item as a positive integer in the smallest\n                    currency unit (that is, 100 cents to charge $1.00, or 100 to\n                    charge ¥100, Japanese Yen being a 0-decimal currency).\n                  title: price\n                  oneOf:\n                    - type: integer\n                product:\n                  description: \u003e-\n                    The ID of the product that this SKU should belong to. The\n                    product must exist and have the same set of attribute names\n                    as the SKU's current product.\n                  title: product\n                  oneOf:\n                    - type: string\n  /v1/sources:\n    post:\n      description: \u003cp\u003eCreates a new source object.\u003c/p\u003e\n      operationId: CreateSource\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: \u003e-\n                    Amount associated with the source. This is the amount for\n                    which the source will be chargeable once ready. Required for\n                    `single_use` sources.\n                  title: amount\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: \u003e-\n                    Three-letter [ISO code for the\n                    currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n                    associated with the source. This is the currency for which\n                    the source will be chargeable once ready.\n                  title: currency\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                flow:\n                  description: \u003e-\n                    The authentication `flow` of the source to create. `flow` is\n                    one of `redirect`, `receiver`, `code_verification`, `none`.\n                    It is generally inferred unless a type supports multiple\n                    flows.\n                  title: flow\n                  oneOf:\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a source\n                    object. It can be useful for storing additional information\n                    about the source in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                owner:\n                  description: \u003e-\n                    Information about the owner of the payment instrument that\n                    may be used or required by particular source types.\n                  title: owner\n                  oneOf:\n                    - type: object\n                redirect:\n                  description: \u003e-\n                    Parameters required for the redirect flow. Required if the\n                    source is authenticated by a redirect (`flow` is\n                    `redirect`).\n                  title: redirect\n                  oneOf:\n                    - type: object\n                token:\n                  description: \u003e-\n                    An optional token used to create the source. When passed,\n                    token properties will override source parameters.\n                  title: token\n                  oneOf:\n                    - type: string\n                type:\n                  description: The `type` of the source to create.\n                  title: type\n                  oneOf:\n                    - type: string\n                usage:\n                  description: \u003e-\n                    Either `reusable` or `single_use`. Whether this source\n                    should be reusable or not. Some source types may or may not\n                    be reusable by construction, while other may leave the\n                    option at creation. If an incompatible value is passed, an\n                    error will be returned.\n                  title: usage\n                  oneOf:\n                    - type: string\n              required:\n                - type\n  '/v1/sources/{source}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves an existing source object. Supply the unique source ID from\n        a source creation request and Stripe will return the corresponding\n        up-to-date source object information.\u003c/p\u003e\n      operationId: RetrieveSource\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the source to be retrieved.\n          in: path\n          name: source\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The client secret of the source. Required if a publishable key is\n            used to retrieve the source.\n          in: query\n          name: client_secret\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specified source by setting the values of the parameters\n        passed. Any parameters not provided will be left unchanged.\u003c/p\u003e\u003cp\u003eThis\n        request accepts only the \u003ccode\u003emetadata\u003c/code\u003e and \u003ccode\u003eowner\u003c/code\u003e as\n        arguments.\u003c/p\u003e\n      operationId: SourceUpdate\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a source\n                    object. It can be useful for storing additional information\n                    about the source in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                owner:\n                  description: \u003e-\n                    Information about the owner of the payment instrument that\n                    may be used or required by particular source types.\n                  title: owner\n                  oneOf:\n                    - type: object\n  '/v1/sources/{source}/verify':\n    post:\n      description: ''\n      operationId: VerifySource\n      parameters:\n        - description: The ID of the desired source.\n          in: path\n          name: source\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/source'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                values:\n                  description: The values needed to verify the source.\n                  title: values\n                  oneOf:\n                    - type: array\n              required:\n                - values\n  /v1/subscription_items:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of your subscription items for a given\n        subscription.\u003c/p\u003e\n      operationId: AllSubscriptionItems\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the subscription whose items will be retrieved.\n          in: query\n          name: subscription\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/subscription_item'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/subscription_items\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eAdds a new item to an existing subscription. No existing items will\n        be changed or replaced.\u003c/p\u003e\n      operationId: CreateSubscriptionItem\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                plan:\n                  description: The identifier of the plan to add to the subscription.\n                  title: plan\n                  oneOf:\n                    - type: string\n                prorate:\n                  description: \u003e-\n                    Flag indicating whether to\n                    [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration)\n                    switching plans during a billing cycle.\n                  title: prorate\n                  oneOf:\n                    - type: boolean\n                proration_date:\n                  description: \u003e-\n                    If set, the proration will be calculated as though the\n                    subscription was updated at the given time. This can be used\n                    to apply the same proration that was previewed with the\n                    [upcoming invoice](#retrieve_customer_invoice) endpoint.\n                  title: proration_date\n                  oneOf:\n                    - type: integer\n                quantity:\n                  description: \u003e-\n                    The quantity you'd like to apply to the subscription item\n                    you're creating.\n                  title: quantity\n                  oneOf:\n                    - type: integer\n                subscription:\n                  description: The identifier of the subscription to modify.\n                  title: subscription\n                  oneOf:\n                    - type: string\n              required:\n                - plan\n                - subscription\n  '/v1/subscription_items/{item}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eDeletes an item from the subscription. Removing a subscription item\n        from a subscription will not cancel the subscription.\u003c/p\u003e\n      operationId: DeleteSubscriptionItem\n      parameters:\n        - description: The identifier of the subscription item to delete.\n          in: path\n          name: item\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                prorate:\n                  description: \u003e-\n                    Flag indicating whether to\n                    [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration)\n                    switching plans during a billing cycle.\n                  title: prorate\n                  oneOf:\n                    - type: boolean\n                proration_date:\n                  description: \u003e-\n                    If set, the proration will be calculated as though the\n                    subscription was updated at the given time. This can be used\n                    to apply the same proration that was previewed with the\n                    [upcoming invoice](#retrieve_customer_invoice) endpoint.\n                  title: proration_date\n                  oneOf:\n                    - type: integer\n    get:\n      description: \u003cp\u003eRetrieves the invoice item with the given ID.\u003c/p\u003e\n      operationId: RetrieveSubscriptionItem\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the subscription item to retrieve.\n          in: path\n          name: item\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the plan or quantity of an item on a current\n        subscription.\u003c/p\u003e\n      operationId: UpdateSubscriptionItem\n      parameters:\n        - description: The identifier of the subscription item to modify.\n          in: path\n          name: item\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription_item'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                plan:\n                  description: The identifier of the new plan for this subscription item.\n                  title: plan\n                  oneOf:\n                    - type: string\n                prorate:\n                  description: \u003e-\n                    Flag indicating whether to\n                    [prorate](/docs/subscriptions/upgrading-downgrading#understanding-proration)\n                    switching plans during a billing cycle.\n                  title: prorate\n                  oneOf:\n                    - type: boolean\n                proration_date:\n                  description: \u003e-\n                    If set, the proration will be calculated as though the\n                    subscription was updated at the given time. This can be used\n                    to apply the same proration that was previewed with the\n                    [upcoming invoice](#retrieve_customer_invoice) endpoint.\n                  title: proration_date\n                  oneOf:\n                    - type: integer\n                quantity:\n                  description: \u003e-\n                    The quantity you'd like to apply to the subscription item\n                    you're creating.\n                  title: quantity\n                  oneOf:\n                    - type: integer\n  /v1/subscriptions:\n    get:\n      description: \u003e-\n        \u003cp\u003eBy default, returns a list of subscriptions that have not been\n        canceled. In order to list canceled subscriptions, specify\n        \u003ccode\u003estatus=canceled\u003c/code\u003e.\u003c/p\u003e\n      operationId: AllSubscriptions\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the customer whose subscriptions will be retrieved.\n          in: query\n          name: customer\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: The ID of the plan whose subscriptions will be retrieved.\n          in: query\n          name: plan\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The status of the subscriptions to retrieve. One of: `trialing`,\n            `active`, `past_due`, `unpaid`, `canceled`, or `all`. Passing in a\n            value of `canceled` will return all canceled subscriptions,\n            including those belonging to deleted customers. Passing in a value\n            of `all` will return subscriptions of all statuses.\n          in: query\n          name: status\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/subscription'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/subscriptions\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003cp\u003eCreates a new subscription on an existing customer.\u003c/p\u003e\n      operationId: CreateSubscription\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                application_fee_percent:\n                  description: \u003e-\n                    A non-negative decimal (with at most two decimal places)\n                    between 0 and 100. This represents the percentage of the\n                    subscription invoice subtotal that will be transferred to\n                    the application owner's Stripe account. The request must be\n                    made with an OAuth key in order to set an application fee\n                    percentage. For more information, see the application fees\n                    [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions).\n                  title: application_fee_percent\n                  oneOf:\n                    - type: number\n                coupon:\n                  description: \u003e-\n                    The code of the coupon to apply to this subscription. A\n                    coupon applied to a subscription will only affect invoices\n                    created for that particular subscription.\n                  title: coupon\n                  oneOf:\n                    - type: string\n                customer:\n                  description: The identifier of the customer to subscribe.\n                  title: customer\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                items:\n                  description: 'List of subscription items, each with an attached plan.'\n                  title: items\n                  oneOf:\n                    - type: array\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a\n                    subscription object. It can be useful for storing additional\n                    information about the subscription in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\n                plan:\n                  description: The identifier of the plan to subscribe the customer to.\n                  title: plan\n                  oneOf:\n                    - type: string\n                quantity:\n                  description: \u003e-\n                    The quantity you'd like to apply to the subscription you're\n                    creating. For example, if your plan is\n                    \u003ccurrency\u003e10\u003c/currency\u003e/user/month, and your customer has 5\n                    users, you could pass 5 as the quantity to have the customer\n                    charged \u003ccurrency\u003e50\u003c/currency\u003e (5 x\n                    \u003ccurrency\u003e10\u003c/currency\u003e) monthly. If you update a\n                    subscription but don't change the plan ID (e.g. changing\n                    only the trial_end), the subscription will inherit the old\n                    subscription's quantity attribute unless you pass a new\n                    quantity parameter. If you update a subscription and change\n                    the plan ID, the new subscription will not inherit the\n                    quantity attribute and will default to 1 unless you pass a\n                    quantity parameter.\n                  title: quantity\n                  oneOf:\n                    - type: integer\n                source:\n                  description: \u003e-\n                    The source can either be a token, like the ones returned by\n                    [Elements](https://stripe.com/docs/elements), or a\n                    dictionary containing a user's credit card details (with the\n                    options shown below). You must provide a source if the\n                    customer does not already have a valid source attached, and\n                    you are subscribing the customer for a plan that is not\n                    free. Passing `source` will create a new source object, make\n                    it the customer default source, and delete the old customer\n                    default if one exists. If you want to add an additional\n                    source to use with subscriptions, instead use the [card\n                    creation API](https://stripe.com/docs/api#create_card) to\n                    add the card and then the [customer update\n                    API](https://stripe.com/docs/api#update customer) to set it\n                    as the default. Whenever you attach a card to a customer,\n                    Stripe will automatically validate the card.\n                  title: source\n                  oneOf:\n                    - type: object\n                    - type: string\n                tax_percent:\n                  description: \u003e-\n                    A non-negative decimal (with at most four decimal places)\n                    between 0 and 100. This represents the percentage of the\n                    subscription invoice subtotal that will be calculated and\n                    added as tax to the final amount each billing period. For\n                    example, a plan which charges $10/month with a `tax_percent`\n                    of 20.0 will charge $12 per invoice.\n                  title: tax_percent\n                  oneOf:\n                    - type: number\n                trial_end:\n                  description: \u003e-\n                    Unix timestamp representing the end of the trial period the\n                    customer will get before being charged for the first time.\n                    If set, trial_end will override the default trial period of\n                    the plan the customer is being subscribed to. The special\n                    value `now` can be provided to end the customer's trial\n                    immediately.\n                  title: trial_end\n                  oneOf:\n                    - type: integer\n                    - type: string\n                trial_period_days:\n                  description: \u003e-\n                    Integer representing the number of trial period days before\n                    the customer is charged for the first time. If set,\n                    `trial_period_days` overrides the default trial period days\n                    of the plan the customer is being subscribed to.\n                  title: trial_period_days\n                  oneOf:\n                    - type: integer\n              required:\n                - customer\n  '/v1/subscriptions/{subscription_exposed_id}':\n    delete:\n      description: \u003e-\n        \u003cp\u003eCancels a customer’s subscription. If you set the\n        \u003ccode\u003eat_period_end\u003c/code\u003e parameter to true, the subscription will\n        remain active until the end of the period, at which point it will be\n        canceled and not renewed. By default, the subscription is terminated\n        immediately. In either case, the customer will not be charged again for\n        the subscription. Note, however, that any pending invoice items that\n        you’ve created will still be charged for at the end of the period unless\n        manually \u003ca href=\"#delete_invoiceitem\"\u003edeleted\u003c/a\u003e. If you’ve set the\n        subscription to cancel at period end, any pending prorations will also\n        be left in place and collected at the end of the period, but if the\n        subscription is set to cancel immediately, pending prorations will be\n        removed.\u003c/p\u003e\u003cp\u003eBy default, all unpaid invoices for the customer will be\n        closed upon subscription cancellation. We do this in order to prevent\n        unexpected payment retries once the customer has canceled a\n        subscription. However, you can reopen the invoices manually after\n        subscription cancellation to have us proceed with automatic retries, or\n        you could even re-attempt payment yourself on all unpaid invoices before\n        allowing the customer to cancel the subscription at all.\u003c/p\u003e\n      operationId: DeleteCustomerSubscription\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload13'\n    get:\n      description: \u003cp\u003eRetrieves the subscription with the given ID.\u003c/p\u003e\n      operationId: RetrieveCustomerSubscription\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates an existing subscription on a customer to match the specified\n        parameters. When changing plans or quantities, we will optionally\n        prorate the price we charge next month to make up for any price changes.\n        To preview how the proration will be calculated, use the \u003ca\n        href=\"#upcoming_invoice\"\u003eupcoming invoice\u003c/a\u003e endpoint.\u003c/p\u003e\n      operationId: UpdateCustomerSubscription\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/subscription'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload14'\n  '/v1/subscriptions/{subscription_exposed_id}/discount':\n    delete:\n      description: \u003cp\u003eRemoves the currently applied discount on a customer.\u003c/p\u003e\n      operationId: DeleteCustomerDiscount\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/discount'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  /v1/tokens:\n    post:\n      description: ''\n      operationId: CreateBankAccountToken\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/token'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                bank_account:\n                  description: ''\n                  title: bank_account\n                  oneOf:\n                    - type: object\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                payment_user_agent:\n                  description: ''\n                  title: payment_user_agent\n                  oneOf:\n                    - type: string\n                request_id:\n                  description: ''\n                  title: request_id\n                  oneOf:\n                    - type: string\n  '/v1/tokens/{token}':\n    get:\n      description: \u003cp\u003eRetrieves the token with the given ID.\u003c/p\u003e\n      operationId: RetrieveToken\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The ID of the desired token.\n          in: path\n          name: token\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/token'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n  /v1/transfers:\n    get:\n      description: \u003e-\n        \u003cp\u003eReturns a list of existing transfers sent to connected accounts. The\n        transfers are returned in sorted order, with the most recently created\n        transfers appearing first.\u003c/p\u003e\n      operationId: AllTransfers\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: created\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            Only return transfers for the destination specified by this account\n            ID.\n          in: query\n          name: destination\n          required: false\n          schema:\n            type: string\n        - description: Only return transfers with the specified transfer group.\n          in: query\n          name: transfer_group\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/transfer'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    enum:\n                      - /v1/transfers\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: TransferList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateTransfer\n      parameters: []\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                currency:\n                  description: ''\n                  title: currency\n                  oneOf:\n                    - type: string\n                destination:\n                  description: ''\n                  title: destination\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                source_transaction:\n                  description: ''\n                  title: source_transaction\n                  oneOf:\n                    - type: string\n                source_type:\n                  description: ''\n                  title: source_type\n                  oneOf:\n                    - type: string\n                transfer_group:\n                  description: ''\n                  title: transfer_group\n                  oneOf:\n                    - type: string\n              required:\n                - amount\n                - currency\n                - destination\n  '/v1/transfers/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eRetrieves the details of an existing transfer. Supply the unique\n        transfer ID from either a transfer creation request or the transfer\n        list, and Stripe will return the corresponding transfer information.\u003c/p\u003e\n      operationId: RetrieveTransfer\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: The identifier of the transfer to be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: UpdateTransfer\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n  '/v1/transfers/{id}/cancel':\n    post:\n      description: ''\n      operationId: ReverseNonStripeTransferOnSlashCancel\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/legacy_transfer'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        $ref: '#/components/requestBodies/payload3'\n  '/v1/transfers/{id}/reversals':\n    get:\n      description: \u003e-\n        \u003cp\u003eYou can see a list of the reversals belonging to a specific transfer.\n        Note that the 10 most recent reversals are always available by default\n        on the transfer object. If you need more than those 10, you can use this\n        API method and the \u003ccode\u003elimit\u003c/code\u003e and \u003ccode\u003estarting_after\u003c/code\u003e\n        parameters to page through additional reversals.\u003c/p\u003e\n      operationId: AllTransferReversals\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A limit on the number of objects to be returned. Limit can range\n            between 1 and 100 items.\n          in: query\n          name: limit\n          required: false\n          schema:\n            type: integer\n        - description: \u003e-\n            A cursor for use in pagination. `starting_after` is an object ID\n            that defines your place in the list. For instance, if you make a\n            list request and receive 100 objects, ending with `obj_foo`, your\n            subsequent call can include `starting_after=obj_foo` in order to\n            fetch the next page of the list.\n          in: query\n          name: starting_after\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A cursor for use in pagination. `ending_before` is an object ID that\n            defines your place in the list. For instance, if you make a list\n            request and receive 100 objects, starting with `obj_bar`, your\n            subsequent call can include `ending_before=obj_bar` in order to\n            fetch the previous page of the list.\n          in: query\n          name: ending_before\n          required: false\n          schema:\n            type: string\n        - description: The ID of the transfer whose reversals will be retrieved.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    oneOf:\n                      - type: array\n                        items:\n                          $ref: '#/components/schemas/transfer_reversal'\n                  has_more:\n                    description: \u003e-\n                      True if this list has another page of items after this one\n                      that can be fetched.\n                    oneOf:\n                      - type: boolean\n                  object:\n                    description: \u003e-\n                      String representing the object's type. Objects of the same\n                      type share the same value. Always has the value \"list\".\n                    enum:\n                      - list\n                    oneOf:\n                      - type: string\n                  total_count:\n                    description: \u003e-\n                      The total number of items available. This value is not\n                      included by default, but you can request it by specifying\n                      ?include[]=total_count.\n                    oneOf:\n                      - type: integer\n                  url:\n                    description: The URL where this list can be accessed.\n                    oneOf:\n                      - type: string\n                required:\n                  - data\n                  - has_more\n                  - object\n                  - url\n                title: TransferReversalList\n                x-expandableFields: []\n                oneOf:\n                  - type: object\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: ''\n      operationId: CreateStripeAccountTransferReversal\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_reversal'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                amount:\n                  description: ''\n                  title: amount\n                  oneOf:\n                    - type: integer\n                description:\n                  description: ''\n                  title: description\n                  oneOf:\n                    - type: string\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: ''\n                  title: metadata\n                  oneOf:\n                    - type: object\n                refund_application_fee:\n                  description: ''\n                  title: refund_application_fee\n                  oneOf:\n                    - type: boolean\n  '/v1/transfers/{transfer}/reversals/{id}':\n    get:\n      description: \u003e-\n        \u003cp\u003eBy default, you can see the 10 most recent reversals stored directly\n        on the transfer object, but you can also retrieve details about a\n        specific reversal stored on the transfer.\u003c/p\u003e\n      operationId: RetrieveTransferReversal\n      parameters:\n        - description: Specifies which fields in the response should be expanded.\n          in: query\n          name: expand\n          required: false\n          schema:\n            type: string\n        - description: ID of the transfer reversed.\n          in: path\n          name: transfer\n          required: true\n          schema:\n            type: string\n        - description: ID of reversal to retrieve.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_reversal'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n    post:\n      description: \u003e-\n        \u003cp\u003eUpdates the specified reversal by setting the values of the\n        parameters passed. Any parameters not provided will be left\n        unchanged.\u003c/p\u003e\u003cp\u003eThis request only accepts metadata and description as\n        arguments.\u003c/p\u003e\n      operationId: UpdateTransferReversal\n      parameters:\n        - description: ''\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: path\n          name: transfer\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successful response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/transfer_reversal'\n        default:\n          description: Error response.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/error'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            description: Body parameters for the request.\n            schema:\n              properties:\n                expand:\n                  description: Specifies which fields in the response should be expanded.\n                  title: expand\n                  oneOf:\n                    - type: array\n                      items:\n                        oneOf:\n                          - type: string\n                    - type: string\n                metadata:\n                  description: \u003e-\n                    A set of key/value pairs that you can attach to a reversal\n                    object. It can be useful for storing additional information\n                    about the reversal in a structured format.\n                  title: metadata\n                  oneOf:\n                    - type: object\ncomponents:\n  schemas:\n    account:\n      properties:\n        business_name:\n          description: The publicly visible name of the business.\n          oneOf:\n            - type: string\n        business_url:\n          description: The publicly visible website of the business.\n          oneOf:\n            - type: string\n        charges_enabled:\n          description: Whether or not the account can create live charges.\n          oneOf:\n            - type: boolean\n        country:\n          description: The country of the account.\n          oneOf:\n            - type: string\n        debit_negative_balances:\n          description: \u003e-\n            Whether or not Stripe will attempt to reclaim negative account\n            balances from this account's bank account.\n          oneOf:\n            - type: boolean\n        decline_charge_on:\n          $ref: '#/components/schemas/account_decline_charge_on'\n        default_currency:\n          description: The currency this account has chosen to use as the default.\n          oneOf:\n            - type: string\n        details_submitted:\n          description: \u003e-\n            Whether or not account details have been submitted yet. Standalone\n            accounts cannot receive transfers before this is true.\n          oneOf:\n            - type: boolean\n        display_name:\n          description: \u003e-\n            The display name for this account. This is used on the Stripe\n            dashboard to help you differentiate between accounts.\n          oneOf:\n            - type: string\n        email:\n          description: The primary user's email address.\n          oneOf:\n            - type: string\n        external_accounts:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/bank_account'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: ExternalAccountList\n          x-expandableFields:\n            - data\n          oneOf:\n            - type: object\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        legal_entity:\n          $ref: '#/components/schemas/legal_entity'\n        managed:\n          description: \u003e-\n            Whether or not the account is\n            [managed](/docs/connect/managed-accounts) by your platform. Returns\n            null if the account was not created by a platform.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        payout_schedule:\n          $ref: '#/components/schemas/transfer_schedule'\n        payout_statement_descriptor:\n          description: \u003e-\n            The text that will appear on the account's bank account statement\n            for payouts. If not set, this will default to your platform's bank\n            descriptor set on the Dashboard.\n          oneOf:\n            - type: string\n        payouts_enabled:\n          description: \u003e-\n            Whether or not Stripe will send automatic transfers for this\n            account. This is only false when Stripe is waiting for additional\n            information from the account holder.\n          oneOf:\n            - type: boolean\n        product_description:\n          description: \u003e-\n            An internal-only description of the product or service provided.\n            This is used by Stripe in the event the account gets flagged for\n            potential fraud.\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: The text that will appear on credit card statements.\n          oneOf:\n            - type: string\n        support_email:\n          description: \u003e-\n            A publicly shareable email address that can be reached for support\n            for this account.\n          oneOf:\n            - type: string\n        support_phone:\n          description: The publicly visible support phone number for the business.\n          oneOf:\n            - type: string\n        timezone:\n          description: \u003e-\n            The time zone used in the Stripe dashboard for this account. A list\n            of possible time zone values is maintained at the [IANA Time Zone\n            Database](http://www.iana.org/time-zones).\n          oneOf:\n            - type: string\n        tos_acceptance:\n          $ref: '#/components/schemas/account_tos_acceptance'\n        verification:\n          $ref: '#/components/schemas/account_verification'\n      required:\n        - charges_enabled\n        - country\n        - debit_negative_balances\n        - decline_charge_on\n        - default_currency\n        - details_submitted\n        - external_accounts\n        - id\n        - legal_entity\n        - managed\n        - object\n        - payout_schedule\n        - payouts_enabled\n        - tos_acceptance\n        - verification\n      title: Account\n      x-expandableFields: []\n      x-resourceId: account\n      oneOf:\n        - type: object\n    account_debit_account:\n      properties:\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - id\n        - object\n      title: AccountDebitAccount\n      x-expandableFields: []\n      x-resourceId: account_debit_account\n      oneOf:\n        - type: object\n    account_decline_charge_on:\n      properties:\n        avs_failure:\n          description: \u003e-\n            Whether or not Stripe should automatically decline charges with an\n            incorrect zip/postal code. This setting only applies if a card\n            includes a zip code and the bank specifically marks it as failed.\n          oneOf:\n            - type: boolean\n        cvc_failure:\n          description: \u003e-\n            Whether or not Stripe should automatically decline charges with an\n            incorrect CVC. This setting only applies if a card includes a CVC\n            and the bank specifically marks it as failed.\n          oneOf:\n            - type: boolean\n      required:\n        - avs_failure\n        - cvc_failure\n      title: AccountDeclineChargeOn\n      x-expandableFields: []\n      x-resourceId: account_decline_charge_on\n      oneOf:\n        - type: object\n    account_tos_acceptance:\n      properties:\n        date:\n          description: The timestamp when the account owner accepted Stripe's terms.\n          oneOf:\n            - type: integer\n        ip:\n          description: The IP address from which the account owner accepted Stripe's terms.\n          oneOf:\n            - type: string\n        user_agent:\n          description: \u003e-\n            The user agent of the browser from which the user accepted Stripe's\n            terms.\n          oneOf:\n            - type: string\n      title: AccountTOSAcceptance\n      x-expandableFields: []\n      x-resourceId: account_tos_acceptance\n      oneOf:\n        - type: object\n    account_verification:\n      properties:\n        disabled_reason:\n          description: \u003e-\n            A string describing the reason for this account being unable to\n            charge and/or transfer, if that is the case. Possible values are\n            `rejected.fraud`, `rejected.terms_of_service`, `rejected.listed`,\n            `rejected.other`, `fields_needed`, `listed`, or `other`.\n          oneOf:\n            - type: string\n        due_by:\n          description: \u003e-\n            At what time the `fields_needed` must be provided. If this date is\n            in the past, the account is already in bad standing, and providing\n            `fields_needed` is necessary to re-enable transfers and prevent\n            other consequences. If this date is in the future, `fields_needed`\n            must be provided to ensure the account remains in good standing.\n          oneOf:\n            - type: integer\n        fields_needed:\n          description: \u003e-\n            Field names that need to be provided for the account to remain in\n            good standing. Nested fields are separated by \".\" (for example,\n            \"legal_entity.first_name\").\n          oneOf:\n            - type: array\n      required:\n        - fields_needed\n      title: AccountVerification\n      x-expandableFields: []\n      x-resourceId: account_verification\n      oneOf:\n        - type: object\n    account_with_keys:\n      properties:\n        business_name:\n          description: The publicly visible name of the business.\n          oneOf:\n            - type: string\n        business_url:\n          description: The publicly visible website of the business.\n          oneOf:\n            - type: string\n        charges_enabled:\n          description: Whether or not the account can create live charges.\n          oneOf:\n            - type: boolean\n        country:\n          description: The country of the account.\n          oneOf:\n            - type: string\n        debit_negative_balances:\n          description: \u003e-\n            Whether or not Stripe will attempt to reclaim negative account\n            balances from this account's bank account.\n          oneOf:\n            - type: boolean\n        decline_charge_on:\n          $ref: '#/components/schemas/account_decline_charge_on'\n        default_currency:\n          description: The currency this account has chosen to use as the default.\n          oneOf:\n            - type: string\n        details_submitted:\n          description: \u003e-\n            Whether or not account details have been submitted yet. Standalone\n            accounts cannot receive transfers before this is true.\n          oneOf:\n            - type: boolean\n        display_name:\n          description: \u003e-\n            The display name for this account. This is used on the Stripe\n            dashboard to help you differentiate between accounts.\n          oneOf:\n            - type: string\n        email:\n          description: The primary user's email address.\n          oneOf:\n            - type: string\n        external_accounts:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/bank_account'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: ExternalAccountList\n          x-expandableFields:\n            - data\n          oneOf:\n            - type: object\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        keys:\n          description: ''\n          oneOf:\n            - type: object\n        legal_entity:\n          $ref: '#/components/schemas/legal_entity'\n        managed:\n          description: \u003e-\n            Whether or not the account is\n            [managed](/docs/connect/managed-accounts) by your platform. Returns\n            null if the account was not created by a platform.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        payout_schedule:\n          $ref: '#/components/schemas/transfer_schedule'\n        payout_statement_descriptor:\n          description: \u003e-\n            The text that will appear on the account's bank account statement\n            for payouts. If not set, this will default to your platform's bank\n            descriptor set on the Dashboard.\n          oneOf:\n            - type: string\n        payouts_enabled:\n          description: \u003e-\n            Whether or not Stripe will send automatic transfers for this\n            account. This is only false when Stripe is waiting for additional\n            information from the account holder.\n          oneOf:\n            - type: boolean\n        product_description:\n          description: \u003e-\n            An internal-only description of the product or service provided.\n            This is used by Stripe in the event the account gets flagged for\n            potential fraud.\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: The text that will appear on credit card statements.\n          oneOf:\n            - type: string\n        support_email:\n          description: \u003e-\n            A publicly shareable email address that can be reached for support\n            for this account.\n          oneOf:\n            - type: string\n        support_phone:\n          description: The publicly visible support phone number for the business.\n          oneOf:\n            - type: string\n        timezone:\n          description: \u003e-\n            The time zone used in the Stripe dashboard for this account. A list\n            of possible time zone values is maintained at the [IANA Time Zone\n            Database](http://www.iana.org/time-zones).\n          oneOf:\n            - type: string\n        tos_acceptance:\n          $ref: '#/components/schemas/account_tos_acceptance'\n        verification:\n          $ref: '#/components/schemas/account_verification'\n      required:\n        - charges_enabled\n        - country\n        - debit_negative_balances\n        - decline_charge_on\n        - default_currency\n        - details_submitted\n        - external_accounts\n        - id\n        - keys\n        - legal_entity\n        - managed\n        - object\n        - payout_schedule\n        - payouts_enabled\n        - tos_acceptance\n        - verification\n      title: AccountWithKeys\n      x-expandableFields: []\n      x-resourceId: account_with_keys\n      oneOf:\n        - type: object\n    address:\n      properties:\n        city:\n          description: City/District/Suburb/Town/Village.\n          oneOf:\n            - type: string\n        country:\n          description: 2-letter country code.\n          oneOf:\n            - type: string\n        line1:\n          description: Address line 1 (Street address/PO Box/Company name).\n          oneOf:\n            - type: string\n        line2:\n          description: Address line 2 (Apartment/Suite/Unit/Building).\n          oneOf:\n            - type: string\n        postal_code:\n          description: Zip/Postal Code.\n          oneOf:\n            - type: string\n        state:\n          description: State/County/Province/Region.\n          oneOf:\n            - type: string\n      title: Address\n      x-expandableFields: []\n      x-resourceId: address\n      oneOf:\n        - type: object\n    alipay_account:\n      properties:\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        fingerprint:\n          description: \u003e-\n            Uniquely identifies the account and will be the same across all\n            Alipay account objects that are linked to the same Alipay account.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        payment_amount:\n          description: \u003e-\n            If the Alipay account object is not reusable, the exact amount that\n            you can create a charge for.\n          oneOf:\n            - type: integer\n        payment_currency:\n          description: \u003e-\n            If the Alipay account object is not reusable, the exact currency\n            that you can create a charge for.\n          oneOf:\n            - type: string\n        reusable:\n          description: \u003e-\n            True if you can create multiple payments using this account. If the\n            account is reusable, then you can freely choose the amount of each\n            payment.\n          oneOf:\n            - type: boolean\n        used:\n          description: Whether this Alipay account object has ever been used for a payment.\n          oneOf:\n            - type: boolean\n        username:\n          description: The username for the Alipay account.\n          oneOf:\n            - type: string\n      required:\n        - created\n        - fingerprint\n        - id\n        - livemode\n        - metadata\n        - object\n        - reusable\n        - used\n        - username\n      title: AlipayAccount\n      x-expandableFields:\n        - customer\n      x-resourceId: alipay_account\n      oneOf:\n        - type: object\n    apple_pay_domain:\n      properties:\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        domain_name:\n          description: ''\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - created\n        - domain_name\n        - id\n        - livemode\n        - object\n      title: ApplePayDomain\n      x-expandableFields: []\n      x-resourceId: apple_pay_domain\n      oneOf:\n        - type: object\n    application:\n      properties:\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        name:\n          description: The name of the application.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - id\n        - object\n      title: Application\n      x-expandableFields: []\n      x-resourceId: application\n      oneOf:\n        - type: object\n    authorization:\n      properties:\n        amount:\n          description: ''\n          oneOf:\n            - type: integer\n        balance_transactions:\n          oneOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/balance_transaction'\n        card:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/issued_card'\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        held_amount:\n          description: ''\n          oneOf:\n            - type: integer\n        held_currency:\n          description: ''\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        merchant_data:\n          $ref: '#/components/schemas/merchant_data'\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - balance_transactions\n        - card\n        - currency\n        - held_amount\n        - held_currency\n        - id\n        - merchant_data\n        - metadata\n        - object\n      title: Authorization\n      x-expandableFields:\n        - card\n      x-resourceId: authorization\n      oneOf:\n        - type: object\n    backwards_compatible_platform_earning:\n      properties:\n        account:\n          description: ID of the Stripe account this fee was taken from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        amount:\n          description: 'Amount earned, in %s.'\n          oneOf:\n            - type: integer\n        amount_refunded:\n          description: \u003e-\n            Amount in %s refunded (can be less than the amount attribute on the\n            fee if a partial refund was issued)\n          oneOf:\n            - type: integer\n        application:\n          description: ID of the Connect application that earned the fee.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/application'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact of this collected\n            application fee on your account balance (not including refunds).\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        charge:\n          description: ID of the charge that the application fee was taken from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        originating_transaction:\n          description: \u003e-\n            ID of the corresponding charge on the platform account, if this fee\n            was the result of a charge using the `destination` parameter.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n              - $ref: '#/components/schemas/transfer'\n          oneOf:\n            - type: string\n        refunded:\n          description: \u003e-\n            Whether or not the fee has been fully refunded. If the fee is only\n            partially refunded, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        refunds:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/fee_refund'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: FeeRefundList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n      required:\n        - account\n        - amount\n        - amount_refunded\n        - application\n        - balance_transaction\n        - charge\n        - created\n        - currency\n        - id\n        - livemode\n        - object\n        - refunded\n        - refunds\n      title: BackwardsCompatiblePlatformEarning\n      x-expandableFields:\n        - account\n        - application\n        - balance_transaction\n        - charge\n        - originating_transaction\n      x-resourceId: backwards_compatible_platform_earning\n      oneOf:\n        - type: object\n    balance:\n      properties:\n        available:\n          description: \u003e-\n            Funds that are available to be paid out automatically by Stripe or\n            explicitly via the [transfers API](#transfers). The available\n            balance for each currency and payment type can be found in the\n            `source_types` property.\n          oneOf:\n            - type: array\n        connect_reserved:\n          description: \u003e-\n            Funds held due to negative balances on connected Managed Accounts.\n            The connect reserve balance for each currency and payment type can\n            be found in the `source_types` property.\n          oneOf:\n            - type: array\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        pending:\n          description: \u003e-\n            Funds that are not available in the balance yet, due to the 7-day\n            rolling pay cycle. The pending balance for each currency and payment\n            type can be found in the `source_types` property.\n          oneOf:\n            - type: array\n      required:\n        - available\n        - livemode\n        - object\n        - pending\n      title: Balance\n      x-expandableFields: []\n      x-resourceId: balance\n      oneOf:\n        - type: object\n    balance_transaction:\n      properties:\n        amount:\n          description: 'Gross amount of the transaction, in %s.'\n          oneOf:\n            - type: integer\n        available_on:\n          description: \u003e-\n            The date the transaction's net funds will become available in the\n            Stripe balance.\n          oneOf:\n            - type: integer\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        fee:\n          description: Fees (in %s) paid for this transaction.\n          oneOf:\n            - type: integer\n        fee_details:\n          oneOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/fee'\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        net:\n          description: 'Net amount of the transaction, in %s.'\n          oneOf:\n            - type: integer\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        source:\n          description: The Stripe object this transaction is related to.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/bitcoin_transaction'\n              - $ref: '#/components/schemas/charge'\n              - $ref: '#/components/schemas/dispute'\n              - $ref: '#/components/schemas/fee_refund'\n              - $ref: '#/components/schemas/authorization'\n              - $ref: '#/components/schemas/transaction'\n              - $ref: '#/components/schemas/legacy_transfer'\n              - $ref: '#/components/schemas/payout'\n              - $ref: '#/components/schemas/platform_fee'\n              - $ref: '#/components/schemas/refund'\n              - $ref: '#/components/schemas/reserve_transaction'\n              - $ref: '#/components/schemas/transfer'\n              - $ref: '#/components/schemas/transfer_recipient_transfer'\n              - $ref: '#/components/schemas/transfer_reversal'\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            If the transaction's net funds are available in the Stripe balance\n            yet. Either `available` or `pending`.\n          oneOf:\n            - type: string\n        type:\n          description: \u003e-\n            Transaction type: `adjustment`, `application_fee`,\n            `application_fee_refund`, `charge`, `payment`,\n            `payment_failure_refund`, `payment_refund`, `refund`, `transfer`,\n            `transfer_refund`, `payout`, `payout_cancel`, `payout_failure`, or\n            `validation`.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - available_on\n        - created\n        - currency\n        - fee\n        - fee_details\n        - id\n        - net\n        - object\n        - status\n        - type\n      title: BalanceTransaction\n      x-expandableFields:\n        - source\n      x-resourceId: balance_transaction\n      oneOf:\n        - type: object\n    bank_account:\n      properties:\n        account:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        account_holder_name:\n          description: The name of the person or business that owns the bank account.\n          oneOf:\n            - type: string\n        account_holder_type:\n          description: \u003e-\n            The type of entity that holds the account. This can be either\n            `individual` or `company`.\n          oneOf:\n            - type: string\n        bank_name:\n          description: \u003e-\n            Name of the bank associated with the routing number, e.g. `WELLS\n            FARGO`.\n          oneOf:\n            - type: string\n        country:\n          description: \u003e-\n            Two-letter ISO code representing the country the bank account is\n            located in.\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            paid out to the bank account.\n          oneOf:\n            - type: string\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        default_for_currency:\n          description: \u003e-\n            Whether this external account is the default account for its\n            currency.\n          oneOf:\n            - type: boolean\n        fingerprint:\n          description: \u003e-\n            Uniquely identifies this particular bank account. You can use this\n            attribute to check whether two bank accounts are the same.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        last4:\n          description: ''\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        routing_number:\n          description: The routing transit number for the bank account.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Possible values are `new`, `validated`, `verified`,\n            `verification_failed`, or `errored`. A bank account that hasn't had\n            any activity or validation performed is `new`. If Stripe can\n            determine that the bank account exists, its status will be\n            `validated`. Note that there often isn’t enough information to know\n            (e.g. for smaller credit unions), and the validation is not always\n            run. If customer bank account verification has succeeded, the bank\n            account status will be `verified`. If the verification failed for\n            any reason, such as microdeposit failure, the status will be\n            `verification_failed`. If a transfer sent to this bank account\n            fails, we'll set the status to `errored` and will not continue to\n            send transfers until the bank details are updated.\n          oneOf:\n            - type: string\n      required:\n        - country\n        - currency\n        - id\n        - last4\n        - object\n        - status\n      title: BankAccount\n      x-expandableFields:\n        - account\n        - customer\n      x-resourceId: bank_account\n      oneOf:\n        - type: object\n    bitcoin_receiver:\n      properties:\n        active:\n          description: \u003e-\n            True when this bitcoin receiver has received a non-zero amount of\n            bitcoin.\n          oneOf:\n            - type: boolean\n        amount:\n          description: The amount of `currency` that you are collecting as payment.\n          oneOf:\n            - type: integer\n        amount_received:\n          description: \u003e-\n            The amount of `currency` to which `bitcoin_amount_received` has been\n            converted.\n          oneOf:\n            - type: integer\n        bitcoin_amount:\n          description: \u003e-\n            The amount of bitcoin that the customer should send to fill the\n            receiver. The `bitcoin_amount` is denominated in Satoshi: there are\n            10^8 Satoshi in one bitcoin.\n          oneOf:\n            - type: integer\n        bitcoin_amount_received:\n          description: \u003e-\n            The amount of bitcoin that has been sent by the customer to this\n            receiver.\n          oneOf:\n            - type: integer\n        bitcoin_uri:\n          description: \u003e-\n            This URI can be displayed to the customer as a clickable link (to\n            activate their bitcoin client) or as a QR code (for mobile wallets).\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            to which the bitcoin will be converted.\n          oneOf:\n            - type: string\n        customer:\n          description: ''\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        email:\n          description: \u003e-\n            The customer's email address, set by the API call that creates the\n            receiver.\n          oneOf:\n            - type: string\n        filled:\n          description: \u003e-\n            This flag is initially false and updates to true when the customer\n            sends the `bitcoin_amount` to this receiver.\n          oneOf:\n            - type: boolean\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        inbound_address:\n          description: \u003e-\n            A bitcoin address that is specific to this receiver. The customer\n            can send bitcoin to this address to fill the receiver.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        payment:\n          description: \u003e-\n            The ID of the payment created from the receiver, if any. Hidden when\n            viewing the receiver with a publishable key.\n          oneOf:\n            - type: string\n        refund_address:\n          description: ''\n          oneOf:\n            - type: string\n        transactions:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/bitcoin_transaction'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: BitcoinTransactionList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        uncaptured_funds:\n          description: \u003e-\n            This receiver contains uncaptured funds that can be used for a\n            payment or refunded.\n          oneOf:\n            - type: boolean\n        used_for_payment:\n          description: ''\n          oneOf:\n            - type: boolean\n      required:\n        - active\n        - amount\n        - amount_received\n        - bitcoin_amount\n        - bitcoin_amount_received\n        - bitcoin_uri\n        - created\n        - currency\n        - filled\n        - id\n        - inbound_address\n        - livemode\n        - metadata\n        - object\n        - transactions\n        - uncaptured_funds\n      title: BitcoinReceiver\n      x-expandableFields: []\n      x-resourceId: bitcoin_receiver\n      oneOf:\n        - type: object\n    bitcoin_transaction:\n      properties:\n        amount:\n          description: \u003e-\n            The amount of `currency` that the transaction was converted to in\n            real-time.\n          oneOf:\n            - type: integer\n        bitcoin_amount:\n          description: The amount of bitcoin contained in the transaction.\n          oneOf:\n            - type: integer\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            to which this transaction was converted.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        receiver:\n          description: The receiver to which this transaction was sent.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - bitcoin_amount\n        - created\n        - currency\n        - id\n        - object\n        - receiver\n      title: BitcoinTransaction\n      x-expandableFields: []\n      x-resourceId: bitcoin_transaction\n      oneOf:\n        - type: object\n    card:\n      properties:\n        account:\n          description: \u003e-\n            The account this card belongs to. This attribute will not be in the\n            card object if the card belongs to a customer or recipient instead.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        address_city:\n          description: City/District/Suburb/Town/Village.\n          oneOf:\n            - type: string\n        address_country:\n          description: 'Billing address country, if provided when creating card.'\n          oneOf:\n            - type: string\n        address_line1:\n          description: Address line 1 (Street address/PO Box/Company name).\n          oneOf:\n            - type: string\n        address_line1_check:\n          description: \u003e-\n            If `address_line1` was provided, results of the check: `pass`,\n            `fail`, `unavailable`, or `unchecked`.\n          oneOf:\n            - type: string\n        address_line2:\n          description: Address line 2 (Apartment/Suite/Unit/Building).\n          oneOf:\n            - type: string\n        address_state:\n          description: State/County/Province/Region.\n          oneOf:\n            - type: string\n        address_zip:\n          description: Zip/Postal Code.\n          oneOf:\n            - type: string\n        address_zip_check:\n          description: \u003e-\n            If `address_zip` was provided, results of the check: `pass`, `fail`,\n            `unavailable`, or `unchecked`.\n          oneOf:\n            - type: string\n        available_payout_methods:\n          description: \u003e-\n            A set of available payout methods for this card. Will be either\n            `[\"standard\"]` or `[\"standard\", \"instant\"]`. Only values from this\n            set should be passed as the `method` when creating a transfer.\n          oneOf:\n            - type: array\n        brand:\n          description: \u003e-\n            Card brand. Can be `Visa`, `American Express`, `MasterCard`,\n            `Discover`, `JCB`, `Diners Club`, or `Unknown`.\n          oneOf:\n            - type: string\n        country:\n          description: \u003e-\n            Two-letter ISO code representing the country of the card. You could\n            use this attribute to get a sense of the international breakdown of\n            cards you've collected.\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n            Only applicable on accounts (not customers or recipients). The card\n            can be used as a transfer destination for funds in this currency.\n          oneOf:\n            - type: string\n        customer:\n          description: \u003e-\n            The customer that this card belongs to. This attribute will not be\n            in the card object if the card belongs to an account or recipient\n            instead.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        cvc_check:\n          description: \u003e-\n            If a CVC was provided, results of the check: `pass`, `fail`,\n            `unavailable`, or `unchecked`.\n          oneOf:\n            - type: string\n        default_for_currency:\n          description: \u003e-\n            Only applicable on accounts (not customers or recipients). This\n            indicates whether or not this card is the default external account\n            for its currency.\n          oneOf:\n            - type: boolean\n        dynamic_last4:\n          description: \u003e-\n            (For tokenized numbers only.) The last four digits of the device\n            account number.\n          oneOf:\n            - type: string\n        exp_month:\n          description: Two digit number representing the card's expiration month.\n          oneOf:\n            - type: integer\n        exp_year:\n          description: Four digit number representing the card's expiration year.\n          oneOf:\n            - type: integer\n        fingerprint:\n          description: \u003e-\n            Uniquely identifies this particular card number. You can use this\n            attribute to check whether two customers who've signed up with you\n            are using the same card number, for example.\n          oneOf:\n            - type: string\n        funding:\n          description: \u003e-\n            Card funding type. Can be `credit`, `debit`, `prepaid`, or\n            `unknown`.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        last4:\n          description: The last 4 digits of the card.\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        name:\n          description: Cardholder name.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        recipient:\n          description: \u003e-\n            The recipient that this card belongs to. This attribute will not be\n            in the card object if the card belongs to a customer or account\n            instead.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/transfer_recipient'\n          oneOf:\n            - type: string\n        tokenization_method:\n          description: \u003e-\n            If the card number is tokenized, this is the method that was used.\n            Can be `apple_pay` or `android_pay`.\n          oneOf:\n            - type: string\n      required:\n        - brand\n        - exp_month\n        - exp_year\n        - funding\n        - id\n        - last4\n        - metadata\n        - object\n      title: Card\n      x-expandableFields:\n        - account\n        - customer\n        - recipient\n      x-resourceId: card\n      oneOf:\n        - type: object\n    charge:\n      properties:\n        amount:\n          description: \u003e-\n            A positive integer in the [smallest currency\n            unit](https://support.stripe.com/questions/which-zero-decimal-currencies-does-stripe-support)\n            (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a 0-decimal\n            currency) representing how much to charge. The minimum amount is\n            $0.50 US or [equivalent in charge\n            currency](https://support.stripe.com/questions/what-is-the-minimum-amount-i-can-charge-with-stripe).\n          oneOf:\n            - type: integer\n        amount_refunded:\n          description: \u003e-\n            Amount in %s refunded (can be less than the amount attribute on the\n            charge if a partial refund was issued).\n          oneOf:\n            - type: integer\n        application:\n          description: ID of the Connect application that created the charge.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/application'\n          oneOf:\n            - type: string\n        application_fee:\n          description: \u003e-\n            The application fee (if any) for the charge. [See the Connect\n            documentation](/docs/connect/direct-charges#collecting-fees) for\n            details.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/backwards_compatible_platform_earning'\n              - $ref: '#/components/schemas/platform_fee'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: \u003e-\n            ID of the balance transaction that describes the impact of this\n            charge on your account balance (not including refunds or disputes).\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        captured:\n          description: \u003e-\n            If the charge was created without capturing, this boolean represents\n            whether or not it is still uncaptured or has since been captured.\n          oneOf:\n            - type: boolean\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        customer:\n          description: ID of the customer this charge is for if one exists.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        destination:\n          description: \u003e-\n            The account (if any) the charge was made on behalf of, with an\n            automatic transfer. [See the Connect\n            documentation](/docs/connect/destination-charges) for details.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        dispute:\n          description: Details about the dispute if the charge has been disputed.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/dispute'\n          oneOf:\n            - type: string\n        failure_code:\n          description: \u003e-\n            Error code explaining reason for charge failure if available (see\n            [the errors section](/docs/api#errors) for a list of codes).\n          oneOf:\n            - type: string\n        failure_message:\n          description: \u003e-\n            Message to user further explaining reason for charge failure if\n            available.\n          oneOf:\n            - type: string\n        fraud_details:\n          description: \u003e-\n            Hash with information on fraud assessments for the charge.\n            Assessments reported by you have the key `user_report` and, if set,\n            possible values of `safe` and `fraudulent`. Assessments from Stripe\n            have the key `stripe_report` and, if set, the value `fraudulent`.\n          oneOf:\n            - type: object\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        invoice:\n          description: ID of the invoice this charge is for if one exists.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/invoice'\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        on_behalf_of:\n          description: \u003e-\n            The account (if any) the charge was made on behalf of without\n            triggering an automatic transfer. See the [Connect\n            documentation](/docs/connect/charges-transfers) for details.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        order:\n          description: ID of the order this charge is for if one exists.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/order'\n          oneOf:\n            - type: string\n        outcome:\n          $ref: '#/components/schemas/charge_outcome'\n        paid:\n          description: \u003e-\n            `true` if the charge succeeded, or was successfully authorized for\n            later capture.\n          oneOf:\n            - type: boolean\n        receipt_email:\n          description: \u003e-\n            This is the email address that the receipt for this charge was sent\n            to.\n          oneOf:\n            - type: string\n        receipt_number:\n          description: \u003e-\n            This is the transaction number that appears on email receipts sent\n            for this charge.\n          oneOf:\n            - type: string\n        refunded:\n          description: \u003e-\n            Whether or not the charge has been fully refunded. If the charge is\n            only partially refunded, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        refunds:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/refund'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: RefundList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        review:\n          description: ID of the review associated with this charge if one exists.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/review'\n          oneOf:\n            - type: string\n        shipping:\n          $ref: '#/components/schemas/shipping'\n        source_transfer:\n          description: \u003e-\n            The transfer ID which created this charge. Only present if the\n            charge came from another Stripe account. [See the Connect\n            documentation](/docs/connect/destination-charges) for details.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/transfer'\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: \u003e-\n            Extra information about a charge. This will appear on your\n            customer's credit card statement.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            The status of the payment is either `succeeded`, `pending`, or\n            `failed`.\n          oneOf:\n            - type: string\n        transfer:\n          description: \u003e-\n            ID of the transfer to the `destination` account (only applicable if\n            the charge was created using the `destination` parameter).\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/transfer'\n          oneOf:\n            - type: string\n        transfer_group:\n          description: \u003e-\n            A string that identifies this transaction as part of a group. See\n            the [Connect\n            documentation](/docs/connect/charges-transfers#grouping-transactions)\n            for details.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - amount_refunded\n        - captured\n        - created\n        - currency\n        - id\n        - livemode\n        - metadata\n        - object\n        - paid\n        - refunded\n        - refunds\n        - status\n      title: Charge\n      x-expandableFields:\n        - application\n        - application_fee\n        - balance_transaction\n        - customer\n        - destination\n        - dispute\n        - invoice\n        - on_behalf_of\n        - order\n        - review\n        - source_transfer\n        - transfer\n      x-resourceId: charge\n      oneOf:\n        - type: object\n    charge_outcome:\n      properties:\n        network_status:\n          description: \u003e-\n            Possible values are `approved_by_network`, `declined_by_network`,\n            `not_sent_to_network`, and `reversed_after_approval`. The value\n            `reversed_after_approval` indicates the payment was [blocked by\n            Stripe](/docs/declines#blocked-payments) after bank authorization,\n            and may temporarily appear as \"pending\" on a cardholder's statement.\n          oneOf:\n            - type: string\n        reason:\n          description: \u003e-\n            An enumerated value indicating a more detailed explanation of the\n            outcome's `type`. See [understanding declines](/docs/declines) for\n            details.\n          oneOf:\n            - type: string\n        risk_level:\n          description: \u003e-\n            Stripe's evaluation of the riskiness of the payment. Possible values\n            for evaluated payments are `normal`, `elevated`, `highest`. For\n            non-card payments, and card-based payments predating the public\n            assignment of risk levels, this field will have the value\n            `not_assessed`. In the event of an error in the evaluation, this\n            field will have the value `unknown`.\n          oneOf:\n            - type: string\n        rule:\n          description: The ID of the Radar rule that matched the payment.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/rule'\n          oneOf:\n            - type: string\n        seller_message:\n          description: \u003e-\n            A human-readable description of the outcome type and reason,\n            designed for you (the recipient of the payment), not your customer.\n          oneOf:\n            - type: string\n        type:\n          description: \u003e-\n            Possible values are `authorized`, `manual_review`,\n            `issuer_declined`, `blocked`, and `invalid`. See [understanding\n            declines](/docs/declines) and [Radar reviews](radar/review) for\n            details.\n          oneOf:\n            - type: string\n      required:\n        - type\n      title: ChargeOutcome\n      x-expandableFields:\n        - rule\n      x-resourceId: charge_outcome\n      oneOf:\n        - type: object\n    country_spec:\n      properties:\n        default_currency:\n          description: \u003e-\n            The default currency for this country. This applies to both payment\n            methods and bank accounts.\n          oneOf:\n            - type: string\n        id:\n          description: \u003e-\n            Unique identifier for the object. Represented as the ISO country\n            code for this country.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        supported_bank_account_currencies:\n          description: \u003e-\n            Currencies that can be accepted in the specific country (for\n            transfers).\n          oneOf:\n            - type: object\n        supported_payment_currencies:\n          description: \u003e-\n            Currencies that can be accepted in the specified country (for\n            payments).\n          oneOf:\n            - type: array\n        supported_payment_methods:\n          description: \u003e-\n            Payment methods available in the specified country. You will need to\n            [enable\n            bitcoin](https://dashboard.stripe.com/account/bitcoin/enable) and\n            [ACH](https://stripe.com/docs/guides/ach) payments on your account\n            for those methods to appear in this list. The `stripe` payment\n            method refers to [charging through your\n            platform](https://stripe.com/docs/connect/destination-charges).\n          oneOf:\n            - type: array\n        verification_fields:\n          description: \u003e-\n            Lists the types of verification data needed to keep an account open.\n            Includes 'minimum' fields, which every account must eventually\n            provide, as well as a 'additional' fields, which are only required\n            for some merchants.\n          oneOf:\n            - type: object\n      required:\n        - default_currency\n        - id\n        - object\n        - supported_bank_account_currencies\n        - supported_payment_currencies\n        - supported_payment_methods\n        - verification_fields\n      title: CountrySpec\n      x-expandableFields: []\n      x-resourceId: country_spec\n      oneOf:\n        - type: object\n    coupon:\n      properties:\n        amount_off:\n          description: \u003e-\n            Amount (in the `currency` specified) that will be taken off the\n            subtotal of any invoices for this customer.\n          oneOf:\n            - type: integer\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            If `amount_off` has been set, the three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            of the amount to take off.\n          oneOf:\n            - type: string\n        duration:\n          description: \u003e-\n            One of `forever`, `once`, and `repeating`. Describes how long a\n            customer who applies this coupon will get the discount.\n          oneOf:\n            - type: string\n        duration_in_months:\n          description: \u003e-\n            If `duration` is `repeating`, the number of months the coupon\n            applies. Null if coupon `duration` is `forever` or `once`.\n          oneOf:\n            - type: integer\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        max_redemptions:\n          description: \u003e-\n            Maximum number of times this coupon can be redeemed, in total,\n            before it is no longer valid.\n          oneOf:\n            - type: integer\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        percent_off:\n          description: \u003e-\n            Percent that will be taken off the subtotal of any invoices for this\n            customer for the duration of the coupon. For example, a coupon with\n            percent_off of 50 will make a %s100 invoice %s50 instead.\n          oneOf:\n            - type: integer\n        redeem_by:\n          description: Date after which the coupon can no longer be redeemed.\n          oneOf:\n            - type: integer\n        times_redeemed:\n          description: Number of times this coupon has been applied to a customer.\n          oneOf:\n            - type: integer\n        valid:\n          description: \u003e-\n            Taking account of the above properties, whether this coupon can\n            still be applied to a customer.\n          oneOf:\n            - type: boolean\n      required:\n        - created\n        - duration\n        - id\n        - livemode\n        - metadata\n        - object\n        - times_redeemed\n        - valid\n      title: Coupon\n      x-expandableFields: []\n      x-resourceId: coupon\n      oneOf:\n        - type: object\n    customer:\n      properties:\n        account_balance:\n          description: \u003e-\n            Current balance, if any, being stored on the customer's account. If\n            negative, the customer has credit to apply to the next invoice. If\n            positive, the customer has an amount owed that will be added to the\n            next invoice. The balance does not refer to any unpaid invoices; it\n            solely takes into account amounts that have yet to be successfully\n            applied to any invoice. This balance is only taken into account for\n            recurring billing purposes (i.e., subscriptions, invoices, invoice\n            items).\n          oneOf:\n            - type: integer\n        business_vat_id:\n          description: The customer's VAT identification number.\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            the customer can be charged in for recurring billing purposes.\n          oneOf:\n            - type: string\n        default_source:\n          description: ID of the default source attached to this customer.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account_debit_account'\n              - $ref: '#/components/schemas/alipay_account'\n              - $ref: '#/components/schemas/bank_account'\n              - $ref: '#/components/schemas/bitcoin_receiver'\n              - $ref: '#/components/schemas/card'\n              - $ref: '#/components/schemas/source'\n          oneOf:\n            - type: string\n        delinquent:\n          description: \u003e-\n            Whether or not the latest charge for the customer's latest invoice\n            has failed.\n          oneOf:\n            - type: boolean\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        discount:\n          $ref: '#/components/schemas/discount'\n        email:\n          description: The customer's email address.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        shipping:\n          $ref: '#/components/schemas/customer_shipping'\n        sources:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/account_debit_account'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: SourceList\n          x-expandableFields:\n            - data\n          oneOf:\n            - type: object\n        subscriptions:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/subscription'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: SubscriptionList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n      required:\n        - account_balance\n        - created\n        - id\n        - livemode\n        - metadata\n        - object\n        - sources\n        - subscriptions\n      title: Customer\n      x-expandableFields:\n        - default_source\n      x-resourceId: customer\n      oneOf:\n        - type: object\n    customer_shipping:\n      properties:\n        address:\n          $ref: '#/components/schemas/address'\n        name:\n          description: Customer name.\n          oneOf:\n            - type: string\n        phone:\n          description: Customer phone (including extension).\n          oneOf:\n            - type: string\n      required:\n        - address\n        - name\n      title: CustomerShipping\n      x-expandableFields: []\n      x-resourceId: customer_shipping\n      oneOf:\n        - type: object\n    customer_source:\n      properties:\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - id\n        - object\n      title: Polymorphic\n      x-expandableFields:\n        - customer\n      x-polymorphicResources:\n        oneOf:\n          - $ref: '#/components/schemas/alipay_account'\n          - $ref: '#/components/schemas/bank_account'\n          - $ref: '#/components/schemas/bitcoin_receiver'\n          - $ref: '#/components/schemas/card'\n          - $ref: '#/components/schemas/source'\n      x-resourceId: customer_source\n      oneOf:\n        - type: object\n    delivery_estimate:\n      properties:\n        date:\n          description: \u003e-\n            If `type` is `\"exact\"`, `date` will be the expected delivery date in\n            the format YYYY-MM-DD.\n          oneOf:\n            - type: string\n        earliest:\n          description: \u003e-\n            If `type` is `\"range\"`, `earliest` will be be the earliest delivery\n            date in the format YYYY-MM-DD.\n          oneOf:\n            - type: string\n        latest:\n          description: \u003e-\n            If `type` is `\"range\"`, `latest` will be the latest delivery date in\n            the format YYYY-MM-DD.\n          oneOf:\n            - type: string\n        type:\n          description: The type of estimate. Must be either `\"range\"` or `\"exact\"`.\n          oneOf:\n            - type: string\n      required:\n        - type\n      title: DeliveryEstimate\n      x-expandableFields: []\n      x-resourceId: delivery_estimate\n      oneOf:\n        - type: object\n    discount:\n      properties:\n        coupon:\n          $ref: '#/components/schemas/coupon'\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        end:\n          description: \u003e-\n            If the coupon has a duration of `once` or `repeating`, the date that\n            this discount will end. If the coupon used has a `forever` duration,\n            this attribute will be null.\n          oneOf:\n            - type: integer\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        start:\n          description: Date that the coupon was applied.\n          oneOf:\n            - type: integer\n        subscription:\n          description: \u003e-\n            The subscription that this coupon is applied to, if it is applied to\n            a particular subscription.\n          oneOf:\n            - type: string\n      required:\n        - coupon\n        - object\n        - start\n      title: Discount\n      x-expandableFields:\n        - customer\n      x-resourceId: discount\n      oneOf:\n        - type: object\n    dispute:\n      properties:\n        amount:\n          description: \u003e-\n            Disputed amount. Usually the amount of the charge, but can differ\n            (usually because of currency fluctuation or because only part of the\n            order is disputed).\n          oneOf:\n            - type: integer\n        balance_transactions:\n          oneOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/balance_transaction'\n        charge:\n          description: ID of the charge that was disputed.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        evidence:\n          description: \u003e-\n            Evidence provided to respond to a dispute. Updating any field in the\n            hash will submit all fields in the hash for review.\n          oneOf:\n            - type: object\n        evidence_details:\n          description: Information about the evidence submission.\n          oneOf:\n            - type: object\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        is_charge_refundable:\n          description: \u003e-\n            If true, it is still possible to refund the disputed payment. Once\n            the payment has been fully refunded, no further funds will be\n            withdrawn from your Stripe account as a result of this dispute.\n          oneOf:\n            - type: boolean\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        reason:\n          description: \u003e-\n            Reason given by cardholder for dispute. Possible values are\n            `duplicate`, `fraudulent`, `subscription_canceled`,\n            `product_unacceptable`, `product_not_received`, `unrecognized`,\n            `credit_not_processed`, `general`, `incorrect_account_details`,\n            `insufficient_funds`, `bank_cannot_process`, `debit_not_authorized`,\n            or `customer_initiated`. Read more about [dispute\n            reasons](https://stripe.com/help/disputes#reasons).\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Current status of dispute. Possible values are\n            `warning_needs_response`, `warning_under_review`, `warning_closed`,\n            `needs_response`, `under_review`, `charge_refunded`, `won`, or\n            `lost`.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - balance_transactions\n        - charge\n        - created\n        - currency\n        - evidence\n        - evidence_details\n        - id\n        - is_charge_refundable\n        - livemode\n        - metadata\n        - object\n        - reason\n        - status\n      title: Dispute\n      x-expandableFields:\n        - charge\n      x-resourceId: dispute\n      oneOf:\n        - type: object\n    error:\n      description: An error response from the Stripe API.\n      properties:\n        charge:\n          description: The ID of the failed charge.\n          oneOf:\n            - type: string\n        code:\n          description: \u003e-\n            For card errors, a short string from amongst those listed on the\n            right describing the kind of card error that occurred.\n          oneOf:\n            - type: string\n        decline_code:\n          description: \u003e-\n            For card errors resulting from a bank decline, a short string\n            indicating the bank's reason for the decline if they provide one.\n            See https://stripe.com/docs/declines#bank-declines\n          oneOf:\n            - type: string\n        message:\n          description: \u003e-\n            A human-readable message providing more details about the error. For\n            card errors, these messages can be shown to your users.\n          oneOf:\n            - type: string\n        param:\n          description: \u003e-\n            The parameter the error relates to if the error is\n            parameter-specific. You can use this to display a message near the\n            correct form field, for example.\n          oneOf:\n            - type: string\n        type:\n          description: The type of error returned.\n          enum:\n            - api_connection_error\n            - api_error\n            - authentication_error\n            - card_error\n            - invalid_request_error\n            - rate_limit_error\n          oneOf:\n            - type: string\n      required:\n        - type\n      oneOf:\n        - type: object\n    event:\n      properties:\n        api_version:\n          description: \u003e-\n            The Stripe API version used to render `data`. *Note: this property\n            is populated for events on or after October 31, 2014*.\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        data:\n          $ref: '#/components/schemas/event_data'\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        pending_webhooks:\n          description: \u003e-\n            Number of webhooks yet to be delivered successfully (return a 20x\n            response) to the URLs you've specified.\n          oneOf:\n            - type: integer\n        request:\n          description: \u003e-\n            ID of the API request that caused the event. If null, the event was\n            automatic (e.g. Stripe's automatic subscription handling). Request\n            logs are available in the\n            [dashboard](https://dashboard.stripe.com/logs) but currently not in\n            the API. *Note: this property is populated for events on or after\n            April 23, 2013*.\n          oneOf:\n            - type: string\n        type:\n          description: \u003e-\n            Description of the event: e.g. `invoice.created`, `charge.refunded`,\n            etc.\n          oneOf:\n            - type: string\n      required:\n        - created\n        - data\n        - id\n        - livemode\n        - object\n        - pending_webhooks\n        - type\n      title: Event\n      x-expandableFields: []\n      x-resourceId: event\n      oneOf:\n        - type: object\n    event_data:\n      properties:\n        object:\n          description: \u003e-\n            Static string describing the type of the object described by this\n            change. For example, an `invoice.created` event will have a full\n            invoice object as the value of the object key.\n          oneOf:\n            - type: object\n        previous_attributes:\n          description: \u003e-\n            Hash containing the names of the attributes that have changed and\n            their previous values (only sent along with *.updated events)\n          oneOf:\n            - type: object\n      required:\n        - object\n      title: EventData\n      x-expandableFields: []\n      x-resourceId: event_data\n      oneOf:\n        - type: object\n    external_account_source:\n      properties:\n        account:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        country:\n          description: \u003e-\n            Two-letter ISO code representing the country the bank account is\n            located in.\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            paid out to the bank account.\n          oneOf:\n            - type: string\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        default_for_currency:\n          description: \u003e-\n            Whether this external account is the default account for its\n            currency.\n          oneOf:\n            - type: boolean\n        fingerprint:\n          description: \u003e-\n            Uniquely identifies this particular bank account. You can use this\n            attribute to check whether two bank accounts are the same.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        last4:\n          description: ''\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - country\n        - currency\n        - id\n        - last4\n        - object\n      title: Polymorphic\n      x-expandableFields:\n        - account\n        - customer\n      x-polymorphicResources:\n        oneOf:\n          - $ref: '#/components/schemas/bank_account'\n          - $ref: '#/components/schemas/card'\n      x-resourceId: external_account_source\n      oneOf:\n        - type: object\n    fee:\n      properties:\n        amount:\n          description: 'Amount of the fee, in cents.'\n          oneOf:\n            - type: integer\n        application:\n          description: ''\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        type:\n          description: 'Type of the fee, one of: `application_fee`, `stripe_fee` or `tax`.'\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - currency\n        - type\n      title: Fee\n      x-expandableFields: []\n      x-resourceId: fee\n      oneOf:\n        - type: object\n    fee_refund:\n      properties:\n        amount:\n          description: 'Amount, in %s.'\n          oneOf:\n            - type: integer\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact on your account\n            balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        fee:\n          description: ID of the application fee that was refunded.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/platform_fee'\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - created\n        - currency\n        - fee\n        - id\n        - metadata\n        - object\n      title: FeeRefund\n      x-expandableFields:\n        - balance_transaction\n        - fee\n      x-resourceId: fee_refund\n      oneOf:\n        - type: object\n    file:\n      properties:\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        purpose:\n          description: \u003e-\n            The purpose of the uploaded file. Possible values are\n            `business_logo`, `dispute_evidence`, `identity_document`,\n            `incorporation_article`, `incorporation_document`,\n            `invoice_statement`, `payment_provider_transfer`, or `product_feed`.\n          oneOf:\n            - type: string\n        size:\n          description: The size in bytes of the file upload object.\n          oneOf:\n            - type: integer\n        type:\n          description: \u003e-\n            The type of the file returned. Returns one of the following: `pdf`,\n            `xml`, `jpg`, `png`, `csv`, or `tsv`.\n          oneOf:\n            - type: string\n        url:\n          description: \u003e-\n            A read-only URL where the uploaded file can be accessed. Will be nil\n            unless the uploaded file has one of the following purposes:\n            `business_logo`, `dispute_evidence`, `incorporation_document`,\n            `invoice_statement`, `payment_provider_transfer`, or `product_feed`.\n            Also nil if retrieved with the publishable API key.\n          oneOf:\n            - type: string\n      required:\n        - created\n        - id\n        - object\n        - purpose\n        - size\n      title: File\n      x-expandableFields: []\n      x-resourceId: file\n      oneOf:\n        - type: object\n    inventory:\n      properties:\n        quantity:\n          description: \u003e-\n            The count of inventory available. Will be present if and only if\n            `type` is `finite`.\n          oneOf:\n            - type: integer\n        type:\n          description: \u003e-\n            Inventory type. Possible values are `finite`, `bucket` (not\n            quantified), and `infinite`.\n          oneOf:\n            - type: string\n        value:\n          description: \u003e-\n            An indicator of the inventory available. Possible values are\n            `in_stock`, `limited`, and `out_of_stock`. Will be present if and\n            only if `type` is `bucket`.\n          oneOf:\n            - type: string\n      required:\n        - type\n      title: Inventory\n      x-expandableFields: []\n      x-resourceId: inventory\n      oneOf:\n        - type: object\n    invoice:\n      properties:\n        amount_due:\n          description: \u003e-\n            Final amount due at this time for this invoice. If the invoice's\n            total is smaller than the minimum charge amount, for example, or if\n            there is account credit that can be applied to the invoice, the\n            `amount_due` may be 0. If there is a positive `starting_balance` for\n            the invoice (the customer owes money), the amount_due will also take\n            that into account. The charge that gets generated for the invoice\n            will be for the amount specified in `amount_due`.\n          oneOf:\n            - type: integer\n        application_fee:\n          description: \u003e-\n            The fee in %s that will be applied to the invoice and transferred to\n            the application owner's Stripe account when the invoice is paid.\n          oneOf:\n            - type: integer\n        attempt_count:\n          description: \u003e-\n            Number of payment attempts made for this invoice, from the\n            perspective of the payment retry schedule. Any payment attempt\n            counts as the first attempt, and subsequently only automatic retries\n            increment the attempt count. In other words, manual payment attempts\n            after the first attempt do not affect the retry schedule.\n          oneOf:\n            - type: integer\n        attempted:\n          description: \u003e-\n            Whether or not an attempt has been made to pay the invoice. An\n            invoice is not attempted until 1 hour after the `invoice.created`\n            webhook, for example, so you might not want to display that invoice\n            as unpaid to your users.\n          oneOf:\n            - type: boolean\n        charge:\n          description: 'ID of the latest charge generated for this invoice, if any.'\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        closed:\n          description: \u003e-\n            Whether or not the invoice is still trying to collect payment. An\n            invoice is closed if it's either paid or it has been marked closed.\n            A closed invoice will no longer attempt to collect payment.\n          oneOf:\n            - type: boolean\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        date:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        discount:\n          $ref: '#/components/schemas/discount'\n        ending_balance:\n          description: \u003e-\n            Ending customer balance after attempting to pay invoice. If the\n            invoice has not been attempted yet, this will be null.\n          oneOf:\n            - type: integer\n        forgiven:\n          description: \u003e-\n            Whether or not the invoice has been forgiven. Forgiving an invoice\n            instructs us to update the subscription status as if the invoice\n            were successfully paid. Once an invoice has been forgiven, it cannot\n            be unforgiven or reopened.\n          oneOf:\n            - type: boolean\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        lines:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/invoice_line_item'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: InvoiceLinesList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        next_payment_attempt:\n          description: The time at which payment will next be attempted.\n          oneOf:\n            - type: integer\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        paid:\n          description: \u003e-\n            Whether or not payment was successfully collected for this invoice.\n            An invoice can be paid (most commonly) with a charge or with credit\n            from the customer's account balance.\n          oneOf:\n            - type: boolean\n        period_end:\n          description: \u003e-\n            End of the usage period during which invoice items were added to\n            this invoice.\n          oneOf:\n            - type: integer\n        period_start:\n          description: \u003e-\n            Start of the usage period during which invoice items were added to\n            this invoice.\n          oneOf:\n            - type: integer\n        receipt_number:\n          description: \u003e-\n            This is the transaction number that appears on email receipts sent\n            for this invoice.\n          oneOf:\n            - type: string\n        starting_balance:\n          description: \u003e-\n            Starting customer balance before attempting to pay invoice. If the\n            invoice has not been attempted yet, this will be the current\n            customer balance.\n          oneOf:\n            - type: integer\n        statement_descriptor:\n          description: \u003e-\n            Extra information about an invoice for the customer's credit card\n            statement.\n          oneOf:\n            - type: string\n        subscription:\n          description: 'The subscription that this invoice was prepared for, if any.'\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/subscription'\n          oneOf:\n            - type: string\n        subscription_proration_date:\n          description: \u003e-\n            Only set for upcoming invoices that preview prorations. The time\n            used to calculate prorations.\n          oneOf:\n            - type: integer\n        subtotal:\n          description: \u003e-\n            Total of all subscriptions, invoice items, and prorations on the\n            invoice before any discount is applied.\n          oneOf:\n            - type: integer\n        tax:\n          description: \u003e-\n            The amount of tax included in the total, calculated from\n            `tax_percent` and the subtotal. If no `tax_percent` is defined, this\n            value will be null.\n          oneOf:\n            - type: integer\n        tax_percent:\n          description: \u003e-\n            This percentage of the subtotal has been added to the total amount\n            of the invoice, including invoice line items and discounts. This\n            field is inherited from the subscription's `tax_percent` field, but\n            can be changed before the invoice is paid. This field defaults to\n            null.\n          oneOf:\n            - type: number\n        total:\n          description: Total after discount.\n          oneOf:\n            - type: integer\n        webhooks_delivered_at:\n          description: \u003e-\n            The time at which webhooks for this invoice were successfully\n            delivered (if the invoice had no webhooks to deliver, this will\n            match `date`). Invoice payment is delayed until webhooks are\n            delivered, or until all webhook delivery attempts have been\n            exhausted.\n          oneOf:\n            - type: integer\n      required:\n        - amount_due\n        - attempt_count\n        - attempted\n        - closed\n        - currency\n        - customer\n        - date\n        - forgiven\n        - id\n        - lines\n        - livemode\n        - object\n        - paid\n        - period_end\n        - period_start\n        - starting_balance\n        - subtotal\n        - total\n      title: Invoice\n      x-expandableFields:\n        - charge\n        - customer\n        - subscription\n      x-resourceId: invoice\n      oneOf:\n        - type: object\n    invoice_item:\n      properties:\n        amount:\n          description: Amount (in the `currency` specified) of the invoice item.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        customer:\n          description: \u003e-\n            The ID of the customer who will be billed when this invoice item is\n            billed.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        date:\n          description: ''\n          oneOf:\n            - type: integer\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        discountable:\n          description: \u003e-\n            If true, discounts will apply to this invoice item. Always false for\n            prorations.\n          oneOf:\n            - type: boolean\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        invoice:\n          description: The ID of the invoice this invoice item belongs to.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/invoice'\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        period:\n          description: ''\n          oneOf:\n            - type: object\n        plan:\n          $ref: '#/components/schemas/plan'\n        proration:\n          description: \u003e-\n            Whether or not the invoice item was created automatically as a\n            proration adjustment when the customer switched plans.\n          oneOf:\n            - type: boolean\n        quantity:\n          description: \u003e-\n            If the invoice item is a proration, the quantity of the subscription\n            that the proration was computed for.\n          oneOf:\n            - type: integer\n        subscription:\n          description: \u003e-\n            The subscription that this invoice item has been created for, if\n            any.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/subscription'\n          oneOf:\n            - type: string\n        subscription_item:\n          description: ''\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - currency\n        - customer\n        - date\n        - discountable\n        - id\n        - livemode\n        - metadata\n        - object\n        - proration\n      title: InvoiceItem\n      x-expandableFields:\n        - customer\n        - invoice\n        - subscription\n      x-resourceId: invoice_item\n      oneOf:\n        - type: object\n    invoice_line_item:\n      properties:\n        amount:\n          description: 'The amount, in %s.'\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        discountable:\n          description: \u003e-\n            If true, discounts will apply to this line item. Always false for\n            prorations.\n          oneOf:\n            - type: boolean\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Whether or not this is a test line item.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        period:\n          description: \u003e-\n            The period this line_item covers. For subscription line items, this\n            is the subscription period. For prorations, this starts when the\n            proration was calculated, and ends at the period end of the\n            subscription. For invoice items, this is the time at which the\n            invoice item was created, so the period start and end are the same\n            time.\n          oneOf:\n            - type: object\n        plan:\n          $ref: '#/components/schemas/plan'\n        proration:\n          description: Whether or not this is a proration.\n          oneOf:\n            - type: boolean\n        quantity:\n          description: \u003e-\n            The quantity of the subscription, if the line item is a subscription\n            or a proration.\n          oneOf:\n            - type: integer\n        subscription:\n          description: \u003e-\n            When type is `invoiceitem`, the subscription that the invoice item\n            pertains to, if any. Left blank when `type` is already subscription,\n            as it'd be redundant with `id`.\n          oneOf:\n            - type: string\n        subscription_item:\n          description: ''\n          oneOf:\n            - type: string\n        type:\n          description: \u003e-\n            A string identifying the type of the source of this line item,\n            either an `invoiceitem` or a `subscription`.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - currency\n        - discountable\n        - id\n        - livemode\n        - metadata\n        - object\n        - period\n        - proration\n        - type\n      title: InvoiceLineItem\n      x-expandableFields: []\n      x-resourceId: invoice_line_item\n      oneOf:\n        - type: object\n    issued_card:\n      properties:\n        available_balance:\n          description: ''\n          oneOf:\n            - type: integer\n        card:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/card'\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        status:\n          description: ''\n          oneOf:\n            - type: string\n      required:\n        - available_balance\n        - card\n        - currency\n        - id\n        - object\n        - status\n      title: IssuedCard\n      x-expandableFields:\n        - card\n      x-resourceId: issued_card\n      oneOf:\n        - type: object\n    legacy_transfer:\n      properties:\n        amount:\n          description: Amount (in %s) to be transferred to your bank account.\n          oneOf:\n            - type: integer\n        amount_reversed:\n          description: \u003e-\n            Amount in %s reversed (can be less than the amount attribute on the\n            transfer if a partial reversal was issued).\n          oneOf:\n            - type: integer\n        application_fee:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/backwards_compatible_platform_earning'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact of this transfer on\n            your account balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        date:\n          description: \u003e-\n            Date the transfer is scheduled to arrive in the bank. This factors\n            in delays like weekends or bank holidays.\n          oneOf:\n            - type: integer\n        description:\n          description: Internal-only description of the transfer.\n          oneOf:\n            - type: string\n        destination:\n          description: \u003e-\n            ID of the bank account, card, or Stripe account the transfer was\n            sent to.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n              - $ref: '#/components/schemas/bank_account'\n              - $ref: '#/components/schemas/card'\n          oneOf:\n            - type: string\n        destination_payment:\n          description: \u003e-\n            If the destination is a Stripe account, this will be the ID of the\n            payment that the destination account received for the transfer.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        failure_code:\n          description: \u003e-\n            Error code explaining reason for transfer failure if available. See\n            [Types of transfer failures](/docs/api#transfer_failures) for a list\n            of failure codes.\n          oneOf:\n            - type: string\n        failure_message:\n          description: \u003e-\n            Message to user further explaining reason for transfer failure if\n            available.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        method:\n          description: \u003e-\n            The method used to send this transfer, which can be `standard` or\n            `instant`. `instant` is only supported for transfers to debit cards.\n            (See [Instant payouts for\n            marketplaces](/blog/instant-payouts-for-marketplaces) for more\n            information.)\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        reversals:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/transfer_reversal'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: TransferReversalList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        reversed:\n          description: \u003e-\n            Whether or not the transfer has been fully reversed. If the transfer\n            is only partially reversed, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        source_transaction:\n          description: \u003e-\n            ID of the charge (or other transaction) that was used to fund the\n            transfer. If null, the transfer was funded from the available\n            balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n              - $ref: '#/components/schemas/platform_fee'\n              - $ref: '#/components/schemas/transfer_reversal'\n          oneOf:\n            - type: string\n        source_type:\n          description: \u003e-\n            The source balance this transfer came from. One of `card`,\n            `bank_account`, `bitcoin_receiver`, or `alipay_account`.\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: \u003e-\n            Extra information about a transfer to be displayed on the user's\n            bank statement.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Current status of the transfer (`paid`, `pending`, `in_transit`,\n            `canceled` or `failed`). A transfer will be `pending` until it is\n            submitted to the bank, at which point it becomes `in_transit`. It\n            will then change to `paid` if the transaction goes through. If it\n            does not go through successfully, its status will change to `failed`\n            or `canceled`.\n          oneOf:\n            - type: string\n        transfer_group:\n          description: \u003e-\n            A string that identifies this transaction as part of a group. See\n            the [Connect\n            documentation](/docs/connect/charges-transfers#grouping-transactions)\n            for details.\n          oneOf:\n            - type: string\n        type:\n          description: 'Can be `card`, `bank_account`, or `stripe_account`.'\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - amount_reversed\n        - created\n        - currency\n        - date\n        - id\n        - livemode\n        - metadata\n        - object\n        - reversals\n        - reversed\n        - status\n        - type\n      title: LegacyTransfer\n      x-expandableFields:\n        - application_fee\n        - balance_transaction\n        - destination\n        - destination_payment\n        - source_transaction\n      x-resourceId: legacy_transfer\n      oneOf:\n        - type: object\n    legal_entity:\n      properties:\n        additional_owners:\n          oneOf:\n            - type: array\n              items:\n                $ref: '#/components/schemas/legal_entity_additional_owner'\n        address:\n          $ref: '#/components/schemas/legal_entity_address'\n        address_kana:\n          $ref: '#/components/schemas/legal_entity_japan_address'\n        address_kanji:\n          $ref: '#/components/schemas/legal_entity_japan_address'\n        business_name:\n          description: The legal name of the company.\n          oneOf:\n            - type: string\n        business_name_kana:\n          description: The Kana variation of the legal name of the company (Japan only).\n          oneOf:\n            - type: string\n        business_name_kanji:\n          description: The Kanji variation of the legal name of the company (Japan only).\n          oneOf:\n            - type: string\n        business_tax_id_provided:\n          description: \u003e-\n            Whether the business ID number of the legal entity has been\n            provided.\n          oneOf:\n            - type: boolean\n        business_vat_id_provided:\n          description: \u003e-\n            Whether the business VAT number of the legal entity has been\n            provided.\n          oneOf:\n            - type: boolean\n        dob:\n          $ref: '#/components/schemas/legal_entity_dob'\n        first_name:\n          description: The first name of the individual responsible for the account.\n          oneOf:\n            - type: string\n        first_name_kana:\n          description: \u003e-\n            The Kana variation of the first name of the individual responsible\n            for the account (Japan only).\n          oneOf:\n            - type: string\n        first_name_kanji:\n          description: \u003e-\n            The Kanji variation of the first name of the individual responsible\n            for the account (Japan only).\n          oneOf:\n            - type: string\n        gender:\n          description: \u003e-\n            The gender of the individual responsible for the account\n            (International regulations require either \"male\" or \"female\").\n          oneOf:\n            - type: string\n        last_name:\n          description: The last name of the individual responsible for the account.\n          oneOf:\n            - type: string\n        last_name_kana:\n          description: \u003e-\n            The Kana varation of the last name of the individual responsible for\n            the account (Japan only).\n          oneOf:\n            - type: string\n        last_name_kanji:\n          description: \u003e-\n            The Kanji varation of the last name of the individual responsible\n            for the account (Japan only).\n          oneOf:\n            - type: string\n        maiden_name:\n          description: The maiden name of the individual responsible for the account.\n          oneOf:\n            - type: string\n        personal_address:\n          $ref: '#/components/schemas/legal_entity_address'\n        personal_address_kana:\n          $ref: '#/components/schemas/legal_entity_japan_address'\n        personal_address_kanji:\n          $ref: '#/components/schemas/legal_entity_japan_address'\n        personal_id_number_provided:\n          description: \u003e-\n            Whether the personal id number of the individual responsible for the\n            account has been provided.\n          oneOf:\n            - type: boolean\n        phone_number:\n          description: 'The phone number of the company, used for verification.'\n          oneOf:\n            - type: string\n        ssn_last_4_provided:\n          description: \u003e-\n            Whether the last 4 ssn digits of the individual responsible for the\n            account have been provided.\n          oneOf:\n            - type: boolean\n        type:\n          description: \u003e-\n            Either \"individual\" or \"company\", for what kind of legal entity the\n            account owner is for.\n          oneOf:\n            - type: string\n        verification:\n          $ref: '#/components/schemas/legal_entity_verification'\n      required:\n        - address\n        - business_tax_id_provided\n        - business_vat_id_provided\n        - dob\n        - personal_address\n        - personal_id_number_provided\n        - ssn_last_4_provided\n        - verification\n      title: LegalEntity\n      x-expandableFields: []\n      x-resourceId: legal_entity\n      oneOf:\n        - type: object\n    legal_entity_additional_owner:\n      properties:\n        address:\n          $ref: '#/components/schemas/legal_entity_address'\n        dob:\n          $ref: '#/components/schemas/legal_entity_dob'\n        first_name:\n          description: The first name of this additional owner.\n          oneOf:\n            - type: string\n        last_name:\n          description: The last name of this additional owner.\n          oneOf:\n            - type: string\n        verification:\n          $ref: '#/components/schemas/legal_entity_verification'\n      required:\n        - address\n        - dob\n        - verification\n      title: LegalEntityAdditionalOwner\n      x-expandableFields: []\n      x-resourceId: legal_entity_additional_owner\n      oneOf:\n        - type: object\n    legal_entity_address:\n      properties:\n        city:\n          description: City/District/Suburb/Town/Village.\n          oneOf:\n            - type: string\n        country:\n          description: 2-letter country code.\n          oneOf:\n            - type: string\n        line1:\n          description: Address line 1 (Street address/PO Box/Company name).\n          oneOf:\n            - type: string\n        line2:\n          description: Address line 2 (Apartment/Suite/Unit/Building).\n          oneOf:\n            - type: string\n        postal_code:\n          description: Zip/Postal Code.\n          oneOf:\n            - type: string\n        state:\n          description: State/County/Province/Region.\n          oneOf:\n            - type: string\n      title: LegalEntityAddress\n      x-expandableFields: []\n      x-resourceId: legal_entity_address\n      oneOf:\n        - type: object\n    legal_entity_dob:\n      properties:\n        day:\n          description: 'The day of birth, between 1 and 31.'\n          oneOf:\n            - type: integer\n        month:\n          description: 'The month of birth, between 1 and 12.'\n          oneOf:\n            - type: integer\n        year:\n          description: The 4-digit year of birth.\n          oneOf:\n            - type: integer\n      title: LegalEntityDOB\n      x-expandableFields: []\n      x-resourceId: legal_entity_dob\n      oneOf:\n        - type: object\n    legal_entity_japan_address:\n      properties:\n        city:\n          description: City/Ward.\n          oneOf:\n            - type: string\n        country:\n          description: 2-letter country code.\n          oneOf:\n            - type: string\n        line1:\n          description: Block/Building number.\n          oneOf:\n            - type: string\n        line2:\n          description: Building details.\n          oneOf:\n            - type: string\n        postal_code:\n          description: Zip/Postal Code.\n          oneOf:\n            - type: string\n        state:\n          description: Prefecture.\n          oneOf:\n            - type: string\n        town:\n          description: Town/cho-me.\n          oneOf:\n            - type: string\n      title: LegalEntityJapanAddress\n      x-expandableFields: []\n      x-resourceId: legal_entity_japan_address\n      oneOf:\n        - type: object\n    legal_entity_verification:\n      properties:\n        details:\n          description: \u003e-\n            A user-displayable string describing the verification state for this\n            legal entity. For example, if a document is uploaded and the picture\n            is too fuzzy, this may say \"Identity document is too unclear to\n            read\".\n          oneOf:\n            - type: string\n        details_code:\n          description: \u003e-\n            One of `scan_corrupt`, `scan_not_readable`, `scan_failed_greyscale`,\n            `scan_not_uploaded`, `scan_id_type_not_supported`,\n            `scan_id_country_not_supported`, `scan_name_mismatch`,\n            `scan_failed_other`, `failed_keyed_identity`, or `failed_other`. A\n            machine-readable code specifying the verification state for this\n            legal entity.\n          oneOf:\n            - type: string\n        document:\n          description: \u003e-\n            (ID of a [file upload](https://stripe.com/docs/guides/file-upload))\n            A photo (jpg or png) of an identifying document, either a passport\n            or local ID card.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/file'\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            The state of verification for this legal entity. Possible values are\n            unverified, pending, or verified.\n          oneOf:\n            - type: string\n      required:\n        - status\n      title: LegalEntityVerification\n      x-expandableFields:\n        - document\n      x-resourceId: legal_entity_verification\n      oneOf:\n        - type: object\n    login_link:\n      properties:\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        url:\n          description: The URL for the login link.\n          oneOf:\n            - type: string\n      required:\n        - created\n        - object\n        - url\n      title: LoginLink\n      x-expandableFields: []\n      x-resourceId: login_link\n      oneOf:\n        - type: object\n    merchant_data:\n      properties:\n        category:\n          description: ''\n          oneOf:\n            - type: string\n        city:\n          description: ''\n          oneOf:\n            - type: string\n        country:\n          description: ''\n          oneOf:\n            - type: string\n        name:\n          description: ''\n          oneOf:\n            - type: string\n        postal_code:\n          description: ''\n          oneOf:\n            - type: string\n      required:\n        - category\n      title: MerchantData\n      x-expandableFields: []\n      x-resourceId: merchant_data\n      oneOf:\n        - type: object\n    order:\n      properties:\n        amount:\n          description: \u003e-\n            A positive integer in the smallest currency unit (that is, 100 cents\n            for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency)\n            representing the total amount for the order.\n          oneOf:\n            - type: integer\n        amount_returned:\n          description: ''\n          oneOf:\n            - type: integer\n        application:\n          description: ID of the Connect Application that created the order.\n          oneOf:\n            - type: string\n        application_fee:\n          description: ''\n          oneOf:\n            - type: integer\n        charge:\n          description: \u003e-\n            The ID of the payment used to pay for the order. Present if the\n            order status is `paid`, `fulfilled`, or `refunded`.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        customer:\n          description: The customer used for the order.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        email:\n          description: The email address of the customer placing the order.\n          oneOf:\n            - type: string\n        external_coupon_code:\n          description: ''\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        items:\n          $ref: '#/components/schemas/order_item'\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        returns:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/order_return'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: OrderReturnList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        selected_shipping_method:\n          description: \u003e-\n            The shipping method that is currently selected for this order, if\n            any. If present, it is equal to one of the `id`s of shipping methods\n            in the `shipping_methods` array. At order creation time, if there\n            are multiple shipping methods, Stripe will automatically selected\n            the first method.\n          oneOf:\n            - type: string\n        shipping:\n          $ref: '#/components/schemas/shipping'\n        shipping_methods:\n          $ref: '#/components/schemas/shipping_method'\n        status:\n          description: \u003e-\n            Current order status. One of `created`, `paid`, `canceled`,\n            `fulfilled`, or `returned`. More detail in the [Relay API\n            Overview](/docs/orders/guide#understanding-order-statuses).\n          oneOf:\n            - type: string\n        status_transitions:\n          $ref: '#/components/schemas/status_transitions'\n        updated:\n          description: ''\n          oneOf:\n            - type: integer\n        upstream_id:\n          description: The merchant's order ID if it is different from the Stripe order ID.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - created\n        - currency\n        - id\n        - items\n        - livemode\n        - metadata\n        - object\n        - status\n      title: Order\n      x-expandableFields:\n        - charge\n        - customer\n      x-resourceId: order\n      oneOf:\n        - type: object\n    order_item:\n      properties:\n        amount:\n          description: \u003e-\n            A positive integer in the smallest currency unit (that is, 100 cents\n            for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency)\n            representing the total amount for the line item.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            Description of the line item, meant to be displayable to the user\n            (e.g., `\"Express shipping\"`).\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        parent:\n          description: \u003e-\n            The ID of the associated object for this line item. Expandable if\n            not null (e.g., expandable to a SKU).\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/discount'\n              - $ref: '#/components/schemas/sku'\n          oneOf:\n            - type: string\n        quantity:\n          description: \u003e-\n            A positive integer representing the number of instances of `parent`\n            that are included in this order item. Applicable/present only if\n            `type` is `sku`.\n          oneOf:\n            - type: integer\n        type:\n          description: \u003e-\n            The type of line item. One of `sku`, `tax`, `shipping`, or\n            `discount`.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - currency\n        - description\n        - object\n        - type\n      title: OrderItem\n      x-expandableFields:\n        - parent\n      x-resourceId: order_item\n      oneOf:\n        - type: object\n    order_return:\n      properties:\n        amount:\n          description: \u003e-\n            A positive integer in the smallest currency unit (that is, 100 cents\n            for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency)\n            representing the total amount for the returned line item.\n          oneOf:\n            - type: integer\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        items:\n          $ref: '#/components/schemas/order_item'\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        order:\n          description: The order that this return includes items from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/order'\n          oneOf:\n            - type: string\n        refund:\n          description: The ID of the refund issued for this return.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/refund'\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - created\n        - currency\n        - id\n        - items\n        - livemode\n        - object\n      title: OrderReturn\n      x-expandableFields:\n        - order\n        - refund\n      x-resourceId: order_return\n      oneOf:\n        - type: object\n    package_dimensions:\n      properties:\n        height:\n          description: 'Height, in inches.'\n          oneOf:\n            - type: number\n        length:\n          description: 'Length, in inches.'\n          oneOf:\n            - type: number\n        weight:\n          description: 'Weight, in ounces.'\n          oneOf:\n            - type: number\n        width:\n          description: 'Width, in inches.'\n          oneOf:\n            - type: number\n      required:\n        - height\n        - length\n        - weight\n        - width\n      title: PackageDimensions\n      x-expandableFields: []\n      x-resourceId: package_dimensions\n      oneOf:\n        - type: object\n    payout:\n      properties:\n        amount:\n          description: Amount (in %s) to be transferred to your bank account or debit card.\n          oneOf:\n            - type: integer\n        arrival_date:\n          description: \u003e-\n            Date the payout is expected to arrive in the bank. This factors in\n            delays like weekends or bank holidays.\n          oneOf:\n            - type: integer\n        balance_transaction:\n          description: \u003e-\n            ID of the balance transaction that describes the impact of this\n            payout on your account balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        destination:\n          description: ID of the bank account or card the payout was sent to.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/bank_account'\n              - $ref: '#/components/schemas/card'\n          oneOf:\n            - type: string\n        failure_balance_transaction:\n          description: \u003e-\n            If the payout failed or was canceled, this will be the ID of the\n            balance transaction that reversed the initial balance transaction,\n            and puts the funds from the failed payout back in your balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        failure_code:\n          description: \u003e-\n            Error code explaining reason for payout failure if available. See\n            [Types of payout failures](/docs/api#payout_failures) for a list of\n            failure codes.\n          oneOf:\n            - type: string\n        failure_message:\n          description: \u003e-\n            Message to user further explaining reason for payout failure if\n            available.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        method:\n          description: \u003e-\n            The method used to send this payout, which can be `standard` or\n            `instant`. `instant` is only supported for payouts to debit cards.\n            (See [Instant payouts for\n            marketplaces](/blog/instant-payouts-for-marketplaces) for more\n            information.)\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        source_type:\n          description: \u003e-\n            The source balance this payout came from. One of `card`,\n            `bank_account`, `bitcoin_receiver`, or `alipay_account`.\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: \u003e-\n            Extra information about a payout to be displayed on the user's bank\n            statement.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Current status of the payout (`paid`, `pending`, `in_transit`,\n            `canceled` or `failed`). A payout will be `pending` until it is\n            submitted to the bank, at which point it becomes `in_transit`. It\n            will then change to `paid` if the transaction goes through. If it\n            does not go through successfully, its status will change to `failed`\n            or `canceled`.\n          oneOf:\n            - type: string\n        type:\n          description: Can be `bank_account` or `card`.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - arrival_date\n        - created\n        - currency\n        - destination\n        - id\n        - livemode\n        - metadata\n        - method\n        - object\n        - source_type\n        - status\n        - type\n      title: Payout\n      x-expandableFields:\n        - balance_transaction\n        - destination\n        - failure_balance_transaction\n      x-resourceId: payout\n      oneOf:\n        - type: object\n    plan:\n      properties:\n        amount:\n          description: The amount in %s to be charged on the interval specified.\n          oneOf:\n            - type: integer\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        interval:\n          description: \u003e-\n            One of `day`, `week`, `month` or `year`. The frequency with which a\n            subscription should be billed.\n          oneOf:\n            - type: string\n        interval_count:\n          description: \u003e-\n            The number of intervals (specified in the `interval` property)\n            between each subscription billing. For example, `interval=month` and\n            `interval_count=3` bills every 3 months.\n          oneOf:\n            - type: integer\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        name:\n          description: Display name of the plan.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: \u003e-\n            Extra information about a charge for the customer's credit card\n            statement.\n          oneOf:\n            - type: string\n        trial_period_days:\n          description: \u003e-\n            Number of trial period days granted when subscribing a customer to\n            this plan. Null if the plan has no trial period.\n          oneOf:\n            - type: integer\n      required:\n        - amount\n        - created\n        - currency\n        - id\n        - interval\n        - interval_count\n        - livemode\n        - metadata\n        - name\n        - object\n      title: Plan\n      x-expandableFields: []\n      x-resourceId: plan\n      oneOf:\n        - type: object\n    platform_earning:\n      properties:\n        account:\n          description: ID of the Stripe account this fee was taken from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        amount:\n          description: 'Amount earned, in %s.'\n          oneOf:\n            - type: integer\n        amount_refunded:\n          description: \u003e-\n            Amount in %s refunded (can be less than the amount attribute on the\n            fee if a partial refund was issued)\n          oneOf:\n            - type: integer\n        application:\n          description: ID of the Connect application that earned the fee.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/application'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact of this collected\n            application fee on your account balance (not including refunds).\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        charge:\n          description: ID of the charge that the application fee was taken from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        originating_transaction:\n          description: \u003e-\n            ID of the corresponding charge on the platform account, if this fee\n            was the result of a charge using the `destination` parameter.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n              - $ref: '#/components/schemas/transfer'\n          oneOf:\n            - type: string\n        refunded:\n          description: \u003e-\n            Whether or not the fee has been fully refunded. If the fee is only\n            partially refunded, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        refunds:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/fee_refund'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: FeeRefundList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n      required:\n        - account\n        - amount\n        - amount_refunded\n        - application\n        - balance_transaction\n        - charge\n        - created\n        - currency\n        - id\n        - livemode\n        - object\n        - refunded\n        - refunds\n      title: PlatformEarning\n      x-expandableFields:\n        - account\n        - application\n        - balance_transaction\n        - charge\n        - originating_transaction\n      x-resourceId: platform_earning\n      oneOf:\n        - type: object\n    platform_fee:\n      properties:\n        account:\n          description: ID of the Stripe account this fee was taken from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        amount:\n          description: 'Amount earned, in %s.'\n          oneOf:\n            - type: integer\n        amount_refunded:\n          description: ''\n          oneOf:\n            - type: integer\n        application:\n          description: ID of the Connect Application that earned the fee.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/application'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact of this collected\n            application fee on your account balance (not including refunds).\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        charge:\n          description: ID of the charge that the application fee was taken from.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        originating_transaction:\n          description: \u003e-\n            ID of the corresponding charge on the platform account, if this fee\n            was the result of a charge using the `destination` parameter.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n              - $ref: '#/components/schemas/transfer'\n          oneOf:\n            - type: string\n        refunded:\n          description: \u003e-\n            Whether or not the fee has been fully refunded. If the fee is only\n            partially refunded, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        refunds:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/fee_refund'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: FeeRefundList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n      required:\n        - account\n        - amount\n        - amount_refunded\n        - application\n        - balance_transaction\n        - charge\n        - created\n        - currency\n        - id\n        - livemode\n        - object\n        - refunded\n        - refunds\n      title: PlatformFee\n      x-expandableFields:\n        - account\n        - application\n        - balance_transaction\n        - charge\n        - originating_transaction\n      x-resourceId: platform_fee\n      oneOf:\n        - type: object\n    product:\n      properties:\n        active:\n          description: Whether or not the product is currently available for purchase.\n          oneOf:\n            - type: boolean\n        attributes:\n          description: \u003e-\n            A list of up to 5 attributes that each SKU can provide values for\n            (e.g. `[\"color\", \"size\"]`).\n          oneOf:\n            - type: array\n        caption:\n          description: \u003e-\n            A short one-line description of the product, meant to be displayable\n            to the customer.\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        deactivate_on:\n          description: \u003e-\n            An array of connect application identifiers that cannot purchase\n            this product.\n          oneOf:\n            - type: array\n        description:\n          description: 'The product''s description, meant to be displayable to the customer.'\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        images:\n          description: \u003e-\n            A list of up to 8 URLs of images for this product, meant to be\n            displayable to the customer.\n          oneOf:\n            - type: array\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        name:\n          description: 'The product''s name, meant to be displayable to the customer.'\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        package_dimensions:\n          $ref: '#/components/schemas/package_dimensions'\n        shippable:\n          description: Whether this product is a shipped good.\n          oneOf:\n            - type: boolean\n        skus:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/sku'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: SKUList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        updated:\n          description: ''\n          oneOf:\n            - type: integer\n        url:\n          description: A URL of a publicly-accessible webpage for this product.\n          oneOf:\n            - type: string\n      required:\n        - active\n        - created\n        - id\n        - images\n        - livemode\n        - metadata\n        - name\n        - object\n        - shippable\n        - skus\n        - updated\n      title: Product\n      x-expandableFields: []\n      x-resourceId: product\n      oneOf:\n        - type: object\n    refund:\n      properties:\n        amount:\n          description: 'Amount, in %s.'\n          oneOf:\n            - type: integer\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact on your account\n            balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        charge:\n          description: ID of the charge that was refunded.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        reason:\n          description: \u003e-\n            Reason for the refund. If set, possible values are `duplicate`,\n            `fraudulent`, and `requested_by_customer`.\n          oneOf:\n            - type: string\n        receipt_number:\n          description: \u003e-\n            This is the transaction number that appears on email receipts sent\n            for this refund.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Status of the refund. For credit card refunds, this will always be\n            `succeeded`. For other types of refunds, it can be `pending`,\n            `succeeded`, `failed`, or `cancelled`.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - created\n        - currency\n        - id\n        - metadata\n        - object\n      title: Refund\n      x-expandableFields:\n        - balance_transaction\n        - charge\n      x-resourceId: refund\n      oneOf:\n        - type: object\n    reserve_transaction:\n      properties:\n        amount:\n          description: ''\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - currency\n        - id\n        - object\n      title: ReserveTransaction\n      x-expandableFields: []\n      x-resourceId: reserve_transaction\n      oneOf:\n        - type: object\n    review:\n      properties:\n        charge:\n          description: The charge associated with this review.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        open:\n          description: 'If `true`, the review needs action.'\n          oneOf:\n            - type: boolean\n        reason:\n          description: \u003e-\n            The reason the review is currently open or closed. One of `rule`,\n            `manual`, `approved`, `refunded`, `refunded_as_fraud`, or\n            `disputed`.\n          oneOf:\n            - type: string\n      required:\n        - charge\n        - created\n        - id\n        - livemode\n        - object\n        - open\n        - reason\n      title: Review\n      x-expandableFields:\n        - charge\n      x-resourceId: review\n      oneOf:\n        - type: object\n    rule:\n      properties:\n        action:\n          description: \u003e-\n            The action (`allow`, `block`, or `manual_review`) taken on the\n            payment.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        predicate:\n          description: The predicate to evaluate the payment against.\n          oneOf:\n            - type: string\n      required:\n        - action\n        - id\n        - predicate\n      title: Rule\n      x-expandableFields: []\n      x-resourceId: rule\n      oneOf:\n        - type: object\n    shipping:\n      properties:\n        address:\n          $ref: '#/components/schemas/address'\n        carrier:\n          description: \u003e-\n            The delivery service that shipped a physical product, such as Fedex,\n            UPS, USPS, etc.\n          oneOf:\n            - type: string\n        name:\n          description: Recipient name.\n          oneOf:\n            - type: string\n        phone:\n          description: Recipient phone (including extension).\n          oneOf:\n            - type: string\n        tracking_number:\n          description: \u003e-\n            The tracking number for a physical product, obtained from the\n            delivery service. If multiple tracking numbers were generated for\n            this purchase, please separate them with commas.\n          oneOf:\n            - type: string\n      required:\n        - address\n        - name\n      title: Shipping\n      x-expandableFields: []\n      x-resourceId: shipping\n      oneOf:\n        - type: object\n    shipping_method:\n      properties:\n        amount:\n          description: \u003e-\n            A positive integer in the smallest currency unit (that is, 100 cents\n            for $1.00, or 1 for ¥1, Japanese Yen being a 0-decimal currency)\n            representing the total amount for the line item.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        delivery_estimate:\n          $ref: '#/components/schemas/delivery_estimate'\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - currency\n        - description\n        - id\n      title: ShippingMethod\n      x-expandableFields: []\n      x-resourceId: shipping_method\n      oneOf:\n        - type: object\n    sku:\n      properties:\n        active:\n          description: Whether or not the SKU is available for purchase.\n          oneOf:\n            - type: boolean\n        attributes:\n          description: \u003e-\n            A dictionary of attributes and values for the attributes defined by\n            the product. If, for example, a product's attributes are `[\"size\",\n            \"gender\"]`, a valid SKU has the following dictionary of attributes:\n            `{\"size\": \"Medium\", \"gender\": \"Unisex\"}`.\n          oneOf:\n            - type: object\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        image:\n          description: \u003e-\n            The URL of an image for this SKU, meant to be displayable to the\n            customer.\n          oneOf:\n            - type: string\n        inventory:\n          $ref: '#/components/schemas/inventory'\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        package_dimensions:\n          $ref: '#/components/schemas/package_dimensions'\n        price:\n          description: \u003e-\n            The cost of the item as a positive integer in the smallest currency\n            unit (that is, 100 cents to charge $1.00, or 100 to charge ¥100,\n            Japanese Yen being a 0-decimal currency).\n          oneOf:\n            - type: integer\n        product:\n          description: \u003e-\n            The ID of the product this SKU is associated with. The product must\n            be currently active.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/product'\n          oneOf:\n            - type: string\n        updated:\n          description: ''\n          oneOf:\n            - type: integer\n      required:\n        - active\n        - attributes\n        - created\n        - currency\n        - id\n        - inventory\n        - livemode\n        - metadata\n        - object\n        - price\n        - product\n        - updated\n      title: SKU\n      x-expandableFields:\n        - product\n      x-resourceId: sku\n      oneOf:\n        - type: object\n    source:\n      properties:\n        amount:\n          description: \u003e-\n            Amount associated with the source. This is the amount for which the\n            source will be chargeable once ready. Required for `single_use`\n            sources.\n          oneOf:\n            - type: integer\n        client_secret:\n          description: \u003e-\n            The client secret of the source. Used for client-side polling using\n            a publishable key.\n          oneOf:\n            - type: string\n        code_verification:\n          $ref: '#/components/schemas/source_code_verification_flow'\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            associated with the source. This is the currency for which the\n            source will be chargeable once ready. Required for `single_use`\n            sources.\n          oneOf:\n            - type: string\n        flow:\n          description: \u003e-\n            The authentication `flow` of the source. `flow` is one of\n            `redirect`, `receiver`, `code_verification`, `none`.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        owner:\n          $ref: '#/components/schemas/source_owner'\n        receiver:\n          $ref: '#/components/schemas/source_receiver_flow'\n        redirect:\n          $ref: '#/components/schemas/source_redirect_flow'\n        status:\n          description: \u003e-\n            The status of the charge, one of `canceled`, `chargeable`,\n            `consumed`, `failed`, or `pending`. Only `chargeable` source objects\n            can be used to create a charge.\n          oneOf:\n            - type: string\n        type:\n          description: \u003e-\n            The `type` of the source. The `type` is a payment method, one of\n            `card`, `three_d_secure`, `giropay`, `sepa_debit`, `ideal`,\n            `sofort`, or `bancontact`.\n          oneOf:\n            - type: string\n        usage:\n          description: \u003e-\n            Either `reusable` or `single_use`. Whether this source should be\n            reusable or not. Some source types may or may not be reusable by\n            construction, while other may leave the option at creation. If an\n            incompatible value is passed, an error will be returned.\n          oneOf:\n            - type: string\n      required:\n        - client_secret\n        - created\n        - flow\n        - id\n        - livemode\n        - object\n        - status\n        - type\n      title: Source\n      x-expandableFields: []\n      x-resourceId: source\n      oneOf:\n        - type: object\n    source_code_verification_flow:\n      properties:\n        attempts_remaining:\n          description: \u003e-\n            The number of attempts remaining to authenticate the source object\n            with a verification code.\n          oneOf:\n            - type: integer\n        status:\n          description: \u003e-\n            The status of the code verification, either `pending`, `succeeded`\n            or `failed`.\n          oneOf:\n            - type: string\n      required:\n        - attempts_remaining\n        - status\n      title: SourceCodeVerificationFlow\n      x-expandableFields: []\n      x-resourceId: source_code_verification_flow\n      oneOf:\n        - type: object\n    source_owner:\n      properties:\n        address:\n          $ref: '#/components/schemas/address'\n        email:\n          description: Owner's email address.\n          oneOf:\n            - type: string\n        name:\n          description: Owner's full name.\n          oneOf:\n            - type: string\n        phone:\n          description: Owner's phone number (including extension).\n          oneOf:\n            - type: string\n        verified_address:\n          $ref: '#/components/schemas/address'\n        verified_email:\n          description: Verified owner's email address.\n          oneOf:\n            - type: string\n        verified_name:\n          description: Verified owner's full name.\n          oneOf:\n            - type: string\n        verified_phone:\n          description: Verified owner's phone number (including extension).\n          oneOf:\n            - type: string\n      title: SourceOwner\n      x-expandableFields: []\n      x-resourceId: source_owner\n      oneOf:\n        - type: object\n    source_receiver_flow:\n      properties:\n        address:\n          description: \u003e-\n            The address of the receiver source. This is the value that should be\n            communicated to the customer to send their funds to.\n          oneOf:\n            - type: string\n        amount_charged:\n          description: \u003e-\n            The total amount that was charged by you. The amount charged is\n            expressed in the source's currency.\n          oneOf:\n            - type: integer\n        amount_received:\n          description: \u003e-\n            The total amount received by the receiver source. `amount_received =\n            amount_returned + amount_charged` is true at all time. The amount\n            received is expressed in the source's currency.\n          oneOf:\n            - type: integer\n        amount_returned:\n          description: \u003e-\n            The total amount that was returned to the customer. The amount\n            returned is expressed in the source's currency.\n          oneOf:\n            - type: integer\n      required:\n        - amount_charged\n        - amount_received\n        - amount_returned\n      title: SourceReceiverFlow\n      x-expandableFields: []\n      x-resourceId: source_receiver_flow\n      oneOf:\n        - type: object\n    source_redirect_flow:\n      properties:\n        return_url:\n          description: \u003e-\n            The URL you provide to redirect the customer to after they\n            authenticated their payment.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            The status of the redirect, either `pending`, `succeeded` or\n            `failed`.\n          oneOf:\n            - type: string\n        url:\n          description: \u003e-\n            The URL provided to you to redirect a customer to as part of a\n            `redirect` authentication flow.\n          oneOf:\n            - type: string\n      required:\n        - return_url\n        - status\n        - url\n      title: SourceRedirectFlow\n      x-expandableFields: []\n      x-resourceId: source_redirect_flow\n      oneOf:\n        - type: object\n    status_transitions:\n      properties:\n        canceled:\n          description: ''\n          oneOf:\n            - type: integer\n        fulfiled:\n          description: ''\n          oneOf:\n            - type: integer\n        paid:\n          description: ''\n          oneOf:\n            - type: integer\n        returned:\n          description: ''\n          oneOf:\n            - type: integer\n      title: StatusTransitions\n      x-expandableFields: []\n      x-resourceId: status_transitions\n      oneOf:\n        - type: object\n    subscription:\n      properties:\n        application_fee_percent:\n          description: \u003e-\n            A non-negative decimal (with at most two decimal places) between 0\n            and 100. This represents the percentage of the subscription invoice\n            subtotal that will be transferred to the application owner's Stripe\n            account.\n          oneOf:\n            - type: number\n        cancel_at_period_end:\n          description: \u003e-\n            If the subscription has been canceled with the `at_period_end` flag\n            set to `true`, `cancel_at_period_end` on the subscription will be\n            true. You can use this attribute to determine whether a subscription\n            that has a status of active is scheduled to be canceled at the end\n            of the current period.\n          oneOf:\n            - type: boolean\n        canceled_at:\n          description: \u003e-\n            If the subscription has been canceled, the date of that\n            cancellation. If the subscription was canceled with\n            `cancel_at_period_end`, canceled_at will still reflect the date of\n            the initial cancellation request, not the end of the subscription\n            period when the subscription is automatically moved to a canceled\n            state.\n          oneOf:\n            - type: integer\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        current_period_end:\n          description: \u003e-\n            End of the current period that the subscription has been invoiced\n            for. At the end of this period, a new invoice will be created.\n          oneOf:\n            - type: integer\n        current_period_start:\n          description: \u003e-\n            Start of the current period that the subscription has been invoiced\n            for.\n          oneOf:\n            - type: integer\n        customer:\n          description: ID of the customer who owns the subscription.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        discount:\n          $ref: '#/components/schemas/discount'\n        ended_at:\n          description: \u003e-\n            If the subscription has ended (either because it was canceled or\n            because the customer was switched to a subscription to a new plan),\n            the date the subscription ended.\n          oneOf:\n            - type: integer\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        items:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/subscription_item'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: SubscriptionItemList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        plan:\n          $ref: '#/components/schemas/plan'\n        quantity:\n          description: \u003e-\n            The quantity of the plan to which the customer should be subscribed.\n            For example, if your plan is $10/user/month, and your customer has 5\n            users, you could pass 5 as the quantity to have the customer charged\n            $50 (5 x $10) monthly.\n          oneOf:\n            - type: integer\n        start:\n          description: Date the most recent update to this subscription started.\n          oneOf:\n            - type: integer\n        status:\n          description: \u003e-\n            Possible values are `trialing`, `active`, `past_due`, `canceled`, or\n            `unpaid`. A subscription still in its trial period is `trialing` and\n            moves to `active` when the trial period is over. When payment to\n            renew the subscription fails, the subscription becomes `past_due`.\n            After Stripe has exhausted all payment retry attempts, the\n            subscription ends up with a status of either `canceled` or `unpaid`\n            depending on your retry settings. Note that when a subscription has\n            a status of `unpaid`, no subsequent invoices will be attempted\n            (invoices will be created, but then immediately automatically\n            closed. Additionally, updating customer card details will not lead\n            to Stripe retrying the latest invoice.). After receiving updated\n            card details from a customer, you may choose to reopen and pay their\n            closed invoices.\n          oneOf:\n            - type: string\n        tax_percent:\n          description: \u003e-\n            If provided, each invoice created by this subscription will apply\n            the tax rate, increasing the amount billed to the customer.\n          oneOf:\n            - type: number\n        trial_end:\n          description: 'If the subscription has a trial, the end of that trial.'\n          oneOf:\n            - type: integer\n        trial_start:\n          description: 'If the subscription has a trial, the beginning of that trial.'\n          oneOf:\n            - type: integer\n      required:\n        - cancel_at_period_end\n        - created\n        - customer\n        - id\n        - livemode\n        - metadata\n        - object\n        - start\n        - status\n      title: Subscription\n      x-expandableFields:\n        - customer\n      x-resourceId: subscription\n      oneOf:\n        - type: object\n    subscription_item:\n      properties:\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        plan:\n          $ref: '#/components/schemas/plan'\n        quantity:\n          description: \u003e-\n            The [quantity](/docs/subscriptions/quantities) of the plan to which\n            the customer should be subscribed.\n          oneOf:\n            - type: integer\n      required:\n        - created\n        - id\n        - object\n        - plan\n        - quantity\n      title: SubscriptionItem\n      x-expandableFields: []\n      x-resourceId: subscription_item\n      oneOf:\n        - type: object\n    three_d_secure:\n      properties:\n        amount:\n          description: ''\n          oneOf:\n            - type: integer\n        authenticated:\n          description: \u003e-\n            True if the cardholder went through the authentication flow and\n            their bank indicated that authentication succeeded.\n          oneOf:\n            - type: boolean\n        card:\n          $ref: '#/components/schemas/card'\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        redirect_url:\n          description: \u003e-\n            If present, this is the URL that you should send the cardholder to\n            for authentication. If you are going to use Stripe.js to display the\n            authentication page in an iframe, you should use the value\n            \"_callback\".\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Possible values are `redirect_pending`, `succeeded`, or `failed`.\n            When the cardholder can be authenticated, the object starts with\n            status `redirect_pending`. When liability will be shifted to the\n            cardholder's bank (either because the cardholder was successfully\n            authenticated, or because the bank has not implemented 3D Secure,\n            the object wlil be in status `succeeded`. `failed` indicates that\n            authentication was attempted unsuccessfully.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - authenticated\n        - card\n        - created\n        - currency\n        - id\n        - livemode\n        - object\n        - status\n      title: ThreeDSecure\n      x-expandableFields: []\n      x-resourceId: three_d_secure\n      oneOf:\n        - type: object\n    token:\n      properties:\n        bank_account:\n          $ref: '#/components/schemas/token_bank_account'\n        card:\n          $ref: '#/components/schemas/token_card'\n        client_ip:\n          description: IP address of the client that generated the token.\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        type:\n          description: 'Type of the token: `card` or `bank_account`.'\n          oneOf:\n            - type: string\n        used:\n          description: \u003e-\n            Whether or not this token has already been used (tokens can be used\n            only once).\n          oneOf:\n            - type: boolean\n      required:\n        - created\n        - id\n        - livemode\n        - object\n        - type\n        - used\n      title: Token\n      x-expandableFields: []\n      x-resourceId: token\n      oneOf:\n        - type: object\n    token_bank_account:\n      properties:\n        account_holder_name:\n          description: The name of the person or business that owns the bank account.\n          oneOf:\n            - type: string\n        account_holder_type:\n          description: \u003e-\n            The type of entity that holds the account. This can be either\n            `individual` or `company`.\n          oneOf:\n            - type: string\n        bank_name:\n          description: \u003e-\n            Name of the bank associated with the routing number, e.g. `WELLS\n            FARGO`.\n          oneOf:\n            - type: string\n        country:\n          description: \u003e-\n            Two-letter ISO code representing the country the bank account is\n            located in.\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO code for the\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support)\n            paid out to the bank account.\n          oneOf:\n            - type: string\n        fingerprint:\n          description: \u003e-\n            Uniquely identifies this particular bank account. You can use this\n            attribute to check whether two bank accounts are the same.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        last4:\n          description: ''\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        routing_number:\n          description: The routing transit number for the bank account.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Possible values are `new`, `validated`, `verified`,\n            `verification_failed`, or `errored`. A bank account that hasn't had\n            any activity or validation performed is `new`. If Stripe can\n            determine that the bank account exists, its status will be\n            `validated`. Note that there often isn’t enough information to know\n            (e.g. for smaller credit unions), and the validation is not always\n            run. If customer bank account verification has succeeded, the bank\n            account status will be `verified`. If the verification failed for\n            any reason, such as microdeposit failure, the status will be\n            `verification_failed`. If a transfer sent to this bank account\n            fails, we'll set the status to `errored` and will not continue to\n            send transfers until the bank details are updated.\n          oneOf:\n            - type: string\n      required:\n        - country\n        - currency\n        - id\n        - last4\n        - object\n        - status\n      title: TokenBankAccount\n      x-expandableFields: []\n      x-resourceId: token_bank_account\n      oneOf:\n        - type: object\n    token_card:\n      properties:\n        address_city:\n          description: City/District/Suburb/Town/Village.\n          oneOf:\n            - type: string\n        address_country:\n          description: 'Billing address country, if provided when creating card.'\n          oneOf:\n            - type: string\n        address_line1:\n          description: Address line 1 (Street address/PO Box/Company name).\n          oneOf:\n            - type: string\n        address_line1_check:\n          description: \u003e-\n            If `address_line1` was provided, results of the check: `pass`,\n            `fail`, `unavailable`, or `unchecked`.\n          oneOf:\n            - type: string\n        address_line2:\n          description: Address line 2 (Apartment/Suite/Unit/Building).\n          oneOf:\n            - type: string\n        address_state:\n          description: State/County/Province/Region.\n          oneOf:\n            - type: string\n        address_zip:\n          description: Zip/Postal Code.\n          oneOf:\n            - type: string\n        address_zip_check:\n          description: \u003e-\n            If `address_zip` was provided, results of the check: `pass`, `fail`,\n            `unavailable`, or `unchecked`.\n          oneOf:\n            - type: string\n        brand:\n          description: \u003e-\n            Card brand. Can be `Visa`, `American Express`, `MasterCard`,\n            `Discover`, `JCB`, `Diners Club`, or `Unknown`.\n          oneOf:\n            - type: string\n        country:\n          description: \u003e-\n            Two-letter ISO code representing the country of the card. You could\n            use this attribute to get a sense of the international breakdown of\n            cards you've collected.\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        cvc_check:\n          description: \u003e-\n            If a CVC was provided, results of the check: `pass`, `fail`,\n            `unavailable`, or `unchecked`.\n          oneOf:\n            - type: string\n        dynamic_last4:\n          description: \u003e-\n            (For tokenized numbers only.) The last four digits of the device\n            account number.\n          oneOf:\n            - type: string\n        exp_month:\n          description: Two digit number representing the card's expiration month.\n          oneOf:\n            - type: integer\n        exp_year:\n          description: Four digit number representing the card's expiration year.\n          oneOf:\n            - type: integer\n        fingerprint:\n          description: \u003e-\n            Uniquely identifies this particular card number. You can use this\n            attribute to check whether two customers who've signed up with you\n            are using the same card number, for example.\n          oneOf:\n            - type: string\n        funding:\n          description: \u003e-\n            Card funding type. Can be `credit`, `debit`, `prepaid`, or\n            `unknown`.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        last4:\n          description: The last 4 digits of the card.\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        name:\n          description: Cardholder name.\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        tokenization_method:\n          description: \u003e-\n            If the card number is tokenized, this is the method that was used.\n            Can be `apple_pay` or `android_pay`.\n          oneOf:\n            - type: string\n      required:\n        - brand\n        - exp_month\n        - exp_year\n        - funding\n        - id\n        - last4\n        - metadata\n        - object\n      title: TokenCard\n      x-expandableFields: []\n      x-resourceId: token_card\n      oneOf:\n        - type: object\n    transaction:\n      properties:\n        amount:\n          description: ''\n          oneOf:\n            - type: integer\n        authorization:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/authorization'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        card:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/issued_card'\n          oneOf:\n            - type: string\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        merchant_data:\n          $ref: '#/components/schemas/merchant_data'\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        type:\n          description: ''\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - balance_transaction\n        - card\n        - currency\n        - id\n        - merchant_data\n        - object\n        - type\n      title: Transaction\n      x-expandableFields:\n        - authorization\n        - balance_transaction\n        - card\n      x-resourceId: transaction\n      oneOf:\n        - type: object\n    transfer:\n      properties:\n        amount:\n          description: Amount in %s to be transferred.\n          oneOf:\n            - type: integer\n        amount_reversed:\n          description: \u003e-\n            Amount in %s reversed (can be less than the amount attribute on the\n            transfer if a partial reversal was issued).\n          oneOf:\n            - type: integer\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact of this transfer on\n            your account balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        created:\n          description: Time that this record of the transfer was first created.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        destination:\n          description: ID of the Stripe account the transfer was sent to.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        destination_payment:\n          description: \u003e-\n            If the destination is a Stripe account, this will be the ID of the\n            payment that the destination account received for the transfer.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            A set of key/value pairs that you can attach to a transfer object.\n            It can be useful for storing additional information about the\n            transfer in a structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        reversals:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/transfer_reversal'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: TransferReversalList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        reversed:\n          description: \u003e-\n            Whether or not the transfer has been fully reversed. If the transfer\n            is only partially reversed, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        source_transaction:\n          description: \u003e-\n            ID of the charge or payment that was used to fund the transfer. If\n            null, the transfer was funded from the available balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        source_type:\n          description: ''\n          oneOf:\n            - type: string\n        transfer_group:\n          description: \u003e-\n            A string that identifies this transaction as part of a group. See\n            the [Connect\n            documentation](/docs/connect/charges-transfers#grouping-transactions)\n            for details.\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - amount_reversed\n        - created\n        - currency\n        - id\n        - livemode\n        - metadata\n        - object\n        - reversals\n        - reversed\n      title: Transfer\n      x-expandableFields:\n        - balance_transaction\n        - destination\n        - destination_payment\n        - source_transaction\n      x-resourceId: transfer\n      oneOf:\n        - type: object\n    transfer_recipient:\n      properties:\n        active_account:\n          $ref: '#/components/schemas/bank_account'\n        cards:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/card'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: CardList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        default_card:\n          description: The default card to use for creating transfers to this recipient.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/card'\n          oneOf:\n            - type: string\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        email:\n          description: ''\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        migrated_to:\n          description: \u003e-\n            The ID of the [managed account](/docs/connect/managed-accounts) this\n            recipient was migrated to. If set, the recipient can no longer be\n            updated, nor can transfers be made to it: use the managed account\n            instead.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n          oneOf:\n            - type: string\n        name:\n          description: 'Full, legal name of the recipient.'\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        type:\n          description: 'Type of the recipient, one of `individual` or `corporation`.'\n          oneOf:\n            - type: string\n      required:\n        - created\n        - id\n        - livemode\n        - metadata\n        - object\n        - type\n      title: TransferRecipient\n      x-expandableFields:\n        - default_card\n        - migrated_to\n      x-resourceId: transfer_recipient\n      oneOf:\n        - type: object\n    transfer_recipient_transfer:\n      properties:\n        amount:\n          description: Amount (in %s) to be transferred to your bank account.\n          oneOf:\n            - type: integer\n        amount_reversed:\n          description: \u003e-\n            Amount in %s reversed (can be less than the amount attribute on the\n            transfer if a partial reversal was issued).\n          oneOf:\n            - type: integer\n        application_fee:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/backwards_compatible_platform_earning'\n          oneOf:\n            - type: string\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact of this transfer on\n            your account balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        date:\n          description: \u003e-\n            Date the transfer is scheduled to arrive in the bank. This factors\n            in delays like weekends or bank holidays.\n          oneOf:\n            - type: integer\n        description:\n          description: Internal-only description of the transfer.\n          oneOf:\n            - type: string\n        destination:\n          description: \u003e-\n            ID of the bank account, card, or Stripe account the transfer was\n            sent to.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/account'\n              - $ref: '#/components/schemas/bank_account'\n              - $ref: '#/components/schemas/card'\n          oneOf:\n            - type: string\n        destination_payment:\n          description: \u003e-\n            If the destination is a Stripe account, this will be the ID of the\n            payment that the destination account received for the transfer.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        failure_code:\n          description: \u003e-\n            Error code explaining reason for transfer failure if available. See\n            [Types of transfer failures](/docs/api#transfer_failures) for a list\n            of failure codes.\n          oneOf:\n            - type: string\n        failure_message:\n          description: \u003e-\n            Message to user further explaining reason for transfer failure if\n            available.\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        method:\n          description: \u003e-\n            The method used to send this transfer, which can be `standard` or\n            `instant`. `instant` is only supported for transfers to debit cards.\n            (See [Instant payouts for\n            marketplaces](/blog/instant-payouts-for-marketplaces) for more\n            information.)\n          oneOf:\n            - type: string\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        reversals:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/transfer_reversal'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: TransferReversalList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        reversed:\n          description: \u003e-\n            Whether or not the transfer has been fully reversed. If the transfer\n            is only partially reversed, this attribute will still be false.\n          oneOf:\n            - type: boolean\n        source_transaction:\n          description: \u003e-\n            ID of the charge (or other transaction) that was used to fund the\n            transfer. If null, the transfer was funded from the available\n            balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n              - $ref: '#/components/schemas/platform_fee'\n              - $ref: '#/components/schemas/transfer_reversal'\n          oneOf:\n            - type: string\n        source_type:\n          description: \u003e-\n            The source balance this transfer came from. One of `card`,\n            `bank_account`, `bitcoin_receiver`, or `alipay_account`.\n          oneOf:\n            - type: string\n        statement_descriptor:\n          description: \u003e-\n            Extra information about a transfer to be displayed on the user's\n            bank statement.\n          oneOf:\n            - type: string\n        status:\n          description: \u003e-\n            Current status of the transfer (`paid`, `pending`, `in_transit`,\n            `canceled` or `failed`). A transfer will be `pending` until it is\n            submitted to the bank, at which point it becomes `in_transit`. It\n            will then change to `paid` if the transaction goes through. If it\n            does not go through successfully, its status will change to `failed`\n            or `canceled`.\n          oneOf:\n            - type: string\n        transfer_group:\n          description: \u003e-\n            A string that identifies this transaction as part of a group. See\n            the [Connect\n            documentation](/docs/connect/charges-transfers#grouping-transactions)\n            for details.\n          oneOf:\n            - type: string\n        type:\n          description: 'Can be `card`, `bank_account`, or `stripe_account`.'\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - amount_reversed\n        - created\n        - currency\n        - date\n        - id\n        - livemode\n        - metadata\n        - object\n        - reversals\n        - reversed\n        - status\n        - type\n      title: TransferRecipientTransfer\n      x-expandableFields:\n        - application_fee\n        - balance_transaction\n        - destination\n        - destination_payment\n        - source_transaction\n      x-resourceId: transfer_recipient_transfer\n      oneOf:\n        - type: object\n    transfer_reversal:\n      properties:\n        amount:\n          description: 'Amount, in %s.'\n          oneOf:\n            - type: integer\n        balance_transaction:\n          description: \u003e-\n            Balance transaction that describes the impact on your account\n            balance.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/balance_transaction'\n          oneOf:\n            - type: string\n        created:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        id:\n          description: Unique identifier for the object.\n          oneOf:\n            - type: string\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        transfer:\n          description: ID of the transfer that was reversed.\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/legacy_transfer'\n              - $ref: '#/components/schemas/transfer'\n          oneOf:\n            - type: string\n      required:\n        - amount\n        - created\n        - currency\n        - id\n        - metadata\n        - object\n        - transfer\n      title: TransferReversal\n      x-expandableFields:\n        - balance_transaction\n        - transfer\n      x-resourceId: transfer_reversal\n      oneOf:\n        - type: object\n    transfer_schedule:\n      properties:\n        delay_days:\n          description: \u003e-\n            The number of days charges for the account will be held before being\n            paid out.\n          oneOf:\n            - type: integer\n        interval:\n          description: \u003e-\n            How frequently funds will be paid out. One of `manual` (transfers\n            only created via API call), `daily`, `weekly`, or `monthly`.\n          oneOf:\n            - type: string\n        monthly_anchor:\n          description: \u003e-\n            The day of the month funds will be paid out. Only shown if\n            `interval` is monthly.\n          oneOf:\n            - type: integer\n        weekly_anchor:\n          description: \u003e-\n            The day of the week funds will be paid out, of the style 'monday',\n            'tuesday', etc. Only shown if `interval` is weekly.\n          oneOf:\n            - type: string\n      required:\n        - delay_days\n        - interval\n      title: TransferSchedule\n      x-expandableFields: []\n      x-resourceId: transfer_schedule\n      oneOf:\n        - type: object\n    upcoming_invoice:\n      properties:\n        amount_due:\n          description: \u003e-\n            Final amount due at this time for this invoice. If the invoice's\n            total is smaller than the minimum charge amount, for example, or if\n            there is account credit that can be applied to the invoice, the\n            `amount_due` may be 0. If there is a positive `starting_balance` for\n            the invoice (the customer owes money), the amount_due will also take\n            that into account. The charge that gets generated for the invoice\n            will be for the amount specified in `amount_due`.\n          oneOf:\n            - type: integer\n        application_fee:\n          description: \u003e-\n            The fee in %s that will be applied to the invoice and transferred to\n            the application owner's Stripe account when the invoice is paid.\n          oneOf:\n            - type: integer\n        attempt_count:\n          description: \u003e-\n            Number of payment attempts made for this invoice, from the\n            perspective of the payment retry schedule. Any payment attempt\n            counts as the first attempt, and subsequently only automatic retries\n            increment the attempt count. In other words, manual payment attempts\n            after the first attempt do not affect the retry schedule.\n          oneOf:\n            - type: integer\n        attempted:\n          description: \u003e-\n            Whether or not an attempt has been made to pay the invoice. An\n            invoice is not attempted until 1 hour after the `invoice.created`\n            webhook, for example, so you might not want to display that invoice\n            as unpaid to your users.\n          oneOf:\n            - type: boolean\n        charge:\n          description: 'ID of the latest charge generated for this invoice, if any.'\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/charge'\n          oneOf:\n            - type: string\n        closed:\n          description: \u003e-\n            Whether or not the invoice is still trying to collect payment. An\n            invoice is closed if it's either paid or it has been marked closed.\n            A closed invoice will no longer attempt to collect payment.\n          oneOf:\n            - type: boolean\n        currency:\n          description: \u003e-\n            Three-letter [ISO currency\n            code](https://www.iso.org/iso-4217-currency-codes.html), in\n            lowercase. Must be a [supported\n            currency](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n          oneOf:\n            - type: string\n        customer:\n          description: ''\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/customer'\n          oneOf:\n            - type: string\n        date:\n          description: \u003e-\n            Time at which the object was created. Measured in seconds since the\n            Unix epoch.\n          oneOf:\n            - type: integer\n        description:\n          description: \u003e-\n            An arbitrary string attached to the object. Often useful for\n            displaying to users.\n          oneOf:\n            - type: string\n        discount:\n          $ref: '#/components/schemas/discount'\n        ending_balance:\n          description: \u003e-\n            Ending customer balance after attempting to pay invoice. If the\n            invoice has not been attempted yet, this will be null.\n          oneOf:\n            - type: integer\n        forgiven:\n          description: \u003e-\n            Whether or not the invoice has been forgiven. Forgiving an invoice\n            instructs us to update the subscription status as if the invoice\n            were successfully paid. Once an invoice has been forgiven, it cannot\n            be unforgiven or reopened.\n          oneOf:\n            - type: boolean\n        lines:\n          properties:\n            data:\n              oneOf:\n                - type: array\n                  items:\n                    $ref: '#/components/schemas/invoice_line_item'\n            has_more:\n              description: \u003e-\n                True if this list has another page of items after this one that\n                can be fetched.\n              oneOf:\n                - type: boolean\n            object:\n              description: \u003e-\n                String representing the object's type. Objects of the same type\n                share the same value. Always has the value \"list\".\n              enum:\n                - list\n              oneOf:\n                - type: string\n            total_count:\n              description: \u003e-\n                The total number of items available. This value is not included\n                by default, but you can request it by specifying\n                ?include[]=total_count.\n              oneOf:\n                - type: integer\n            url:\n              description: The URL where this list can be accessed.\n              oneOf:\n                - type: string\n          required:\n            - data\n            - has_more\n            - object\n            - url\n          title: InvoiceLinesList\n          x-expandableFields: []\n          oneOf:\n            - type: object\n        livemode:\n          description: Flag indicating whether the object exists in live mode or test mode.\n          oneOf:\n            - type: boolean\n        metadata:\n          description: \u003e-\n            Set of key/value pairs that you can attach to an object. It can be\n            useful for storing additional information about the object in a\n            structured format.\n          oneOf:\n            - type: object\n        next_payment_attempt:\n          description: The time at which payment will next be attempted.\n          oneOf:\n            - type: integer\n        object:\n          description: \u003e-\n            String representing the object's type. Objects of the same type\n            share the same value.\n          oneOf:\n            - type: string\n        paid:\n          description: \u003e-\n            Whether or not payment was successfully collected for this invoice.\n            An invoice can be paid (most commonly) with a charge or with credit\n            from the customer's account balance.\n          oneOf:\n            - type: boolean\n        period_end:\n          description: \u003e-\n            End of the usage period during which invoice items were added to\n            this invoice.\n          oneOf:\n            - type: integer\n        period_start:\n          description: \u003e-\n            Start of the usage period during which invoice items were added to\n            this invoice.\n          oneOf:\n            - type: integer\n        receipt_number:\n          description: \u003e-\n            This is the transaction number that appears on email receipts sent\n            for this invoice.\n          oneOf:\n            - type: string\n        starting_balance:\n          description: \u003e-\n            Starting customer balance before attempting to pay invoice. If the\n            invoice has not been attempted yet, this will be the current\n            customer balance.\n          oneOf:\n            - type: integer\n        statement_descriptor:\n          description: \u003e-\n            Extra information about an invoice for the customer's credit card\n            statement.\n          oneOf:\n            - type: string\n        subscription:\n          description: 'The subscription that this invoice was prepared for, if any.'\n          x-expansionResources:\n            oneOf:\n              - $ref: '#/components/schemas/subscription'\n          oneOf:\n            - type: string\n        subscription_proration_date:\n          description: \u003e-\n            Only set for upcoming invoices that preview prorations. The time\n            used to calculate prorations.\n          oneOf:\n            - type: integer\n        subtotal:\n          description: \u003e-\n            Total of all subscriptions, invoice items, and prorations on the\n            invoice before any discount is applied.\n          oneOf:\n            - type: integer\n        tax:\n          description: \u003e-\n            The amount of tax included in the total, calculated from\n            `tax_percent` and the subtotal. If no `tax_percent` is defined, this\n            value will be null.\n          oneOf:\n            - type: integer\n        tax_percent:\n          description: \u003e-\n            This percentage of the subtotal has been added to the total amount\n            of the invoice, including invoice line items and discounts. This\n            field is inherited from the subscription's `tax_percent` field, but\n            can be changed before the invoice is paid. This field defaults to\n            null.\n          oneOf:\n            - type: number\n        total:\n          description: Total after discount.\n          oneOf:\n            - type: integer\n        webhooks_delivered_at:\n          description: \u003e-\n            The time at which webhooks for this invoice were successfully\n            delivered (if the invoice had no webhooks to deliver, this will\n            match `date`). Invoice payment is delayed until webhooks are\n            delivered, or until all webhook delivery attempts have been\n            exhausted.\n          oneOf:\n            - type: integer\n      required:\n        - amount_due\n        - attempt_count\n        - attempted\n        - closed\n        - currency\n        - customer\n        - date\n        - forgiven\n        - lines\n        - livemode\n        - object\n        - paid\n        - period_end\n        - period_start\n        - starting_balance\n        - subtotal\n        - total\n      title: UpcomingInvoice\n      x-expandableFields:\n        - charge\n        - customer\n        - subscription\n      x-resourceId: upcoming_invoice\n      oneOf:\n        - type: object\n  responses: {}\n  parameters: {}\n  examples: {}\n  requestBodies:\n    payload:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              business_logo:\n                description: ''\n                title: business_logo\n                oneOf:\n                  - type: string\n              business_name:\n                description: The publicly sharable name for this account.\n                title: business_name\n                oneOf:\n                  - type: string\n              business_primary_color:\n                description: \u003e-\n                  A CSS hex color value representing the primary branding color\n                  for this account.\n                title: business_primary_color\n                oneOf:\n                  - type: string\n              business_url:\n                description: \u003e-\n                  The URL that best shows the service or product provided for\n                  this account.\n                title: business_url\n                oneOf:\n                  - type: string\n              debit_negative_balances:\n                description: \u003e-\n                  A boolean for whether or not Stripe should try to reclaim\n                  negative balances from the account holder's bank account. See\n                  our [managed account bank transfer\n                  guide](/docs/connect/account-balances) for more information.\n                title: debit_negative_balances\n                oneOf:\n                  - type: boolean\n              decline_charge_on:\n                description: \u003e-\n                  Account-level settings to automatically decline certain types\n                  of charges regardless of the bank's decision.\n                title: decline_charge_on\n                oneOf:\n                  - type: object\n              default_currency:\n                description: \u003e-\n                  Three-letter ISO currency code representing the default\n                  currency for the account. This must be a currency that [Stripe\n                  supports in the account's\n                  country](https://support.stripe.com/questions/which-currencies-does-stripe-support).\n                title: default_currency\n                oneOf:\n                  - type: string\n              email:\n                description: \u003e-\n                  Email address of the account holder. For standalone accounts,\n                  this is used to email them asking them to claim their Stripe\n                  account. For managed accounts, this is only to make the\n                  account easier to identify to you: Stripe will not email the\n                  account holder.\n                title: email\n                oneOf:\n                  - type: string\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              external_account:\n                description: \u003e-\n                  A card or bank account to attach to the account. You can\n                  provide either a token, like the ones returned by\n                  [Stripe.js](/docs/stripe.js), or a dictionary as documented in\n                  the external_account parameter for either\n                  [card](/docs/api#account_create_card) or [bank\n                  account](/docs/api#account_create_bank_account) creation.\n                  \u003cbr\u003e\u003cbr\u003eThis will create a new external account object, make\n                  it the new default external account for its currency, and\n                  delete the old default if one exists. If you want to add\n                  additional external accounts instead of replacing the existing\n                  default for this currency, use the bank account or card\n                  creation API.\n                title: external_account\n                oneOf:\n                  - type: object\n                  - type: string\n              legal_entity:\n                description: \u003e-\n                  Information about the account holder; varies by [account\n                  country](#country_spec_object-verification_fields) and\n                  [account status](#account_object-verification-fields_needed).\n                title: legal_entity\n                oneOf:\n                  - type: object\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to an account\n                  object. It can be useful for storing additional information\n                  about the account in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n              payout_schedule:\n                description: \u003e-\n                  Details on when this account will make funds from charges\n                  available, and when they will be paid out to the account\n                  holder's bank account. See our [managed account bank transfer\n                  guide](/docs/connect/bank-transfers#payout-information) for\n                  more information.\n                title: payout_schedule\n                oneOf:\n                  - type: object\n              payout_statement_descriptor:\n                description: \u003e-\n                  The text that will appear on the account's bank account\n                  statement for payouts. If not set, this will default to your\n                  platform's bank descriptor set on the Dashboard.\n                title: payout_statement_descriptor\n                oneOf:\n                  - type: string\n              product_description:\n                description: \u003e-\n                  Internal-only description of the product being sold or service\n                  being provided by this account. It's used by Stripe for risk\n                  and underwriting purposes.\n                title: product_description\n                oneOf:\n                  - type: string\n              statement_descriptor:\n                description: \u003e-\n                  The text that will appear on credit card statements by default\n                  if a charge is being made [directly on the\n                  account](/docs/connect/direct-charges).\n                title: statement_descriptor\n                oneOf:\n                  - type: string\n              support_email:\n                description: \u003e-\n                  A publicly shareable email address that can be reached for\n                  support for this account.\n                title: support_email\n                oneOf:\n                  - type: string\n              support_phone:\n                description: \u003e-\n                  A publicly shareable phone number that can be reached for\n                  support for this account.\n                title: support_phone\n                oneOf:\n                  - type: string\n              support_url:\n                description: \u003e-\n                  A publicly shareable URL that can be reached for support for\n                  this account.\n                title: support_url\n                oneOf:\n                  - type: string\n              tos_acceptance:\n                description: \u003e-\n                  Details on who accepted the Stripe terms of service, and when\n                  they accepted it. See our [updating managed accounts\n                  guide](/docs/connect/updating-accounts#tos-acceptance) for\n                  more information.\n                title: tos_acceptance\n                oneOf:\n                  - type: object\n    payload2:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              default_for_currency:\n                description: \u003e-\n                  If you set this to true (or if this is the first external\n                  account being added in this currency) this account will become\n                  the default external account for its currency.\n                title: default_for_currency\n                oneOf:\n                  - type: boolean\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              external_account:\n                description: This string to be replaced by DocSpecGenerator.\n                title: external_account\n                oneOf:\n                  - type: object\n                  - type: string\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to an external\n                  account object. It can be useful for storing additional\n                  information about the external account in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n            required:\n              - external_account\n    payload3:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n    payload4:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              default_for_currency:\n                description: \u003e-\n                  If set to `true`, this bank account will become the default\n                  external account for its currency.\n                title: default_for_currency\n                oneOf:\n                  - type: boolean\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: ''\n                title: metadata\n                oneOf:\n                  - type: object\n    payload5:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              alternate_statement_descriptors:\n                description: ''\n                title: alternate_statement_descriptors\n                oneOf:\n                  - type: object\n              amount:\n                description: ''\n                title: amount\n                oneOf:\n                  - type: integer\n              application:\n                description: ''\n                title: application\n                oneOf:\n                  - type: string\n              application_fee:\n                description: ''\n                title: application_fee\n                oneOf:\n                  - type: integer\n              capture:\n                description: ''\n                title: capture\n                oneOf:\n                  - type: boolean\n              currency:\n                description: ''\n                title: currency\n                oneOf:\n                  - type: string\n              customer:\n                description: ''\n                title: customer\n                oneOf:\n                  - type: string\n              description:\n                description: ''\n                title: description\n                oneOf:\n                  - type: string\n              destination:\n                description: ''\n                title: destination\n                oneOf:\n                  - type: object\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              external_id:\n                description: ''\n                title: external_id\n                oneOf:\n                  - type: string\n              idempotency_key:\n                description: ''\n                title: idempotency_key\n                oneOf:\n                  - type: string\n              invoice:\n                description: ''\n                title: invoice\n                oneOf:\n                  - type: string\n              invoice_source:\n                description: ''\n                title: invoice_source\n                oneOf:\n                  - type: string\n              ip:\n                description: ''\n                title: ip\n                oneOf:\n                  - type: string\n              level3:\n                description: ''\n                title: level3\n                oneOf:\n                  - type: object\n              metadata:\n                description: ''\n                title: metadata\n                oneOf:\n                  - type: object\n              on_behalf_of:\n                description: ''\n                title: on_behalf_of\n                oneOf:\n                  - type: string\n              order:\n                description: ''\n                title: order\n                oneOf:\n                  - type: string\n              payment_method:\n                description: ''\n                title: payment_method\n                oneOf:\n                  - type: string\n              payment_user_agent:\n                description: ''\n                title: payment_user_agent\n                oneOf:\n                  - type: string\n              receipt_email:\n                description: ''\n                title: receipt_email\n                oneOf:\n                  - type: string\n              recurring:\n                description: ''\n                title: recurring\n                oneOf:\n                  - type: boolean\n              referrer:\n                description: ''\n                title: referrer\n                oneOf:\n                  - type: string\n              shipping:\n                description: ''\n                title: shipping\n                oneOf:\n                  - type: object\n              source:\n                description: ''\n                title: source\n                oneOf:\n                  - type: string\n              statement_descriptor:\n                description: ''\n                title: statement_descriptor\n                oneOf:\n                  - type: string\n              three_d_secure:\n                description: ''\n                title: three_d_secure\n                oneOf:\n                  - type: object\n              transfer_group:\n                description: ''\n                title: transfer_group\n                oneOf:\n                  - type: string\n              trust:\n                description: ''\n                title: trust\n                oneOf:\n                  - type: object\n              uncaptured:\n                description: ''\n                title: uncaptured\n                oneOf:\n                  - type: boolean\n              user_agent:\n                description: ''\n                title: user_agent\n                oneOf:\n                  - type: string\n            required:\n              - amount\n              - currency\n    payload6:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              amount:\n                description: ''\n                title: amount\n                oneOf:\n                  - type: integer\n              description:\n                description: ''\n                title: description\n                oneOf:\n                  - type: string\n              directive:\n                description: ''\n                title: directive\n                oneOf:\n                  - type: string\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: ''\n                title: metadata\n                oneOf:\n                  - type: object\n              reason:\n                description: ''\n                title: reason\n                oneOf:\n                  - type: string\n              refund_address:\n                description: ''\n                title: refund_address\n                oneOf:\n                  - type: string\n              refund_application_fee:\n                description: ''\n                title: refund_application_fee\n                oneOf:\n                  - type: boolean\n              reverse_transfer:\n                description: ''\n                title: reverse_transfer\n                oneOf:\n                  - type: boolean\n    payload7:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              evidence:\n                description: \u003e-\n                  Evidence to upload to respond to a dispute. Updating any field\n                  in the hash will submit all fields in the hash for review.\n                title: evidence\n                oneOf:\n                  - type: object\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to a dispute\n                  object. It can be useful for storing additional information\n                  about the dispute in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n    payload8:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to a refund\n                  object. It can be useful for storing additional information\n                  about the refund in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n    payload9:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              account_balance:\n                description: \u003e-\n                  An integer amount in %s that is the starting account balance\n                  for your customer. A negative amount represents a credit that\n                  will be used before attempting any charges to the customer's\n                  card; a positive amount will be added to the next invoice.\n                title: account_balance\n                oneOf:\n                  - type: integer\n              business_vat_id:\n                description: \u003e-\n                  The customer's VAT identification number. If you are using\n                  Relay, this field gets passed to tax provider you are using\n                  for your orders.\n                title: business_vat_id\n                oneOf:\n                  - type: string\n              coupon:\n                description: \u003e-\n                  If you provide a coupon code, the customer will have a\n                  discount applied on all recurring charges. Charges you create\n                  through the API will not have the discount.\n                title: coupon\n                oneOf:\n                  - type: string\n              description:\n                description: \u003e-\n                  An arbitrary string that you can attach to a customer object.\n                  It is displayed alongside the customer in the dashboard.\n                title: description\n                oneOf:\n                  - type: string\n              email:\n                description: \u003e-\n                  Customer's email address. It's displayed alongside the\n                  customer in your dashboard and can be useful for searching and\n                  tracking.\n                title: email\n                oneOf:\n                  - type: string\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to a customer\n                  object. It can be useful for storing additional information\n                  about the customer in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n              shipping:\n                description: ''\n                title: shipping\n                oneOf:\n                  - type: object\n              source:\n                description: \u003e-\n                  The source can either be a token, like the ones returned by\n                  [Elements](/docs/elements), or a dictionary containing a\n                  user's credit card details (with the options shown below).\n                title: source\n                oneOf:\n                  - type: object\n                  - type: string\n    payload10:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to a card object.\n                  It can be useful for storing additional information about the\n                  card in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n              source:\n                description: This string to be replaced by DocSpecGenerator.\n                title: source\n                oneOf:\n                  - type: object\n                  - type: string\n            required:\n              - source\n    payload11:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              address_city:\n                description: ''\n                title: address_city\n                oneOf:\n                  - type: string\n              address_country:\n                description: ''\n                title: address_country\n                oneOf:\n                  - type: string\n              address_line1:\n                description: ''\n                title: address_line1\n                oneOf:\n                  - type: string\n              address_line2:\n                description: ''\n                title: address_line2\n                oneOf:\n                  - type: string\n              address_state:\n                description: ''\n                title: address_state\n                oneOf:\n                  - type: string\n              address_zip:\n                description: ''\n                title: address_zip\n                oneOf:\n                  - type: string\n              exp_month:\n                description: ''\n                title: exp_month\n                oneOf:\n                  - type: string\n              exp_year:\n                description: ''\n                title: exp_year\n                oneOf:\n                  - type: string\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              metadata:\n                description: ''\n                title: metadata\n                oneOf:\n                  - type: object\n              name:\n                description: ''\n                title: name\n                oneOf:\n                  - type: string\n    payload12:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              amounts:\n                description: \u003e-\n                  Two positive integers in **cents** equal to the values of the\n                  microdeposits sent to the bank account.\n                title: amounts\n                oneOf:\n                  - type: array\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              verification_method:\n                description: ''\n                title: verification_method\n                oneOf:\n                  - type: string\n    payload13:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              at_period_end:\n                description: \u003e-\n                  A flag that if set to true will delay the cancellation of the\n                  subscription until the end of the current period.\n                title: at_period_end\n                oneOf:\n                  - type: boolean\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n    payload14:\n      content:\n        application/x-www-form-urlencoded:\n          description: Body parameters for the request.\n          schema:\n            properties:\n              application_fee_percent:\n                description: \u003e-\n                  A non-negative decimal (with at most two decimal places)\n                  between 0 and 100. This represents the percentage of the\n                  subscription invoice subtotal that will be transferred to the\n                  application owner's Stripe account. The request must be made\n                  with an OAuth key in order to set an application fee\n                  percentage. For more information, see the application fees\n                  [documentation](https://stripe.com/docs/connect/subscriptions#collecting-fees-on-subscriptions')}).\n                title: application_fee_percent\n                oneOf:\n                  - type: number\n              coupon:\n                description: \u003e-\n                  The code of the coupon to apply to this subscription. A coupon\n                  applied to a subscription will only affect invoices created\n                  for that particular subscription.\n                title: coupon\n                oneOf:\n                  - type: string\n              expand:\n                description: Specifies which fields in the response should be expanded.\n                title: expand\n                oneOf:\n                  - type: array\n                    items:\n                      oneOf:\n                        - type: string\n                  - type: string\n              items:\n                description: 'List of subscription items, each with an attached plan.'\n                title: items\n                oneOf:\n                  - type: array\n              metadata:\n                description: \u003e-\n                  A set of key/value pairs that you can attach to a subscription\n                  object. It can be useful for storing additional information\n                  about the subscription in a structured format.\n                title: metadata\n                oneOf:\n                  - type: object\n              plan:\n                description: \u003e-\n                  The identifier of the plan to update the subscription to. If\n                  omitted, the subscription will not change plans.\n                title: plan\n                oneOf:\n                  - type: string\n              prorate:\n                description: \u003e-\n                  Flag telling us whether to prorate switching plans during a\n                  billing cycle.\n                title: prorate\n                oneOf:\n                  - type: boolean\n              proration_date:\n                description: \u003e-\n                  If set, the proration will be calculated as though the\n                  subscription was updated at the given time. This can be used\n                  to apply exactly the same proration that was previewed with\n                  [upcoming invoice](#retrieve_customer_invoice) endpoint. It\n                  can also be used to implement custom proration logic, such as\n                  prorating by day instead of by second, by providing the time\n                  that you wish to use for proration calculations.\n                title: proration_date\n                oneOf:\n                  - type: integer\n              quantity:\n                description: \u003e-\n                  The quantity you'd like to apply to the subscription you're\n                  updating. For example, if your plan is\n                  \u003ccurrency\u003e10\u003c/currency\u003e/user/month, and your customer has 5\n                  users, you could pass 5 as the quantity to have the customer\n                  charged \u003ccurrency\u003e50\u003c/currency\u003e (5 x \u003ccurrency\u003e10\u003c/currency\u003e)\n                  monthly. If you update a subscription but don't change the\n                  plan ID (e.g. changing only the trial_end), the subscription\n                  will inherit the old subscription's quantity attribute unless\n                  you pass a new quantity parameter. If you update a\n                  subscription and change the plan ID, the new subscription will\n                  not inherit the quantity attribute and will default to 1\n                  unless you pass a quantity parameter.\n                title: quantity\n                oneOf:\n                  - type: integer\n              source:\n                description: \u003e-\n                  The source can either be a token, like the ones returned by\n                  [Elements](https://stripe.com/docs/elements), or a dictionary\n                  containing a user's credit card details (with the options\n                  shown below). You must provide a source if the customer does\n                  not already have a valid source attached, and you are\n                  subscribing the customer for a plan that is not free. Passing\n                  `source` will create a new source object, make it the customer\n                  default source, and delete the old customer default if one\n                  exists. If you want to add an additional source to use with\n                  subscriptions, instead use the [card creation\n                  API](https://stripe.com/docs/api#create_card) to add the card\n                  and then the [customer update\n                  API](https://stripe.com/docs/api#update customer) to set it as\n                  the default. Whenever you attach a card to a customer, Stripe\n                  will automatically validate the card.\n                title: source\n                oneOf:\n                  - type: object\n                  - type: string\n              tax_percent:\n                description: \u003e-\n                  A non-negative decimal (with at most four decimal places)\n                  between 0 and 100. This represents the percentage of the\n                  subscription invoice subtotal that will be calculated and\n                  added as tax to the final amount each billing period. For\n                  example, a plan which charges $10/month with a `tax_percent`\n                  of 20.0 will charge $12 per invoice.\n                title: tax_percent\n                oneOf:\n                  - type: number\n              trial_end:\n                description: \u003e-\n                  Unix timestamp representing the end of the trial period the\n                  customer will get before being charged for the first time. If\n                  set, trial_end will override the default trial period of the\n                  plan the customer is being subscribed to. The special value\n                  `now` can be provided to end the customer's trial immediately.\n                title: trial_end\n                oneOf:\n                  - type: integer\n                  - type: string\n  securitySchemes: {}\n  headers: {}"
		}
	},
	"Error": "parse: parse spec: paths: /v1/customers/{customer}/cards/{id}: get: operation \"RetrieveCustomerCard\": parse path: path parameter not specified: \"customer\""
}