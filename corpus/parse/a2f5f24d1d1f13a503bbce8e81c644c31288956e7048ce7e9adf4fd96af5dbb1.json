{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/relxd/lxd-sdk"
		},
		"file": {
			"name": "lxd.yaml",
			"size": 0,
			"path": "openapi/lxd.yaml",
			"byteSize": 366971,
			"content": "openapi: 3.0.1\ninfo:\n  title: LXD\n  version: 1.0.0\n  description: The services listed below are referred as .....\n  contact:\n    name: Support Team\n    url: 'https://www.relxd.org/'\n    email: support@relxd.org\n  license:\n    name: Relxd General Licence\n    url: 'https://www.relxd.org/terms-of-service/'\nservers:\n  -\n    url: 'http://localhost:2375/'\n    description: LXD\npaths:\n  /:\n    get:\n      tags:\n        - supported-apis\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of supported APIs\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getApiList\n      description: List of supported APIs\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0:\n    get:\n      tags:\n        - server-config\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: Server configuration and environment information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getServerState\n      description: Server configuration and environment information\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replaces any existing config with the provided one\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServerStateRequest'\n      tags:\n        - server-config\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putServerState\n      description: Replaces the server configuration or other properties\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: 'Updates only the listed keys, rest remains intact'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateServerStateRequest'\n      tags:\n        - server-config\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchServerState\n      description: Updates the server configuration or other properties\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/certificates:\n    get:\n      tags:\n        - certificates\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of trusted certificates\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getCertificates\n      description: Return a list of trusted certificates\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Add a new trusted certificate\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCertificatesRequest'\n      tags:\n        - certificates\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postCertificates\n      description: Add a new trusted certificate\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/certificates/{fingerprint}':\n    get:\n      tags:\n        - certificates\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Trusted certificate information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getCertificatesByFingerPrint\n      description: Return a trusted certificate information\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replaces the certificate properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFingerprintRequest'\n      tags:\n        - certificates\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putFingerprint\n      description: Replaces the certificate properties\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - certificates\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteFingerprint\n      description: Remove a trusted certificate\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Updates the certificate properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFingerprintRequest'\n      tags:\n        - certificates\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchFingerprint\n      description: Updates the certificate properties\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/instances:\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of instances\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstances\n      description: Return a list of URLs for instances this server hosts\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateInstancesRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: form\n          explode: true\n          name: target\n          description: '?target=\u003cmember\u003e'\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstances\n      description: Create a new instance\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Instance information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByName\n      description: Get Instance information\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateInstancesByNameRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putInstancesByName\n      description: Replaces instance configuration or restore snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateInstancesByNameRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: target\n          description: '?target=\u003cmember\u003e'\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example_1:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: Background return value responses\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByName\n      description: Used to rename/migrate the instance\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByName\n      description: Remove the instance\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Update instance configuration\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchInstancesByNameRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchInstancesByName\n      description: Update instance configuration\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}/console':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Instance information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameConsole\n      description: Returns the contents of the instance's console log\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateInstancesByNameConsoleRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameConsole\n      description: Attach to an instance's console devices\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          description: empty response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByNameConsole\n      description: Empty the instance's console log\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/exec':\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateInstancesByNameExecRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: Background operation + optional websocket information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameExec\n      description: Run a remote command\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}/files':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: true\n          example: /path/inside/the/instance\n          name: path\n          description: directory listing from the instance\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: simple\n          explode: false\n          example: 0\n          name: X-LXD-uid\n          schema:\n            format: uuid\n            type: integer\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          example: 0\n          name: X-LXD-gid\n          schema:\n            format: uuid\n            type: integer\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          example: 700\n          name: X-LXD-mode\n          schema:\n            format: uuid\n            type: integer\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          name: X-LXD-type\n          description: one of directory or file\n          schema:\n            format: uuid\n            type: string\n          in: header\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RawFile'\n          description: Download a file or directory listing from the instance\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameFiles\n      description: Download a file or directory listing from the instance\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Upload a file to the instance\n        content:\n          image/*:\n            schema:\n              format: binary\n              type: string\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          example: /path/inside/the/instance\n          name: path\n          description: directory listing from the instance\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: simple\n          explode: false\n          example: 0\n          name: X-LXD-uid\n          schema:\n            format: uuid\n            type: integer\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          example: 0\n          name: X-LXD-gid\n          schema:\n            format: uuid\n            type: integer\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          example: 700\n          name: X-LXD-mode\n          schema:\n            format: uuid\n            type: integer\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          name: X-LXD-write\n          description: overwrite (or append)\n          schema:\n            format: uuid\n            type: string\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          name: X-LXD-type\n          description: one of directory or file or symlink\n          schema:\n            type: string\n          in: header\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameFiles\n      description: Upload a file to the instance\n      x-codegen-request-body-name: body\n      x-contentType: image/*\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          example: /path/inside/the/instance\n          name: path\n          description: directory listing from the instance\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByNameFiles\n      description: Delete a file in the instance\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/snapshots':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: snapshots response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameSnapshots\n      description: List of snapshots\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Create a new snapshot\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateInstancesByNameSnapshotRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameSnapshot\n      description: Create a new snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}/snapshots/{snapshotName}':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: snapshotName\n          description: Snapshot name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Snapshot information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameSnapshotsInformation\n      description: Snapshot information\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Update the snapshot\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateInstancesByNameSnapshotsInformationRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: snapshotName\n          description: Snapshot name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putInstancesByNameSnapshotsInformation\n      description: Update the snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateInstancesByNameSnapshotsInformationRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: snapshotName\n          description: Snapshot name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example_1:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n                Example_2:\n                  $ref: \u003e-\n                    #/components/examples/CreateInstancesByNameSnapshotsInformationResponse\n          description: Create Instances By Name Snapshots Information Response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameSnapshotsInformation\n      description: Used to rename/migrate the snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: snapshotName\n          description: Snapshot name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByNameSnapshotsInformation\n      description: Remove the snapshot\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/state':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Current state\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameState\n      description: Current state\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Change the instance state\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateInstancesByNameStateRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putInstancesByNameState\n      description: Change the instance state\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}/logs':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: Instances logs response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameLogs\n      description: \u003e-\n        Returns a list of the log files available for this instance. Note that this works on instances\n        that have been deleted (or were never created) to enable people to get logs for failed\n        creations.\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/logs/{logFile}':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: logFile\n          description: Instance log file\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: Instances logs response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameLogsFile\n      description: Returns the contents of a particular log file.\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: logFile\n          description: Instance log file\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByNameLogsFile\n      description: Delete a particular log file.\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/metadata':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Instance metadata\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameMetadata\n      description: Instance metadata\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replaces instance metadata\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetInstancesByNameMetadataResponse'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putInstancesByNameMetadata\n      description: Replaces instance metadata\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}/metadata/templates':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: true\n          name: path\n          description: Template\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: Instances metadata templates response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameMetadataTemplates\n      description: List instance templates\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replace content of a template\n        content:\n          file:\n            schema:\n              format: binary\n              type: string\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: path\n          description: Template\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putInstancesByNameMetadataTemplates\n      description: Replace content of a template\n      x-codegen-request-body-name: body\n      x-contentType: file\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Add a container template\n        content:\n          file:\n            schema:\n              format: binary\n              type: string\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: path\n          description: Template\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameMetadataTemplates\n      description: Add a container template\n      x-codegen-request-body-name: body\n      x-contentType: file\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: path\n          description: Template\n          schema:\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByNameMetadataTemplates\n      description: Delete an instance template\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/backups':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of backups for the instance\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameBackups\n      description: List of backups for the instance\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Create a new backup\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateInstancesByNameBackupsRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameBackups\n      description: Create a new backup\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/instances/{name}/backups/{backupsName}':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: backupsName\n          description: Backups name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Backup information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameBackupsByName\n      description: Backup information\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Used to rename the backup\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateInstancesByNameBackupsByNameRequest'\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: backupsName\n          description: Backups name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postInstancesByNameBackupsByName\n      description: Used to rename the backup\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: backupsName\n          description: Backups name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteInstancesByNameBackupsByName\n      description: Remove the backup\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/instances/{name}/backups/{backupsName}/export':\n    get:\n      tags:\n        - instances\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Instance name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: backupsName\n          description: Backups name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Fetch the backup tarball\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getInstancesByNameBackupsByNameExport\n      description: Fetch the backup tarball\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0/events:\n    get:\n      tags:\n        - events\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: false\n          name: type\n          description: Type\n          schema:\n            enum:\n              - operation\n              - logging\n              - lifecycle\n            type: string\n          in: query\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: websocket upgrade\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getEvents\n      description: Websocket upgrade\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0/images:\n    get:\n      tags:\n        - images\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of images (public or private)\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getImages\n      description: List of images (public or private)\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateImagesRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: form\n          explode: true\n          example: SHA-256\n          name: X-LXD-fingerprint\n          description: 'if set, uploaded file must match'\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: simple\n          explode: false\n          example: FILENAME\n          name: X-LXD-filename\n          description: used for export\n          schema:\n            type: string\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          example: true\n          name: X-LXD-public\n          description: defaults to false\n          schema:\n            type: boolean\n          in: header\n          required: false\n        -\n          style: simple\n          explode: false\n          example: URL-encoded key value pairs without duplicate keys\n          name: X-LXD-properties\n          schema:\n            type: string\n          in: header\n          required: false\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postImages\n      description: Create and publish a new image\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/images/{fingerprint}':\n    get:\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: true\n          name: secret\n          description: secret\n          schema:\n            type: string\n            example: SECRET\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Download the image tarball\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getImagesFingerprint\n      description: Image description and metadata\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: 'Replaces the image properties, update information and visibility'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateImagesFingerprintRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putImagesFingerprint\n      description: 'Replaces the image properties, update information and visibility'\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteImagesFingerprint\n      description: Remove an image\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: 'Updates the image properties, update information and visibility'\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchImagesFingerprintRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchImagesFingerprint\n      description: 'Updates the image properties, update information and visibility'\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/images/{fingerprint}/export':\n    get:\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: true\n          name: secret\n          description: secret\n          schema:\n            type: string\n            example: SECRET\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Download the image tarball\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getImagesByFingerprintExport\n      description: Download the image tarball\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Upload the image tarball\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateImagesFingerprintExportRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postImagesFingerprintExport\n      description: Upload the image tarball\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/images/{fingerprint}/refresh':\n    get:\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getImagesFingerprintRefresh\n      description: Refresh an image from its origin\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/images/{fingerprint}/secret':\n    post:\n      requestBody:\n        description: Generate a random token and tell LXD to expect it be used by a guest\n        content:\n          application/json:\n            schema:\n              type: object\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: fingerprint\n          description: Unique fingerprint\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postImagesFingerprintSecret\n      description: Generate a random token and tell LXD to expect it be used by a guest\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/images/aliases:\n    get:\n      tags:\n        - images\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of aliases (public or private based on image visibility)\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getImagesAliases\n      description: List of aliases (public or private based on image visibility)\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Create a new alias\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateImagesAliasesRequest'\n      tags:\n        - images\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postImagesAliases\n      description: Create a new alias\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/images/aliases/{name}':\n    get:\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the alias\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Snapshot information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getImagesAliasesByName\n      description: Alias description and target\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replaces the alias target or description\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateImagesAliasesByNameRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the alias\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putImagesAliasesByName\n      description: Replaces the alias target or description\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Rename an alias\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateImagesAliasesByNameRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the alias\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postImagesAliasesByName\n      description: Rename an alias\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the alias\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteImagesAliasesByName\n      description: Remove an alias\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Updates the alias target or description\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateImagesAliasesByNameRequest'\n      tags:\n        - images\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the alias\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchImagesAliasesByName\n      description: Updates the alias target or description\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/networks:\n    get:\n      tags:\n        - networks\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of networks\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getNetworks\n      description: List of networks\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Define a new network\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNetworksRequest'\n      tags:\n        - networks\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postNetworks\n      description: Define a new network\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/networks/{name}':\n    get:\n      tags:\n        - networks\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the network\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Information about a network\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getNetworksByName\n      description: Information about a network\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replace the network information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNetworksByNameRequest'\n      tags:\n        - networks\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the network\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putNetworksByName\n      description: Replace the network information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Rename a network\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateNetworksByNameRequest'\n      tags:\n        - networks\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the network\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/Response'\n          description: A standard value return response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postNetworksByName\n      description: Rename a network\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - networks\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the network\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteNetworksByName\n      description: Remove a network\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Update the network information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchNetworksByNameRequest'\n      tags:\n        - networks\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the network\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchNetworksByName\n      description: Update the network information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/networks/{name}/state':\n    get:\n      tags:\n        - networks\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Name of the network\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Network state\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getNetworksByNameState\n      description: Network state\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0/operations:\n    get:\n      tags:\n        - operations\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: List of operations\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getOperations\n      description: List of operations\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/operations/{uuid}':\n    get:\n      tags:\n        - operations\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: uuid\n          description: UUID\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Background operation\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getOperationsUUID\n      description: Background operation\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    delete:\n      tags:\n        - operations\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: uuid\n          description: UUID\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteOperationsUUID\n      description: \u003e-\n        Cancel an operation. Calling this will change the state to \"cancelling\" rather than actually\n        removing the entry.\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/operations/{uuid}/wait':\n    get:\n      tags:\n        - operations\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: uuid\n          description: UUID\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: true\n          name: timeout\n          description: timeout\n          schema:\n            type: number\n            example: 30\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Background operation\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getOperationsUUIDWait\n      description: Wait for an operation to finish\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/operations/{uuid}/websocket':\n    get:\n      tags:\n        - operations\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: uuid\n          description: UUID\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n        -\n          style: form\n          explode: true\n          name: secret\n          description: secret\n          schema:\n            type: string\n            example: SECRET\n          in: query\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Background operation\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getOperationsUUIDWebsocket\n      description: \u003e-\n        -\u003c This connection is upgraded into a websocket connection speaking the protocol defined by\n        the operation type. For example, in the case of an exec operation, the websocket is the\n        bidirectional pipe for stdin/stdout/stderr to flow to and from the process inside the\n        instance. In the case of migration, it will be the primary interface over which the migration\n        information is communicated. The secret here is the one that was provided when the operation\n        was created. Guests are allowed to connect provided they have the right secret.\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0/profiles:\n    get:\n      tags:\n        - profiles\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of configuration profiles\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getProfiles\n      description: List of configuration profiles\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Define a new profile\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProfilesRequest'\n      tags:\n        - profiles\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postProfiles\n      description: Define a new profile\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/profiles/{name}':\n    get:\n      tags:\n        - profiles\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Profiles name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Profile configuration\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getProfilesByName\n      description: Profile configuration\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replace the profile information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProfilesByNameRequest'\n      tags:\n        - profiles\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Profiles name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putProfilesByName\n      description: Replace the profile information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Rename a profile\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProfilesByNameRequest'\n      tags:\n        - profiles\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Profiles name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/Response'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postProfilesByName\n      description: Rename a profile\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - profiles\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Profiles name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteProfilesByName\n      description: Remove a profile\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Update the profile information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProfilesByNameRequest'\n      tags:\n        - profiles\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Profiles name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchProfilesByName\n      description: Update the profile information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/projects:\n    get:\n      tags:\n        - projects\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/GetProjectsResponse'\n          description: List of projects\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getProjects\n      description: List of projects\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Define a new project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProjectsRequest'\n      tags:\n        - projects\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postProjects\n      description: Define a new project\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/projects/{name}':\n    get:\n      tags:\n        - projects\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Projects name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Project configuration\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getProjectsByName\n      description: Project configuration\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replace the project information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectsByNameRequest'\n      tags:\n        - projects\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Projects name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putProjectsByName\n      description: Replace the project information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Rename a project\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProjectsByNameRequest'\n      tags:\n        - projects\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Projects name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/Response'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '409':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postProjectsByName\n      description: Rename a project\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - projects\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Projects name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteProjectsByName\n      description: Remove a project\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Update the project information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProjectsByNameRequest'\n      tags:\n        - projects\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Projects name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchProjectsByName\n      description: Update the project information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/storage-pools:\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/GetStoragePoolsResponse'\n          description: List of storage pools\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePools\n      description: List of storage pools\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Define a new storage pool\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStoragePoolsRequest'\n      tags:\n        - storage-pools\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postStoragePools\n      description: Define a new storage pool\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}':\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Information about a storage pool\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePoolsByName\n      description: Information about a storage pool\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Replace the storage pool information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStoragePoolsByNameRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putStoragePoolsByName\n      description: Replace the storage pool information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '403':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteStoragePoolsByName\n      description: Remove a storage pool\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Update the storage pool information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchStoragePoolsByNameRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchStoragePoolsByName\n      description: Update the storage pool information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}/resources':\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Profiles name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Information about the resources available to the storage pool\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePoolsByNameResources\n      description: Information about the resources available to the storage pool\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}/volumes':\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: list of storage volumes\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePoolsByNameVolumes\n      description: List of storage volumes\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postStoragePoolsByNameVolumes\n      description: Create a new storage volume on a given storage pool\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}/volumes/{type}':\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesByTypeRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postStoragePoolsByNameVolumesByType\n      description: Create a new storage volume of a particular type on a given storage pool\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}/volumes/{type}/{name}':\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Information about a storage volume of a given type on a storage pool\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePoolsByNameVolumesByTypeName\n      description: Information about a storage volume of a given type on a storage pool\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateStoragePoolsByNameVolumesByTypeNameRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putStoragePoolsByNameVolumesByTypeName\n      description: Replace the storage volume information or restore from snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        $ref: '#/components/requestBodies/CreateStoragePoolsByNameVolumesByTypeNameRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example_1:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n                Example_2:\n                  $ref: \u003e-\n                    #/components/examples/CreateStoragePoolsByNameVolumesByTypeNameResponse\n          description: Create Instances By Name Exec Response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postStoragePoolsByNameVolumesByTypeName\n      description: Rename a storage volume on a given storage pool\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteStoragePoolsByNameVolumesByTypeName\n      description: Delete a storage volume of a given type on a given storage pool\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    patch:\n      requestBody:\n        description: Update the storage volume information\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest2'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: patchStoragePoolsByNameVolumesByTypeName\n      description: Update the storage volume information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}/volumes/{type}/{name}/snapshots':\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of volume snapshots\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePoolsByNameVolumesByTypeNameSnapshots\n      description: List of volume snapshots\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Create a new volume snapshot\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameSnapshotsRequest'\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postStoragePoolsByNameVolumesByTypeNameSnapshots\n      description: Create a new volume snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  '/1.0/storage-pools/{pool}/volumes/{type}/{name}/snapshots/name':\n    get:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Snapshot information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getStoragePoolsByNameVolumesByTypeNameSnapshotsName\n      description: Snapshot information\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        description: Volume snapshot information\n        content:\n          application/json:\n            schema:\n              $ref: \u003e-\n                #/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Snapshot information\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putStoragePoolsByNameVolumesByTypeNameSnapshotsName\n      description: Volume snapshot information\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Used to rename the volume snapshot\n        content:\n          application/json:\n            schema:\n              $ref: \u003e-\n                #/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postStoragePoolsByNameVolumesByTypeNameSnapshotsName\n      description: Used to rename the volume snapshot\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - storage-pools\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: pool\n          description: Storage pool name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: type\n          description: Type of the volume\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: simple\n          explode: false\n          name: name\n          description: name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteStoragePoolsByNameVolumesByTypeNameSnapshotsName\n      description: Remove the volume snapshot\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0/resources:\n    get:\n      tags:\n        - resources\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Information about the resources available to the LXD server\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getResources\n      description: Information about the resources available to the LXD server\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  /1.0/cluster:\n    get:\n      tags:\n        - cluster\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Information about a cluster (such as networks and storage pools)\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getCluster\n      description: Information about a cluster (such as networks and storage pools)\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    put:\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateClusterRequest'\n      tags:\n        - cluster\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: putCluster\n      description: 'Bootstrap or join a cluster, or disable clustering on this node'\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n  /1.0/cluster/members:\n    get:\n      tags:\n        - cluster\n      parameters:\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: List of LXD members in the cluster\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getClusterMembers\n      description: List of LXD members in the cluster\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n  '/1.0/cluster/members/{name}':\n    get:\n      tags:\n        - cluster\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Members name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: recursion\n          description: \u003e-\n            To optimize queries of large lists, recursion is implemented for collections. The\n            default value is 0 which means that collection member URLs are returned. Setting it to\n            1 will have those URLs be replaced by the object they point to (typically a dict).\n          schema:\n            type: integer\n          in: query\n          required: false\n        -\n          style: pipeDelimited\n          explode: true\n          name: filter\n          description: \u003e-\n            There is no default value for filter which means that all results found will be\n            returned. The language follows the OData conventions for structuring REST API\n            filtering logic. Logical operators are also supported for filtering: not(not),\n            equals(eq), not equals(ne), and(and), or(or). Filters are evaluated with left\n            associativity. Values with spaces can be surrounded with quotes. Nesting filtering is\n            also supported.\n          schema:\n            type: string\n          in: query\n          required: false\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n          description: Retrieve the member's information and status\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: getClusterMembersByName\n      description: Retrieve the member's information and status\n      x-codegen-request-body-name: body\n      x-accepts: application/json\n    post:\n      requestBody:\n        description: Rename a cluster member\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateClusterMembersByNameRequest'\n      tags:\n        - cluster\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Members name\n          schema:\n            type: string\n          in: path\n          required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A standard return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: postClusterMembersByName\n      description: Rename a cluster member\n      x-codegen-request-body-name: body\n      x-contentType: application/json\n      x-accepts: application/json\n    delete:\n      tags:\n        - cluster\n      parameters:\n        -\n          style: simple\n          explode: false\n          name: name\n          description: Members name\n          schema:\n            type: string\n          in: path\n          required: true\n        -\n          style: form\n          explode: true\n          name: force\n          description: force\n          schema:\n            type: number\n          in: query\n          required: false\n      responses:\n        '202':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackgroundOperationResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/BackgroundOperationResponse'\n          description: A basic background return value response\n        '400':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n        '401':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n              examples:\n                Example:\n                  $ref: '#/components/examples/ErrorResponse'\n          description: A standard error response\n      operationId: deleteClusterMembersByName\n      description: Remove a member of the cluster\n      x-codegen-request-body-name: body\n      x-accepts: application/json\ncomponents:\n  schemas:\n    StandardReturnValueResponse:\n      required:\n        - status\n        - statusCode\n        - type\n        - metadata\n      type: object\n      properties:\n        type:\n          type: string\n          example: sync\n        status:\n          description: String version of the operation's status\n          type: string\n          example: Success\n        status_code:\n          description: Integer version of the operation's status (use this rather than status)\n          type: integer\n          example: 200\n        error:\n          type: string\n          example: Failure\n        error_code:\n          type: integer\n          example: 400\n        metadata:\n          type: object\n      example:\n        metadata: '{}'\n        status_code: 200\n        type: sync\n        status: Success\n        error: Failure\n        error_code: 400\n    BackgroundOperationResponse:\n      required:\n        - operation\n        - status\n        - statusCode\n        - type\n        - metadata\n      type: object\n      properties:\n        type:\n          type: string\n          example: async\n        status:\n          description: String version of the operation's status\n          type: string\n          example: OK\n        status_code:\n          description: Integer version of the operation's status (use this rather than status)\n          type: integer\n          example: 100\n        operation:\n          description: URL to the background operation\n          type: string\n          example: /1.0/instances/\u003cid\u003e\n        error:\n          type: string\n          example: Failure\n        error_code:\n          type: integer\n          example: 400\n        metadata:\n          type: object\n      example:\n        metadata: '{}'\n        status_code: 100\n        type: async\n        operation: /1.0/instances/\u003cid\u003e\n        status: OK\n        error_code: 0\n    ErrorResponse:\n      type: object\n      properties:\n        type:\n          type: string\n          example: error\n        error:\n          type: string\n          example: Failure\n        error_code:\n          type: integer\n          example: 400\n        metadata:\n          description: More details about the error\n          type: object\n    BasicBackgroundOperationResponse:\n      required:\n        - operation\n        - status\n        - statusCode\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          example: async\n        status:\n          description: String version of the operation's status\n          type: string\n          example: OK\n        status_code:\n          description: Integer version of the operation's status (use this rather than status)\n          type: integer\n          example: 100\n        operation:\n          description: URL to the background operation\n          type: string\n          example: /1.0/instances/\u003cid\u003e\n        metadata:\n          type: object\n      example:\n        metadata: '{}'\n        status_code: 100\n        type: async\n        operation: /1.0/instances/\u003cid\u003e\n        status: OK\n    GetServerStateResponse:\n      description: Return value (if trusted)\n      required:\n        - api_extensions\n        - api_status\n        - api_version\n        - auth\n        - public\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetServerStateResponse_metadata'\n      example:\n        metadata:\n          environment:\n            architectures:\n              - x86_64\n              - i686\n            server_pid: 10224\n            storage_version: '3.19'\n            server: lxc\n            addresses: '[1.2.3.4:8443,[1234::1234]:8443]'\n            kernel: Linux\n            certificate: PEM certificate\n            storage: btrfs\n            server_version: 0.8.1\n            kernel_architecture: x86_64\n            driver: lxc\n            kernel_version: '3.16'\n            driver_version: 1.0.6\n          api_extensions:\n            - api_extensions\n            - api_extensions\n          public: false\n          auth: '[\"guest\",\"untrusted\",\"trusted\"]'\n          api_status: stable\n          api_version: '1.0'\n          config:\n            core.https_address: '[::]:8443'\n            core.trust_password: true\n    ServerConfig:\n      type: object\n      properties:\n        core.trust_password:\n          type: string\n          example: my-password\n        core.https_address:\n          type: string\n          example: '[::]:8443'\n      example:\n        core.https_address: '[::]:8443'\n        core.trust_password: my-password\n    Environment:\n      type: object\n      properties:\n        addresses:\n          type: array\n          items:\n            type: string\n          example: '[1.2.3.4:8443,[1234::1234]:8443]'\n        architectures:\n          type: array\n          items:\n            type: string\n          example:\n            - x86_64\n            - i686\n        certificate:\n          type: string\n          example: PEM certificate\n        driver:\n          type: string\n          example: lxc\n        driver_version:\n          type: string\n          example: 1.0.6\n        kernel:\n          type: string\n          example: Linux\n        kernel_architecture:\n          type: string\n          example: x86_64\n        kernel_version:\n          type: string\n          example: '3.16'\n        server:\n          type: string\n          example: lxc\n        server_pid:\n          type: integer\n          example: 10224\n        server_version:\n          type: string\n          example: 0.8.1\n        storage:\n          type: string\n          example: btrfs\n        storage_version:\n          type: string\n          example: '3.19'\n      example:\n        architectures:\n          - x86_64\n          - i686\n        server_pid: 10224\n        storage_version: '3.19'\n        server: lxc\n        addresses: '[1.2.3.4:8443,[1234::1234]:8443]'\n        kernel: Linux\n        certificate: PEM certificate\n        storage: btrfs\n        server_version: 0.8.1\n        kernel_architecture: x86_64\n        driver: lxc\n        kernel_version: '3.16'\n        driver_version: 1.0.6\n    UpdateServerStateRequest:\n      $ref: '#/components/schemas/ServerConfig'\n    CreateCertificatesRequest:\n      type: object\n      properties:\n        type:\n          description: 'Certificate type (keyring), currently only client'\n          type: string\n          example: client\n        certificate:\n          description: \u003e-\n            If provided, a valid x509 certificate. If not, the client certificate of the\n            connection will be used\n          type: string\n          example: PEM certificate\n        name:\n          description: \u003e-\n            An optional name for the certificate. If nothing is provided, the host in the TLS\n            header for the request is used.\n          type: string\n          example: foo\n        password:\n          description: The trust password for that server (only required if untrusted)\n          type: string\n          example: server-trust-password\n      example:\n        password: server-trust-password\n        certificate: PEM certificate\n        name: foo\n        type: client\n    GetFingerprintResponse:\n      type: object\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetFingerprintResponse_metadata'\n      example:\n        metadata:\n          certificate: PEM certificate\n          name: foo\n          fingerprint: SHA256 Hash of the raw certificate\n          type: client\n    UpdateFingerprintRequest:\n      type: object\n      properties:\n        type:\n          description: 'Certificate type (keyring), currently only client'\n          type: string\n          example: client\n        name:\n          description: \u003e-\n            An optional name for the certificate. If nothing is provided, the host in the TLS\n            header for the request is used.\n          type: string\n          example: foo\n      example:\n        name: foo\n        type: client\n    Source:\n      required:\n        - type\n      type: object\n      properties:\n        type:\n          description: 'Can be \"image\", \"migration\", \"copy\" or \"none\".'\n          type: string\n          example: image\n        alias:\n          description: Name of the alias.\n          type: string\n          example: ubuntu/devel\n        fingerprint:\n          description: Fingerprint\n          type: string\n          example: SHA-256\n        properties:\n          $ref: '#/components/schemas/Properties'\n        mode:\n          description: One of \"local\" (default) or \"pull\"\n          type: string\n          example: pull\n        server:\n          description: Remote server (pull mode only)\n          type: string\n          example: 'https://10.0.2.3:8443'\n        protocol:\n          description: 'Protocol (one of lxd or simplestreams, defaults to lxd)'\n          type: string\n          example: lxd\n        certificate:\n          description: 'Optional PEM certificate. If not mentioned, system CA is used.'\n          type: string\n          example: PEM certificate\n        secret:\n          description: Secret to use to retrieve the image (pull mode only).\n          type: string\n          example: my-secret-string\n        operation:\n          description: Full URL to the remote operation (pull mode only).\n          type: string\n          example: 'https://10.0.2.3:8443/1.0/operations/\u003cUUID\u003e'\n        base-image:\n          description: 'Optional, the base image the instance was created from'\n          type: string\n          example: \u003cfingerprint\u003e\n        instance_only:\n          description: Whether to migrate only the instance without snapshots. Can be \"true\" or \"false\".\n          type: boolean\n          example: true\n        secrets:\n          $ref: '#/components/schemas/Secrets'\n        source:\n          description: Name of the source instance\n          type: string\n          example: my-old-instance\n        live:\n          description: Whether migration is performed live\n          type: boolean\n          example: true\n      example:\n        instance_only: true\n        server: 'https://10.0.2.3:8443'\n        certificate: PEM certificate\n        secret: my-secret-string\n        source: my-old-instance\n        type: image\n        secrets:\n          criu: my-other-secret\n          control: my-secret-string\n          fs: my third secret\n        mode: pull\n        protocol: lxd\n        base-image: \u003cfingerprint\u003e\n        fingerprint: SHA-256\n        alias: ubuntu/devel\n        operation: 'https://10.0.2.3:8443/1.0/operations/\u003cUUID\u003e'\n        properties:\n          os: ubuntu\n          release: '18.04'\n          architecture: x86_64\n        live: true\n    DevicesKvm:\n      type: object\n      properties:\n        kvm:\n          $ref: '#/components/schemas/Kvm'\n      example:\n        kvm:\n          path: /dev/kvm\n          type: unix-char\n    Kvm:\n      type: object\n      properties:\n        path:\n          type: string\n          example: /dev/kvm\n        type:\n          type: string\n          example: unix-char\n      example:\n        path: /dev/kvm\n        type: unix-char\n    Secrets:\n      type: object\n      properties:\n        control:\n          type: string\n          example: my-secret-string\n        criu:\n          type: string\n          example: my-other-secret\n        fs:\n          type: string\n          example: my third secret\n      example:\n        criu: my-other-secret\n        control: my-secret-string\n        fs: my third secret\n    Properties:\n      type: object\n      properties:\n        os:\n          type: string\n          example: ubuntu\n        release:\n          type: string\n          example: '18.04'\n        architecture:\n          type: string\n          example: x86_64\n      example:\n        os: ubuntu\n        release: '18.04'\n        architecture: x86_64\n    GetInstancesByNameResponse:\n      type: object\n      properties:\n        architecture:\n          type: string\n          example: x86_64\n        config:\n          $ref: '#/components/schemas/HardwareSpecsConfig'\n        created_at:\n          type: string\n          example: '2016-02-16T01:05:05.000Z'\n        devices:\n          $ref: '#/components/schemas/DevicesRoot'\n        ephemeral:\n          type: boolean\n          example: false\n        expanded_config:\n          $ref: '#/components/schemas/ExpandedConfig'\n        expanded_devices:\n          $ref: '#/components/schemas/ExpandedDevices'\n        last_used_at:\n          type: string\n          example: '2016-02-16T01:05:05.000Z'\n        name:\n          type: string\n          example: my-instance\n        profiles:\n          type: array\n          items:\n            type: string\n        stateful:\n          description: \u003e-\n            If true, indicates that the instance has some stored state that can be restored on\n            startup\n          type: boolean\n          example: false\n        status:\n          type: string\n          example: Running\n        status_code:\n          type: integer\n          example: 103\n      example:\n        status_code: 103\n        devices:\n          root:\n            path: /\n            type: disk\n        profiles:\n          - profiles\n          - profiles\n        created_at: '2016-02-16T01:05:05.000Z'\n        ephemeral: false\n        expanded_config:\n          limits.cpu: '3'\n          volatile.eth0.hwaddr: '00:16:3e:1c:94:38'\n          volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n        expanded_devices:\n          root:\n            path: /\n            type: disk\n          eth0:\n            nictype: bridged\n            parent: lxdbr0\n            name: eth0\n            type: nic\n        last_used_at: '2016-02-16T01:05:05.000Z'\n        name: my-instance\n        config:\n          limits.cpu: '3'\n          volatile.eth0.hwaddr: '00:16:3e:1c:94:38'\n          volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n        stateful: false\n        architecture: x86_64\n        status: Running\n    ExpandedConfig:\n      type: object\n      properties:\n        limits.cpu:\n          type: string\n          example: '3'\n        volatile.base_image:\n          type: string\n          example: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n        volatile.eth0.hwaddr:\n          type: string\n          example: '00:16:3e:1c:94:38'\n      example:\n        limits.cpu: '3'\n        volatile.eth0.hwaddr: '00:16:3e:1c:94:38'\n        volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n    ExpandedDevices:\n      type: object\n      properties:\n        eth0:\n          $ref: '#/components/schemas/Eth0'\n        root:\n          $ref: '#/components/schemas/Root'\n      example:\n        root:\n          path: /\n          type: disk\n        eth0:\n          nictype: bridged\n          parent: lxdbr0\n          name: eth0\n          type: nic\n    Eth0:\n      type: object\n      properties:\n        name:\n          type: string\n          example: eth0\n        nictype:\n          type: string\n          example: bridged\n        parent:\n          type: string\n          example: lxdbr0\n        type:\n          type: string\n          example: nic\n      example:\n        nictype: bridged\n        parent: lxdbr0\n        name: eth0\n        type: nic\n    DevicesRoot:\n      type: object\n      properties:\n        root:\n          $ref: '#/components/schemas/Root'\n      example:\n        root:\n          path: /\n          type: disk\n    Root:\n      type: object\n      properties:\n        path:\n          type: string\n          example: /\n        type:\n          type: string\n          example: disk\n      example:\n        path: /\n        type: disk\n    HardwareSpecsConfig:\n      type: object\n      properties:\n        limits.cpu:\n          type: string\n          example: '3'\n        volatile.base_image:\n          type: string\n          example: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n        volatile.eth0.hwaddr:\n          type: string\n          example: '00:16:3e:1c:94:38'\n      example:\n        limits.cpu: '3'\n        volatile.eth0.hwaddr: '00:16:3e:1c:94:38'\n        volatile.base_image: 97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n    UpdateInstancesByNameRequest:\n      oneOf:\n        -\n          $ref: '#/components/schemas/UpdateInstancesByNameRequest2'\n        -\n          $ref: '#/components/schemas/UpdateInstancesByNameRequest_oneOf'\n    UpdateInstancesByNameRequest2:\n      description: Input (restore snapshot)\n      type: object\n      properties:\n        restore:\n          type: string\n          example: snapshot-name\n    PatchInstancesByNameRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/CpuConfig'\n        devices:\n          $ref: '#/components/schemas/Devices3'\n        ephemeral:\n          type: boolean\n          example: true\n      example:\n        devices:\n          root:\n            path: /\n            size: 5GB\n            pool: default\n        ephemeral: true\n        config:\n          limits.cpu: '3'\n    CpuConfig:\n      type: object\n      properties:\n        limits.cpu:\n          type: string\n          example: '3'\n      example:\n        limits.cpu: '3'\n    Devices3:\n      type: object\n      properties:\n        root:\n          $ref: '#/components/schemas/Root2'\n      example:\n        root:\n          path: /\n          size: 5GB\n          pool: default\n    Root2:\n      type: object\n      properties:\n        path:\n          type: string\n          example: /\n        pool:\n          type: string\n          example: default\n        size:\n          type: string\n          example: 5GB\n      example:\n        path: /\n        size: 5GB\n        pool: default\n    CreateInstancesByNameRequest:\n      oneOf:\n        -\n          $ref: '#/components/schemas/MigrateInstancesByNameRequest'\n        -\n          $ref: '#/components/schemas/CreateInstancesByNameRequest_oneOf'\n    MigrateInstancesByNameRequest:\n      type: object\n      properties:\n        control:\n          type: string\n          example: secret1\n        criu:\n          type: string\n          example: secret2\n        fs:\n          type: string\n          example: secret3\n    CreateInstancesByNameConsoleRequest:\n      oneOf:\n        -\n          $ref: '#/components/schemas/WindowSizeChangeRequest'\n        -\n          $ref: '#/components/schemas/CreateInstancesByNameConsoleRequest_oneOf'\n    WindowSizeChangeRequest:\n      description: Control (window size change)\n      type: object\n      properties:\n        command:\n          type: string\n          example: window-resize\n        args:\n          $ref: '#/components/schemas/Args'\n    Args:\n      type: object\n      properties:\n        width:\n          type: string\n          example: '80'\n        height:\n          type: string\n          example: '50'\n    CreateInstancesByNameExecRequest:\n      oneOf:\n        -\n          $ref: '#/components/schemas/Sigusr1SignalRequest'\n        -\n          $ref: '#/components/schemas/WindowSizeChangeRequest'\n        -\n          $ref: '#/components/schemas/CreateInstancesByNameExecRequest_oneOf'\n    Sigusr1SignalRequest:\n      type: object\n      properties:\n        command:\n          type: string\n          example: signal\n        signal:\n          type: integer\n          example: 10\n    CreateInstancesByNameExecResponse1:\n      description: Return (with wait-for-websocket=true and interactive=false)\n      type: object\n      properties:\n        fds:\n          $ref: '#/components/schemas/Fds1'\n    Fds1:\n      type: object\n      properties:\n        '0':\n          type: string\n          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n        '1':\n          type: string\n          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n        '2':\n          type: string\n          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n        control:\n          type: string\n          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n    CreateInstancesByNameExecResponse2:\n      description: Return (with wait-for-websocket=true and interactive=true)\n      type: object\n      properties:\n        fds:\n          $ref: '#/components/schemas/Fds1'\n    Fds2:\n      type: object\n      properties:\n        '0':\n          type: string\n          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c2\n        control:\n          type: string\n          example: f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n    CreateInstancesByNameExecResponse3:\n      description: Return (with interactive=false and record-output=true)\n      type: object\n      properties:\n        fds:\n          $ref: '#/components/schemas/Output'\n        return:\n          type: integer\n          example: 0\n    Output:\n      type: object\n      properties:\n        '1':\n          type: string\n          example: /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stdout\n        '2':\n          type: string\n          example: /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stderr\n    RawFile:\n      oneOf:\n        -\n          $ref: '#/components/schemas/StandardReturnValueResponse'\n        -\n          type: object\n    CreateInstancesByNameSnapshotRequest:\n      type: object\n      properties:\n        name:\n          description: Name of the snapshot\n          type: string\n          example: my-snapshot\n        stateful:\n          description: Whether to include state too\n          type: boolean\n          example: true\n      example:\n        name: my-snapshot\n        stateful: true\n    GetSnapshotInformationResponse:\n      type: object\n      properties:\n        architecture:\n          type: string\n          example: x86_64\n        config:\n          $ref: '#/components/schemas/SecurityNestingConfig'\n        created_at:\n          type: string\n          example: '2016-03-08T23:55:08.000Z'\n        devices:\n          $ref: '#/components/schemas/ExpandedDevices'\n        ephemeral:\n          type: boolean\n          example: false\n        expanded_config:\n          $ref: '#/components/schemas/SecurityNestingConfig'\n        expanded_devices:\n          $ref: '#/components/schemas/ExpandedDevices'\n        name:\n          type: string\n          example: blah\n        profiles:\n          type: array\n          items:\n            type: string\n          example: default\n        size:\n          type: number\n          example: 738476032\n        stateful:\n          type: boolean\n          example: false\n      example:\n        size: 738476032\n        devices:\n          root:\n            path: /\n            type: disk\n          eth0:\n            nictype: bridged\n            parent: lxdbr0\n            name: eth0\n            type: nic\n        name: blah\n        profiles: default\n        created_at: '2016-03-08T23:55:08.000Z'\n        ephemeral: false\n        expanded_config:\n          volatile.last_state.idmap: \u003e-\n            [{\"Isuid\":true,\"Isgid\":false,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536}]\n          security.nesting: 'true'\n          volatile.eth0.hwaddr: '00:16:3e:ec:65:a8'\n          volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8\n        expanded_devices:\n          root:\n            path: /\n            type: disk\n          eth0:\n            nictype: bridged\n            parent: lxdbr0\n            name: eth0\n            type: nic\n        config:\n          volatile.last_state.idmap: \u003e-\n            [{\"Isuid\":true,\"Isgid\":false,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536}]\n          security.nesting: 'true'\n          volatile.eth0.hwaddr: '00:16:3e:ec:65:a8'\n          volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8\n        stateful: false\n        architecture: x86_64\n    SecurityNestingConfig:\n      type: object\n      properties:\n        security.nesting:\n          type: string\n          example: 'true'\n        volatile.base_image:\n          type: string\n          example: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8\n        volatile.eth0.hwaddr:\n          type: string\n          example: '00:16:3e:ec:65:a8'\n        volatile.last_state.idmap:\n          type: string\n          example: \u003e-\n            [{\"Isuid\":true,\"Isgid\":false,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536}]\n      example:\n        volatile.last_state.idmap: \u003e-\n          [{\"Isuid\":true,\"Isgid\":false,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536},{\"Isuid\":false,\"Isgid\":true,\"Hostid\":100000,\"Nsid\":0,\"Maprange\":65536}]\n        security.nesting: 'true'\n        volatile.eth0.hwaddr: '00:16:3e:ec:65:a8'\n        volatile.base_image: a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8\n    CreateInstancesByNameSnapshotsInformationRequest:\n      description: setup the migration source\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n        migration:\n          type: boolean\n          example: true\n        live:\n          type: string\n          example: 'true'\n      example:\n        name: new-name\n        migration: true\n        live: 'true'\n    UpdateInstancesByNameSnapshotsInformationRequest:\n      type: object\n      properties:\n        expires_at:\n          type: string\n          example: '2019-01-16T10:34:56.000Z'\n      example:\n        expires_at: '2019-01-16T10:34:56.000Z'\n    GetInstancesByNameStateResponse:\n      allOf:\n        -\n          $ref: '#/components/schemas/StandardReturnValueResponse'\n        -\n          $ref: '#/components/schemas/GetInstancesByNameStateResponse_allOf'\n    GetInstancesByNameStateMetadataResponse:\n      type: object\n      properties:\n        status:\n          type: string\n          example: Running\n        status_code:\n          type: number\n          example: 200\n        cpu:\n          $ref: '#/components/schemas/Cpu'\n        disk:\n          $ref: '#/components/schemas/Disk'\n        memory:\n          $ref: '#/components/schemas/Memory'\n        network:\n          $ref: '#/components/schemas/Network'\n        pid:\n          type: number\n          example: 13663\n        processes:\n          type: number\n          example: 32\n    Cpu:\n      type: object\n      properties:\n        usage:\n          type: number\n          example: 4986019722\n    Disk:\n      type: object\n      properties:\n        root:\n          $ref: '#/components/schemas/Root3'\n    Root3:\n      type: object\n      properties:\n        usage:\n          type: number\n          example: 4986019722\n    Memory:\n      type: object\n      properties:\n        usage:\n          type: number\n          example: 51126272\n        usage_peak:\n          type: number\n          example: 70246400\n        swap_usage:\n          type: number\n          example: 0\n        swap_usage_peak:\n          type: number\n          example: 0\n    Network:\n      type: object\n      properties:\n        eth0:\n          $ref: '#/components/schemas/Eth02'\n        lo:\n          $ref: '#/components/schemas/Eth02'\n        lxdbr0:\n          $ref: '#/components/schemas/Eth02'\n        zt0:\n          $ref: '#/components/schemas/Eth02'\n    Eth02:\n      type: object\n      properties:\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Addresses'\n        counters:\n          $ref: '#/components/schemas/Counters'\n        hwaddr:\n          type: string\n          example: '00:16:3e:ec:65:a8'\n        host_name:\n          type: string\n          example: vethBWTSU5\n        mtu:\n          type: number\n          example: 1500\n        state:\n          type: string\n          example: up\n        type:\n          type: string\n          example: broadcast\n    Addresses:\n      type: object\n      properties:\n        family:\n          type: string\n          example: init\n        address:\n          type: string\n          example: 10.0.3.27\n        netmask:\n          type: string\n          example: '24'\n        scope:\n          type: string\n          example: '24'\n      example:\n        address: 10.0.3.27\n        netmask: '24'\n        scope: '24'\n        family: init\n    Counters:\n      type: object\n      properties:\n        bytes_received:\n          type: number\n          example: 33942\n        bytes_sent:\n          type: number\n          example: 30810\n        packets_received:\n          type: number\n          example: 402\n        packets_sent:\n          type: number\n          example: 178\n      example:\n        packets_sent: 178\n        packets_received: 402\n        bytes_received: 33942\n        bytes_sent: 30810\n    UpdateInstancesByNameStateRequest:\n      type: object\n      properties:\n        action:\n          description: 'State change action (stop, start, restart, freeze or unfreeze)'\n          type: string\n          example: stop\n        timeout:\n          description: A timeout after which the state change is considered as failed\n          type: number\n          example: 30\n        force:\n          description: \u003e-\n            Force the state change (currently only valid for stop and restart where it means\n            killing the instance)\n          type: boolean\n          example: true\n        stateful:\n          description: \u003e-\n            Whether to store or restore runtime state before stopping or startiong (only valid for\n            stop and start, defaults to false)\n          type: boolean\n          example: true\n      example:\n        action: stop\n        force: true\n        timeout: 30\n        stateful: true\n    GetInstancesByNameMetadataResponse:\n      type: object\n      properties:\n        architecture:\n          type: string\n          example: x86_64\n        creation_date:\n          type: number\n          example: 1477146654\n        expiry_date:\n          type: number\n          example: 0\n        properties:\n          $ref: '#/components/schemas/Properties2'\n        templates:\n          $ref: '#/components/schemas/Templates'\n      example:\n        expiry_date: 0\n        templates:\n          /template:\n            template: template.tpl\n            when:\n              - when\n              - when\n            create_only: false\n            properties: '{}'\n        creation_date: 1477146654\n        properties:\n          os: BusyBox\n          name: busybox-x86_64\n          description: BusyBox x86_64\n          architecture: x86_64\n        architecture: x86_64\n    Properties2:\n      type: object\n      properties:\n        architecture:\n          type: string\n          example: x86_64\n        description:\n          type: string\n          example: BusyBox x86_64\n        name:\n          type: string\n          example: busybox-x86_64\n        os:\n          type: string\n          example: BusyBox\n      example:\n        os: BusyBox\n        name: busybox-x86_64\n        description: BusyBox x86_64\n        architecture: x86_64\n    Templates:\n      type: object\n      properties:\n        /template:\n          $ref: '#/components/schemas/Template'\n      example:\n        /template:\n          template: template.tpl\n          when:\n            - when\n            - when\n          create_only: false\n          properties: '{}'\n    Template:\n      type: object\n      properties:\n        when:\n          type: array\n          items:\n            type: string\n        create_only:\n          type: boolean\n          example: false\n        template:\n          type: string\n          example: template.tpl\n        properties:\n          type: object\n      example:\n        template: template.tpl\n        when:\n          - when\n          - when\n        create_only: false\n        properties: '{}'\n    CreateInstancesByNameBackupsRequest:\n      type: object\n      properties:\n        name:\n          description: Unique identifier for the backup\n          type: string\n          example: backupName\n        expiry:\n          description: When to delete the backup automatically\n          type: number\n          example: 3600\n        instance_only:\n          description: 'If True, snapshots aren''t included'\n          type: boolean\n          example: true\n        optimized_storage:\n          description: 'If True, btrfs send or zfs send is used for instance and snapshots'\n          type: boolean\n          example: true\n      example:\n        instance_only: true\n        optimized_storage: true\n        name: backupName\n        expiry: 3600\n    GetInstancesByNameBackupsByNameResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: backupName\n        creation_date:\n          type: string\n          example: '2018-04-23T10:16:09.000Z'\n        expiry_date:\n          type: string\n          example: '2018-04-23T10:16:09.000Z'\n        instance_only:\n          type: boolean\n          example: false\n        optimized_storage:\n          type: boolean\n          example: false\n      example:\n        instance_only: false\n        expiry_date: '2018-04-23T10:16:09.000Z'\n        optimized_storage: false\n        name: backupName\n        creation_date: '2018-04-23T10:16:09.000Z'\n    CreateInstancesByNameBackupsByNameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n      example:\n        name: new-name\n    GetInstancesByNameBackupsByNameExportResponse:\n      type: object\n      properties:\n        data:\n          type: string\n          example: \u003cbyte-stream\u003e\n      example:\n        data: \u003cbyte-stream\u003e\n    GetEventsResponse:\n      type: object\n      properties:\n        timestamp:\n          description: Current timestamp\n          type: string\n          example: '2015-06-10T01:07:24.379Z'\n        type:\n          description: Notification type\n          enum:\n            - operation\n            - logging\n            - lifecycle\n          type: string\n          example: operation\n        metadata:\n          $ref: '#/components/schemas/Metadata2'\n      example:\n        metadata:\n          level: info\n          context:\n            method: GET\n            ip: '@'\n            url: /1.0/instances/xen/snapshots\n          message: handling\n        type: operation\n        timestamp: '2015-06-10T01:07:24.379Z'\n    Metadata2:\n      type: object\n      properties:\n        context:\n          $ref: '#/components/schemas/Context'\n        level:\n          type: string\n          example: info\n        message:\n          type: string\n          example: handling\n      example:\n        level: info\n        context:\n          method: GET\n          ip: '@'\n          url: /1.0/instances/xen/snapshots\n        message: handling\n    Context:\n      type: object\n      properties:\n        ip:\n          type: string\n          example: '@'\n        method:\n          type: string\n          example: GET\n        url:\n          type: string\n          example: /1.0/instances/xen/snapshots\n      example:\n        method: GET\n        ip: '@'\n        url: /1.0/instances/xen/snapshots\n    CreateImagesRequest:\n      description: Source image dictionary (transfers a remote image)\n      required:\n        - aliases\n        - source\n      type: object\n      properties:\n        filename:\n          description: Used for export (optional)\n          type: string\n          example: filename\n        public:\n          description: Whether the image can be downloaded by untrusted users (defaults to false)\n          type: boolean\n          example: true\n        auto_update:\n          description: Whether the image should be auto-updated (optional; defaults to false)\n          type: boolean\n          example: true\n        properties:\n          $ref: '#/components/schemas/Properties3'\n        aliases:\n          description: Set initial aliases (\"image_create_aliases\" API extension)\n          type: array\n          items:\n            $ref: '#/components/schemas/Aliases'\n        source:\n          $ref: '#/components/schemas/Source10'\n        compression_algorithm:\n          description: Override the compression algorithm for the image (optional)\n          type: string\n          example: xz\n      example:\n        filename: filename\n        aliases:\n          -\n            name: my-alias\n            description: A description\n          -\n            name: my-alias\n            description: A description\n        public: true\n        auto_update: true\n        compression_algorithm: xz\n        source:\n          mode: pull\n          server: 'https://10.0.2.3:8443'\n          protocol: lxd\n          certificate: PEM certificate\n          fingerprint: SHA256\n          name: abc\n          alias: ubuntu/devel\n          secret: my-secret-string\n          type: image\n          url: 'https://www.some-server.com/image'\n        properties:\n          os: Ubuntu\n    Properties3:\n      type: object\n      properties:\n        os:\n          type: string\n          example: Ubuntu\n      example:\n        os: Ubuntu\n    Aliases:\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-alias\n        description:\n          type: string\n          example: A description\n      example:\n        name: my-alias\n        description: A description\n    Source10:\n      required:\n        - alias\n        - fingerprint\n        - mode\n        - protocol\n        - secret\n        - server\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          example: image\n        mode:\n          description: Only pull is supported for now\n          type: string\n          example: pull\n        server:\n          description: Remote server (pull mode only)\n          type: string\n          example: 'https://10.0.2.3:8443'\n        protocol:\n          description: 'Protocol (one of lxd or simplestreams, defaults to lxd)'\n          type: string\n          example: lxd\n        secret:\n          description: 'Secret (pull mode only, private images only)'\n          type: string\n          example: my-secret-string\n        certificate:\n          description: 'Optional PEM certificate. If not mentioned, system CA is used.'\n          type: string\n          example: PEM certificate\n        fingerprint:\n          description: Fingerprint of the image (must be set if alias isn't)\n          type: string\n          example: SHA256\n        alias:\n          description: Name of the alias (must be set if fingerprint isn't)\n          type: string\n          example: ubuntu/devel\n        name:\n          type: string\n          example: abc\n        url:\n          description: URL for the image\n          type: string\n          example: 'https://www.some-server.com/image'\n      example:\n        mode: pull\n        server: 'https://10.0.2.3:8443'\n        protocol: lxd\n        certificate: PEM certificate\n        fingerprint: SHA256\n        name: abc\n        alias: ubuntu/devel\n        secret: my-secret-string\n        type: image\n        url: 'https://www.some-server.com/image'\n    GetImagesFingerprintResponse:\n      type: object\n      properties:\n        aliases:\n          type: array\n          items:\n            $ref: '#/components/schemas/Aliases'\n        architecture:\n          type: string\n          example: x86_64\n        auto_update:\n          type: boolean\n          example: true\n        cached:\n          type: boolean\n          example: false\n        fingerprint:\n          type: string\n          example: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n        filename:\n          type: string\n          example: ubuntu-bionic-18.04-amd64-server-20180201.tar.xz\n        properties:\n          $ref: '#/components/schemas/Properties'\n        update_source:\n          $ref: '#/components/schemas/UpdateSource'\n        public:\n          type: boolean\n          example: false\n        size:\n          type: number\n          example: 123792592\n        created_at:\n          type: string\n          example: '2016-02-01T21:07:41.000Z'\n        expires_at:\n          type: string\n          example: '1970-01-01T00:00:00.000Z'\n        last_used_at:\n          type: string\n          example: '1970-01-01T00:00:00.000Z'\n        uploaded_at:\n          type: string\n          example: '2016-02-16T00:44:47.000Z'\n      example:\n        aliases:\n          -\n            name: my-alias\n            description: A description\n          -\n            name: my-alias\n            description: A description\n        created_at: '2016-02-01T21:07:41.000Z'\n        update_source:\n          server: 'https://10.1.2.4:8443'\n          protocol: lxd\n          certificate: PEM certificate\n          alias: ubuntu/bionic/amd64\n        last_used_at: '1970-01-01T00:00:00.000Z'\n        filename: ubuntu-bionic-18.04-amd64-server-20180201.tar.xz\n        expires_at: '1970-01-01T00:00:00.000Z'\n        auto_update: true\n        public: false\n        size: 123792592\n        uploaded_at: '2016-02-16T00:44:47.000Z'\n        cached: false\n        fingerprint: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n        properties:\n          os: ubuntu\n          release: '18.04'\n          architecture: x86_64\n        architecture: x86_64\n    Properties4:\n      type: object\n      properties:\n        architecture:\n          type: string\n          example: x86_64\n        description:\n          type: string\n          example: Ubuntu 18.04 LTS server (20180601)\n        release:\n          type: string\n          example: bionic\n        os:\n          type: string\n          example: ubuntu\n      example:\n        os: ubuntu\n        release: bionic\n        description: Ubuntu 18.04 LTS server (20180601)\n        architecture: x86_64\n    UpdateSource:\n      type: object\n      properties:\n        server:\n          type: string\n          example: 'https://10.1.2.4:8443'\n        protocol:\n          type: string\n          example: lxd\n        certificate:\n          type: string\n          example: PEM certificate\n        alias:\n          type: string\n          example: ubuntu/bionic/amd64\n      example:\n        server: 'https://10.1.2.4:8443'\n        protocol: lxd\n        certificate: PEM certificate\n        alias: ubuntu/bionic/amd64\n    UpdateImagesFingerprintRequest:\n      type: object\n      properties:\n        auto_update:\n          type: boolean\n          example: true\n        properties:\n          $ref: '#/components/schemas/Properties4'\n        public:\n          type: boolean\n          example: true\n      example:\n        auto_update: true\n        public: true\n        properties:\n          os: ubuntu\n          release: bionic\n          description: Ubuntu 18.04 LTS server (20180601)\n          architecture: x86_64\n    PatchImagesFingerprintRequest:\n      type: object\n      properties:\n        properties:\n          $ref: '#/components/schemas/Properties5'\n        public:\n          type: boolean\n          example: true\n      example:\n        public: true\n        properties:\n          os: ubuntu\n          release: bionic\n    Properties5:\n      type: object\n      properties:\n        os:\n          type: string\n          example: ubuntu\n        release:\n          type: string\n          example: bionic\n      example:\n        os: ubuntu\n        release: bionic\n    CreateImagesFingerprintExportRequest:\n      type: object\n      properties:\n        target:\n          type: string\n          example: target URL\n        secret:\n          type: string\n          example: secret\n        certificate:\n          type: string\n          example: target certificate\n        aliases:\n          type: array\n          items:\n            type: string\n          example:\n            - alias\n      example:\n        aliases:\n          - alias\n        certificate: target certificate\n        secret: secret\n        target: target URL\n    CreateImagesFingerprintSecretResponse:\n      required:\n        - status\n        - statusCode\n        - type\n      type: object\n      properties:\n        type:\n          type: string\n          example: sync\n        status:\n          description: String version of the operation's status\n          type: string\n          example: Success\n        status_code:\n          description: Integer version of the operation's status (use this rather than status)\n          type: integer\n          example: 200\n        metadata:\n          $ref: '#/components/schemas/Metadata3'\n      example:\n        metadata:\n          secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b\n        status_code: 200\n        type: sync\n        status: Success\n    Metadata3:\n      type: object\n      properties:\n        secret:\n          type: string\n          example: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b\n      example:\n        secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b\n    CreateImagesAliasesRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          example: The alias description\n        target:\n          type: string\n          example: SHA-256\n        name:\n          type: string\n          example: alias-name\n      example:\n        name: alias-name\n        description: The alias description\n        target: SHA-256\n    GetImagesAliasesByNameResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test\n        description:\n          type: string\n          example: my description\n        target:\n          type: string\n          example: c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f\n        type:\n          type: string\n          example: container\n      example:\n        name: test\n        description: my description\n        target: c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f\n    UpdateImagesAliasesByNameRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          example: New description\n        target:\n          type: string\n          example: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n      example:\n        description: New description\n        target: 54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n    CreateImagesAliasesByNameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n      example:\n        name: new-name\n    CreateNetworksRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-network\n        description:\n          type: string\n          example: My network\n        config:\n          $ref: '#/components/schemas/NetworkIPConfig'\n      example:\n        name: my-network\n        description: My network\n        config:\n          ipv4.address: none\n          ipv6.nat: 'true'\n          ipv6.address: '2001:470:b368:4242::1/64'\n    NetworkIPConfig:\n      type: object\n      properties:\n        ipv4.address:\n          type: string\n          example: none\n        ipv6.address:\n          type: string\n          example: '2001:470:b368:4242::1/64'\n        ipv6.nat:\n          type: string\n          example: 'true'\n      example:\n        ipv4.address: none\n        ipv6.nat: 'true'\n        ipv6.address: '2001:470:b368:4242::1/64'\n    GetNetworksByNameResponse:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/NetworkIPConfig'\n        name:\n          type: string\n          example: lxdbr0\n        managed:\n          type: boolean\n          example: false\n        type:\n          type: string\n          example: bridge\n        used_by:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/instances/blah\n      example:\n        managed: false\n        name: lxdbr0\n        type: bridge\n        config:\n          ipv4.address: none\n          ipv6.nat: 'true'\n          ipv6.address: '2001:470:b368:4242::1/64'\n        used_by:\n          - /1.0/instances/blah\n    UpdateNetworksByNameRequest:\n      type: object\n      properties:\n        bridge.driver:\n          type: string\n          example: openvswitch\n        ipv4.address:\n          type: string\n          example: 10.0.3.1/24\n        ipv6.address:\n          type: string\n          example: 'fd1:6997:4939:495d::1/64'\n      example:\n        bridge.driver: openvswitch\n        ipv4.address: 10.0.3.1/24\n        ipv6.address: 'fd1:6997:4939:495d::1/64'\n    PatchNetworksByNameRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/DNSModeConfig'\n      example:\n        config:\n          dns.mode: dynamic\n    DNSModeConfig:\n      type: object\n      properties:\n        dns.mode:\n          type: string\n          example: dynamic\n      example:\n        dns.mode: dynamic\n    CreateNetworksByNameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n      example:\n        name: new-name\n    GetNetworksByNameStateResponse:\n      type: object\n      properties:\n        addresses:\n          type: array\n          items:\n            $ref: '#/components/schemas/Addresses'\n        counters:\n          $ref: '#/components/schemas/Counters'\n        hwaddr:\n          type: string\n          example: '36:19:09:9b:f9:aa'\n        mtu:\n          type: number\n          example: 1500\n        state:\n          type: string\n          example: up\n        type:\n          type: string\n          example: broadcast\n      example:\n        addresses:\n          -\n            address: 10.0.3.27\n            netmask: '24'\n            scope: '24'\n            family: init\n          -\n            address: 10.0.3.27\n            netmask: '24'\n            scope: '24'\n            family: init\n        hwaddr: '36:19:09:9b:f9:aa'\n        counters:\n          packets_sent: 178\n          packets_received: 402\n          bytes_received: 33942\n          bytes_sent: 30810\n        state: up\n        type: broadcast\n        mtu: 1500\n    GetOperationsResponse:\n      type: object\n      properties:\n        success:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/operations/c0fc0d0d-a997-462b-842b-f8bd0df82507\n        running:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/operations/092a8755-fd90-4ce4-bf91-9f87d03fd5bc\n      example:\n        running:\n          - /1.0/operations/092a8755-fd90-4ce4-bf91-9f87d03fd5bc\n        success:\n          - /1.0/operations/c0fc0d0d-a997-462b-842b-f8bd0df82507\n    GetNetworksUUIDResponse:\n      type: object\n      properties:\n        id:\n          type: string\n          example: b8d84888-1dc2-44fd-b386-7f679e171ba5\n        class:\n          type: string\n          example: token\n        created_at:\n          type: string\n          example: '2016-02-17T21:59:27.237Z'\n        updated_at:\n          type: string\n          example: '2016-02-17T21:59:27.237Z'\n        status:\n          type: string\n          example: Running\n        status_code:\n          type: number\n          example: 103\n        resources:\n          $ref: '#/components/schemas/Resources'\n        metadata:\n          $ref: '#/components/schemas/Metadata'\n        may_cancel:\n          type: boolean\n          example: true\n        err:\n          type: string\n      example:\n        metadata:\n          secret: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d\n        status_code: 103\n        updated_at: '2016-02-17T21:59:27.237Z'\n        err: err\n        created_at: '2016-02-17T21:59:27.237Z'\n        resources:\n          images:\n            - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n        id: b8d84888-1dc2-44fd-b386-7f679e171ba5\n        class: token\n        status: Running\n        may_cancel: true\n    Resources:\n      type: object\n      properties:\n        images:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n      example:\n        images:\n          - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n    Metadata:\n      type: object\n      properties:\n        secret:\n          type: string\n          example: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d\n      example:\n        secret: c9209bee6df99315be1660dd215acde4aec89b8e5336039712fc11008d918b0d\n    Containers:\n      type: object\n      properties:\n        containers:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/instances/test\n    CreateProfilesRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-profilename\n        description:\n          type: string\n          example: Some description string\n        config:\n          $ref: '#/components/schemas/MemoryLimitsConfig'\n        devices:\n          $ref: '#/components/schemas/DevicesKvm'\n      example:\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        name: my-profilename\n        description: Some description string\n        config:\n          limits.memory: 2GB\n    MemoryLimitsConfig:\n      type: object\n      properties:\n        limits.memory:\n          type: string\n          example: 2GB\n      example:\n        limits.memory: 2GB\n    GetProfilesByNameResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test\n        description:\n          type: string\n          example: Some description string\n        config:\n          $ref: '#/components/schemas/MemoryLimitsConfig'\n        devices:\n          $ref: '#/components/schemas/DevicesKvm'\n        used_by:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/instances/blah\n      example:\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        name: test\n        description: Some description string\n        config:\n          limits.memory: 2GB\n        used_by:\n          - /1.0/instances/blah\n    UpdateProfilesByNameRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/MemoryLimitsConfig'\n        description:\n          type: string\n          example: Some description string\n        devices:\n          $ref: '#/components/schemas/DevicesKvm'\n      example:\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        description: Some description string\n        config:\n          limits.memory: 2GB\n    CreateProfilesByNameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n      example:\n        name: new-name\n    CreateProjectsRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test\n        config:\n          $ref: '#/components/schemas/FeaturesConfig'\n        description:\n          type: string\n          example: Some description string\n      example:\n        name: test\n        description: Some description string\n        config:\n          features.images: 'true'\n          features.profiles: 'true'\n    FeaturesConfig:\n      type: object\n      properties:\n        features.images:\n          type: string\n          example: 'true'\n        features.profiles:\n          type: string\n          example: 'true'\n      example:\n        features.images: 'true'\n        features.profiles: 'true'\n    GetProjectsByNameResponse:\n      type: object\n      properties:\n        name:\n          type: string\n          example: test\n        config:\n          $ref: '#/components/schemas/FeaturesConfig'\n        description:\n          type: string\n          example: Some description string\n        used_by:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/instances/blah\n      example:\n        name: test\n        description: Some description string\n        config:\n          features.images: 'true'\n          features.profiles: 'true'\n        used_by:\n          - /1.0/instances/blah\n    UpdateProjectsByNameRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/FeaturesConfig'\n        description:\n          type: string\n          example: Some description string\n      example:\n        description: Some description string\n        config:\n          features.images: 'true'\n          features.profiles: 'true'\n    CreateProjectsByNameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n      example:\n        name: new-name\n    CreateStoragePoolsRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/SizeConfig'\n        driver:\n          type: string\n          example: zfs\n        name:\n          type: string\n          example: pool1\n      example:\n        driver: zfs\n        name: pool1\n        config:\n          size: 10GB\n    SizeConfig:\n      type: object\n      properties:\n        size:\n          type: string\n          example: 10GB\n      example:\n        size: 10GB\n    GetStoragePoolsByNameResponse:\n      allOf:\n        -\n          $ref: '#/components/schemas/BackgroundOperationResponse'\n        -\n          $ref: '#/components/schemas/GetStoragePoolsByNameResponse_allOf'\n    GetStoragePoolsByNameResponseMetadata:\n      type: object\n      properties:\n        name:\n          type: string\n          example: default\n        driver:\n          type: string\n          example: zfs\n        used_by:\n          type: array\n          items:\n            type: string\n          example:\n            - /1.0/instances/alp1\n            - /1.0/instances/alp10\n            - /1.0/instances/alp11\n            - /1.0/instances/alp12\n            - /1.0/instances/alp13\n            - /1.0/instances/alp14\n            - /1.0/instances/alp15\n            - /1.0/instances/alp16\n            - /1.0/instances/alp17\n            - /1.0/instances/alp18\n            - /1.0/instances/alp19\n            - /1.0/instances/alp2\n            - /1.0/instances/alp20\n            - /1.0/instances/alp3\n            - /1.0/instances/alp4\n            - /1.0/instances/alp5\n            - /1.0/instances/alp6\n            - /1.0/instances/alp7\n            - /1.0/instances/alp8\n            - /1.0/instances/alp9\n            - /1.0/images/62e850a334bb9d99cac00b2e618e0291e5e7bb7db56c4246ecaf8e46fa0631a6\n        config:\n          $ref: '#/components/schemas/DiskConfig'\n    DiskConfig:\n      type: object\n      properties:\n        size:\n          type: string\n          example: '61203283968'\n        source:\n          type: string\n          example: /home/chb/mnt/l2/disks/default.img\n        volume.size:\n          type: string\n          example: '0'\n        zfs.pool_name:\n          type: string\n          example: default\n    UpdateStoragePoolsByNameRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/DiskAndLvmConfig'\n      example:\n        config:\n          lvm.vg_name: pool1\n          volume.block.filesystem: xfs\n          volume.block.mount_options: discard\n          size: '15032385536'\n          lvm.thinpool_name: LXDThinPool\n          source: pool1\n          volume.size: '10737418240'\n    DiskAndLvmConfig:\n      type: object\n      properties:\n        size:\n          type: string\n          example: '15032385536'\n        source:\n          type: string\n          example: pool1\n        volume.block.filesystem:\n          type: string\n          example: xfs\n        volume.block.mount_options:\n          type: string\n          example: discard\n        lvm.thinpool_name:\n          type: string\n          example: LXDThinPool\n        lvm.vg_name:\n          type: string\n          example: pool1\n        volume.size:\n          type: string\n          example: '10737418240'\n      example:\n        lvm.vg_name: pool1\n        volume.block.filesystem: xfs\n        volume.block.mount_options: discard\n        size: '15032385536'\n        lvm.thinpool_name: LXDThinPool\n        source: pool1\n        volume.size: '10737418240'\n    PatchStoragePoolsByNameRequest:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/VolumeBlockFileSystemConfig'\n      example:\n        config:\n          volume.block.filesystem: xfs\n    VolumeBlockFileSystemConfig:\n      type: object\n      properties:\n        volume.block.filesystem:\n          type: string\n          example: xfs\n      example:\n        volume.block.filesystem: xfs\n    GetStoragePoolsByNameResourcesResponse:\n      allOf:\n        -\n          $ref: '#/components/schemas/BackgroundOperationResponse'\n        -\n          $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponse_allOf'\n    GetStoragePoolsByNameResourcesResponseMetadata:\n      type: object\n      properties:\n        space:\n          $ref: '#/components/schemas/SpaceInodes'\n        inodes:\n          $ref: '#/components/schemas/SpaceInodes'\n    SpaceInodes:\n      type: object\n      properties:\n        used:\n          type: number\n          example: 3275333\n        total:\n          type: number\n          example: 18989056\n    CreateStoragePoolsByNameVolumesRequest:\n      description: Input (when migrating a volume)\n      type: object\n      properties:\n        config:\n          type: object\n          example: {}\n        name:\n          type: string\n          example: vol1\n        type:\n          type: string\n          example: custom\n        source:\n          $ref: '#/components/schemas/Source13'\n      example:\n        name: vol1\n        source:\n          mode: pull\n          pool: pool2\n          name: vol2\n          type: migration\n        type: custom\n        config: {}\n    Source13:\n      type: object\n      properties:\n        pool:\n          type: string\n          example: pool2\n        name:\n          type: string\n          example: vol2\n        type:\n          type: string\n          example: migration\n        mode:\n          type: string\n          example: pull\n      example:\n        mode: pull\n        pool: pool2\n        name: vol2\n        type: migration\n    CreateStoragePoolsByNameVolumesByTypeRequest:\n      description: Input (when copying a volume)\n      type: object\n      properties:\n        config:\n          type: object\n          example: {}\n        name:\n          type: string\n          example: vol1\n        source:\n          $ref: '#/components/schemas/Source13'\n      example:\n        name: vol1\n        source:\n          mode: pull\n          pool: pool2\n          name: vol2\n          type: migration\n        config: {}\n    GetStoragePoolsByNameVolumesByTypeNameResponse:\n      allOf:\n        -\n          $ref: '#/components/schemas/BackgroundOperationResponse'\n        -\n          $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponse_allOf'\n    GetStoragePoolsByNameVolumesByTypeNameResponseMetadata:\n      type: object\n      properties:\n        type:\n          type: string\n          example: custom\n        used_by:\n          type: array\n          items:\n            type: string\n        name:\n          type: string\n          example: vol1\n        config:\n          $ref: '#/components/schemas/BlockFileSystemAndMountOptionsConfig'\n    BlockFileSystemAndMountOptionsConfig:\n      type: object\n      properties:\n        block.filesystem:\n          type: string\n          example: ext4\n        block.mount_options:\n          type: string\n          example: discard\n        size:\n          type: string\n          example: '10737418240'\n    CreateStoragePoolsByNameVolumesByTypeNameRequest:\n      description: Input (migration across lxd instances)\n      type: object\n      properties:\n        name:\n          type: string\n          example: vol1\n        pool:\n          type: string\n          example: pool13\n        migration:\n          type: boolean\n          example: true\n      example:\n        name: vol1\n        pool: pool13\n        migration: true\n    UpdateStoragePoolsByNameVolumesByTypeNameRequest:\n      oneOf:\n        -\n          $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest2'\n        -\n          $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest_oneOf'\n    UpdateStoragePoolsByNameVolumesByTypeNameRequest2:\n      type: object\n      properties:\n        config:\n          $ref: '#/components/schemas/FileSystemMountOptionsAndThinPoolConfig'\n      example:\n        config:\n          lvm.vg_name: pool1\n          volume.block.filesystem: xfs\n          volume.block.mount_options: discard\n          size: '15032385536'\n          lvm.thinpool_name: LXDThinPool\n          source: pool1\n          volume.size: '10737418240'\n          used_by: used_by\n    FileSystemMountOptionsAndThinPoolConfig:\n      type: object\n      properties:\n        size:\n          type: string\n          example: '15032385536'\n        source:\n          type: string\n          example: pool1\n        used_by:\n          type: string\n        volume.block.filesystem:\n          type: string\n          example: xfs\n        volume.block.mount_options:\n          type: string\n          example: discard\n        lvm.thinpool_name:\n          type: string\n          example: LXDThinPool\n        lvm.vg_name:\n          type: string\n          example: pool1\n        volume.size:\n          type: string\n          example: '10737418240'\n      example:\n        lvm.vg_name: pool1\n        volume.block.filesystem: xfs\n        volume.block.mount_options: discard\n        size: '15032385536'\n        lvm.thinpool_name: LXDThinPool\n        source: pool1\n        volume.size: '10737418240'\n        used_by: used_by\n    CreateStoragePoolsByNameVolumesByTypeNameSnapshotsRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: my-snapshot\n      example:\n        name: my-snapshot\n    GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse:\n      type: object\n      properties:\n        config:\n          type: object\n          example: {}\n        name:\n          type: string\n          example: snap0\n        description:\n          type: string\n      example:\n        name: snap0\n        description: description\n        config: {}\n    UpdateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest:\n      type: object\n      properties:\n        description:\n          type: string\n          example: new-description\n      example:\n        description: new-description\n    CreateStoragePoolsByNameVolumesByTypeNameSnapshotsNameRequest:\n      type: object\n      properties:\n        name:\n          type: string\n          example: new-name\n      example:\n        name: new-name\n    GetResourcesResponse:\n      allOf:\n        -\n          $ref: '#/components/schemas/BackgroundOperationResponse'\n        -\n          $ref: '#/components/schemas/GetResourcesResponse_allOf'\n    GetResourcesResponseMetadata:\n      type: object\n      properties:\n        cpu:\n          $ref: '#/components/schemas/Cpu2'\n        memory:\n          $ref: '#/components/schemas/Memory2'\n    Cpu2:\n      type: object\n      properties:\n        sockets:\n          type: array\n          items:\n            $ref: '#/components/schemas/Sockets'\n        total:\n          type: number\n          example: 2\n    Sockets:\n      type: object\n      properties:\n        cores:\n          type: number\n          example: 2\n        frequency:\n          type: number\n          example: 2691\n        frequency_turbo:\n          type: number\n          example: 3400\n        name:\n          type: string\n          example: GenuineIntel\n        vendor:\n          type: string\n          example: Intel(R) Core(TM) i5-3340M CPU @ 2.70GHz\n        threads:\n          type: number\n          example: 4\n    Memory2:\n      type: object\n      properties:\n        used:\n          type: number\n          example: 51126272\n        total:\n          type: number\n          example: 70246400\n    GetClusterResponse:\n      type: object\n      properties:\n        server_name:\n          type: string\n          example: node1\n        enabled:\n          type: boolean\n          example: true\n        member_config:\n          type: array\n          items:\n            $ref: '#/components/schemas/MemberConfig'\n      example:\n        server_name: node1\n        member_config:\n          -\n            name: local\n            description: '\"source\" property for storage pool \"local\"'\n            entity: storage-pool\n            key: source\n          -\n            name: local\n            description: '\"source\" property for storage pool \"local\"'\n            entity: storage-pool\n            key: source\n        enabled: true\n    MemberConfig:\n      type: object\n      properties:\n        entity:\n          type: string\n          example: storage-pool\n        name:\n          type: string\n          example: local\n        key:\n          type: string\n          example: source\n        description:\n          type: string\n          example: '\"source\" property for storage pool \"local\"'\n      example:\n        name: local\n        description: '\"source\" property for storage pool \"local\"'\n        entity: storage-pool\n        key: source\n    UpdateClusterRequest:\n      description: Input (request to join an existing cluster)\n      type: object\n      properties:\n        server_name:\n          type: string\n          example: node2\n        server_address:\n          type: string\n          example: '10.1.1.102:8443'\n        enabled:\n          type: boolean\n          example: true\n        cluster_address:\n          type: string\n          example: '10.1.1.101:8443'\n        cluster_certificate:\n          type: string\n          example: BEGIN CERTIFICATE-----MIFf-----END CERTIFICATE-----\n        cluster_password:\n          type: string\n          example: sekret\n        member_config:\n          type: array\n          items:\n            $ref: '#/components/schemas/MemberConfig2'\n      example:\n        server_name: node2\n        member_config:\n          -\n            name: local\n            value: /dev/sdb\n            entity: storage-pool\n            key: source\n          -\n            name: local\n            value: /dev/sdb\n            entity: storage-pool\n            key: source\n        cluster_address: '10.1.1.101:8443'\n        server_address: '10.1.1.102:8443'\n        cluster_certificate: BEGIN CERTIFICATE-----MIFf-----END CERTIFICATE-----\n        enabled: true\n        cluster_password: sekret\n    MemberConfig2:\n      type: object\n      properties:\n        entity:\n          type: string\n          example: storage-pool\n        name:\n          type: string\n          example: local\n        key:\n          type: string\n          example: source\n        value:\n          type: string\n          example: /dev/sdb\n      example:\n        name: local\n        value: /dev/sdb\n        entity: storage-pool\n        key: source\n    GetClusterMembersByNameResponse:\n      type: object\n      properties:\n        server_name:\n          type: string\n          example: lxd1\n        url:\n          type: string\n          example: 'https://10.1.1.101:8443'\n        database:\n          type: boolean\n          example: true\n        status:\n          type: string\n          example: Online\n        message:\n          type: string\n          example: fully operational\n      example:\n        server_name: lxd1\n        database: true\n        message: fully operational\n        url: 'https://10.1.1.101:8443'\n        status: Online\n    UpdateClusterMembersByNameRequest:\n      type: object\n      properties:\n        server_name:\n          type: string\n          example: node1\n      example:\n        server_name: node1\n    GetServerStateResponse_metadata:\n      properties:\n        api_extensions:\n          description: List of API extensions added after the API was marked stable\n          type: array\n          items:\n            type: string\n        api_status:\n          description: 'API implementation status (one of, development, stable or deprecated)'\n          type: string\n          example: stable\n        api_version:\n          description: The API version as a string\n          type: string\n          example: '1.0'\n        auth:\n          description: Authentication state.\n          type: string\n          example: '[\"guest\",\"untrusted\",\"trusted\"]'\n        config:\n          $ref: '#/components/schemas/ServerConfig'\n        environment:\n          $ref: '#/components/schemas/Environment'\n        public:\n          description: Whether the server should be treated as a public (read-only) remote by the client\n          type: boolean\n          example: false\n      example:\n        environment:\n          architectures:\n            - x86_64\n            - i686\n          server_pid: 10224\n          storage_version: '3.19'\n          server: lxc\n          addresses: '[1.2.3.4:8443,[1234::1234]:8443]'\n          kernel: Linux\n          certificate: PEM certificate\n          storage: btrfs\n          server_version: 0.8.1\n          kernel_architecture: x86_64\n          driver: lxc\n          kernel_version: '3.16'\n          driver_version: 1.0.6\n        api_extensions:\n          - api_extensions\n          - api_extensions\n        public: false\n        auth: '[\"guest\",\"untrusted\",\"trusted\"]'\n        api_status: stable\n        api_version: '1.0'\n        config:\n          core.https_address: '[::]:8443'\n          core.trust_password: true\n    GetFingerprintResponse_metadata:\n      properties:\n        type:\n          description: 'Certificate type (keyring), currently only client'\n          type: string\n          example: client\n        certificate:\n          description: \u003e-\n            If provided, a valid x509 certificate. If not, the client certificate of the\n            connection will be used\n          type: string\n          example: PEM certificate\n        name:\n          description: \u003e-\n            An optional name for the certificate. If nothing is provided, the host in the TLS\n            header for the request is used.\n          type: string\n          example: foo\n        fingerprint:\n          description: dict representing a trusted certificate\n          type: string\n          example: SHA256 Hash of the raw certificate\n      example:\n        certificate: PEM certificate\n        name: foo\n        fingerprint: SHA256 Hash of the raw certificate\n        type: client\n    UpdateInstancesByNameRequest_oneOf:\n      description: Input (update instance configuration)\n      properties:\n        architecture:\n          type: string\n          example: x86_64\n        config:\n          $ref: '#/components/schemas/HardwareSpecsConfig'\n        devices:\n          $ref: '#/components/schemas/DevicesRoot'\n        ephemeral:\n          type: boolean\n          example: true\n        profiles:\n          type: array\n          items:\n            type: string\n    CreateInstancesByNameRequest_oneOf:\n      properties:\n        name:\n          type: string\n          example: new-name\n        migration:\n          type: boolean\n          example: true\n        live:\n          type: string\n          example: 'true'\n    CreateInstancesByNameConsoleRequest_oneOf:\n      description: Input (attach to /dev/console)\n      required:\n        - type\n      properties:\n        width:\n          description: Initial width of the terminal (optional)\n          type: integer\n          example: 80\n        height:\n          description: Initial height of the terminal (optional)\n          type: integer\n          example: 25\n        type:\n          description: Connection type (\"console\" or \"vga\").\n          type: string\n          example: console\n    CreateInstancesByNameExecRequest_oneOf:\n      description: Input (run bash)\n      required:\n        - command\n        - interactive\n        - record-output\n        - wait-for-websocket\n      properties:\n        command:\n          description: Command and arguments\n          type: array\n          items:\n            type: string\n          example:\n            - /bin/bash\n        environment:\n          description: Optional extra environment variables to set\n          type: object\n        wait-for-websocket:\n          description: Whether to wait for a connection before starting the process\n          type: boolean\n          example: false\n        record-output:\n          description: \u003e-\n            Whether to store stdout and stderr (only valid with wait-for-websocket=false)\n            (requires API extension container_exec_recording)\n          type: boolean\n          example: false\n        interactive:\n          description: Whether to allocate a pty device instead of PIPEs\n          type: boolean\n          example: true\n        width:\n          description: Initial width of the terminal (optional)\n          type: integer\n          example: 80\n        height:\n          description: Initial height of the terminal (optional)\n          type: integer\n          example: 25\n        user:\n          description: User to run the command as (optional)\n          type: integer\n          example: 1000\n        group:\n          description: Group to run the command as (optional)\n          type: integer\n          example: 1000\n        cwd:\n          description: Current working directory (optional)\n          type: string\n          example: /tmp\n    GetInstancesByNameStateResponse_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetInstancesByNameStateMetadataResponse'\n    GetStoragePoolsByNameResponse_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetStoragePoolsByNameResponseMetadata'\n        error_code:\n          type: integer\n          example: 0\n        error:\n          type: string\n    GetStoragePoolsByNameResourcesResponse_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponseMetadata'\n        error_code:\n          type: integer\n          example: 0\n        error:\n          type: string\n    GetStoragePoolsByNameVolumesByTypeNameResponse_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponseMetadata'\n        error_code:\n          type: integer\n          example: 0\n        error:\n          type: string\n    UpdateStoragePoolsByNameVolumesByTypeNameRequest_oneOf:\n      description: Input for restore\n      properties:\n        restore:\n          type: string\n          example: snapshot-name\n    GetResourcesResponse_allOf:\n      properties:\n        metadata:\n          $ref: '#/components/schemas/GetResourcesResponseMetadata'\n        error_code:\n          type: integer\n          example: 0\n        error:\n          type: string\n    CreateInstancesRequest:\n      required:\n        - architecture\n        - config\n        - ephemeral\n        - name\n        - profiles\n        - source\n      type: object\n      properties:\n        name:\n          description: '64 chars max, ASCII, no slash, no colon and no comma'\n          type: string\n          example: my-new-instance\n        architecture:\n          type: string\n          example: x86_64\n        profiles:\n          description: List of profiles\n          type: array\n          items:\n            type: string\n          example:\n            - default\n        ephemeral:\n          description: Whether to destroy the instance on shutdown\n          type: boolean\n          example: true\n        config:\n          description: \u003e-\n            This is a map of config parameters to be used during instance creation. The keys for\n            this map are the keys from instance.md file\n            (https://github.com/lxc/lxd/blob/master/doc/instances.md#keyvalue-configuration) and\n            values are the fields to set.\n          additionalProperties:\n            type: object\n          example:\n            limits.cpu: '2'\n            limits.memory: 512MB\n        type:\n          description: 'Optional. Can be \"virtual-machine\", \"container\" - by default it set to \"container\"'\n          type: string\n          example: container\n        devices:\n          $ref: '#/components/schemas/DevicesKvm'\n        instance_type:\n          description: An optional instance type to use as basis for limits\n          type: string\n          example: c2.micro\n        source:\n          description: |-\n            Source to be used to create this container.\n            Can be: \"image\", \"migration\", \"copy\" or \"none\"\n          additionalProperties:\n            type: object\n          example:\n            type: image\n            fingerprint: 6d825770a54383a01cdb78ae1c66260024629bb3b362f0ecd7b74dfcc8aa435f\n      example:\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        name: my-new-instance\n        profiles:\n          - default\n        ephemeral: true\n        source:\n          instance_only: true\n          server: 'https://10.0.2.3:8443'\n          certificate: PEM certificate\n          secret: my-secret-string\n          source: my-old-instance\n          type: image\n          secrets:\n            criu: my-other-secret\n            control: my-secret-string\n            fs: my third secret\n          mode: pull\n          protocol: lxd\n          base-image: \u003cfingerprint\u003e\n          fingerprint: SHA-256\n          alias: ubuntu/devel\n          operation: 'https://10.0.2.3:8443/1.0/operations/\u003cUUID\u003e'\n          properties:\n            os: ubuntu\n            release: '18.04'\n            architecture: x86_64\n          live: true\n        type: container\n        config:\n          limits.cpu: '2'\n        instance_type: c2.micro\n        architecture: x86_64\n  responses:\n    BasicStandardReturnValueResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/StandardReturnValueResponse'\n          examples:\n            Example:\n              $ref: '#/components/examples/StandardReturnValueResponse'\n      description: A standard return value response\n    BasicBackgroundOperationResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BasicBackgroundOperationResponse'\n          examples:\n            Example:\n              $ref: '#/components/examples/BasicBackgroundOperationResponse'\n      description: A basic background return value response\n    ErrorResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n          examples:\n            Example:\n              $ref: '#/components/examples/ErrorResponse'\n      description: A standard error response\n    GetApiListResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetApiListResponse'\n      description: List of supported APIs\n    GetServerStateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetServerStateResponse'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/GetServerStateResponse1'\n            Example_2:\n              $ref: '#/components/examples/GetServerStateResponse2'\n      description: Server configuration and environment information\n    GetCertificatesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetCertificatesResponse'\n      description: List of trusted certificates\n    GetFingerprintResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetFingerprintResponse'\n      description: Trusted certificate information\n    GetInstancesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetInstancesResponse'\n      description: List of instances\n    GetInstancesByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetInstancesByNameResponse'\n      description: Instance information\n    CreateInstancesByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BasicBackgroundOperationResponse'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/BasicBackgroundOperationResponse'\n            Example_2:\n              $ref: '#/components/examples/CreateInstancesByNameResponse'\n      description: Background return value responses\n    CreateInstancesByNameExecResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BasicBackgroundOperationResponse'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateInstancesByNameExecResponse1'\n            Example_2:\n              $ref: '#/components/examples/CreateInstancesByNameExecResponse2'\n            Example_3:\n              $ref: '#/components/examples/CreateInstancesByNameExecResponse3'\n            Example_4:\n              $ref: '#/components/examples/CreateInstancesByNameExecResponse4'\n      description: Background operation + optional websocket information\n    GetInstancesByNameFilesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/RawFile'\n      description: Download a file or directory listing from the instance\n    GetSnapshotListResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetSnapshotListResponse'\n      description: snapshots response\n    GetSnapshotInformationResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetSnapshotInformationResponse'\n      description: Snapshot information\n    CreateInstancesByNameSnapshotsInformationResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BasicBackgroundOperationResponse'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/StandardReturnValueResponse'\n            Example_2:\n              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationResponse'\n      description: Create Instances By Name Snapshots Information Response\n    GetInstancesByNameStateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetInstancesByNameStateResponse'\n      description: Current state\n    GetInstancesByNameLogsResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetInstancesByNameLogsResponse'\n      description: Instances logs response\n    GetInstancesByNameMetadataResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetInstancesByNameMetadataResponse'\n      description: Instance metadata\n    GetInstancesByNameMetadataTemplatesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetInstancesByNameMetadataTemplatesResponse'\n      description: Instances metadata templates response\n    GetInstancesByNameBackupsResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetInstancesByNameBackupsResponse'\n      description: List of backups for the instance\n    GetInstancesByNameBackupsByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetInstancesByNameBackupsByNameResponse'\n      description: Backup information\n    GetInstancesByNameBackupsByNameExportResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetInstancesByNameBackupsByNameExportResponse'\n      description: Fetch the backup tarball\n    GetEventsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetEventsResponse'\n      description: websocket upgrade\n    GetImagesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetImagesResponse'\n      description: List of images (public or private)\n    GetImagesFingerprintResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetImagesFingerprintResponse'\n      description: Download the image tarball\n    CreateImagesFingerprintSecretResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateImagesFingerprintSecretResponse'\n          examples:\n            Example:\n              $ref: '#/components/examples/CreateImagesFingerprintSecretResponse'\n      description: A basic background return value response\n    GetImagesAliasesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetImagesAliasesResponse'\n      description: List of aliases (public or private based on image visibility)\n    GetImagesAliasesByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetImagesAliasesByNameResponse'\n      description: Snapshot information\n    GetNetworksResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetNetworksResponse'\n      description: List of networks\n    GetNetworksByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetNetworksByNameResponse'\n      description: Information about a network\n    Response:\n      content:\n        application/json:\n          schema:\n            type: object\n          examples:\n            Example:\n              $ref: '#/components/examples/Response'\n      description: Empty response\n    GetNetworksByNameStateResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetNetworksByNameStateResponse'\n      description: Network state\n    GetOperationsResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetOperationsResponse'\n      description: List of operations\n    GetNetworksUUIDResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetNetworksUUIDResponse'\n      description: Background operation\n    GetProfilesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetProfilesResponse'\n      description: List of configuration profiles\n    GetProfilesByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetProfilesByNameResponse'\n      description: Profile configuration\n    GetProjectsResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetProjectsResponse'\n      description: List of projects\n    GetProjectsByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetProjectsByNameResponse'\n      description: Project configuration\n    GetStoragePoolsResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetStoragePoolsResponse'\n      description: List of storage pools\n    GetStoragePoolsByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetStoragePoolsByNameResponse'\n      description: Information about a storage pool\n    GetStoragePoolsByNameResourcesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetStoragePoolsByNameResourcesResponse'\n      description: Information about the resources available to the storage pool\n    GetStoragePoolsByNameVolumesResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetStoragePoolsByNameVolumesResponse'\n      description: list of storage volumes\n    GetStoragePoolsByNameVolumesByTypeNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameResponse'\n      description: Information about a storage volume of a given type on a storage pool\n    CreateStoragePoolsByNameVolumesByTypeNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BasicBackgroundOperationResponse'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/StandardReturnValueResponse'\n            Example_2:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameResponse'\n      description: Create Instances By Name Exec Response\n    GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse'\n      description: List of volume snapshots\n    GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetStoragePoolsByNameVolumesByTypeNameSnapshotsNameResponse'\n      description: Snapshot information\n    GetResourcesResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetResourcesResponse'\n      description: Information about the resources available to the LXD server\n    GetClusterResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetClusterResponse'\n      description: Information about a cluster (such as networks and storage pools)\n    GetClusterMembersResponse:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              type: string\n          examples:\n            Example:\n              $ref: '#/components/examples/GetClusterMembersResponse'\n      description: List of LXD members in the cluster\n    GetClusterMembersByNameResponse:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetClusterMembersByNameResponse'\n      description: Retrieve the member's information and status\n  parameters:\n    Recursion:\n      style: form\n      explode: true\n      name: recursion\n      description: \u003e-\n        To optimize queries of large lists, recursion is implemented for collections. The default\n        value is 0 which means that collection member URLs are returned. Setting it to 1 will have\n        those URLs be replaced by the object they point to (typically a dict).\n      schema:\n        type: integer\n      in: query\n      required: false\n    Filter:\n      style: pipeDelimited\n      explode: true\n      name: filter\n      description: \u003e-\n        There is no default value for filter which means that all results found will be returned. The\n        language follows the OData conventions for structuring REST API filtering logic. Logical\n        operators are also supported for filtering: not(not), equals(eq), not equals(ne), and(and),\n        or(or). Filters are evaluated with left associativity. Values with spaces can be surrounded\n        with quotes. Nesting filtering is also supported.\n      schema:\n        type: string\n      in: query\n      required: false\n  examples:\n    GetApiListResponse:\n      description: A list of supported APIs\n      value:\n        - /1.0/\n    GetServerStateResponse1:\n      description: Server configuration and environment information for trusted\n      value:\n        api_extensions: []\n        api_status: stable\n        api_version: '1.0'\n        auth: trusted\n        config:\n          core.trust_password: true\n          core.https_address: '[::]:8443'\n        environment:\n          addresses:\n            - '1.2.3.4:8443'\n            - '[1234::1234]:8443'\n          architectures:\n            - x86_64\n            - i686\n          certificate: PEM certificate\n          driver: lxc\n          driver_version: 1.0.6\n          kernel: Linux\n          kernel_architecture: x86_64\n          kernel_version: '3.16'\n          server: lxd\n          server_pid: 10224\n          server_version: 0.8.1\n          storage: btrfs\n          storage_version: '3.19'\n        public: false\n    GetServerStateResponse2:\n      description: Server configuration and environment information for guest or untrusted\n      value:\n        api_extensions: []\n        api_status: stable\n        api_version: '1.0'\n        auth: guest\n        public: false\n    GetCertificatesResponse:\n      description: Return a list of trusted certificates\n      value:\n        - /1.0/certificates/3ee64be3c3c7d617a7470e14f2d847081ad467c8c26e1caad841c8f67f7c7b09\n    GetInstancesResponse:\n      description: Return a list of URLs for instances this server hosts\n      value:\n        - /1.0/instances/blah\n        - /1.0/instances/blah1\n    CreateInstancesRequest1:\n      description: Instance based on a local image with the \"ubuntu/devel\" alias\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        instance_type: c2.micro\n        source:\n          type: image\n          alias: ubuntu/devel\n    CreateInstancesRequest2:\n      description: Instance based on a local image identified by its fingerprint\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: image\n          fingerprint: SHA-256\n    CreateInstancesRequest3:\n      description: Instance based on most recent match based on image properties\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: image\n          properties:\n            os: ubuntu\n            release: '18.04'\n            architecture: x86_64\n    CreateInstancesRequest4:\n      description: 'Instance without a pre-populated rootfs, useful when attaching to an existing one'\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: none\n    CreateInstancesRequest5:\n      description: Using a public remote image\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: image\n          mode: pull\n          server: 'https://10.0.2.3:8443'\n          protocol: lxd\n          certificate: PEM certificate\n          alias: ubuntu/devel\n    CreateInstancesRequest6:\n      description: Using a private remote image after having obtained a secret for that image\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: image\n          mode: pull\n          server: 'https://10.0.2.3:8443'\n          secret: my-secret-string\n          certificate: PEM certificate\n          alias: ubuntu/devel\n    CreateInstancesRequest7:\n      description: 'Using a remote instance, sent over the migration websocket'\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: migration\n          mode: pull\n          operation: 'https://10.0.2.3:8443/1.0/operations/\u003cUUID\u003e'\n          certificate: PEM certificate\n          base-image: \u003cfingerprint\u003e\n          instance_only: true\n          secrets:\n            control: my-secret-string\n            criu: my-other-secret\n            fs: my third secret\n    CreateInstancesRequest8:\n      description: Using a local instance\n      value:\n        name: my-new-instance\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: copy\n          instance_only: true\n          source: my-old-instance\n    CreateInstancesRequest9:\n      description: 'Using a remote instance, in push mode sent over the migration websocket via client proxying'\n      value:\n        name: my-new-instance\n        architecture: x86_64\n        profiles:\n          - default\n        ephemeral: true\n        config:\n          limits.cpu: '2'\n        type: container\n        devices:\n          kvm:\n            path: /dev/kvm\n            type: unix-char\n        source:\n          type: migration\n          mode: push\n          base-image: \u003cfingerprint\u003e\n          live: true\n          instance_only: true\n    CreateInstancesByNameResponse:\n      description: \u003e-\n        -\u003c Output in metadata section (for migration). These are the secrets that should be passed to\n        the create call.\n      value:\n        type: async\n        status: OK\n        status_code: 100\n        operation: /1.0/instances/\u003cid\u003e\n        metadata:\n          control: secret1\n          criu: secret2\n          fs: secret3\n    CreateInstancesByNameRequest1:\n      description: Input (simple rename)\n      value:\n        name: new-name\n    CreateInstancesByNameRequest2:\n      description: Input (migration across lxd instances or lxd cluster members)\n      value:\n        name: new-name\n        migration: true\n        live: 'true'\n    CreateInstancesByNameRequest3:\n      description: \u003e-\n        -\u003c Output in metadata section (for migration). These are the secrets that should be passed to\n        the create call.\n      value:\n        control: secret1\n        criu: secret2\n        fs: secret3\n    CreateInstancesByNameExecResponse1:\n      description: Return (with wait-for-websocket=true and interactive=false)\n      value:\n        fds:\n          '0': f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n          '1': 464dcf9f8fdce29d0d6478284523a9f26f4a31ae365d94cd38bac41558b797cf\n          '2': 25b70415b686360e3b03131e33d6d94ee85a7f19b0f8d141d6dca5a1fc7b00eb\n          control: 20c479d9532ab6d6c3060f6cdca07c1f177647c9d96f0c143ab61874160bd8a5\n    CreateInstancesByNameExecResponse2:\n      description: Return (with wait-for-websocket=true and interactive=true)\n      value:\n        fds:\n          '0': f5b6c760c0aa37a6430dd2a00c456430282d89f6e1661a077a926ed1bf3d1c21\n          control: 20c479d9532ab6d6c3060f6cdca07c1f177647c9d96f0c143ab61874160bd8a5\n    CreateInstancesByNameExecResponse3:\n      description: Return (with interactive=false and record-output=true)\n      value:\n        output:\n          '1': /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stdout\n          '2': /1.0/instances/example/logs/exec_b0f737b4-2c8a-4edf-a7c1-4cc7e4e9e155.stderr\n        return: 0\n    CreateInstancesByNameExecResponse4:\n      description: 'When the exec command finishes, its exit status is available from the operation''s metadata'\n      value:\n        return: 0\n    GetSnapshotListResponse:\n      description: List of snapshots\n      value:\n        - /1.0/instances/blah/snapshots/snap0\n    CreateInstancesByNameSnapshotsInformationRequest1:\n      description: Input (rename the snapshot)\n      value:\n        name: new-name\n    CreateInstancesByNameSnapshotsInformationRequest2:\n      description: Input (setup the migration source)\n      value:\n        name: new-name\n        migration: true\n        live: 'true'\n    CreateInstancesByNameSnapshotsInformationResponse:\n      description: Return (with migration=true)\n      value:\n        control: secret1\n        fs: secret3\n    GetInstancesByNameLogsResponse:\n      description: Returns a list of the log files available for this instance\n      value:\n        - /1.0/instances/blah/logs/forkstart.log\n        - /1.0/instances/blah/logs/lxc.conf\n        - /1.0/instances/blah/logs/lxc.log\n    GetInstancesByNameMetadataTemplatesResponse:\n      description: List instance templates\n      value:\n        - template.tpl\n        - hosts.tpl\n    GetInstancesByNameBackupsResponse:\n      description: List of backups for the instance\n      value:\n        - /1.0/instances/c1/backups/c1/backup0\n        - /1.0/instances/c1/backups/c1/backup1\n    GetImagesResponse:\n      description: List of images (public or private)\n      value:\n        - /1.0/images/54c8caac1f61901ed86c68f24af5f5d3672bdc62c71d04f06df3a59e95684473\n        - /1.0/images/97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n        - /1.0/images/a49d26ce5808075f5175bf31f5cb90561f5023dcd408da8ac5e834096d46b2d8\n        - /1.0/images/c9b6e738fae75286d52f497415463a8ecc61bbcb046536f220d797b0e500a41f\n    CreateImagesRequest1:\n      description: 'In the source image case, the following dict must be used'\n      value:\n        filename: filename\n        public: true\n        auto_update: true\n        properties:\n          os: Ubuntu\n        aliases:\n          -\n            name: my-alias\n            description: A description\n        source:\n          type: image\n          mode: pull\n          server: 'https://10.0.2.3:8443'\n          protocol: lxd\n          secret: my-secret-string\n          certificate: PEM certificate\n          fingerprint: SHA256\n          alias: ubuntu/devel\n    CreateImagesRequest2:\n      description: 'In the source instance case, the following dict must be used'\n      value:\n        compression_algorithm: xz\n        filename: filename\n        public: true\n        properties:\n          os: Ubuntu\n        aliases:\n          -\n            name: my-alias\n            description: A description\n        source:\n          type: instance\n          name: abc\n    CreateImagesRequest3:\n      description: 'In the remote image URL case, the following dict must be used'\n      value:\n        filename: filename\n        public: true\n        properties:\n          os: Ubuntu\n        aliases:\n          -\n            name: my-alias\n            description: A description\n        source:\n          type: url\n          url: 'https://www.some-server.com/image'\n    CreateImagesFingerprintSecretResponse:\n      description: Generate a random token and tell LXD to expect it be used by a guest\n      value:\n        type: async\n        status: OK\n        status_code: 100\n        operation: /1.0/instances/\u003cid\u003e\n        metadata:\n          secret: 52e9ec5885562aa24d05d7b4846ebb8b5f1f7bf5cd6e285639b569d9eaf54c9b\n    GetImagesAliasesResponse:\n      description: List of aliases (public or private based on image visibility)\n      value:\n        - /1.0/images/aliases/sl6\n        - /1.0/images/aliases/bionic\n        - /1.0/images/aliases/xenial\n    GetNetworksResponse:\n      description: List of networks\n      value:\n        - /1.0/networks/eth0\n        - /1.0/networks/lxdbr0\n    GetProfilesResponse:\n      description: List of configuration profiles\n      value:\n        - /1.0/profiles/default\n    GetProjectsResponse:\n      description: List of projects\n      value:\n        - /1.0/projects/default\n    GetStoragePoolsResponse:\n      description: List of storage pools\n      value:\n        - /1.0/storage-pools/default\n        - /1.0/storage-pools/pool1\n        - /1.0/storage-pools/pool2\n        - /1.0/storage-pools/pool3\n        - /1.0/storage-pools/pool4\n    GetStoragePoolsByNameVolumesResponse:\n      description: List of storage volumes\n      value:\n        - /1.0/storage-pools/default/volumes/container/alp1\n        - /1.0/storage-pools/default/volumes/container/alp10\n        - /1.0/storage-pools/default/volumes/container/alp11\n        - /1.0/storage-pools/default/volumes/container/alp12\n        - /1.0/storage-pools/default/volumes/container/alp13\n        - /1.0/storage-pools/default/volumes/container/alp14\n        - /1.0/storage-pools/default/volumes/container/alp15\n        - /1.0/storage-pools/default/volumes/container/alp16\n        - /1.0/storage-pools/default/volumes/container/alp17\n        - /1.0/storage-pools/default/volumes/container/alp18\n        - /1.0/storage-pools/default/volumes/container/alp19\n        - /1.0/storage-pools/default/volumes/container/alp2\n        - /1.0/storage-pools/default/volumes/container/alp20\n        - /1.0/storage-pools/default/volumes/container/alp3\n        - /1.0/storage-pools/default/volumes/container/alp4\n        - /1.0/storage-pools/default/volumes/container/alp5\n        - /1.0/storage-pools/default/volumes/container/alp6\n        - /1.0/storage-pools/default/volumes/container/alp7\n        - /1.0/storage-pools/default/volumes/container/alp8\n        - /1.0/storage-pools/default/volumes/container/alp9\n        - \u003e-\n          /1.0/storage-pools/default/volumes/image/62e850a334bb9d99cac00b2e618e0291e5e7bb7db56c4246ecaf8e46fa0631a6\n    CreateStoragePoolsByNameVolumesRequest1:\n      description: Input\n      value:\n        config: {}\n        name: vol1\n        type: custom\n    CreateStoragePoolsByNameVolumesRequest2:\n      description: Input (when copying a volume)\n      value:\n        config: {}\n        name: vol1\n        type: custom\n        source:\n          pool: pool2\n          name: vol2\n          type: copy\n    CreateStoragePoolsByNameVolumesRequest3:\n      description: Input (when migrating a volume)\n      value:\n        config: {}\n        name: vol1\n        type: custom\n        source:\n          pool: pool2\n          name: vol2\n          type: migration\n          mode: pull\n    CreateStoragePoolsByNameVolumesByTypeRequest1:\n      description: Input\n      value:\n        config: {}\n        name: vol1\n    CreateStoragePoolsByNameVolumesByTypeRequest2:\n      description: Input (when copying a volume)\n      value:\n        config: {}\n        name: vol1\n        source:\n          pool: pool2\n          name: vol2\n          type: copy\n    CreateStoragePoolsByNameVolumesByTypeRequest3:\n      description: Input (when migrating a volume)\n      value:\n        config: {}\n        name: vol1\n        source:\n          pool: pool2\n          name: vol2\n          type: migration\n          mode: pull\n    CreateStoragePoolsByNameVolumesByTypeNameRequest1:\n      description: Input (migration across lxd instances)\n      value:\n        name: vol1\n        pool: pool3\n        migration: true\n    CreateStoragePoolsByNameVolumesByTypeNameRequest2:\n      description: Input\n      value:\n        name: vol1\n        pool: pool3\n    CreateStoragePoolsByNameVolumesByTypeNameResponse:\n      description: Output in metadata section (for migration)\n      value:\n        control: secret1\n        fs: secret2\n    GetStoragePoolsByNameVolumesByTypeNameSnapshotsResponse:\n      description: List of volume snapshots\n      value:\n        - /1.0/storage-pools/default/volumes/custom/foo/snapshots/snap0\n    UpdateClusterRequest1:\n      description: Input (bootstrap a new cluster)\n      value:\n        server_name: lxd1\n        enabled: true\n    UpdateClusterRequest2:\n      description: Input (request to join an existing cluster)\n      value:\n        server_name: node2\n        server_address: '10.1.1.102:8443'\n        enabled: true\n        cluster_address: '10.1.1.101:8443'\n        cluster_certificate: |-\n          -----BEGIN CERTIFICATE-----MIFf\n          -----END CERTIFICATE-----\n        cluster_password: sekret\n        member_config:\n          -\n            entity: storage-pool\n            name: local\n            key: source\n            value: /dev/sdb\n          -\n            entity: network\n            name: lxdbr0\n            key: bridge.external_interfaces\n            value: vlan0\n    UpdateClusterRequest3:\n      description: Input (disable clustering on the node)\n      value:\n        enabled: false\n    GetClusterMembersResponse:\n      description: List of LXD members in the cluster\n      value:\n        - /1.0/cluster/members/lxd1\n        - /1.0/cluster/members/lxd2\n    Response:\n      description: Example Value\n      value: {}\n    BasicBackgroundOperationResponse:\n      description: Example Value\n      value:\n        type: async\n        status: OK\n        status_code: 100\n        operation: /1.0/instances/\u003cid\u003e\n        metadata: {}\n    StandardReturnValueResponse:\n      description: Example Value\n      value:\n        type: sync\n        status: Success\n        status_code: 200\n        error_code: 0\n        metadata: {}\n    BackgroundOperationResponse:\n      description: Example Value\n      value:\n        type: sync\n        status: Success\n        status_code: 200\n        error_code: 0\n        metadata: {}\n    ErrorResponse:\n      description: Example Value\n      value:\n        type: error\n        status: Failure\n        status_code: 400\n        metadata: {}\n  requestBodies:\n    CreateInstancesRequest:\n      description: Create a new instance\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateInstancesRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateInstancesRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateInstancesRequest2'\n            Example_3:\n              $ref: '#/components/examples/CreateInstancesRequest3'\n            Example_4:\n              $ref: '#/components/examples/CreateInstancesRequest4'\n            Example_5:\n              $ref: '#/components/examples/CreateInstancesRequest5'\n            Example_6:\n              $ref: '#/components/examples/CreateInstancesRequest6'\n            Example_7:\n              $ref: '#/components/examples/CreateInstancesRequest7'\n            Example_8:\n              $ref: '#/components/examples/CreateInstancesRequest8'\n            Example_9:\n              $ref: '#/components/examples/CreateInstancesRequest9'\n        file:\n          schema:\n            format: binary\n            description: Raw compressed tarball as provided by a backup download\n            type: string\n          examples:\n            sampleFile:\n              summary: A sample file\n              externalValue: 'https://lxd.readthedocs.io/en/latest/rest-api/#10instancesnamemetadata'\n    CreateInstancesByNameRequest:\n      description: Used to rename/migrate the instance\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateInstancesByNameRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateInstancesByNameRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateInstancesByNameRequest2'\n            Example_3:\n              $ref: '#/components/examples/CreateInstancesByNameRequest3'\n    CreateInstancesByNameConsoleRequest:\n      description: Attach to an instance's console devices\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateInstancesByNameConsoleRequest'\n    CreateInstancesByNameExecRequest:\n      description: Run a remote command\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateInstancesByNameExecRequest'\n    CreateInstancesByNameSnapshotsInformationRequest:\n      description: Used to rename/migrate the snapshot\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateInstancesByNameSnapshotsInformationRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateInstancesByNameSnapshotsInformationRequest2'\n    CreateImagesRequest:\n      description: Create and publish a new image\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateImagesRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateImagesRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateImagesRequest2'\n            Example_3:\n              $ref: '#/components/examples/CreateImagesRequest3'\n        file:\n          schema:\n            format: binary\n            description: Standard http file upload\n            type: string\n    CreateStoragePoolsByNameVolumesRequest:\n      description: Create a new storage volume on a given storage pool\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest2'\n            Example_3:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesRequest3'\n    CreateStoragePoolsByNameVolumesByTypeRequest:\n      description: Create a new storage volume of a particular type on a given storage pool\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest2'\n            Example_3:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeRequest3'\n    CreateStoragePoolsByNameVolumesByTypeNameRequest:\n      description: Rename a storage volume on a given storage pool\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateStoragePoolsByNameVolumesByTypeNameRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameRequest1'\n            Example_2:\n              $ref: '#/components/examples/CreateStoragePoolsByNameVolumesByTypeNameRequest2'\n    UpdateStoragePoolsByNameVolumesByTypeNameRequest:\n      description: Replace the storage volume information or restore from snapshot\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateStoragePoolsByNameVolumesByTypeNameRequest'\n    UpdateClusterRequest:\n      description: 'Bootstrap or join a cluster, or disable clustering on this node'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateClusterRequest'\n          examples:\n            Example_1:\n              $ref: '#/components/examples/UpdateClusterRequest1'\n            Example_2:\n              $ref: '#/components/examples/UpdateClusterRequest2'\n            Example_3:\n              $ref: '#/components/examples/UpdateClusterRequest3'\ntags:\n  -\n    name: lxd\n    description: Perform REST operations on Lxd\n  -\n    name: supported-apis\n    description: Perform REST operations on supported lxd apis\n  -\n    name: server-config\n    description: Perform REST operations on server configuration information\n  -\n    name: certificates\n    description: Perform REST operations on Certificates\n  -\n    name: instances\n    description: Perform REST operations on Instances\n  -\n    name: events\n    description: Perform REST operations on Events\n  -\n    name: images\n    description: Perform REST operations on Images\n  -\n    name: networks\n    description: Perform REST operations on Networks\n  -\n    name: operations\n    description: Perform REST operations on Operations\n  -\n    name: profiles\n    description: Perform REST operations on Profiles\n  -\n    name: projects\n    description: Perform REST operations on Projects\n  -\n    name: storage-pools\n    description: Perform REST operations on Storage Pools\n  -\n    name: resources\n    description: Perform REST operations on Resources\n  -\n    name: cluster\n    description: Perform REST operations on Clusters\n",
			"canonicalURL": "/github.com/relxd/lxd-sdk@7c059856e795154a0bdbcbad599fb4f5d123e4b8/-/blob/openapi/lxd.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/relxd/lxd-sdk/blob/7c059856e795154a0bdbcbad599fb4f5d123e4b8/openapi/lxd.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: parameters: \"Filter\": at 1:15100: invalid schema:style:explode combination: (\"string\":\"pipeDelimited\":true)"
}