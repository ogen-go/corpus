{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/gregsdennis/json-everything"
		},
		"file": {
			"name": "yaml-content.yaml",
			"size": 0,
			"path": "Yaml2JsonNode.Tests/Files/yaml-content.yaml",
			"byteSize": 1519,
			"content": "ï»¿from: Story\nexecute: Reactivate\n---\nAssetType: Story\nScope: Scope:0\nName: My Story\nChildren:\n- AssetType: Test\n  Name: My Test\n- AssetType: Task\n  Name: My Task\n---\nfrom: Story\nset:\n Status: Done\n---\nopenapi: 3.1.0\ninfo:\n  title: Non-oAuth Scopes example\n  version: 1.0.0\npaths:\n  /users:\n    get:\n      security:\n        - bearerAuth:\n            - 'read:users'\n            - 'public'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: jwt\n      description: 'note: non-oauth scopes are not defined at the securityScheme level'\n---\nopenapi: 3.1.0\ninfo:\n  title: Webhook Example\n  version: 1.0.0\n# Since OAS 3.1.0 the paths element isn't necessary. Now a valid OpenAPI Document can describe only paths, webhooks, or even only reusable components\nwebhooks:\n  # Each webhook needs a name\n  newPet:\n    # This is a Path Item Object, the only difference is that the request is initiated by the API provider\n    post:\n      requestBody:\n        description: Information about a new pet in the system\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Pet\"\n      responses:\n        \"200\":\n          description: Return a 200 status to indicate that the data was received successfully\n\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n",
			"canonicalURL": "/github.com/gregsdennis/json-everything@a8479cf36a555b260e7441b35734d44aa26c541f/-/blob/Yaml2JsonNode.Tests/Files/yaml-content.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/gregsdennis/json-everything/blob/a8479cf36a555b260e7441b35734d44aa26c541f/Yaml2JsonNode.Tests/Files/yaml-content.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse version: at Yaml2JsonNode.Tests/Files/yaml-content.yaml:1:1: invalid version: invalid major version: strconv.Atoi: parsing \"\": invalid syntax"
}