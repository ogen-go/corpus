{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/plantbreeding/BrAPI"
		},
		"file": {
			"name": "ObservationUnitLevel.yaml",
			"size": 0,
			"path": "Specification/BrAPI-Phenotyping/ObservationUnits/Schemas/ObservationUnitLevel.yaml",
			"byteSize": 1727,
			"content": "info:\n  title: BrAPI\n  version: ''\nopenapi: 3.0.0\npaths: {}\ncomponents:\n  schemas:\n    ObservationUnitLevel: \n      allOf:\n      - $ref: '#/components/schemas/ObservationUnitHierarchyLevel'\n      - type: object\n        title: ObservationUnitLevel\n        description: |-\n          Observation levels indicate the granularity level at which the measurements are taken. `levelName` \n          defines the level, `levelOrder` defines where that level exists in the hierarchy of levels. \n          `levelOrder`s lower numbers are at the top of the hierarchy (ie field \u003e 0) and higher numbers are \n          at the bottom of the hierarchy (ie plant \u003e 6). `levelCode` is an ID code for this level tag. Identify \n          this observation unit by each level of the hierarchy where it exists. \n\n          For more information on Observation Levels, please review the \u003ca target=\"_blank\" href=\"https://wiki.brapi.org/index.php/Observation_Levels\"\u003eObservation Levels documentation\u003c/a\u003e. \n\n          **Standard Level Names: study, field, entry, rep, block, sub-block, plot, sub-plot, plant, pot, sample** \n        properties:\n          levelCode:\n            description: |-\n              An ID code or number to represent a real thing that may or may not be an an observation unit.\n              \u003cbr/\u003eFor example, if the 'levelName' is 'plot', then the 'levelCode' would be the plot number or plot barcode. If this plot is also considered an ObservationUnit, then the appropriate observationUnitDbId should also be recorded.\n              \u003cbr/\u003eIf the 'levelName' is 'field', then the 'levelCode' might be something like '3' or 'F3' to indicate the third field at a research station. \n            type: string\n            example: Plot_123",
			"canonicalURL": "/github.com/plantbreeding/BrAPI@a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/-/blob/Specification/BrAPI-Phenotyping/ObservationUnits/Schemas/ObservationUnitLevel.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/plantbreeding/BrAPI/blob/a45723dba8753a1c1177ec8f7759d57ebcf5f5b1/Specification/BrAPI-Phenotyping/ObservationUnits/Schemas/ObservationUnitLevel.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ObservationUnitLevel\": parse schema: allOf: [0]: parse schema: resolve \"#/components/schemas/ObservationUnitHierarchyLevel\": find schema: resolve \"#/components/schemas/ObservationUnitHierarchyLevel\": can't find value for \"components/schemas/ObservationUnitHierarchyLevel\""
}