{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Boavizta/boagent"
		},
		"file": {
			"name": "Query.yaml",
			"size": 0,
			"path": "api/Query.yaml",
			"byteSize": 5091,
			"content": "openapi: 3.1.0\ninfo:\n  title: Query API\n  version: 1.0.0\n  summary: \u003e-\n    The query API allows you to determine the environmental footprint for\n    different types of scenarios (time-baed or machine-based). \n  description: \u003e-\n    Use this API to get the environmental footprint for your any operation\n    happening on the server.\n\n\n    You can use a time-based query in order to get the carbon emissions that\n    have been created during the processing of a request or a background\n    operation (e.g. making a thumbnail).\n\n\n    If you simply want the environmental footprint of a running pod or virtual\n    machine, from when it started to now (or to when it stopped), you can query\n    using the pod or virtual machine identifier.\n  license:\n    name: GPL v3\n    url: 'https://github.com/SDIAlliance/carbon-footprint-ssa/blob/main/LICENSE'\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  /query:\n    parameters: []\n    get:\n      summary: Get\n      operationId: get-query\n      description: 'Get the environmental footprint for a machine, pod or timeframe.'\n      parameters:\n        - schema:\n            type: string\n            format: uuid\n          in: query\n          name: k8s_pod_uuid\n          description: \u003e-\n            Each pod in K8s has a unique identifier. UUIDs are standardized as\n            ISO/IEC 9834-8 and as ITU-T X.667.\n        - schema:\n            type: array\n            uniqueItems: true\n            behavior: Read Only\n          in: query\n          name: k8s_pod_uuids\n          description: Query multiple in pods in K8s based on UUID\n        - schema:\n            type: string\n            format: time\n          in: query\n          name: start_time\n          description: \u003e-\n            Unix timestamp to specify from which point in time you want to\n            retrieve the footprint\n        - schema:\n            type: string\n            format: time\n          in: query\n          name: end_time\n          description: \u003e-\n            Unix timestamp to specify until which point in time you want to get\n            the footprint for. If you only specify start_time and not end_time,\n            it will return the footprint up until the current moment.\n        - schema:\n            type: string\n          in: query\n          name: os_instance_id\n          description: \u003e-\n            Query a specific OpenStack virtual machine, specified by its\n            instance ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ../models/Environmental-Footprint.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  error_message:\n                    type: string\n              examples:\n                Missing any filters:\n                  value:\n                    error_message: \u003e-\n                      At least one filter parameter has to be given:\n                      k8s_pod_uuid, os_instance_id or start_time\n        '406':\n          description: Not Acceptable\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  errors:\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        param:\n                          type: string\n                        message:\n                          type: string\n                      required:\n                        - param\n                        - message\n                required:\n                  - errors\n              examples:\n                K8s Pod UUID invalid:\n                  value:\n                    errors:\n                      - param: k8s_pod_uuid\n                        message: Invalid pod uuid or not found.\n                Invalid start_time or end_time:\n                  value:\n                    errors:\n                      - param: start_time\n                        message: is not a valid unix timestamp\n                      - param: end_time\n                        message: is not a valid unix timestamp\n                Invalid OpenStack Instance:\n                  value:\n                    errors:\n                      - param: os_instance_id\n                        message: invalid instance identifier or not found\n                K8s Pod UUIDs not an array:\n                  value:\n                    errors:\n                      - param: k8s_pod_uuids\n                        message: must be an array of UUIDs\n                K8 Pod UUIDs contains invalid UUID:\n                  value:\n                    errors:\n                      - param: k8s_pod_uuids\n                        message: \u003e-\n                          contains an invalid UUID or not found:\n                          the-uuid-should-be-here\n        '500':\n          description: Internal Server Error\n  '':\n    parameters: []\ncomponents:\n  schemas: {}\n",
			"canonicalURL": "/github.com/Boavizta/boagent@319e452bbf58f68be881ef24ed823166fbc39a70/-/blob/api/Query.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Boavizta/boagent/blob/319e452bbf58f68be881ef24ed823166fbc39a70/api/Query.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /query: get: operation \"get-query\": responses: 200: content: application/json: schema: parse schema: resolve \"../models/Environmental-Footprint.yaml\": external \"../models/Environmental-Footprint.yaml\": file: local file reference is not allowed"
}