{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/geoserver/geoserver"
		},
		"file": {
			"name": "catalogresponses.yaml",
			"size": 0,
			"path": "src/community/rest-openapi/openapi/src/main/resources/org/geoserver/rest/openapi/1.0.0/catalogresponses.yaml",
			"byteSize": 8525,
			"content": "openapi: 3.0.0\ninfo:\n  version: 1.0.0\n  title: GeoServer Catalog Responses Model\n  description: GeoServer Catalog responses differ from their counterpart *Info objects (e.g. a response that should be a FeatureTypeInfo\n    cannot be directly mapped due to differences in the elements. This model the responses, when can then be mapped to the\n    corresponding *Info object in order to provide an homogeneous client API\npaths:\n  /fake:\n    description: fake operation entry point to pass validation, otherwise codegen will comply there's no paths element\n    get:\n      operationId: fakeOp\n      responses:\n        200:\n          description: nothing really\ncomponents:\n  schemas:\n    NamedLink:\n      type: object\n      properties:\n        '@class':\n          type: string\n        name:\n          type: string\n        href:\n          type: string\n        link:\n          type: string\n    NamedLinks:\n      type: array\n      items:\n        $ref: \"#/components/schemas/NamedLink\"\n    EnvelopeResponse:\n      type: object\n#          type: array\n      properties:\n        minx:\n          type: number\n          format: double\n          nullable: false\n        maxx:\n          type: number\n          format: double\n          nullable: false\n        miny:\n          type: number\n          format: double\n          nullable: false\n        maxy:\n          type: number\n          format: double\n          nullable: false\n        crs:\n          $ref: '#/components/schemas/CRSResponse'\n    CRSResponse:\n      type: object\n      description: 'left as a free form object because geoserver returns a  plain string if it is a geographic crs (e.g. \"EPSG:4326\")\n        or an object like this: {\"@class\":\"projected\",\"$\":\"EPSG:26986\"}'\n    ResourceResponse:\n      type: object\n      properties:\n        name:\n          type: string\n#          enum:\n        nativeName:\n          type: string\n        alias:\n          type: array\n          items:\n            type: string\n        namespace:\n          $ref: \"#/components/schemas/NamedLink\"\n        title:\n          type: string #/components/schemas/NamespaceInfo #/components/schemas/NamespaceInfo #/components/schemas/NamespaceInfo\n        abstract:\n          type: string\n        description:\n          type: string\n        enabled:\n          type: boolean\n        advertised:\n          type: boolean\n        keywords:\n          type: object\n          properties:\n            string:\n              type: array\n              items:\n                type: string\n        metadataLinks:\n          $ref: \"catalog.yaml#/components/schemas/MetadataLinks\"\n# REVISIT: currently geoserver encodes as dataLinks: {org.geoserver.catalog.impl.DataLinkInfoImpl: [{type:\"\", content:\"\"}]}\n#        dataLinks:\n#          type: object\n#          description: Wraps a collection of data links for the resource.\n#          properties:\n#            metadataLink:\n#              type: array\n#              description: A collection of data links for the resource.\n#              items:\n#                type: object\n#                properties:\n#                  type:\n#                    type: string\n#                    description: The MIME type\n#                  content:\n#                    type: string\n#                    description: The link URL\n        nativeBoundingBox:\n          $ref: '#/components/schemas/EnvelopeResponse'\n        latLonBoundingBox:\n          $ref: '#/components/schemas/EnvelopeResponse'\n        srs:\n          type: string\n        nativeCRS:\n          $ref: '#/components/schemas/CRSResponse'\n        projectionPolicy:\n          $ref: \"catalog.yaml#/components/schemas/ProjectionPolicy\"\n        metadata:\n          $ref: 'catalog.yaml#/components/schemas/MetadataMap'\n        store:\n          $ref: '#/components/schemas/NamedLink'\n        serviceConfiguration:\n          type: boolean\n        disabledServices:\n          $ref: '#/components/schemas/StringArrayResponse'\n    FeatureTypeResponse:\n      allOf: #note: Not using inheritance on purpose, there seems not to be a need so far, and would rather avoid the nasty discriminator\n      - $ref: '#/components/schemas/ResourceResponse'\n      - type: object\n        properties:\n          cqlFilter:\n            type: string\n          maxFeatures:\n            type: integer\n            format: int32\n          numDecimals:\n            type: integer\n            format: int32\n          padWithZeros:\n            type: boolean\n          forcedDecimal:\n            type: boolean\n          responseSRS:\n            $ref: '#/components/schemas/StringArrayResponse'\n          overridingServiceSRS:\n            type: boolean\n          skipNumberMatched:\n            type: boolean\n          circularArcPresent:\n            type: boolean\n          encodeMeasures:\n            type: boolean\n          linearizationTolerance:\n            type: number\n          attributes:\n            type: object\n            title: AttributeTypeInfoResponse\n            properties:\n              attribute:\n                type: array\n                items:\n                  $ref: 'catalog.yaml#/components/schemas/AttributeTypeInfo'\n    CoverageResponse:\n      allOf: #note: Not using inheritance on purpose, there seems not to be a need so far, and would rather avoid the nasty discriminator\n      - $ref: '#/components/schemas/ResourceResponse'\n      - type: object\n        properties:\n          nativeCoverageName:\n            description: the native coverage name (used to pick up a specific coverage from within a reader)\n            type: string\n          nativeFormat:\n            type: string\n          supportedFormats:\n            $ref: '#/components/schemas/StringArrayResponse'\n          requestSRS:\n            $ref: '#/components/schemas/StringArrayResponse'\n          responseSRS:\n            $ref: '#/components/schemas/StringArrayResponse'\n          defaultInterpolationMethod:\n            type: string\n          interpolationMethods:\n            $ref: '#/components/schemas/StringArrayResponse'\n          parameters:\n            type: object\n            title: CoverageResponseParameters\n            additionalProperties:\n              type: object              \n          dimensions:\n            type: object\n            title: CoverageDimensionsWrapper\n            properties:\n              coverageDimension:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CoverageDimensionResponse'\n          grid:\n            $ref: '#/components/schemas/GridInfoResponse'\n\n    CoverageDimensionResponse:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        description:\n          type: string\n        range:\n          $ref: \"#/components/schemas/NumberRangeResponse\"\n        nullValues:\n          $ref: '#/components/schemas/DoubleArrayResponse'\n        unit:\n          type: string\n        #dimensionType: TODO, add property of type SampleDimensionType?\n    \n    NumberRangeResponse:\n      type: object\n      description: a range of numbers as string, as it can return either a double or \"inf\"|\"-inf\"\n      properties:\n        min:\n          type: string\n        max:\n          type: string\n\n    GridInfoResponse:\n      type: object\n      description: contains information about how to translate from the raster plan to a coordinate reference system\n      properties:\n        \"@dimension\":\n          type: string\n        crs:\n          type: string\n        range:\n          type: object\n          title: GridRangeInfoResponse\n          properties:\n            high:\n              type: string\n            low:\n              type: string\n        transform:\n          type: object\n          title: TransformInfoResponse\n          properties:\n            scaleX:\n              type: number\n              format: double\n            scaleY:\n              type: number\n              format: double\n            shearX:\n              type: number\n              format: double\n            shearY:\n              type: number\n              format: double\n            translateX:\n              type: number\n              format: double\n            translateY:\n              type: number\n              format: double\n\n    StringArrayResponse:\n      type: object\n      properties:\n        string:\n          type: array\n          items:\n            type: string\n    DoubleArrayResponse:\n      type: object\n      properties:\n        double:\n          type: array\n          items:\n            type: number\n            format: double\n            "
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ResourceResponse\": parse schema: property \"metadata\": parse schema: resolve \"catalog.yaml#/components/schemas/MetadataMap\": external \"catalog.yaml\": file: local file reference is not allowed"
}