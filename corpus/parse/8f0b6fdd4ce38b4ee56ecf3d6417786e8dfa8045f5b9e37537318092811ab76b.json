{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/robocup-logistics/rcll-refbox"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/libs/rest-api/clips-rest-api/api.yaml",
			"byteSize": 12723,
			"content": "openapi: 3.0.0\ninfo:\n  title: Clips\n  version: v1beta1\n  description: |\n    CLIPS REST API.\n    Enables access to CLIPS environments.\n  contact:\n    name:  Tim Niemueller\n    email: niemueller@kbsg.rwth-aachen.de\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\ntags:\n  - name: public\n    description: Public API.\n\npaths:\n  /clips/{env}/facts:\n    get:\n      tags:\n      - public\n      summary: get all facts\n      operationId: get_facts\n      description: |\n        List all facts of an environment.\n      parameters:\n        - name: env\n          in: path\n          description: ID of CLIPS environment\n          required: true\n          schema:\n            type: string\n            format: symbol\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          schema:\n            type: boolean\n        - name: formatted\n          in: query\n          description: |\n            Retrieve formatted strings.  If the flag is passed, the\n            `formatted` field of the Fact will contain a formatted\n            string representation suitable for printing. Otherwise the\n            slots field will contain a fact as structures.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: list of facts\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Fact'\n        '400':\n          description: bad input parameter\n\n  /clips/:\n    get:\n      tags:\n      - public\n      summary: list all environments\n      operationId: list_environments\n      description: |\n        List all CLIPS environments.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: list environments\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Environment'\n\n  /machines/:\n    get:\n      tags:\n      - public\n      summary: list all machines\n      operationId: list_machines\n      description: |\n        List all machine facts.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: list machines\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Machine'\n\n\n  /orders/:\n    get:\n      tags:\n      - public\n      summary: list all orders\n      operationId: list_orders\n      description: |\n        List all order facts.\n      parameters:\n        - name: pretty\n          in: query\n          description: Request pretty printed reply.\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: list orders\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Order'\n\n\ncomponents:\n  schemas:\n    SlotValue:\n      type: object\n      required:\n        - name\n        - is-multifield\n        - values\n      properties:\n        name:\n          type: string\n          format: symbol\n        type:\n          type: string\n          format: symbol\n          enum: [\"FLOAT\", \"INTEGER\", \"SYMBOL\", \"STRING\", \"EXTERNAL-ADDRESS\"]\n        is-multifield:\n          type: boolean\n        values:\n          type: array\n          items:\n            type: string\n\n\n    Fact:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - index\n        - template_name\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        index:\n          type: integer\n          format: int64\n        template_name:\n          type: string\n          format: symbol\n        formatted:\n          type: string\n          format: symbol\n        slots:\n          type: array\n          items:\n            $ref: '#/components/schemas/SlotValue'\n\n    Environment:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - name\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        name:\n          type: string\n\n    Machine:\n      type: object\n      required:\n        - name\n        - team\n        - mtype\n        - actual-lights\n        - state\n        - zone\n        - rotation\n        - bases-added\n        - bases-used\n        - bs-side\n        - bs-color\n        - ds-order\n        - rs-ring-color\n        - rs-ring-colors\n        - cs-operation\n        - cs-retrieved\n      properties:\n        name:\n          type: string\n          format: symbol\n        team:\n          type: string\n          formate: symbol\n          enum: [\"CYAN\", \"MAGENTA\"]\n        mtype:\n          type: string\n          format: symbol\n          enum: [ \"C-BS\", \"C-DS\", \"C-RS1\", \"C-RS2\", \"C-CS1\", \"C-CS2\", \"C-SS\", \"M-BS\", \"M-DS\", \"M-RS1\", \"M-RS2\", \"M-CS1\", \"M-CS2\" ,\"M-SS\"]\n        actual-lights:\n          type: array\n          items:\n            type: string\n            enum: [\"RED-ON\", \"RED-BLINK\", \"YELLOW-ON\", \"YELLOW-BLINK\", \"GREEN-ON\", \"GREEN-BLINK\"]\n        state:\n          type: string\n          formate: symbol\n          enum: [\"IDLE\",\"BROKEN\",\"PREPARED\",\"PROCESSING\", \"PROCESSED\",\"READY-AT-OUTPUT\",\"WAIT-IDLE\",\"DOWN\"]\n        zone:\n          type: string\n          formate: symbol\n          enum: [ \"TBD\", \"`C_Z18\", \"C_Z28\", \"C_Z38\", \"C_Z48\", \"C_Z58\", \"C_Z69\", \"C_Z78\",\"C_Z17\", \"C_Z27\", \"C_Z37\", \"C_Z47\", \"C_Z57\", \"C_Z67\", \"C_Z77\", \"C_Z16\", \"C_Z26\", \"C_Z36\", \"C_Z46\", \"C_Z56\", \"C_Z66\", \"C_Z76\", \"C_Z15\", \"C_Z25\", \"C_Z35\", \"C_Z45\", \"C_Z55\", \"C_Z65\", \"C_Z75\", \"C_Z14\", \"C_Z24\", \"C_Z34\", \"C_Z44\", \"C_Z54\", \"C_Z64\", \"C_Z74\", \"C_Z13\", \"C_Z23\", \"C_Z33\", \"C_Z43\", \"C_Z53\", \"C_Z63\", \"C_Z73\", \"C_Z12\", \"C_Z22\", \"C_Z32\", \"C_Z42\", \"C_Z52\", \"C_Z62\", \"C_Z72\", \"C_Z11\", \"C_Z21\", \"C_Z31\", \"C_Z41\",\"M_Z18\", \"M_Z28\", \"M_Z38\", \"M_Z48\", \"M_Z58\", \"M_Z68\", \"M_Z78\", \"M_Z17\", \"M_Z27\", \"M_Z37\", \"M_Z47\", \"M_Z57\", \"M_Z67\", \"M_Z77\", \"M_Z16\", \"M_Z26\", \"M_Z36\", \"M_Z46\", \"M_Z56\", \"M_Z66\", \"M_Z76\", \"M_Z15\", \"M_Z25\", \"M_Z35\", \"M_Z45\", \"M_Z55\", \"M_Z65\", \"M_Z75\", \"M_Z14\", \"M_Z24\", \"M_Z34\", \"M_Z44\", \"M_Z54\", \"M_Z64\", \"M_Z74\", \"M_Z13\", \"M_Z23\", \"M_Z33\", \"M_Z43\", \"M_Z53\", \"M_Z63\", \"M_Z73\", \"M_Z12\", \"M_Z22\", \"M_Z32\", \"M_Z42\", \"M_Z52\", \"M_Z62\", \"M_Z72\", \"M_Z11\", \"M_Z21\", \"M_Z31\", \"M_Z41\"]\n        rotation:\n          type: integer\n          format: int64\n        bases-added:\n          type: integer\n          format: int64\n        bases-used:\n          type: integer\n          format: int64\n        bs-side:\n          type: string\n          formate: symbol\n          enum: [\"INPUT\" , \"OUTPUT\"]\n        bs-color:\n          type: string\n          formate: symbol\n          enum: [\"BASE_RED\" , \"BASE_BLACK\", \"BASE_SILVER\" ]\n        ds-order:\n          type: integer\n          format: int64\n        rs-ring-color:\n          type: string\n          formate: symbol\n          enum: [\"RING_BLUE\" , \"RING_GREEN\",\"RING_YELLOW\",\"RING_ORANGE\",\"RING_YELLOW\"]\n        rs-ring-colors:\n          type: array\n          items:\n            type: string\n            enum: [\"RING_BLUE\" , \"RING_GREEN\",\"RING_YELLOW\",\"RING_ORANGE\",\"RING_YELLOW\"]\n        cs-operation:\n          type: string\n          formate: symbol\n          enum: [\"RETRIEVE_CAP\",\"MOUNT_CAP\"]\n        cs-retrieved:\n           type: boolean\n\n    Robot:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - number\n        - state\n        - team\n        - team-color\n        - name\n        - host\n        - port\n        - last-seen\n        - has-pose\n        - pose\n        - maintenance-start-time\n        - maintenance-cycles\n        - maintenance-warning-sent\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        number:\n          type: integer\n          format: int64\n        state:\n          type: string\n          format: symbol\n          enum: [\"ACTIVE\", \"MAINTENANCE\", \"DISQUALIFIED\"]\n        team:\n          type: string\n          format: symbol\n        team-color:\n          type: string\n          format: symbol\n          enum: [\"CYAN\" , \"MAGENTA\"]\n        name:\n          type: string\n          format: symbol\n        host:\n          type: string\n          format: symbol\n        port:\n          type: integer\n          format: int64\n        last-seen:\n          type: array\n          items:\n            type: string\n            formate: symbol\n        has-pose:\n          type: boolean\n        pose:\n          type: array\n          items:\n            type: string\n            format: symbol\n        maintenance-start-time:\n          type: number\n          format: float\n        maintenance-cycles:\n          type: integer\n          format: int64\n        maintenance-warning-sent:\n          type: boolean\n\n    Order:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - id\n        - complexity\n        - competitive\n        - base-color\n        - ring-colors\n        - cap-color\n        - quantity-requested\n        - quantity-delivered\n        - delivery-period\n        - delivery-gate\n        - active\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        id:\n          type: integer\n          format: int64\n        complexity:\n          type: string\n          format: symbol\n          enum: [\"C0\", \"C1\", \"C2\" , \"C3\"]\n        competitive:\n          type: boolean\n        base-color:\n          type: string\n          format: symbol\n          enum: [\"BASE_SILVER\" , \"BASE_BLACK\", \"BASE_RED\"]\n        ring-colors:\n          type: array\n          items:\n            type: string\n            formate: symbol\n            enum: [\"RING_BLUE\", \"RING_GREEN\", \"RING_YELLOW\", \"RING_ORANGE\"]\n        cap-color:\n          type: string\n          format: symbol\n          enum: [\"CAP_GREY\" , \"CAP_BLACK\"]\n        quantity-requested:\n           type: integer\n           format: int64\n        quantity-delivered:\n          type: array\n          items:\n            type: string\n            format: symbol\n        delivery-period:\n          type: array\n          items:\n            type: string\n            format: symbol\n        delivery-gate:\n          type: integer\n          format: int64\n        active:\n          type: boolean\n\n    RingSpec:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - color\n        - req-bases\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        color:\n          type: string\n          format: symbol\n          enum: [\"RING_BLUE\" , \"RING_GREEN\", \"RING_YELLOW\", \"RING_ORANGE\"]\n        req-bases:\n          type: integer\n          format: int64\n\n    GameState:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - state\n        - phase\n        - game-time\n        - points\n        - teams\n        - over-time\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        state:\n          type: string\n          format: symbol\n          enum: [\"INIT\" , \"WAIT_START\", \"RUNNING\", \"PAUSED\"]\n        phase:\n          type: string\n          format: symbole\n          enum: [\"PRE_GAME\",\"SETUP\",\"EXPLORATION\",\"PRODUCTION\",\"POST_GAME\",\"OPEN_CHALLENGE\", \"NAVIGATION_CHALLENGE\", \"WHACK_A_MOLE_CHALLENGE\"]\n        game-time:\n          type: number\n          format: float\n        points:\n          type: array\n          items:\n            type: string\n            formate: symbol\n        teams:\n          type: array\n          items:\n            type: string\n            formate: symbol\n        over-time:\n          type: boolean\n\n    Points:\n      type: object\n      required:\n        - kind\n        - apiVersion\n        - points\n        - phase\n        - team\n        - game-time\n        - reason\n      properties:\n        kind:\n          type: string\n        apiVersion:\n          type: string\n        points:\n          type: integer\n          format: int64\n        phase:\n          type: string\n          format: symbole\n          enum: [\"EXPLORATION\",\"PRODUCTION\",\"POST_GAME\", \"WHACK_A_MOLE_CHALLENGE\"]\n        team:\n          type: string\n          formate: symbol\n          enum: [\"CYAN\", \"MAGENTA\"]\n        game-time:\n          type: number\n          format: float\n        reason:\n          type: string\n          format: symbol\n",
			"canonicalURL": "/github.com/robocup-logistics/rcll-refbox@6fd610a10e69b45ea16d156c6a3f27430744a753/-/blob/src/libs/rest-api/clips-rest-api/api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/robocup-logistics/rcll-refbox/blob/6fd610a10e69b45ea16d156c6a3f27430744a753/src/libs/rest-api/clips-rest-api/api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Machine\": parse schema: property \"rs-ring-color\": at 1:2147: duplicate enum value: \"\\\"RING_YELLOW\\\"\""
}