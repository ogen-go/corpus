{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mainflux/mainflux"
		},
		"file": {
			"name": "provision.yml",
			"size": 0,
			"path": "api/openapi/provision.yml",
			"byteSize": 2629,
			"content": "openapi: 3.0.1\ninfo:\n  title: Mainflux Provision service\n  description: HTTP API for Provision service\n  version: \"1.0.0\"\n\npaths:\n  /mapping:\n    post:\n      summary: Adds new device to proxy\n      description: Adds new device to proxy\n      tags:\n        - provision\n      parameters:\n      - $ref: \"#/components/parameters/Authorization\"\n      requestBody:\n        $ref: \"#/components/requestBodies/ProvisionReq\"\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Failed due to malformed JSON.\n        \"401\":\n          description: Missing or invalid access token provided.\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n    get:\n      summary: Gets current mapping.\n      description: Gets current mapping. This can be used in UI\n        so that when bootstrap config is created from UI matches\n        configuration created with provision service.\n      tags:\n        - provision\n      parameters:\n      - $ref: \"#/components/parameters/Authorization\"\n      responses:\n        '200':\n          $ref: \"#/components/responses/ProvisionRes\"\n        \"401\":\n          description: Missing or invalid access token provided.\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n  /health:\n    get:\n      summary: Retrieves service health check info.\n      tags:\n        - health\n      responses:\n        '200':\n          $ref: \"#/components/responses/HealthRes\"\n        '500':\n          $ref: \"#/components/responses/ServiceError\"\n\ncomponents:\n  parameters:\n    Authorization:\n      name: Authorization\n      description: User's access token. Used instead of credentials in env or config.toml.\n      in: header\n      schema:\n        type: string\n        format: jwt\n      required: false\n\n  requestBodies:\n    ProvisionReq:\n      description: MAC address of device or other identifier\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - external_id\n              - external_key\n            properties:\n              external_id:\n                type: string\n              external_key:\n                 type: string\n              name:\n                 type: string\n\n  responses:\n    ServiceError:\n      description: Unexpected server-side error occurred.\n    ProvisionRes:\n      description: Current mapping JSON representation.\n      content:\n        application/json:\n          schema:\n            type: object\n    HealthRes:\n      description: Service Health Check.\n      content:\n        application/json:\n          schema:\n            $ref: \"./schemas/HealthInfo.yml\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /health: get: operation \"\": responses: 200: resolve \"#/components/responses/HealthRes\" reference: content: \"application/json\": schema: parse schema: reference \"./schemas/HealthInfo.yml\": resolve reference \"./schemas/HealthInfo.yml\": invalid schema reference \"./schemas/HealthInfo.yml\""
}