{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/fairDataSociety/fairOS-dfs"
		},
		"file": {
			"name": "dfs.yaml",
			"size": 0,
			"path": "openapi/dfs.yaml",
			"byteSize": 71230,
			"content": "openapi: 3.0.0\n\ninfo:\n  version: 0.7.3\n  title: FairOS-dfs API\n  description: 'A list of the currently provided Interfaces to interact with FairOS decentralised file system(dfs), implementing user, pod, file system, key value store and document store'\n\nexternalDocs:\n  description: Browse the documentation @ the FairOS-dfs Docs\n  url: 'https://fairos.io'\n\nservers:\n  - url: 'http://{apiRoot}:{port}/v1'\n    variables:\n      apiRoot:\n        default: 'localhost'\n        description: Base address of the local dfs node API\n      port:\n        default: '9090'\n        description: Base port of the local dfs node which exposes the REST APIs\n\npaths:\n  '/user/signup':\n    post:\n      summary: 'Signup user'\n      description: 'Signs up a user and subsequently logs in returning the authentication cookie `fairOS-dfs`.\n      The cookie needs to be sent n the request header in all subsequent requests.\n      Input is a form object containing the login, password and optionally mnemonic.'\n      tags:\n        - User\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user_name:\n                  $ref: '#/components/schemas/UserName'\n                password:\n                  $ref: '#/components/schemas/Password'\n                mnemonic:\n                  $ref: '#/components/schemas/Mnemonic'\n              required:\n                - user_name\n                - password\n      responses:\n        '201':\n          description: 'Created'\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: 'fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None'\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/UserSignupResponse'\n                  - $ref: '#/components/schemas/UserSignupResponseWithMnemonic'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/user/login':\n    post:\n      summary: 'Login user'\n      description: 'Logs in user and returns the authentication cookie `fairOS-dfs in the header.\n      The cookie needs to be sent n the request header in all subsequent requests.\n      Input is a form object containing the login and password.'\n      tags:\n        - User\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                user_name:\n                  $ref: '#/components/schemas/UserName'\n                password:\n                  $ref: '#/components/schemas/Password'\n              required:\n                - user_name\n                - password\n      responses:\n        '200':\n          description: 'OK'\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/user/import':\n    post:\n      summary: 'Import user'\n      description: 'Import a user from one dfs server to another and subsequently logs in returning the authentication cookie `fairOS-dfs`.\n      The cookie needs to be sent n the request header in all subsequent requests.\n      Importing is useful when a user switches machines or lost a old machine which was running his dfs server.\n      Input contains a form object containing the login, password, ethereum address and optionally mnemonic.\n      If mnemonic is provided a user will be created while importing.'\n      tags:\n        - User\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - $ref: '#/components/schemas/UserImportArg1'\n                - $ref: '#/components/schemas/UserImportArg2'\n      responses:\n        '201':\n          description: 'Created'\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserSignupResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/user/present':\n    get:\n      summary: 'User present'\n      description: 'Check if an user is present in a given dfs-server.\n      Input contains form object containing the user name to check if it is present in the dfs server.'\n      tags:\n        - User\n      parameters:\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              user_name:\n                type: string\n            required:\n              - user_name\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserPresentResponse'\n        '400':\n          $ref: '#/components/responses/400'\n\n  '/user/isloggedin':\n    get:\n      summary: 'Is logged-in'\n      description: 'Check if a user is logged in already.\n      Input contains a form object containing the user name to check if it is logged-in in the dfs server.'\n      tags:\n        - User\n      parameters:\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              user_name:\n                type: string\n            required:\n              - user_name\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserLoggedInResponse'\n        '400':\n          $ref: '#/components/responses/400'\n\n  '/user/logout':\n    post:\n      summary: 'Logout user'\n      description: 'Logout a logged-in user from the dfs server.'\n      tags:\n        - User\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/user/export':\n    post:\n      summary: 'Export user'\n      description: 'Export user so that ic can be imported in another machine'\n      tags:\n        - User\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserExportResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/user/delete':\n    delete:\n      summary: 'Delete user'\n      description: 'Delete a logged-in user from the dfs server.'\n      tags:\n        - User\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                password:\n                  $ref: '#/components/schemas/Password'\n              required:\n                - password\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/user/stat':\n    get:\n      summary: 'User stat'\n      description: 'Delete a logged-in user from the dfs server.'\n      tags:\n        - User\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/UserStatResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/receiveinfo':\n    get:\n      summary: 'Pod receive Info'\n      description: 'shows the pod info of the pod that is to be received'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              reference:\n                $ref: '#/components/schemas/FileSharingReference'\n            required:\n              - reference\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PodReceiveInfo'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/receive':\n    get:\n      summary: 'Pod receive'\n      description: 'make a pod public and share it with others'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              reference:\n                $ref: '#/components/schemas/FileSharingReference'\n            required:\n              - reference\n      responses:\n        '200':\n          description: 'OK'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/new':\n    post:\n      summary: 'New pod'\n      description: 'create a new pod'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                password:\n                  $ref: '#/components/schemas/Password'\n              required:\n                - pod_name\n                - password\n      responses:\n        '201':\n          description: 'Ok'\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: 'fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/open':\n    post:\n      summary: 'Open pod'\n      description: 'Opens a pod'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                password:\n                  $ref: '#/components/schemas/Password'\n              required:\n                - pod_name\n                - password\n      responses:\n        '200':\n          description: 'Ok'\n          headers:\n            Set-Cookie:\n              schema:\n                type: string\n                example: 'fairOS-dfs=MTYxMjUwNDI5NnxSMmFYcUphYU5CWTFsYTlxMkYzaG4xT3N3RkRlQlFUT2UxRVVnelZWcmVBb0dkVWNVUHNUSU95QVZhUjVodXhvR2YyUTJNM1IwRkpncGxXNXhzM0ZycHZPMW9vTlJldW4yRm9kYjBNOENfb3pEaDVEQWp2bl94M3lLOTdPWUZ6bXdpU1FQU01pTm1oUG5MMENZOHVmV1FHYlc4OVpyekE2SzBuWjVKWkFMb2Q5fAwgQztL4Efy82UoSjN5Rv9v77glLGsbqzQUmmyI0cNg; Path=/; Domain=api.fairos.io; Expires=Sat, 06 Feb 2021 05:51:36 GMT; HttpOnly; Secure; SameSite=None'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/close':\n    post:\n      summary: 'Close pod'\n      description: 'Closes a pod'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n              required:\n                - pod_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/sync':\n    post:\n      summary: 'Sync pod'\n      description: 'Syncs the latest contents of the pod from Swarm'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n              required:\n                - pod_name\n      responses:\n        '200':\n          description: 'Synced'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/share':\n    post:\n      summary: 'Share pod'\n      description: 'Shared a pod'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                password:\n                  $ref: '#/components/schemas/Password'\n              required:\n                - pod_name\n                - password\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pod_sharing_reference:\n                    $ref: '#/components/schemas/FileSharingReference'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/delete':\n    delete:\n      summary: 'Delete pod'\n      description: 'Deletes a pod'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                password:\n                  $ref: '#/components/schemas/Password'\n              required:\n                - pod_name\n                - password\n\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/ls':\n    get:\n      summary: 'List pod'\n      description: 'Lists all pods of a user'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pod_name:\n                    $ref: '#/components/schemas/PodList'\n                  shared_pod_name:\n                    $ref: '#/components/schemas/SharedPodList'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/stat':\n    get:\n      summary: 'Stat pod'\n      description: 'Show all the information about a pod'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n              required:\n                - pod_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  pod_name:\n                    $ref: '#/components/schemas/PodName'\n                  address:\n                    $ref: '#/components/schemas/EthereumAddress'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/pod/present':\n    get:\n      summary: 'Pod Present'\n      description: 'Is Pod present'\n      tags:\n        - Pod\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n            required:\n              - pod_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirPresentResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/dir/mkdir':\n    post:\n      summary: 'Make dir'\n      description: 'make a new directory inside a pod'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                dir_path:\n                  $ref: '#/components/schemas/DirPath'\n              required:\n                - dir_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/dir/rmdir':\n    delete:\n      summary: 'Remove dir'\n      description: 'remove a directory inside a pod'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                dir_path:\n                  $ref: '#/components/schemas/DirPath'\n              required:\n                - pod_name\n                - dir_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/dir/ls':\n    get:\n      summary: 'List dir'\n      description: 'List all the files and directory inside a directory'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              dir_path:\n                $ref: '#/components/schemas/DirPath'\n            required:\n              - pod_name\n              - dir_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  dirs:\n                    $ref: '#/components/schemas/ListDirectory'\n                  files:\n                    $ref: '#/components/schemas/ListFiles'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/dir/stat':\n    get:\n      summary: 'Stat dir'\n      description: 'Show a directory related information'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              dir_path:\n                $ref: '#/components/schemas/DirPath'\n            required:\n              - pod_name\n              - dir_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref : '#/components/schemas/DirectoryStat'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/dir/present':\n    get:\n      summary: 'Dir Present'\n      description: 'Is directory present'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              dir_path:\n                $ref: '#/components/schemas/DirPath'\n            required:\n              - pod_name\n              - dir_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirPresentResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/upload':\n    post:\n      summary: 'Upload File'\n      description: 'upload a file to dfs'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: header\n          name: 'fairOS-dfs-Compression'\n          schema:\n            type: string\n            enum: [gzip, snappy]\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                pod_dir:\n                  $ref: '#/components/schemas/DirName'\n                block_size:\n                  type: string\n                  example: 10M\n              required:\n                - pod_name\n                - pod_dir\n                - block_size\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                files:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileUploadResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/download':\n    get:\n      summary: 'Download file'\n      description: 'Download a file from the pod tp the local dir'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                file_path:\n                  $ref: '#/components/schemas/DirPath'\n              required:\n                - pod_name\n                - file_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n    post:\n      summary: 'Download file'\n      description: 'Download a file from the pod tp the local dir'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                file_path:\n                  $ref: '#/components/schemas/DirPath'\n              required:\n                - pod_name\n                - file_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/share':\n    post:\n      summary: 'Share file'\n      description: 'Share a file with another user'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                pod_path_file:\n                  $ref: '#/components/schemas/FileNameWithPath'\n                dest_user:\n                  $ref: '#/components/schemas/EthereumAddress'\n              required:\n                - pod_name\n                - pod_path_file\n                - dest_user\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileSharingResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/receive':\n    get:\n      summary: 'Receive file'\n      description: 'Receive file that was shared by another user'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              sharing_ref:\n                $ref: '#/components/schemas/FileSharingReference'\n              dir_path:\n                $ref: '#/components/schemas/DirName'\n            required:\n              - pod_name\n              - sharing_ref\n              - dir_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n               type: object\n               properties:\n                file_name:\n                  $ref: '#/components/schemas/FileNameWithPath'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/receiveinfo':\n    get:\n      summary: 'Receive file info'\n      description: 'Receive file info that is being shared by another user'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              sharing_ref:\n                $ref: '#/components/schemas/FileSharingReference'\n            required:\n              - pod_name\n              - sharing_ref\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReceiveFileInfo'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/delete':\n    delete:\n      summary: 'Delete info'\n      description: 'Delete a file in the pod'\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                file_path:\n                  $ref: '#/components/schemas/FileNameWithPath'\n              required:\n                - pod_name\n                - file_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/file/stat':\n    get:\n      summary: 'Stat info'\n      description: 'Get the information about a file in the pod '\n      tags:\n        - File System\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              file_path:\n                $ref: '#/components/schemas/FileNameWithPath'\n            required:\n              - pod_name\n              - file_path\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileStatInfo'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/new':\n    post:\n      summary: 'Create New table'\n      description: 'Create a new key value table'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n                indexType:\n                  $ref: '#/components/schemas/KVIndexType'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/ls':\n    get:\n      summary: 'List Tables'\n      description: 'List all the Key Value tables of this pod'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n            required:\n              - pod_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KVList'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/open':\n    post:\n      summary: 'Open table'\n      description: 'Opens a already created key value table'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/count':\n    post:\n      summary: 'Count table'\n      description: 'Count KV pairs in a table'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KVCount'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/delete':\n    delete:\n      summary: 'Delete table'\n      description: 'Delete a KV table of a pod'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/entry/put':\n    post:\n      summary: 'Put Key Value'\n      description: 'Inserts a Key Value pair in the table'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n                key:\n                  $ref: '#/components/schemas/KVKey'\n                value:\n                  $ref: '#/components/schemas/KVValue'\n              required:\n                - pod_name\n                - table_name\n                - key\n                - value\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/entry/get':\n    get:\n      summary: 'Get Value'\n      description: 'Get value given a key'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              table_name:\n                $ref: '#/components/schemas/KVTableName'\n              key:\n                $ref: '#/components/schemas/KVKey'\n            required:\n              - pod_name\n              - table_name\n              - key\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                properties:\n                  keys:\n                    $ref: '#/components/schemas/KVgetResponseKeys'\n                  values:\n                    $ref: '#/components/schemas/KVgetResponseValues'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/entry/get-data':\n    get:\n      summary: 'Get Value'\n      description: 'Get value given a key'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              table_name:\n                $ref: '#/components/schemas/KVTableName'\n              key:\n                $ref: '#/components/schemas/KVKey'\n              format:\n                type: string\n                enum: [ string, byte-string ]\n            required:\n              - pod_name\n              - table_name\n              - key\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                properties:\n                  keys:\n                    $ref: '#/components/schemas/KVgetResponseKeys'\n                  values:\n                    $ref: '#/components/schemas/KVgetResponseValues'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/entry/del':\n    delete:\n      summary: 'Delete Value'\n      description: 'Delete a KV pair given a key'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n                key:\n                  $ref: '#/components/schemas/KVKey'\n              required:\n                - pod_name\n                - table_name\n                - key\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/seek':\n    post:\n      summary: 'Seek Key'\n      description: 'Seek a KV pair given a key or its prefix'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              table_name:\n                $ref: '#/components/schemas/KVTableName'\n              start:\n                  $ref: '#/components/schemas/KVKey'\n              end:\n                  $ref: '#/components/schemas/KVKey'\n              limit:\n                  type: integer\n            required:\n              - pod_name\n              - table_name\n              - start\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/seek/next':\n    get:\n      summary: 'Get Next'\n      description: 'Get Next value after the Seek'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/KVTableName'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                properties:\n                  keys:\n                    $ref: '#/components/schemas/KVgetResponseKeys'\n                  values:\n                    $ref: '#/components/schemas/KVgetResponseValues'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/loadcsv':\n    post:\n      summary: 'LoadCSV'\n      description: 'load a csv file in to a given KV table'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_ame:\n                  $ref: '#/components/schemas/KVTableName'\n                memory:\n                    $ref: '#/components/schemas/KVMemoryTable'\n              required:\n                - pod_name\n                - table_ame\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                csv:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/kv/present':\n    get:\n      summary: 'Key Present'\n      description: 'Is Key present'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              table_name:\n                $ref: '#/components/schemas/KVTableName'\n              key:\n                $ref: '#/components/schemas/KVKey'\n            required:\n              - pod_name\n              - table_name\n              - key\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DirPresentResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/new':\n    post:\n      summary: 'Create DocumentDB'\n      description: 'create a document DB with the given fields as indexes'\n      tags:\n        - Document DB\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n                si:\n                  $ref: '#/components/schemas/DocFieldIndex'\n                mutable:\n                  $ref: '#/components/schemas/DocMutable'\n              required:\n                - pod_name\n                - table_name\n                - si\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/ls':\n    get:\n      summary: 'List DocumentDBs'\n      description: 'list all the document dbs of the pod'\n      tags:\n        - Document DB\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n            required:\n              - pod_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                properties:\n\n                  keys:\n                    $ref: '#/components/schemas/DocListResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/open':\n    post:\n      summary: 'Open DocumentDB'\n      description: 'open a already created document DB'\n      tags:\n        - Document DB\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/count':\n    post:\n      summary: 'Count Documents'\n      description: 'Count all the documents based on the expression'\n      tags:\n        - Document DB\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n                expr:\n                  type: string\n                  example: \"age\u003e45\"\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/delete':\n    delete:\n      summary: 'Delete DocumentDB'\n      description: 'Delete the given document DB and all its documents and indexes'\n      tags:\n        - Document DB\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n              required:\n                - pod_name\n                - table_name\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/find':\n    get:\n      summary: 'Find Documents'\n      description: 'Find documents from the DB based on a expression'\n      tags:\n        - Document DB\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              table_name:\n                $ref: '#/components/schemas/DocTableName'\n              expr:\n                type: string\n                example: \"age\u003e45\"\n              limit:\n                type: integer\n                example: 20\n            required:\n              - pod_name\n              - table_name\n              - expr\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/json:\n              schema:\n                properties:\n                  keys:\n                    $ref: '#/components/schemas/DocFindResponse'\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/loadjson':\n    post:\n      summary: 'LoadJson'\n      description: 'load a json file in to a given document DB'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n              required:\n                - pod_name\n                - table_name\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                json:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/indexjson':\n    post:\n      summary: 'IndexJson'\n      description: 'Index the json file present in the pod'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n                file:\n                  $ref: '#/components/schemas/PodFileName'\n              required:\n                - pod_name\n                - table_name\n                - file\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/entry/put':\n    post:\n      summary: 'Put Document'\n      description: 'Insert the document in the documentDB'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n                doc:\n                  $ref: '#/components/schemas/FileNameWithPath'\n              required:\n                - pod_name\n                - table_name\n                - doc\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/entry/get':\n    get:\n      summary: 'Get Document'\n      description: 'Get the document from the documentDB given the id'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n        - in: query\n          name: fields\n          schema:\n            type: object\n            properties:\n              pod_name:\n                $ref: '#/components/schemas/PodName'\n              table_name:\n                $ref: '#/components/schemas/DocTableName'\n              id:\n                $ref: '#/components/schemas/DocId'\n            required:\n              - pod_name\n              - table_name    \n              - id\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                  type: string\n                  format: byte\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\n  '/doc/entry/del':\n    delete:\n      summary: 'Get Document'\n      description: 'Get the document from the documentDB given the id'\n      tags:\n        - Key Value Store\n      parameters:\n        - in: cookie\n          name: fairOS-dfs\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                pod_name:\n                  $ref: '#/components/schemas/PodName'\n                table_name:\n                  $ref: '#/components/schemas/DocTableName'\n                id:\n                  $ref: '#/components/schemas/DocId'\n              required:\n                - pod_name\n                - table_name\n                - id\n      responses:\n        '200':\n          description: 'Ok'\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n        '400':\n          $ref: '#/components/responses/400'\n        '500':\n          $ref: '#/components/responses/500'\n\ncomponents:\n  schemas:\n    UserSignupResponse:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/EthereumAddress'\n\n    UserSignupResponseWithMenonic:\n      type: object\n      properties:\n        address:\n          $ref: '#/components/schemas/EthereumAddress'\n        mnemonic:\n          $ref: '#/components/schemas/Mnemonic'\n\n    UserPresentResponse:\n      type: object\n      properties:\n        present:\n          type: boolean\n          example: true\n\n    UserLoggedInResponse:\n      type: object\n      properties:\n        loggedin:\n          type: boolean\n          example: true\n\n#    OkResponse:\n#      type: object\n#      properties:\n#        message:\n#          type: string\n#          example: \"done\"\n\n    UserExportResponse:\n      type: object\n      properties:\n        user_name:\n          $ref: '#/components/schemas/UserName'\n        address:\n          $ref: '#/components/schemas/EthereumAddress'\n\n    UserStatResponse:\n      type: object\n      properties:\n        user_name:\n          $ref: '#/components/schemas/UserName'\n        reference:\n          $ref: '#/components/schemas/EthereumAddress'\n\n    UserImportArg1:\n      type: object\n      properties:\n        user_name:\n          $ref: '#/components/schemas/UserName'\n        password:\n          $ref: '#/components/schemas/Password'\n        address:\n          $ref: '#/components/schemas/EthereumAddress'\n\n    UserImportArg2:\n      type: object\n      properties:\n        user_name:\n          $ref: '#/components/schemas/UserName'\n        password:\n          $ref: '#/components/schemas/Password'\n        mnemonic:\n          $ref: '#/components/schemas/Mnemonic'\n\n\n    PodReceiveInfo:\n      type: object\n      properties:\n        pod_name:\n          $ref: '#/components/schemas/PodName'\n        pod_address:\n          $ref: '#/components/schemas/EthereumAddress'\n        user_name:\n          $ref: '#/components/schemas/UserName'\n        user_address:\n          $ref: '#/components/schemas/EthereumAddressAnotherOne'\n        shared_time:\n          $ref: '#/components/schemas/Time'\n\n    PodList:\n      type: array\n      items:\n        $ref: '#/components/schemas/PodName'\n\n    SharedPodList:\n      type: array\n      items:\n        $ref: '#/components/schemas/SharedPodName'\n\n    DirEntryType:\n      type: string\n      pattern: 'File/Dir'\n      example: \"File\"\n\n    ListDirectory:\n      type: object\n      properties:\n        entries:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              properties:\n                name:\n                  $ref: '#/components/schemas/DirName'\n                type:\n                  $ref: '#/components/schemas/DirEntryType'\n                size:\n                  type: integer\n                creation_time:\n                  $ref: '#/components/schemas/Time'\n                modification_time:\n                  $ref: '#/components/schemas/Time'\n                access_time:\n                  $ref: '#/components/schemas/Time'\n\n    ListFiles:\n      type: object\n      properties:\n        entries:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              properties:\n                name:\n                  $ref: '#/components/schemas/FileNameWithPath'\n                type:\n                  $ref: '#/components/schemas/DirEntryType'\n                size:\n                  type: integer\n                block_size:\n                  type: integer\n                creation_time:\n                  $ref: '#/components/schemas/Time'\n                modification_time:\n                  $ref: '#/components/schemas/Time'\n                access_time:\n                  $ref: '#/components/schemas/Time'\n\n    DirectoryStat:\n      type: object\n      properties:\n        pod_name:\n          $ref: '#/components/schemas/PodName'\n        dir_path:\n          type: string\n        dir_name:\n          type: string\n        creation_time:\n          $ref: '#/components/schemas/Time'\n        modification_time:\n          $ref: '#/components/schemas/Time'\n        access_time:\n          $ref: '#/components/schemas/Time'\n        no_of_directories:\n          type: integer\n        no_of_files:\n          type: integer\n\n    DirPresentResponse:\n      type: object\n      properties:\n        present:\n          type: boolean\n          example: true\n        error:\n          type: string\n      required:\n        - present\n\n    FileUploadResponse:\n      type: object\n      properties:\n        file_name:\n          type: string\n        reference:\n          oneOf:\n            - $ref: '#/components/schemas/FileReference'\n            - $ref: '#/components/schemas/FileReferenceEncrypted'\n        error:\n          type: string\n      required:\n        - file_name\n        - reference\n\n    FileSharingResponse:\n      type: object\n      properties:\n        file_sharing_reference:\n          $ref: '#/components/schemas/FileSharingReference'\n\n    ReceiveFileInfo:\n      type: object\n      properties:\n        name:\n          $ref: '#/components/schemas/PodFileName'\n        size:\n          type: integer\n        block_size:\n          type: string\n          example: 10M\n        number_of_blocks:\n          type: integer\n        content_type:\n          type: string\n        compression:\n          enum: [ gzip, snappy ]\n        pod_name:\n          $ref: '#/components/schemas/PodName'\n        meta_ref:\n          oneOf:\n            - $ref: '#/components/schemas/FileReference'\n            - $ref: '#/components/schemas/FileReferenceEncrypted'\n        source_address:\n          $ref: '#/components/schemas/EthereumAddress'\n        dest_address:\n          $ref: '#/components/schemas/EthereumAddressAnotherOne'\n        shared_time:\n          $ref: '#/components/schemas/Time'\n\n    FileStatInfo:\n      type: object\n      properties:\n        pod_name:\n          $ref: '#/components/schemas/PodName'\n        file_path:\n          $ref: '#/components/schemas/PodPath'\n        file_name:\n          $ref: '#/components/schemas/PodFileName'\n        file_size:\n          type: integer\n        block_size:\n          type: string\n          example: 10M\n        compression:\n          enum: [ gzip, snappy ]\n        content_type:\n          type: string\n        creation_time:\n          $ref: '#/components/schemas/Time'\n        modification_time:\n          $ref: '#/components/schemas/Time'\n        access_time:\n          $ref: '#/components/schemas/Time'\n        properties:\n          type: array\n          items:\n            properties:\n              name:\n                $ref: '#/components/schemas/BlockName'\n              reference:\n                oneOf:\n                  - $ref: '#/components/schemas/FileReference'\n                  - $ref: '#/components/schemas/FileReferenceEncrypted'\n              size:\n                type: integer\n              compressed_size:\n                type: integer\n\n    KVList:\n      type: array\n      items:\n        properties:\n          table_name:\n            $ref: '#/components/schemas/KVTableName'\n          indexes:\n            enum: [ id ]\n          type:\n            $ref: '#/components/schemas/KVIndexType'\n\n    KVgetResponseKeys:\n      type: array\n      items:\n        properties:\n          key:\n            type: string\n\n    KVgetResponseValues:\n      type: array\n      items:\n        properties:\n          value:\n            type: string\n\n    DocListResponse:\n      type: object\n      properties:\n        table_name:\n          $ref: '#/components/schemas/DocTableName'\n        properties:\n          type: array\n          items:\n            properties:\n              name:\n                $ref: '#/components/schemas/DocFieldName'\n              type:\n                $ref: '#/components/schemas/DocIndexType'\n\n    DocFindResponse:\n      type: object\n      properties:\n        docs:\n          $ref: '#/components/schemas/DocTableName'\n        properties:\n          type: array\n          items:\n            properties:\n              doc:\n                type: string\n                format: byte\n\n    Time:\n      type: string\n      format: date-time\n      pattern: '^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{7}\\+\\d{2}:\\d{2})$'\n      example: \"2020-06-11T11:26:42.6969797+02:00\"\n\n    UserName:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"alice\"\n\n    PodName:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"cdrive\"\n\n    SharedPodName:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"Bobs-drive\"\n\n    DirPath:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"/Documents/pdf\"\n\n    DirName:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"dir1\"\n\n    FileNameWithPath:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"/Documents/pdf/swarm-paper.pdf\"\n\n    PodPath:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"/home/\"\n\n    PodFileName:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"/dir1/switzerland.osm\"\n\n    BlockName:\n      type: string\n      example: \"block00001\"\n\n    KVIndexType:\n      type: string\n      enum: [ string, number]\n\n    KVTableName:\n      type: string\n      example: \"kv_table1\"\n\n    KVCount:\n      type: object\n      properties:\n        count:\n          type: integer\n        table_name:\n          $ref: '#/components/schemas/KVTableName'\n      required:\n        - file_name\n        - reference\n\n    KVMemoryTable:\n      type: string\n      example: \"true\"\n\n    KVKey:\n      type: string\n      example: \"key1\"\n\n    KVValue:\n      type: string\n      format: byte\n\n    DocFieldName:\n      type: string\n      example: first_name\n\n    DocIndexType:\n      type: string\n      enum: [ string, number, map, list ]\n\n    DocMutable:\n      type: boolean\n      example: true\n\n    DocId:\n      type: string\n      example: \"doc1\"\n\n    DocFieldIndex:\n      description: string of field=indexType pairs seperated with comma (first_name=string,age=number,tags=map)\n      type: string\n      example: first_name=string,age=number,tags=map\n\n    DocTableName:\n      type: string\n      example: \"doc_table1\"\n\n    Password:\n      type: string\n      example: \"DifficultPassword@%\u0026149\"\n\n    Mnemonic:\n      description: any combination of 12 words from BIP-39 mnemonic word list from https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt\n      type: string\n      example: \"alert record income curve mercy tree heavy loan hen recycle mean devote\"\n\n    FileReference:\n      type: string\n      pattern: '^[A-Fa-f0-9]{64}$'\n      example: \"dbd81832565d3396a01ecb003512a63b78c02e343a722a2f6a8f9328652280f8\"\n\n    FileReferenceEncrypted:\n      type: string\n      pattern: '^[A-Fa-f0-9]{128}$'\n      example: \"dbd81832565d3396a01ecb003512a63b78c02e343a722a2f6a8f9328652280f89e7acb1f7c2c5ceafc10119581b3ac4dc1e42fa6b2db9fdad8997fc52c4714f8\"\n\n    FileSharingReference:\n      type: string\n      pattern: '^[A-Fa-f0-9]$'\n      example: \"801bb9d4ab5ff66ddf73b16f9043c3742d661b53ac51254908db450e2f0eb969abf50e96612c46bcdb6bb863764d7638bac746a3a916d72fcb0d3a2308842f091612534189\"\n\n    EthereumAddress:\n      type: string\n      pattern: '^[A-Fa-f0-9]{40}$'\n      example: \"36b7efd913ca4cf880b8eeac5093fa27b0825906\"\n\n    EthereumAddressAnotherOne:\n      type: string\n      pattern: '^[A-Fa-f0-9]{40}$'\n      example: \"1dB7eD7bD48B770593075278ca6cDf5841436CB8\"\n\n    ProblemDetails:\n      type: object\n      properties:\n        message:\n          type: string\n        code:\n          type: integer\n\n    ErrorString:\n      type: string\n\n  responses:\n    '204':\n      description: The resource was deleted successfully.\n    '400':\n      description: Bad request\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    '403':\n      description: Forbidden\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    '404':\n      description: Not Found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'\n    '500':\n      description: Internal Server Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ProblemDetails'",
			"canonicalURL": "/github.com/fairDataSociety/fairOS-dfs@ab15d5aa2ee8b990a217416ce2f79dfc13302b92/-/blob/openapi/dfs.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/fairDataSociety/fairOS-dfs/blob/ab15d5aa2ee8b990a217416ce2f79dfc13302b92/openapi/dfs.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/user/signup\": post: responses: 201: content: application/json: schema: parse schema: oneOf: [1]: at 1:49457: parse schema: resolve \"#/components/schemas/UserSignupResponseWithMnemonic\": find schema: resolve: can't find value for \"components/schemas/UserSignupResponseWithMnemonic\""
}