{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/raphaelalmeidamartins/blogs-api"
		},
		"file": {
			"name": "swagger-br.json",
			"size": 0,
			"path": "src/swagger-br.json",
			"byteSize": 28165,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Blogs API\",\n    \"description\": \"Esta é uma API de blog que permite criar usuários, categorias e posts. A autenticação é feita com JWT (Json Web Token). Para acessar as rotas autenticadas, faça login ou crie um novo usuário para receber o token.\",\n    \"contact\": {\n      \"email\": \"raphael.almeida.martins@gmail.com\"\n    },\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:3000\",\n      \"description\": \"API de teste\"\n    }\n  ],\n  \"paths\": {\n    \"/login\": {\n      \"post\": {\n        \"summary\": \"Rota de login\",\n        \"description\": \"Rota onde o usuário faz login e recebe o token\",\n        \"tags\": [\"Login\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Login\"\n              },\n              \"examples\": {\n                \"login\": {\n                  \"value\": {\n                    \"email\": \"fulano@gmail.com\",\n                    \"password\": \"123456\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Token\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some required fields are invalid or missing\"\n          }\n        }\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"summary\": \"Rota de cadastro de usuário\",\n        \"description\": \"Rota responsável pelo cadastro de novos usuários\",\n        \"tags\": [\"Users\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateUser\"\n              },\n              \"examples\": {\n                \"user\": {\n                  \"value\": {\n                    \"displayName\": \"Brett Wiltshire\",\n                    \"email\": \"brett@email.com\",\n                    \"password\": \"123456\",\n                    \"image\": \"http://4.bp.blogspot.com/_YA50adQ-7vQ/S1gfR_6ufpI/AAAAAAAAAAk/1ErJGgRWZDg/S45/brett.png\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Token\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some required fields are invalid or missing\"\n          },\n          \"409\": {\n            \"description\": \"User already registered\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Rota de listagem de usuários\",\n        \"description\": \"Rota responsável por listar todos os usuários cadastrados\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListUsers\"\n                },\n                \"examples\": {\n                  \"listUsers\": {\n                    \"value\": [\n                      {\n                        \"id\": 1,\n                        \"displayName\": \"Lewis Hamilton\",\n                        \"email\": \"lewishamilton@gmail.com\",\n                        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                      },\n                      {\n                        \"id\": 2,\n                        \"displayName\": \"Britney Spears\",\n                        \"email\": \"itsbritneybh@gmail.com\",\n                        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/5/5e/Britney_Spears%2C_Roundhouse%2C_London_%28Apple_Music_Festival_2016%29_%2830072929931%29_%28cropped%29.jpg\"\n                      },\n                      {\n                        \"id\": 3,\n                        \"displayName\": \"Sonic the Hedgehog\",\n                        \"email\": \"blueblur@gmail.com\",\n                        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/f/f7/SonicSeriesLogo.png\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/user/{id}\": {\n      \"get\": {\n        \"summary\": \"Rota de encontrar usuário pelo id\",\n        \"description\": \"Rota responsável por retornar usuário de acordo com id\",\n        \"tags\": [\"Users\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id do usuário a ser buscado\"\n          }\n        ],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetUser\"\n                },\n                \"examples\": {\n                  \"getUser\": {\n                    \"value\": {\n                      \"id\": 1,\n                      \"displayName\": \"Lewis Hamilton\",\n                      \"email\": \"lewishamilton@gmail.com\",\n                      \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"User does not exist\"\n          }\n        }\n      }\n    },\n    \"/user/me\": {\n      \"delete\": {\n        \"summary\": \"Rota de excluir usuário\",\n        \"description\": \"Rota responsável por excluir usuário de acordo com id contido no token. Também exclui todas as publicações relacionadas\",\n        \"tags\": [\"Users\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"User does not exist\"\n          }\n        }\n      }\n    },\n    \"/categories\": {\n      \"post\": {\n        \"summary\": \"Rota de cadastro de categories\",\n        \"description\": \"Rota responsável pelo cadastro de novas categorias\",\n        \"tags\": [\"Categories\"],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreateCategory\"\n              },\n              \"examples\": {\n                \"category\": {\n                  \"value\": {\n                    \"name\": \"Typescript\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetCategory\"\n                },\n                \"examples\": {\n                  \"category\": {\n                    \"value\": {\n                      \"id\": 3,\n                      \"name\": \"Typescript\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some required fields are invalid or missing\"\n          },\n          \"409\": {\n            \"description\": \"Category already registered\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Rota de listagem de categorias\",\n        \"description\": \"Rota responsável por listar todos as categorias cadastradas\",\n        \"tags\": [\"Categories\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListCategories\"\n                },\n                \"examples\": {\n                  \"listCategories\": {\n                    \"value\": [\n                      {\n                          \"id\": 1,\n                          \"name\": \"Inovação\"\n                      },\n                      {\n                          \"id\": 2,\n                          \"name\": \"Escola\"\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/categories/{id}\": {\n      \"get\": {\n        \"summary\": \"Rota de encontrar categoria pelo id\",\n        \"description\": \"Rota responsável por retornar categoria de acordo com id\",\n        \"tags\": [\"Categories\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id da categoria a ser buscada\"\n          }\n        ],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetCategory\"\n                },\n                \"examples\": {\n                  \"getCategory\": {\n                    \"value\": {\n                      \"id\": 3,\n                      \"name\": \"Typescript\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Category does not exist\"\n          }\n        }\n      }\n    },\n    \"/post\": {\n      \"post\": {\n        \"summary\": \"Rota de criação de publicações\",\n        \"description\": \"Rota responsável pela criação de novas publicações\",\n        \"tags\": [\"Posts\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/CreatePostBody\"\n              },\n              \"examples\": {\n                \"createPost\": {\n                  \"value\": {\n                    \"title\": \"Latest updates, August 1st\",\n                    \"content\": \"The whole text for the blog post goes here in this key\",\n                    \"categoryIds\": [1, 2]\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CreatePost\"\n                },\n                \"examples\": {\n                  \"post\": {\n                    \"value\": {\n                      \"id\": 3,\n                      \"title\": \"Latest updates, August 1st\",\n                      \"content\": \"The whole text for the blog post goes here in this key\",\n                      \"userId\": 1,\n                      \"updated\": \"2022-05-18T18:00:01.196Z\",\n                      \"published\": \"2022-05-18T18:00:01.196Z\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some required fields are invalid or missing\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Rota de listagem de publicações\",\n        \"description\": \"Rota responsável por listar todos as publicações criadas\",\n        \"tags\": [\"Posts\"],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListPosts\"\n                },\n                \"examples\": {\n                  \"listPosts\": {\n                    \"value\": [\n                      {\n                        \"id\": 1,\n                        \"title\": \"Post do Ano\",\n                        \"content\": \"Melhor post do ano\",\n                        \"userId\": 1,\n                        \"published\": \"2011-08-01T19:58:00.000Z\",\n                        \"updated\": \"2011-08-01T19:58:51.000Z\",\n                        \"user\": {\n                          \"id\": 1,\n                          \"displayName\": \"Lewis Hamilton\",\n                          \"email\": \"lewishamilton@gmail.com\",\n                          \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                        },\n                        \"categories\": [\n                          {\n                            \"id\": 1,\n                            \"name\": \"Inovação\"\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": 2,\n                        \"title\": \"Post 2\",\n                        \"content\": \"Melhor post 2\",\n                        \"userId\": 1,\n                        \"published\": \"2011-08-01T20:58:00.000Z\",\n                        \"updated\": \"2011-08-01T20:58:51.000Z\",\n                        \"user\": {\n                          \"id\": 1,\n                          \"displayName\": \"Lewis Hamilton\",\n                          \"email\": \"lewishamilton@gmail.com\",\n                          \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                        },\n                        \"categories\": [\n                          {\n                            \"id\": 1,\n                            \"name\": \"Inovação\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        }\n      }\n    },\n    \"/post/{id}\": {\n      \"get\": {\n        \"summary\": \"Rota de encontrar publicação pelo id\",\n        \"description\": \"Rota responsável por retornar publicação de acordo com id\",\n        \"tags\": [\"Posts\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id da publicação a ser buscada\"\n          }\n        ],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetPost\"\n                },\n                \"examples\": {\n                  \"getPost\": {\n                    \"value\": {\n                      \"id\": 1,\n                      \"title\": \"Post do Ano\",\n                      \"content\": \"Melhor post do ano\",\n                      \"userId\": 1,\n                      \"published\": \"2011-08-01T19:58:00.000Z\",\n                      \"updated\": \"2011-08-01T19:58:51.000Z\",\n                      \"user\": {\n                          \"id\": 1,\n                          \"displayName\": \"Lewis Hamilton\",\n                          \"email\": \"lewishamilton@gmail.com\",\n                          \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                      },\n                      \"categories\": [\n                          {\n                              \"id\": 1,\n                              \"name\": \"Inovação\"\n                          }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Post does not exist\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Rota de atualizar publicação pelo id\",\n        \"description\": \"Rota responsável por atualizar publicação de acordo com id\",\n        \"tags\": [\"Posts\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id da publicação a ser atualizada\"\n          }\n        ],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdatePostBody\"\n              },\n              \"examples\": {\n                \"createPost\": {\n                  \"value\": {\n                    \"title\": \"Latest updates, August 1st\",\n                    \"content\": \"The whole text for the blog post goes here in this key\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GetPost\"\n                },\n                \"examples\": {\n                  \"getPost\": {\n                    \"value\": {\n                      \"id\": 1,\n                      \"title\": \"Latest updates, August 1st\",\n                      \"content\": \"The whole text for the blog post goes here in this key\",\n                      \"userId\": 1,\n                      \"published\": \"2011-08-01T19:58:00.000Z\",\n                      \"updated\": \"2011-08-01T19:58:51.000Z\",\n                      \"user\": {\n                          \"id\": 1,\n                          \"displayName\": \"Lewis Hamilton\",\n                          \"email\": \"lewishamilton@gmail.com\",\n                          \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                      },\n                      \"categories\": [\n                          {\n                              \"id\": 1,\n                              \"name\": \"Inovação\"\n                          }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Some required fields are invalid or missing\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Post does not exist\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Rota de excluir publicação pelo id\",\n        \"description\": \"Rota responsável por excluir publicação de acordo com id\",\n        \"tags\": [\"Posts\"],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"id da publicação a ser excluída\"\n          }\n        ],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"404\": {\n            \"description\": \"Post does not exist\"\n          }\n        }\n      }\n    },\n    \"/post/search\": {\n      \"get\": {\n        \"summary\": \"Rota de pesquisar publicações\",\n        \"description\": \"Rota responsável por pesquisar publicação de acordo com termo de pesquisa fornecido na query\",\n        \"tags\": [\"Posts\"],\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"termo de pesquisa\"\n          }\n        ],\n        \"security\": [{ \"bearerAuth\": [] }],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ListPosts\"\n                },\n                \"examples\": {\n                  \"getPost\": {\n                    \"value\": [\n                      {\n                        \"id\": 2,\n                        \"title\": \"Vamos que vamos\",\n                        \"content\": \"Foguete não tem ré\",\n                        \"userId\": 1,\n                        \"published\": \"2011-08-01T19:58:00.000Z\",\n                        \"updated\": \"2011-08-01T19:58:51.000Z\",\n                        \"user\": {\n                          \"id\": 1,\n                          \"displayName\": \"Lewis Hamilton\",\n                          \"email\": \"lewishamilton@gmail.com\",\n                          \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                        },\n                        \"categories\": [\n                          {\n                            \"id\": 2,\n                            \"name\": \"Escola\"\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": 3,\n                        \"title\": \"Post 2\",\n                        \"content\": \"Vamos que vamos\",\n                        \"userId\": 1,\n                        \"published\": \"2011-08-01T20:58:00.000Z\",\n                        \"updated\": \"2011-08-01T20:58:51.000Z\",\n                        \"user\": {\n                          \"id\": 1,\n                          \"displayName\": \"Lewis Hamilton\",\n                          \"email\": \"lewishamilton@gmail.com\",\n                          \"image\": \"https://upload.wikimedia.org/wikipedia/commons/1/18/Lewis_Hamilton_2016_Malaysia_2.jpg\"\n                        },\n                        \"categories\": [\n                          {\n                            \"id\": 1,\n                            \"name\": \"Inovação\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Login\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CreateUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"image\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GetUser\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"displayName\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"image\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ListUsers\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\"\n            },\n            \"displayName\": {\n              \"type\": \"string\"\n            },\n            \"email\": {\n              \"type\": \"string\"\n            },\n            \"image\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"CreateCategory\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GetCategory\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ListCategories\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\"\n            },\n            \"name\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"CreatePostBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"categoryIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"number\"\n            }\n          }\n        }\n      },\n      \"UpdatePostBody\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CreatePost\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"number\"\n          },\n          \"updated\": {\n            \"type\": \"string\"\n          },\n          \"published\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"GetPost\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"number\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"content\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"number\"\n          },\n          \"updated\": {\n            \"type\": \"string\"\n          },\n          \"published\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"number\"\n              },\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"email\": {\n                \"type\": \"string\"\n              },\n              \"image\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"categories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\"\n                },\n                \"name\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"ListPosts\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"id\": {\n              \"type\": \"number\"\n            },\n            \"title\": {\n              \"type\": \"string\"\n            },\n            \"content\": {\n              \"type\": \"string\"\n            },\n            \"userId\": {\n              \"type\": \"number\"\n            },\n            \"updated\": {\n              \"type\": \"string\"\n            },\n            \"published\": {\n              \"type\": \"string\"\n            },\n            \"user\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"id\": {\n                  \"type\": \"number\"\n                },\n                \"displayName\": {\n                  \"type\": \"string\"\n                },\n                \"email\": {\n                  \"type\": \"string\"\n                },\n                \"image\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"categories\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"number\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"Token\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"token\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/raphaelalmeidamartins/blogs-api@ff91918183b00c12e7a3888bb52d2bde09691224/-/blob/src/swagger-br.json",
			"externalURLs": [
				{
					"url": "https://github.com/raphaelalmeidamartins/blogs-api/blob/ff91918183b00c12e7a3888bb52d2bde09691224/src/swagger-br.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/categories/{id}\": get: parameters: parse parameter \"id\": at src/swagger-br.json:298:11: parameter MUST contain either a schema property, or a content property"
}