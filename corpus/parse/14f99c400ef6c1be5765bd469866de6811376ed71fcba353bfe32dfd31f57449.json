{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "visagecloud.com-1.1-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/visagecloud.com-1.1-swagger.yaml",
			"byteSize": 87017,
			"content": "openapi: 3.0.0\nx-hasEquivalentPaths: true\ninfo:\n  contact:\n    email: office@visagecloud.com\n    name: VisageCloud\n    url: https://visagecloud.com\n  description: Face search, recognition \u0026 classification API. Just make a call to our REST\n    API each time your app needs to access face recognition and classification\n    capabilities.\n  license:\n    name: As per Developer Terms of Use\n    url: https://visagecloud.com/developer-terms-of-use\n  termsOfService: https://visagecloud.com/terms-of-use\n  title: VisageCloud\n  version: \"1.1\"\n  x-apisguru-categories:\n    - search\n  x-logo:\n    url: https://visagecloud.com/visage-cloud-logo.png\n  x-origin:\n    - format: swagger\n      url: https://visagecloud.com/v2/api-docs\n      version: \"2.0\"\n  x-providerName: visagecloud.com\ntags:\n  - description: Retrieve analytics for presence and audience\n    name: Analytics for presence and audience\n  - description: Manages Streams\n    name: Stream\n  - description: Performs image-recognition related operations\n    name: Analysis\n  - description: Create classifiers on existing faces\n    name: Classifier\n  - description: Manages collections\n    name: Collection\n  - description: Manages profiles associated with collections\n    name: Profile\n  - description: Account Controller\n    name: account-controller\npaths:\n  /rest/v1.1/account/account:\n    get:\n      operationId: getAccountByAccessKeyUsingGET\n      parameters:\n        - description: accessKey\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: secretKey\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get account information by accessKey and secretKey\n      tags:\n        - account-controller\n  /rest/v1.1/account/billing:\n    get:\n      operationId: getBillingPerAccountUsingGET\n      parameters:\n        - description: accessKey\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: secretKey\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: startDateTime\n          in: query\n          name: startDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: endDateTime\n          in: query\n          name: endDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: dateTemplate\n          in: query\n          name: dateTemplate\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get billing information by accessKey and secretKey\n      tags:\n        - account-controller\n  /rest/v1.1/account/changePassword:\n    post:\n      operationId: changePasswordUsingPOST\n      parameters:\n        - description: email\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n        - description: oldPassword\n          in: query\n          name: oldPassword\n          required: true\n          schema:\n            type: string\n        - description: newPassword\n          in: query\n          name: newPassword\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Change password for an account using old password\n      tags:\n        - account-controller\n  /rest/v1.1/account/login:\n    post:\n      operationId: loginWithEmailUsingPOST\n      parameters:\n        - description: email\n          in: query\n          name: email\n          required: true\n          schema:\n            type: string\n        - description: password\n          in: query\n          name: password\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get account information including accessKey and secretKey by email and\n        password\n      tags:\n        - account-controller\n  /rest/v1.1/analysis/compare:\n    get:\n      operationId: compareFacesUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The IDs of the faces which you want compared, comma-separated\n          in: query\n          name: faceHashes\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Show details\n          in: query\n          name: showDetails\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Compare several faces identified by faceHash, without depending on\n        mapping faces to profiles\n      tags:\n        - Analysis\n  /rest/v1.1/analysis/detection:\n    post:\n      operationId: performAnalysisUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Boolean value indicating whether you want the picture of the\n            analysis to be stored for later retrieval\n          in: query\n          name: storeAnalysisPicture\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Boolean value indicating whether you want the faces inside the\n            picture to be stored for later retrieval\n          in: query\n          name: storeFacePictures\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Boolean value indicating whether you want the result of the analysis\n            to be stored\n          in: query\n          name: storeResult\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: How many seconds the results should be retained in stoarage?\n          in: query\n          name: retentionTime\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: The URL of the picture, assuming it is served by a third party\n            server. Server should be accesible from the Internet or through\n            another netwoek by VisageCloud infrastructure\n          in: query\n          name: pictureURL\n          required: false\n          schema:\n            type: string\n        - description: Algorithm version (V2 is more performant but not backward compatible)\n          in: query\n          name: algorithmVersion\n          required: false\n          schema:\n            type: string\n            enum:\n              - V1\n              - V2\n            default: V2\n        - description: Auto-rotate to find flipped or rotate faces\n          in: query\n          name: autoRotate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Skip EXIF rotation procesing\n          in: query\n          name: skipEXIF\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Waits until the picture is successfully uploaded, before returning\n            the response back the the client\n          in: query\n          name: waitForPictureUpload\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: \"[For advanced users only] Change feature filters for robustness of\n            feature extraction. Tweaking this parameter may affect per\"\n          in: query\n          name: filters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"[For advanced users only] Options for preprocessing of image.\"\n          in: query\n          name: options\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                picture:\n                  description: The multipart/form-data version of the image, in case a\n                    direct upload is used. At least one of picture or pictureURL\n                    must be present\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Perform detection on a given picture or picture URL\n      tags:\n        - Analysis\n  /rest/v1.1/analysis/listLatest:\n    get:\n      operationId: retriveLatestUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: How many records to retrieve at a time\n          in: query\n          name: count\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve the last *count* operations per current account\n      tags:\n        - Analysis\n  /rest/v1.1/analysis/recognition:\n    post:\n      operationId: performRecognitionUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Boolean value indicating whether you want the picture of the\n            analysis to be stored for later retrieval\n          in: query\n          name: storeAnalysisPicture\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Boolean value indicating whether you want the faces inside the\n            picture to be stored for later retrieval\n          in: query\n          name: storeFacePictures\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Boolean value indicating whether you want the result of the analysis\n            to be stored\n          in: query\n          name: storeResult\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: How many seconds the results should be retained in stoarage?\n          in: query\n          name: retentionTime\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Uniquely identified collection that can store multiple profiles\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: Labels associated with the given picture or picture URL\n          in: query\n          name: labels\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filters that will be applied on the recognition operation\n          in: query\n          name: attributeFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - NO_FILTER\n                - GENDER_FILTER\n                - AGE_GROUP_FILTER\n              type: string\n            enum:\n              - NO_FILTER\n              - GENDER_FILTER\n              - AGE_GROUP_FILTER\n        - description: The URL of the picture\n          in: query\n          name: pictureURL\n          required: false\n          schema:\n            type: string\n        - description: Algorithm version (V2 is more performant but not backward compatible)\n          in: query\n          name: algorithmVersion\n          required: false\n          schema:\n            type: string\n            enum:\n              - V1\n              - V2\n            default: V2\n        - description: Auto-rotate to find flipped or rotate faces\n          in: query\n          name: autoRotate\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Skip EXIF rotation procesing\n          in: query\n          name: skipEXIF rotation processing\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Waits until the picture is successfully uploaded, before returning\n            the response back the the client\n          in: query\n          name: waitForPictureUpload\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: \"[For advanced users only] Change feature filters for robustness of\n            feature extraction. Tweaking this parameter may affect per\"\n          in: query\n          name: filters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: \"[For advanced users only] Options for preprocessing of image.\"\n          in: query\n          name: options\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                picture:\n                  description: The picture itself\n                  type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Perform labeled recognition on a given picture or picture URL\n      tags:\n        - Analysis\n  /rest/v1.1/analysis/retrieve:\n    get:\n      operationId: retrieveAnalysisUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The ID of the analysis for which the data will be retrieved\n          in: query\n          name: analysisId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve a complete analysis object including both detection and\n        recognition information\n      tags:\n        - Analysis\n  /rest/v1.1/analytics/counting:\n    post:\n      operationId: counterUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Collection ids\n          in: query\n          name: collectionIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Stream Ids\n          in: query\n          name: streamIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: startDateTime\n          in: query\n          name: startDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: endDateTime\n          in: query\n          name: endDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: visitDuration\n          in: query\n          name: visitDuration\n          required: false\n          schema:\n            type: integer\n            format: int64\n            default: 3600000\n        - description: maxIterations\n          in: query\n          name: maxIterations\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - description: maxBatchIterations\n          in: query\n          name: maxBatchIterations\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - description: minNeighborsMergedPerIteration\n          in: query\n          name: minNeighborsMergedPerIteration\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 5\n        - description: mergingStep\n          in: query\n          name: mergingStep\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 1\n        - description: shuffling\n          in: query\n          name: shuffling\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Count individuals in streams or collections\n      tags:\n        - Analytics for presence and audience\n  /rest/v1.1/analytics/presence/timeseries:\n    post:\n      operationId: presenceTimeseriesUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Stream Ids\n          in: query\n          name: streamIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: startDateTime\n          in: query\n          name: startDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: endDateTime\n          in: query\n          name: endDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: step\n          in: query\n          name: step\n          required: false\n          schema:\n            type: integer\n            format: int64\n            default: 3600\n        - description: attributes\n          in: query\n          name: attributes\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Show audience (based on number of occurrences of each person) breakdown\n        per declared attribute (age, gender).\n      tags:\n        - Analytics for presence and audience\n  /rest/v1.1/analytics/presence/total:\n    post:\n      operationId: presenceTotalUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Stream Ids\n          in: query\n          name: streamIds\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: startDateTime\n          in: query\n          name: startDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: endDateTime\n          in: query\n          name: endDateTime\n          required: false\n          schema:\n            type: string\n            format: date-time\n        - description: attributes\n          in: query\n          name: attributes\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Show presence (based on number of occurences of each face) breakdown per\n        declared attribute (age, gender)\n      tags:\n        - Analytics for presence and audience\n  /rest/v1.1/classifier/svm:\n    delete:\n      operationId: removeClassiferUsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the classifier that will be removed\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Delete existing classifier\n      tags:\n        - Classifier\n    get:\n      operationId: getClassiferFullUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the classifier that you want the status for\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get classifier full\n      tags:\n        - Classifier\n    post:\n      operationId: addSVMClassifierUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The name of the SVM classifier that will be created\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: Collection ids\n          in: query\n          name: collectionIds\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Preprocessor\n          in: query\n          name: preprocessor\n          required: false\n          schema:\n            type: string\n            default: FeaturePreprocessor\n        - description: Classification attribute name\n          in: query\n          name: classificationAttributeName\n          required: true\n          schema:\n            type: string\n        - description: Consider view point\n          in: query\n          name: considerViewPoints\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Seed for divididing training and evaluation sets\n          in: query\n          name: seed\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 179425537\n        - description: Training ratio\n          in: query\n          name: trainingRatio\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 0.8\n        - description: Probability parameter\n          in: query\n          name: probabilityParameter\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 1\n        - description: Gamma parameter\n          in: query\n          name: gammaParameter\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 0.5\n        - description: Nu parameter\n          in: query\n          name: nuParameter\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 0.25\n        - description: c parameter\n          in: query\n          name: cParameter\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 1\n        - description: SVM type parameter\n          in: query\n          name: svmTypeParameter\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Kernel type parameter\n          in: query\n          name: kernelTypeParameter\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 0\n        - description: Cache size parameter\n          in: query\n          name: cacheSizeParameter\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 500\n        - description: Eps parameter\n          in: query\n          name: epsParameter\n          required: false\n          schema:\n            type: number\n            format: double\n            default: 0.001\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Create new SVM classifier with given name\n      tags:\n        - Classifier\n  /rest/v1.1/classifier/svm/status:\n    get:\n      operationId: getClassiferStatusUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the classifier that you want the status for\n          in: query\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get classifer status\n      tags:\n        - Classifier\n  /rest/v1.1/collection/:\n    get:\n      operationId: getAllCollectionsUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve all collections\n      tags:\n        - Collection\n    post:\n      operationId: addCollectionUsingPOST\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                accessKey:\n                  description: The accessKey provided by VisageCloud\n                  type: string\n                secretKey:\n                  description: The secretKey provided by VisageCloud\n                  type: string\n                name:\n                  description: The name of the collection that will be created\n                  type: string\n                preload:\n                  description: Defined whether to preload collection\n                  type: boolean\n                  default: false\n                evictable:\n                  description: Defined whether the collection can be evicted\n                  type: boolean\n                  default: true\n                purposes:\n                  description: The newly declared purposes of the collection\n                  type: array\n                  enum:\n                    - FEATURES\n                    - LANDMARKS\n                    - ATTRIBUTES\n                  items:\n                    enum:\n                      - FEATURES\n                      - LANDMARKS\n                      - ATTRIBUTES\n                    type: string\n              required:\n                - accessKey\n                - secretKey\n                - name\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Create new empty collection with given name\n      tags:\n        - Collection\n  /rest/v1.1/collection/all:\n    get:\n      deprecated: true\n      operationId: getAllCollections2UsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve all collections\n      tags:\n        - Collection\n  /rest/v1.1/collection/collection:\n    delete:\n      deprecated: true\n      operationId: deleteCollection2UsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the collection that will be removed\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Delete existing collection with associated profiles and faces.\n      tags:\n        - Collection\n    get:\n      deprecated: true\n      operationId: getCollection2UsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the collection for which the data will be retrieved\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve existing collection content\n      tags:\n        - Collection\n    post:\n      deprecated: true\n      operationId: addCollection2UsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The name of the collection that will be created\n          in: query\n          name: collectionName\n          required: true\n          schema:\n            type: string\n        - description: Defined whether to preload collection\n          in: query\n          name: preload\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Defined whether the collection can be evicted\n          in: query\n          name: evictable\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: The newly declared purposes of the collection\n          in: query\n          name: purposes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - FEATURES\n                - LANDMARKS\n                - ATTRIBUTES\n              type: string\n            enum:\n              - FEATURES\n              - LANDMARKS\n              - ATTRIBUTES\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Create new empty collection with given name\n      tags:\n        - Collection\n  /rest/v1.1/collection/export/csv:\n    get:\n      operationId: exportCSVUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the collection for which the data will be retrieved\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                $ref: \"#/components/schemas/StreamingResponseBody\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve collection content for data analysis.\n      tags:\n        - Collection\n  /rest/v1.1/collection/purpose:\n    put:\n      deprecated: true\n      operationId: repurposeCollectionUsingPUT\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the collection for which the data will be retrieved\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: The newly declared purposes of the collection\n          in: query\n          name: purposes\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - FEATURES\n                - LANDMARKS\n                - ATTRIBUTES\n              type: string\n            enum:\n              - FEATURES\n              - LANDMARKS\n              - ATTRIBUTES\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Change purpose of existing collection\n      tags:\n        - Collection\n  \"/rest/v1.1/collection/{id}\":\n    delete:\n      operationId: deleteCollectionUsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the collection that will be removed\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Delete existing collection with associated profiles and faces.\n      tags:\n        - Collection\n    get:\n      operationId: getCollectionUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the collection for which the data will be retrieved\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieve existing collection content\n      tags:\n        - Collection\n    patch:\n      operationId: updateCollectionUsingPATCH\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The name of the collection that will be updated\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: The newly declared purposes of the collection\n          in: query\n          name: purposes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - FEATURES\n                - LANDMARKS\n                - ATTRIBUTES\n              type: string\n            enum:\n              - FEATURES\n              - LANDMARKS\n              - ATTRIBUTES\n        - description: The id of the collection that will be updated\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Update an existing collection with a given id\n      tags:\n        - Collection\n    post:\n      deprecated: true\n      operationId: updateCollection2UsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The name of the collection that will be updated\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: The newly declared purposes of the collection\n          in: query\n          name: purposes\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - FEATURES\n                - LANDMARKS\n                - ATTRIBUTES\n              type: string\n            enum:\n              - FEATURES\n              - LANDMARKS\n              - ATTRIBUTES\n        - description: The id of the collection that will be updated\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Update an existing collection with a given id\n      tags:\n        - Collection\n  \"/rest/v1.1/collection/{id}/profile\":\n    get:\n      operationId: getAllCollectionProfilesUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Gets all the profiles associated to a collection\n      tags:\n        - Collection\n  /rest/v1.1/profile/classificationAttributes:\n    delete:\n      deprecated: true\n      operationId: removeClassificationAttributesFromProfileUsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The profile associated with the classification attributes\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Removes classification attributes from a profile\n      tags:\n        - Profile\n    get:\n      deprecated: true\n      operationId: getClassificationAttributesFromProfileUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The profile associated with the classification attributes\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Gets classification attributes from a profile\n      tags:\n        - Profile\n    put:\n      deprecated: true\n      operationId: mapClassificationAttributesToProfileUsingPUT\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The profile associated with the classification attributes\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: Comma separated key:value classification attributes\n          in: query\n          name: classificationAttributes\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            \"*/*\":\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Maps classification attributes to a profile\n      tags:\n        - Profile\n  /rest/v1.1/profile/enrollmentStatus:\n    get:\n      operationId: getProfileEnrollmentStatusUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The profile that contains the faces\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: \"Gets the enrollment status of a profile: information on whether it is\n        suitable for authentication.\"\n      tags:\n        - Profile\n  /rest/v1.1/profile/map:\n    delete:\n      operationId: removeFacesFromProfileUsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Comma separated face hashes, that will be removed from a profile\n          in: query\n          name: faceHashes\n          required: true\n          schema:\n            type: string\n        - description: The profile that contains the face\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Removes (unmaps) a list of faces, identified by faceHashes, from a\n        profile, identified by profileId\n      tags:\n        - Profile\n    get:\n      operationId: getFacesFromProfileUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The profile that contains the faces\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Gets all the faceHashes associated to a profile\n      tags:\n        - Profile\n    post:\n      operationId: mapFacesToProfileUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Comma separated face hashes, that will be associated to a profile\n          in: query\n          name: faceHashes\n          required: true\n          schema:\n            type: string\n        - description: The profile that will store the face\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n        - description: The collection that contains the profile\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Adds (maps) a list of faces, identified by faceHashes, to a profile,\n        identified by profileId\n      tags:\n        - Profile\n  /rest/v1.1/profile/profile:\n    delete:\n      deprecated: true\n      operationId: deleteProfile2UsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Uniquely identified collection that can store multiple profiles\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: The profile id (provide this if you don't have the externalId\n          in: query\n          name: profileId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Deletes a profile and unmaps all its faces\n      tags:\n        - Profile\n    post:\n      operationId: addProfileUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Uniquely identified collection that can store multiple profiles\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: External reference to additional information you don’t want to share\n            with VisageCloud\n          in: query\n          name: externalId\n          required: false\n          schema:\n            type: string\n        - description: Human-readable label for the profile\n          in: query\n          name: screenName\n          required: false\n          schema:\n            type: string\n        - description: Allows you to do finer filtering in face recognition\n          in: query\n          name: labels\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Comma separated key:value classification attributes\n          in: query\n          name: classificationAttributes\n          required: false\n          schema:\n            type: string\n        - description: Comma separated key:value details of profile\n          in: query\n          name: details\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Creates a new profile with no faces associated to it (empty profile)\n      tags:\n        - Profile\n  \"/rest/v1.1/profile/{id}\":\n    delete:\n      operationId: deleteProfileUsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Uniquely identified collection that can store multiple profiles\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: The profile id (provide this if you don't have the externalId\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Deletes a profile and unmaps all its faces\n      tags:\n        - Profile\n    get:\n      operationId: getProfileUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: Uniquely identified collection that can store multiple profiles\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: Retrieves the profile with all its associated faces\n          in: query\n          name: withFaces\n          required: false\n          schema:\n            type: string\n            default: \"false\"\n        - description: The profile id (provide this if you don't have the externalId\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Retrieves a profile\n      tags:\n        - Profile\n    patch:\n      operationId: updateProfileUsingPATCH\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the profile that will be updated\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n        - description: Uniquely identified collection that can store multiple profiles\n          in: query\n          name: collectionId\n          required: true\n          schema:\n            type: string\n        - description: External reference to additional information you don’t want to share\n            with VisageCloud\n          in: query\n          name: externalId\n          required: false\n          schema:\n            type: string\n        - description: Human-readable label for the profile\n          in: query\n          name: screenName\n          required: false\n          schema:\n            type: string\n        - description: Allows you to do finer filtering in face recognition\n          in: query\n          name: labels\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Comma separated key:value classification attributes\n          in: query\n          name: classificationAttributes\n          required: false\n          schema:\n            type: string\n        - description: Comma separated key:value details of profile\n          in: query\n          name: details\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Update an existing profile with a given id\n      tags:\n        - Profile\n  /rest/v1.1/stream/all:\n    get:\n      operationId: streamsByAccountUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Show status of all streams from account\n      tags:\n        - Stream\n  /rest/v1.1/stream/attendance:\n    get:\n      operationId: getLastNAttedanceUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream for which the frames will be retrieved\n          in: query\n          name: streamIds\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: How many frames to retrieve at a time\n          in: query\n          name: count\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get last N recognized individuals from stream\n      tags:\n        - Stream\n  /rest/v1.1/stream/cleanup:\n    patch:\n      operationId: cleanupStreamUsingPATCH\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream that will be stopped\n          in: query\n          name: streamId\n          required: true\n          schema:\n            type: string\n        - description: Frames older than interval (seconds) will be cleaned up\n          in: query\n          name: interval\n          required: true\n          schema:\n            type: integer\n            format: int32\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Cleanup frames older than specified timeframe\n      tags:\n        - Stream\n  /rest/v1.1/stream/frameImage:\n    get:\n      operationId: getFrameImageUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream for which the frames will be retrieved\n          in: query\n          name: streamId\n          required: true\n          schema:\n            type: string\n        - description: Timestamp of frame to retrieve\n          in: query\n          name: timestamp\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: OK\n          content:\n            image/jpeg:\n              schema:\n                items:\n                  format: byte\n                  type: string\n                type: array\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get individual frame image\n      tags:\n        - Stream\n  /rest/v1.1/stream/frames:\n    get:\n      operationId: getLastNFramesUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey or readOnlyKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream for which the frames will be retrieved\n          in: query\n          name: streamId\n          required: true\n          schema:\n            type: string\n        - description: How many frames to retrieve at a time\n          in: query\n          name: count\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - description: The collection id you want to run recognition against\n          in: query\n          name: collectionId\n          required: false\n          schema:\n            type: string\n        - description: Labels associated with the given picture or picture URL\n          in: query\n          name: labels\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Filters that will be applied on the recognition operation\n          in: query\n          name: attributeFilters\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              enum:\n                - NO_FILTER\n                - GENDER_FILTER\n                - AGE_GROUP_FILTER\n              type: string\n            enum:\n              - NO_FILTER\n              - GENDER_FILTER\n              - AGE_GROUP_FILTER\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get last processed N frames from stream\n      tags:\n        - Stream\n  /rest/v1.1/stream/start:\n    patch:\n      operationId: startStreamUsingPATCH\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream that will be started\n          in: query\n          name: streamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Start existing stream\n      tags:\n        - Stream\n  /rest/v1.1/stream/stop:\n    patch:\n      operationId: stopStreamUsingPATCH\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream that will be stopped\n          in: query\n          name: streamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Stop existing stream\n      tags:\n        - Stream\n  /rest/v1.1/stream/stream:\n    post:\n      operationId: addStreamUsingPOST\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The name of the stream that will be created\n          in: query\n          name: name\n          required: true\n          schema:\n            type: string\n        - description: The url of the stream\n          in: query\n          name: url\n          required: true\n          schema:\n            type: string\n        - description: Streaming method\n          in: query\n          name: method\n          required: false\n          schema:\n            type: string\n            enum:\n              - WEBRTC_PULL\n              - WEBRTC_PUSH\n              - INGESTION_ENDPOINT\n            default: WEBRTC_PUSH\n        - description: Username\n          in: query\n          name: username\n          required: false\n          schema:\n            type: string\n        - description: Password\n          in: query\n          name: password\n          required: false\n          schema:\n            type: string\n        - description: Boolean value indicating whether you want the original picture to be\n            stored for later retrieval\n          in: query\n          name: skipFramesWithNoFaces\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - description: Number of seconds for frames to be kept. Default is 605000s (7 days)\n          in: query\n          name: retentionTime\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 605000\n        - description: Boolean value indicating whether you want the original picture to be\n            stored for later retrieval\n          in: query\n          name: storeOriginalFrames\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Boolean value indicating whether you want to store permanently store\n            faces clippings of the recognized faces\n          in: query\n          name: storeAttendanceFaces\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Boolean value indicating whether you want to store permanently store\n            frames with a recognized face in them\n          in: query\n          name: storeAttendanceFrames\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: Boolean value indicating whether the stream is currently active or\n            not\n          in: query\n          name: isActive\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - description: List of collection ids which will be used to measure attendance\n          in: query\n          name: associatedCollections\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Attributes of the stream\n          in: query\n          name: attributes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"201\":\n          description: Created\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Create new stream with given name\n      tags:\n        - Stream\n  \"/rest/v1.1/stream/{id}\":\n    delete:\n      operationId: removeStreamUsingDELETE\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream that will be removed\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Delete existing stream\n      tags:\n        - Stream\n  \"/rest/v1.1/stream/{streamId}\":\n    get:\n      operationId: getStreamUsingGET\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream for which the data will be retrieved\n          in: path\n          name: streamId\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n        \"404\":\n          description: Not Found\n      summary: Get an existing stream with a given ID\n      tags:\n        - Stream\n    patch:\n      operationId: updateStreamUsingPATCH\n      parameters:\n        - description: The accessKey provided by VisageCloud\n          in: query\n          name: accessKey\n          required: true\n          schema:\n            type: string\n        - description: The secretKey provided by VisageCloud\n          in: query\n          name: secretKey\n          required: true\n          schema:\n            type: string\n        - description: The id of the stream that will be updated\n          in: path\n          name: streamId\n          required: true\n          schema:\n            type: string\n        - description: The name of the stream that will be updated\n          in: query\n          name: name\n          required: false\n          schema:\n            type: string\n        - description: The url of the stream\n          in: query\n          name: url\n          required: false\n          schema:\n            type: string\n        - description: Streaming method\n          in: query\n          name: method\n          required: false\n          schema:\n            type: string\n            enum:\n              - WEBRTC_PULL\n              - WEBRTC_PUSH\n              - INGESTION_ENDPOINT\n        - description: Username\n          in: query\n          name: username\n          required: false\n          schema:\n            type: string\n        - description: Password\n          in: query\n          name: password\n          required: false\n          schema:\n            type: string\n        - description: Boolean value indicating whether you want the original picture to be\n            stored for later retrieval\n          in: query\n          name: skipFramesWithNoFaces\n          required: false\n          schema:\n            type: boolean\n        - description: Number of seconds for frames to be kept\n          in: query\n          name: retentionTime\n          required: false\n          schema:\n            type: integer\n            format: int32\n        - description: Boolean value indicating whether you want the original picture to be\n            stored for later retrieval\n          in: query\n          name: storeOriginalFrames\n          required: false\n          schema:\n            type: boolean\n        - description: Boolean value indicating whether you want to store permanently store\n            faces clippings of the recognized faces\n          in: query\n          name: storeAttendanceFaces\n          required: false\n          schema:\n            type: boolean\n        - description: Boolean value indicating whether you want to store permanently store\n            frames with a recognized face in them\n          in: query\n          name: storeAttendanceFrames\n          required: false\n          schema:\n            type: boolean\n        - description: Boolean value indicating whether the stream is currently active or\n            not\n          in: query\n          name: isActive\n          required: false\n          schema:\n            type: boolean\n        - description: List of collection ids which will be used to measure attendance\n          in: query\n          name: associatedCollections\n          required: false\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - description: Attributes of the stream\n          in: query\n          name: attributes\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RestResponse\"\n        \"204\":\n          description: No Content\n        \"401\":\n          description: Unauthorized\n        \"403\":\n          description: Forbidden\n      summary: Update an existing stream with a given ID\n      tags:\n        - Stream\nservers:\n  - url: https://visagecloud.com/\ncomponents:\n  schemas:\n    RestResponse:\n      properties:\n        message:\n          type: string\n        payload:\n          type: object\n        status:\n          type: string\n      type: object\n    StreamingResponseBody:\n      type: object\n",
			"canonicalURL": "/github.com/restful-ma/thresholds@5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/-/blob/benchmark-repository/openapi/visagecloud.com-1.1-swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/restful-ma/thresholds/blob/5b0b2a3322d3b2b7c0e0f2c0c0ad0e524e67bf82/benchmark-repository/openapi/visagecloud.com-1.1-swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/rest/v1.1/analysis/recognition\": post: operation \"performRecognitionUsingPOST\": parameters: parse parameter \"attributeFilters\": parse schema: at benchmark-repository/openapi/visagecloud.com-1.1-swagger.yaml:498:15: parse enum values: parse value \"\\\"NO_FILTER\\\"\": expected type \"array\", got \"string\""
}