{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ludoo0d0a/geocaching-api"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "contracts/openapi.yaml",
			"byteSize": 169746,
			"content": "components:\n  schemas:\n    AdditionalWaypoint:\n      properties:\n        coordinates:\n          $ref: '#/components/schemas/Coordinates'\n        description:\n          type: string\n        name:\n          type: string\n        prefix:\n          type: string\n        referenceCode:\n          type: string\n        typeId:\n          format: int32\n          type: integer\n        typeName:\n          type: string\n        url:\n          type: string\n      type: object\n    Attribute:\n      properties:\n        id:\n          format: int32\n          type: integer\n        imageUrl:\n          type: string\n        isOn:\n          type: boolean\n        name:\n          type: string\n      type: object\n    AttributeType:\n      properties:\n        hasNoOption:\n          type: boolean\n        hasYesOption:\n          type: boolean\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n        noIconUrl:\n          type: string\n        notChosenIconUrl:\n          type: string\n        yesIconUrl:\n          type: string\n      type: object\n    BulkFailure:\n      properties:\n        message:\n          type: string\n        referenceCode:\n          type: string\n        statusCode:\n          format: int32\n          type: integer\n      type: object\n    BulkResponse:\n      properties:\n        failures:\n          items:\n            $ref: '#/components/schemas/BulkFailure'\n          type: array\n        successes:\n          items:\n            type: string\n          type: array\n      type: object\n    Coordinates:\n      properties:\n        latitude:\n          format: double\n          type: number\n        longitude:\n          format: double\n          type: number\n      required:\n        - latitude\n        - longitude\n      type: object\n    Country:\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    FriendRequest:\n      properties:\n        id:\n          format: int32\n          type: integer\n        isOutgoing:\n          type: boolean\n        message:\n          type: string\n        requestDateUtc:\n          format: date-time\n          type: string\n        requested:\n          $ref: '#/components/schemas/UserReference'\n        requestedUserCode:\n          type: string\n        requestor:\n          $ref: '#/components/schemas/UserReference'\n        requestorUserCode:\n          type: string\n      required:\n        - requestedUserCode\n        - message\n      type: object\n    GeoTour:\n      properties:\n        coverImageUrl:\n          type: string\n        description:\n          type: string\n        favoritePoints:\n          format: int32\n          type: integer\n        geocacheCount:\n          format: int32\n          type: integer\n        logoImageUrl:\n          type: string\n        name:\n          type: string\n        postedCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n        referenceCode:\n          type: string\n        sponsor:\n          $ref: '#/components/schemas/Sponsor'\n        url:\n          type: string\n      type: object\n    Geocache:\n      properties:\n        additionalWaypoints:\n          items:\n            $ref: '#/components/schemas/AdditionalWaypoint'\n          type: array\n        attributes:\n          items:\n            $ref: '#/components/schemas/Attribute'\n          type: array\n        backgroundImageUrl:\n          type: string\n        containsHtml:\n          type: boolean\n        difficulty:\n          description: Difficulty of cache between 1.0 and 5.0\n          format: double\n          type: number\n        eventEndDate:\n          format: date-time\n          type: string\n        favoritePoints:\n          description: The number of favorite points on the Geocache\n          format: int32\n          type: integer\n        findCount:\n          format: int32\n          type: integer\n        geoTours:\n          items:\n            $ref: '#/components/schemas/GeoTour'\n          type: array\n        geocacheLogs:\n          items:\n            $ref: '#/components/schemas/GeocacheLog'\n          type: array\n        geocacheSize:\n          $ref: '#/components/schemas/GeocacheSize'\n        geocacheType:\n          $ref: '#/components/schemas/GeocacheType'\n        hints:\n          description: Hints to find the geocache.\n          type: string\n        ianaTimezoneId:\n          type: string\n        images:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        isPremiumOnly:\n          type: boolean\n        lastVisitedDate:\n          format: date-time\n          type: string\n        location:\n          $ref: '#/components/schemas/Location'\n        longDescription:\n          description: Detailed description of the geocache.\n          type: string\n        name:\n          description: Name of the Geocache\n          type: string\n        owner:\n          $ref: '#/components/schemas/User'\n        ownerAlias:\n          type: string\n        ownerCode:\n          description: The reference code of the geocache owner\n          type: string\n        placedDate:\n          description: >-\n            Date the geocache was placed (If the Geocache is an event then this\n            represents the date of the event).\n          format: date-time\n          type: string\n        postedCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n          description: The posted coordinates of the Geocache\n        publishedDate:\n          format: date-time\n          type: string\n        referenceCode:\n          description: This code uniquely identifies the geocache\n          type: string\n        relatedWebPage:\n          type: string\n        shortDescription:\n          description: Summary or short description of the geocache.\n          type: string\n        size:\n          description: Container or Size of cache\n          enum:\n            - Unknown\n            - Micro\n            - Regular\n            - Large\n            - Virtual\n            - Other\n            - Small\n          type: string\n        status:\n          description: The state of the Geocache\n          enum:\n            - Unpublished\n            - Active\n            - Disabled\n            - Locked\n            - Archived\n          type: string\n        terrain:\n          description: Terrain of cache between 1.0 and 5.0\n          format: double\n          type: number\n        trackableCount:\n          description: The number of trackables on the Geocache\n          format: int32\n          type: integer\n        trackables:\n          items:\n            $ref: '#/components/schemas/Trackable'\n          type: array\n        type:\n          description: The type of Geocache\n          enum:\n            - Traditional\n            - MultiCache\n            - Virtual\n            - Letterbox\n            - Event\n            - Mystery\n            - ProjectApe\n            - Webcam\n            - Locationless\n            - Cito\n            - EarthCache\n            - MegaEvent\n            - GpsAdventuresExhibit\n            - Wherigo\n            - LostAndFoundEvent\n            - GeocachingHq\n            - LostAndFoundCelebration\n            - BlockParty\n            - GigaEvent\n          type: string\n        url:\n          type: string\n        userData:\n          $ref: '#/components/schemas/UserData'\n        userWaypoints:\n          items:\n            $ref: '#/components/schemas/UserWaypoint'\n          type: array\n      type: object\n    GeocacheCount:\n      properties:\n        count:\n          format: int32\n          type: integer\n        geocacheType:\n          $ref: '#/components/schemas/GeocacheType'\n      type: object\n    GeocacheLimit:\n      properties:\n        fullCallsRemaining:\n          format: int32\n          type: integer\n        fullCallsSecondsToLive:\n          format: int32\n          type: integer\n        liteCallsRemaining:\n          format: int32\n          type: integer\n        liteCallsSecondsToLive:\n          format: int32\n          type: integer\n      type: object\n    GeocacheList:\n      properties:\n        count:\n          description: Number of items on the list\n          format: int32\n          type: integer\n        createdDateUtc:\n          description: When the list was created\n          format: date-time\n          type: string\n        description:\n          description: Description of the list\n          type: string\n        findCount:\n          format: int32\n          type: integer\n        isPublic:\n          type: boolean\n        isShared:\n          type: boolean\n        lastUpdatedDateUtc:\n          description: >-\n            When was the list last updated.  If the list is a pocket query then\n            this property references the last time it was generated. (default\n            order: desc)\n          format: date-time\n          type: string\n        name:\n          description: Name of the list\n          type: string\n        ownerCode:\n          type: string\n        referenceCode:\n          description: >-\n            This unqiuely identifies the list.  Use this code to get more\n            details about this list. Example (PQ25)\n          type: string\n        typeId:\n          description: List Type\n          format: int32\n          type: integer\n        url:\n          type: string\n      required:\n        - name\n      type: object\n    GeocacheLog:\n      properties:\n        geocacheCode:\n          type: string\n        geocacheLogType:\n          $ref: '#/components/schemas/GeocacheLogType'\n        geocacheName:\n          type: string\n        ianaTimezoneId:\n          type: string\n        imageCount:\n          format: int32\n          type: integer\n        images:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        isArchived:\n          type: boolean\n        isEncoded:\n          type: boolean\n        loggedDate:\n          format: date-time\n          type: string\n        owner:\n          $ref: '#/components/schemas/User'\n        ownerCode:\n          type: string\n        referenceCode:\n          type: string\n        text:\n          type: string\n        type:\n          type: string\n        updatedCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n        url:\n          type: string\n        usedFavoritePoint:\n          type: boolean\n      required:\n        - loggedDate\n        - text\n        - geocacheCode\n      type: object\n    GeocacheLogType:\n      properties:\n        id:\n          format: int32\n          type: integer\n        imageUrl:\n          type: string\n        name:\n          type: string\n      type: object\n    GeocacheNote:\n      properties:\n        note:\n          type: string\n      required:\n        - note\n      type: object\n    GeocacheSize:\n      properties:\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    GeocacheType:\n      properties:\n        id:\n          format: int32\n          type: integer\n        imageUrl:\n          type: string\n        name:\n          type: string\n      type: object\n    HQPromotionMetadata:\n      properties:\n        campaignId:\n          description: Unique Campaign Identifier\n          format: int32\n          type: integer\n        iconData:\n          description: Byte array containing the icon for the campaign in png\n          type: string\n        linkSubText:\n          description: >-\n            SubText that should be displayed on the link/button leading to the\n            campaign page.\n          type: string\n        linkText:\n          description: >-\n            Text that should be displayed on the link/button leading to the\n            campaign page.\n          type: string\n        linkVisibleEndDateUtc:\n          description: >-\n            UTC date and time at which the link should stop showing up to get to\n            the page (on the profile page, in the app, ...)\n          format: date-time\n          type: string\n        linkVisibleStartDateUtc:\n          description: >-\n            UTC date and time at which the link should start showing up to get\n            to the page (on the profile page, in the app, ...)\n          format: date-time\n          type: string\n        pageTitle:\n          description: Page title for the campaign.\n          type: string\n        relativeUrl:\n          description: >-\n            Link off geocaching root for the campaign (\"/play/leaderboard\",\n            \"/play/hqpromo/campaignname\" for example)\n          type: string\n      type: object\n    Image:\n      properties:\n        createdDate:\n          format: date-time\n          type: string\n        description:\n          description: Description of the image\n          type: string\n        guid:\n          format: uuid\n          type: string\n        largeUrl:\n          readOnly: true\n          type: string\n        referenceCode:\n          type: string\n        thumbnailUrl:\n          readOnly: true\n          type: string\n        url:\n          type: string\n      type: object\n    ListGeocache:\n      properties:\n        additionalWaypoints:\n          items:\n            $ref: '#/components/schemas/AdditionalWaypoint'\n          type: array\n        attributes:\n          items:\n            $ref: '#/components/schemas/Attribute'\n          type: array\n        backgroundImageUrl:\n          type: string\n        containsHtml:\n          type: boolean\n        difficulty:\n          description: Difficulty of cache between 1.0 and 5.0\n          format: double\n          type: number\n        eventEndDate:\n          format: date-time\n          type: string\n        favoritePoints:\n          description: The number of favorite points on the Geocache\n          format: int32\n          type: integer\n        findCount:\n          format: int32\n          type: integer\n        geoTours:\n          items:\n            $ref: '#/components/schemas/GeoTour'\n          type: array\n        geocacheLogs:\n          items:\n            $ref: '#/components/schemas/GeocacheLog'\n          type: array\n        geocacheSize:\n          $ref: '#/components/schemas/GeocacheSize'\n        geocacheType:\n          $ref: '#/components/schemas/GeocacheType'\n        hints:\n          description: Hints to find the geocache.\n          type: string\n        ianaTimezoneId:\n          type: string\n        images:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        isPremiumOnly:\n          type: boolean\n        lastVisitedDate:\n          format: date-time\n          type: string\n        listItemName:\n          type: string\n        location:\n          $ref: '#/components/schemas/Location'\n        longDescription:\n          description: Detailed description of the geocache.\n          type: string\n        name:\n          description: Name of the Geocache\n          type: string\n        owner:\n          $ref: '#/components/schemas/User'\n        ownerAlias:\n          type: string\n        ownerCode:\n          description: The reference code of the geocache owner\n          type: string\n        placedDate:\n          description: >-\n            Date the geocache was placed (If the Geocache is an event then this\n            represents the date of the event).\n          format: date-time\n          type: string\n        postedCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n          description: The posted coordinates of the Geocache\n        publishedDate:\n          format: date-time\n          type: string\n        referenceCode:\n          description: This code uniquely identifies the geocache\n          type: string\n        relatedWebPage:\n          type: string\n        shortDescription:\n          description: Summary or short description of the geocache.\n          type: string\n        size:\n          description: Container or Size of cache\n          enum:\n            - Micro\n            - Unknown\n            - Other\n            - Small\n            - Regular\n            - Virtual\n            - Large\n          type: string\n        status:\n          description: The state of the Geocache\n          enum:\n            - Unpublished\n            - Active\n            - Disabled\n            - Locked\n            - Archived\n          type: string\n        terrain:\n          description: Terrain of cache between 1.0 and 5.0\n          format: double\n          type: number\n        trackableCount:\n          description: The number of trackables on the Geocache\n          format: int32\n          type: integer\n        trackables:\n          items:\n            $ref: '#/components/schemas/Trackable'\n          type: array\n        type:\n          description: The type of Geocache\n          enum:\n            - Traditional\n            - MultiCache\n            - Virtual\n            - Letterbox\n            - Event\n            - Mystery\n            - ProjectApe\n            - Webcam\n            - Locationless\n            - Cito\n            - EarthCache\n            - MegaEvent\n            - GpsAdventuresExhibit\n            - Wherigo\n            - LostAndFoundEvent\n            - GeocachingHq\n            - LostAndFoundCelebration\n            - BlockParty\n            - GigaEvent\n          type: string\n        url:\n          type: string\n        userData:\n          $ref: '#/components/schemas/UserData'\n        userWaypoints:\n          items:\n            $ref: '#/components/schemas/UserWaypoint'\n          type: array\n      type: object\n    Location:\n      properties:\n        country:\n          type: string\n        countryId:\n          format: int32\n          type: integer\n        state:\n          type: string\n        stateId:\n          format: int32\n          type: integer\n      type: object\n    LogDraft:\n      properties:\n        geocacheCode:\n          type: string\n        geocacheLogType:\n          $ref: '#/components/schemas/GeocacheLogType'\n        geocacheName:\n          type: string\n        guid:\n          format: uuid\n          type: string\n        imageCount:\n          format: int32\n          type: integer\n        logType:\n          type: string\n        loggedDate:\n          format: date-time\n          type: string\n        loggedDateUtc:\n          format: date-time\n          type: string\n        note:\n          type: string\n        referenceCode:\n          type: string\n        useFavoritePoint:\n          type: boolean\n      type: object\n    MembershipLevel:\n      properties:\n        id:\n          format: int32\n          readOnly: true\n          type: integer\n        name:\n          readOnly: true\n          type: string\n      type: object\n    PostGeocacheList:\n      properties:\n        description:\n          description: Description of the list\n          type: string\n        isPublic:\n          type: boolean\n        isShared:\n          type: boolean\n        name:\n          description: Name of the list\n          type: string\n        typeId:\n          description: List Type\n          format: int32\n          type: integer\n      required:\n        - name\n      type: object\n    PostGeocacheLog:\n      properties:\n        geocacheCode:\n          type: string\n        geocacheLogType:\n          $ref: '#/components/schemas/GeocacheLogType'\n        loggedDate:\n          format: date-time\n          type: string\n        text:\n          type: string\n        type:\n          type: string\n        updatedCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n        usedFavoritePoint:\n          type: boolean\n      required:\n        - loggedDate\n        - text\n        - geocacheCode\n      type: object\n    PostImage:\n      properties:\n        base64ImageData:\n          type: string\n        description:\n          description: Description of the image\n          type: string\n        guid:\n          format: uuid\n          type: string\n      required:\n        - base64ImageData\n      type: object\n    PostListGeocache:\n      properties:\n        name:\n          type: string\n        referenceCode:\n          type: string\n      type: object\n    PostLogDraft:\n      properties:\n        geocacheCode:\n          type: string\n        geocacheLogType:\n          $ref: '#/components/schemas/GeocacheLogType'\n        guid:\n          format: uuid\n          type: string\n        logType:\n          type: string\n        loggedDate:\n          format: date-time\n          type: string\n        loggedDateUtc:\n          format: date-time\n          type: string\n        note:\n          type: string\n        useFavoritePoint:\n          type: boolean\n      required:\n        - geocacheCode\n      type: object\n    PostTrackableLog:\n      properties:\n        coordinates:\n          $ref: '#/components/schemas/Coordinates'\n        geocacheCode:\n          type: string\n        isRot13Encoded:\n          type: boolean\n        loggedDate:\n          format: date-time\n          type: string\n        text:\n          type: string\n        trackableCode:\n          type: string\n        trackableLogType:\n          $ref: '#/components/schemas/TrackableLogType'\n        trackingNumber:\n          type: string\n        typeId:\n          format: int32\n          type: integer\n      required:\n        - loggedDate\n        - text\n      type: object\n    PostUserWaypoint:\n      properties:\n        coordinates:\n          $ref: '#/components/schemas/Coordinates'\n        description:\n          type: string\n        geocacheCode:\n          type: string\n        isCorrectedCoordinates:\n          type: boolean\n      required:\n        - isCorrectedCoordinates\n        - coordinates\n        - geocacheCode\n      type: object\n    PromotedDraft:\n      properties:\n        draftDeleted:\n          type: boolean\n        failedImages:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        favoritePointApplied:\n          type: boolean\n        geocacheLog:\n          $ref: '#/components/schemas/GeocacheLog'\n        successfulImages:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n      type: object\n    Souvenir:\n      properties:\n        description:\n          type: string\n        foundDateUtc:\n          format: date-time\n          type: string\n        id:\n          format: int32\n          type: integer\n        imagePath:\n          type: string\n        thumbImagePath:\n          type: string\n        title:\n          type: string\n        url:\n          type: string\n      type: object\n    Sponsor:\n      properties:\n        name:\n          type: string\n        relatedWebPage:\n          type: string\n        relatedWebPageText:\n          type: string\n      type: object\n    State:\n      properties:\n        countryId:\n          format: int32\n          type: integer\n        id:\n          format: int32\n          type: integer\n        name:\n          type: string\n      type: object\n    Trackable:\n      properties:\n        allowedToBeCollected:\n          type: boolean\n        currentGeocacheCode:\n          type: string\n        currentGeocacheName:\n          type: string\n        description:\n          type: string\n        goal:\n          type: string\n        holder:\n          $ref: '#/components/schemas/User'\n        holderCode:\n          type: string\n        iconUrl:\n          type: string\n        imageCount:\n          format: int32\n          type: integer\n        images:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        inHolderCollection:\n          type: boolean\n        isMissing:\n          type: boolean\n        kilometersTraveled:\n          format: double\n          type: number\n        milesTraveled:\n          format: double\n          type: number\n        name:\n          type: string\n        originCountry:\n          type: string\n        owner:\n          $ref: '#/components/schemas/User'\n        ownerCode:\n          type: string\n        referenceCode:\n          type: string\n        releasedDate:\n          type: string\n        trackableLogs:\n          items:\n            $ref: '#/components/schemas/TrackableLog'\n          type: array\n        trackableType:\n          $ref: '#/components/schemas/TrackableType'\n        trackingNumber:\n          type: string\n        type:\n          type: string\n        url:\n          type: string\n      type: object\n    TrackableCount:\n      properties:\n        count:\n          format: int32\n          type: integer\n        trackableType:\n          $ref: '#/components/schemas/TrackableType'\n      type: object\n    TrackableLog:\n      properties:\n        coordinates:\n          $ref: '#/components/schemas/Coordinates'\n        geocacheCode:\n          type: string\n        geocacheName:\n          type: string\n        imageCount:\n          format: int32\n          type: integer\n        images:\n          items:\n            $ref: '#/components/schemas/Image'\n          type: array\n        isRot13Encoded:\n          type: boolean\n        loggedDate:\n          format: date-time\n          type: string\n        owner:\n          $ref: '#/components/schemas/User'\n        ownerCode:\n          type: string\n        referenceCode:\n          type: string\n        text:\n          type: string\n        trackableCode:\n          type: string\n        trackableLogType:\n          $ref: '#/components/schemas/TrackableLogType'\n        typeId:\n          format: int32\n          type: integer\n        url:\n          type: string\n      required:\n        - loggedDate\n        - text\n      type: object\n    TrackableLogType:\n      properties:\n        id:\n          format: int32\n          type: integer\n        imageUrl:\n          type: string\n        name:\n          type: string\n      type: object\n    TrackableType:\n      properties:\n        id:\n          format: int32\n          type: integer\n        imageUrl:\n          type: string\n        name:\n          type: string\n      type: object\n    User:\n      properties:\n        avatarUrl:\n          type: string\n        bannerUrl:\n          type: string\n        favoritePoints:\n          format: int32\n          type: integer\n        findCount:\n          format: int32\n          type: integer\n        geocacheFindCounts:\n          items:\n            $ref: '#/components/schemas/GeocacheCount'\n          type: array\n        geocacheHideCounts:\n          items:\n            $ref: '#/components/schemas/GeocacheCount'\n          type: array\n        geocacheLimits:\n          $ref: '#/components/schemas/GeocacheLimit'\n        hideCount:\n          format: int32\n          type: integer\n        homeCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n        isFriend:\n          type: boolean\n        joinedDateUtc:\n          format: date-time\n          type: string\n        membershipLevelId:\n          format: int32\n          type: integer\n        optedInFriendSharing:\n          type: boolean\n        profileText:\n          type: string\n        referenceCode:\n          type: string\n        trackableFindCounts:\n          items:\n            $ref: '#/components/schemas/TrackableCount'\n          type: array\n        trackableOwnedCounts:\n          items:\n            $ref: '#/components/schemas/TrackableCount'\n          type: array\n        url:\n          type: string\n        username:\n          type: string\n      type: object\n    UserData:\n      properties:\n        correctedCoordinates:\n          $ref: '#/components/schemas/Coordinates'\n        dnfDate:\n          format: date-time\n          type: string\n        foundDate:\n          description: The date the user found the Geocache\n          format: date-time\n          type: string\n        isFavorited:\n          type: boolean\n        note:\n          type: string\n      type: object\n    UserReference:\n      properties:\n        avatarUrl:\n          type: string\n        referenceCode:\n          type: string\n        username:\n          type: string\n      type: object\n    UserWaypoint:\n      properties:\n        coordinates:\n          $ref: '#/components/schemas/Coordinates'\n        description:\n          type: string\n        geocacheCode:\n          type: string\n        isCorrectedCoordinates:\n          type: boolean\n        referenceCode:\n          type: string\n      required:\n        - isCorrectedCoordinates\n        - coordinates\n        - geocacheCode\n      type: object\n  securitySchemes:\n    AccessToken:\n      description: AccessToken passed in the header\n      in: header\n      name: AccessToken\n      type: apiKey\n      scheme: Token\ninfo:\n  contact:\n    email: apihelp@geocaching.com\n    name: API Team\n    url: 'http://www.geocaching.com'\n  description: API version 1.0.\n  title: API v1.0\n  version: v1\nopenapi: 3.0.0\npaths:\n  /status/ping:\n    get:\n      deprecated: false\n      description: This method return Ok.\n      operationId: Status_PingAsync\n      parameters:\n        - description: The requested API version\n          in: query\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          description: Ok\n        '429':\n          description: Too many requests\n      summary: Returns Ok.\n      tags:\n        - Status\n  '/v{api-version}/HQPromotions/metadata':\n    get:\n      deprecated: false\n      operationId: HQPromotions_Get\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/HQPromotionMetadata'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/HQPromotionMetadata'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/HQPromotionMetadata'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '500':\n          description: Server Error\n      summary: >-\n        Returns a list of metadata for currently visible and upcoming Geocaching\n        HQ promotions\n      tags:\n        - HQPromotions\n  '/v{api-version}/attributes':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetAttributes\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AttributeType'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AttributeType'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/AttributeType'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the available attributes\n      tags:\n        - ReferenceData\n  '/v{api-version}/countries':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetCountries\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Country'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Country'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Country'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns current list of country ids and names\n      tags:\n        - ReferenceData\n  '/v{api-version}/countries/{countryId}/states':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetStatesByCountry\n      parameters:\n        - in: path\n          name: countryId\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/State'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/State'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/State'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the state (aka region) names and ids\n      tags:\n        - ReferenceData\n  '/v{api-version}/friendrequests':\n    get:\n      deprecated: false\n      description: >-\n        This method will return a list of requests including both inbound and\n        outbound requests.\n      operationId: Friends_GetFriendRequests\n      parameters:\n        - description: How many requests to skip (default = 0)\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: 'How many requests to return (default = 10, max = 50)'\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'Properties you want to return, defaults to id'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: id\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FriendRequest'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FriendRequest'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/FriendRequest'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of friend requests for the calling user\n      tags:\n        - Friends\n    post:\n      deprecated: false\n      description: This method will return the friend request created.\n      operationId: Friends_CreateFriendRequest\n      parameters:\n        - description: 'Properties you want to return, defaults to id'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: id\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FriendRequest'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/FriendRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/FriendRequest'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/FriendRequest'\n        description: The friend request to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FriendRequest'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/FriendRequest'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/FriendRequest'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Create a friend request\n      tags:\n        - Friends\n  '/v{api-version}/friendrequests/{requestId}':\n    delete:\n      deprecated: false\n      description: This method will return no content.\n      operationId: Friends_DeleteFriendRequest\n      parameters:\n        - description: The identifier of the friend request\n          in: path\n          name: requestId\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Delete a friend request\n      tags:\n        - Friends\n  '/v{api-version}/friendrequests/{requestId}/accept':\n    post:\n      deprecated: false\n      description: ''\n      operationId: Friends_AcceptFriendRequest\n      parameters:\n        - description: friend request identifier\n          in: path\n          name: requestId\n          required: true\n          schema:\n            format: int32\n            type: integer\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Accept a friend request\n      tags:\n        - Friends\n  '/v{api-version}/friends':\n    get:\n      deprecated: false\n      description: This method will return a list of Users.\n      operationId: Friends_GetFriends\n      parameters:\n        - description: How many friends to skip (default = 0)\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: 'How many friends to return (default = 10, max = 50)'\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'Properties you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of friends for the calling user\n      tags:\n        - Friends\n  '/v{api-version}/friends/{userCode}':\n    delete:\n      deprecated: false\n      description: This method will return no content.\n      operationId: Friends_RemoveFriend\n      parameters:\n        - description: The identifier of the friend (their user reference code)\n          in: path\n          name: userCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Removes a friend\n      tags:\n        - Friends\n  '/v{api-version}/geocachelogs':\n    post:\n      deprecated: false\n      description: This method will return the created geocache log.\n      operationId: GeocacheLogs_CreateGeocacheLog\n      parameters:\n        - description: 'the fields to return in the response body, defaults to referencecode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheLog'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheLog'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheLog'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheLog'\n        description: The log to add\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add a log to a geocache\n      tags:\n        - GeocacheLogs\n  '/v{api-version}/geocachelogs/{referenceCode}':\n    delete:\n      deprecated: false\n      description: This method will not have a response body.\n      operationId: GeocacheLogs_DeleteGeocacheLog\n      parameters:\n        - description: 'The reference code of the geocache log (example: GL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: No Content\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Delete a geocache log\n      tags:\n        - GeocacheLogs\n    get:\n      deprecated: false\n      description: This method will return a single geocache log.\n      operationId: GeocacheLogs_GetGeocacheLog\n      parameters:\n        - description: 'The reference code of the geocache log (example: GL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: fields to include with base geocache log object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'Property fields you want to return, defaults to referencecode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a single geocache log\n      tags:\n        - GeocacheLogs\n    put:\n      deprecated: false\n      description: This method will return a geocache log.\n      operationId: GeocacheLogs_UpdateGeocacheLog\n      parameters:\n        - description: 'The log reference code (example: GL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referencecode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeocacheLog'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/GeocacheLog'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeocacheLog'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/GeocacheLog'\n        description: An instance of the log that is being modified\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheLog'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '422':\n          description: Unprocessable Entity\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Update a geocache log\n      tags:\n        - GeocacheLogs\n  '/v{api-version}/geocachelogs/{referenceCode}/images':\n    get:\n      deprecated: false\n      description: This method will return a list of images.\n      operationId: GeocacheLogs_GetImages\n      parameters:\n        - description: 'The reference code of the geocache log (example: GL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Amount of images to skip over used for pagination. Defaults to 0.\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Amount of images to include in results. Defaults to 10.\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Properties you want to return. Defaults to \"url\".\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a the images attached to a geocache log\n      tags:\n        - GeocacheLogs\n    post:\n      deprecated: false\n      description: This method will return a single Geocache.\n      operationId: GeocacheLogs_AddImage\n      parameters:\n        - description: 'The reference code of the geocache log (example: GL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'fields to return on the response object, defaults to \"url\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Image'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/Image'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Image'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add an image to a geocache log\n      tags:\n        - GeocacheLogs\n  '/v{api-version}/geocachelogs/{referenceCode}/images/{imageGuid}':\n    delete:\n      deprecated: false\n      description: This method will not return anything in the body.\n      operationId: GeocacheLogs_DeleteGeocacheLogImages\n      parameters:\n        - description: 'The reference code of the geocache log (example: GL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: the guid of the image\n          in: path\n          name: imageGuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: No Content\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Deletes a geocache log image\n      tags:\n        - GeocacheLogs\n  '/v{api-version}/geocachelogtypes':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetGeocacheLogTypes\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLogType'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLogType'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLogType'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the geocache log types\n      tags:\n        - ReferenceData\n  '/v{api-version}/geocaches':\n    get:\n      deprecated: false\n      description: This method will return a list of geocaches.\n      operationId: Geocaches_GetGeocaches\n      parameters:\n        - description: >-\n            comma delimited list of geocache reference codes to retrieve\n            (example: GC25,GC26,GC27).\n          in: query\n          name: referenceCodes\n          required: true\n          schema:\n            type: string\n        - description: Select to return a geocache object without the description and hints\n          in: query\n          name: lite\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: fields to include with base geocache object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'fields you want to return, defaults to \"referenceCode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of geocaches\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/search':\n    get:\n      deprecated: false\n      description: This method will return search results.\n      operationId: Geocaches_Search\n      parameters:\n        - description: The query used on the geocaches\n          in: query\n          name: q\n          required: true\n          schema:\n            type: string\n        - description: >-\n            Defaults to distance if coords are provided otherwise favoritepoints\n            (distance, favorites, cachename, size, difficulty, terrain,\n            founddate, placeddate, id)\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'Return a lite version of geocache (no description, hint, or'\n          in: query\n          name: lite\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: 'Defaults to 0, how many geocaches to skip'\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: 'Defaults to 20, how many geocaches to return'\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 50\n            format: int32\n            type: integer\n        - description: fields to include with base geocache object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'Properties you want to return, defaults to \"referencecode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Search for Geocaches\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/{referenceCode}':\n    get:\n      deprecated: false\n      description: This method will return a single Geocache.\n      operationId: Geocaches_GetGeocache\n      parameters:\n        - description: 'The reference code of the geocache (example: GC25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Select to return a geocache object without the description and hints\n          in: query\n          name: lite\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: fields to include with base geocache object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'fields you want to return, defaults to \"referenceCode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Geocache'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/Geocache'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Geocache'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a single Geocache\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/{referenceCode}/correctedcoordinates':\n    delete:\n      deprecated: false\n      operationId: UserWaypoints_DeleteCorrectedCoordinates\n      parameters:\n        - description: geocache identifier\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: No Content\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too Many Requests\n        '500':\n          description: Server Error\n      summary: Delete a corrected coordinate for the calling user\n      tags:\n        - UserWaypoints\n    put:\n      deprecated: false\n      description: This method will return the created or updated corrected coordinate.\n      operationId: UserWaypoints_UpsertCorrectedCoordinates\n      parameters:\n        - description: the geocache identifier\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Properties you want to return (default = referenceCode)\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/Coordinates'\n        description: The corrected coordinates to upsert\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Upsert a corrected coordinate for the calling user\n      tags:\n        - UserWaypoints\n  '/v{api-version}/geocaches/{referenceCode}/favoritedby':\n    get:\n      deprecated: false\n      description: This method will return a list of users.\n      operationId: Geocaches_GetFavoritedBy\n      parameters:\n        - description: 'The reference code of the geocache (example: GC25)'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many users to skip\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many users to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'fields you want to return, defaults to \"referenceCode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of Users that have favorited a geocache\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/{referenceCode}/geocachelogs':\n    get:\n      deprecated: false\n      description: This method will return a list of geocache logs.\n      operationId: Geocaches_GetLogs\n      parameters:\n        - description: 'The reference code of the geocache (example: GC25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many logs to skip over\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many logs to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: fields to include with base geocache object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLog'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLog'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLog'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of geocache logs for the specified geocache\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/{referenceCode}/images':\n    get:\n      deprecated: false\n      description: This method will return a list of images.\n      operationId: Geocaches_GetImages\n      parameters:\n        - description: 'The reference code of the geocache (example: GC25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many images to skip\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many images to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'fields you want to return, defaults to \"url\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of images for a geocache\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/{referenceCode}/notes':\n    delete:\n      deprecated: false\n      description: This method will return no content.\n      operationId: GeocacheNotes_DeleteNote\n      parameters:\n        - description: 'The identifier of the geocache (ex: GC25)'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Delete a geocache note for the calling user\n      tags:\n        - GeocacheNotes\n    put:\n      deprecated: false\n      description: This method will return the upserted text.\n      operationId: GeocacheNotes_UpsertNote\n      parameters:\n        - description: 'The identifier of the geocache (ex: GC25)'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeocacheNote'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/GeocacheNote'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeocacheNote'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/GeocacheNote'\n        description: The geocache note text.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: string\n            application/json-patch+json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Upsert a geocache note for the calling user\n      tags:\n        - GeocacheNotes\n  '/v{api-version}/geocaches/{referenceCode}/trackables':\n    get:\n      deprecated: false\n      description: This method will return a list of trackables.\n      operationId: Geocaches_GetTrackables\n      parameters:\n        - description: 'The reference code of the geocache (example: GC25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many trackables to skip\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many trackables to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: ''\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Trackable'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Trackable'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Trackable'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of trackables in a geocache\n      tags:\n        - Geocaches\n  '/v{api-version}/geocaches/{referenceCode}/userwaypoints':\n    get:\n      deprecated: false\n      description: This method will return a paged list of userwaypoints\n      operationId: UserWaypoints_GetGeocacheUserWaypoints\n      parameters:\n        - description: 'The reference code of the geocache (example: GC25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: How many user waypoints to skip. default = 0\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: How many user waypoints to include in result set. default = 10\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Include corrected coordinates in the results. default = false\n          in: query\n          name: includeCorrectedCoordinates\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Properties you want to return. default = referencecode\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserWaypoint'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserWaypoint'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserWaypoint'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Gets the user waypoints for a geocache\n      tags:\n        - UserWaypoints\n  '/v{api-version}/geocachetypes':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetGeocacheTypes\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheType'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheType'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheType'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the available geocache types\n      tags:\n        - ReferenceData\n  '/v{api-version}/geotours':\n    get:\n      deprecated: false\n      operationId: GeoTours_GetGeoTours\n      parameters:\n        - description: >-\n            Defaults to unsorted (distance, name). If using distance sorting,\n            must provide latitude and longitude (e.g. dist+:[47,-122])\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'Defaults to 0, how many geocaches to skip'\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: 'Defaults to 20, how many geocaches to return'\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 20\n            format: int32\n            type: integer\n        - description: 'Properties you want to return, defaults to \"referencecode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeoTour'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeoTour'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeoTour'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get GeoTours\n      tags:\n        - GeoTours\n  '/v{api-version}/geotours/{referenceCode}':\n    get:\n      deprecated: false\n      operationId: GeoTours_GetGeoTour\n      parameters:\n        - description: Identifier of the GeoTour (e.g. GT7)\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Properties you want to return, defaults to \"referencecode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeoTour'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeoTour'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeoTour'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a GeoTour\n      tags:\n        - GeoTours\n  '/v{api-version}/geotours/{referenceCode}/geocaches':\n    get:\n      deprecated: false\n      description: This method will return a list of geocaches.\n      operationId: GeoTours_GetGeocachesByGeoTour\n      parameters:\n        - description: Identifier of the GeoTour (e.g. GT7)\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Select to return a geocache object without the description and hints\n          in: query\n          name: lite\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: 'Defaults to 0, how many geocaches to skip'\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: 'Defaults to 20, how many geocaches to return'\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 20\n            format: int32\n            type: integer\n        - description: >-\n            Options are distance (must provide lat/lng), name (of the geocache),\n            favorites, and geotour (order defined by GeoTour). Defaults to\n            geotour.\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: gt+\n            type: string\n        - description: fields to include with base geocache object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: 'fields you want to return, defaults to \"referencecode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Geocache'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get the geocaches on the GeoTour\n      tags:\n        - GeoTours\n  '/v{api-version}/lists':\n    post:\n      deprecated: false\n      description: This method will return the created geocache list.\n      operationId: Lists_CreateList\n      parameters:\n        - description: 'Property fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheList'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheList'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheList'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostGeocacheList'\n        description: The list to add\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Create a list\n      tags:\n        - Lists\n  '/v{api-version}/lists/{referenceCode}':\n    delete:\n      deprecated: false\n      description: This method will not return anything.\n      operationId: Lists_DeleteList\n      parameters:\n        - description: unique identifier of the list\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Remove a list\n      tags:\n        - Lists\n    get:\n      deprecated: false\n      description: This method will return a list.\n      operationId: Lists_GetList\n      parameters:\n        - description: 'The reference code of the list (example: BM25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list\n      tags:\n        - Lists\n    put:\n      deprecated: false\n      description: This method will return the updated geocache list.\n      operationId: Lists_UpdateList\n      parameters:\n        - description: 'the unique identifier of the list (ex: BM100)'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeocacheList'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/GeocacheList'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeocacheList'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/GeocacheList'\n        description: The list to update\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/GeocacheList'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Edit a list\n      tags:\n        - Lists\n  '/v{api-version}/lists/{referenceCode}/bulkgeocaches':\n    post:\n      deprecated: false\n      description: This method will return the successful and failed geocache codes.\n      operationId: Lists_AddGeocaches\n      parameters:\n        - description: unique identifier of the list\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                type: string\n              type: array\n          application/json-patch+json:\n            schema:\n              items:\n                type: string\n              type: array\n          application/x-www-form-urlencoded:\n            schema:\n              items:\n                type: string\n              type: array\n          text/json:\n            schema:\n              items:\n                type: string\n              type: array\n        description: geocache reference codes to add to the list\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkResponse'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/BulkResponse'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/BulkResponse'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add multiple geocaches to a list\n      tags:\n        - Lists\n  '/v{api-version}/lists/{referenceCode}/geocaches':\n    get:\n      deprecated: false\n      description: This method will return a list of geocaches.\n      operationId: Lists_GetGeocaches\n      parameters:\n        - description: identifier of the list\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many geocaches to skip over\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many geocaches to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: whether to return lite geocaches or not\n          in: query\n          name: lite\n          required: false\n          schema:\n            default: true\n            type: boolean\n        - description: 'fields you want to return, defaults to \"referenceCode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: fields to include with base geocache object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ListGeocache'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ListGeocache'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/ListGeocache'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of geocaches for a specified list\n      tags:\n        - Lists\n    post:\n      deprecated: false\n      description: This method will return the geocache added.\n      operationId: Lists_AddGeocache\n      parameters:\n        - description: unique identifier of the list\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostListGeocache'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostListGeocache'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostListGeocache'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostListGeocache'\n        description: geocache to add to the list\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Geocache'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/Geocache'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Geocache'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add a geocache to a list\n      tags:\n        - Lists\n  '/v{api-version}/lists/{referenceCode}/geocaches/zipped':\n    get:\n      deprecated: false\n      description: This method will return a zipped file.\n      operationId: Lists_GetZippedPocketQuery\n      parameters:\n        - description: identifier of the pocket query\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                format: byte\n                type: string\n            application/json-patch+json:\n              schema:\n                format: byte\n                type: string\n            text/json:\n              schema:\n                format: byte\n                type: string\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Gets a zipped file for a pocket query\n      tags:\n        - Lists\n  '/v{api-version}/lists/{referenceCode}/geocaches/{geocacheReferenceCode}':\n    delete:\n      deprecated: false\n      description: This method will not return anything.\n      operationId: Lists_DeleteGeocache\n      parameters:\n        - description: unique identifier of the list\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: unique identifier of the geocache to remove\n          in: path\n          name: geocacheReferenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Remove a geocache from a list\n      tags:\n        - Lists\n  '/v{api-version}/logdrafts':\n    get:\n      deprecated: false\n      description: This method will return a page (list + total) of log drafts.\n      operationId: LogDrafts_GetUserDrafts\n      parameters:\n        - description: How many drafts to skip (default = 0)\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: How many drafts to return (default = 10)\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: How to sort the drafts (default = loggeddateutc)\n          in: query\n          name: sort\n          required: false\n          schema:\n            default: dateloggedutc\n            type: string\n        - description: 'Properties you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LogDraft'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LogDraft'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/LogDraft'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of log drafts for the calling user\n      tags:\n        - LogDrafts\n    post:\n      deprecated: false\n      description: This method will return the log draft created.\n      operationId: LogDrafts_CreateDraft\n      parameters:\n        - description: 'Properties you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostLogDraft'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostLogDraft'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostLogDraft'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostLogDraft'\n        description: The log draft to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Create a log draft\n      tags:\n        - LogDrafts\n  '/v{api-version}/logdrafts/{referenceCode}':\n    delete:\n      deprecated: false\n      description: This method will return no content.\n      operationId: LogDrafts_DeleteDraft\n      parameters:\n        - description: 'The identifier of the log draft (ex: LD25)'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Delete a log draft\n      tags:\n        - LogDrafts\n    get:\n      deprecated: false\n      description: This method will return a single draft log.\n      operationId: LogDrafts_GetDraft\n      parameters:\n        - description: 'The reference code of the log draft (example: LD25).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Properties you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a single log draft for the calling user\n      tags:\n        - LogDrafts\n    put:\n      deprecated: false\n      description: This method will return the log draft edited.\n      operationId: LogDrafts_UpdateDraft\n      parameters:\n        - description: 'The identifier of the log draft (ex: LD25)'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Properties you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n        description: The log draft to edit.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/LogDraft'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Update a log draft\n      tags:\n        - LogDrafts\n  '/v{api-version}/logdrafts/{referenceCode}/images':\n    post:\n      deprecated: false\n      description: This method will return the image created.\n      operationId: LogDrafts_AddImage\n      parameters:\n        - description: identifier of the log draft\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Properties you want to return, defaults to url'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n        description: The image to upload and add\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Image'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/Image'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Image'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add image to log draft\n      tags:\n        - LogDrafts\n  '/v{api-version}/logdrafts/{referenceCode}/promote':\n    post:\n      deprecated: false\n      description: This method will return the promoted draft info.\n      operationId: LogDrafts_PromoteToGeocacheLog\n      parameters:\n        - description: identifier of the log draft\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/LogDraft'\n        description: The draft to promote to log\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PromotedDraft'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/PromotedDraft'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/PromotedDraft'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Promote Log Draft to Geocache Log\n      tags:\n        - LogDrafts\n  '/v{api-version}/membershiplevels':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetMembershipLevels\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MembershipLevel'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MembershipLevel'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/MembershipLevel'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the membership levels\n      tags:\n        - ReferenceData\n  '/v{api-version}/states':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetStates\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/State'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/State'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/State'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the state (aka region) names and ids\n      tags:\n        - ReferenceData\n  '/v{api-version}/trackablelogs':\n    post:\n      deprecated: false\n      description: This method will return the created trackable log.\n      operationId: TrackableLogs_CreateTrackableLog\n      parameters:\n        - description: 'Property fields you want to return, defaults to referencecode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostTrackableLog'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostTrackableLog'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostTrackableLog'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostTrackableLog'\n        description: The log to add\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add a log to a trackable\n      tags:\n        - TrackableLogs\n  '/v{api-version}/trackablelogs/{referenceCode}':\n    delete:\n      deprecated: false\n      description: This method will not return anything in the body.\n      operationId: TrackableLogs_DeleteTrackableLog\n      parameters:\n        - description: 'The reference code of the trackable log (example: TL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: No Content\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Deletes a trackable log\n      tags:\n        - TrackableLogs\n    get:\n      deprecated: false\n      description: This method will return a single trackable log.\n      operationId: TrackableLogs_GetTrackableLog\n      parameters:\n        - description: 'The reference code of the trackable log (example: TL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referencecode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: ''\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a single trackable log\n      tags:\n        - TrackableLogs\n    put:\n      deprecated: false\n      description: This method will return a trackable log.\n      operationId: TrackableLogs_UpdateTrackableLog\n      parameters:\n        - description: 'The log reference code (example: TL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referencecode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TrackableLog'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/TrackableLog'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TrackableLog'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/TrackableLog'\n        description: >-\n          An instance of the log that is being modified. Text is the only\n          modified parameter\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TrackableLog'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '422':\n          description: Unprocessable Entity\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Update a trackable log\n      tags:\n        - TrackableLogs\n  '/v{api-version}/trackablelogs/{referenceCode}/images':\n    get:\n      deprecated: false\n      description: This method will return a list of images.\n      operationId: TrackableLogs_GetImages\n      parameters:\n        - description: 'The reference code of the trackable log (example: TL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Amount of images to skip over used for pagination. Defaults to 0.\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Amount of images to include in results. Defaults to 10.\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Properties you want to return. Defaults to referencecode.\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a the images attached to a trackable log\n      tags:\n        - TrackableLogs\n    post:\n      deprecated: false\n      description: This method will return a single image.\n      operationId: TrackableLogs_AddImage\n      parameters:\n        - description: 'The reference code of the trackable log (example: TL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to url'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostImage'\n        description: image to add\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Image'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/Image'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Image'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Add an image to a trackable log\n      tags:\n        - TrackableLogs\n  '/v{api-version}/trackablelogs/{referenceCode}/images/{imageGuid}':\n    delete:\n      deprecated: false\n      description: This method will not return anything in the body.\n      operationId: TrackableLogs_DeleteTrackableLogImages\n      parameters:\n        - description: 'The reference code of the trackable log (example: TL100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: the guid of the image\n          in: path\n          name: imageGuid\n          required: true\n          schema:\n            format: uuid\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '204':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: No Content\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Deletes a trackable log image\n      tags:\n        - TrackableLogs\n  '/v{api-version}/trackablelogtypes':\n    get:\n      deprecated: false\n      description: ''\n      operationId: ReferenceData_GetTrackableLogTypes\n      parameters:\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableLogType'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableLogType'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableLogType'\n                type: array\n          description: Ok\n        '401':\n          description: Unauthorized\n        '429':\n          description: Too many requests\n      summary: Returns the trackable log types\n      tags:\n        - ReferenceData\n  '/v{api-version}/trackables':\n    get:\n      deprecated: false\n      description: >-\n        This method will return a list of trackables, either by specified codes\n        or get user trackables if you leave referenceCodes null\n      operationId: Trackables_GetUserTrackables\n      parameters:\n        - description: >-\n            The reference code or tracking number of the trackables (example:\n            TB100). Don't pass in this param if you want to return user\n            trackables\n          in: query\n          name: referenceCodes\n          required: false\n          schema:\n            type: string\n        - description: '1= inventory, 2 = collection, 3 = owned (default: 1)'\n          in: query\n          name: type\n          required: false\n          schema:\n            default: 1\n            enum:\n              - Inventory\n              - Collection\n              - Owned\n            type: string\n        - description: default = 0\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: default = 10\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: ''\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Trackable'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Trackable'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Trackable'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Gets a list of trackables\n      tags:\n        - Trackables\n  '/v{api-version}/trackables/geocointypes':\n    get:\n      deprecated: false\n      description: This method will return a list of geocoin types.\n      operationId: Trackables_GetGeocoinTypes\n      parameters:\n        - description: Amount of types to skip over used for pagination. Defaults to 0.\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Amount of types to include in results. Defaults to 10.\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Properties you want to return. Defaults to id.\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: id\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableType'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableType'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableType'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get paged geocoin types\n      tags:\n        - Trackables\n  '/v{api-version}/trackables/{referenceCode}':\n    get:\n      deprecated: false\n      description: This method will return a single trackable.\n      operationId: Trackables_GetTrackable\n      parameters:\n        - description: >-\n            The reference code or tracking number of the trackable (example:\n            TB100).\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: ''\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Trackable'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/Trackable'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/Trackable'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a single trackable\n      tags:\n        - Trackables\n  '/v{api-version}/trackables/{referenceCode}/Images':\n    get:\n      deprecated: false\n      description: This method will return a list of images.\n      operationId: Trackables_GetImages\n      parameters:\n        - description: 'The reference code of the trackable (example: TB100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Amount of images to skip over used for pagination. Defaults to 0.\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Amount of images to include in results. Defaults to 10.\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Properties you want to return. Defaults to url.\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get the images attached to a trackable\n      tags:\n        - Trackables\n  '/v{api-version}/trackables/{referenceCode}/trackablelogs':\n    get:\n      deprecated: false\n      description: This method will return a list of trackable logs.\n      operationId: Trackables_GetTrackableLogs\n      parameters:\n        - description: 'The reference code of the trackable (example: TB100).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many logs to skip over\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many logs to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: ''\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: what log types to include with results. defaults to all\n          in: query\n          name: logTypes\n          required: false\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableLog'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableLog'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TrackableLog'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of trackable logs for the specified trackable\n      tags:\n        - Trackables\n  '/v{api-version}/users':\n    get:\n      deprecated: false\n      description: This method will return a list of users.\n      operationId: Users_GetUsers\n      parameters:\n        - description: >-\n            comma delimited list of user reference codes to retrieve (example:\n            PR1,PR2,PR3)\n          in: query\n          name: referenceCodes\n          required: false\n          schema:\n            type: string\n        - description: comma delimited list of usernames to retrieve\n          in: query\n          name: usernames\n          required: false\n          schema:\n            type: string\n        - description: 'fields you want to return, defaults to \"referenceCode\"'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/User'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of users\n      tags:\n        - Users\n  '/v{api-version}/users/{referenceCode}':\n    get:\n      deprecated: false\n      description: This method will return a user.\n      operationId: Users_GetUser\n      parameters:\n        - description: 'The reference code of the user (example: PR18).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: 'Property fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/User'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a user\n      tags:\n        - Users\n  '/v{api-version}/users/{referenceCode}/geocachelogs':\n    get:\n      deprecated: false\n      description: This method will return a list of geocache lists.\n      operationId: Users_GetGeocacheLogs\n      parameters:\n        - description: 'user identifier, use \"me\" to get lists for calling user'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: how many lists to skip over\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many lists to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: filters results to logs with logdates after this date (inclusive)\n          in: query\n          name: afterDate\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: filters results to logs with logdates before this date (inclusive)\n          in: query\n          name: beforeDate\n          required: false\n          schema:\n            format: date-time\n            type: string\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: flag to include archived logs\n          in: query\n          name: includeArchived\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: 'log types to include in response, defaults to all'\n          in: query\n          name: logTypes\n          required: false\n          schema:\n            type: string\n        - description: fields to include with base geocache log object\n          in: query\n          name: expand\n          required: false\n          schema:\n            default: ''\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLog'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLog'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheLog'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of a user's geocache logs\n      tags:\n        - Users\n  '/v{api-version}/users/{referenceCode}/images':\n    get:\n      deprecated: false\n      description: This method will return a list of images.\n      operationId: Users_GetImages\n      parameters:\n        - description: 'The reference code of the user (example: PR18).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Amount of images to skip over used for pagination. Defaults to 0.\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Amount of images to include in results. Defaults to 10.\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Properties you want to return. Defaults to url.\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: url\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Image'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get the images attached to a user profile\n      tags:\n        - Users\n  '/v{api-version}/users/{referenceCode}/lists':\n    get:\n      deprecated: false\n      description: This method will return a list of geocache lists.\n      operationId: Users_GetLists\n      parameters:\n        - description: 'user identifier, use \"me\" to get lists for calling user'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: >-\n            comma delimited list of list types to return (fl, wl, il, bm, pq).\n            Defaults to \"bm\"\n          in: query\n          name: types\n          required: false\n          schema:\n            default: bm\n            type: string\n        - description: how many lists to skip over\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: how many lists to retrieve\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: 'fields you want to return, defaults to referenceCode'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referenceCode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheList'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheList'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GeocacheList'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of user's geocache lists\n      tags:\n        - Users\n  '/v{api-version}/users/{referenceCode}/souvenirs':\n    get:\n      deprecated: false\n      description: This method will return a list of souvenirs.\n      operationId: Users_GetSouvenirs\n      parameters:\n        - description: 'The reference code of the user (example: PR18).'\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: ''\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: ''\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 20\n            format: int32\n            type: integer\n        - description: 'Property fields you want to return, defaults to title'\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: title\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Souvenir'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Souvenir'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/Souvenir'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get an account's souvenirs\n      tags:\n        - Users\n  '/v{api-version}/userwaypoints':\n    get:\n      deprecated: false\n      description: This method will return an array of user waypoints.\n      operationId: UserWaypoints_GetUserWaypoints\n      parameters:\n        - description: How many waypoints to skip (default = 0)\n          in: query\n          name: skip\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: How many drafts to return (default = 10)\n          in: query\n          name: take\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n        - description: Include corrected coordinates in the results. default = false\n          in: query\n          name: includeCorrectedCoordinates\n          required: false\n          schema:\n            default: false\n            type: boolean\n        - description: Properties you want to return (default = referenceCode)\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserWaypoint'\n                type: array\n            application/json-patch+json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserWaypoint'\n                type: array\n            text/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/UserWaypoint'\n                type: array\n          description: Ok\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '404':\n          description: Not Found\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Get a list of user waypoints for the calling user\n      tags:\n        - UserWaypoints\n    post:\n      deprecated: false\n      description: This method will return the user waypoint created.\n      operationId: UserWaypoints_CreateUserWaypoint\n      parameters:\n        - description: Properties you want to return (default = referenceCode)\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostUserWaypoint'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/PostUserWaypoint'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PostUserWaypoint'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/PostUserWaypoint'\n        description: The user waypoint to create.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Create a user waypoint\n      tags:\n        - UserWaypoints\n  '/v{api-version}/userwaypoints/{referenceCode}':\n    delete:\n      deprecated: false\n      description: This method will return no content.\n      operationId: UserWaypoints_DeleteUserWaypoint\n      parameters:\n        - description: The identifier of the user waypoint\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                type: object\n            application/json-patch+json:\n              schema:\n                type: object\n            text/json:\n              schema:\n                type: object\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Delete a user waypoint\n      tags:\n        - UserWaypoints\n    put:\n      deprecated: false\n      description: This method will return the updated user waypoint.\n      operationId: UserWaypoints_UpdateUserWaypoint\n      parameters:\n        - description: The identifier of the user waypoint\n          in: path\n          name: referenceCode\n          required: true\n          schema:\n            type: string\n        - description: Properties you want to return (default = referenceCode)\n          in: query\n          name: fields\n          required: false\n          schema:\n            default: referencecode\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserWaypoint'\n          application/json-patch+json:\n            schema:\n              $ref: '#/components/schemas/UserWaypoint'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserWaypoint'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/UserWaypoint'\n        description: The user waypoint to update.\n        required: true\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n            application/json-patch+json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/UserWaypoint'\n          description: Created\n        '400':\n          description: Bad request\n        '401':\n          description: Not Authorized\n        '403':\n          description: Forbidden\n        '409':\n          description: Conflict\n        '429':\n          description: Too many requests\n        '500':\n          description: Server Error\n      summary: Update a user waypoint\n      tags:\n        - UserWaypoints\n  '/v{api-version}/utilities/referencecode':\n    get:\n      deprecated: false\n      description: ''\n      operationId: Utilities_GetReferenceCode\n      parameters:\n        - description: the id to get the reference code for\n          in: query\n          name: id\n          required: true\n          schema:\n            format: int64\n            type: integer\n        - description: the prefix of the reference code (e.g. GC)\n          in: query\n          name: codePrefix\n          required: true\n          schema:\n            type: string\n        - description: The requested API version\n          in: path\n          name: api-version\n          required: true\n          schema:\n            default: '1.0'\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n            application/json-patch+json:\n              schema:\n                type: string\n            text/json:\n              schema:\n                type: string\n          description: Ok\n        '429':\n          description: Too many requests\n      summary: Returns the reference code from an id\n      tags:\n        - Utilities\nservers:\n  - url: 'https://api.groundspeak.com/'\n\n",
			"canonicalURL": "/github.com/ludoo0d0a/geocaching-api@8c6c6e3fbd7abb2257622bffd569ab8dbb7d7620/-/blob/contracts/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/ludoo0d0a/geocaching-api/blob/8c6c6e3fbd7abb2257622bffd569ab8dbb7d7620/contracts/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/v{api-version}/trackables\": at 1:100146: get: operation \"Trackables_GetUserTrackables\": at 1:100153: parameters: parse parameter \"type\": at 1:100612: schema: at 1:100735: parse default: expected type \"string\", got \"number\""
}