{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vtex/faststore"
		},
		"file": {
			"name": "headlesscms.yaml",
			"size": 0,
			"path": "docs/docs/openapi/headlesscms.yaml",
			"byteSize": 14947,
			"content": "openapi: 3.0.1\ninfo:\n  title: VTEX Headless CMS\n  description: |\n    \n    The VTEX Headless CMS is a no-code management system for storefront content. \n    That means you can store your content as structured data in a layer decoupled from the frontend and \n    use the VTEX Headless CMS to access and deliver your content to your storefront project.\n    \n    Notice that the VTEX Headless CMS typically works with **FastStore** projects only. In this case, you can use this API\n    to fetch data using SSR (NextJS and Gatsby v4+) or SSG (NextJS).\n\n    **Servers**\n    - `https://{account}.myvtex.com/`\n    - `https://{workspace}--{account}.myvtex.com/`\n\n    **Server variables**\n    - `accountName`: Name of your VTEX account.\n    - `workspace`: Name of your VTEX workspace.\n    \n  version: 0.31.2\nservers:\n- url: https://{account}.myvtex.com\n  variables:\n        account:\n          default: storeframework\n          description: Name of the VTEX account. Used as part of the URL.\n- url: https://{workspace}--{account}.myvtex.com\n  variables:\n        account:\n          default: storeframework\n          description: Name of the VTEX account. Used as part of the URL.\n        workspace:\n          default: test\n          description: Name of the VTEX workspace. Used as part of the URL.\npaths:\n  /_v/cms/api/{builderId}/:\n    get:\n      summary: Get all CMS pages\n      description:  Gets all data from all CMS pages.\n      parameters:\n      - name: builderId\n        in: path\n        description: Builder ID specified in the settings of the CMS app.\n        required: true\n        schema:\n          type: string          \n          example: faststore\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  contentTypes:\n                    type: array\n                    description: An array containing the data from all CMS pages.\n                    items:\n                      type: object\n                      properties:\n                        id: \n                          type: string\n                          description: Content Type ID defined in the FastStore project.\n                          example: plp\n                        name: \n                          type: string\n                          description: Name of the Content Type defined in the FastStore project.\n                          example: PLP\n                        configurationSchemaSets:\n                          type: object\n                          description: The schema varies according to the Content Type definition.\n                          properties:\n                            name: \n                              type: string\n                              example: Parameters\n                            configurations:\n                              type: object\n                              properties:\n                                name:\n                                  type: string\n                                  example:  Collection\n                                schema:\n                                  type: object\n                                  properties:\n                                    title:\n                                      type: string\n                                      example: Collection\n                                    description: \n                                      type: string\n                                      example: Definition of a Collection for the CMS\n                                    oneOf:\n                                        type: array\n                                        items:\n                                          type: object\n                                          properties:\n                                            title: \n                                              type: string\n                                              example: Category\n                                            description:\n                                              type: string\n                                              example: Configure a Category\n                                            type: \n                                              type: string\n                                              example: object\n                                            required:\n                                              type: array\n                                              example:\n                                                - categoryId\n                                                - sort\n                                            properties:\n                                              type: object\n                                              properties:\n                                                categoryId:\n                                                  type: object\n                                                  properties:\n                                                    title:\n                                                      type: string\n                                                      example: Category ID\n                                                    type: \n                                                      type: string\n                                                      example: 'string'\n                                                sort:\n                                                  type: object\n                                                  properties:\n                                                    title: \n                                                      type: string\n                                                      example: Default ordering\n                                                    type: \n                                                      type: string\n                                                      example: string\n                                                    default:\n                                                      type: string\n                                                      example: '\"\"'\n                                                    enum:\n                                                      type: array\n                                                      example:\n                                                      - '\"\"'\n                                                      - discount:desc\n                                                      - release:desc\n                                                      - name:asc\n                                                      - name:desc\n                                                      - orders:desc\n                                                      - price:asc\n                                                      - price:desc\n                                                    enumNames:\n                                                      type: array\n                                                      example:\n                                                        - Relevance\n                                                        - Discount\n                                                        - Release date\n                                                        - Name, ascending\n                                                        - Name, descending\n                                                        - Sales\n                                                        - 'Price: Low to High'\n                                                        - 'Price: High to Low'\n        404:\n          description: Not Found\n        500:\n          description: Internal Server Error      \n  /_v/cms/api/{builderId}/{content-type}/{document-id}/:\n    get:\n      summary: Get CMS page      \n      description: |\n        Gets all data from a given page or Content Type.\n        \n        **Usage**\n\n        Check the following suggestions on how to use this endpoint:\n\n        - Get data by document ID: `/_v/cms/api/:builderId/:content-type/:document-id`\n          - Example: [https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908](https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908)\n        - Get an specific version of the document: `/_v/cms/api/:builderId/:content-type/:document-id?versionId=:version-id`\n          - Example: [https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908?versionId=e7263fc8-bc68-4052-9e25-dd5a2572d3bb](https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908)\n        - Get the content of a release: `/_v/cms/api/:builderId/:content-type/:document-id?releaseId=:release-id`\n          - Example: [https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908?releaseId=6196c277c6dce15f9709a2a7](https://storecomponents.myvtex.com/_v/cms/api/faststore/plp/5af643b5-9a6d-48f2-9b34-919dd762c908)\n\n        Use filters on the URL to get only what you need.\n        - Filter by props on the first level of the document: `/_v/cms/api/faststore/plp?filters[status]=published`\n        - Filter results by nested props\n          - SEO Slug: `/_v/cms/api/faststore/plp?filters[parameters.collection.seo.slug]=/summer`\n          - SEO Title: `/_v/cms/api/faststore/plp?filters[parameters.collection.seo.title]=Summer%20Deals`\n          - Category ID: `/_v/cms/api/faststore/plp?filters[parameters.collection.categoryId]=25`\n        - Filter by multiple fields: `/_v/cms/api/faststore/plp?filters[parameters.collection.clusterId]=1970\u0026filters[name]=Summer`\n      parameters:  \n      - name: builderId\n        in: path\n        description: Builder ID specified in the settings of the CMS app.\n        required: true\n        schema:\n          type: string          \n          example: faststore        \n      - name: content-type\n        in: path\n        description: Content Type ID defined in the FastStore project.\n        required: true    \n        schema:\n          type: string\n          example: plp\n      - name: document-id\n        in: path\n        description: Document ID presented in the URL path of a CMS preview.\n        required: false\n        schema:\n          type: string\n          example: 5af643b5-9a6d-48f2-9b34-919dd762c908 \n      - name: versionId\n        in: query\n        description: Version ID presented in the URL path of a CMS preview.\n        required: false\n        schema:\n          type: string\n          example: e7263fc8-bc68-4052-9e25-dd5a2572d3bb\n      - name: releaseId\n        in: query\n        description: Release ID presented in the URL path of a CMS preview.\n        required: false\n        schema:\n          type: string \n          example: 6196c277c6dce15f9709a2a7\n      - name: filters[status]\n        in: query\n        description: Filter by the status of the page.\n        required: false\n        schema:\n          type: string \n          example: \n            - draft\n            - published\n            - publishing\n            - unpublishing\n      - name: filters[parameters.collection.seo.slug]\n        in: query\n        description: Filter by the SEO slug of a collection.\n        required: false\n        schema:\n          type: string \n          example: Summer%20Deals\n      - name: filters[parameters.collection.seo.title]\n        in: query\n        description: Filter by the SEO title of a collection.\n        required: false\n        schema:\n          type: string \n          example: Summer%20Deals\n      - name: filters[parameters.collection.categoryId]\n        in: query\n        description: Filter by the category ID of a collection.\n        required: false\n        schema:\n          type: string \n          example: 25    \n      - name: filters[name]\n        in: query\n        description: Filter by the page name.\n        required: false\n        schema:\n          type: string \n          example: Summer    \n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  id: \n                    type: string\n                    description: Document ID.\n                    example: 7db1406b-f5fd-486c-b549-25cda55b308c\n                  name: \n                    type: string\n                    description: Name of the page created in the CMS app.\n                    example: Home Page\n                  type: \n                    type: string\n                    description: Content Type.\n                    example: home\n                  status: \n                    type: string\n                    description: Current status of the page.\n                    example: published\n                  versionId: \n                    type: string\n                    description: Version ID.\n                    example: 4e840369-505a-49ab-98aa-dc0c27f53e1e\n                  versionStatus: \n                    type: string\n                    description: Version status.\n                    example: published\n                  sections:\n                    type: object\n                    description: Sections that compose the page.\n                    properties: \n                      id: \n                        type: string\n                        description: Section ID.\n                        example: 1641388937280\n                      name: \n                        type: string\n                        description: Section name.\n                        example: Hero\n                      data:\n                        type: object\n                        description: Content of the Section. Varies depending on the Section schema defined in the FastStore project.\n                        properties:\n                          title: \n                           type: string\n                           example: New Products Available\n                          subtitle: \n                           type: string\n                           example: Lorem ipsum dolor amet, consectetur adipiscing elit. Lorem ipsum.\n                          linkText:\n                           type: string\n                           example:  See all\n                          link:\n                           type: string\n                           example:  \"/\"\n                          imageSrc: \n                           type: string\n                           example: https://storeframework.vtexassets.com/assets/faststore/images/banner-1___7aca7661f2b2996afaf4ccfc8096b102.jpg\n                          imageAlt: \n                           type: string\n                           example: Gadgets\n        404:\n          description: Not Found\n        500:\n          description: Internal Server Error            "
		}
	},
	"Error": "parse: parse spec: paths: /_v/cms/api/{builderId}/{content-type}/{document-id}/: get: operation \"\": parameters: parse parameter \"document-id\": path parameters must be required"
}