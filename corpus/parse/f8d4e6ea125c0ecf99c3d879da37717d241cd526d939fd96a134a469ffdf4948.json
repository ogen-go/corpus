{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/digitallocker.gov.in/authpartner/1.0.0/openapi.yaml",
			"byteSize": 108942,
			"content": "openapi: 3.0.2\nservers:\n  - url: https://betaapi.digitallocker.gov.in/public\ninfo:\n  contact:\n    email: support@digitallocker.gov.in\n  description: To access files in user’s DigiLocker account from your application, you must first obtain user’s authorization.\n  termsOfService: https://ndh.digitallocker.gov.in/terms.php\n  title: Authorized Partner API Specification\n  version: 1.0.0\n  x-apisguru-categories:\n    - open_data\n  x-origin:\n    - format: openapi\n      url: https://apisetu.gov.in/api_specification_v8/authpartner.yaml\n      version: \"3.0\"\n  x-providerName: digitallocker.gov.in\n  x-serviceName: authpartner\ntags:\n  - description: Authorization APIs For Server Side Web Applications.\n    name: Authorization\n  - description: Authorization APIs For Limited Input Devices.\n    name: Authorization API\n  - description: To revoke a previously obtained Token.\n    name: Token Revocation API\n  - description: Get User Details\n    name: Account Detail API\n  - description: File APIs allow your application to get the meta-data about issued and uploaded documents in user’s DigiLocker.\n    name: File APIs\n  - description: This API can be used to sign up a user for DigiLocker.\n    name: DigiLocker Sign up APIs\n  - description: DigiLocker Meta APIs provide information about a user account, issuers, document types and parameters required to pull a document.\n    name: DigiLocker Meta APIs\npaths:\n  /account/1/pushuri:\n    post:\n      description: The API can use to push or delete a single URI into Digital Locker using DigiLocker Id acquired using Get User Details API. This API can be used to push the certificate details to Digital Locker as and when a certificate is generated in the issuer system. The issuing departments must register on DigiLocker as a registered Issuer and implement the requisite Issuer APIs as mentioned in Digital Locker Issuer API Specification document prior to pushing certificates using this API.\n      operationId: Push URI to Account id\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/PushUri\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                title: Sample\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_parameter\n                    type: string\n                  error_description:\n                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account\n                    type: string\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_client_id\n                    type: string\n                  error_description:\n                    description: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_digilocker_id\n                    type: string\n                  error_description:\n                    description: The digilockerid parameter is invalid\n                    type: string\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                    type: string\n                  error_description:\n                    description: Internal server error\n                    type: string\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Push URI to Account\n      tags:\n        - DigiLocker Meta APIs\n  /account/2/verify:\n    post:\n      description: This API can be used to verify whether a mobile number or Aadhaar number is already registered with DigiLocker.\n      operationId: Verify Account id\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/VerifyAccount\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VerifyAccountResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_parameter\n                  error_description:\n                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_client_id\n                    type: string\n                  error_description:\n                    description: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                  error_description:\n                    description: Internal server error\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Verify Account\n      tags:\n        - DigiLocker Meta APIs\n  /oauth2/1/authorize:\n    get:\n      description: Call to this API starts authorization flow using OAuth 2.0 protocol. This isn't an API call—it's a DigiLocker web page that lets the user sign in to DigiLocker and authorize your application to access user’s data. After the user decides whether or not to authorize your app, they will be redirected to the redirect link provided by your application.\n      operationId: Get Authorization Code id\n      parameters:\n        - description: Provide the client id that was created during the application registration process on Partners Portal.\n          in: query\n          name: client_id\n          schema:\n            type: string\n        - description: Provide the grant type requested, either token or code.\n          in: query\n          name: response_type\n          required: true\n          schema:\n            type: string\n        - description: The URI to redirect the user after authorization has completed.\n          in: query\n          name: redirect_uri\n          required: true\n          schema:\n            type: string\n        - description: This is your application specific data that will be passed back to your application through redirect_uri.\n          in: query\n          name: state\n          required: true\n          schema:\n            type: string\n        - description: |\n            A unique random string called code verifier (code_verifier) is\n            created by the client application for every authorization request.\n            The code_challenge sent as this parameter is the Base64URL (with no\n            padding) encoded SHA256 hash of the code verifier.\n                    Code block:\n\n                   ```\n                   string base64_url_encode_without_padding(string arg)\n                   { \n                      string s = base64encode(arg); //Regular base64encoder with padding\n                      s = s.replace(’=’,’’); //Remove any trailing ’=’\n                      s = s.replace(’+’, ’-’); //Replace ’+’ with ’-’\n                      s = s.replace(’/’, ’_’); //Replace ’/’ with ’_’ return s;\n                    }\n                    ```\n          in: query\n          name: Code_challenge\n          required: false\n          schema:\n            example: base64_url_encode_without_padding(sha256(code_verifier))\n            properties:\n              parameter:\n                enum:\n                  - Base64URL\n                  - SHA256\n                type: string\n            type: string\n        - description: Specifies what method was used to encode a code_verifier to generate code_challenge parameter above. This parameter must be used with the code_challenge parameter. The only supported values for this parameter is S256.\n          in: query\n          name: Code_challenge_method\n          required: false\n          schema:\n            properties:\n              parameter:\n                enum:\n                  - S256\n                type: string\n            type: string\n        - description: If this parameter is provided its value will always be signup. This parameter indicates that the user does not have a DigiLocker account and will be directed to the signup flow directly. After the account is created, the user will be directed to the authorization flow. If this parameter is not sent, the user will be redirected to the sign in flow.\n          in: query\n          name: dl_flow\n          required: false\n          schema:\n            type: string\n        - description: Verified mobile number of the user. If this parameter is passed, DigiLocker will skip the mobile OTP verification step during sign up. DigiLocker will treat the mobile number passed in this parameter as a verified mobile number by the trusted client application. This parameter will be used only if dl_flow parameter mentioned above is set to signup and will be ignored otherwise.\n          in: query\n          name: Verified_mobile\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  details:\n                    properties:\n                      access_token:\n                        type: string\n                      expires_in:\n                        type: integer\n                      scope:\n                        type: string\n                      token_type:\n                        type: string\n                    required:\n                      - access_token\n                      - expires_in\n                      - token_type\n                      - scope\n                    type: object\n                title: Sample\n          description: successful operation\n        \"400\":\n          description: Invalid status value\n      security:\n        - oauthAuthorizeCode: []\n      summary: Get Authorization Code\n      tags:\n        - Authorization\n  /oauth2/1/code:\n    post:\n      description: The client device calls the DigiLocker API to get the device code by providing the client_id issued to the device OEM and either the username or the mobile number of the user. DigiLocker responds with a device code and then sends an OTP on the mobile number and email address associated with the user’s account. The masked mobile number and email address is also sent in response. The device should use these values to notify the users about the mobile and email address on which the OTP has been sent.\n      operationId: Get Device Code id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceAuthorizationCode\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeviceAuthorizationCodeResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ResponseOne\"\n                  - $ref: \"#/components/schemas/ResponseTwo\"\n                  - $ref: \"#/components/schemas/ResponseThree\"\n                  - $ref: \"#/components/schemas/ResponseFour\"\n          description: Bad Request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_client_id\n                    type: string\n                  error_description:\n                    example: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: The client_id parameter is invalid.\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ResponseFive\"\n                  - $ref: \"#/components/schemas/ResponseSix\"\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Get Device Code\n      tags:\n        - Authorization API\n  /oauth2/1/file/upload:\n    post:\n      description: This API can be used to save/upload a file to uploaded documents in DigiLocker. The allowed file types are JPG, JPEG, PNG and PDF. The file size must not exceed 10MB.\n      operationId: Upload File to Locker id\n      parameters:\n        - description: The destination path of the file in DigiLocker including filename.\n          in: header\n          name: path\n          required: false\n          schema:\n            type: string\n        - description: This is used to verify the integrity of the file data. The client app calculates the hash message authentication code (HMAC) of the file content using SHA256 hashing algorithm and the client secret as the hashing key. The resulting HMAC is converted to Base64 format and sent in this parameter. Upon upload of file, DigiLocker calculates the HMAC of the file data and compares it with this HMAC..\n          in: header\n          name: hmac\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              $ref: \"#/components/schemas/FileUpload\"\n          image/jpeg:\n            schema:\n              format: binary\n              type: string\n          image/jpg:\n            schema:\n              format: binary\n              type: string\n          image/pdf:\n            schema:\n              format: binary\n              type: string\n          image/png:\n            schema:\n              format: binary\n              type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileUploadResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    enum:\n                      - path_missing\n                      - contenttype_missing\n                      - hmac_missing\n                      - filename_missing\n                      - hmac_mismatch\n                      - invalid_filename\n                      - invalid_filesize\n                      - invalid_filetype\n                      - invalid_path\n                      - file_data_missing\n                      - mimetype_mismatch\n                  error_description:\n                    enum:\n                      - Path parameter is missing\n                      - Content-Type parameter is missing\n                      - HMAC parameter is missing\n                      - Filename is missing in path parameter\n                      - HMAC does not match\n                      - Restricted characters are not allowed in file name\n                      - The file size exceeds maximum allowed file size of 10MB\n                      - The file type is not allowed\n                      - The destination folder does not exist\n                      - Missing file content in the request\n                      - The mimetype provided in Content-Type parameter does not match with the mimetype of the file\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                    type: string\n                  error_description:\n                    description: Internal server error\n                    type: string\n                type: object\n          description: Internal Error\n      security:\n        - bearerAuth: []\n      summary: Upload file to locker\n      tags:\n        - File APIs\n  \"/oauth2/1/file/{uri}\":\n    get:\n      description: Returns a file from URI. This API can be used to fetch both issued document and uploaded document.\n      operationId: Get File from URI id\n      parameters:\n        - description: This is the unique identifier of the document.\n          in: path\n          name: uri\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/pdf:\n              schema:\n                example: pdf binary content\n                type: string\n            image/jpeg:\n              schema:\n                example: jpeg binary content\n                type: string\n            image/jpg:\n              schema:\n                example: jpg binary content\n                type: string\n            image/png:\n              schema:\n                example: png binary content\n                type: string\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: uri_missing\n                    type: string\n                  error_description:\n                    example: URI parameter missing\n                    type: string\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_uri\n                    type: string\n                  error_description:\n                    example: No file found for given URI\n                    type: string\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response3\"\n                  - $ref: \"#/components/schemas/Response4\"\n                  - $ref: \"#/components/schemas/Response5\"\n                  - $ref: \"#/components/schemas/Response6\"\n          description: Internal Error\n        \"503\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response1\"\n                  - $ref: \"#/components/schemas/Response2\"\n          description: Gateway timeout\n      security:\n        - bearerAuth: []\n      summary: Get File from URI\n      tags:\n        - File APIs\n  /oauth2/1/files/:\n    get:\n      description: Returns the list of meta-data about documents or folders in user’s DigiLocker in a specific location.\n      operationId: Get List of Self Uploaded Documents\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  directory:\n                    minLength: 1\n                    type: string\n                  items:\n                    items:\n                      properties:\n                        date:\n                          minLength: 1\n                          type: string\n                        description:\n                          type: string\n                        id:\n                          example: 189079894\n                          minLength: 1\n                          type: string\n                        issuer:\n                          type: string\n                        mime:\n                          type: string\n                        name:\n                          minLength: 1\n                          type: string\n                        parent:\n                          minLength: 1\n                          type: string\n                        size:\n                          minLength: 1\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                        uri:\n                          type: string\n                      required:\n                        - id\n                        - name\n                        - type\n                        - size\n                        - date\n                        - parent\n                        - mime\n                        - uri\n                        - description\n                        - issuer\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                required:\n                  - directory\n                  - items\n                title: Sample\n          description: successful operation\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_id\n                    type: string\n                  error_description:\n                    example: The folder does not exist\n                    type: string\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: unexpected_error\n                    type: string\n                  error_description:\n                    example: Internal server error\n                    type: string\n                type: object\n          description: Internal Error\n      security:\n        - bearerAuth: []\n      summary: Get List of Self Uploaded Documents\n      tags:\n        - File APIs\n  /oauth2/1/files/issued:\n    get:\n      description: Returns the list of meta-data about issued documents in user’s DigiLocker.\n      operationId: Get List of issued Documents Version1 id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  details:\n                    properties:\n                      date:\n                        description: This contains the date on which the certificate was last modified in DigiLocker.\n                        example: 2015-05-12T15:50:38Z\n                        type: string\n                      description:\n                        description: This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.\n                        example: Class XII Marksheet\n                        type: string\n                      doctype:\n                        description: A 5 character unique document type provided by DigiLocker.\n                        example: HSCER\n                        type: string\n                      issuer:\n                        description: The name of the issuer.\n                        example: CBSE\n                        type: string\n                      issuerid:\n                        description: Unique DigiLocker issuer id as mentioned in the URI.\n                        example: in.gov.cbse\n                        type: string\n                      mime:\n                        description: The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.\n                        example: application/pdf\n                        type: string\n                      name:\n                        description: The name of the certificate.\n                        example: Class XII Marksheet\n                        type: string\n                      parent:\n                        description: This will be blank.\n                        example: \" \"\n                        type: string\n                      size:\n                        description: This will be blank.\n                        example: \" \"\n                        type: string\n                      type:\n                        description: String file.\n                        example: file\n                        type: string\n                      uri:\n                        description: This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.\n                        example: in.gov.cbse-HSCER-201412345678\n                        type: string\n                    required:\n                      - type\n                      - name\n                      - size\n                      - date\n                      - parent\n                      - mime\n                      - uri\n                      - doctype\n                      - description\n                      - issuer\n                      - issuerid\n                    type: object\n                title: Sample\n          description: successful operation\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ResponseSix\"\n                  - $ref: \"#/components/schemas/ResponseSeven\"\n          description: Internal Error\n      security:\n        - bearerAuth: []\n      summary: Issued Documents\n      tags:\n        - File APIs\n  \"/oauth2/1/files/{id}\":\n    get:\n      description: Returns the list of meta-data about documents or folders in user’s DigiLocker in a specific location.\n      operationId: Get List of Self Uploaded Documents id\n      parameters:\n        - description: The id of the folder to list. To list the files of root folder of a user’s locker, do not send this parameter. This is sent as a part of the URL.\n          in: path\n          name: id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  details:\n                    properties:\n                      date:\n                        description: This contains the date of file upload in case of self uploaded documents\n                        example: 2015-05-12T15:50:38Z\n                        type: string\n                      description:\n                        description: This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.\n                        example: \"\"\n                        type: string\n                      id:\n                        description: The id if this item is a folder.\n                        example: \"5678\"\n                        type: integer\n                      issuer:\n                        description: The name of the issuer. This is blank in case of uploaded documents and folders.\n                        example: \"\"\n                        type: string\n                      mime:\n                        description: The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.\n                        example: \"\"\n                        type: string\n                      name:\n                        description: The name of the file or folder.\n                        example: My Documents\n                        type: string\n                      parent:\n                        description: The id of the parent folder.\n                        example: \"1234\"\n                        type: string\n                      size:\n                        description: Size of file or folder.\n                        example: \"366481\"\n                        type: string\n                      type:\n                        description: String dir for folder and string file for file.\n                        example: dir\n                        type: string\n                      uri:\n                        description: This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.\n                        example: \"\"\n                        type: string\n                    required:\n                      - type\n                      - name\n                      - id\n                      - size\n                      - date\n                      - parent\n                      - mime\n                      - uri\n                      - description\n                      - issuer\n                    type: object\n                title: Sample\n          description: successful operation\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_id\n                    type: string\n                  error_description:\n                    example: The folder does not exist\n                    type: string\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: unexpected_error\n                    type: string\n                  error_description:\n                    example: Internal server error\n                    type: string\n                type: object\n          description: Internal Error\n      security:\n        - bearerAuth: []\n      summary: Get List of Self Uploaded Documents\n      tags:\n        - File APIs\n  /oauth2/1/pull/doctype:\n    post:\n      description: Returns a list of documents/certificates issued by an issuer organization registered with DigiLocker.\n      operationId: Get List of Documents Provided by an Issuer id\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/DocType\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocTypeResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_parameter\n                  error_description:\n                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_client_id\n                    type: string\n                  error_description:\n                    example: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                  error_description:\n                    description: Internal server error\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Get List of Documents Provided by an Issuer\n      tags:\n        - DigiLocker Meta APIs\n  /oauth2/1/pull/issuers:\n    post:\n      description: Returns the list of issuers registered with DigiLocker.\n      operationId: Get List of Issuers id\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/Issuer\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/IssuerResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_parameter\n                    type: string\n                  error_description:\n                    example: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\n                    type: string\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_client_id\n                    type: string\n                  error_description:\n                    example: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                  error_description:\n                    description: Internal server error\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Get List of Issuers\n      tags:\n        - DigiLocker Meta APIs\n  /oauth2/1/pull/parameters:\n    post:\n      description: Returns a list of parameters required to search a document/certificate of an issuer organization registered with DigiLocker. These parameters are used to pull a document from issuer’s repository using Pull Document API mentioned in subsequent section.\n      operationId: Get Search Parameters for a Document id\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/SearchParameters\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SearchParametersResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_parameter\n                  error_description:\n                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_client_id\n                    type: string\n                  error_description:\n                    example: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                  error_description:\n                    description: Internal server error\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Get Search Parameters for a Document\n      tags:\n        - DigiLocker Meta APIs\n  /oauth2/1/pull/pulldocument:\n    post:\n      description: This API allows a client application to search a document/certificate from issuer’s repository using the parameters provided by a user. The searched document is saved in user’s issued document section of DigiLocker if the search is successful.\n      operationId: Pull Document id\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/PullDocumentSchema\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  details:\n                    properties:\n                      uri:\n                        type: string\n                    required:\n                      - uri\n                    type: object\n                title: Sample\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response13\"\n                  - $ref: \"#/components/schemas/ResponseSix\"\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: record_not_found\n                  error_description:\n                    description: No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes.\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response14\"\n                  - $ref: \"#/components/schemas/Response15\"\n                  - $ref: \"#/components/schemas/Response16\"\n                  - $ref: \"#/components/schemas/Response17\"\n                  - $ref: \"#/components/schemas/Response18\"\n          description: Internal Error\n      security:\n        - bearerAuth: []\n      summary: Pull Document\n      tags:\n        - File APIs\n  /oauth2/1/revoke:\n    post:\n      description: Client applications can revoke a previously obtained refresh or access token when it is no longer needed. This is done by making a request to the token revocation endpoint. DigiLocker will invalidate the specified token and, if applicable, other tokens based on the same authorisation grant. This API may be used to sign out a user from DigiLocker. This API will work for server based web applications, mobile application and limited input devices.\n      operationId: get token revocation id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                token:\n                  description: The token that needs to be revoked.\n                  type: string\n                token_type_hint:\n                  description: The type of the above token. The value will be one of access_token or refresh_token. If this parameter is not sent, DigiLocker will look for this token in both access and refresh tokens and then revoke it.\n                  enum:\n                    - refresh_token\n                    - access_token\n                  type: string\n              required:\n                - token\n              type: object\n      responses:\n        \"200\":\n          description: successful operation\n        \"400\":\n          description: The token is invalid\n      security:\n        - oauthsecurity: []\n      summary: Revoke Token.\n      tags:\n        - Token Revocation API\n  /oauth2/1/token:\n    post:\n      description: This endpoint only applies to apps using the authorization code flow. An app calls this endpoint to acquire a bearer token once the user has authorized the app. Calls to /oauth2/1/token need to be authenticated using the app's key and secret. These can either be passed as application/x-www-form-urlencoded POST parameters (see parameters below) or via HTTP basic authentication. If basic authentication is used, the app key should be provided as the username, and the app secret should be provided as the password.\n      operationId: getaccesstoken id\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                Get access token using authorization code:\n                  $ref: \"#/components/schemas/AccessToken\"\n                Get access token using device code and OTP:\n                  $ref: \"#/components/schemas/DeviceAccessToken\"\n                Get access token using refresh token:\n                  $ref: \"#/components/schemas/RefreshToken\"\n              type: object\n        description: Details of documents being created.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessResponse\"\n          description: successful operation\n        \"400\":\n          description: Bad request\n        \"401\":\n          description: If the access token is expired or has been revoked by DigiLocker user.\n      summary: Get Access Token\n      tags:\n        - Authorization\n  /oauth2/1/user:\n    get:\n      description: Client applications can call this API to get the DigiLocker Id, name, date of birth and gender of the account holder. An access token is required to call this API. The API will return the user details of the account with which the access token is linked. It is strongly recommended that the API can be called by client application only once after acquiring the access token. Since the user details do not change, the client application may store the values and use them when necessary than calling this API repeatedly.\n      operationId: Account Detail API id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  details:\n                    properties:\n                      digilockerid:\n                        description: A unique 36 character DigiLocker Id of the user account.\n                        example: 123e4567-e89b-12d3-a456-426655440000\n                        type: string\n                      dob:\n                        description: This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.\n                        example: \"31121970\"\n                        format: dd-mm-yyy\n                        type: string\n                      eaadhar:\n                        description: This indicates whether eAadhaar data is available for this account. Possible values are Y and N.\n                        enum:\n                          - Y\n                          - N\n                        type: string\n                      gender:\n                        description: This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.\n                        enum:\n                          - M\n                          - F\n                          - T\n                        type: string\n                      name:\n                        description: The name of the user as registered with DigiLocker.\n                        example: Sunil Kumar\n                        type: string\n                    required:\n                      - digilockerid\n                      - name\n                      - dob\n                      - gender\n                      - eaadhaar\n                    type: object\n                title: Sample\n          description: successful operation\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: unexpected_error\n                    type: string\n                  error_description:\n                    example: Internal server error\n                    type: string\n                type: object\n          description: Internal server error\n      security:\n        - bearerAuth: []\n      summary: Get User Details\n      tags:\n        - Account Detail API\n  \"/oauth2/1/xml/{uri}\":\n    get:\n      description: Returns the certificate data in machine readable XML format for a URI. This API can be used to only for issued documents. The XML data may not be available for all documents. If the XML data is available for a particular document, the mime parameter in Get List of Issued Documents API will contain application/xml. Please refer to Digital Locker XML Certificate Formats for more details of XML formats of various documents.\n      operationId: Get Certificate Data in XML Format from URI id\n      parameters:\n        - in: path\n          name: uri\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/XMLFormatSchema\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: uri_missing\n                    type: string\n                  error_description:\n                    example: URI parameter missing\n                    type: string\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_uri\n                    type: string\n                  error_description:\n                    example: No file found for given URI\n                    type: string\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response3\"\n                  - $ref: \"#/components/schemas/Response4\"\n                  - $ref: \"#/components/schemas/Response5\"\n                  - $ref: \"#/components/schemas/Response6\"\n          description: Internal Error\n        \"503\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response1\"\n                  - $ref: \"#/components/schemas/Response2\"\n          description: Gateway timeout\n      security:\n        - bearerAuth: []\n      summary: Get Certificate Data in XML Format from URI\n      tags:\n        - File APIs\n  /oauth2/2/files/issued:\n    get:\n      description: Returns the list of meta-data about issued documents in user’s DigiLocker.\n      operationId: Get List of issued Documents id\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  items:\n                    items:\n                      properties:\n                        date:\n                          minLength: 1\n                          type: string\n                        description:\n                          minLength: 1\n                          type: string\n                        doctype:\n                          minLength: 1\n                          type: string\n                        issuer:\n                          minLength: 1\n                          type: string\n                        issuerid:\n                          minLength: 1\n                          type: string\n                        mime:\n                          items:\n                            properties: {}\n                          type: array\n                        name:\n                          minLength: 1\n                          type: string\n                        parent:\n                          type: string\n                        size:\n                          type: string\n                        type:\n                          minLength: 1\n                          type: string\n                        uri:\n                          minLength: 1\n                          type: string\n                      required:\n                        - name\n                        - type\n                        - size\n                        - date\n                        - parent\n                        - uri\n                        - doctype\n                        - description\n                        - issuerid\n                        - issuer\n                    minItems: 1\n                    type: array\n                    uniqueItems: true\n                  resource:\n                    minLength: 1\n                    type: string\n                required:\n                  - items\n                  - resource\n                type: object\n          description: successful operation\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/ResponseSix\"\n                  - $ref: \"#/components/schemas/ResponseSeven\"\n          description: Internal Error\n      summary: Issued Documents\n      tags:\n        - File APIs\n  /oauth2/2/xml/eaadhaar:\n    get:\n      description: Returns e-Aadhaar data in XML format for the account.\n      operationId: Get e-Aadhaar Data in XML Format id\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/EaadharXamlSchema\"\n          description: successful operation\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid token\n                    type: string\n                  error_description:\n                    example: The access token is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"404\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    enum:\n                      - aadhaar_not_linked\n                      - aadhaar_not_available\n                  error_description:\n                    enum:\n                      - Aadhaar is not linked to the account\n                      - Aadhaar data is not available for this user. Please perform Aadhaar eKYC again.\n                type: object\n          description: Not found\n        \"500\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response3\"\n                  - $ref: \"#/components/schemas/Response4\"\n                  - $ref: \"#/components/schemas/Response5\"\n                  - $ref: \"#/components/schemas/Response6\"\n          description: Internal Error\n        \"503\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response1\"\n                  - $ref: \"#/components/schemas/Response2\"\n          description: Gateway timeout\n      security:\n        - bearerAuth: []\n      summary: Get e-Aadhaar Data in XML Format\n      tags:\n        - File APIs\n  /signup/1/demoauthverify:\n    post:\n      description: This API is used to verify the OTP sent by DigiLocker during the sign up API call above.\n      operationId: Verify OTP id\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/DemoAuthVerify\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemoAuthVerifyResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response7\"\n                  - $ref: \"#/components/schemas/Response8\"\n                  - $ref: \"#/components/schemas/Response9\"\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_client_id\n                    type: string\n                  error_description:\n                    example: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                  error_description:\n                    description: Internal server error\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Verify OTP\n      tags:\n        - DigiLocker Sign up APIs\n  /signup/2/demoauth:\n    post:\n      description: This API is used to validate Aadhaar details and verify the mobile number by generating an OTP. This API call, if successful, will be followed by verify OTP call by the partner application if the user is online or available to perform OTP validation as indicated in verification parameter\n      operationId: SIGN UP id\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/DemoAuth\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DemoAuthResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: \"#/components/schemas/Response10\"\n                  - $ref: \"#/components/schemas/Response11\"\n                  - $ref: \"#/components/schemas/Response12\"\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    example: invalid_client_id\n                    type: string\n                  error_description:\n                    example: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                  error_description:\n                    description: Internal server error\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: SIGN UP\n      tags:\n        - DigiLocker Sign up APIs\n  /statistics/1/counts:\n    post:\n      description: Returns DigiLocker statistics such as the count of users, authentic documents, issuers and requesters as on a specific date.\n      operationId: Get Statistics id\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: \"#/components/schemas/GetStatistics\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetStatisticsResponse\"\n          description: successful operation\n        \"400\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_parameter\n                    type: string\n                  error_description:\n                    description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\n                    type: string\n                type: object\n          description: Bad request\n        \"401\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: invalid_client_id\n                    type: string\n                  error_description:\n                    description: The client_id parameter is invalid\n                    type: string\n                type: object\n          description: Unauthorized error\n        \"500\":\n          content:\n            application/json:\n              schema:\n                properties:\n                  error:\n                    description: unexpected_error\n                    type: string\n                  error_description:\n                    description: Internal server error\n                    type: string\n                type: object\n          description: Internal Error\n      security:\n        - oauthsecurity: []\n      summary: Get Statistics\n      tags:\n        - DigiLocker Meta APIs\ncomponents:\n  schemas:\n    AccessResponse:\n      properties:\n        access_token:\n          description: The access token that can be used to call the DigiLocker APIs.\n          example: bc125c212a4b03a9a188a858be5a163f379e878a\n          type: string\n        digilocker_id:\n          description: A unique 36 character DigiLocker Id of the user account.\n          example: 123e4567-e89b-12d3-a456-426655440000\n          type: string\n        dob:\n          description: This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.\n          example: \"31121970\"\n          format: dd-mm-yyy\n          type: integer\n        eaadhar:\n          description: This indicates whether eAadhaar data is available for this account. Possible values are Y and N.\n          enum:\n            - Y\n            - N\n          type: string\n        expires_in:\n          description: The duration in seconds for which the access token is valid\n          example: 3600\n          format: int64\n          type: integer\n        gender:\n          description: This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.\n          enum:\n            - M\n            - F\n            - T\n          type: string\n        name:\n          description: The name of the user as registered with DigiLocker.\n          example: Sunil Kumar\n          type: string\n        reference_key:\n          description: A unique reference of the user account.\n          example: 1c66bec26364cd6fefaabc6cae91840a\n          type: string\n        refresh_token:\n          description: The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.\n          example: a47ab18c593703e4f83a274694db7422a8cfcb8f\n          type: string\n        scope:\n          description: Scope of the token.\n          type: string\n        token_type:\n          description: The type of token which will always be Bearer.\n          example: Bearer\n          type: string\n      required:\n        - access_token\n        - expires_in\n        - token_type\n        - scope\n        - refresh_token\n        - digilocker_id\n        - name\n        - dob\n        - gender\n        - eaadhar\n        - reference_key\n      type: object\n    AccessToken:\n      properties:\n        client_id:\n          example: ABCDEFG\n          type: string\n        client_secret:\n          example: a123456abcdeghijk7890\n          type: string\n        code:\n          example: ca82123a5476aa2f5e4638957c0ecc55c6ec07c1\n          type: string\n        code_verifier:\n          example: a123456abca\n          type: string\n        grant_type:\n          enum:\n            - authorization_code\n          type: string\n        redirect_uri:\n          example: https://ndh.digitallocker.gov.in/oauth2-redirect.html\n          type: string\n      required:\n        - grant_type\n        - client_id\n        - client_secret\n      type: object\n    AuthTokenResponse:\n      properties:\n        access_token:\n          description: |-\n            The access token that can be used to call the\n                DigiLocker APIs.\n          example: bc125c212a4b03a9a188a858be5a163f379e878a\n          type: string\n        expires_in:\n          description: |-\n            The duration in seconds for which the access token is\n                        valid.\n          example: 3600\n          format: int64\n          type: integer\n        refresh_token:\n          description: |-\n            The refresh token used to refresh the above access\n              token when it expires. This will value will be\n              returned only in case of web applications and not be\n              returned for limited input devices.\n          example: ad6f4004cc3e53f56bda391fe485fc4d32928061\n          type: string\n        scope:\n          description: Scope of the token.\n          type: string\n        token_type:\n          description: The type of token which will always be Bearer.\n          example: Bearer\n          type: string\n      required:\n        - access_token\n        - expires_in\n        - token_type\n        - scope\n        - refresh_token\n      type: object\n    DemoAuth:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        consent:\n          description: The consent indicator from the user for performing demographic authentication using Aadhaar details. This Partner Application must capture the user consent for performing the Aadhaar demographic authentication. The possible values are ‘Y’ and ‘N’. The sign up request will be processed only when this indicator is ‘Y’.\n          type: string\n        demoauth:\n          description: The parameter indicates whether Aadhaar demographic authentication must be successful for creating DigiLocker account. The possible values are ‘Y’ and ‘N’. The value of ‘Y’ will perform Aadhaar demographic authentication and will return errors if any in response. The value of ‘N’ will also perform Aadhaar demographic authentication but will return any error in case of authentication failure. It will create a basic mobile based account for the user. Value ‘N’ should be used when the user account needs to be created in the absence of the user.\n          type: string\n        dob:\n          description: This is date of birth of the user as mentioned in Aadhaar in DDMMYYYY format.\n          type: integer\n        gender:\n          description: This is gender of the user as mentioned in Aadhaar. The possible values are M, F, T for male, female and transgender respectively.\n          enum:\n            - M\n            - F\n            - T\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        mobile:\n          description: This is the mobile number of the user. DigiLocker will check whether an account exists for this mobile number. Either uid or mobile is required to verify whether an account exists.\n          type: integer\n        name:\n          description: This is name of the user as mentioned in Aadhaar.\n          type: string\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n        uid:\n          description: This is the Aadhaar number of the user. DigiLocker will check whether an account exists for this Aadhaar number. Either uid or mobile is required to verify whether an account exists.\n          type: integer\n        verification:\n          description: The parameter indicates whether the mobile number provided above should be validated by DigiLocker. If this parameter is ‘Y’, the DigiLocker sends an OTP to verify the mobile number. In this case the client application will call the second API to validate the OTP. The user will be signed on only after successful OTP validation. This flow should be used when the user account is created by user himself/herself or the user is present to provide the OTP. If this parameter is ‘N’, the user account will be created without OTP validation. The OTP validation will be performed when the user signs in for the first time in DigiLocker. This flow should be used when the user account needs to be created in the absence of the user.\n          type: string\n    DemoAuthResponse:\n      properties:\n        details:\n          properties:\n            access_token:\n              description: The access token that can be used to call the DigiLocker APIs.\n              example: bc125c212a4b03a9a188a858be5a163f379e878a\n              type: string\n            expires_in:\n              description: The duration in seconds for which the access token is valid.\n              example: 3600\n              type: string\n            mobile:\n              description: \"The masked mobile number of the user on which the OTP has been sent.           \"\n              example: \"******3712\"\n              type: integer\n            refresh_token:\n              description: The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.\n              example: a47ab18c593703e4f83a274694db7422a8cfcb8f\n              type: string\n            scope:\n              description: Scope of the token\n              example: \"\"\n              type: string\n            token_type:\n              description: The type of token which will always be Bearer.\n              example: Bearer\n              type: string\n          required:\n            - access_token\n            - expires_in\n            - token_type\n            - scope\n            - refresh_token\n            - mobile\n          type: object\n    DemoAuthVerify:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        mobile:\n          description: This is the mobile number of the user. DigiLocker will check whether an account exists for this mobile number. Either uid or mobile is required to verify whether an account exists.\n          type: integer\n        otp:\n          description: The OTP provided by the user.\n          type: integer\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n    DemoAuthVerifyResponse:\n      properties:\n        details:\n          properties:\n            access_token:\n              description: The access token that can be used to call the DigiLocker APIs.\n              example: bc125c212a4b03a9a188a858be5a163f379e878a\n              type: string\n            expires_in:\n              description: The duration in seconds for which the access token is valid.\n              example: 3600\n              type: string\n            refresh_token:\n              description: The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.\n              example: a47ab18c593703e4f83a274694db7422a8cfcb8f\n              type: string\n            scope:\n              description: Scope of the token\n              example: \"\"\n              type: string\n            token_type:\n              description: The type of token which will always be Bearer.\n              example: Bearer\n              type: string\n          required:\n            - access_token\n            - expires_in\n            - token_type\n            - scope\n            - refresh_token\n          type: object\n    DeviceAccessToken:\n      properties:\n        client_id:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        device_code:\n          description: The device verification code. The device_code field from Get Device Code Response.\n          type: string\n        dl_otp:\n          description: The OTP collected from the user\n          type: string\n        grant_type:\n          description: The grant type, which must be “urn:ietf:params:oauth:grant-type:device_code”.\n          example: urn:ietf:params:oauth:grant-type:device_code\n          type: string\n    DeviceAuthorizationCode:\n      properties:\n        client_id:\n          type: string\n        dl_mobile:\n          description: |-\n            Mobile number associated with DigiLocker account of the\n              user. The client device accepts the mobile number on the device from user and sends it in this parameter. Either the username or the mobile number must be provided.\n          type: integer\n        dl_username:\n          description: \"DigiLocker username of the user. The client device accepts the username on the device from user and sends the username in this parameter. Either the username or the mobile number must be provided.   \"\n          type: string\n        response_type:\n          description: The parameter must be set to device_code.\n          example: device_code\n          type: string\n    DeviceAuthorizationCodeResponse:\n      properties:\n        device_code:\n          description: The device verification code.\n          example: 74tq5miHKB\n          type: string\n        dl_masked_email:\n          description: The masked email on which the OTP is sent.\n          example: xxxxxx@gmail.com\n          type: string\n        dl_masked_mobile:\n          description: The masked mobile number on which the OTP is sent.\n          example: XXXXXX1234\n          type: integer\n        expires_in:\n          description: The duration in seconds for which the code is valid.\n          example: 600\n          type: integer\n      required:\n        - device_code\n        - dl_masked_mobile\n        - dl_masked_email\n        - expires_in\n      type: object\n    DocType:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        orgid:\n          description: The organization id for the issuer in DigiLocker. This organization id is returned in Get List of Issuers API mentioned earlier.\n          type: string\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n    DocTypeResponse:\n      properties:\n        documents:\n          items:\n            properties:\n              description:\n                minLength: 1\n                type: string\n              doctype:\n                minLength: 1\n                type: string\n            required:\n              - doctype\n              - description\n          minItems: 1\n          type: array\n          uniqueItems: true\n      required:\n        - documents\n      type: object\n    EaadharXamlSchema:\n      properties:\n        KycRes:\n          properties:\n            Rar:\n              minLength: 1\n              type: string\n            Signature:\n              properties:\n                KeyInfo:\n                  properties:\n                    X509Data:\n                      properties:\n                        X509Certificate:\n                          minLength: 1\n                          type: string\n                        X509SubjectName:\n                          minLength: 1\n                          type: string\n                      required:\n                        - X509SubjectName\n                        - X509Certificate\n                      type: object\n                  required:\n                    - X509Data\n                  type: object\n                SignatureValue:\n                  minLength: 1\n                  type: string\n                SignedInfo:\n                  properties:\n                    CanonicalizationMethod:\n                      properties:\n                        Algorithm:\n                          minLength: 1\n                          type: string\n                      required:\n                        - Algorithm\n                      type: object\n                    Reference:\n                      properties:\n                        DigestMethod:\n                          properties:\n                            Algorithm:\n                              minLength: 1\n                              type: string\n                          required:\n                            - Algorithm\n                          type: object\n                        DigestValue:\n                          minLength: 1\n                          type: string\n                        Transforms:\n                          properties:\n                            Transform:\n                              properties:\n                                Algorithm:\n                                  minLength: 1\n                                  type: string\n                              required:\n                                - Algorithm\n                              type: object\n                          required:\n                            - Transform\n                          type: object\n                        URI:\n                          type: string\n                      required:\n                        - Transforms\n                        - DigestMethod\n                        - DigestValue\n                        - URI\n                      type: object\n                    SignatureMethod:\n                      properties:\n                        Algorithm:\n                          minLength: 1\n                          type: string\n                      required:\n                        - Algorithm\n                      type: object\n                  required:\n                    - CanonicalizationMethod\n                    - SignatureMethod\n                    - Reference\n                  type: object\n                xmlns:\n                  minLength: 1\n                  type: string\n              required:\n                - SignedInfo\n                - SignatureValue\n                - KeyInfo\n                - xmlns\n              type: object\n            UidData:\n              properties:\n                LData:\n                  properties:\n                    co:\n                      minLength: 1\n                      type: string\n                    country:\n                      minLength: 1\n                      type: string\n                    dist:\n                      minLength: 1\n                      type: string\n                    lang:\n                      minLength: 1\n                      type: string\n                    lm:\n                      minLength: 1\n                      type: string\n                    loc:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                    pc:\n                      minLength: 1\n                      type: string\n                    state:\n                      minLength: 1\n                      type: string\n                    vtc:\n                      minLength: 1\n                      type: string\n                  required:\n                    - co\n                    - country\n                    - dist\n                    - lang\n                    - lm\n                    - loc\n                    - name\n                    - pc\n                    - state\n                    - vtc\n                  type: object\n                Pht:\n                  minLength: 1\n                  type: string\n                Poa:\n                  properties:\n                    co:\n                      minLength: 1\n                      type: string\n                    country:\n                      minLength: 1\n                      type: string\n                    dist:\n                      minLength: 1\n                      type: string\n                    lm:\n                      minLength: 1\n                      type: string\n                    loc:\n                      minLength: 1\n                      type: string\n                    pc:\n                      minLength: 1\n                      type: string\n                    state:\n                      minLength: 1\n                      type: string\n                    vtc:\n                      minLength: 1\n                      type: string\n                  required:\n                    - co\n                    - country\n                    - dist\n                    - lm\n                    - loc\n                    - pc\n                    - state\n                    - vtc\n                  type: object\n                Poi:\n                  properties:\n                    dob:\n                      minLength: 1\n                      type: string\n                    gender:\n                      minLength: 1\n                      type: string\n                    name:\n                      minLength: 1\n                      type: string\n                  required:\n                    - dob\n                    - gender\n                    - name\n                  type: object\n                Prn:\n                  properties:\n                    text:\n                      minLength: 1\n                      type: string\n                    type:\n                      minLength: 1\n                      type: string\n                  required:\n                    - type\n                    - text\n                  type: object\n                tkn:\n                  minLength: 1\n                  type: string\n                uid:\n                  minLength: 1\n                  type: string\n              required:\n                - Poi\n                - Poa\n                - LData\n                - Pht\n                - Prn\n                - tkn\n                - uid\n              type: object\n            code:\n              minLength: 1\n              type: string\n            ret:\n              minLength: 1\n              type: string\n            ts:\n              minLength: 1\n              type: string\n            ttl:\n              minLength: 1\n              type: string\n            txn:\n              minLength: 1\n              type: string\n          required:\n            - Rar\n            - UidData\n            - Signature\n            - code\n            - ret\n            - ts\n            - ttl\n            - txn\n          type: object\n      required:\n        - KycRes\n      type: object\n    FileUpload:\n      properties:\n        Content-Type:\n          description: The mime type of the file e.g. image/jpg, image/jpeg, image/png, application/pdf.\n          type: string\n    FileUploadResponse:\n      properties:\n        details:\n          properties:\n            Path:\n              description: The destination path of the file in DigiLocker including filename.\n              type: string\n            size:\n              description: Size of file.\n              type: string\n          required:\n            - Path\n            - size\n          type: object\n    GetStatistics:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n    GetStatisticsResponse:\n      properties:\n        authentic_documents:\n          description: Count of authentic documents available through DigiLocker.\n          example: \"3520475277\"\n          type: string\n        count_as_on:\n          description: The date on which this statistics is generated.\n          example: \"31072019\"\n          type: string\n        issuers:\n          description: Count of issuer organizations registered on DigiLocker.\n          example: \"134\"\n          type: string\n        monthwise_registations:\n          description: List of last 12 months cumulative user registrations\n          properties:\n            count:\n              description: Count of cumulative user registrations in the given month.\n              example: \"124794\"\n              type: integer\n            details2:\n              properties:\n                count:\n                  description: Count of cumulative user registrations in the given month.\n                  example: \"124794\"\n                  type: integer\n                id:\n                  description: Unique id of the list item.\n                  example: \"18496\"\n                  type: integer\n                month:\n                  description: Month of the year in numeric format with January as 1\n                  example: \"5\"\n                  type: integer\n                year:\n                  description: Year in YYYY format\n                  example: \"2018\"\n                  type: integer\n              type: object\n            id:\n              description: Unique id of the list item.\n              example: \"18496\"\n              type: integer\n            month:\n              description: Month of the year in numeric format with January as 1\n              example: \"5\"\n              type: integer\n            year:\n              description: Year in YYYY format\n              example: \"2018\"\n              type: integer\n          type: object\n        requestors:\n          description: Count of requester organizations registered on DigiLocker.\n          example: \"45\"\n          type: string\n        users:\n          description: Count of registered users on DigiLocker.\n          example: \"25873490\"\n          type: string\n        yearwise_authentic_documents:\n          description: List of cumulative year-wise counts of authentic documents in DigiLocker.\n          properties:\n            count:\n              description: |-\n                Count of cumulative user authentic documents in\n                  the given year.\n              example: \"10134567\"\n              type: integer\n            details:\n              properties:\n                count:\n                  description: Count of cumulative user authentic documents in the given year.\n                  example: \"1000548093\"\n                  type: integer\n                id:\n                  description: Unique id of the list item.\n                  example: \"18350\"\n                  type: integer\n                year:\n                  description: Year in YYYY format.\n                  example: \"2017\"\n                  type: integer\n              type: object\n            details1:\n              properties:\n                count:\n                  description: Count of cumulative user authentic documents in the given year.\n                  example: \"2410543684\"\n                  type: integer\n                id:\n                  description: Unique id of the list item.\n                  example: \"18354\"\n                  type: integer\n                year:\n                  description: Year in YYYY format.\n                  example: \"2018\"\n                  type: integer\n              type: object\n            details2:\n              properties:\n                count:\n                  description: \"Count of cumulative user authentic documents in the given year.  \"\n                  example: \"3520475277\"\n                  type: integer\n                id:\n                  description: Unique id of the list item.\n                  example: \"18567\"\n                  type: integer\n                year:\n                  description: Year in YYYY format.\n                  example: \"2019\"\n                  type: integer\n              type: object\n            id:\n              description: Unique id of the list item.\n              example: \"18347\"\n              type: integer\n            year:\n              description: Year in YYYY format.\n              example: \"2016\"\n              type: integer\n          type: object\n      required:\n        - users\n        - authentic_documents\n        - issuers\n        - requestors\n        - count_as_on\n        - monthwise_registations\n        - id\n        - month\n        - year\n        - count\n        - yearwise_authentic_documents\n      type: object\n    Issuer:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n    IssuerResponse:\n      properties:\n        issuers:\n          items:\n            properties:\n              categories:\n                minLength: 1\n                type: string\n              description:\n                type: string\n              issuerid:\n                minLength: 1\n                type: string\n              name:\n                minLength: 1\n                type: string\n              orgid:\n                minLength: 1\n                type: string\n            required:\n              - name\n              - description\n              - categories\n              - issuerid\n              - orgid\n          minItems: 1\n          type: array\n          uniqueItems: true\n      required:\n        - issuers\n      type: object\n    PullDocumentSchema:\n      properties:\n        chasis_no:\n          description: Other parameters required for fetching a document as listed in paramname field of Get Search Parameters API.\n          type: string\n        consent:\n          description: The consent indicator from the user for performing demographic authentication using Aadhaar details. This Partner Application must capture the user consent for performing the Aadhaar demographic authentication. The possible values are ‘Y’ and ‘N’. The sign up request will be processed only when this indicator is ‘Y’.\n          type: string\n        doctype:\n          description: A 5 character unique document type provided by DigiLocker.\n          type: string\n        orgid:\n          description: The organization id for the issuer in DigiLocker. This organization id is returned in Get List of Issuers API mentioned above.\n          type: string\n        reg_no:\n          description: Other parameters required for fetching a document as listed in paramname field of Get Search Parameters API.\n          type: string\n    PushUri:\n      properties:\n        action:\n          description: Action that needs to be taken for the Aadhaar number and URI combination. Possible values are A for adding a new URI, U for updating an already added URI details or D for deleting the URI.\n          type: string\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        digilockerid:\n          description: This is the DigiLocker Id of the user that was acquired using Get User Details API.\n          type: integer\n        docid:\n          description: A unique number of the document. This id will be unique within the document type issued by the issuer.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        issuedate:\n          description: The issue date of the document in DDMMYYYY format.\n          type: string\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n        uri:\n          description: This is the unique identifier of the document.\n          type: string\n        validfrom:\n          description: The date from which the document is valid in DDMMYYYY format. This may be same as the issue date.\n          type: integer\n        validto:\n          description: The expiry date of the document in DDMMYYYY format.\n          type: string\n    RefreshAccessToken:\n      properties:\n        grant_type:\n          example: refresh_token\n          type: string\n        refresh_Token:\n          example: a47ab18c593703e4f83a274694db7422a8cfcb8f\n          type: string\n      required:\n        - grant_type\n        - refresh_Token\n      type: object\n    RefreshToken:\n      properties:\n        client_id:\n          example: ABCDEFG\n          type: string\n        client_secret:\n          example: a123456abcdeghijk7890\n          type: string\n        grant_type:\n          enum:\n            - refresh_token\n          type: string\n        refresh_token:\n          example: ca82123a5476aa2f5e4638957c0ecc55c6ec07c1\n          type: string\n      required:\n        - grant_type\n        - refresh_token\n        - client_id\n        - client_secret\n      type: object\n    Response1:\n      properties:\n        error:\n          description: repository_service_inactive\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    Response10:\n      properties:\n        error:\n          description: mobile_exists\n          type: string\n        error_description:\n          description: A DigiLocker account already exists with this mobile number.\n          type: string\n      type: object\n    Response11:\n      properties:\n        error:\n          description: auth_failure\n          type: string\n        error_description:\n          description: The data on Aadhaar does not match with one or more of Aadhaar, Name, DOB and Gender data provided. Aadhaar demographic authentication failure.\n          type: string\n      type: object\n    Response12:\n      properties:\n        error:\n          description: invalid_parameter\n          type: string\n        error_description:\n          description: One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  uid parameter is missing or invalid  Name parameter is missing or invalid  Dob parameter is missing or invalid  Gender parameter is missing or invalid  Mobile parameter is missing or invalid  Verification parameter is missing or invalid  Consent parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\n          type: string\n      type: object\n    Response13:\n      properties:\n        error:\n          description: repository_service_configerror\n          type: string\n        error_description:\n          description: The issuer service is not available. Please contact DigiLocker support.\n          type: string\n      type: object\n    Response14:\n      properties:\n        error:\n          description: invalid_orgid\n          type: string\n        error_description:\n          description: The orgid parameter is missing or invalid.\n          type: string\n      type: object\n    Response15:\n      properties:\n        error:\n          description: invalid_doctype\n          type: string\n        error_description:\n          description: The doctype parameter is missing or invalid.\n          type: string\n      type: object\n    Response16:\n      properties:\n        error:\n          description: pull_response_pending\n          type: string\n        error_description:\n          description: The details provided above do not exactly match with the details on the certificate. Your request has been forwarded to the Issuer department. The Issuer department will verify the details provided above. If the verification is successful, your certificate will be made available in the Issued Documents section of your DigiLocker.\n          type: string\n      type: object\n    Response17:\n      properties:\n        error:\n          description: uri_exists\n          type: string\n        error_description:\n          description: This document already exists in your Issued Documents.\n          type: string\n      type: object\n    Response18:\n      properties:\n        error:\n          description: aadhaar_not_linked\n          type: string\n        error_description:\n          description: To access issued documents, please link your Aadhaar number to your DigiLocker account.\n          type: string\n      type: object\n    Response2:\n      properties:\n        error:\n          description: repository_service_unpublished\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    Response3:\n      properties:\n        error:\n          description: repository_service_unresponsive\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    Response4:\n      properties:\n        error:\n          description: repository_service_configerror\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    Response5:\n      properties:\n        error:\n          description: repository_service_resperror\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    Response6:\n      properties:\n        error:\n          description: repository_service_exception\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    Response7:\n      properties:\n        error:\n          description: parameter_missing\n          type: string\n        error_description:\n          description: One or more of the mandatory parameters is missing\n          type: string\n      type: object\n    Response8:\n      properties:\n        error:\n          description: invalid_ts\n          type: string\n        error_description:\n          description: Timestamp parameter is invalid\n          type: string\n      type: object\n    Response9:\n      properties:\n        error:\n          description: hmac_mismatch\n          type: string\n        error_description:\n          description: HMAC does not match\n          type: string\n      type: object\n    ResponseFive:\n      properties:\n        error:\n          description: otp_error\n          type: string\n        error_description:\n          description: OTP could not be sent as the account may not have a valid mobile or a valid email.\n          type: string\n      type: object\n    ResponseFour:\n      properties:\n        error:\n          description: multiple_mobile_accounts\n          type: string\n        error_description:\n          description: The mobile number provided is associated with more than one DigiLocker accounts. Please login using username.\n          type: string\n      type: object\n    ResponseOne:\n      properties:\n        error:\n          description: invalid_response_type\n          type: string\n        error_description:\n          description: The response_type parameter is invalid\n          type: string\n      type: object\n    ResponseSeven:\n      properties:\n        error:\n          description: partner_service_unresponsive\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    ResponseSix:\n      properties:\n        error:\n          description: unexpected_error\n          type: string\n        error_description:\n          description: Internal server error\n          type: string\n      type: object\n    ResponseThree:\n      properties:\n        error:\n          description: invalid_mobile\n          type: string\n        error_description:\n          description: The dl_mobile parameter is invalid\n          type: string\n      type: object\n    ResponseTwo:\n      properties:\n        error:\n          description: invalid_username\n          type: string\n        error_description:\n          description: The dl_username parameter is invalid\n          type: string\n      type: object\n    SearchParameters:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        doctype:\n          description: A 5 character unique document type provided by DigiLocker.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        orgid:\n          description: The organization id for the issuer in DigiLocker. This organization id is returned in Get List of Issuers API mentioned earlier.\n          type: string\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n    SearchParametersResponse:\n      items:\n        properties:\n          example:\n            minLength: 1\n            type: string\n          label:\n            minLength: 1\n            type: string\n          paramname:\n            minLength: 1\n            type: string\n          valuelist: {}\n        required:\n          - label\n          - paramname\n          - example\n        type: object\n      minItems: 1\n      type: array\n      uniqueItems: true\n    VerifyAccount:\n      properties:\n        clientid:\n          description: Provide the client id that was created during the application registration process on Partners Portal.\n          type: string\n        hmac:\n          description: Provide SHA-256 encrypted value of the client secret, clientid and ts parameters above concatenated in this sequence (client secret, clientid, ts). The hmac parameter is used by DigiLocker to ensure the data integrity and authentication of the request. Use the Client Secret Key generated during the application registration process on Partners Portal as the client secret.\n          format: binary\n          type: string\n        mobile:\n          description: This is the mobile number of the user. DigiLocker will check whether an account exists for this mobile number. Either uid or mobile is required to verify whether an account exists.\n          type: integer\n        ts:\n          description: Provide a timestamp value in UNIX (or POSIX) format in IST time zone in seconds. This timestamp value must not be older than 30 minutes.\n          type: string\n        uid:\n          description: This is the Aadhaar number of the user. DigiLocker will check whether an account exists for this Aadhaar number. Either uid or mobile is required to verify whether an account exists.\n          type: integer\n    VerifyAccountResponse:\n      properties:\n        digilockerid:\n          description: A unique 36 character DigiLocker Id of the user account.\n          example: 123e4567-e89b-12d3-a456-426655440000\n          type: string\n        registered:\n          description: true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.\n          example: \"true\"\n          type: string\n      required:\n        - registered\n        - digilockerid\n      type: object\n    XMLFormatSchema:\n      properties:\n        CertificateData:\n          items:\n            properties: {}\n          type: array\n        Signature:\n          properties:\n            KeyInfo:\n              properties:\n                X509Data: {}\n              type: object\n            SignatureValue: {}\n            SignedInfo: {}\n          required:\n            - KeyInfo\n          type: object\n      required:\n        - CertificateData\n        - Signature\n      type: object\n  securitySchemes:\n    Customkey2:\n      in: header\n      name: X-2\n      type: apiKey\n    Customkeys1:\n      in: header\n      name: X1123\n      type: apiKey\n    bearerAuth:\n      scheme: bearer\n      type: http\n    oauthAuthorizeCode:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://betaapi.digitallocker.gov.in/public/oauth2/1/authorize\n          scopes: {}\n          tokenUrl: https://betaapi.digitallocker.gov.in/public/oauth2/1/token\n      type: oauth2\n    oauthsecurity:\n      flows:\n        clientCredentials:\n          scopes:\n            default: default scope\n          tokenUrl: https://betaapi.digitallocker.gov.in/public/oauth2/1/token\n      type: oauth2\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@d7b17ce5bf6b5ed79e49d8b536171707a426d788/-/blob/APIs/digitallocker.gov.in/authpartner/1.0.0/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/d7b17ce5bf6b5ed79e49d8b536171707a426d788/APIs/digitallocker.gov.in/authpartner/1.0.0/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"AccessResponse\": parse schema: property \"eaadhar\": at 1:678: parse enum values: parse value \"true\": expected type \"string\", got \"bool\""
}