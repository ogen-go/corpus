{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/factset/enterprise-sdk"
		},
		"file": {
			"name": "ProcuretoPaySCIM.v1.yaml",
			"size": 0,
			"path": "specs/ProcuretoPaySCIM.v1.yaml",
			"byteSize": 83491,
			"content": "openapi: 3.0.0\ninfo:\n  title: FactSet SCIM API\n  version: 1.0.0\n  description: FactSet's SCIM API implementation.\nservers:\n  - url: https://api.factset.com/scim/v2/\npaths:\n  /ServiceProviderConfig:\n    get:\n      tags:\n        - Server configuration\n      summary: Get server configuration.\n      security:\n        - basicAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/serviceProviderConfigSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Schemas:\n    get:\n      tags:\n        - Schemas\n      summary: Get a list of schemas.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n      responses:\n        '200':\n          $ref: '#/components/responses/schemasSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Schemas/{id}:\n    get:\n      tags:\n        - Schemas\n      summary: Get a schema.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/schemaSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '404':\n          description: Schema not found.\n          content:\n            application/scim+json:\n              schema:\n                $ref: '#/components/schemas/Error'\n              example:\n                schemas:\n                  - urn:ietf:params:scim:api:messages:2.0:Error\n                detail: \u003e-\n                  Schema urn:scim:schemas:extension:FactSet:Core:1.0:User not\n                  found\n                status: '404'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Users:\n    get:\n      tags:\n        - Users\n      summary: Get a list of users.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/excludedAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/usersSuccess'\n        '400':\n          $ref: '#/components/responses/invalidFilterError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    post:\n      tags:\n        - Users\n      summary: Create a user.\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/userResource'\n      responses:\n        '201':\n          $ref: '#/components/responses/userSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Users/{id}:\n    get:\n      tags:\n        - Users\n      summary: Get a user.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/userSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    put:\n      tags:\n        - Users\n      summary: Replace a user.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/userResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/userSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    patch:\n      tags:\n        - Users\n      summary: Patch a user (add, replace, or remove attributes of a user.)\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/patchUserResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/userSuccess'\n        '400':\n          $ref: '#/components/responses/invalidPatchRequestError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    delete:\n      tags:\n        - Users\n      summary: Delete a user\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '204':\n          description: User successfully deleted.\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Groups:\n    get:\n      tags:\n        - Groups\n      summary: Get a list of groups.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/excludedAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/groupsSuccess'\n        '400':\n          $ref: '#/components/responses/invalidFilterError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Group/{id}:\n    get:\n      tags:\n        - Groups\n      summary: Get a group.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/groupSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/groupNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    put:\n      tags:\n        - Groups\n      summary: Replace a group.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/groupResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/groupSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/groupNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    patch:\n      tags:\n        - Groups\n      summary: Patch a group (add, replace, or remove attributes of a group.)\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/patchGroupResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/groupSuccess'\n        '400':\n          $ref: '#/components/responses/invalidPatchRequestError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Locations:\n    get:\n      tags:\n        - Locations\n      summary: Get a list of locations.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/excludedAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/locationsSuccess'\n        '400':\n          $ref: '#/components/responses/invalidFilterError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Locations/{id}:\n    get:\n      tags:\n        - Locations\n      summary: Get a location.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/locationSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/locationNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    put:\n      tags:\n        - Locations\n      summary: Replace a location.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/locationResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/locationSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/locationNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    patch:\n      tags:\n        - Locations\n      summary: Patch a location (add, replace, or remove attributes of a location.)\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/patchLocationResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/locationSuccess'\n        '400':\n          $ref: '#/components/responses/invalidPatchRequestError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Products:\n    get:\n      tags:\n        - Products\n      summary: Get a list of products.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/excludedAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/productsSuccess'\n        '400':\n          $ref: '#/components/responses/invalidFilterError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /Products/{id}:\n    get:\n      tags:\n        - Products\n      summary: Get a product.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/productSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/productNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /VermilionUsers:\n    get:\n      tags:\n        - VermilionUsers\n      summary: Get a list of Vermilion users.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/excludedAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionUserSuccess'\n        '400':\n          $ref: '#/components/responses/invalidFilterError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    post:\n      tags:\n        - VermilionUsers\n      summary: Create a Vermilion user.\n      security:\n        - basicAuth: []\n      requestBody:\n        $ref: '#/components/requestBodies/vermilionUserResource'\n      responses:\n        '201':\n          $ref: '#/components/responses/vermilionUserSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /VermilionUsers/{id}:\n    get:\n      tags:\n        - VermilionUsers\n      summary: Get a Vermilion user.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionUserSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    put:\n      tags:\n        - VermilionUsers\n      summary: Replace a Vermilion user.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/vermilionUserResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionUserSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    patch:\n      tags:\n        - VermilionUsers\n      summary: \u003e-\n        Patch a Vermilion user (add, replace, or remove attributes of a\n        Vermilion user.)\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/patchVermilionUserResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionUserSuccess'\n        '400':\n          $ref: '#/components/responses/invalidPatchRequestError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    delete:\n      tags:\n        - VermilionUsers\n      summary: Delete a Vermilion user\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '204':\n          description: User successfully deleted.\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/vermilionUserNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /VermilionGroups:\n    get:\n      tags:\n        - VermilionGroups\n      summary: Get a list of Vermilion groups.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/filter'\n        - $ref: '#/components/parameters/startIndex'\n        - $ref: '#/components/parameters/count'\n        - $ref: '#/components/parameters/attributes'\n        - $ref: '#/components/parameters/excludedAttributes'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionGroupSuccess'\n        '400':\n          $ref: '#/components/responses/invalidFilterError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n  /VermilionGroups/{id}:\n    get:\n      tags:\n        - VermilionGroups\n      summary: Get a Vermilion group.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionGroupSuccess'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    put:\n      tags:\n        - VermilionGroups\n      summary: Replace a Vermilion group.\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/vermilionGroupResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionGroupSuccess'\n        '400':\n          $ref: '#/components/responses/invalidResourceProvidedError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '404':\n          $ref: '#/components/responses/userNotFoundError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\n    patch:\n      tags:\n        - VermilionGroups\n      summary: \u003e-\n        Patch a Vermilion group (add, replace, or remove attributes of a\n        Vermilion group.)\n      security:\n        - basicAuth: []\n      parameters:\n        - $ref: '#/components/parameters/resourceId'\n      requestBody:\n        $ref: '#/components/requestBodies/patchVermilionGroupResource'\n      responses:\n        '200':\n          $ref: '#/components/responses/vermilionGroupSuccess'\n        '400':\n          $ref: '#/components/responses/invalidPatchRequestError'\n        '401':\n          $ref: '#/components/responses/unauthorizedError'\n        '403':\n          $ref: '#/components/responses/forbiddenError'\n        '500':\n          $ref: '#/components/responses/internalServerError'\ncomponents:\n  securitySchemes:\n    FactSetOAuth2:\n      type: oauth2\n      flows:\n        clientCredentials:\n          tokenUrl: https://auth.factset.com/as/token.oauth2\n          scopes: {}\n    FactSetApiKey:\n      type: http\n      scheme: basic\n  parameters:\n    resourceId:\n      name: id\n      description: ID of resource.\n      in: path\n      schema:\n        type: string\n      required: true\n    filter:\n      name: filter\n      description: \u003e-\n        Resource filter string. See [RFC 7644 section\n        3.4.2.2](https://tools.ietf.org/html/rfc7644#section-3.4.2.2) for\n        syntax. **Note**: only a subset of the filter string grammar is\n        currently supported.\n      in: query\n      schema:\n        type: string\n      required: false\n    startIndex:\n      name: startIndex\n      description: \u003e-\n        Result start index. The one-based index of the first result to be\n        returned in the list of resources. For example, to exclude the first two\n        resources, use a *startIndex* value of 3. This parameter has a default\n        value of 1. This index applies *after* any resource filtration has been\n        applied as specified by the *filter* argument.\n      in: query\n      schema:\n        type: integer\n      required: false\n    count:\n      name: count\n      description: \u003e-\n        Maximum resource count. The server will not return more resources than\n        this value, although it may return fewer.\n      in: query\n      schema:\n        type: integer\n      required: false\n    attributes:\n      name: attributes\n      description: \u003e-\n        Attribute whitelist filter string. A comma-separated list of resource\n        attribute names to be returned in the response, overriding the set of\n        attributes that would be returned by default. Attribute names must be\n        specified in standard attribute notation (see [RFC 7644 section\n        3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This\n        parameter cannot be used with the *excludedAttributes* parameter.\n      in: query\n      schema:\n        type: string\n      required: false\n    excludedAttributes:\n      name: excludedAttributes\n      description: \u003e-\n        Attribute blacklist filter string. A comma-separated list of resource\n        attribute names to be excluded in the response, overriding the set of\n        attributes that would be returned by default. Attribute names must be\n        specified in standard attribute notation (see [RFC 7644 section\n        3.10](https://datatracker.ietf.org/doc/html/rfc7644#section-3.10).) This\n        parameter cannot be used with the *attributes* parameter.\n      in: query\n      schema:\n        type: string\n      required: false\n  requestBodies:\n    userResource:\n      description: User resource.\n      required: true\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/UserResource'\n    patchUserResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Patch'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n              - op: replace\n                path: urn:scim:schemas:extension:FactSet:Core:1.0:User:roleName\n                value: Wealth Manager\n    groupResource:\n      description: Group resource.\n      required: true\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/GroupResource'\n    patchGroupResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Patch'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n              - op: add\n                path: members\n                value:\n                  - value: FIN_WEALTH-123456\n    locationResource:\n      description: Location resource.\n      required: true\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/LocationResource'\n    patchLocationResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Patch'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n              - op: replace\n                path: externalId\n                value:\n                  - value: exampleExternalId\n    vermilionUserResource:\n      description: Vermilion user resource.\n      required: true\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionUserResource'\n    patchVermilionUserResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Patch'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n              - op: replace\n                path: name.formatted\n                value:\n                  - value: John Doe\n    vermilionGroupResource:\n      description: Vermilion group resource.\n      required: true\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionGroupResource'\n    patchVermilionGroupResource:\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Patch'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:PatchOp\n            Operations:\n              - op: add\n                path: members\n                value:\n                  - value: vrsqa-jrs-01:21\n  responses:\n    invalidFilterError:\n      description: Invalid filter value provided.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            scimType: invalidFilter\n            detail: Invalid filter value.\n            status: '400'\n    invalidResourceProvidedError:\n      description: Provided resource contains invalid data.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            scimType: invalidValue\n            detail: Provided resource contains invalid data.\n            status: '400'\n    invalidPatchRequestError:\n      description: Patch request invalid.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            scimType: invalidValue\n            detail: Provided resource contains invalid data.\n            status: '400'\n    unauthorizedError:\n      description: User has not been authenticated.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: FactSet.net credentials are missing or invalid.\n            status: '401'\n    forbiddenError:\n      description: User is not authorized to use this API.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: FIN_WEALTH-999999 is not authorized to use the FactSet SCIM API.\n            status: '403'\n    internalServerError:\n      description: Internal server error.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    serviceProviderConfigSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/ServiceProviderConfig'\n    schemaSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Schema'\n    schemasSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/SchemaList'\n    userSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/UserResource'\n    usersSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/UserResourceList'\n    userNotFoundError:\n      description: User not found.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: User FIN_WEALTH-123456 was not found.\n            status: '404'\n    groupSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/GroupResource'\n    groupsSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/GroupResourceList'\n    groupNotFoundError:\n      description: Group not found.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: Group Domain btud - Pod 04 - CitrixApps - Cymba OMS was not found.\n            status: '404'\n    locationSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/LocationResource'\n    locationsSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/LocationResourceList'\n    locationNotFoundError:\n      description: Location not found.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: Location 1598276 was not found.\n            status: '404'\n    productSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/ProductResource'\n    productsSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/ProductResourceList'\n    productNotFoundError:\n      description: Product not found.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: Product 6781 was not found.\n            status: '404'\n    vermilionUserSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionUserResource'\n    vermilionUsersSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionUserResourceList'\n    vermilionUserNotFoundError:\n      description: Vermilion user not found.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: VermilionUser vrsqa-jrs-01:21 was not found.\n            status: '404'\n    vermilionGroupSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionGroupResource'\n    vermilionGroupsSuccess:\n      description: Success.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/VermilionGroupResourceList'\n    vermilionGroupNotFoundError:\n      description: Vermilion group not found.\n      content:\n        application/scim+json:\n          schema:\n            $ref: '#/components/schemas/Error'\n          example:\n            schemas:\n              - urn:ietf:params:scim:api:messages:2.0:Error\n            detail: VermilionGroup vrsqa-jrs-01:431 was not found.\n            status: '404'\n  schemas:\n    ServiceProviderConfig:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig\n        documentationUri:\n          type: string\n          description: \u003e-\n            An HTTP-addressable URL pointing to the service provider's\n            human-consumable help documentation.\n          readOnly: true\n          example: https://developer-staging.factset.com/api-catalog/scim-api\n        patch:\n          type: object\n          description: A complex type that specifies PATCH configuration options.\n          properties:\n            supported:\n              type: boolean\n              description: \u003e-\n                A Boolean value specifying whether or not the operation is\n                supported.\n              readOnly: true\n              example: false\n          required:\n            - supported\n          readOnly: true\n        bulk:\n          type: object\n          description: A complex type that specifies bulk configuration options.\n          properties:\n            supported:\n              type: boolean\n              description: \u003e-\n                A Boolean value specifying whether or not the operation is\n                supported.\n              readOnly: true\n              example: false\n            maxOperations:\n              type: integer\n              description: An integer value specifying the maximum number of operations.\n              readOnly: true\n              example: 0\n            maxPayloadSize:\n              type: integer\n              description: An integer value specifying the maximum payload size in bytes.\n              readOnly: true\n              example: 0\n          required:\n            - supported\n            - maxOperations\n            - maxPayloadSize\n        filter:\n          type: object\n          description: A complex type that specifies FILTER options.\n          properties:\n            supported:\n              type: boolean\n              description: \u003e-\n                A Boolean value specifying whether or not the operation is\n                supported.\n              readOnly: true\n              example: false\n            maxResults:\n              type: integer\n              description: \u003e-\n                An integer value specifying the maximum number of resources\n                returned in a response.\n              readOnly: true\n              example: 0\n          required:\n            - supported\n            - maxResults\n        changePassword:\n          type: object\n          description: \u003e-\n            A complex type that specifies configuration options related to\n            changing a password.\n          properties:\n            supported:\n              type: boolean\n              description: \u003e-\n                A Boolean value specifying whether or not the operation is\n                supported.\n              readOnly: true\n              example: false\n          required:\n            - supported\n        sort:\n          type: object\n          description: A complex type that specifies sort result options.\n          properties:\n            supported:\n              type: boolean\n              description: \u003e-\n                A Boolean value specifying whether or not the operation is\n                supported.\n              readOnly: true\n              example: false\n          required:\n            - supported\n        etag:\n          type: object\n          description: A complex type that specifies ETag configuration options.\n          properties:\n            supported:\n              type: boolean\n              description: \u003e-\n                A Boolean value specifying whether or not the operation is\n                supported.\n              readOnly: true\n              example: false\n          required:\n            - supported\n        authenticationSchemes:\n          type: object\n          description: \u003e-\n            A complex type that specifies supported authentication scheme\n            properties.\n          properties:\n            type:\n              type: string\n              description: The authentication scheme.\n              readOnly: true\n              example: httpbasic\n            name:\n              type: string\n              description: The common authentication scheme name, e.g., HTTP Basic.\n              readOnly: true\n              example: HTTP Basic\n            description:\n              type: string\n              description: A description of the authentication scheme.\n              readOnly: true\n              example: FactSet API key authentication.\n            specUri:\n              type: string\n              description: \u003e-\n                An HTTP-addressable URL pointing to the authentication scheme's\n                specification.\n              readOnly: true\n              example: https://datatracker.ietf.org/doc/rfc7617/\n            documentationUri:\n              type: string\n              description: \u003e-\n                An HTTP-addressable URL pointing to the authentication scheme's\n                usage documentation.\n              readOnly: true\n              example: https://developer.factset.com/authentication\n          required:\n            - type\n            - name\n            - description\n      required:\n        - patch\n        - bulk\n        - filter\n        - changePassword\n        - sort\n        - etag\n        - authenticationSchemes\n    Schema:\n      type: object\n      properties:\n        id:\n          type: string\n          description: \u003e-\n            The unique URI of the schema. When applicable, service providers\n            MUST specify the URI.\n          readOnly: true\n          example: urn:scim:schemas:extension:FactSet:Core:1.0:User\n        name:\n          type: string\n          description: \u003e-\n            The schema's human-readable name.  When applicable, service\n            providers MUST specify the name, e.g., 'User'.\n          readOnly: true\n          example: FactSet Core User\n        description:\n          type: string\n          description: \u003e-\n            The schema's human-readable name.  When applicable, service\n            providers MUST specify the name, e.g., 'User'.\n          readOnly: true\n          example: FactSet core user details\n        attributes:\n          type: array\n          description: A complex attribute that includes the attributes of a schema.\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                description: The attribute's name.\n                readOnly: true\n              type:\n                type: string\n                description: \u003e-\n                  The attribute's data type. Valid values include 'string',\n                  'complex', 'boolean', 'decimal', 'integer', 'dateTime',\n                  'reference'.\n                readOnly: true\n              multiValued:\n                type: boolean\n                description: A Boolean value indicating an attribute's plurality.\n                readOnly: true\n              description:\n                type: string\n                description: A human-readable description of the attribute.\n                readOnly: true\n              required:\n                type: boolean\n                description: \u003e-\n                  A boolean value indicating whether or not the attribute is\n                  required.\n                readOnly: true\n              canonicalValues:\n                type: array\n                description: \u003e-\n                  A collection of canonical values.  When applicable, service\n                  providers MUST specify the canonical types, e.g.,  'work',\n                  'home'.\n                items:\n                  type: string\n                readOnly: true\n              caseExact:\n                type: boolean\n                description: \u003e-\n                  A Boolean value indicating whether or not a string attribute\n                  is case sensitive.\n                readOnly: true\n              mutability:\n                type: string\n                description: Indicates whether or not an attribute is modifiable.\n                readOnly: true\n              returned:\n                type: string\n                description: \u003e-\n                  Indicates when an attribute is returned in a response (e.g.,\n                  to a query).\n                readOnly: true\n              uniqueness:\n                type: string\n                description: Indicates how unique a value must be.\n                readOnly: true\n              referenceTypes:\n                type: array\n                description: \u003e-\n                  Used only with an attribute of type 'reference'.  Specifies a\n                  SCIM resourceType that a reference attribute MAY refer to,\n                  e.g., 'User'.\n                items:\n                  type: string\n                readOnly: true\n              subAttributes:\n                type: array\n                description: Used to define the sub-attributes of a complex attribute.\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                      description: The attribute's name.\n                      readOnly: true\n                    type:\n                      type: string\n                      description: \u003e-\n                        The attribute's data type. Valid values include\n                        'string', 'complex', 'boolean', 'decimal', 'integer',\n                        'dateTime', 'reference'.\n                      readOnly: true\n                    multiValued:\n                      type: boolean\n                      description: A Boolean value indicating an attribute's plurality.\n                      readOnly: true\n                    description:\n                      type: string\n                      description: A human-readable description of the attribute.\n                      readOnly: true\n                    required:\n                      type: boolean\n                      description: \u003e-\n                        A boolean value indicating whether or not the attribute\n                        is required.\n                      readOnly: true\n                    canonicalValues:\n                      type: array\n                      description: \u003e-\n                        A collection of canonical values.  When applicable,\n                        service providers MUST specify the canonical types,\n                        e.g.,  'work', 'home'.\n                      items:\n                        type: string\n                      readOnly: true\n                    caseExact:\n                      type: boolean\n                      description: \u003e-\n                        A Boolean value indicating whether or not a string\n                        attribute is case sensitive.\n                      readOnly: true\n                    mutability:\n                      type: string\n                      description: Indicates whether or not an attribute is modifiable.\n                      readOnly: true\n                    returned:\n                      type: string\n                      description: \u003e-\n                        Indicates when an attribute is returned in a response\n                        (e.g., to a query).\n                      readOnly: true\n                    uniqueness:\n                      type: string\n                      description: Indicates how unique a value must be.\n                      readOnly: true\n                    referenceTypes:\n                      type: array\n                      description: \u003e-\n                        Used only with an attribute of type 'reference'. \n                        Specifies a SCIM resourceType that a reference attribute\n                        MAY refer to, e.g., 'User'.\n                      items:\n                        type: string\n                      readOnly: true\n                  required:\n                    - name\n                    - type\n                    - multiValued\n                readOnly: true\n            required:\n              - name\n              - type\n              - multiValued\n          readOnly: true\n          example:\n            - name: username\n              type: string\n              multiValued: false\n              description: \u003e-\n                A FactSet \"username\" is FactSet's logical structure for grouping\n                serial numbers into like-groups based on roleName, geographical\n                location or line of business.\n              required: true\n              caseExact: false\n              mutability: immutable\n              returned: default\n              uniqueness: none\n            - name: serialNumber\n              type: string\n              multiValued: false\n              description: \u003e-\n                A serial number represents an individual's unique FactSet\n                account identifier and base-workstation access. Serial numbers\n                are allocated to an individual when a valid RoleName is present.\n              required: false\n              caseExact: false\n              mutability: readOnly\n              returned: default\n              uniqueness: global\n            - name: factSetNetId\n              type: string\n              multiValued: false\n              description: FactSet.net ID.\n              required: false\n              caseExact: false\n              mutability: readOnly\n              returned: default\n              uniqueness: global\n            - name: locationId\n              type: string\n              multiValued: false\n              description: \u003e-\n                Your reference to a distinct physical location in your\n                organization (such as an office)\n              required: true\n              caseExact: false\n              mutability: readWrite\n              returned: default\n              uniqueness: none\n            - name: roleName\n              type: string\n              multiValued: false\n              description: \u003e-\n                Predetermined role of specific individual. Issues individual a\n                base FactSet workstation and serial number. If passed as NULL a\n                base-FactSet workstation will be allocated to the individual\n                granting the individual a FactSet SerialNumber\n              required: false\n              caseExact: false\n              mutability: readWrite\n              returned: default\n              uniqueness: none\n            - name: productIds\n              type: integer\n              multiValued: true\n              description: \u003e-\n                An array of FactSet products to allocate/remove from an\n                individual. Individual must have a FactSet serial number\n                associated with them.\n              required: false\n              mutability: readWrite\n              returned: default\n              uniqueness: none\n            - name: assertionValue\n              type: string\n              multiValued: false\n              description: \u003e-\n                Field containing the value, passed as nameID, used to assert the\n                identity of an individual via SAML2.0 which maps\n                service-provider-side to a FactSet serial number. Only\n                applicable to individuals with a FactSet serial number with a\n                Federation setup between your domain and FactSet's\n              required: false\n              caseExact: false\n              mutability: readWrite\n              returned: default\n              uniqueness: server\n      required:\n        - id\n        - name\n        - attributes\n    SchemaList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/Schema'\n    UserResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:schemas:core:2.0:User\n            - urn:scim:schemas:extension:FactSet:Core:1.0:User\n        id:\n          type: string\n          readOnly: true\n          example: FIN_WEALTH-123456\n        externalId:\n          type: string\n          example: C3574707-FFF9-433C-A17F-DFF806C72A7F\n        userName:\n          type: string\n          description: \u003e-\n            Unique identifier for the User, typically used by the user to\n            directly authenticate to the service provider. Each User MUST\n            include a non-empty userName value.  This identifier MUST be unique\n            across the service provider's entire set of Users.\n          readOnly: true\n          example: FIN_WEALTH-123456\n        name:\n          type: object\n          description: \u003e-\n            The components of the user's real name. Providers MAY return just\n            the full name as a single string in the formatted sub-attribute, or\n            they MAY return just the individual component attributes using the\n            other sub-attributes, or they MAY return both.  If both variants are\n            returned, they SHOULD be describing the same name, with the\n            formatted name indicating how the component attributes should be\n            combined.\n          properties:\n            familyName:\n              type: string\n              description: \u003e-\n                The family name of the User, or last name in most Western\n                languages (e.g., 'Jensen' given the full name 'Ms. Barbara J\n                Jensen, III').\n              example: Doe\n            givenName:\n              type: string\n              description: \u003e-\n                The given name of the User, or first name in most Western\n                languages (e.g., 'Barbara' given the full name 'Ms. Barbara J\n                Jensen, III').\n              example: John\n          required:\n            - familyName\n            - givenName\n        email:\n          type: string\n          description: \u003e-\n            Email addresses for the user.  The value SHOULD be canonicalized by\n            the service provider, e.g., 'bjensen@example.com' instead of\n            'bjensen@EXAMPLE.COM'.\n          example: jdoe@factset.com\n        phoneNumbers:\n          type: array\n          description: \u003e-\n            Phone numbers for the User.  The value SHOULD be canonicalized by\n            the service provider according to the format specified in RFC 3966,\n            e.g., 'tel:+1-201-555-0123'. Canonical type values of 'main',\n            'work', 'mobile', and 'home'.\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: Phone number of the User.\n                example: tel:5558675309\n              display:\n                type: string\n                description: \u003e-\n                  A human-readable name, primarily used for display purposes. \n                  READ-ONLY.\n                example: (555) 867-5309\n              type:\n                type: string\n                description: \u003e-\n                  A label indicating the attribute's function, e.g., 'work',\n                  'home', 'mobile'.\n                example: work\n              primary:\n                type: boolean\n                description: \u003e-\n                  A Boolean value indicating the 'primary' or preferred\n                  attribute value for this attribute, e.g., the preferred phone\n                  number or primary phone number.  The primary attribute value\n                  'true' MUST appear no more than once.\n                example: true\n          readOnly: true\n        groups:\n          type: array\n          description: \u003e-\n            A list of groups to which the user belongs, either through direct\n            membership, through nested groups, or dynamically calculated.\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: The identifier of the User's group.\n                readOnly: true\n                example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n              $ref:\n                type: string\n                description: \u003e-\n                  The URI of the corresponding 'Group' resource to which the\n                  user belongs.\n                readOnly: true\n                example: \u003e-\n                  https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS\n              display:\n                type: string\n                description: \u003e-\n                  A human-readable name, primarily used for display purposes. \n                  READ-ONLY.\n                readOnly: true\n                example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n          readOnly: true\n        urn:scim:schemas:extension:CoreFactset:1.0:\n          type: object\n          properties:\n            username:\n              type: string\n              description: \u003e-\n                A FactSet \"username\" is FactSet's logical structure for grouping\n                serial numbers into like-groups based on roleName, geographical\n                location or line of business.\n              example: FIN_WEALTH\n            serialNumber:\n              type: string\n              description: \u003e-\n                A serial number represents an individual's unique FactSet\n                account identifier and base-workstation access. Serial numbers\n                are allocated to an individual when a valid RoleName is present.\n              readOnly: true\n              example: '123456'\n            factSetNetId:\n              type: string\n              description: FactSet.net ID.\n              readOnly: true\n              example: John.Doe9@factset.net\n            location:\n              $ref: '#/components/schemas/LocationResourceReference'\n            roleName:\n              type: string\n              description: \u003e-\n                Predetermined role of specific individual. Issues individual a\n                base FactSet workstation and serial number. If passed as NULL a\n                base-FactSet workstation will be allocated to the individual\n                granting the individual a FactSet SerialNumber\n              example: Wealth Manager\n            products:\n              type: array\n              description: \u003e-\n                An array of FactSet products to allocate/remove from an\n                individual. Individual must have a FactSet serial number\n                associated with them.\n              items:\n                $ref: '#/components/schemas/ProductResourceReference'\n            pendingProductOrders:\n              type: array\n              description: An array of pending FactSet product orders.\n              items:\n                $ref: '#/components/schemas/PendingProductOrder'\n              readOnly: true\n            assertionValue:\n              type: string\n              description: \u003e-\n                Field containing the value, passed as nameID, used to assert the\n                identity of an individual via SAML2.0 which maps\n                service-provider-side to a FactSet serial number. Only\n                applicable to individuals with a FactSet serial number with a\n                Federation setup between your domain and FactSet's\n              example: exampleAssertionValue\n          required:\n            - username\n            - location\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: User\n            created:\n              type: string\n              example: '2019-02-11T15:33:31.077+00:00'\n            lastModified:\n              type: string\n              example: '2019-06-07T08:59:37+00:00'\n            location:\n              type: string\n              example: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456\n          readOnly: true\n      required:\n        - userName\n        - name\n        - email\n    UserResourceList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserResource'\n    GroupResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:schemas:core:2.0:Group\n            - urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group\n        id:\n          type: string\n          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n          readOnly: true\n        externalId:\n          type: string\n          example: B8FE8BBD-0E04-40B2-9BB3-E5EE17C4C9C9\n        displayName:\n          type: string\n          description: A human-readable name for the Group.\n          example: Domain btud - Pod 04 - CitrixApps - Cymba OMS\n        description:\n          type: string\n          description: A description for the Group.\n        members:\n          type: array\n          description: A list of members of the Group.\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: Identifier of the member of this Group.\n                example: FIN_WEALTH-123456\n              $ref:\n                type: string\n                description: \u003e-\n                  The URI corresponding to a SCIM resource that is a member of\n                  this Group.\n                example: https://api.factset.com/scim/v2/Users/FIN_WEALTH-123456\n              type:\n                type: string\n                description: \u003e-\n                  A label indicating the type of resource, e.g., 'User' or\n                  'Group'.\n                example: User\n        urn:scim:schemas:extension:FactSet:EnterpriseHosting:1.0:Group:\n          type: object\n          properties:\n            domainCode:\n              type: string\n              description: Domain code of the Enterprise Hosting pod containing this group.\n              readOnly: true\n              example: btud\n          required:\n            - domainCode\n          readOnly: true\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: Group\n            created:\n              type: string\n              example: '2019-02-11T15:33:31.077+00:00'\n            lastModified:\n              type: string\n              example: '2019-06-07T08:59:37+00:00'\n            location:\n              type: string\n              example: \u003e-\n                https://api.factset.com/scim/v2/Groups/Domain%20btud%20-%20Pod%2004%20-%20CitrixApps%20-%20Cymba%20OMS\n          readOnly: true\n    GroupResourceList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupResource'\n    LocationResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:scim:schemas:extension:FactSet:Core:1.0:Location\n        id:\n          type: string\n          example: '1598276'\n          readOnly: true\n        externalId:\n          type: string\n          example: '1598276'\n        name:\n          type: string\n          description: Name of the location.\n          readOnly: true\n          example: FIN Wealth Management\n        description:\n          type: string\n          description: Description of the location.\n          readOnly: true\n        address1:\n          type: string\n          description: First line of location's address.\n          readOnly: true\n          example: 601 Main Avenue\n        address2:\n          type: string\n          description: Second line of location's address.\n          readOnly: true\n          example: Factset - First Floor\n        address3:\n          type: string\n          description: Third line of location's address.\n          readOnly: true\n        locality:\n          type: string\n          description: City of location.\n          readOnly: true\n          example: Norwalk\n        region:\n          type: string\n          description: State or province of location.\n          readOnly: true\n          example: Connecticut\n        postalCode:\n          type: string\n          description: Postal code of location.\n          readOnly: true\n          example: '06850'\n        country:\n          type: string\n          description: Country of location.\n          readOnly: true\n          example: United States\n        phoneNumber:\n          type: string\n          description: Phone number of location.\n          readOnly: true\n        mainLocation:\n          allOf:\n            - $ref: '#/components/schemas/LocationResourceReference'\n            - readOnly: true\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: Location\n            created:\n              type: string\n              example: '2019-02-11T08:44:19+00:00'\n            lastModified:\n              type: string\n              example: '2021-01-12T03:11:13+00:00'\n            location:\n              type: string\n              example: https://api.factset.com/scim/v2/Locations/1598276\n          readOnly: true\n    LocationResourceList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/LocationResource'\n    LocationResourceReference:\n      type: object\n      properties:\n        value:\n          type: string\n          description: Identifier of the Location.\n          example: '1598276'\n        $ref:\n          type: string\n          description: The URI corresponding to a SCIM resource that is this Location.\n          example: https://api.factset.com/scim/v2/Locations/1598276\n        display:\n          type: string\n          description: A human-readable name, primarily used for display purposes.\n          example: FIN Wealth Management\n      required:\n        - value\n    ProductResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:scim:schemas:extension:FactSet:Core:1.0:Product\n        id:\n          type: string\n          example: '6781'\n          readOnly: true\n        name:\n          type: string\n          description: Name of product.\n          readOnly: true\n          example: FactSet Identity\n        description:\n          type: string\n          description: Details of product.\n          readOnly: true\n          example: \u003e-\n            This workstation product will provide the user with a serial number\n            and a \"blanket\" login. Examples of when this can be used is for web\n            only users, notify clients, or to give users minimal access.\n        groupDescription:\n          type: string\n          description: \u003e-\n            Description of the group the product belongs in, e.g. Exchange,\n            Product, Database, Workstation, etc.\n          readOnly: true\n          example: Workstations\n        workstation:\n          type: boolean\n          description: \u003e-\n            A boolean representing whether the product is base-level access to\n            FactSet, issuing the individual's serial number. Only one Product\n            \"id\" per individual will have this value set to true.\n          readOnly: true\n          example: true\n        requiresApproval:\n          type: string\n          description: \u003e-\n            A description of the type of approval required before an order for\n            this product can be fulfilled. This value is null for those products\n            that do not require any approval.\n          readOnly: true\n          example: FactSet\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: Product\n            location:\n              type: string\n              example: https://api.factset.com/scim/v2/Products/6781\n          readOnly: true\n    ProductResourceList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/ProductResource'\n    ProductResourceReference:\n      type: object\n      properties:\n        value:\n          type: string\n          example: '6781'\n        $ref:\n          type: string\n          example: https://api.factset.com/scim/v2/Products/6781\n        display:\n          type: string\n          example: FactSet Identity\n      required:\n        - value\n    PendingProductOrder:\n      type: object\n      properties:\n        product:\n          $ref: '#/components/schemas/ProductResourceReference'\n        type:\n          type: string\n          description: Type of product order, e.g. 'Add' or 'Remove'.\n          example: Add\n          readOnly: true\n        status:\n          type: string\n          description: Status of the pending product order.\n          example: Processing\n          readOnly: true\n        requested:\n          type: string\n          description: Date and time when product was ordered.\n          example: '2019-06-07T08:59:37+00:00'\n          readOnly: true\n      required:\n        - product\n        - type\n        - status\n        - requested\n    VermilionUserResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:scim:schemas:extension:FactSet:VRS:1.0:User\n        id:\n          type: string\n          example: vrsqa-jrs-01:21\n          readOnly: true\n        userName:\n          type: string\n          description: \u003e-\n            A service provider's unique identifier for the user, typically used\n            by the user to directly authenticate to the service provider. Each\n            User MUST include a non-empty userName value. This identifier MUST\n            be unique across the service provider's entire set of Users.\n          readOnly: true\n          example: john.doe\n        name:\n          type: object\n          description: \u003e-\n            The components of the user's real name. Providers MAY return just\n            the full name as a single string in the formatted sub-attribute, or\n            they MAY return just the individual component attributes using the\n            other sub-attributes, or they MAY return both. If both variants are\n            returned, they SHOULD be describing the same name, with the\n            formatted name indicating how the component attributes should be\n            combined.\n          properties:\n            formatted:\n              type: string\n              description: \u003e-\n                The full name, including all middle names, titles, and suffixes\n                as appropriate, formatted for display (e.g., 'Ms. Barbara J\n                Jensen, III').\n              example: John Doe\n            familyName:\n              type: string\n              description: \u003e-\n                The family name of the User, or last name in most Western\n                languages (e.g., 'Jensen' given the full name 'Ms. Barbara J\n                Jensen, III').\n              example: Doe\n            givenName:\n              type: string\n              description: \u003e-\n                The given name of the User, or first name in most Western\n                languages (e.g., 'Barbara' given the full name 'Ms. Barbara J\n                Jensen, III').\n              example: John\n        displayName:\n          type: string\n          description: \u003e-\n            The name of the User, suitable for display to end-users. The name\n            SHOULD be the full name of the User being described, if known.\n          example: John Doe\n        profileUrl:\n          type: string\n          description: \u003e-\n            A fully qualified URL pointing to a page\\nrepresenting the User's\n            online profile.\n          example: http://example.com/profiles/john.doe\n        userType:\n          type: string\n          description: \u003e-\n            Used to identify the relationship between the organization and the\n            user. Typical values used might be 'Contractor', 'Employee',\n            'Intern', 'Temp', 'External', and 'Unknown', but any value may be\n            used.\n          example: '0'\n        preferredLanguage:\n          type: string\n          description: \u003e-\n            Indicates the User's preferred written or spoken language. \n            Generally used for selecting a localized user interface; e.g.,\n            'en_US' specifies the language English and country\n          example: en_US\n        active:\n          type: boolean\n          description: A Boolean value indicating the User's administrative status.\n          example: false\n        password:\n          type: string\n          description: \u003e-\n            The User's cleartext password. This attribute is intended to be used\n            as a means to specify an initial password when creating a new User\n            or to reset an existing User's password.\n          example: hunter2\n        authenticatedUserName:\n          type: string\n          description: The authenticated user name of the user\n          example: john.doe\n        tenant:\n          type: string\n          description: The tenant this user is in\n          example: MASTER\n        emails:\n          type: object\n          description: \u003e-\n            Email addresses for the user. The value SHOULD be canonicalized by\n            the service provider, e.g., 'bjensen@example.com' instead of\n            'bjensen@EXAMPLE.COM'. Canonical type values of 'work', 'home', and\n            'other'.\n          properties:\n            value:\n              type: string\n              description: \u003e-\n                Email addresses for the user. The value SHOULD be canonicalized\n                by the service provider, e.g., 'bjensen@example.com' instead of\n                'bjensen@EXAMPLE.COM'. Canonical type values of 'work', 'home',\n                and 'other'.\n              example: john.doe@example.com\n            display:\n              type: string\n              description: \u003e-\n                A human-readable name, primarily used for display purposes. \n                READ-ONLY.\n              example: john.doe@example.com\n            type:\n              type: string\n              description: \u003e-\n                A label indicating the attribute's function, e.g., 'work' or\n                'home'.\n              example: work\n            primary:\n              type: boolean\n              description: \u003e-\n                A Boolean value indicating the 'primary' or preferred attribute\n                value for this attribute, e.g., the psreferred mailing address\n                or primary email address.  The primary attribute value 'true'\n                MUST appear no more than once.\n              example: true\n        phoneNumbers:\n          type: array\n          description: \u003e-\n            Phone numbers for the User. The value SHOULD be canonicalized by the\n            service provider according to the format specified in RFC 3966,\n            e.g., 'tel:+1-201-555-0123'. Canonical type values of 'work',\n            'home', 'mobile', 'fax', 'pager'\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: Phone number of the User.\n                example: tel:5558675309\n              display:\n                type: string\n                description: \u003e-\n                  A human-readable name, primarily used for display purposes. \n                  READ-ONLY.\n                example: (555) 867-5309\n              type:\n                type: string\n                description: \u003e-\n                  A label indicating the attribute's function, e.g., 'work',\n                  'home', 'mobile'.\n                example: work\n              primary:\n                type: boolean\n                description: \u003e-\n                  A Boolean value indicating the 'primary' or preferred\n                  attribute value for this attribute, e.g., the preferred phone\n                  number or primary phone number. The primary attribute value\n                  'true' MUST appear no more than once.\n                example: true\n        photos:\n          type: array\n          description: URLs of photos of the User.\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: URLs of photos of the User.\n                example: http://example.com/profiles/john.doe\n              display:\n                type: string\n                description: \u003e-\n                  A human-readable name, primarily used for display purposes.\n                  READ-ONLY.\n              type:\n                type: string\n                description: \u003e-\n                  A label indicating the attribute's function, i.e., 'photo' or\n                  'thumbnail'.\n                example: photo\n              primary:\n                type: boolean\n                description: ''\n                example: \u003e-\n                  A Boolean value indicating the 'primary' or preferred\n                  attribute value for this attribute, e.g., the preferred phone\n                  number or primary phone number. The primary attribute value\n                  'true' MUST appear no more than once.\n        groups:\n          type: array\n          description: \u003e-\n            A list of groups to which the user belongs, either through direct\n            membership, through nested groups, or dynamically calculated.\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: The identifier of the User's group.\n                example: vrsqa-jrs-01:431\n              $ref:\n                type: string\n                description: \u003e-\n                  The uri of the corresponding 'Group' resource to which the\n                  user belongs.\n                example: \u003e-\n                  https://api.factset.com/scim/v2/VermilionGroups/vrsqa-jrs-01%3A431\n              display:\n                type: string\n                description: \u003e-\n                  A human-readable name, primarily used for display purposes.\n                  READ-ONLY.\n                example: System Admin\n              type:\n                type: string\n                description: \u003e-\n                  A label indicating the attribute's function, e.g., 'direct' or\n                  'indirect'.\n                example: direct\n        entitlements:\n          type: object\n          description: \u003e-\n            A list of entitlements for the User that represent a thing the User\n            has.\n          properties:\n            value:\n              type: string\n              description: The value of an entitlement.\n            display:\n              type: string\n              description: \u003e-\n                A human-readable name, primarily used for display purposes.\n                READ-ONLY.\n            type:\n              type: string\n              description: A label indicating the attribute's function.\n            primary:\n              type: boolean\n              description: \u003e-\n                A Boolean value indicating the 'primary' or preferred attribute\n                value for this attribute. The primary attribute value 'true'\n                MUST appear no more than once.\n        roles:\n          type: object\n          description: \u003e-\n            A list of roles for the User that collectively represent who the\n            User is, e.g., 'Student', 'Faculty'.\n          properties:\n            value:\n              type: string\n              description: The value of a role.\n            display:\n              type: string\n              description: \u003e-\n                A human-readable name, primarily used for display purposes.\n                READ-ONLY.\n            type:\n              type: string\n              description: A label indicating the attribute's function.\n            primary:\n              type: boolean\n              description: \u003e-\n                A Boolean value indicating the 'primary' or preferred attribute\n                value for this attribute.  The primary attribute value 'true'\n                MUST appear no more than once.\n        domainCode:\n          type: string\n          description: \u003e-\n            Domain code of Enterprise Hosting pod in which user resides.\n            REQUIRED.\n        isAdministrator:\n          type: boolean\n          description: Whether the user can perform maintenance on other users. REQUIRED.\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: VermilionUser\n            location:\n              type: string\n              example: https://api.factset.com/scim/v2/VermilionUsers/vrsqa-jrs-01:21\n          readOnly: true\n      required:\n        - userName\n        - domainCode\n        - isAdministrator\n    VermilionUserResourceList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/VermilionUserResource'\n    VermilionGroupResource:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:scim:schemas:extension:FactSet:VRS:1.0:Group\n        id:\n          type: string\n          example: vrsqa-jrs-01:431\n          readOnly: true\n        externalId:\n          type: string\n          description: \u003e-\n            A String that is an identifier for the resource as defined by the\n            provisioning client.The service provider MUST always interpret the\n            externalId as scoped to the provisioning domain.\n        displayName:\n          type: string\n          description: A human-readable name for the Group. REQUIRED.\n          example: System Admin\n        members:\n          type: array\n          description: A list of members of the Group.\n          items:\n            type: object\n            properties:\n              value:\n                type: string\n                description: Identifier of the member of this Group.\n                example: vrsqa-jrs-01:21\n              $ref:\n                type: string\n                description: \u003e-\n                  The uri corresponding to a SCIM resource that is a member of\n                  this Group.\n                example: https://api.factset.com/scim/v2/VermilionUsers/vrsqa-jrs-01:21\n              display:\n                type: string\n                description: A human-readable name for the Member\n                example: John Doe\n              type:\n                type: string\n                description: \u003e-\n                  A label indicating the type of resource, e.g. 'User' or\n                  'Group'\n                example: VermilionUser\n            required:\n              - value\n        tenant:\n          type: string\n          description: The tenant this role is in\n          example: QA\n        domainCode:\n          type: string\n          description: \u003e-\n            Domain code of Enterprise Hosting pod in which user resides.\n            REQUIRED.\n          example: vrsqa-jrs-01\n        meta:\n          type: object\n          properties:\n            resourceType:\n              type: string\n              example: VermilionGroup\n            location:\n              type: string\n              example: https://api.factset.com/scim/v2/VermilionGroups/vrsqa-jrs-01:431\n          readOnly: true\n      required:\n        - displayName\n        - domainCode\n    VermilionGroupResourceList:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:ListResponse\n        totalResults:\n          type: integer\n          example: 1\n        Resources:\n          type: array\n          items:\n            $ref: '#/components/schemas/VermilionGroupResource'\n    Patch:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n        Operations:\n          type: array\n          items:\n            type: object\n            properties:\n              op:\n                type: string\n              path:\n                type: string\n              value:\n                type: string\n    Error:\n      type: object\n      properties:\n        schemas:\n          type: array\n          items:\n            type: string\n          example:\n            - urn:ietf:params:scim:api:messages:2.0:Error\n        scimType:\n          type: string\n          example: invalidValue\n        detail:\n          type: string\n          description: A detailed human-readable message.\n          example: An unhandled exception occurred.\n        status:\n          type: string\n          description: HTTP status code.\n          example: '500'\nsecurity:\n  - FactSetApiKey: []\n  - FactSetOAuth2: []\n",
			"canonicalURL": "/github.com/factset/enterprise-sdk@7bff618e67db8242c6bde87fd2c8db8cf10b838f/-/blob/specs/ProcuretoPaySCIM.v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/factset/enterprise-sdk/blob/7bff618e67db8242c6bde87fd2c8db8cf10b838f/specs/ProcuretoPaySCIM.v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/Group/{id}\": get: security: at specs/ProcuretoPaySCIM.v1.yaml:227:11: unknown security scheme \"basicAuth\""
}