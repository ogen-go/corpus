{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mikesparr/typescript-postgres-auth-example"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "src/config/openapi.json",
			"byteSize": 72439,
			"content": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"Example API with RBAC/ABAC authorization\",\n    \"description\": \"This is an example API written in Typescript and features authentication and authorization\",\n    \"contact\": {\n      \"name\": \"API Support\",\n      \"url\": \"http://www.example.com/support\",\n      \"email\": \"support@example.com\"\n    },\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"version\": \"1.0.1\"\n  },\n  \"host\": \"http://localhost:3000\",\n  \"basePath\": \"/\",\n  \"schemes\": [\"http\"],\n  \"produces\": [\"application/json\"],\n  \"paths\": {\n    \"/register\": {\n      \"post\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Creates a new user\",\n        \"requestBody\": {\n          \"description\": \"User information\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"New user record with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"user\": {\n                      \"$ref\": \"#/components/schemas/UserResponse\"\n                    },\n                    \"token\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/verify/{token}\": {\n      \"get\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Activates user and logs them in if valid, redirecting to configured URL\",\n        \"parameters\": [\n          {\n            \"name\": \"token\",\n            \"in\": \"path\",\n            \"description\": \"JWT token received in email link\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User record and JWT auth token that expires in 1 hour\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"user\": {\n                      \"$ref\": \"#/components/schemas/UserResponse\"\n                    },\n                    \"token\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/login\": {\n      \"post\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Authenticates user and generates new JWT auth token\",\n        \"requestBody\": {\n          \"description\": \"User login credentials\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserLogin\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User record and JWT auth token that expires in 1 hour\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LoginResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/lost-password\": {\n      \"post\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Emails new magic link to log user in if found\",\n        \"requestBody\": {\n          \"description\": \"Email address for valid user\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EmailInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation and prompt to check email (TODO)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LostPasswordResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/impersonate/{id}\": {\n      \"post\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Authenticates as surrogate user and generates new JWT auth token\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user to impersonate\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"User record and JWT auth token that expires in 1 hour\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"user\": {\n                      \"$ref\": \"#/components/schemas/UserResponse\"\n                    },\n                    \"token\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/logout\": {\n      \"post\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Disables user token from subsequent access\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success flag\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LogoutResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/tokens/{tokenId}\": {\n      \"delete\": {\n        \"tags\": [\"authentication\"],\n        \"summary\": \"Deletes specific token if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of token that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles\": {\n      \"get\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Returns list of roles\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of roles (optionally with nested permissions if allowed)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Creates a new role\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"requestBody\": {\n          \"description\": \"Role data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created role with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/{id}\": {\n      \"get\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Returns a role if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the requested role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Updates an existing role if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Role data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the updated role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/RoleResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Deletes a role if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/{id}/permissions\": {\n      \"get\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Returns a list of roles permissions\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of role record that needs permissions retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of permissions for the role\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/PermissionResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Adds a permission for role\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of role record that permission will be added\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Permission data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PermissionInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created role with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/{id}/permissions/{permissionId}\": {\n      \"delete\": {\n        \"tags\": [\"roles\"],\n        \"summary\": \"Deletes specific role permission if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of role that needs permissions deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"permissionId\",\n            \"in\": \"path\",\n            \"description\": \"ID of permission that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Returns list of users\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of users (optionally with nested roles if allowed)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Creates a new user\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"requestBody\": {\n          \"description\": \"User data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created user with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}\": {\n      \"get\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Returns a user if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs retrieved (optionally with nested roles if allowed)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"User data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the requested user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Updates a user if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"User data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the updated user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Deletes user if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}/roles\": {\n      \"get\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Returns a list of users roles\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user record that needs roles retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of roles assigned to user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/RoleResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Adds a role for user\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user record that needs role added\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Role data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RoleAddInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created user with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}/roles/{roleId}\": {\n      \"delete\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Deletes specific user role if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user that needs roles deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"roleId\",\n            \"in\": \"path\",\n            \"description\": \"ID of role that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}/tokens\": {\n      \"get\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Returns a list of users tokens\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs retrieved (optionally with nested roles if allowed)\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the requested user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Deletes all user tokens\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user that needs tokens deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}/tokens/{tokenId}\": {\n      \"delete\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Deletes specific user token if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user that needs tokens deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"tokenId\",\n            \"in\": \"path\",\n            \"description\": \"ID of token that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/users/{id}/flags\": {\n      \"get\": {\n        \"tags\": [\"users\"],\n        \"summary\": \"Returns a list of users flags\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of user that needs flags retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of feature flags for that user\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserFlagResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/segments\": {\n      \"get\": {\n        \"tags\": [\"segments\"],\n        \"summary\": \"Returns list of segments\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of segments (optionally with nested permissions if allowed)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/SegmentResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"segments\"],\n        \"summary\": \"Creates a new segment\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"requestBody\": {\n          \"description\": \"Segment data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SegmentInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created segment with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SegmentResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/segments/{id}\": {\n      \"get\": {\n        \"tags\": [\"segments\"],\n        \"summary\": \"Returns a segment if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the requested segment\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SegmentResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"segments\"],\n        \"summary\": \"Updates an existing segment if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Segment data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SegmentInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the updated segment\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SegmentResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"segments\"],\n        \"summary\": \"Deletes a segment if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/flags\": {\n      \"get\": {\n        \"tags\": [\"flags\"],\n        \"summary\": \"Returns list of flags\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of flags (optionally with nested permissions if allowed)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FlagResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"flags\"],\n        \"summary\": \"Creates a new flag\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"requestBody\": {\n          \"description\": \"Flag data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FlagInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created flag with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FlagResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/flags/{id}\": {\n      \"get\": {\n        \"tags\": [\"flags\"],\n        \"summary\": \"Returns a flag if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the requested flag\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FlagResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"flags\"],\n        \"summary\": \"Updates an existing flag if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Flag data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FlagInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the updated flag\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FlagResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"flags\"],\n        \"summary\": \"Deletes a flag if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/goals\": {\n      \"get\": {\n        \"tags\": [\"goals\"],\n        \"summary\": \"Returns list of goals\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of goals (optionally with nested permissions if allowed)\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GoalResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"goals\"],\n        \"summary\": \"Creates a new goal\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"requestBody\": {\n          \"description\": \"Goal data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GoalInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the created goal with ID\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GoalResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/goals/{id}\": {\n      \"get\": {\n        \"tags\": [\"goals\"],\n        \"summary\": \"Returns a goal if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs retrieved\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the requested goal\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GoalResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"goals\"],\n        \"summary\": \"Updates an existing goal if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs updated\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"Goal data\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GoalInput\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A copy of the updated goal\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GoalResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"tags\": [\"goals\"],\n        \"summary\": \"Deletes a goal if exists\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"ID of record that needs deleted\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Confirmation of successful operation\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/activities\": {\n      \"get\": {\n        \"tags\": [\"activities\"],\n        \"summary\": \"Activity stream log viewing for monitoring and troubleshooting\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"query parameters to filter records\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"limit\",\n            \"in\": \"query\",\n            \"description\": \"max records to return per request (default 10)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"offset\",\n            \"in\": \"query\",\n            \"description\": \"record offset for pagination\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"from\",\n            \"in\": \"query\",\n            \"description\": \"limit date range (starting point until 'to')\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"to\",\n            \"in\": \"query\",\n            \"description\": \"limit date range (if empty default to now)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"description\": \"which field(s) to sort by and what order\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A list of activities logged by the application\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ActivityResponse\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorResponse\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/search\": {\n      \"get\": {\n        \"tags\": [\"search\"],\n        \"summary\": \"Search by places using opencagedata service\",\n        \"security\": [\n          {\"bearerAuth\": []}\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        },\n        \"content\": {\n          \"application/json\": {}\n        },\n        \"parameters\": [\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"Specifies the query string\",\n            \"required\": true,\n            \"type\": \"string\"\n          }\n        ]\n      }\n    },\n    \"/healthz\": {\n      \"get\": {\n        \"tags\": [\"systems\"],\n        \"summary\": \"Returns success if app running\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A successful status code to indicate app is running\"\n          },\n          \"default\": {\n            \"description\": \"Unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Role\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Permission\"\n            }\n          }\n        }\n      },\n      \"RoleInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RoleAddInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RoleResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Role\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"Permission\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"resource\": {\n            \"type\": \"string\"\n          },\n          \"action\": {\n            \"type\": \"string\"\n          },\n          \"attributes\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PermissionInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"resource\": {\n            \"type\": \"string\"\n          },\n          \"action\": {\n            \"type\": \"string\"\n          },\n          \"attributes\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PermissionResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Permission\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"User\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"age\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"timeZone\": {\n            \"type\": \"string\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"ip\": {\n            \"type\": \"string\"\n          },\n          \"roles\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Role\"\n            }\n          }\n        }\n      },\n      \"UserInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"age\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"country\": {\n            \"type\": \"string\"\n          },\n          \"timeZone\": {\n            \"type\": \"string\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"ip\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"UserLogin\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"UserFlag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"goalIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"UserResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"UserFlagResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/UserFlag\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"EmailInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Goal\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"hits\": {\n            \"type\": \"number\"\n          },\n          \"uniqueUsers\": {\n            \"type\": \"number\"\n          },\n          \"targetHits\": {\n            \"type\": \"number\"\n          },\n          \"targetUniqueUsers\": {\n            \"type\": \"number\"\n          },\n          \"start\": {\n            \"type\": \"number\"\n          },\n          \"stop\": {\n            \"type\": \"number\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"flags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Flag\"\n            }\n          }\n        }\n      },\n      \"GoalInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"hits\": {\n            \"type\": \"number\"\n          },\n          \"uniqueUsers\": {\n            \"type\": \"number\"\n          },\n          \"targetHits\": {\n            \"type\": \"number\"\n          },\n          \"targetUniqueUsers\": {\n            \"type\": \"number\"\n          },\n          \"start\": {\n            \"type\": \"number\"\n          },\n          \"stop\": {\n            \"type\": \"number\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"GoalResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Goal\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"Flag\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"user\", \"product\"]\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"product\": {\n            \"type\": \"string\"\n          },\n          \"story\": {\n            \"type\": \"string\"\n          },\n          \"squad\": {\n            \"type\": \"string\"\n          },\n          \"trackable\": {\n            \"type\": \"boolean\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"temporary\": {\n            \"type\": \"boolean\"\n          },\n          \"archived\": {\n            \"type\": \"boolean\"\n          },\n          \"targetIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"environments\": {\n            \"type\": \"object\",\n            \"minimum\": 1,\n            \"properties\": {\n              \"development\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"test\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"staging\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"performance\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"production\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              }\n            }\n          },\n          \"variants\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Variant\"\n            }\n          },\n          \"goals\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Goal\"\n            }\n          },\n          \"segments\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Segment\"\n            }\n          }\n        }\n      },\n      \"FlagInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"user\", \"product\"]\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"product\": {\n            \"type\": \"string\"\n          },\n          \"story\": {\n            \"type\": \"string\"\n          },\n          \"squad\": {\n            \"type\": \"string\"\n          },\n          \"trackable\": {\n            \"type\": \"boolean\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"temporary\": {\n            \"type\": \"boolean\"\n          },\n          \"archived\": {\n            \"type\": \"boolean\"\n          },\n          \"targetIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"environments\": {\n            \"type\": \"object\",\n            \"minimum\": 1,\n            \"properties\": {\n              \"development\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"test\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"staging\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"performance\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              },\n              \"production\": {\n                \"$ref\": \"#/components/schemas/Environment\"\n              }\n            }\n          },\n          \"variants\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Variant\"\n            }\n          }\n        }\n      },\n      \"FlagResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Flag\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"Segment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"included\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"excluded\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"rules\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Rule\"\n            }\n          },\n          \"deleted\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"SegmentInput\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"key\": {\n            \"type\": \"string\"\n          },\n          \"included\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"excluded\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"rules\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Rule\"\n            }\n          },\n          \"deleted\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"SegmentResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Segment\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"Variant\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"weight\": {\n            \"type\": \"integer\"\n          },\n          \"goalIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Rule\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"field\", \"localDate\", \"localTime\"]\n          },\n          \"expression\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Environment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"enabled\": {\n            \"type\": \"boolean\"\n          },\n          \"targetEmails\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"segmentIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"variantIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"Activity\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"action\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"resource\": {\n            \"type\": \"string\"\n          },\n          \"actor\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"object\": {\n            \"type\": \"object\"\n          },\n          \"target\": {\n            \"type\": \"object\"\n          },\n          \"origin\": {\n            \"type\": \"object\"\n          },\n          \"result\": {\n            \"type\": \"object\"\n          },\n          \"timestamp\": {\n            \"type\": \"number\"\n          },\n          \"published\": {\n            \"type\": \"string\"\n          },\n          \"host\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ActivityResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"$ref\": \"#/components/schemas/Activity\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"LostPasswordResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"LoginResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"user\": {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              \"token\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"LogoutResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"data\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"ErrorResponse\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"errors\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"data\": {\n            \"type\": \"object\"\n          },\n          \"meta\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"length\": {\n                \"type\": \"integer\"\n              },\n              \"took\": {\n                \"type\": \"integer\"\n              },\n              \"total\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ErrorModel\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\"\n          } \n        }\n      },\n      \"ErrorModel\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"message\",\n          \"status\"\n        ],\n        \"properties\": {\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"integer\",\n            \"minimum\": 100,\n            \"maximum\": 600\n          }\n        }\n      }\n    },\n    \"responses\": {},\n    \"securitySchemes\": {\n      \"bearerAuth\": {\n        \"type\": \"http\",\n        \"scheme\": \"bearer\",\n        \"bearerFormat\": \"JWT\"\n      }\n    }\n  }\n}\n",
			"canonicalURL": "/github.com/mikesparr/typescript-postgres-auth-example@a62fbfa8558a96118663334146d8f559c937ff29/-/blob/src/config/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/mikesparr/typescript-postgres-auth-example/blob/a62fbfa8558a96118663334146d8f559c937ff29/src/config/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /search: get: parameters: parse parameter \"q\": parameter MUST contain either a schema property, or a content property"
}