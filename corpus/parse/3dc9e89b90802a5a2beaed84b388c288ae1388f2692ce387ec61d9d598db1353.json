{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/friflo/Friflo.Json.Fliox"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "Json.Tests/assets~/Schema-Loop/JSON/UserStore/openapi.json",
			"byteSize": 38549,
			"content": "\n{\n  \"openapi\": \"3.0.0\",\n  \"x-generator\": \"Generated by: https://github.com/friflo/Friflo.Json.Fliox#schema\",\n  \"info\": {\n    \"title\":        \"UserStore\",\n    \"description\":  \"Control individual user access to database containers and commands. \u003cbr/\u003e\\nEach \u003cb\u003euser\u003c/b\u003e has a set of \u003cb\u003eroles\u003c/b\u003e stored in container \u003cb\u003epermissions\u003c/b\u003e. \u003cbr/\u003e\\nEach \u003cb\u003erole\u003c/b\u003e in container \u003cb\u003eroles\u003c/b\u003e has a set of \u003cb\u003erights\u003c/b\u003e which grant or deny container access or command execution.\\n\\nGenerated by \u003ca href='https://github.com/friflo/Friflo.Json.Fliox#schema'\u003eJSON Fliox\u003c/a\u003e\",\n    \"version\":      \"0.0.0\"\n  },\n  \"servers\": [\n\n  ],\n  \"tags\": [\n    {\n      \"name\": \"database\",\n      \"description\": \"\u003ca target='UserStore' href='html/schema.html'\u003eschema\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"commands\",\n      \"description\": \"database \u003ca target='UserStore' href='html/schema.html#commands'\u003ecommands\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"credentials\",\n      \"description\": \"entity type: \u003ca target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential'\u003eUserCredential\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"permissions\",\n      \"description\": \"entity type: \u003ca target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission'\u003eUserPermission\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"roles\",\n      \"description\": \"entity type: \u003ca target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.Role'\u003eRole\u003c/a\u003e\"\n    },\n    {\n      \"name\": \"targets\",\n      \"description\": \"entity type: \u003ca target='UserStore' href='html/schema.html#Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget'\u003eUserTarget\u003c/a\u003e\"\n    }],\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"summary\":    \"return all database containers\",\n        \"tags\":       [\"database\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=AuthenticateUser\": {\n      \"post\": {\n        \"summary\":    \"authenticate user \u003cb\u003eCredentials\u003c/b\u003e: \u003cb\u003euserId\u003c/b\u003e and \u003cb\u003etoken\u003c/b\u003e\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/Credentials\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/AuthResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=ValidateUserDb\": {\n      \"post\": {\n        \"summary\":    \"\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.json#/definitions/ValidateUserDbResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=ClearAuthCache\": {\n      \"post\": {\n        \"summary\":    \"\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Echo\": {\n      \"post\": {\n        \"summary\":    \"echos the given parameter to assure the database is working appropriately.\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                   \n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                   \n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Containers\": {\n      \"post\": {\n        \"summary\":    \"list all database containers\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbContainers\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Messages\": {\n      \"post\": {\n        \"summary\":    \"list all database commands and messages\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbMessages\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Schema\": {\n      \"post\": {\n        \"summary\":    \"return the Schema assigned to the database\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbSchema\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Stats\": {\n      \"post\": {\n        \"summary\":    \"return the number of entities of all containers (or the given container) of the database\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/DbStats\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Host\": {\n      \"post\": {\n        \"summary\":    \"returns general information about the Hub like version, host, project and environment name\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostParam\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostInfo\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Cluster\": {\n      \"post\": {\n        \"summary\":    \"list all databases and their containers hosted by the Hub\",\n        \"tags\":       [\"commands\"],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/HostCluster\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.User\": {\n      \"post\": {\n        \"summary\":    \"return the groups of the current user. Optionally change the groups of the current user\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/UserParam\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/UserResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/?command=std.Client\": {\n      \"post\": {\n        \"summary\":    \"return client specific infos and adjust general client behavior like \u003cb\u003equeueEvents\u003c/b\u003e\",\n        \"tags\":       [\"commands\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/ClientParam\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.Cluster.json#/definitions/ClientResult\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/credentials\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container credentials\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"credentials\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container credentials\",\n        \"tags\":       [\"credentials\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/credentials/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container credentials\",\n        \"tags\":       [\"credentials\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container credentials\",\n        \"tags\":       [\"credentials\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container credentials\",\n        \"tags\":       [\"credentials\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container credentials by id\",\n        \"tags\":       [\"credentials\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/credentials/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container credentials\",\n        \"tags\":       [\"credentials\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserCredential.json#/definitions/UserCredential\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/credentials/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container credentials\",\n        \"tags\":       [\"credentials\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/permissions\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container permissions\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"permissions\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container permissions\",\n        \"tags\":       [\"permissions\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/permissions/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container permissions\",\n        \"tags\":       [\"permissions\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container permissions\",\n        \"tags\":       [\"permissions\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container permissions\",\n        \"tags\":       [\"permissions\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container permissions by id\",\n        \"tags\":       [\"permissions\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/permissions/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container permissions\",\n        \"tags\":       [\"permissions\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserPermission.json#/definitions/UserPermission\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/permissions/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container permissions\",\n        \"tags\":       [\"permissions\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/roles\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container roles\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"roles\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container roles\",\n        \"tags\":       [\"roles\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container roles\",\n        \"tags\":       [\"roles\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container roles\",\n        \"tags\":       [\"roles\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container roles\",\n        \"tags\":       [\"roles\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container roles by id\",\n        \"tags\":       [\"roles\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container roles\",\n        \"tags\":       [\"roles\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.Role.json#/definitions/Role\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/roles/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container roles\",\n        \"tags\":       [\"roles\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/targets\": {\n      \"get\": {\n        \"summary\":    \"return / filter multiple records from container targets\",\n        \"description\":    \"To process big result sets fetch them iteratively by setting **maxCount** of records per request and use the returned **cursor** on the subsequent request.\",\n        \"tags\":       [\"targets\"],\n        \"parameters\": [\n          {\n            \"in\":       \"query\",\n            \"name\":     \"filter\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"filter returned records by applying a expression predicate. E.g. `o.name == 'Peter'`\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"limit\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"limit the number of returned records\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"maxCount\",\n            \"schema\":   { \"type\": \"integer\" },\n            \"description\": \"maximum number of records. Result will return a **cursor** if more records available.\"\n          },\n          {\n            \"in\":       \"query\",\n            \"name\":     \"cursor\",\n            \"schema\":   { \"type\": \"string\" },\n            \"description\": \"pass the **cursor** returned by the previous request\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"create or update multiple records in container targets\",\n        \"tags\":       [\"targets\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/targets/{id}\": {\n      \"get\": {\n        \"summary\":    \"get a single record from container targets\",\n        \"tags\":       [\"targets\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\":    \"write a single record to container targets\",\n        \"tags\":       [\"targets\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget\"\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"patch\": {\n        \"summary\":    \"patch a single record in container targets\",\n        \"tags\":       [\"targets\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"op\": {\n                        \"enum\": [\"replace\"]\n                      },\n                      \"path\": {\n                        \"type\": \"string\"\n                      },\n                      \"value\": { }\n                    } }\n                },\n                \"example\": [\n                  {\n                    \"op\":    \"replace\",\n                    \"path\":  \".name\",\n                    \"value\": \"Hello Patch!\"\n                  }\n                ]\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\":    \"delete a single record in container targets by id\",\n        \"tags\":       [\"targets\"],\n        \"parameters\": [\n          {\n            \"in\":       \"path\",\n            \"name\":     \"id\",\n            \"schema\":   { \"type\": \"string\" },\n            \"required\": true,\n            \"description\": \"\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    },\n    \"/targets/bulk-get\": {\n      \"post\": {\n        \"summary\":    \"get multiple records by id from container targets\",\n        \"tags\":       [\"targets\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"$ref\": \"Friflo.Json.Fliox.Hub.DB.UserAuth.UserTarget.json#/definitions/UserTarget\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/targets/bulk-delete\": {\n      \"post\": {\n        \"summary\":    \"delete multiple records by id in container targets\",\n        \"tags\":       [\"targets\"],\n        \"requestBody\": {          \n          \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": { \"type\": \"string\" }\n                }\n              }\n            }\n        },\n        \"responses\": {\n          \"200\": {             \n            \"description\": \"OK\",\n            \"content\": {\n              \"text/plain\": { }\n            }\n          }\n        }\n      }\n    }\n  }   \n}",
			"canonicalURL": "/github.com/friflo/Friflo.Json.Fliox@acbd22a85bb31e362129d0d152e2006cc8fcbf96/-/blob/Json.Tests/assets~/Schema-Loop/JSON/UserStore/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/friflo/Friflo.Json.Fliox/blob/acbd22a85bb31e362129d0d152e2006cc8fcbf96/Json.Tests/assets~/Schema-Loop/JSON/UserStore/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/?command=AuthenticateUser\": post: at Json.Tests/assets~/Schema-Loop/JSON/UserStore/openapi.json:58:15: parse path \"/?command=AuthenticateUser\": path MUST NOT contain a query string"
}