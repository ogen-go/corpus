{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/openvalidation/openvalidation-openapi"
		},
		"file": {
			"name": "sample.yaml",
			"size": 0,
			"path": "src/test/resources/sample.yaml",
			"byteSize": 4413,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Sample\n  version: \"1.0\"\npaths:\n  /simple:\n    post:\n      requestBody:\n        content:\n          application/json:\n            x-ov-rules:\n              name: Simple\n              culture: en\n              rule: |\n                WENN der name IST GLEICH Hallo ich war hier\n                DANN was für ein Quatsch!\n            schema:\n              $ref: '#/components/schemas/Simple'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                properties:\n                  code:\n                    type: number\n  /oneof:\n    post:\n      requestBody:\n        content:\n          application/json:\n            x-ov-rules:\n              $ref: '#/x-ov-rules/ReferencedRule'\n            schema:\n              $ref: '#/components/schemas/WithOneOf'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithAllOf'\n  /allof:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WithAllOfB'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithAllOf'\n  /anyof:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WithAnyOf'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithAllOf'\n  /recursive:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WithRecursive'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithAllOf'\n\n  /duplicates:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Duplicates'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              x-ov-rules:\n                name : DuplicateResponseValidation\n                rule: |\n                  WENN der name IST UNGLEICH Test\n                  DANN was für ein Quatsch!\n              schema:\n                $ref: '#/components/schemas/WithAllOf'\n  /none:\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/WithNone'\n      responses:\n        '200':\n          description: response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/WithAllOf'\ncomponents:\n  schemas:\n    WithAllOf:\n      allOf:\n        - $ref: '#/components/schemas/Simple'\n        - type : Object\n          properties:\n            value:\n              type: integer\n              format: int64\n    WithAllOfB:\n      allOf:\n        - $ref: '#/components/schemas/Simple'\n        - $ref: '#/components/schemas/SimpleB'\n    WithOneOf:\n      oneOf:\n        - $ref: '#/components/schemas/Simple'\n        - $ref: '#/components/schemas/SimpleB'\n    WithAnyOf:\n      anyOf:\n        - $ref: '#/components/schemas/Simple'\n        - $ref: '#/components/schemas/SimpleB'\n\n    WithRecursive:\n      anyOf:\n        - $ref: '#/components/schemas/Simple'\n        - $ref: '#/components/schemas/SimpleC'\n    WithNone:\n      not:\n        $ref: '#/components/schemas/Simple'\n    Duplicates:\n      allOf:\n        - $ref: '#/components/schemas/Simple'\n        - type : Object\n          properties:\n            name:\n              type: string\n\n    Simple:\n      properties:\n        name:\n          type: string\n\n    SimpleB:\n      properties:\n        value:\n          type: integer\n          format: int64\n\n    SimpleC:\n      allOf:\n        - $ref: '#/components/schemas/SimpleB'\n        - type : Object\n          properties:\n            art:\n              type: boolean\nx-ov-rules:\n  ReferencedRule:\n    name: OneOfValidation\n    rule: |\n      WENN das value IST GLEICH 123\n      DANN was für ein Quatsch!"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"SimpleC\": parse schema: allOf: [1]: parse schema: unexpected schema type: \"Object\""
}