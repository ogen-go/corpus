{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/kollalabs/protoc-gen-openapi"
		},
		"file": {
			"name": "openapi_json.yaml",
			"size": 0,
			"path": "examples/tests/jsonoptions/openapi_json.yaml",
			"byteSize": 4802,
			"content": "# Generated with protoc-gen-openapi\n# https://github.com/kollalabs/protoc-gen-openapi\n\nopenapi: 3.0.3\ninfo:\n    title: Messaging API\n    description: Messaging service\n    version: 1.2.3\npaths:\n    /v1/messages/{messageId}:\n        post:\n            tags:\n                - Messaging\n            summary: CreateMessage\n            operationId: Messaging_CreateMessage\n            parameters:\n                - name: messageId\n                  in: path\n                  required: true\n                  schema:\n                    type: string\n                - name: notUsed\n                  in: query\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: string\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Message'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\n    /v1/messages/{message_id}:\n        patch:\n            tags:\n                - Messaging\n            summary: UpdateMessage\n            operationId: Messaging_UpdateMessage\n            parameters:\n                - name: message_id\n                  in: path\n                  required: true\n                  schema:\n                    type: string\n                - name: not_used\n                  in: query\n                  schema:\n                    type: string\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: string\n                required: true\n            responses:\n                \"200\":\n                    description: OK\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Message2'\n                default:\n                    description: Default error response\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/Status'\ncomponents:\n    schemas:\n        GoogleProtobufAny:\n            type: object\n            properties:\n                '@type':\n                    type: string\n                    description: The type of the serialized message.\n            additionalProperties: true\n            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.\n        Message:\n            type: object\n            properties:\n                messageId:\n                    type: string\n                bodyText:\n                    type: string\n                notUsed:\n                    type: string\n        Message2:\n            type: object\n            properties:\n                message_id:\n                    type: string\n                body_text:\n                    type: string\n                not_used:\n                    type: string\n        Status:\n            type: object\n            properties:\n                code:\n                    type: integer\n                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].\n                    format: int32\n                message:\n                    type: string\n                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.\n                details:\n                    type: array\n                    items:\n                        $ref: '#/components/schemas/GoogleProtobufAny'\n                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.\n            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'\ntags:\n    - name: Messaging\n",
			"canonicalURL": "/github.com/kollalabs/protoc-gen-openapi@167dfc54728a0f04c16c8dec89ba5c0b72b78281/-/blob/examples/tests/jsonoptions/openapi_json.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/kollalabs/protoc-gen-openapi/blob/167dfc54728a0f04c16c8dec89ba5c0b72b78281/examples/tests/jsonoptions/openapi_json.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:2411: duplicate path: \"/v1/messages/{message_id}\""
}