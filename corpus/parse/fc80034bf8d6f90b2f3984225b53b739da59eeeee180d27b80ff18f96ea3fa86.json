{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/zijianhuang/openapiclientgen"
		},
		"file": {
			"name": "petBackup.yaml",
			"size": 0,
			"path": "Tests/SwagTests/SwagMock/petBackup.yaml",
			"byteSize": 16038,
			"content": "openapi: 3.0.0\nservers:\n  - url: //petstore.swagger.io/v2\n    description: Default server\n  - url: //petstore.swagger.io/sandbox\n    description: Sandbox server\ninfo:\n  description: |\n    This is a sample server Petstore server.\n    You can find out more about Swagger at\n    [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\n    For this sample, you can use the api key `special-key` to test the authorization filters.\n\n    # Introduction\n    This API is documented in **OpenAPI format** and is based on\n    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\n    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\n    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\n    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n    # OpenAPI Specification\n    This API is documented in **OpenAPI format** and is based on\n    [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\n    It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\n    tool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\n    OpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n    # Cross-Origin Resource Sharing\n    This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\n    And that allows cross-domain communication from the browser.\n    All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n    # Authentication\n\n    Petstore offers two forms of authentication:\n      - API Key\n      - OAuth2\n    OAuth2 - an open protocol to allow secure authorization in a simple\n    and standard method from web, mobile and desktop applications.\n\n    \u003cSecurityDefinitions /\u003e\n\n  version: 1.0.0\n  title: Swagger Petstore\n  termsOfService: 'http://swagger.io/terms/'\n  contact:\n    name: API Support\n    email: apiteam@swagger.io\n    url: https://github.com/Redocly/redoc\n  x-logo:\n    url: 'https://redocly.github.io/redoc/petstore-logo.png'\n    altText: Petstore logo\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\nexternalDocs:\n  description: Find out how to create Github repo for your OpenAPI spec.\n  url: 'https://github.com/Rebilly/generator-openapi-repo'\ntags:\n  - name: pet\n    description: Everything about your Pets\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n  - name: pet_model\n    x-displayName: The Pet Model\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Pet\" /\u003e\n  - name: store_model\n    x-displayName: The Order Model\n    description: |\n      \u003cSchemaDefinition schemaRef=\"#/components/schemas/Order\" exampleRef=\"#/components/examples/Order\" showReadOnly={true} showWriteOnly={true} /\u003e\nx-tagGroups:\n  - name: General\n    tags:\n      - pet\n      - store\n  - name: User Management\n    tags:\n      - user\n  - name: Models\n    tags:\n      - pet_model\n      - store_model\npaths:\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          style: form\n          schema:\n            type: array\n            minItems: 1\n            maxItems: 3\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n        '400':\n          description: Invalid status value\n      security:\n        - petstore_auth:\n            - 'write:pets'\n            - 'read:pets'\n  /pet/findByStatus2:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus2\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          style: form\n          schema:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n        '400':\n          description: Invalid status value\n      security:\n        - petstore_auth:\n            - 'write:pets'\n            - 'read:pets'\n  /pet/findByStatus3:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus3\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          style: form\n          schema:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pet'\n        '400':\n          description: Invalid status value\n      security:\n        - petstore_auth:\n            - 'write:pets'\n            - 'read:pets'\n  /backup-jobs/:\n    get:\n      operationId: ListBackupJobs\n      description: Returns metadata about your backup jobs.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/Pet'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The next item following a partial list of returned items. For example, if a request is made to return \u003ccode\u003emaxResults\u003c/code\u003e number of items, \u003ccode\u003eNextToken\u003c/code\u003e allows you to return more items in your list starting at the location pointed to by the next token.'\n          schema:\n            type: string\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of items to be returned.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 1000\n        - name: resourceArn\n          in: query\n          required: false\n          description: Returns only backup jobs that match the specified resource Amazon Resource Name (ARN).\n          schema:\n            type: string\n        - name: state\n          in: query\n          required: false\n          description: Returns only backup jobs that are in the specified state.\n          schema:\n            type: string\n            enum:\n              - CREATED\n              - PENDING\n              - RUNNING\n              - ABORTING\n              - ABORTED\n              - COMPLETED\n              - FAILED\n              - EXPIRED\n        - name: backupVaultName\n          in: query\n          required: false\n          description: 'Returns only backup jobs that will be stored in the specified backup vault. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n        - name: createdBefore\n          in: query\n          required: false\n          description: Returns only backup jobs that were created before the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: createdAfter\n          in: query\n          required: false\n          description: Returns only backup jobs that were created after the specified date.\n          schema:\n            type: string\n            format: date-time\n        - name: resourceType\n          in: query\n          required: false\n          description: '\u003cp\u003eReturns only backup jobs for the specified resources:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDynamoDB\u003c/code\u003e for Amazon DynamoDB\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEBS\u003c/code\u003e for Amazon Elastic Block Store\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEFS\u003c/code\u003e for Amazon Elastic File System\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRDS\u003c/code\u003e for Amazon Relational Database Service\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStorage Gateway\u003c/code\u003e for AWS Storage Gateway\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n          schema:\n            type: string\n            pattern: '^[a-zA-Z0-9\\-\\_\\.]{1,50}$'\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n\n\ncomponents:\n  schemas:\n    Cat:\n      description: A representation of a cat\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            huntingSkill:\n              type: string\n              description: The measured skill for hunting\n              default: lazy\n              example: adventurous\n              enum:\n                - clueless\n                - lazy\n                - adventurous\n                - aggressive\n          required:\n            - huntingSkill\n    Category:\n      type: object\n      properties:\n        id:\n          description: Category ID\n          allOf:\n            - $ref: '#/components/schemas/Id'\n        name:\n          description: Category name\n          type: string\n          minLength: 1\n        sub:\n          description: Test Sub Category\n          type: object\n          properties:\n            prop1:\n              type: string\n              description: Dumb Property\n      xml:\n        name: Category\n    Dog:\n      description: A representation of a dog\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            packSize:\n              type: integer\n              format: int32\n              description: The size of the pack the dog is from\n              default: 1\n              minimum: 1\n          required:\n            - packSize\n    HoneyBee:\n      description: A representation of a honey bee\n      allOf:\n        - $ref: '#/components/schemas/Pet'\n        - type: object\n          properties:\n            honeyPerDay:\n              type: number\n              description: Average amount of honey produced per day in ounces\n              example: 3.14\n              multipleOf: .01\n          required:\n            - honeyPerDay\n    Id:\n      type: integer\n      format: int64\n      readOnly: true\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      discriminator:\n        propertyName: petType\n        mapping:\n          cat: '#/components/schemas/Cat'\n          dog: '#/components/schemas/Dog'\n          bee: '#/components/schemas/HoneyBee'\n      properties:\n        id:\n          externalDocs:\n            description: \"Find more info here\"\n            url: \"https://example.com\"\n          description: Pet ID\n          allOf:\n            - $ref: '#/components/schemas/Id'\n        category:\n          description: Categories this pet belongs to\n          allOf:\n            - $ref: '#/components/schemas/Category'\n        name:\n          description: The name given to a pet\n          type: string\n          example: Guru\n        photoUrls:\n          description: The list of URL to a cute photos featuring pet\n          type: array\n          maxItems: 20\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n            format: url\n        friend:\n          allOf:\n            - $ref: '#/components/schemas/Pet'\n        tags:\n          description: Tags attached to the pet\n          type: array\n          minItems: 1\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: '#/components/schemas/Tag'\n        status:\n          type: string\n          description: Pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n        petType:\n          description: Type of a pet\n          type: string\n      xml:\n        name: Pet\n    Tag:\n      type: object\n      properties:\n        id:\n          description: Tag ID\n          allOf:\n            - $ref: '#/components/schemas/Id'\n        name:\n          description: Tag name\n          type: string\n          minLength: 1\n      xml:\n        name: Tag\n  requestBodies:\n    Pet:\n      content:\n        application/json:\n          schema:\n            allOf:\n              - description: My Pet\n                title: Pettie\n              - $ref: '#/components/schemas/Pet'\n        application/xml:\n          schema:\n            type: 'object'\n            properties:\n              name:\n                type: string\n                description: hooray\n      description: Pet object that needs to be added to the store\n      required: true\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/User'\n      description: List of user object\n      required: true\n  securitySchemes:\n    petstore_auth:\n      description: |\n        Get access to data while protecting your account credentials.\n        OAuth2 is also a safer and more secure way to give you access.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'\n          scopes:\n            'write:pets': modify pets in your account\n            'read:pets': read your pets\n    api_key:\n      description: \u003e\n        For this sample, you can use the api key `special-key` to test the\n        authorization filters.\n      type: apiKey\n      name: api_key\n      in: header\n  examples:\n    Order:\n      value:\n        quantity: 1,\n        shipDate: 2018-10-19T16:46:45Z,\n        status: placed,\n        complete: false",
			"canonicalURL": "/github.com/zijianhuang/openapiclientgen@dc7776174e1cb683c39c6493e4b38a0b3ef0a05f/-/blob/Tests/SwagTests/SwagMock/petBackup.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/zijianhuang/openapiclientgen/blob/dc7776174e1cb683c39c6493e4b38a0b3ef0a05f/Tests/SwagTests/SwagMock/petBackup.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"UserArray\": parse content: application/json: schema: parse schema: parse schema: at 1:552: find schema: resolve: can't find value for \"components/schemas/User\""
}