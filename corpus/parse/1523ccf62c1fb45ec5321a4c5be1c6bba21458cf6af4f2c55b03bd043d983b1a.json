{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "gitlab.com/zaaksysteem/zaaksysteem"
		},
		"file": {
			"name": "index.yaml",
			"size": 0,
			"path": "share/apidocs/v1/swagger/index.yaml",
			"byteSize": 98607,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.9.0\n  title: Zaaksysteem.nl API\n  contact:\n    name: \"Zaaksysteem.nl Support\"\n    url: \"https://zaaksysteem.nl/support\"\n    email: \"support@zaaksysteem.nl\"\n  description: |\n    Zaaksysteem.nl API v1.0. Our first public api, which is also used by our\n    core application. To keep things simple, authentication is achieved by\n    simply setting a header called \"API-Key\", with the setup API Key in\n    zaaksysteem.nl.\n\n    Or just try the examples below! :)\n\n    ***Remember:** We try to make the best software possible for everyone, and\n    we will make mistakes on our road to awesomeness. This could mean that a\n    part of the api does not perform as well as we had envisioned it, and we\n    could ask you to implement some features in your code to prevent our\n    application from breaking. By using this API, you acknowledge that you have\n    been warned ;) and we ask you to play fair and follow the instructions of\n    employees of Zaaksysteem.nl when those speedbumps arise.*\n\n    **License**:\n    Our software is released under the EUPL, for more information, read our\n    licens via the link below.\n\n  license:\n    name: EUPL\n    url: \"https://opensource.org/licenses/EUPL-1.1\"\nservers:\n  - url: \"/api/v1\"\n    description: \"Zaaksysteem.nl API\"\ntags:\n  - name: \"address\"\n    description: \"BAG or Address related actions\"\n  - name: \"app\"\n    description: |\n      Endpoint for retrieving configuration for the different external apps\n  - name: \"case\"\n    description: \"Every action related to creating and maintaining cases\"\n  - name: \"case/document\"\n    description: \"[deprecated] Actions for viewing and editing documents\"\n  - name: \"case/note\"\n    description: \"Creating and editing notes for a case of subject\"\n  - name: \"case/relation\"\n    description: \"Actions for relating and linking cases\"\n  - name: \"casetype\"\n    description: \"Every action related to listing and retrieving casetypes\"\n  - name: \"constants\"\n    description: \"Data from internal tables, like possible countries, etc\"\n  - name: \"dashboard\"\n    description: |\n      Every action related to creating and maintaining the dashboard\n  - name: \"document\"\n    description: \"Every action related to creating and moving documents\"\n  - name: \"email_template\"\n    description: \"Endpoint for retreiving email templates\"\n  - name: \"geo\"\n    description: \"Geographic or maps related actions\"\n  - name: \"group\"\n    description: \"Every action related to groups (departments)\"\n  - name: \"municipality_code\"\n    description: \"Endpoint for retreiving municipality codes\"\n  - name: \"role\"\n    description: \"Every action related to employee roles\"\n  - name: \"subject\"\n    description: |\n      Every action related to creating and importing persons or companies\npaths:\n  /case:\n    get:\n      summary: Retrieve a listing of cases\n      description: |\n        Will retrieve a list of cases selected by the given *query language* of\n        the configured *saved search* in the integration configuration (in NL:\n        Koppelingenconfiguratie).\n\n        You will receive every known data of this object, because it is\n        currently not possible to specify a set of data. Make sure you\n        implement paging when retrieving lot's of content.\n      operationId: cases\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/rows_per_page\"\n        - $ref: \"./parameters.yaml#/components/schemas/page\"\n        - $ref: \"./parameters.yaml#/components/schemas/zql\"\n      responses:\n        '200':\n          description: A paged list of cases\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"case\"\n  /case/{uuid}:\n    get:\n      summary: Retrieves a case by its UUID\n      description: |\n        Retrieves a single case selected by the given *uuid* of this object.\n      operationId: case_get\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single case response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/get_by_number/{id}:\n    get:\n      summary: Retrieves a case by its id (or casenumber)\n      description: |\n        Retrieve a single case selected by the given case number (NL:\n        zaaknummer)\n      operationId: case_get_by_id\n      tags:\n        - case\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          required: true\n          description: \"The number of this case\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n      responses:\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/last_modified/{timestamp}:\n    get:\n      summary: Retrieves a list of cases order by last_modified\n      description: |\n        Retrieves a list of cases order by last_modified\n      operationId: case_last_modified\n      tags:\n        - case\n      parameters:\n        - name: \"timestamp\"\n          in: \"path\"\n          required: true\n          description: \"When not submitted, takes current time minus 1 day\"\n          schema:\n            type: \"string\"\n            example: \"2020-01-01T00:00:00Z\"\n      responses:\n        '200':\n          description: A non-paged list of cases\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n\n  /case/{uuid}/casetype:\n    get:\n      summary: Retrieves a related casetype to the given case UUID\n      description: |\n        Retrieves the related casetype to the given case identifier. Because\n        casetypes can be altered, this call will retrieves a the version of the\n        casetype at the time this case was created.\n      operationId: case_get_casetype\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single casetype response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"casetype\"\n  /case/{uuid}/update:\n    post:\n      summary: Updates a case\n      description: |\n        This will update an existing case by its UUID. Possible changes are:\n\n        * Change of attributes in a case\n        * Changing of the payment status\n\n        This call cannot be used to transition a case to the next phase, see\n        the *transition* call for that.\n      operationId: case_update\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                values:\n                  type: \"object\"\n                  example:\n                    favourite_beer:\n                      - \"heineken\"\n                    multiple_fields_of_beers:\n                      - [\"heineken\"]\n                      - [\"amstel\"]\n                    checkbox_of_beers:\n                      - \"hertog\"\n                      - \"jupiler\"\n                  description: |\n                    An object of values, where the key is the name of the magic\n                    string in zaaksysteem.nl. The value is always wrapped in an\n                    array, to allow support for multiple fields of the same\n                    name\n                payment_info:\n                  type: \"object\"\n                  properties:\n                    payment_status:\n                      type: \"string\"\n                      enum:\n                        - success\n                        - failed\n                        - pending\n                        - offline\n      responses:\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n\n  /case/{uuid}/assign:\n    post:\n      summary: Assign a case to a user\n      description: |\n        Assign a case to a user, deptartment/role and optionally open the case\n        as well. This function implements a subset of the assign actions, not\n        all actions that are implemented in the UI are implemented here.\n\n        You can assign to a user based on the username or the UUID (the latter\n        is prefered over the former). If you assign to a user, you can set the\n        case status to `open` by using the `open` parameter. Otherwise the\n        status of the case will be set to `new`.\n\n        In case you want to assign a case to a department/role combination you\n        would need to know the department and role names or the UUID's to both.\n        Again the UUID's are preferred. Please note that assigning a case to a\n        department/role will unassign the case from any assignee.\n\n        When given both names and UUID's the UUID's take precedence. You cannot\n        mix UUID's and names, you need to pick one calling convention.\n\n      operationId: case_assign_user\n      tags:\n        - case\n        - assign\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                open:\n                  type: \"boolean\"\n                  example: true\n                  description: |\n                    Set the case status to open. Only works when assigning to a\n                    user\n\n                # This is what we actually want\n                user_uuid:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"1bb9928a-c6c3-4197-bd48-65b43ccbcfbf\"\n                  description: |\n                    The UUID of the user, see api/v1/subject for more\n                    information\n                department_uuid:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"1bb9928a-c6c3-4197-bd48-65b43ccbcfbf\"\n                  description: |\n                    The UUID of the group, see api/v1/groups for more\n                    information\n                role_uuid:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"1bb9928a-c6c3-4197-bd48-65b43ccbcfbf\"\n                  description: |\n                    The UUID of the role, see api/v1/roles for more\n                    information\n\n                # This is what the PO wants because it is easier (but kinda\n                # breaks the API/v1 style. We'll allow both\n                username:\n                  type: \"string\"\n                  format: \"string\"\n                  example: \"behandelaar\"\n                  description: |\n                    The username of the user, see api/v1/subject for more\n                    information\n                department:\n                  type: \"string\"\n                  format: \"string\"\n                  example: \"Some department\"\n                  description: |\n                    The name of the group, see api/v1/groups for more\n                    information\n                role:\n                  type: \"string\"\n                  format: \"string\"\n                  example: \"Some role\"\n                  description: |\n                    The name of the role, see api/v1/roles for more\n                    information\n\n      responses:\n        '200':\n          description: A confirmaton that the action took place\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: 'object'\n                properties:\n                  result:\n                    type: 'object'\n                    properties:\n                      type:\n                        type: 'string'\n                        example: 'message'\n                      reference:\n                        type: 'string'\n                        format: 'uuid'\n                        nullable: true\n                      instance:\n                        type: 'object'\n                        properties:\n                          message:\n                            type: 'string'\n                            example: 'Event processed'\n                          type:\n                            type: 'string'\n                            example: 'ack'\n\n  /case/{uuid}/process_event:\n    post:\n      summary: External event dispatch endpoint\n      description: |\n        Allows other servers or daemons to dispatch events to a specific case.\n        Currently implements handling of 'ExternalMessageCreated' events, as\n        implemented in the new minty backend.\n      operationId: case_process_event\n      tags:\n        - case\n        - event\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required: [\"event_name\"]\n              properties:\n                event_name:\n                  type: \"string\"\n                  example: \"ExternalMessageCreated\"\n                user_uuid:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"1bb9928a-c6c3-4197-bd48-65b43ccbcfbf\"\n\n      responses:\n        '200':\n          description: An API/v1 Ack message\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: 'object'\n                properties:\n                  result:\n                    type: 'object'\n                    properties:\n                      type:\n                        type: 'string'\n                        example: 'message'\n                      reference:\n                        type: 'string'\n                        format: 'uuid'\n                        nullable: true\n                      instance:\n                        type: 'object'\n                        properties:\n                          message:\n                            type: 'string'\n                            example: 'Event processed'\n                          type:\n                            type: 'string'\n                            example: 'ack'\n\n  /case/{uuid}/transition:\n    post:\n      summary: Transitions a case to the next phase\n      description: |\n        Transitions a case with the given UUID into the next phase. This call\n        will first check if all the necessary requirements for the current\n        phase are met. When all checklist items are checked, documents are\n        accepted, etc, it will start the transition into the next phase of this\n        case.\n\n        It will send the necessary emails, generates documents, starts related\n        cases etc.\n      operationId: case_transition\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        description: |\n          Supply a result when transitioning this case into the next phase.\n        required: false\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              example:\n                result: \"Afgehandeld\"\n              properties:\n                result:\n                  type: \"string\"\n                  example: \"Afgehandeld\"\n                  description: |\n                    One of the different outcomes of this case. This attribute\n                    is required when you would like to transition this case\n                    over the last phase\n                result_id:\n                  type: \"integer\"\n                  format: \"int64\"\n                  example: \"1234\"\n                  deprecated: true\n                  description: |\n                      The exact result id. A unique identifier of the result,\n                      and changes too often too make sense in an api call.\n                      That's why we deprecated this parameter\n      responses:    # TODO Error messages\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/{uuid}/take:\n    post:\n      summary: Sets the current assignee of the case with given UUID to you.\n      description: |\n        When someone assigns a case to you, you can either \"take\" it: accept\n        that you are the new assignee, or you could \"reject\" it: return it to\n        the sender.\n      operationId: case_take\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/{uuid}/reject:\n    post:\n      summary: |\n          Reject that you are pointed as the new assignee of the case with\n          given UUID.\n      description: |\n        When someone assigns a case to you, you can either \"take\" it: accept\n        that you are the new assignee, or you could \"reject\" it: return it to\n        the sender.\n      operationId: case_reject\n      tags:\n        - case\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/create:\n    post:\n      summary: Add a new case to zaaksysteem.nl\n      operationId: case_create\n      tags:\n        - case\n      requestBody:\n        description: |\n          This will create a new case in zaaksysteem.nl, complete with files,\n          values, subjects of a specified casetype.\n\n          Creating a simple case is as easy as sending the two required\n          parameters:\n          * casetype_id\n          * source\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './requests.yaml#/components/schemas/requestCaseCreate'\n      responses:\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/create_delayed:\n    post:\n      summary: |\n        Add a new case to zaaksysteem.nl via our taskrunner in the background.\n      operationId: case_create_delayed\n      tags:\n        - case\n      requestBody:\n        description: |\n          This will validate your input parameters, and dispatches the creation\n          of the case to our background queuerunner. This way you will receive\n          a quick response.\n\n          Creating a simple delayed case is as easy as sending the two\n          parameters:\n          * casetype_id\n          * source\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './requests.yaml#/components/schemas/requestCaseCreate'\n      responses:\n        '200':\n          description: A single object of the type \"case\"\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/reserve_number:\n    post:\n      summary: Reserve a unique case number for later use\n      description: |\n        Returns an object containing the next serial for usage in a\n        /case/create call.\n      operationId: case_reserve\n      tags:\n        - case\n      responses:\n        '200':\n          description: A single case response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"serial\"\n  /case/prepare_file:\n    post:\n      summary: Upload a file to zaaksysteem.nl\n      description: |\n        Upload a file into the filestore of zaaksysteem, and receive the UUID\n        for further processing. This way you can use these UUIDs as a reference\n        when creating or updating cases.\n\n        Make sure you post these files in a multipart/form-data style, as it\n        were a normal form element. Example:\n\n        ```\n        \u003cform method=\"post\" action=\"/api/v1/case/prepare_file\"\n              enctype=\"multipart/form-data\"\u003e\n          \u003cinput type=\"file\" name=\"upload\"\u003e\n          \u003cinput type=\"file\" name=\"upload\"\u003e\n        \u003c/form\u003e\n        ```\n\n        Or via curl:\n\n        ```\n        curl \\\n          -H \"API-Interface-Id: ????\" \\\n          -H \"API-Key: ????\"\n          -H \"Content-Type: multipart/form-data\" \\\n          -F upload=@FilestoreTest.txt\u0026upload=@test.jpg \\\n          https://{instance}.zaaksysteem.nl/api/v1/case/prepare_file\n        ```\n      operationId: case_prepare_file\n      tags:\n        - case\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                upload:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        '200':\n          description: A list of file upload information\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"filebag\"\n  /case/{uuid}/document:\n    get:\n      summary: |\n          Retrieves a list of \"case\" documents related to the given case UUID\n      description: |\n        Returns a subset of documents belonging to this case: it will only\n        return the documents which are also used in custom fields of this case\n\n        # Note\n        There is some confusion around the \"document\" keyword in this version\n        of our API.  When returning a document, we normally return an object of\n        the type `document` which is a representation of the file with its\n        metadata and connection to a case. In this call however, we only return\n        the representation on our disk (type `file`). We know this is\n        unfortunate, but not fixable in this API version anymore. If you would\n        like to retrieve a *real* document, please use our /document api calls.\n      operationId: case_related_documents\n      tags:\n        - case\n        - case/document\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A list of files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"file\"\n  /case/{uuid}/document/all:\n    get:\n      summary: |\n          Retrieves a list of all active documents related to the given case\n          UUID\n      description: |\n        Returns a list of all active documents belonging to this case, not only\n        the documents which are also used in custom fields of this case.\n\n        # Note\n        Opposite of the `/case/{uuid}/document` call, this call will return\n        \"new style\" objects of the type `document`\n      operationId: all_case_related_documents\n      tags:\n        - case\n        - case/document\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A list of files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"document\"\n  /case/{uuid}/document/{document_uuid}:\n    get:\n      summary: Retrieves a document by UUID related to the given case UUID\n      deprecated: true\n      description: |\n        Returns a single document to this case.\n\n        # Note\n        There is some confusion around the \"document\" keyword in this version\n        of our API. When returning a document, we normally return an object of\n        the type `document` which is a representation of the file with its\n        metadata and connection to a case. In this call however, we only return\n        the representation on our disk (type `file`). We know this is\n        unfortunate, but not fixable in this API version anymore. If you would\n        like to retrieve a *real* document, please use our /document api calls.\n      operationId: case_related_document_get\n      tags:\n        - case/document\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n        - name: \"document_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this document\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of document\"\n            example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n      responses:\n        '200':\n          description: A list of files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"file\"\n  /case/{uuid}/document/{document_uuid}/download:\n    get:\n      summary: Downloads a document by UUID related to the given case UUID\n      deprecated: true\n      description: |\n        Returns a the document as a single download.\n\n        # Note\n        There is some confusion around the \"document\" keyword in this version\n        of our API. When returning a document, we normally return an object of\n        the type `document` which is a representation of the file with its\n        metadata and connection to a case. In this call however, we only return\n        the representation on our disk (type `file`). We know this is\n        unfortunate, but not fixable in this API version anymore. If you would\n        like to retrieve a *real* document, please use our /document api calls.\n      operationId: case_related_document_download\n      tags:\n        - case/document\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n        - name: \"document_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this document\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of document\"\n            example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n      responses:\n        '200':\n          description: Downloads a file\n          content:\n            default:\n              schema:\n                example: \"File download\"\n  /case/{uuid}/note:\n    get:\n      summary: Retrieves a list of notes for the given case UUID\n      description: |\n        Retrieves a list of notes set to this case. This is now only used by\n        our dedicated meetingapp. Please try other ways to add notes to our\n        zaaksysteem.\n      operationId: case_related_notes\n      tags:\n        - case\n        - case/note\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case/note\"\n  /case/{uuid}/note/{note_uuid}:\n    get:\n      summary: Retrieves a note by UUID for the given case UUID\n      description: |\n        Returns a single note created with to this case.\n      operationId: case_related_note\n      tags:\n        - case\n        - case/note\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n        - name: \"note_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this note\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of note\"\n            example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n      responses:\n        '200':\n          description: A list of files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case/note\"\n  /case/{uuid}/note/create:\n    post:\n      summary: Creates a note for the given case UUID\n      description: |\n        Creates a new note and adds it to the given case\n      operationId: case_note_create\n      tags:\n        - case\n        - case/note\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - content\n              properties:\n                content:\n                  type: \"string\"\n                  example: |\n                    This is another note to test case note functionality\n                  description: \"A user defined shout out\"\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case/note\"\n  /case/{uuid}/note/{note_uuid}/update:\n    post:\n      summary: Updates a note by its UUID for the given case UUID\n      description: |\n        Updates a user note with the given uuid\n      operationId: case_note_update\n      tags:\n        - case\n        - case/note\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n        - name: \"note_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this note\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of note\"\n            example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - content\n              properties:\n                content:\n                  type: \"string\"\n                  example: |\n                    This is another note to test case note functionality\n                  description: \"A user defined shout out\"\n      responses:\n        '200':\n          description: A single note\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case/note\"\n  /case/{uuid}/note/{note_uuid}/delete:\n    post:\n      summary: Deletes a note from the given case UUID\n      description: |\n        Deletes a note from the case\n      operationId: case_note_delete\n      tags:\n        - case\n        - case/note\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n        - name: \"note_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this note\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of note\"\n            example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              example: \"{}\"\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"case/note\"\n  /case/{uuid}/relation/add:\n    post:\n      summary: Links a case to another case by its UUID\n      description: |\n        Adds a relation to another case\n      operationId: case_relatation_add\n      tags:\n        - case\n        - case/relation\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - related_id\n              properties:\n                related_id:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n                  description: \"A case\"\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/{uuid}/relation/remove:\n    post:\n      summary: Remove a relation to another case\n      description: |\n          Removes a relation using the provided related_id as identification.\n      operationId: case_relation_delete\n      tags:\n        - case\n        - case/relation\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - related_id\n              properties:\n                related_id:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n                  description: \"A case\"\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case\"\n  /case/{uuid}/relation/move:\n    post:\n      summary: Orders a relation in the list of relations\n      description: |\n        Moves this relation up or down the relation list by giving a \"after\"\n        keyword. When the after keyword is not specified, it will move the\n        given `related_id` to the top of the list.\n      operationId: case_relation_move\n      tags:\n        - case\n        - case/relation\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - related_id\n              properties:\n                related_id:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"64b2e237-1ed0-4259-9259-208369e59c39\"\n                  description: \"A related case\"\n                after:\n                  type: \"string\"\n                  format: \"uuid\"\n                  example: \"bf60c804-d541-4d6a-88d1-54c135ef60a5\"\n                  description: |\n                    The other relation to put this relation 'after'.\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"case/note\"\n  /dashboard/widget:\n    get:\n      summary: Retrieves a list of widgets as shown on the dashboard\n      description: |\n        When opening the dashboard, you will see a series of widgets. These\n        widgets are retrieved via this call\n      operationId: dashboard_widgets\n      tags:\n        - dashboard\n      responses:\n        '200':\n          description: A paged list of widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"widget\"\n  /dashboard/widget/create:\n    post:\n      summary: Creates a new widget for on the dashboard\n      description: |\n        Will create a new widget on the dashboard\n      operationId: dashboard_widget_create\n      tags:\n        - dashboard\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './objects.yaml#/components/schemas/objectDashboardWidgetContent'\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"widget\"\n  /dashboard/widget/{uuid}/update:\n    post:\n      summary: Updates a widget on the dashboard\n      description: |\n        Will update an existing widget on the dashboard\n      operationId: dashboard_widget_update\n      tags:\n        - dashboard\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: './objects.yaml#/components/schemas/objectDashboardWidgetContent'\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                $ref: './responses-full.yaml#/components/schemas/responseDashboardWidgets'\n  /dashboard/widget/bulk_update:\n    post:\n      summary: Updates all widgets on the dashboard\n      description: |\n        Updates all widgets on the dashboard in one call\n      operationId: dashboard_widget_bulkupdate\n      tags:\n        - dashboard\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              properties:\n                updates:\n                  type: \"array\"\n                  items:\n                    $ref: './objects.yaml#/components/schemas/objectDashboardWidgetContent'\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                $ref: './responses-full.yaml#/components/schemas/responseDashboardWidgets'\n  /dashboard/widget/{uuid}/delete:\n    post:\n      summary: Deletes a widget from the dashboard\n      description: |\n        Deletes a widget from the dashboard\n      operationId: dashboard_widget_delete\n      tags:\n        - dashboard\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"widget\"\n  /dashboard/favourite/{type}:\n    get:\n      summary: |\n        Returns a list favourites for dashboard viewing by the given type\n      description: |\n        When opening the dashboard, you are able to place a widget of\n        favourites of some sort. Currently only casetype is supported.\n      operationId: dashboard_favourites_by_type\n      tags:\n        - dashboard\n      parameters:\n        - name: \"type\"\n          in: \"path\"\n          required: true\n          description: \"The type of favourite to retrieve\"\n          schema:\n            type: \"string\"\n            example: \"casetype\"\n            enum:\n              - casetype\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"favourite\"\n  /dashboard/favourite/{type}/create:\n    post:\n      summary: Creates a new favourite for on the dashboard widget\n      description: |\n        Will create a new entry in the favourite widget of the given type\n      operationId: dashboard_favourites_by_type_create\n      tags:\n        - dashboard\n      parameters:\n        - name: \"type\"\n          in: \"path\"\n          required: true\n          description: \"The type of favourite to retrieve\"\n          schema:\n            type: \"string\"\n            example: \"casetype\"\n            enum:\n              - casetype\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - reference_id\n              properties:\n                reference_id:\n                  type: \"string\"\n                  example: \"2806b1cf-faa0-4304-bdb2-8b24768dcdc6\"\n                  description: |\n                    A reference to the object to create the favourite for\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"favourite\"\n  /dashboard/favourite/{type}/{uuid}/update:\n    post:\n      summary: Updates an existing favourite for on the dashboard widget\n      description: |\n        Will update or change the order of the given favourite\n      operationId: dashboard_favourites_by_type_update\n      tags:\n        - dashboard\n      parameters:\n        - name: \"type\"\n          in: \"path\"\n          required: true\n          description: \"The type of favourite to retrieve\"\n          schema:\n            type: \"string\"\n            example: \"casetype\"\n            enum:\n              - casetype\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - reference_id\n              properties:\n                reference_id:\n                  type: \"string\"\n                  example: \"2806b1cf-faa0-4304-bdb2-8b24768dcdc6\"\n                  description: |\n                    A reference to the object to create the favourite for\n                order:\n                  type: \"integer\"\n                  example: 40\n                  description: |\n                    An id for ordering the favourite. Null for placing it at\n                    the end, 1 for the beginning. Use 21 for placing it after\n                    number 20\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"favourite\"\n  /dashboard/favourite/{type}/bulk_update:\n    post:\n      summary: Updates the entire list of favourites\n      description: |\n        Will update or change the entire list of favourites\n      operationId: dashboard_favourites_by_type_bulkupdate\n      tags:\n        - dashboard\n      parameters:\n        - name: \"type\"\n          in: \"path\"\n          required: true\n          description: \"The type of favourite to retrieve\"\n          schema:\n            type: \"string\"\n            example: \"casetype\"\n            enum:\n              - casetype\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - reference_id\n              properties:\n                updates:\n                  type: \"array\"\n                  items:\n                    type: \"object\"\n                    properties:\n                      id:\n                        type: \"string\"\n                        format: \"uuid\"\n                        example: \"2806b1cf-faa0-4304-bdb2-8b24768dcdc6\"\n                        description: \"A reference to the favourite\"\n                      reference_id:\n                        type: \"string\"\n                        format: \"uuid\"\n                        example: \"1234b1cf-faa0-4304-bdb2-8b24768dcddd\"\n                        description: \"the object this favourites references to\"\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"favourite\"\n  /dashboard/favourite/{type}/{uuid}/delete:\n    post:\n      summary: Updates the entire list of favourites\n      description: |\n        Will update or change the entire list of favourites\n      operationId: dashboard_favourites_by_type_delete\n      tags:\n        - dashboard\n      parameters:\n        - name: \"type\"\n          in: \"path\"\n          required: true\n          description: \"The type of favourite to retrieve\"\n          schema:\n            type: \"string\"\n            example: \"casetype\"\n            enum:\n              - casetype\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n      responses:\n        '200':\n          description: A paged list of favourite widgets\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"favourite\"\n  /app/{name}:\n    get:\n      summary: Retrieves configuration for a setup \"app\" in zaaksysteem.nl\n      description: |\n        Zaaksysteem.nl has some dedicated apps. Like our \"meeting\" app. This\n        call returns the necessary configuration for a given app.\n\n        **For internal use**\n      operationId: app_get\n      tags:\n        - app\n      parameters:\n        - name: \"name\"\n          in: \"path\"\n          required: true\n          description: \"The app identifier\"\n          schema:\n            type: \"string\"\n            description: \"Unique identifier of this app\"\n            example: \"meeting\"\n      responses:\n        '200':\n          description: A list of file upload information\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"app\"\n  /casetype:\n    get:\n      summary: Returns a list of casetypes\n      description: \"Returns a list of casetypes in this zaaksysteem.nl\"\n      operationId: casetypes\n      tags:\n        - casetype\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/rows_per_page\"\n        - $ref: \"./parameters.yaml#/components/schemas/page\"\n      responses:\n        '200':\n          description: A paged list of casetypes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"casetype\"\n  /casetype/{casetype_uuid}:\n    get:\n      summary: Returns a single casetype for the given uuid\n      description: \"Returns a single casetype from this zaaksysteem.nl\"\n      operationId: casetype_get\n      tags:\n        - casetype\n      parameters:\n        - name: \"casetype_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this casetype\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of casetype\"\n            example: \"72975f99-65b0-4651-9f08-281165b74550\"\n      responses:\n        '200':\n          description: A single casetype\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"casetype\"\n  /casetype/{casetype_uuid}/authorisation:\n    get:\n      summary: Returns a list or groups and roles which can access the casetype\n      description: \"Returns casetype authorisation information\"\n      operationId: casetype_authorisation_get\n      tags:\n        - casetype\n      parameters:\n        - name: \"casetype_uuid\"\n          in: \"path\"\n          required: true\n          description: \"The uuid of this casetype\"\n          schema:\n            type: \"string\"\n            format: \"uuid\"\n            description: \"Unique id of casetype\"\n            example: \"72975f99-65b0-4651-9f08-281165b74550\"\n      responses:\n        '200':\n          description: A paged list of authorisation objects\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"authorisation\"\n                                reference:\n                                  type: \"string\"\n                                  example: null\n                                preview:\n                                  example: \"authorisation(unsynched)\"\n  /subject:\n    get:\n      summary: Get a employee object by username\n      description: |\n        Displays an employee object via the username\n      operationId: get_by_username\n      parameters:\n        - name: \"query:match:subject_type\"\n          in: \"query\"\n          required: true\n          description: \"Type of user\"\n          schema:\n            type: \"string\"\n            example: \"employee\"\n            enum:\n              - employee\n              - person\n              - company\n\n        - name: \"query:match:subject.coc_number\"\n          in: \"query\"\n          description: |-\n              Chamber of commerce number (kvk-nummer), only available for\n              companies.\n\n              In Dutch this is called: kvk number\n          schema:\n            type: \"string\"\n            example: \"37103637\"\n        - name: \"query:match:subject.coc_location_number\"\n          in: \"query\"\n          description: |-\n              Chamber of commerce location number (vestigingsnummer), only\n              available for companies.\n\n              In NL this is called: vestigingsnummer\n          schema:\n            type: \"string\"\n            example: \"12345678\"\n        - name: \"query:match:subject.personal_number\"\n          in: \"query\"\n          description: |\n              Social security number (burgerservicenummer/BSN),\n              only available for persons.\n          schema:\n            type: \"string\"\n            example: \"992820637\"\n        - name: \"query:match:username\"\n          in: \"query\"\n          description: |\n              The username of the user, only available for employees.\n          schema:\n            type: \"string\"\n            description: \"Username of user\"\n            example: \"admin\"\n      tags:\n        - subject\n      responses:\n        '200':\n          description: An employee\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"subject\"\n    post:\n      summary: Get a subject object by search params\n      description: Get a subject object by search_params\n      operationId: search_betrokkene\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - query\n              properties:\n                query:\n                  required:\n                      - match\n                  type: \"object\"\n                  properties:\n                    match:\n                      required:\n                          - subject_type\n                      type: \"object\"\n                      properties:\n                        subject_type:\n                          type: \"string\"\n                          example: \"company\"\n                          enum:\n                            - company\n                            - person\n                            - employee\n                        subject.coc_number:\n                          type: \"string\"\n                          example: \"37103637\"\n                          description: |\n                              Chamber of commerce number (kvk-nummer), only\n                              available for companies.\n                        subject.coc_location_number:\n                          type: \"string\"\n                          example: \"12345678\"\n                          description: |\n                              Chamber of commerce location number\n                              (vestigingsnummer), only available for companies.\n                        subject.personal_number:\n                          type: \"string\"\n                          example: \"992820637\"\n                          description: |\n                              Social security number (burgerservicenummer/BSN),\n                              only available for persons.\n                        username:\n                          type: \"string\"\n                          example: \"admin\"\n                          description: |\n                              The username of the user, only available for\n                              employees.\n      tags:\n        - subject\n      responses:\n        '200':\n          description: An employee\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"subject\"\n\n  /subject/import:\n    post:\n      summary: Imports a company or person\n      description: |\n        Imports a company or person in zaaksysteem.nl from the setup\n        integration (NL: zaaktypekoppeling).  For example, when given a company\n        number it will try to import this person from the local chamber of\n        commerce.\n      operationId: subject_import\n      tags:\n        - subject\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - query\n              properties:\n                query:\n                  type: \"object\"\n                  properties:\n                    match:\n                      type: \"object\"\n                      properties:\n                        subject_type:\n                          type: \"string\"\n                          example: \"company\"\n                          enum:\n                            - company\n                            - person\n                        subject.coc_number:\n                          type: \"string\"\n                          example: \"37103637\"\n                          description: \"In NL this is called: kvk number\"\n                        subject.coc_location_number:\n                          type: \"string\"\n                          example: \"12345678\"\n                          description: \"In NL this is called: vestigingsnummer\"\n                        subject.personal_number:\n                          type: \"string\"\n                          example: \"992820637\"\n                          description: \"In NL this is called: burgerservicenummer (BSN)\"\n      responses:\n        '200':\n          description: A company\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"subject\"\n  /subject/create:\n    post:\n      summary: Create a company or person\n      description: |\n        Create a company or person in zaaksysteem.nl to later on use in a case\n        creation call\n      operationId: subject_create\n      tags:\n        - subject\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              $ref: './objects.yaml#/components/schemas/objectSubjectMutation'\n      responses:\n        '200':\n          description: A subject object\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"subject\"\n  /subject/{uuid}/update:\n    post:\n      summary: Update a company or person\n      description: |\n        Update a company or person in zaaksysteem.nl, only manually created\n        entities can be updated. With the exception of contact information\n        which can be updated for all entities.\n      operationId: subject_update\n      tags:\n        - subject\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n          description: \"UUID of the company/person to update\"\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              $ref: './objects.yaml#/components/schemas/objectSubjectMutation'\n      responses:\n        '200':\n          description: A subject object\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"subject\"\n  /subject/{uuid}/link:\n    get:\n      summary: |\n        Get the relationship (or link) from a contact to another subject or\n        object.\n\n      description: |\n        You can link subjects to other subjects and objects\n\n      operationId: subject_link_show\n      tags:\n        - subject\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n          description: \"UUID of the company/person/employee to show relations with\"\n          schema:\n            type: string\n            format: uuid\n      responses:\n        '200':\n          description: A list of linked objects and subjects\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"set\"\n  /subject/{uuid}/link/add:\n    post:\n      summary: |\n        Add the relationship (or link) from a contact to another subject or\n        object.\n\n      description: |\n        You can link subjects to other subjects and objects\n\n      operationId: subject_link_add\n      tags:\n        - subject\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n          description: \"UUID of the company/person to update\"\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"./objects.yaml#/components/schemas/objectContactLinkContent\"\n\n      responses:\n        '200':\n          description: A list of linked objects and subjects\n          content:\n            application/json:\n              schema:\n                $ref: \"./objects.yaml#/components/schemas/objectContactLink\"\n  /subject/{uuid}/link/remove:\n    post:\n      summary: |\n        Remove the relationship (or link) from a contact to another subject or\n        object.\n\n      description: |\n        You can link subjects to other subjects and objects\n\n      operationId: subject_link_remove\n      tags:\n        - subject\n      parameters:\n        - name: uuid\n          in: path\n          required: true\n          description: \"UUID of the company/person to update\"\n          schema:\n            type: string\n            format: uuid\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"./objects.yaml#/components/schemas/objectContactLinkContent\"\n\n      responses:\n        '200':\n          description: Confirmation of the handled action\n          content:\n            application/json:\n              schema:\n                $ref: \"./objects.yaml#/components/schemas/messageAck\"\n  /address:\n    get:\n      summary: Returns a list of addresses\n      description: |\n        Returns a list of addresses matching the given parameters.\n      operationId: addresses\n      tags:\n        - address\n      parameters:\n        - name: \"query:match:zipcode\"\n          in: \"query\"\n          description: \"Find addresses based on zipcode\"\n          required: false\n          schema:\n            type: \"string\"\n          example: \"1234AA\"\n        - name: \"query:match:street_number\"\n          in: \"query\"\n          description: \"Find addresses based on housenumber\"\n          required: false\n          schema:\n            type: \"string\"\n          example: \"55\"\n        - name: \"query:match:street_number_suffix\"\n          in: \"query\"\n          description: \"Find addresses based on suffix of house\"\n          required: false\n          schema:\n            type: \"string\"\n          example: \"hs\"\n        - name: \"query:match:street_number_letter\"\n          in: \"query\"\n          description: \"Find addresses based on houseletter\"\n          required: false\n          schema:\n            type: \"string\"\n          example: \"a\"\n      responses:\n        '200':\n          description: A paged list of cases\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"address\"\n  /document/get_by_number/{document_id}:\n    get:\n      summary: Retrieves a single document for the given document id\n      description: |\n        Returns a representation of a document with the related\n        file information on disk\"\n      operationId: document_by_id\n      tags:\n        - document\n      parameters:\n        - name: \"document_id\"\n          in: \"path\"\n          required: true\n          description: \"The number of the document\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n            description: \"Number of document\"\n            example: \"72975f99-65b0-4651-9f08-281165b74550\"\n      responses:\n        '200':\n          description: A single document\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"document\"\n  /document/get_by_number/{document_id}/upload:\n    post:\n      summary: Uploads a new file for the given document number\n      description: |\n        Uploads a new file and returns the JSON object representing this file\n\n        Make sure you post these one file in a multipart/form-data style, as it\n        were a normal form element. Example:\n\n        ```\n        \u003cform method=\"post\" action=\"/api/v1/document/get_by_number/55/upload\"\n              enctype=\"multipart/form-data\"\u003e\n          \u003cinput type=\"file\" name=\"upload\"\u003e\n        \u003c/form\u003e\n        ```\n\n        Or via curl:\n\n        ```\n        curl \\\n          -H \"API-Interface-Id: ????\" \\\n          -H \"API-Key: ????\"\n          -H \"Content-Type: multipart/form-data\" \\\n          -F upload=@FilestoreTest.txt\u0026upload=@test.jpg \\\n          https://{instance}.zaaksysteem.nl/api/v1/document/get_by_number/55/upload\n        ```\n      operationId: document_by_id_upload\n      tags:\n        - document\n      parameters:\n        - name: \"document_id\"\n          in: \"path\"\n          required: true\n          description: \"The number of the document\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n            description: \"Number of document\"\n            example: \"72975f99-65b0-4651-9f08-281165b74550\"\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                upload:\n                  type: array\n                  items:\n                    type: string\n                    format: binary\n      responses:\n        '200':\n          description: A single document response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"document\"\n  /document/get_by_number/{document_id}/update:\n    post:\n      summary: Updates metadata of a file for the given document number\n      description: \"Updates metadata of a file for the given document number\"\n      operationId: document_by_id_update\n      tags:\n        - document\n      parameters:\n        - name: \"document_id\"\n          in: \"path\"\n          required: true\n          description: \"The number of the document\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n            description: \"Number of document\"\n            example: \"72975f99-65b0-4651-9f08-281165b74550\"\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: \"object\"\n              required:\n                - metadata\n              properties:\n                number:\n                  type: \"integer\"\n                  format: \"in64\"\n                  example: 444\n                  description: \"New number of document\"\n                case_number:\n                  type: \"integer\"\n                  format: \"in64\"\n                  example: 123\n                  description: \"Move document to case number\"\n                metadata:\n                  $ref: './objects.yaml#/components/schemas/objectDocumentMetadata'\n      responses:\n        '200':\n          description: A single document response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"document\"\n  /document/reserve_number:\n    post:\n      summary: Reserve a unique document number for late use\n      description: |\n        Returns an object containing the next serial for usage in an upload or\n        update call.\n      operationId: document_reserve\n      tags:\n        - document\n      responses:\n        '200':\n          description: A single document response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"serial\"\n  /legal_entity_types:\n    get:\n      summary: Returns a list of legal entity types for companies\n      description: |\n        Returns a list of legal entity types for companies, like \"eenmanszaak\"\n        or \"Besloten Vennootschap\"\n      operationId: legal_entity_types\n      tags:\n        - constants\n      responses:\n        '200':\n          description: A list of notes\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"legal_entity_type\"\n  /legal_entity_types/{entity_id}:\n    get:\n      summary: Finds a legal entity type by id\n      description: |\n        Finds a legal entity types for companies by id, like \"eenmanszaak\" or\n        \"Besloten Vennootschap\"\n      operationId: legal_entity_types_get\n      tags:\n        - constants\n      parameters:\n        - name: \"entity_id\"\n          in: \"path\"\n          required: true\n          description: \"The id of this entity_type\"\n          schema:\n            type: \"integer\"\n            format: \"int64\"\n            description: \"Unique id of this entity type\"\n            example: \"01\"\n      responses:\n        '200':\n          description: A list of files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"legal_entity_type\"\n  /map/ol_settings:\n    get:\n      summary: Retrieves zaaksysteem.nl geographic OpenStreetmap configuration\n      description: |\n        Returns a list of OpenStreetmap layers configured in Zaaksysteem.nl\n      operationId: map_ol_settings\n      tags:\n        - geo\n      responses:\n        '200':\n          description: A list of files\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"ol_settings\"\n  /group:\n    get:\n      summary: Retrieve a listing of groups\n      description: |\n        Will retrieve a list of groups selected by the given ES query.\n\n        You will receive every known data of this object, because it is\n        currently not possible to specify a set of data. Make sure you\n        implement paging when retrieving lot's of content.\n      operationId: groups\n      tags:\n        - group\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/rows_per_page\"\n        - $ref: \"./parameters.yaml#/components/schemas/page\"\n      responses:\n        '200':\n          description: A paged list of groups\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"group\"\n  /group/{uuid}:\n    get:\n      summary: Retrieves a group by its UUID\n      description: |\n        Retrieves a single group selected by the given *uuid* of this object.\n      operationId: group_get\n      tags:\n        - group\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single group response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"group\"\n  /role:\n    get:\n      summary: Retrieve a listing of roles\n      description: |\n        Will retrieve a list of roles selected by the given ES query.\n\n        You will receive every known data of this object, because it is\n        currently not possible to specify a set of data. Make sure you\n        implement paging when retrieving lot's of content.\n      operationId: roles\n      tags:\n        - role\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/rows_per_page\"\n        - $ref: \"./parameters.yaml#/components/schemas/page\"\n      responses:\n        '200':\n          description: A paged list of roles\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"role\"\n  /role/{uuid}:\n    get:\n      summary: Retrieves a role by its UUID\n      description: |\n        Retrieves a single role selected by the given *uuid* of this object.\n      operationId: role_get\n      tags:\n        - role\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single role response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n  /email_template:\n    get:\n      summary: Retrieve a listing of municipality codes\n      description: |\n        Will retrieve a list of municipality codes selected by the given ES query.\n\n        You will receive every known data of this object, because it is\n        currently not possible to specify a set of data. Make sure you\n        implement paging when retrieving lot's of content.\n      operationId: email_templates\n      tags:\n        - email_template\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/rows_per_page\"\n        - $ref: \"./parameters.yaml#/components/schemas/page\"\n      responses:\n        '200':\n          description: A paged list of email templates\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"email_template\"\n  /email_template/{uuid}:\n    get:\n      summary: Retrieves an email template by its UUID\n      description: |\n        Retrieves a single email template selected by the given *uuid* of this object.\n      operationId: email_template_get\n      tags:\n        - email_template\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single email template response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"email_template\"\n  /general/municipality_code:\n    get:\n      summary: Retrieve a listing of municipality codes\n      description: |\n        Will retrieve a list of municipality codes selected by the given ES query.\n\n        You will receive every known data of this object, because it is\n        currently not possible to specify a set of data. Make sure you\n        implement paging when retrieving lot's of content.\n      operationId: municipality_codes\n      tags:\n        - municipality_code\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/rows_per_page\"\n        - $ref: \"./parameters.yaml#/components/schemas/page\"\n      responses:\n        '200':\n          description: A paged list of roles\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponseSet'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                        properties:\n                          rows:\n                            type: \"array\"\n                            items:\n                              type: \"object\"\n                              properties:\n                                type:\n                                  type: \"string\"\n                                  example: \"municipality_code\"\n  /general/municipality_code/{uuid}:\n    get:\n      summary: Retrieves a municipality by its UUID\n      description: |\n        Retrieves a single municipality code selected by the given *uuid* of this object.\n      operationId: municipality_code_get\n      tags:\n        - municipality_code\n      parameters:\n        - $ref: \"./parameters.yaml#/components/schemas/uuid\"\n      responses:\n        '200':\n          description: A single municipality code response\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: './responses.yaml#/components/schemas/defaultResponse'\n                type: \"object\"\n                properties:\n                  result:\n                    type: \"object\"\n                    properties:\n                      instance:\n                        type: \"object\"\n                      type:\n                        type: \"string\"\n                        example: \"municipality_code\"\ncomponents:\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: header\n      name: API-Key\n      description: |\n        API key which is setup in the integration for this API (in NL called\n        \"Koppelingenconfiguratie\"). Make sure you generate a long enough key,\n        because it can be used to retrieve **very** sensitive data.\n    apiInterfaceId:\n      type: apiKey\n      in: header\n      name: API-Interface-Id\n      description: |\n        The Interface-ID defining which integration to use when talking to our\n        API. It is shown in the list of integrations (in NL called\n        \"Koppelingenconfiguratie\").\nsecurity:\n  - apiKey: []\n    apiInterfaceId: []\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /case/{uuid}/note/{note_uuid}/delete: post: operation \"case_note_delete\": parameters: parse parameter \"\": resolve \"./parameters.yaml#/components/schemas/uuid\" reference: invalid parameter reference"
}