{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Backbase/golden-sample-services"
		},
		"file": {
			"name": "openapi-v1.yaml",
			"size": 0,
			"path": "api/store-client-api/src/main/resources/openapi-v1.yaml",
			"byteSize": 2618,
			"content": "openapi: 3.0.3\ninfo:\n  title: Store Client API\n  version: 1.0.0\n  description: Description of the API...\n  license:\n    name: License\n    url: http://atorres.es\n  x-icon: credit_card\nservers:\n  - description: Prism mock server\n    url: http://localhost:4010\n  - description: Service running locally\n    url: http://localhost:9917\ntags:\n  - name: product-composite-client\npaths:\n  /client-api/v1/product-composite/{productId}:\n    get:\n      tags:\n        - product-composite-client\n      summary: Retrieve product view by ID\n      description: |\n        # Normal response\n        If the requested product ID is found, then the method will return information regarding:\n        1. Base product information\n        1. Reviews\n\n        # Expected partial and error responses\n        In the following cases, only a partial response will be created (used to simplify testing of error conditions)\n\n        ## Product ID 113\n        200 - Ok, but no recommendations will be returned\n\n        ## Product ID 213\n        200 - Ok, but no reviews will be returned\n\n        ## Non numerical product ID\n        400 - A \u003cb\u003eBad Request\u003c/b\u003e error will be returned\n\n        ## Product ID 13\n        404 - A \u003cb\u003eNot Found\u003c/b\u003e error will be returned\n\n        ## Negative product IDs\n        422 - An \u003cb\u003eUnprocessable Entity\u003c/b\u003e error will be returned\n      operationId: getProductById\n      parameters:\n        - name: productId\n          in: path\n          description: productId\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        '200':\n          $ref: 'schemas/definitions.yaml#/components/responses/200ProductAggregate'\n        '400':\n          $ref: 'lib/common-types.yaml#/components/responses/400BadRequest'\n        '401':\n          $ref: 'lib/common-types.yaml#/components/responses/401Unauthorized'\n        '404':\n          $ref: 'lib/common-types.yaml#/components/responses/404NotFound'\n        '500':\n          $ref: 'lib/common-types.yaml#/components/responses/500InternalServerError'\n\n  /client-api/v1/product-composite:\n    post:\n      tags:\n        - product-composite-client\n      summary: Create a product aggregate\n      description: Creates a product aggregate\n      operationId: postProduct\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: 'schemas/definitions.yaml#/components/schemas/ProductAggregate'\n            example:\n              $ref: examples/product-aggregate.json\n      responses:\n        '200':\n          $ref: 'schemas/definitions.yaml#/components/responses/200ProductAggregate'\n",
			"canonicalURL": "/github.com/Backbase/golden-sample-services@f49771c269b17b77d6e8987c1019b766e3b55665/-/blob/api/store-client-api/src/main/resources/openapi-v1.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Backbase/golden-sample-services/blob/f49771c269b17b77d6e8987c1019b766e3b55665/api/store-client-api/src/main/resources/openapi-v1.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/client-api/v1/product-composite\": at 1:238: post: operation \"postProduct\": at 1:246: requestBody: at 1:333: at 1:344: parse content: application/json: at 1:364: schema: at 1:427: parse schema: resolve \"schemas/definitions.yaml#/components/schemas/ProductAggregate\": external \"schemas/definitions.yaml\": get: file: local file reference is not allowed"
}