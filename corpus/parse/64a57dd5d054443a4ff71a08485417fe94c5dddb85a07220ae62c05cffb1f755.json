{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/quotes.rest/3.1/openapi.yaml",
			"byteSize": 120407,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://quotes.rest\n  - url: http://quotes.rest\n  - url: http://api01.quotes.rest\ninfo:\n  contact:\n    name: They Said So\n    url: https://theysaidso.com/api/quote\n    x-twitter: theysaidso\n  description: \" They Said So Quotes API offers a complete feature rich REST API access to its quotes platform.  This is the documentation for the world famous [quotes API](https://theysaidso.com/api).  If you are a subscriber and you are trying this from a console add 'X-TheySaidSo-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://theysaidso.com/api.\"\n  termsOfService: https://theysaidso.com/terms#api\n  title: They Said So Quotes API\n  version: \"3.1\"\n  x-apisguru-categories:\n    - open_data\n  x-logo:\n    url: https://twitter.com/theysaidso/profile_image?size=original\n  x-origin:\n    - format: openapi\n      url: http://quotes.rest/yaml/theysaidso.quotes.openapi.yaml?v1.1\n      version: \"3.0\"\n  x-providerName: quotes.rest\ntags:\n  - description: Access quote of the day service. Use this to get the quote of the day in various categories. This is a free API that is available to public. You must credit They Said So if you are using the free version.\n    externalDocs:\n      description: Find out more\n      url: https://theysaidso.com/api/quote#qod\n    name: Quote of the day\n  - description: Access random quote service. Use this to get random quotes , quotes filtered by authors or tags etc. You need an API key to access this service.\n    name: Quote\n  - description: Create and manage your own Quotes. You need an API key to access this service.\n    name: Private Quotes\n  - description: Create beatiful quote images or get one of the premade images. You need an API key to access this service.\n    externalDocs:\n      description: Find out more about image\n      url: https://theysaidso.com/api/quote#image\n    name: Quote Images\n  - description: Access Qshow - quote collection service. Create curated quotes collection. You can group quotes by any way you want and access them as a single unit. You need an API key to access this service.\n    name: Qshow\npaths:\n  /qod:\n    get:\n      description: |\n        Gets `Quote of the Day`. Optional `category` param determines the category of returned quote of the day\n      parameters:\n        - description: QOD Category\n          in: query\n          name: category\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Language of the QOD. The language must be supported in our QOD system.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"quotes\": [\n                                {\n                                    \"quote\": \"Do not worry if you have built your castles in the air. They are where they should be. Now put the foundations under them.\",\n                                    \"length\": \"122\",\n                                    \"author\": \"Henry David Thoreau\",\n                                    \"tags\": [\n                                        \"dreams\",\n                                        \"inspire\",\n                                        \"worry\"\n                                    ],\n                                    \"category\": \"inspire\",\n                                    \"date\": \"2016-11-21\",\n                                    \"title\": \"Inspiring Quote of the day\",\n                                    \"background\": \"https://theysaidso.com/img/bgs/man_on_the_mountain.jpg\",\n                                    \"id\": \"mYpH8syTM8rf8KFORoAJmQeF\"\n                                }\n                            ]\n                        }\n                    }\n              schema:\n                $ref: \"#/components/schemas/QuoteResponse\"\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    \u003c?xml version=\"1.0\"?\u003e \u003cresponse\u003e\n                      \u003csuccess\u003e\n                        \u003ctotal\u003e1\u003c/total\u003e\n                      \u003c/success\u003e\n                      \u003ccontents\u003e\n                        \u003cquotes\u003e\n                          \u003cquote\u003eSometimes you climb out of bed in the morning and you think, I'm not going to make it, but you laugh inside \u0026#x2014; remembering all the times you've felt that way.\u003c/quote\u003e\n                          \u003clength\u003e164\u003c/length\u003e\n                          \u003cauthor\u003eCharles Bukowski\u003c/author\u003e\n                          \u003ctags\u003edepression\u003c/tags\u003e\n                          \u003ctags\u003einspire\u003c/tags\u003e\n                          \u003ctags\u003etso-life\u003c/tags\u003e\n                          \u003ccategory\u003einspire\u003c/category\u003e\n                          \u003cdate\u003e2016-11-23\u003c/date\u003e\n                          \u003ctitle\u003eInspiring Quote of the day\u003c/title\u003e\n                          \u003cbackground\u003ehttps://theysaidso.com/img/bgs/man_on_the_mountain.jpg\u003c/background\u003e\n                          \u003cid\u003ek7rTMtmveYHUN2ImwxNhhAeF\u003c/id\u003e\n                        \u003c/quotes\u003e\n                      \u003c/contents\u003e\n                    \u003c/response\u003e\n          description: 200  response\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"error\": {\n                        \"code\": 400,\n                        \"message\": \"Bad Request: QOD category not supported for this category and language combination\"\n                      }\n                    }               \n          description: 400  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote of the day\n  /qod/categories:\n    get:\n      description: |\n        Gets a list of `Quote of the Day` Categories.\n      parameters:\n        - description: Language of the QOD category. The language must be supported in our QOD system.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n        - description: Return detailed information of the categories. Note the data format changes between the two values of this switch.\n          in: query\n          name: detailed\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 8\n                        },\n                        \"contents\": {\n                            \"categories\": {\n                                \"inspire\": \"Inspiring Quote of the day\",\n                                \"management\": \"Management Quote of the day\",\n                                \"sports\": \"Sports Quote of the day\",\n                                \"life\": \"Quote of the day about life\",\n                                \"funny\": \"Funny Quote of the day\",\n                                \"love\": \"Quote of the day about Love\",\n                                \"art\": \"Art quote of the day \",\n                                \"students\": \"Quote of the day for students\"\n                            },\n                            \"copyright\": \"2013-15 http://theysaidso.com\"\n                        }\n                    }   \n          description: 200  response\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"error\": {\n                        \"code\": 400,\n                        \"message\": \"No QOD categories defined for this language.\"\n                      }\n                    }                            \n          description: 400  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote of the day\n  /qod/languages:\n    get:\n      description: |\n        Gets a list of supported languages for `Quote of the Day`. \n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 2\n                      },\n                      \"contents\": {\n                        \"languages\": [\n                          \"en\",\n                          \"fr\",\n                          \"ta\"\n                        ]\n                      },\n                      \"baseurl\": \"https://theysaidso.com\",\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote of the day\n  /qshow:\n    delete:\n      description: |\n        Delete a qshow.\n      parameters:\n        - description: Qshow ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              examples:\n                response:\n                  value: \"{}\"\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Qshow not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n    get:\n      description: |\n        Gets a details about a qshow.\n      parameters:\n        - description: Qshow ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"qshow\": {\n                                \"title\": \"A tribute to Steve Jobs!\",\n                                \"description\": \"A collection of great quotes from the master inventor Steve Jobs!\",\n                                \"background\": \"https://theysaidso.com\",\n                                \"language\": \"en\",\n                                \"id\": \"CodzN7F_vU_URoHrPSUvDgeF\"\n                            }\n                        },\n                        \"copyright\": {\n                            \"year\": \"2016-18\",\n                            \"url\": \"http://theysaidso.com\"\n                        }\n                    }\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    \u003c?xml version=\"1.0\"?\u003e \u003cresponse\u003e\n                      \u003csuccess\u003e\n                        \u003ctotal\u003e1\u003c/total\u003e\n                      \u003c/success\u003e\n                      \u003ccontents\u003e\n                        \u003cqshow\u003e\n                          \u003ctitle\u003eA tribute to Steve Jobs!\u003c/title\u003e\n                          \u003cdescription\u003eA collection of great quotes from the master inventor Steve Jobs!\u003c/description\u003e\n                          \u003cbackground\u003ehttps://theysaidso.com\u003c/background\u003e\n                          \u003clanguage\u003een\u003c/language\u003e\n                          \u003cid\u003eCodzN7F_vU_URoHrPSUvDgeF\u003c/id\u003e\n                        \u003c/qshow\u003e\n                      \u003c/contents\u003e\n                      \u003ccopyright\u003e\n                        \u003cyear\u003e2016-18\u003c/year\u003e\n                        \u003curl\u003ehttp://theysaidso.com\u003c/url\u003e\n                      \u003c/copyright\u003e\n                    \u003c/response\u003e\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Qshow not found\"\n                        }\n                    }                 \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n    patch:\n      description: Update an existing qshow.\n      parameters:\n        - description: Qshow ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Qshow title\n          in: query\n          name: title\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Qshow description\n          in: query\n          name: description\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Tags for the qshow\n          explode: true\n          in: query\n          name: tags\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"quote\": {\n                          \"id\": \"CodzN7F_vU_URoHrPSUvDgeF\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Qshow not found\"\n                        }\n                    }                    \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n    put:\n      description: Create and add a new qshow to your private collection.\n      parameters:\n        - description: Qshow title\n          in: query\n          name: title\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Qshow description\n          in: query\n          name: description\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Tags for the qshow\n          explode: true\n          in: query\n          name: tags\n          required: false\n          schema:\n            items:\n              type: string\n            type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"quote\": {\n                          \"id\": \"CodzN7F_vU_URoHrPSUvDgeF\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }              \n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n  /qshow/list:\n    get:\n      description: Get the list of Qshows in They Said So platform.\n      parameters:\n        - description: Response is paged. This parameter controls where response starts the listing at\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Should include public qshows or not in the list\n          in: query\n          name: public\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": \"39\",\n                            \"start\": 0,\n                            \"limit\": 5\n                        },\n                        \"contents\": {\n                            \"qshows\": [\n                                {\n                                    \"title\": \"A tribute to Steve Jobs!\",\n                                    \"description\": \"A collection of great quotes from the master inventor Steve Jobs!\",\n                                    \"background\": \"/img/bgs/stevejobs.jpg\",\n                                    \"language\": \"en\",\n                                    \"id\": \"CodzN7F_vU_URoHrPSUvDgeF\"\n                                },\n                                {\n                                    \"title\": \"Celebrating Life!\",\n                                    \"description\": \"Eat, Sleep, Live your life!\",\n                                    \"background\": \"/img/slide-01.jpg\",\n                                    \"language\": \"en\",\n                                    \"id\": \"opDfpWwAD6lrfxdW_GBoVAeF\"\n                                },\n                                {\n                                    \"title\": \"Books \",\n                                    \"description\": \"Reading is the greatest pleasure for many! Here's to the bookies!\",\n                                    \"background\": \"/img/bgs/book.jpg\",\n                                    \"language\": \"en\",\n                                    \"id\": \"WMeCgo5WpiLk_qlbdAVyQweF\"\n                                },\n                                {\n                                    \"title\": \"Kids\",\n                                    \"description\": \"\",\n                                    \"background\": \"\",\n                                    \"language\": \"en\",\n                                    \"id\": \"sx9reMTiaGzXdt7lbVWntQeF\"\n                                },\n                                {\n                                    \"title\": \"Great quotes to live by\",\n                                    \"description\": \"Here are some powerful words of wisdom that inspire, educate and motivate a person to take action. \",\n                                    \"background\": \"/img/slide-03.jpg\",\n                                    \"language\": \"en\",\n                                    \"id\": \"k_kwBr7BKzxz3vLTQ6TWMQeF\"\n                                }\n                            ]\n                        },\n                        \"copyright\": {\n                            \"year\": \"2016-18\",\n                            \"url\": \"http://theysaidso.com\"\n                        }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    } \n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n  /qshow/quotes:\n    get:\n      description: Get the quotes in a given Qshow.\n      parameters:\n        - description: Qshow ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"qshow\": {\n                                \"title\": \"A tribute to Steve Jobs!\",\n                                \"description\": \"A collection of great quotes from the master inventor Steve Jobs!\",\n                                \"background\": \"https://theysaidso.com/img/bgs/stevejobs.jpg\",\n                                \"language\": \"en\",\n                                \"id\": \"CodzN7F_vU_URoHrPSUvDgeF\"\n                            },\n                            \"quotes\": [\n                                {\n                                    \"quote\": \"A lot of people in our industry haven't had very diverse experiences. So they don't have enough dots to connect, and they end up with very linear solutions without a broad perspective on the problem. The broader one's understanding of the human experience, the better design we will have.\",\n                                    \"length\": \"288\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"design\",\n                                        \"diversity\",\n                                        \"experience\",\n                                        \"linear-thinking\"\n                                    ],\n                                    \"id\": \"6HW5Uopw8VFLRKZEqGKDXQeF\"\n                                },\n                                {\n                                    \"quote\": \"Stay hungry. Stay foolish.\",\n                                    \"length\": \"26\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"inspirational\"\n                                    ],\n                                    \"id\": \"K__p_L1iMZtWulJ1SH4CogeF\"\n                                },\n                                {\n                                    \"quote\": \"Your time is limited, so don't waste it living someone else's life.\",\n                                    \"length\": \"67\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"life-and-living\",\n                                        \"tso-life\"\n                                    ],\n                                    \"id\": \"mFjh_dNB_exJMHbyzRFIvQeF\"\n                                },\n                                {\n                                    \"quote\": \"If you haven't found it yet, keep looking. Don't settle. As with all matters of the heart, you'll know when you find it. And, like any great relationship, it just gets better and better as the years roll on.\",\n                                    \"length\": \"207\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"careers\",\n                                        \"ideas\",\n                                        \"ingenuity\",\n                                        \"match\",\n                                        \"passion\"\n                                    ],\n                                    \"id\": \"l3Cww1Bx7cYGlIpB_wZuOAeF\"\n                                },\n                                {\n                                    \"quote\": \"Details matter, it's worth waiting to get it right.\",\n                                    \"length\": \"51\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"apple\",\n                                        \"ileadership\",\n                                        \"jobs\",\n                                        \"mac\",\n                                        \"macintosh\",\n                                        \"steve\"\n                                    ],\n                                    \"id\": \"A8gqJ6u2x3ZdUDU5VlnIxgeF\"\n                                },\n                                {\n                                    \"quote\": \"Be a yardstick of quality. Some people aren't used to an environment where excellence is expected.\",\n                                    \"length\": \"98\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"environment\",\n                                        \"excellence\",\n                                        \"people\",\n                                        \"quality\"\n                                    ],\n                                    \"id\": \"rlqbJLNmDMPT_qkCpDBjEgeF\"\n                                },\n                                {\n                                    \"quote\": \"If you live each day as it was your last, someday you'll most certainly be right\",\n                                    \"length\": \"80\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"death\",\n                                        \"rip\",\n                                        \"steve\",\n                                        \"tso-life\"\n                                    ],\n                                    \"id\": \"sBse0_uUemQD2l_qdL9BJgeF\"\n                                },\n                                {\n                                    \"quote\": \"Death is the destination we all share, no one has ever escaped it. And that is as it should be because death is very likely the single best invention of life.\",\n                                    \"length\": \"158\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"death\",\n                                        \"destination\",\n                                        \"invention\",\n                                        \"life-and-death\",\n                                        \"tso-life\"\n                                    ],\n                                    \"id\": \"LvjYLbdYzBOAqPPKfohvmQeF\"\n                                },\n                                {\n                                    \"quote\": \"Why join the navy if you can be a pirate?\",\n                                    \"length\": \"41\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"career\"\n                                    ],\n                                    \"id\": \"S6xVf_Nluid5r_0iO73ArQeF\"\n                                },\n                                {\n                                    \"quote\": \"One more thing...\",\n                                    \"length\": \"17\",\n                                    \"author\": \"Steve Jobs\",\n                                    \"tags\": [\n                                        \"inspiration\"\n                                    ],\n                                    \"id\": \"X2QetehlwForyBZ5Nbp2YQeF\"\n                                }\n                            ]\n                        },\n                        \"copyright\": {\n                            \"year\": \"2016-18\",\n                            \"url\": \"http://theysaidso.com\"\n                        }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Qshow not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n  /qshow/quotes/add:\n    post:\n      description: Add a quote to a given Qshow.\n      parameters:\n        - description: Qshow ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Quote ID to add the qshow collection\n          in: query\n          name: quoteid\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"Quote added\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Qshow not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n  /qshow/quotes/remove:\n    post:\n      description: Remove a quote to a given Qshow.\n      parameters:\n        - description: Qshow ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Quote ID to remove from the qshow collection\n          in: query\n          name: quoteid\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"Quote removed from Qshow\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Qshow not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Qshow\n  /quote:\n    delete:\n      description: |\n        Delete a quote. The user needs to be the owner of the quote to be able to delete it.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              examples:\n                response:\n                  value: \"{}\"\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\n    get:\n      description: Gets a `Quote` with a given `id`.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: id\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"quote\": \"The day soldiers stop bringing you their problems is the day you have stopped leading them. They have either lost confidence that you can help them or concluded that you do not care. Either case is a failure of leadership.\",\n                        \"author\": \"Colin Powell\",\n                        \"id\": \"XLa1AmylKv1XF_dXcyhvdweF\",\n                        \"language\": \"en\",\n                        \"sfw\": \"sfw\",\n                        \"permalink\": \"https://theysaidso.com/quote/colin-powell-the-day-soldiers-stop-bringing-you-their-problems-is-the-day-you-ha\",\n                        \"requested_category\": \"inspire\",\n                        \"categories\": [\n                          \"confidence\",\n                          \"leadership\",\n                          \"management\",\n                          \"tod\"\n                        ]\n                      }\n                    }\n              schema:\n                $ref: \"#/components/schemas/QuoteResponse\"\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    \u003c?xml version=\"1.0\"?\u003e \u003cresponse\u003e\n                      \u003csuccess\u003e\n                        \u003ctotal\u003e1\u003c/total\u003e\n                      \u003c/success\u003e\n                      \u003ccontents\u003e\n                        \u003cquotes\u003e\n                          \u003cquote\u003eSometimes you climb out of bed in the morning and you think, I'm not going to make it, but you laugh inside \u0026#x2014; remembering all the times you've felt that way.\u003c/quote\u003e\n                          \u003clength\u003e164\u003c/length\u003e\n                          \u003cauthor\u003eCharles Bukowski\u003c/author\u003e\n                          \u003ctags\u003edepression\u003c/tags\u003e\n                          \u003ctags\u003einspire\u003c/tags\u003e\n                          \u003ctags\u003etso-life\u003c/tags\u003e\n                          \u003ccategory\u003einspire\u003c/category\u003e\n                          \u003cdate\u003e2016-11-23\u003c/date\u003e\n                          \u003ctitle\u003eInspiring Quote of the day\u003c/title\u003e\n                          \u003cbackground\u003ehttps://theysaidso.com/img/bgs/man_on_the_mountain.jpg\u003c/background\u003e\n                          \u003cid\u003ek7rTMtmveYHUN2ImwxNhhAeF\u003c/id\u003e\n                        \u003c/quotes\u003e\n                      \u003c/contents\u003e\n                    \u003c/response\u003e        \n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n        - Private Quotes\n    patch:\n      description: Update a quote\n      parameters:\n        - description: Quote ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Quote\n          in: query\n          name: quote\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Quote Author\n          in: query\n          name: author\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Language. If not supplied an auto detection mechanism will be used to detect a language.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"quote\": {\n                          \"id\": \"0tztT1wYHRzdTf7jIccAzweF\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }              \n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\n    post:\n      description: Add a new quote to your private collection. Same as 'PUT' but added since some clients don't handle PUT well.\n      parameters:\n        - description: Quote\n          in: query\n          name: quote\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Quote Author\n          in: query\n          name: author\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Language. If not supplied an auto detection mechanism will be used to detect a language.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"quote\": {\n                          \"id\": \"0tztT1wYHRzdTf7jIccAzweF\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }              \n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\n    put:\n      description: Add a new quote to your private collection.\n      parameters:\n        - description: Quote\n          in: query\n          name: quote\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Quote Author\n          in: query\n          name: author\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Language. If not supplied an auto detection mechanism will be used to detect a language.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                        \"quote\": {\n                          \"id\": \"0tztT1wYHRzdTf7jIccAzweF\"\n                        }\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }              \n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\n  /quote/authors/popular:\n    get:\n      description: |\n        Gets a list of popular author names in the system. \n      parameters:\n        - description: Language. A same author may have quotes in two or more different languages. So for example 'Mahatma Gandhi' may be returned for language \"en\"(English), and \"மஹாத்மா காந்தி\" may be returned when the language is \"ta\" (Tamil).\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n        - description: Should return detailed author information such as `birthday`, `death date`, `occupation`, `description` etc. Only available at certain subscription levels.\n          in: query\n          name: detailed\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n        - description: Response is paged. This parameter controls where response starts the listing at\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 5\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": \"2646\",\n                        \"range\": {\n                          \"start\": 0,\n                          \"end\": 5\n                        }\n                      },\n                      \"contents\": {\n                        \"authors\": [\n                          {\n                            \"name\": \"Robert Louis Stevenson\",\n                            \"slug\": \"robert-louis-stevenson\",\n                            \"occupation\": \"Author\",\n                            \"born\": \"1850-11-13 00:00:00\",\n                            \"dead\": \"1894-12-03 00:00:00\",\n                            \"description\": null,\n                            \"id\": \"_kobR6QdDXDw_HCo2J_n0AeF\"\n                          },\n                          {\n                            \"name\": \"Steve Jobs\",\n                            \"slug\": \"steve-jobs\",\n                            \"occupation\": \"Business\",\n                            \"born\": \"1955-02-24 00:00:00\",\n                            \"dead\": \"2011-10-05 00:00:00\",\n                            \"description\": \"\",\n                            \"id\": \"WKCl3utqIPYnCXiZubNNKAeF\"\n                          },\n                          {\n                            \"name\": \"Steve Maraboli\",\n                            \"slug\": \"steve-maraboli\",\n                            \"occupation\": null,\n                            \"born\": null,\n                            \"dead\": null,\n                            \"description\": null,\n                            \"id\": \"GfOeOBX2Gwp1emdunDiXDweF\"\n                          },\n                          {\n                            \"name\": \"Steven Wright\",\n                            \"slug\": \"steven-wright\",\n                            \"occupation\": \"Comic\",\n                            \"born\": \"1955-12-06 00:00:00\",\n                            \"dead\": null,\n                            \"description\": null,\n                            \"id\": \"j144PP_Pew72rXVrRKAmgAeF\"\n                          },\n                          {\n                            \"name\": \"Wallace Stevens\",\n                            \"slug\": \"wallace-stevens\",\n                            \"occupation\": \"Poet\",\n                            \"born\": \"1879-10-02 00:00:00\",\n                            \"dead\": \"1955-08-02 00:00:00\",\n                            \"description\": null,\n                            \"id\": \"IF8HZp3hHsP_BzepN65atQeF\"\n                          }\n                        ],\n                        \"matched_query\": \"steve\"\n                      },\n                      \"baseurl\": \"https://theysaidso.com\",\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"error\": {\n                        \"code\": 400,\n                        \"message\": \"Bad Request: Author details retrieval options are not supported for this user (please upgrade your subscription)\"\n                      }\n                    }\n          description: 400  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/authors/search:\n    get:\n      description: |\n        Gets a list of author names in the system. \n      parameters:\n        - description: Text string to search for in author names\n          in: query\n          name: query\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Language. A same author may have quotes in two or more different languages. So for example 'Mahatma Gandhi' may be returned for language \"en\"(English), and \"மஹாத்மா காந்தி\" may be returned when the language is \"ta\" (Tamil).\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n        - description: Should return detailed author information such as `birthday`, `death date`, `occupation`, `description` etc. Only available at certain subscription levels.\n          in: query\n          name: detailed\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n        - description: Response is paged. This parameter controls where response starts the listing at\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 1\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": \"2646\",\n                        \"range\": {\n                          \"start\": 0,\n                          \"end\": 5\n                        }\n                      },\n                      \"contents\": {\n                        \"authors\": [\n                          {\n                            \"name\": \"Robert Louis Stevenson\",\n                            \"slug\": \"robert-louis-stevenson\",\n                            \"occupation\": \"Author\",\n                            \"born\": \"1850-11-13 00:00:00\",\n                            \"dead\": \"1894-12-03 00:00:00\",\n                            \"description\": null,\n                            \"id\": \"_kobR6QdDXDw_HCo2J_n0AeF\"\n                          },\n                          {\n                            \"name\": \"Steve Jobs\",\n                            \"slug\": \"steve-jobs\",\n                            \"occupation\": \"Business\",\n                            \"born\": \"1955-02-24 00:00:00\",\n                            \"dead\": \"2011-10-05 00:00:00\",\n                            \"description\": \"\",\n                            \"id\": \"WKCl3utqIPYnCXiZubNNKAeF\"\n                          },\n                          {\n                            \"name\": \"Steve Maraboli\",\n                            \"slug\": \"steve-maraboli\",\n                            \"occupation\": null,\n                            \"born\": null,\n                            \"dead\": null,\n                            \"description\": null,\n                            \"id\": \"GfOeOBX2Gwp1emdunDiXDweF\"\n                          },\n                          {\n                            \"name\": \"Steven Wright\",\n                            \"slug\": \"steven-wright\",\n                            \"occupation\": \"Comic\",\n                            \"born\": \"1955-12-06 00:00:00\",\n                            \"dead\": null,\n                            \"description\": null,\n                            \"id\": \"j144PP_Pew72rXVrRKAmgAeF\"\n                          },\n                          {\n                            \"name\": \"Wallace Stevens\",\n                            \"slug\": \"wallace-stevens\",\n                            \"occupation\": \"Poet\",\n                            \"born\": \"1879-10-02 00:00:00\",\n                            \"dead\": \"1955-08-02 00:00:00\",\n                            \"description\": null,\n                            \"id\": \"IF8HZp3hHsP_BzepN65atQeF\"\n                          }\n                        ],\n                        \"matched_query\": \"steve\"\n                      },\n                      \"baseurl\": \"https://theysaidso.com\",\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"400\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"error\": {\n                        \"code\": 400,\n                        \"message\": \"Bad Request: Author details retrieval options are not supported for this user (please upgrade your subscription)\"\n                      }\n                    }\n          description: 400  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/categories/popular:\n    get:\n      description: |\n        Gets a list of popular `Quote` Categories.\n      parameters:\n        - description: Response is paged. This parameter controls where response starts the listing at\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 5\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 18,\n                        \"range\": {\n                          \"start\": 0,\n                          \"end\": 5\n                        }\n                      },\n                      \"contents\": {\n                        \"categories\": [\n                          {\n                            \"name\": \"inspirational\",\n                            \"title\": \"Inspirational Quotes\"\n                          },\n                          {\n                            \"name\": \"work\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"women\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"people\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"death\",\n                            \"title\": null\n                          }\n                        ]\n                      },\n                      \"baseurl\": \"https://theysaidso.com\",\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }               \n          description: 200  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/categories/search:\n    get:\n      description: |\n        Gets a list of `Quote` Categories matching the query string.\n      parameters:\n        - description: Text string to search for in the categories\n          in: query\n          name: query\n          required: false\n          schema:\n            default: 0\n            format: string\n            type: string\n        - description: Response is paged. This parameter controls where response starts the listing at\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Response is paged. This parameter controls how many is returned in the result. The maximum depends on the subscription level.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 2\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 34,\n                        \"range\": {\n                          \"start\": 0,\n                          \"end\": 5\n                        }\n                      },\n                      \"contents\": {\n                        \"categories\": [\n                          {\n                            \"name\": \"inspire\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"inspired\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"words-to-inspire-you\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"self-inspired\",\n                            \"title\": null\n                          },\n                          {\n                            \"name\": \"inspire-the-world\",\n                            \"title\": null\n                          }\n                        ]\n                      },\n                      \"baseurl\": \"https://theysaidso.com\",\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/dislike:\n    delete:\n      description: Remove the disLike for the given Quote as a user of the API Key.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": \"Like / Dislike removed from quote.\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }                       \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n    post:\n      description: Dislike the given Quote as a user of the API Key. Same as `put` but a convenient alias for those clients that don't support `put` cleanly.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": \"Disliked the quote\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n    put:\n      description: Dislike the given Quote as a user of the API Key. Some clients don't cleanly support `PUT`, in such scenarios use the `POST` version of this.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": \"Disliked the quote\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/image:\n    delete:\n      description: |\n        Delete a quote image. The user needs to be the owner of the quote image to be able to delete it.\n      parameters:\n        - description: Quote Image ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              examples:\n                response:\n                  value: \"{}\"\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n    get:\n      description: |\n        Gets a Quote image for a given id. Response can be an image file as a binary or a base64 encoded contents wrapped in json. `TODO`\n      parameters:\n        - description: Quote Image id\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Should the response be a direct file download of the image or a base64 encoded image file wrapped in json?\n          in: query\n          name: binary\n          required: false\n          schema:\n            default: true\n            format: boolean\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"qimage\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"quote_id\": \"5e0QH_0k5srOUN1Wdu9AgweF\",\n                          \"permalink\": \"https://theysaidso.com/i/75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"download_uri\": \"https://theysaidso.com/i/image/75c3EoOmPVolqfB4KeUhXgeF\"\n                        }\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    } \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image not found\"\n                        }\n                    }                       \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n    put:\n      description: |\n        Create a new quote image for a given quote. Choose background colors/images , choose different font styles and generate a beautiful quote image. Did you just had a feeling of being a god or what?!\n      parameters:\n        - description: Quote id\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Background Image id ( Will override bgcolor if supplied)\n          in: query\n          name: bgimage_id\n          required: false\n          schema:\n            default: theysaidso_default_background_image\n            format: string\n            type: string\n        - description: Background Color(if background image id is not supplied)\n          in: query\n          name: bg_color\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Font id\n          in: query\n          name: font_id\n          required: false\n          schema:\n            default: theysaidso_default_font\n            format: string\n            type: string\n        - description: Text Color\n          in: query\n          name: text_color\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Text/font size\n          in: query\n          name: text_size\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Horizontal text Alignment Value\n          in: query\n          name: halign\n          required: false\n          schema:\n            default: center\n            format: string\n            type: string\n        - description: Vertical text Alignment Value\n          in: query\n          name: valign\n          required: false\n          schema:\n            default: center\n            format: string\n            type: string\n        - description: Image Width(By default this takes the width of the background image)\n          in: query\n          name: width\n          required: false\n          schema:\n            format: integer\n            type: integer\n        - description: Image Height(By default this takes the height of the background image)\n          in: query\n          name: height\n          required: false\n          schema:\n            format: integer\n            type: integer\n        - description: Disable They Said So branding (Only available in certain subscription levels. Ignored in other levels)\n          in: query\n          name: branding\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n        - description: Should include a transparent layer between the text and the background image? This helps when the background image is bright and obscures the text.\n          in: query\n          name: include_transparent_layer\n          required: false\n          schema:\n            default: true\n            format: boolean\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    } \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image not found\"\n                        }\n                    }                         \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/background:\n    delete:\n      description: |\n        Delete a background image file. The user needs to be the owner of the background image to be able to delete it.\n      parameters:\n        - description: Font ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": \"Resource Deleted\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Resource not found\"\n                        }\n                    }                                          \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n    post:\n      description: Add an image for use later as a quote background image.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                image:\n                  description: Image file to add to your collection (png/jpg/gif are supported)\n                  format: binary\n                  type: string\n                tags:\n                  description: Optional comma separated tags\n                  format: string\n                  type: string\n              required:\n                - image\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                         \"id\" : \"afBLte5678bnzxc_iRbcg\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/background/list:\n    get:\n      description: |\n        Lists background images in your private collection. \n      parameters:\n        - description: Response is paged. This parameter determines where the response should start.\n          in: query\n          name: start\n          required: false\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"qimage\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"quote_id\": \"5e0QH_0k5srOUN1Wdu9AgweF\",\n                          \"permalink\": \"https://theysaidso.com/i/75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"download_uri\": \"https://theysaidso.com/i/image/75c3EoOmPVolqfB4KeUhXgeF\"\n                        }\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }     \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image matching the query criteria not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/background/search:\n    get:\n      description: |\n        Searches for a background image with a given tag. \n      parameters:\n        - description: Tag string\n          in: query\n          name: query\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"qimage\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"quote_id\": \"5e0QH_0k5srOUN1Wdu9AgweF\",\n                          \"permalink\": \"https://theysaidso.com/i/75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"download_uri\": \"https://theysaidso.com/i/image/75c3EoOmPVolqfB4KeUhXgeF\"\n                        }\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }     \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image matching the query criteria not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/background/tags/add:\n    post:\n      description: Add a tag to a given Image.\n      parameters:\n        - description: Image ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Image not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/background/tags/remove:\n    post:\n      description: Remove a tag from a given Image.\n      parameters:\n        - description: Image ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Image not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/font:\n    delete:\n      description: |\n        Delete a font file. The user needs to be the owner of the font to be able to delete it.\n      parameters:\n        - description: Font ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": \"Resource Deleted\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Resource not found\"\n                        }\n                    }                                          \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n    post:\n      description: Add a font file for use later in creating a quote image. This is essentially a `PUT` but not many clients handle PUT with binary stream i.e. a file, gracefully.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                font:\n                  description: Font file to add to your collection (ttf/otf are supported)\n                  format: binary\n                  type: string\n                tags:\n                  description: Optional comma separated tags\n                  format: string\n                  type: string\n              required:\n                - font\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"content\": {\n                         \"id\" : \"afBLte5678bnzxc_iRbcg\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/font/list:\n    get:\n      description: |\n        Lists background images in your private collection. \n      parameters:\n        - description: Response is paged. This parameter determines where the response should start.\n          in: query\n          name: start\n          required: false\n          schema:\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"qimage\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"quote_id\": \"5e0QH_0k5srOUN1Wdu9AgweF\",\n                          \"permalink\": \"https://theysaidso.com/i/75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"download_uri\": \"https://theysaidso.com/i/image/75c3EoOmPVolqfB4KeUhXgeF\"\n                        }\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }     \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image matching the query criteria not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/font/search:\n    get:\n      description: |\n        Searches for a font with a given tag. \n      parameters:\n        - description: Tag string\n          in: query\n          name: query\n          required: false\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"qimage\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"quote_id\": \"5e0QH_0k5srOUN1Wdu9AgweF\",\n                          \"permalink\": \"https://theysaidso.com/i/75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"download_uri\": \"https://theysaidso.com/i/image/75c3EoOmPVolqfB4KeUhXgeF\"\n                        }\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }     \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image matching the query criteria not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/font/tags/add:\n    post:\n      description: Add a tag to a given font.\n      parameters:\n        - description: Font ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: font not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/font/tags/remove:\n    post:\n      description: Remove a tag from a given Font.\n      parameters:\n        - description: Font ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Font not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/image/search:\n    get:\n      description: |\n        Gets a Random Quote image. Optional `category` param determines the category of quote used in the image. Optional `author` param gets the quote image of a given author. \n      parameters:\n        - description: Quote Category\n          in: query\n          name: category\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Quote Author\n          in: query\n          name: author\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Should search private collection. Default searches public image collection.\n          in: query\n          name: private\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"qimage\": {\n                          \"id\": \"75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"quote_id\": \"5e0QH_0k5srOUN1Wdu9AgweF\",\n                          \"permalink\": \"https://theysaidso.com/i/75c3EoOmPVolqfB4KeUhXgeF\",\n                          \"download_uri\": \"https://theysaidso.com/i/image/75c3EoOmPVolqfB4KeUhXgeF\"\n                        }\n                      },\n                      \"copyright\": \"2019-22 https://theysaidso.com\"\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }     \n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote image matching the query criteria not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote Images\n  /quote/like:\n    delete:\n      description: Remove the Like for the given Quote as a user of the API Key.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": \"Like / Dislike removed from quote.\"\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n    post:\n      description: Like the given Quote as a user of the API Key. Same as `PUT` but a convenient alias for those clients that don't support `PUT` cleanly.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"message\": \"Like added to the quote\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n    put:\n      description: Like the given Quote as a user of the API Key. Some clients don't cleanly support `PUT`, in such scenarios use the `POST` version of this.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: quote_id\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"message\": \"Like added to the quote\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/list:\n    get:\n      description: Get the list of quotes in your private collection.\n      parameters:\n        - description: Response is paged. This parameter controls where response starts the listing at\n          in: query\n          name: start\n          required: false\n          schema:\n            default: 0\n            format: int32\n            type: integer\n        - description: Response is paged. This parameter controls how many is returned in the result.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 10\n            format: int32\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": \"263\",\n                            \"range\": {\n                                \"start\": 0,\n                                \"end\": 5\n                            }\n                        },\n                        \"contents\": {\n                            \"quotes\": [\n                                {\n                                    \"quote\": \"I think you should defend to the death their right to march, and then go down and meet them with baseball bats.\",\n                                    \"length\": \"111\",\n                                    \"author\": \"Woody Allen\",\n                                    \"tags\": [],\n                                    \"id\": \"GkeLUydBfiAH0Tcs2w_gwAeF\"\n                                },\n                                {\n                                    \"quote\": \"We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this. ... The world will little note nor long remember what we say here, but it can never forget what they did here.\",\n                                    \"length\": \"310\",\n                                    \"author\": \"Abraham Lincoln\",\n                                    \"tags\": [],\n                                    \"id\": \"u6fD9eRFA2NFMHuEoeujaAeF\"\n                                },\n                                {\n                                    \"quote\": \"Eighty percent of success is showing up.\",\n                                    \"length\": \"40\",\n                                    \"author\": \"Woody Allen\",\n                                    \"tags\": [\n                                        \"success\",\n                                        \"tso-top-100\"\n                                    ],\n                                    \"id\": \"nLvp0vLfofW06PILxmERHgeF\"\n                                },\n                                {\n                                    \"quote\": \"Great ambition is the passion of a great character.  Those endowed with it may perform very good or very bad acts.  All depends on the principals which direct them.\",\n                                    \"length\": \"164\",\n                                    \"author\": \"Napoleon Bonaparte\",\n                                    \"tags\": [\n                                        \"ambition\",\n                                        \"inspire\",\n                                        \"passion\"\n                                    ],\n                                    \"id\": \"X8juAoTtvxSEdgA0sGbYeQeF\"\n                                },\n                                {\n                                    \"quote\": \"I have had dreams, and I have had nightmares. I overcame the nightmares because of my dreams.\",\n                                    \"length\": \"93\",\n                                    \"author\": \"Dr. Jonas Salk\",\n                                    \"tags\": [\n                                        \"dream\",\n                                        \"nightmare\"\n                                    ],\n                                    \"id\": \"m_6Fj8QcXlVsQiiW7SAMLAeF\"\n                                }\n                            ]\n                        }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    } \n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\n  /quote/random:\n    get:\n      description: Gets a `Random Quote`. When you are in a hurry this is what you call to get a random famous quote.\n      parameters:\n        - description: Language of the Quote. The language must be supported in our system.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n        - description: No of quotes to return. The max limit depends on the subscription level.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 1\n            format: integer\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"quotes\": [\n                                {\n                                    \"quote\": \"The day soldiers stop bringing you their problems is the day you have stopped leading them. They have either lost confidence that you can help them or concluded that you do not care. Either case is a failure of leadership.\",\n                                    \"length\": \"222\",\n                                    \"author\": \"Colin Powell\",\n                                    \"tags\": [\n                                        \"confidence\",\n                                        \"leadership\",\n                                        \"management\"\n                                    ],\n                                    \"category\": \"management\",\n                                    \"id\": \"XLa1AmylKv1XF_dXcyhvdweF\"\n                                }\n                            ]\n                        }\n                    }\n              schema:\n                $ref: \"#/components/schemas/QuoteResponse\"\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    \u003c?xml version=\"1.0\"?\u003e \u003cresponse\u003e\n                      \u003csuccess\u003e\n                        \u003ctotal\u003e1\u003c/total\u003e\n                      \u003c/success\u003e\n                      \u003ccontents\u003e\n                        \u003cquotes\u003e\n                          \u003cquote\u003eSometimes you climb out of bed in the morning and you think, I'm not going to make it, but you laugh inside \u0026#x2014; remembering all the times you've felt that way.\u003c/quote\u003e\n                          \u003clength\u003e164\u003c/length\u003e\n                          \u003cauthor\u003eCharles Bukowski\u003c/author\u003e\n                          \u003ctags\u003edepression\u003c/tags\u003e\n                          \u003ctags\u003einspire\u003c/tags\u003e\n                          \u003ctags\u003etso-life\u003c/tags\u003e\n                          \u003ccategory\u003einspire\u003c/category\u003e\n                          \u003cdate\u003e2016-11-23\u003c/date\u003e\n                          \u003ctitle\u003eInspiring Quote of the day\u003c/title\u003e\n                          \u003cbackground\u003ehttps://theysaidso.com/img/bgs/man_on_the_mountain.jpg\u003c/background\u003e\n                          \u003cid\u003ek7rTMtmveYHUN2ImwxNhhAeF\u003c/id\u003e\n                        \u003c/quotes\u003e\n                      \u003c/contents\u003e\n                    \u003c/response\u003e      \n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/search:\n    get:\n      description: \"Search for a `Quote` in They Said So platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the quote. \"\n      parameters:\n        - description: Quote Category\n          in: query\n          name: category\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Quote Author\n          in: query\n          name: author\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Quote minimum Length\n          in: query\n          name: minlength\n          required: false\n          schema:\n            default: 100\n            format: int32\n            type: integer\n        - description: Quote maximum Length\n          in: query\n          name: maxlength\n          required: false\n          schema:\n            default: 300\n            format: int32\n            type: integer\n        - description: keyword to search for in the quote\n          in: query\n          name: query\n          required: false\n          schema:\n            format: string\n            type: string\n        - description: Should search private collection? Default searches public collection.\n          in: query\n          name: private\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n        - description: Language of the Quote. The language must be supported in our system.\n          in: query\n          name: language\n          required: false\n          schema:\n            default: en\n            format: string\n            type: string\n        - description: No of quotes to return. The max limit depends on the subscription level.\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 1\n            format: integer\n            type: integer\n        - description: Should search only SFW (Safe For Work) quotes?\n          in: query\n          name: sfw\n          required: false\n          schema:\n            default: false\n            format: boolean\n            type: boolean\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"quotes\": [\n                                {\n                                    \"quote\": \"The day soldiers stop bringing you their problems is the day you have stopped leading them. They have either lost confidence that you can help them or concluded that you do not care. Either case is a failure of leadership.\",\n                                    \"length\": \"222\",\n                                    \"author\": \"Colin Powell\",\n                                    \"tags\": [\n                                        \"confidence\",\n                                        \"leadership\",\n                                        \"management\"\n                                    ],\n                                    \"category\": \"management\",\n                                    \"id\": \"XLa1AmylKv1XF_dXcyhvdweF\"\n                                }\n                            ]\n                        }\n                    }\n              schema:\n                $ref: \"#/components/schemas/QuoteResponse\"\n            application/xml:\n              examples:\n                response:\n                  value: |-\n                    \u003c?xml version=\"1.0\"?\u003e \u003cresponse\u003e\n                      \u003csuccess\u003e\n                        \u003ctotal\u003e1\u003c/total\u003e\n                      \u003c/success\u003e\n                      \u003ccontents\u003e\n                        \u003cquotes\u003e\n                          \u003cquote\u003eSometimes you climb out of bed in the morning and you think, I'm not going to make it, but you laugh inside \u0026#x2014; remembering all the times you've felt that way.\u003c/quote\u003e\n                          \u003clength\u003e164\u003c/length\u003e\n                          \u003cauthor\u003eCharles Bukowski\u003c/author\u003e\n                          \u003ctags\u003edepression\u003c/tags\u003e\n                          \u003ctags\u003einspire\u003c/tags\u003e\n                          \u003ctags\u003etso-life\u003c/tags\u003e\n                          \u003ccategory\u003einspire\u003c/category\u003e\n                          \u003cdate\u003e2016-11-23\u003c/date\u003e\n                          \u003ctitle\u003eInspiring Quote of the day\u003c/title\u003e\n                          \u003cbackground\u003ehttps://theysaidso.com/img/bgs/man_on_the_mountain.jpg\u003c/background\u003e\n                          \u003cid\u003ek7rTMtmveYHUN2ImwxNhhAeF\u003c/id\u003e\n                        \u003c/quotes\u003e\n                      \u003c/contents\u003e\n                    \u003c/response\u003e   \n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"No Quote found matching the search filters. Try with different search filters.\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Quote\n  /quote/tags/add:\n    post:\n      description: Add a tag to a given Quote.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                      \"success\": {\n                        \"total\": 1\n                      },\n                      \"contents\": {\n                        \"message\": \"Tags added\"\n                      }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }                      \n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\n  /quote/tags/remove:\n    post:\n      description: Remove a tag from a given quote.\n      parameters:\n        - description: Quote ID\n          in: query\n          name: id\n          required: true\n          schema:\n            format: string\n            type: string\n        - description: Comma Separated tags\n          in: query\n          name: tags\n          required: true\n          schema:\n            format: string\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"success\": {\n                            \"total\": 1\n                        },\n                        \"contents\": {\n                            \"message\": \"Tags removed.\"\n                        }\n                    }\n          description: 200  response\n        \"401\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 401,\n                            \"message\": \"Unauthorized\"\n                        }\n                    }\n          description: 401  response\n        \"404\":\n          content:\n            application/json:\n              examples:\n                response:\n                  value: |-\n                    {\n                        \"error\": {\n                            \"code\": 404,\n                            \"message\": \"Not Found: Quote not found\"\n                        }\n                    }\n          description: 404  response\n      security:\n        - X-TheySaidSo-Api-Secret: []\n      tags:\n        - Private Quotes\ncomponents:\n  schemas:\n    NewQuote:\n      properties:\n        author:\n          description: Author name of quote.\n          type: string\n        quote:\n          description: The Quote.\n          type: string\n        tags:\n          description: Array of tags/categories.\n          items:\n            type: string\n          type: array\n      required:\n        - quote\n    QOD:\n      allOf:\n        - $ref: \"#/components/schemas/Quote\"\n        - properties:\n            date:\n              description: Date this quote of the day belongs to\n              type: string\n          required:\n            - date\n    Quote:\n      allOf:\n        - $ref: \"#/components/schemas/NewQuote\"\n        - properties:\n            id:\n              description: Unique identifier representing a specific quote in theysaidso.com.\n              type: string\n            image:\n              description: Image URL that can be used for background to display this quote.\n              type: string\n            length:\n              description: Length of the quote string.\n              format: int32\n              type: integer\n          required:\n            - id\n    QuoteResponse:\n      properties:\n        contents:\n          properties:\n            quotes:\n              description: List of quotes\n              items:\n                $ref: \"#/components/schemas/Quote\"\n              type: array\n        success:\n          description: Metadata about this successful call\n          type: string\n  securitySchemes:\n    X-TheySaidSo-Api-Secret:\n      in: header\n      name: X-TheySaidSo-Api-Secret\n      type: apiKey\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/quotes.rest/3.1/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/quotes.rest/3.1/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /quote/categories/search: get: parameters: parse parameter \"query\": schema: parse default: expected type \"string\", got \"number\""
}