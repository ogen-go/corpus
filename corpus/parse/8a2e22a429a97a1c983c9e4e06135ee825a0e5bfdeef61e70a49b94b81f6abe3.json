{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/trilom/sls-tesla-api"
		},
		"file": {
			"name": "swagger.yml",
			"size": 0,
			"path": "swagger.yml",
			"byteSize": 26249,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.0.1\n  title: sls-tesla-api\npaths:\n  # vehicle commands\n  /command/{vehicleId}/sentry_mode_off:\n    post:\n      summary: Turns off sentry mode.\n      description: |\n        This will turn off sentry mode.\n      operationId: vehiclescommandsentry_mode_off\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/sentry_mode_on:\n    post:\n      summary: Turns on sentry mode.\n      description: |\n        This will turn on sentry mode.\n      operationId: vehiclescommandsentry_mode_on\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/remote_steering_wheel_heater_off:\n    post:\n      summary: Turns off steering wheel heater.\n      description: |\n        This will turn off the steering wheel heater in Model S/X.\n      operationId: vehiclescommandremote_steering_wheel_heater_off\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/remote_steering_wheel_heater_on:\n    post:\n      summary: Turns on steering wheel heater.\n      description: |\n        This will turn on the steering wheel heater in Model S/X.\n      operationId: vehiclescommandremote_steering_wheel_heater_on\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/remote_seat_heater_request/{seats}/{level}:\n    post:\n      summary: Set seat heater for seat at level.\n      description: |\n        Set the seat heater to a desired level.\n        - Seats Param\n          - driver\n          - passenger\n          - left\n          - center\n          - right\n        - Level Param\n          - off\n          - low\n          - medium\n          - high\n      operationId: vehiclescommandremote_seat_heater_request\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n        - $ref: \"#/components/parameters/SeatHeatLevelPath\"\n        - $ref: \"#/components/parameters/SeatsPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/set_temps/passenger/{temp}:\n    post:\n      summary: Set the front passenger temperature of the HVAC system.\n      description: |\n        Set temperature of passenger side HVAC system in the car to desired, and other side to 72F/22.2C.  There is no way to only set one temp for now.\n      operationId: vehiclescommandset_temps_passenger\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n        - $ref: \"#/components/parameters/TemperaturePath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/set_temps/driver/{temp}:\n    post:\n      summary: Set the front driver temperature of the HVAC system.\n      description: |\n        Set temperature of driver side HVAC system in the car to desired, and other side to 72F/22.2C.  There is no way to only set one temp for now.\n      operationId: vehiclescommandset_temps_driver\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n        - $ref: \"#/components/parameters/TemperaturePath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/set_temps/{temp}:\n    post:\n      summary: Set the temperature of the HVAC system.\n      description: |\n        Set temperature of HVAC system in the car.\n      operationId: vehiclescommandset_temps\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n        - $ref: \"#/components/parameters/TemperaturePath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/auto_conditioning_stop:\n    post:\n      summary: Turns off HVAC system.\n      description: |\n        This will turn off the HVAC system.\n      operationId: vehiclescommandauto_conditioning_stop\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/auto_conditioning_start:\n    post:\n      summary: Turns on HVAC system.\n      description: |\n        This will turn on the HVAC system to heat/cool to the last set temperature.\n      operationId: vehiclescommandauto_conditioning_start\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/set_charge_limit/{chargeLimit}:\n    post:\n      summary: Sets charge limit to provided chargeLimit.\n      description: |\n        This will set the charge limit to the desired chargeLimit parameter provided.\n      operationId: vehiclescommandset_charge_limit\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n        - $ref: \"#/components/parameters/ChargeLimitPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/charge_max_range:\n    post:\n      summary: Sets charge limit to maximum, 100%.\n      description: |\n        This set the charge limit to the maximum of 100%.\n      operationId: vehiclescommandcharge_max_range\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/charge_standard:\n    post:\n      summary: Sets charge limit to standard, 90%.\n      description: |\n        This will limit the vehicle from charging over 90%, or the 'standard' limit.\n      operationId: vehiclescommandcharge_standard\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/charge_stop:\n    post:\n      summary: Stops charging if plugged in.\n      description: |\n        This will make the vehicle stop charging if it is plugged in to a power source.\n      operationId: vehiclescommandcharge_stop\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/charge_start:\n    post:\n      summary: Starts charging if plugged in.\n      description: |\n        This will make the vehicle begin charging if it is plugged in to a power source.\n      operationId: vehiclescommandcharge_start\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/charge_port_door_close:\n    post:\n      summary: Closes the charge port door.\n      description: |\n        This is used to close the charge port door.\n      operationId: vehiclescommandcharge_port_door_close\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/charge_port_door_open:\n    post:\n      summary: Opens the charge port door.\n      description: |\n        This is used to open the charge port door.\n      operationId: vehiclescommandcharge_port_door_open\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/open_frunk:\n    post:\n      summary: Opens the front trunk.\n      description: |\n        This is used to open the front trunk.\n      operationId: vehiclescommandopen_frunk\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/open_trunk:\n    post:\n      summary: Opens the rear trunk.\n      description: |\n        This is used to open the rear trunk.  On Model S/X it will actuate the trunk open and closed.\n      operationId: vehiclescommandopen_trunk\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/honk_horn:\n    post:\n      summary: Honks horn twice.\n      description: |\n        This is used to honk the horn twice.\n      operationId: vehiclescommandhonk_horn\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/flash_lights:\n    post:\n      summary: Flash lights once.\n      description: |\n        This is used to flash the lights once.\n      operationId: vehiclescommandflash_lights\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/wake_up:\n    post:\n      summary: Wake up car.\n      description: |\n        This is used to wakeup the car.\n      operationId: vehiclescommandwake_up\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/door_unlock:\n    post:\n      summary: Unlocks doors.\n      description: |\n        This is used to unlock the doors.\n      operationId: vehiclescommanddoor_unlock\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /command/{vehicleId}/door_lock:\n    post:\n      summary: Locks doors.\n      description: |\n        This is used to lock the doors.\n      operationId: vehiclescommanddoor_lock\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        201:\n          $ref: \"#/components/responses/TeslaPostResponse\"\n        500:\n          description: Failure\n      parameters:\n        - $ref: \"#/components/parameters/VehicleIdPath\"\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\n  /vehicles:\n    post:\n      summary: Get list of vehicle ids for bearer token.\n      operationId: vehicleList\n      requestBody:\n        description: Token Data Object\n        required: true\n        content:\n          'application/json':\n            schema:\n              $ref: \"#/components/schemas/TokenData\"\n      responses:\n        200:\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/VehiclesData\"\n        500:\n          description: Failure\n      x-amazon-apigateway-integration:\n        uri:\n          Fn::Sub: \"arn:aws:apigateway:#{AWS::Region}:lambda:path/2015-03-31/functions/#{VehiclesCommandLambdaFunction.Arn}/invocations\"\n        passthroughBehavior: when_no_match\n        httpMethod: POST\n        type: aws_proxy\ncomponents:\n  responses:\n    TeslaPostResponse:\n      description: Success\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/TeslaPost\"\n      headers:\n        Access-Control-Allow-Headers:\n          $ref: \"#/components/headers/Access-Control-Allow-Headers\"\n        Access-Control-Allow-Methods:\n          $ref: \"#/components/headers/Access-Control-Allow-Methods\"\n        Access-Control-Allow-Origin:\n          $ref: \"#/components/headers/Access-Control-Allow-Origin\"\n  parameters:\n    VehicleIdPath:\n      in: path\n      name: vehicleId\n      description: The vehicle id\n      required: true\n      schema:\n        type: string\n    ChargeLimitPath:\n      in: path\n      name: chargeLimit\n      description: The limit in % that you want to limit the battery to charge to.\n      required: true\n      schema:\n        type: number\n    TemperaturePath:\n      in: path\n      name: temp\n      description: The temp in celsius you want to set the temprature to.\n      required: true\n      schema:\n        type: number\n    SeatHeatLevelPath:\n      in: path\n      name: level\n      description: The level you want to set the seat heater to. off/low/medium/high\n      required: true\n      schema:\n        type: string\n    SeatsPath:\n      in: path\n      name: seats\n      description: The seat you want to perform an action on.  driver/passenger/left/center/right\n      required: true\n      schema:\n        type: string\n  headers:\n    X-Api-Key:\n      description: AWS API Gateway X-Api-Key for API\n      schema:\n        type: string\n    X-Rate-Limit:\n      description: calls per hour allowed by the user\n      schema:\n        type: integer\n        format: int32\n    X-Expires-After:\n      description: date in UTC when token expires\n      schema:\n        type: string\n        format: date-time\n    Access-Control-Allow-Headers:\n      description: CORS allowed Headers\n      schema:\n        type: string\n    Access-Control-Allow-Methods:\n      description: CORS allowed Methods\n      schema:\n        type: string\n    Access-Control-Allow-Origin:\n      description: CORS allowed Origin\n      schema:\n        type: string\n    Access-Control-Request-Method:\n      description: CORS Request Method for Preflight\n      schema:\n        type: string\n  schemas:\n    TokenData:\n      type: object\n      properties:\n        bearer_token:\n          type: string\n    VehiclesData:\n      type: array\n      items:\n        type: object\n        required:\n          - vehicle_id\n        properties:\n          vehicle_id:\n            type: string\n"
		}
	},
	"Error": "parse: parse spec: paths: /command/{vehicleId}/charge_start: post: operation \"vehiclescommandcharge_start\": responses: 201: resolve \"#/components/responses/TeslaPostResponse\" reference: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/TeslaPost\": resolve reference \"#/components/schemas/TeslaPost\": schema not found"
}