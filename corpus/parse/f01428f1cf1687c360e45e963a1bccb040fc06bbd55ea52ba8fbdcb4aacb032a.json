{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tournesol-app/tournesol"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "frontend/scripts/openapi.yaml",
			"byteSize": 98460,
			"content": "openapi: 3.0.3\ninfo:\n  title: Tournesol API\n  version: 0.0.0\npaths:\n  /accounts/change-password/:\n    post:\n      operationId: accounts_change_password_create\n      description: Change the user password.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ChangePassword'\n          description: ''\n  /accounts/profile/:\n    get:\n      operationId: accounts_profile_retrieve\n      description: Get or set user profile.\n      tags:\n      - accounts\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    post:\n      operationId: accounts_profile_create\n      description: Get or set user profile.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfileRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserProfileRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserProfileRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    put:\n      operationId: accounts_profile_update\n      description: Get or set user profile.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfileRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserProfileRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserProfileRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    patch:\n      operationId: accounts_profile_partial_update\n      description: Get or set user profile.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfileRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfileRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUserProfileRequest'\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n  /accounts/register/:\n    post:\n      operationId: accounts_register_create\n      description: Register new user.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterUserRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/RegisterUserRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/RegisterUserRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterUser'\n          description: ''\n  /accounts/register-email/:\n    post:\n      operationId: accounts_register_email_create\n      description: Register new email.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterEmailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/RegisterEmailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/RegisterEmailRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RegisterEmail'\n          description: ''\n  /accounts/reset-password/:\n    post:\n      operationId: accounts_reset_password_create\n      description: Reset password, given the signature and timestamp from the link.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResetPasswordRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResetPassword'\n          description: ''\n  /accounts/send-reset-password-link/:\n    post:\n      operationId: accounts_send_reset_password_link_create\n      description: Send email with reset password link.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DefaultSendResetPasswordLinkRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DefaultSendResetPasswordLinkRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DefaultSendResetPasswordLinkRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DefaultSendResetPasswordLink'\n          description: ''\n  /accounts/verify-email/:\n    post:\n      operationId: accounts_verify_email_create\n      description: Verify email via signature.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyEmailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/VerifyEmailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VerifyEmailRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyEmail'\n          description: ''\n  /accounts/verify-registration/:\n    post:\n      operationId: accounts_verify_registration_create\n      description: Verify registration via signature.\n      tags:\n      - accounts\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyRegistrationRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/VerifyRegistrationRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VerifyRegistrationRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyRegistration'\n          description: ''\n  /domains/:\n    get:\n      operationId: domains_list\n      description: List all accepted (=trusted) email domains.\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      tags:\n      - domains\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEmailDomainList'\n          description: ''\n  /entities/:\n    get:\n      operationId: entities_list\n      description: Fetch entities and their detailed scores in all polls\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: type\n        schema:\n          type: string\n          enum:\n          - video\n        description: Type of entities to return\n      - in: query\n        name: poll_name\n        schema:\n          type: string\n        description: If defined, only scores related to this poll will be returned\n      tags:\n      - entities\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEntityList'\n          description: ''\n  /entities/{uid}/:\n    get:\n      operationId: entities_retrieve\n      description: Fetch entities and their detailed scores in all polls\n      parameters:\n      - in: path\n        name: uid\n        schema:\n          type: string\n          description: A unique identifier, build with a namespace and an external\n            id.\n        required: true\n      - in: query\n        name: type\n        schema:\n          type: string\n          enum: []\n        description: Type of entities to return\n      - in: query\n        name: poll_name\n        schema:\n          type: string\n        description: If defined, only scores related to this poll will be returned\n      tags:\n      - entities\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Entity'\n          description: ''\n  /exports/comparisons/:\n    get:\n      operationId: exports_comparisons_retrieve\n      description: Download public data in .csv file\n      tags:\n      - exports\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n          description: ''\n  /polls/{name}/:\n    get:\n      operationId: polls_retrieve\n      description: Retrieve a poll and its related criteria.\n      parameters:\n      - in: path\n        name: name\n        schema:\n          type: string\n        required: true\n      tags:\n      - polls\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Poll'\n          description: ''\n  /polls/{name}/recommendations/:\n    get:\n      operationId: polls_recommendations_list\n      description: Retrieve a list of recommended videos, sorted by decreasing total\n        score.\n      parameters:\n      - in: path\n        name: name\n        schema:\n          type: string\n        required: true\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: date_lte\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: date_gte\n        schema:\n          type: string\n          format: date-time\n      - in: query\n        name: search\n        schema:\n          type: string\n          minLength: 1\n        description: A search query to filter entities\n      - in: query\n        name: unsafe\n        schema:\n          type: boolean\n          default: false\n        description: If true, entities considered as unsafe recommendations because\n          of a low score or due to too few contributions will be included.\n      - in: query\n        name: weights\n        schema:\n          type: object\n          additionalProperties: {}\n        description: Weights for criterias in this poll. The default weight is 10\n          for each criteria.\n        style: deepObject\n        examples:\n          WeightsExample:\n            value:\n              reliability: 10\n              importance: 10\n              ignored_criteria: 0\n            summary: weights example\n      tags:\n      - polls\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedRecommendationList'\n          description: ''\n  /schema/:\n    get:\n      operationId: schema_retrieve\n      description: |-\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n        - YAML: application/vnd.oai.openapi\n        - JSON: application/vnd.oai.openapi+json\n      parameters:\n      - in: query\n        name: format\n        schema:\n          type: string\n          enum:\n          - json\n          - yaml\n      - in: query\n        name: lang\n        schema:\n          type: string\n          enum:\n          - af\n          - ar\n          - ar-dz\n          - ast\n          - az\n          - be\n          - bg\n          - bn\n          - br\n          - bs\n          - ca\n          - cs\n          - cy\n          - da\n          - de\n          - dsb\n          - el\n          - en\n          - en-au\n          - en-gb\n          - eo\n          - es\n          - es-ar\n          - es-co\n          - es-mx\n          - es-ni\n          - es-ve\n          - et\n          - eu\n          - fa\n          - fi\n          - fr\n          - fy\n          - ga\n          - gd\n          - gl\n          - he\n          - hi\n          - hr\n          - hsb\n          - hu\n          - hy\n          - ia\n          - id\n          - ig\n          - io\n          - is\n          - it\n          - ja\n          - ka\n          - kab\n          - kk\n          - km\n          - kn\n          - ko\n          - ky\n          - lb\n          - lt\n          - lv\n          - mk\n          - ml\n          - mn\n          - mr\n          - ms\n          - my\n          - nb\n          - ne\n          - nl\n          - nn\n          - os\n          - pa\n          - pl\n          - pt\n          - pt-br\n          - ro\n          - ru\n          - sk\n          - sl\n          - sq\n          - sr\n          - sr-latn\n          - sv\n          - sw\n          - ta\n          - te\n          - tg\n          - th\n          - tk\n          - tr\n          - tt\n          - udm\n          - uk\n          - ur\n          - uz\n          - vi\n          - zh-hans\n          - zh-hant\n      tags:\n      - schema\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/vnd.oai.openapi:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/yaml:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/vnd.oai.openapi+json:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /stats/:\n    get:\n      operationId: stats_retrieve\n      description: Retrieve statistics.\n      tags:\n      - stats\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Statistics'\n          description: ''\n  /users/me/:\n    delete:\n      operationId: users_me_destroy\n      description: |-\n        Delete and logout the authenticated user.\n        All related resources are also deleted: comparisons, rate-later list, access tokens, etc.\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '204':\n          description: No response body\n  /users/me/comparisons/{poll_name}:\n    get:\n      operationId: users_me_comparisons_list\n      description: Retrieve all comparisons made by the logged user, in a given poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedComparisonList'\n          description: ''\n    post:\n      operationId: users_me_comparisons_create\n      description: |-\n        Create a new comparison associated with the logged user, in a given\n        poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComparisonRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ComparisonRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ComparisonRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comparison'\n          description: ''\n  /users/me/comparisons/{poll_name}/{uid_a}/{uid_b}/:\n    get:\n      operationId: users_me_comparisons_retrieve\n      description: Retrieve a comparison made by the logged user, in the given poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid_a\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid_b\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comparison'\n          description: ''\n    put:\n      operationId: users_me_comparisons_update\n      description: Update a comparison made by the logged user, in the given poll\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid_a\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid_b\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ComparisonUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ComparisonUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ComparisonUpdateRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ComparisonUpdate'\n          description: ''\n    delete:\n      operationId: users_me_comparisons_destroy\n      description: Delete a comparison made by the logged user, in the given poll\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid_a\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid_b\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '204':\n          description: No response body\n  /users/me/comparisons/{poll_name}/{uid}/:\n    get:\n      operationId: users_me_comparisons_list_filtered\n      description: |-\n        Retrieve a filtered list of comparisons made by the logged user, in\n        the given poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid\n        schema:\n          type: string\n        required: true\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedComparisonList'\n          description: ''\n  /users/me/contributor_ratings/{poll_name}/:\n    get:\n      operationId: users_me_contributor_ratings_list\n      description: Retrieve the logged in user's ratings per video in a given poll(computed\n        automatically from the user's comparisons).\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: is_public\n        schema:\n          type: boolean\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedContributorRatingList'\n          description: ''\n    post:\n      operationId: users_me_contributor_ratings_create\n      description: Initialize the rating object for the current user about a specific\n        video in a given poll, with optional visibility settings.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContributorRatingCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ContributorRatingCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ContributorRatingCreateRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContributorRatingCreate'\n          description: ''\n  /users/me/contributor_ratings/{poll_name}/{uid}/:\n    get:\n      operationId: users_me_contributor_ratings_retrieve\n      description: Retrieve the logged-in user's ratings for a specific video in a\n        given poll (computed automatically from the user's comparisons).\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContributorRating'\n          description: ''\n    put:\n      operationId: users_me_contributor_ratings_update\n      description: Update public / private status of the logged-in user ratings for\n        a specific video, in a given poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContributorRatingRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ContributorRatingRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ContributorRatingRequest'\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContributorRating'\n          description: ''\n    patch:\n      operationId: users_me_contributor_ratings_partial_update\n      description: Update public / private status of the logged-in user ratings for\n        a specific video, in a given poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: uid\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedContributorRatingRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedContributorRatingRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedContributorRatingRequest'\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContributorRating'\n          description: ''\n  /users/me/contributor_ratings/{poll_name}/_all/:\n    patch:\n      operationId: users_me_contributor_ratings__all_partial_update\n      description: |-\n        Mark all contributor ratings by current user as public or private in the\n        given poll.\n      parameters:\n      - in: path\n        name: poll_name\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedContributorRatingUpdateAllRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedContributorRatingUpdateAllRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedContributorRatingUpdateAllRequest'\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContributorRatingUpdateAll'\n          description: ''\n  /users/me/exports/all/:\n    get:\n      operationId: users_me_exports_all_retrieve\n      description: Download current user data in .zip file\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n          description: ''\n  /users/me/exports/comparisons/:\n    get:\n      operationId: users_me_exports_comparisons_retrieve\n      description: Download current user data in .zip file\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: string\n                format: binary\n          description: ''\n  /users/me/video_rate_later/:\n    get:\n      operationId: users_me_video_rate_later_list\n      description: List all videos of a user's rate later list, or add a video to\n        the list.\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedVideoRateLaterList'\n          description: ''\n    post:\n      operationId: users_me_video_rate_later_create\n      description: List all videos of a user's rate later list, or add a video to\n        the list.\n      tags:\n      - users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VideoRateLaterRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/VideoRateLaterRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VideoRateLaterRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VideoRateLater'\n          description: ''\n        '409':\n          description: 'Conflict: the video is already in the rate later list, or\n            there is an other error with the database query.'\n  /users/me/video_rate_later/{video_id}/:\n    get:\n      operationId: users_me_video_rate_later_retrieve\n      description: Fetch a video from user's rate later list\n      parameters:\n      - in: path\n        name: video_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VideoRateLater'\n          description: ''\n    delete:\n      operationId: users_me_video_rate_later_destroy\n      description: Delete a video from user's rate later list\n      parameters:\n      - in: path\n        name: video_id\n        schema:\n          type: string\n        required: true\n      tags:\n      - users\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '204':\n          description: No response body\n  /video/:\n    get:\n      operationId: video_list\n      description: Retrieve a list of recommended videos, sorted by decreasing total\n        score.\n      parameters:\n      - name: limit\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: offset\n        required: false\n        in: query\n        description: The initial index from which to return the results.\n        schema:\n          type: integer\n      - in: query\n        name: search\n        schema:\n          type: string\n      - in: query\n        name: language\n        schema:\n          type: string\n        description: Accepted languages separated by commas (e.g. 'en,fr,de'). If\n          empty, accept all languages.\n      - in: query\n        name: uploader\n        schema:\n          type: string\n      - in: query\n        name: date_lte\n        schema:\n          type: string\n          format: date-time\n        description: \"Return videos published **before** this date.  \\nAccepted formats:\\\n          \\ ISO 8601 datetime (e.g `2021-12-01T12:45:00`) or legacy: `dd-mm-yy-hh-mm-ss`.\"\n      - in: query\n        name: date_gte\n        schema:\n          type: string\n          format: date-time\n        description: \"Return videos published **after** this date.  \\nAccepted formats:\\\n          \\ ISO 8601 datetime (e.g `2021-12-01T12:45:00`) or legacy: `dd-mm-yy-hh-mm-ss`.\"\n      - in: query\n        name: unsafe\n        schema:\n          type: boolean\n        description: If true, videos considered as unsafe recommendations because\n          of a low score or due to too few contributions will be included.\n      - in: query\n        name: largely_recommended\n        schema:\n          type: integer\n        description: Weight for criteria 'largely_recommended', between 0 and 100\n      - in: query\n        name: reliability\n        schema:\n          type: integer\n        description: Weight for criteria 'reliability', between 0 and 100\n      - in: query\n        name: importance\n        schema:\n          type: integer\n        description: Weight for criteria 'importance', between 0 and 100\n      - in: query\n        name: engaging\n        schema:\n          type: integer\n        description: Weight for criteria 'engaging', between 0 and 100\n      - in: query\n        name: pedagogy\n        schema:\n          type: integer\n        description: Weight for criteria 'pedagogy', between 0 and 100\n      - in: query\n        name: layman_friendly\n        schema:\n          type: integer\n        description: Weight for criteria 'layman_friendly', between 0 and 100\n      - in: query\n        name: diversity_inclusion\n        schema:\n          type: integer\n        description: Weight for criteria 'diversity_inclusion', between 0 and 100\n      - in: query\n        name: backfire_risk\n        schema:\n          type: integer\n        description: Weight for criteria 'backfire_risk', between 0 and 100\n      - in: query\n        name: better_habits\n        schema:\n          type: integer\n        description: Weight for criteria 'better_habits', between 0 and 100\n      - in: query\n        name: entertaining_relaxing\n        schema:\n          type: integer\n        description: Weight for criteria 'entertaining_relaxing', between 0 and 100\n      tags:\n      - video\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedVideoSerializerWithCriteriaList'\n          description: ''\n    post:\n      operationId: video_create\n      description: Add a video to the db if it does not already exist.\n      tags:\n      - video\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VideoRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/VideoRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VideoRequest'\n        required: true\n      security:\n      - oauth2:\n        - read write groups\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Video'\n          description: ''\n  /video/{video_id}/:\n    get:\n      operationId: video_retrieve\n      description: Retrieve details about a single video.\n      parameters:\n      - in: path\n        name: video_id\n        schema:\n          type: string\n          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$\n        required: true\n      tags:\n      - video\n      security:\n      - oauth2:\n        - read write groups\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VideoSerializerWithCriteria'\n          description: ''\ncomponents:\n  schemas:\n    BlankEnum:\n      enum:\n      - ''\n    ChangePassword:\n      type: object\n      properties:\n        old_password:\n          type: string\n        password:\n          type: string\n      required:\n      - old_password\n      - password\n    ChangePasswordRequest:\n      type: object\n      properties:\n        old_password:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          minLength: 1\n        password_confirm:\n          type: string\n          writeOnly: true\n          minLength: 1\n      required:\n      - old_password\n      - password\n      - password_confirm\n    Comparison:\n      type: object\n      description: |-\n        A comparison serializer used for the operations create, retrieve and list.\n\n        Given the context determined by the view, it will represent the comparison\n        in the reverse order.\n\n        Use `ComparisonUpdateSerializer` for the update operation.\n      properties:\n        entity_a:\n          $ref: '#/components/schemas/RelatedVideo'\n        entity_b:\n          $ref: '#/components/schemas/RelatedVideo'\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComparisonCriteriaScore'\n        duration_ms:\n          type: number\n          format: float\n          nullable: true\n          description: Time it took to rate the videos (in milliseconds)\n      required:\n      - criteria_scores\n      - entity_a\n      - entity_b\n    ComparisonCriteriaScore:\n      type: object\n      properties:\n        criteria:\n          type: string\n          description: Name of the criteria\n          maxLength: 32\n        score:\n          type: number\n          format: float\n          maximum: 10.0\n          minimum: -10.0\n          description: Score for the given comparison\n        weight:\n          type: number\n          format: float\n          description: Weight of the comparison\n      required:\n      - criteria\n      - score\n    ComparisonCriteriaScoreRequest:\n      type: object\n      properties:\n        criteria:\n          type: string\n          minLength: 1\n          description: Name of the criteria\n          maxLength: 32\n        score:\n          type: number\n          format: float\n          maximum: 10.0\n          minimum: -10.0\n          description: Score for the given comparison\n        weight:\n          type: number\n          format: float\n          description: Weight of the comparison\n      required:\n      - criteria\n      - score\n    ComparisonRequest:\n      type: object\n      description: |-\n        A comparison serializer used for the operations create, retrieve and list.\n\n        Given the context determined by the view, it will represent the comparison\n        in the reverse order.\n\n        Use `ComparisonUpdateSerializer` for the update operation.\n      properties:\n        entity_a:\n          $ref: '#/components/schemas/RelatedVideoRequest'\n        entity_b:\n          $ref: '#/components/schemas/RelatedVideoRequest'\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComparisonCriteriaScoreRequest'\n        duration_ms:\n          type: number\n          format: float\n          nullable: true\n          description: Time it took to rate the videos (in milliseconds)\n      required:\n      - criteria_scores\n      - entity_a\n      - entity_b\n    ComparisonUpdate:\n      type: object\n      description: |-\n        A comparison serializer used only for updates.\n\n        Given the context determined by the view, it will represent or save the\n        comparison in the reverse order.\n\n        Use `ComparisonSerializer` for all other operations.\n      properties:\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComparisonCriteriaScore'\n        duration_ms:\n          type: number\n          format: float\n          nullable: true\n          description: Time it took to rate the videos (in milliseconds)\n        entity_a:\n          allOf:\n          - $ref: '#/components/schemas/Video'\n          readOnly: true\n        entity_b:\n          allOf:\n          - $ref: '#/components/schemas/Video'\n          readOnly: true\n      required:\n      - criteria_scores\n      - entity_a\n      - entity_b\n    ComparisonUpdateRequest:\n      type: object\n      description: |-\n        A comparison serializer used only for updates.\n\n        Given the context determined by the view, it will represent or save the\n        comparison in the reverse order.\n\n        Use `ComparisonSerializer` for all other operations.\n      properties:\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/ComparisonCriteriaScoreRequest'\n        duration_ms:\n          type: number\n          format: float\n          nullable: true\n          description: Time it took to rate the videos (in milliseconds)\n      required:\n      - criteria_scores\n    ContributorCriteriaScore:\n      type: object\n      properties:\n        criteria:\n          type: string\n          description: Name of the criteria\n          maxLength: 32\n        score:\n          type: number\n          format: float\n          description: Score for the given criteria\n        uncertainty:\n          type: number\n          format: float\n          description: Uncertainty about the video's score for the given criteria\n      required:\n      - criteria\n    ContributorCriteriaScoreRequest:\n      type: object\n      properties:\n        criteria:\n          type: string\n          minLength: 1\n          description: Name of the criteria\n          maxLength: 32\n        score:\n          type: number\n          format: float\n          description: Score for the given criteria\n        uncertainty:\n          type: number\n          format: float\n          description: Uncertainty about the video's score for the given criteria\n      required:\n      - criteria\n    ContributorRating:\n      type: object\n      properties:\n        video:\n          allOf:\n          - $ref: '#/components/schemas/Video'\n          readOnly: true\n        is_public:\n          type: boolean\n          description: Should the rating be public?\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContributorCriteriaScore'\n          readOnly: true\n        n_comparisons:\n          type: integer\n          readOnly: true\n          description: Number of comparisons submitted by the current user about the\n            current video\n      required:\n      - criteria_scores\n      - n_comparisons\n      - video\n    ContributorRatingCreate:\n      type: object\n      properties:\n        is_public:\n          type: boolean\n          description: Should the rating be public?\n        video:\n          allOf:\n          - $ref: '#/components/schemas/Video'\n          readOnly: true\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContributorCriteriaScore'\n          readOnly: true\n        n_comparisons:\n          type: integer\n          readOnly: true\n          description: Number of comparisons submitted by the current user about the\n            current video\n      required:\n      - criteria_scores\n      - n_comparisons\n      - video\n    ContributorRatingCreateRequest:\n      type: object\n      properties:\n        video_id:\n          type: string\n          writeOnly: true\n          minLength: 1\n          pattern: ^[A-Za-z0-9-_]{11}$\n        is_public:\n          type: boolean\n          description: Should the rating be public?\n      required:\n      - video_id\n    ContributorRatingRequest:\n      type: object\n      properties:\n        is_public:\n          type: boolean\n          description: Should the rating be public?\n    ContributorRatingUpdateAll:\n      type: object\n      properties:\n        is_public:\n          type: boolean\n      required:\n      - is_public\n    DefaultSendResetPasswordLink:\n      type: object\n      description: |-\n        Default serializer used for sending reset password link.\n\n        It will use :ref:`send-reset-password-link-serializer-use-email-setting`\n        setting.\n      properties:\n        login:\n          type: string\n      required:\n      - login\n    DefaultSendResetPasswordLinkRequest:\n      type: object\n      description: |-\n        Default serializer used for sending reset password link.\n\n        It will use :ref:`send-reset-password-link-serializer-use-email-setting`\n        setting.\n      properties:\n        login:\n          type: string\n          minLength: 1\n      required:\n      - login\n    DegreeOfPoliticalEngagementEnum:\n      enum:\n      - Not Specified\n      - None\n      - Light\n      - Interested\n      - Engaged\n      - Activist\n      - Professional\n      type: string\n    EmailDomain:\n      type: object\n      properties:\n        domain:\n          type: string\n          description: E-mail domain with leading @\n          maxLength: 100\n        status:\n          allOf:\n          - $ref: '#/components/schemas/StatusEnum'\n          description: Status of the domain.\n      required:\n      - domain\n    Entity:\n      type: object\n      properties:\n        uid:\n          type: string\n          description: A unique identifier, build with a namespace and an external\n            id.\n          maxLength: 144\n        type:\n          $ref: '#/components/schemas/TypeEnum'\n        metadata:\n          type: object\n          additionalProperties: {}\n        polls:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityPoll'\n          readOnly: true\n      required:\n      - polls\n      - type\n      - uid\n    EntityCriteriaScore:\n      type: object\n      properties:\n        criteria:\n          type: string\n          description: Name of the criteria\n          maxLength: 32\n        score:\n          type: number\n          format: float\n          description: Score of the given criteria\n      required:\n      - criteria\n    EntityPoll:\n      type: object\n      properties:\n        name:\n          type: string\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityCriteriaScore'\n      required:\n      - criteria_scores\n      - name\n    GenderEnum:\n      enum:\n      - Not Specified\n      - Non-binary\n      - Other\n      - Female\n      - Male\n      type: string\n    LanguageEnum:\n      enum:\n      - af\n      - ar\n      - ar-dz\n      - ast\n      - az\n      - bg\n      - be\n      - bn\n      - br\n      - bs\n      - ca\n      - cs\n      - cy\n      - da\n      - de\n      - dsb\n      - el\n      - en\n      - en-au\n      - en-gb\n      - eo\n      - es\n      - es-ar\n      - es-co\n      - es-mx\n      - es-ni\n      - es-ve\n      - et\n      - eu\n      - fa\n      - fi\n      - fr\n      - fy\n      - ga\n      - gd\n      - gl\n      - he\n      - hi\n      - hr\n      - hsb\n      - hu\n      - hy\n      - ia\n      - id\n      - ig\n      - io\n      - is\n      - it\n      - ja\n      - ka\n      - kab\n      - kk\n      - km\n      - kn\n      - ko\n      - ky\n      - lb\n      - lt\n      - lv\n      - mk\n      - ml\n      - mn\n      - mr\n      - ms\n      - my\n      - nb\n      - ne\n      - nl\n      - nn\n      - os\n      - pa\n      - pl\n      - pt\n      - pt-br\n      - ro\n      - ru\n      - sk\n      - sl\n      - sq\n      - sr\n      - sr-latn\n      - sv\n      - sw\n      - ta\n      - te\n      - tg\n      - th\n      - tk\n      - tr\n      - tt\n      - udm\n      - uk\n      - ur\n      - uz\n      - vi\n      - zh-hans\n      - zh-hant\n      type: string\n    MoralPhilosophyEnum:\n      enum:\n      - Not Specified\n      - Utilitarian\n      - Non-Utilitarian Consequentialist\n      - Deontological\n      - Virtue Ethics\n      - Mixed\n      - Other\n      type: string\n    NationalityEnum:\n      enum:\n      - Not Specified\n      - Afghanistan\n      - Åland Islands\n      - Albania\n      - Algeria\n      - American Samoa\n      - Andorra\n      - Angola\n      - Anguilla\n      - Antarctica\n      - Antigua and Barbuda\n      - Argentina\n      - Armenia\n      - Aruba\n      - Australia\n      - Austria\n      - Azerbaijan\n      - Bahamas\n      - Bahrain\n      - Bangladesh\n      - Barbados\n      - Belarus\n      - Belgium\n      - Belize\n      - Benin\n      - Bermuda\n      - Bhutan\n      - Bolivia\n      - Bonaire, Sint Eustatius and Saba\n      - Bosnia and Herzegovina\n      - Botswana\n      - Bouvet Island\n      - Brazil\n      - British Indian Ocean Territory\n      - Brunei\n      - Bulgaria\n      - Burkina Faso\n      - Burundi\n      - Cabo Verde\n      - Cambodia\n      - Cameroon\n      - Canada\n      - Cayman Islands\n      - Central African Republic\n      - Chad\n      - Chile\n      - China\n      - Christmas Island\n      - Cocos (Keeling) Islands\n      - Colombia\n      - Comoros\n      - Congo\n      - Congo (the Democratic Republic of the)\n      - Cook Islands\n      - Costa Rica\n      - Côte d'Ivoire\n      - Croatia\n      - Cuba\n      - Curaçao\n      - Cyprus\n      - Czechia\n      - Denmark\n      - Djibouti\n      - Dominica\n      - Dominican Republic\n      - Ecuador\n      - Egypt\n      - El Salvador\n      - Equatorial Guinea\n      - Eritrea\n      - Estonia\n      - Eswatini\n      - Ethiopia\n      - Falkland Islands (Malvinas)\n      - Faroe Islands\n      - Fiji\n      - Finland\n      - France\n      - French Guiana\n      - French Polynesia\n      - French Southern Territories\n      - Gabon\n      - Gambia\n      - Georgia\n      - Germany\n      - Ghana\n      - Gibraltar\n      - Greece\n      - Greenland\n      - Grenada\n      - Guadeloupe\n      - Guam\n      - Guatemala\n      - Guernsey\n      - Guinea\n      - Guinea-Bissau\n      - Guyana\n      - Haiti\n      - Heard Island and McDonald Islands\n      - Holy See\n      - Honduras\n      - Hong Kong\n      - Hungary\n      - Iceland\n      - India\n      - Indonesia\n      - Iran\n      - Iraq\n      - Ireland\n      - Isle of Man\n      - Israel\n      - Italy\n      - Jamaica\n      - Japan\n      - Jersey\n      - Jordan\n      - Kazakhstan\n      - Kenya\n      - Kiribati\n      - Kuwait\n      - Kyrgyzstan\n      - Laos\n      - Latvia\n      - Lebanon\n      - Lesotho\n      - Liberia\n      - Libya\n      - Liechtenstein\n      - Lithuania\n      - Luxembourg\n      - Macao\n      - Madagascar\n      - Malawi\n      - Malaysia\n      - Maldives\n      - Mali\n      - Malta\n      - Marshall Islands\n      - Martinique\n      - Mauritania\n      - Mauritius\n      - Mayotte\n      - Mexico\n      - Micronesia (Federated States of)\n      - Moldova\n      - Monaco\n      - Mongolia\n      - Montenegro\n      - Montserrat\n      - Morocco\n      - Mozambique\n      - Myanmar\n      - Namibia\n      - Nauru\n      - Nepal\n      - Netherlands\n      - New Caledonia\n      - New Zealand\n      - Nicaragua\n      - Niger\n      - Nigeria\n      - Niue\n      - Norfolk Island\n      - North Korea\n      - North Macedonia\n      - Northern Mariana Islands\n      - Norway\n      - Oman\n      - Pakistan\n      - Palau\n      - Palestine, State of\n      - Panama\n      - Papua New Guinea\n      - Paraguay\n      - Peru\n      - Philippines\n      - Pitcairn\n      - Poland\n      - Portugal\n      - Puerto Rico\n      - Qatar\n      - Réunion\n      - Romania\n      - Russia\n      - Rwanda\n      - Saint Barthélemy\n      - Saint Helena, Ascension and Tristan da Cunha\n      - Saint Kitts and Nevis\n      - Saint Lucia\n      - Saint Martin (French part)\n      - Saint Pierre and Miquelon\n      - Saint Vincent and the Grenadines\n      - Samoa\n      - San Marino\n      - Sao Tome and Principe\n      - Saudi Arabia\n      - Senegal\n      - Serbia\n      - Seychelles\n      - Sierra Leone\n      - Singapore\n      - Sint Maarten (Dutch part)\n      - Slovakia\n      - Slovenia\n      - Solomon Islands\n      - Somalia\n      - South Africa\n      - South Georgia and the South Sandwich Islands\n      - South Korea\n      - South Sudan\n      - Spain\n      - Sri Lanka\n      - Sudan\n      - Suriname\n      - Svalbard and Jan Mayen\n      - Sweden\n      - Switzerland\n      - Syria\n      - Taiwan\n      - Tajikistan\n      - Tanzania\n      - Thailand\n      - Timor-Leste\n      - Togo\n      - Tokelau\n      - Tonga\n      - Trinidad and Tobago\n      - Tunisia\n      - Turkey\n      - Turkmenistan\n      - Turks and Caicos Islands\n      - Tuvalu\n      - Uganda\n      - Ukraine\n      - United Arab Emirates\n      - United Kingdom\n      - United States Minor Outlying Islands\n      - United States of America\n      - Uruguay\n      - Uzbekistan\n      - Vanuatu\n      - Venezuela\n      - Vietnam\n      - Virgin Islands (British)\n      - Virgin Islands (U.S.)\n      - Wallis and Futuna\n      - Western Sahara\n      - Yemen\n      - Zambia\n      - Zimbabwe\n      type: string\n    NullEnum:\n      enum:\n      - null\n    PaginatedComparisonList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Comparison'\n    PaginatedContributorRatingList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ContributorRating'\n    PaginatedEmailDomainList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailDomain'\n    PaginatedEntityList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Entity'\n    PaginatedRecommendationList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Recommendation'\n    PaginatedVideoRateLaterList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/VideoRateLater'\n    PaginatedVideoSerializerWithCriteriaList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=400\u0026limit=100\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?offset=200\u0026limit=100\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/VideoSerializerWithCriteria'\n    PatchedContributorRatingRequest:\n      type: object\n      properties:\n        is_public:\n          type: boolean\n          description: Should the rating be public?\n    PatchedContributorRatingUpdateAllRequest:\n      type: object\n      properties:\n        is_public:\n          type: boolean\n    PatchedUserProfileRequest:\n      type: object\n      description: |-\n        Default serializer used for user profile. It will use these:\n\n        * User fields\n        * :ref:`user-hidden-fields-setting` setting\n        * :ref:`user-public-fields-setting` setting\n        * :ref:`user-editable-fields-setting` setting\n\n        to automagically generate the required serializer fields.\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        is_demo:\n          type: boolean\n          description: Is a demo account?\n        first_name:\n          type: string\n          nullable: true\n          description: First name\n          maxLength: 100\n        last_name:\n          type: string\n          nullable: true\n          description: Last name\n          maxLength: 100\n        title:\n          type: string\n          nullable: true\n          description: Your position\n        bio:\n          type: string\n          nullable: true\n          description: Self-description (degree, biography, ...)\n        comment_anonymously:\n          type: boolean\n          description: Comment anonymously by-default\n        show_online_presence:\n          type: boolean\n          description: Show my online presence on Tournesol\n        show_my_profile:\n          type: boolean\n          description: Show my profile on Tournesol\n        birth_year:\n          type: integer\n          maximum: 2100\n          minimum: 1900\n          nullable: true\n          description: Year of birth\n        gender:\n          allOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          description: Your gender\n        nationality:\n          allOf:\n          - $ref: '#/components/schemas/NationalityEnum'\n          description: Your country of nationality\n        residence:\n          allOf:\n          - $ref: '#/components/schemas/ResidenceEnum'\n          description: Your country of residence\n        race:\n          allOf:\n          - $ref: '#/components/schemas/RaceEnum'\n          description: Your ethnicity\n        political_affiliation:\n          allOf:\n          - $ref: '#/components/schemas/PoliticalAffiliationEnum'\n          description: Your political preference\n        religion:\n          allOf:\n          - $ref: '#/components/schemas/ReligionEnum'\n          description: Your religion\n        degree_of_political_engagement:\n          allOf:\n          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'\n          description: Your degree of political engagement\n        moral_philosophy:\n          allOf:\n          - $ref: '#/components/schemas/MoralPhilosophyEnum'\n          description: Your preferred moral philosophy\n        website:\n          type: string\n          format: uri\n          nullable: true\n          description: Your website URL\n          maxLength: 500\n        linkedin:\n          type: string\n          format: uri\n          nullable: true\n          description: Your LinkedIn URL\n          maxLength: 500\n        youtube:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Youtube channel URL\n          maxLength: 500\n        google_scholar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Google Scholar URL\n          maxLength: 500\n        orcid:\n          type: string\n          format: uri\n          nullable: true\n          description: Your ORCID URL\n          maxLength: 500\n        researchgate:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Researchgate profile URL\n          maxLength: 500\n        twitter:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Twitter URL\n          maxLength: 500\n        avatar:\n          type: string\n          format: binary\n          nullable: true\n          description: Your profile picture.\n        is_trusted:\n          type: boolean\n    PoliticalAffiliationEnum:\n      enum:\n      - Not Specified\n      - Extreme left\n      - Far left\n      - Left\n      - Centrist\n      - Right\n      - Far right\n      - Extreme right\n      - Other\n      type: string\n    Poll:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 50\n          pattern: ^[-a-zA-Z0-9_]+$\n        criterias:\n          type: array\n          items:\n            $ref: '#/components/schemas/PollCriteria'\n      required:\n      - criterias\n      - name\n    PollCriteria:\n      type: object\n      properties:\n        name:\n          type: string\n        label:\n          type: string\n        optional:\n          type: boolean\n      required:\n      - label\n      - name\n    RaceEnum:\n      enum:\n      - Not Specified\n      - African\n      - African American\n      - American Indian\n      - Arabic or Middle Eastern\n      - Asian\n      - Caucasian\n      - Latino or Hispanic\n      - Mixed\n      - Unknown\n      - Other\n      type: string\n    Recommendation:\n      type: object\n      properties:\n        uid:\n          type: string\n          description: A unique identifier, build with a namespace and an external\n            id.\n          maxLength: 144\n        n_comparisons:\n          type: integer\n        n_contributors:\n          type: integer\n        metadata:\n          type: object\n          additionalProperties: {}\n        total_score:\n          type: number\n          format: float\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityCriteriaScore'\n      required:\n      - criteria_scores\n      - n_comparisons\n      - n_contributors\n      - total_score\n      - uid\n    RegisterEmail:\n      type: object\n      description: Default serializer used for e-mail registration (e-mail change).\n      properties:\n        email:\n          type: string\n          format: email\n      required:\n      - email\n    RegisterEmailRequest:\n      type: object\n      description: Default serializer used for e-mail registration (e-mail change).\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n      required:\n      - email\n    RegisterUser:\n      type: object\n      description: |-\n        Default serializer used for user registration. It will use these:\n\n        * User fields\n        * :ref:`user-hidden-fields-setting` setting\n        * :ref:`user-public-fields-setting` setting\n\n        to automagically generate the required serializer fields.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        password:\n          type: string\n          maxLength: 128\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        is_demo:\n          type: boolean\n          description: Is a demo account?\n        first_name:\n          type: string\n          nullable: true\n          description: First name\n          maxLength: 100\n        last_name:\n          type: string\n          nullable: true\n          description: Last name\n          maxLength: 100\n        title:\n          type: string\n          nullable: true\n          description: Your position\n        bio:\n          type: string\n          nullable: true\n          description: Self-description (degree, biography, ...)\n        comment_anonymously:\n          type: boolean\n          description: Comment anonymously by-default\n        show_online_presence:\n          type: boolean\n          description: Show my online presence on Tournesol\n        show_my_profile:\n          type: boolean\n          description: Show my profile on Tournesol\n        birth_year:\n          type: integer\n          maximum: 2100\n          minimum: 1900\n          nullable: true\n          description: Year of birth\n        gender:\n          allOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          description: Your gender\n        nationality:\n          allOf:\n          - $ref: '#/components/schemas/NationalityEnum'\n          description: Your country of nationality\n        residence:\n          allOf:\n          - $ref: '#/components/schemas/ResidenceEnum'\n          description: Your country of residence\n        race:\n          allOf:\n          - $ref: '#/components/schemas/RaceEnum'\n          description: Your ethnicity\n        political_affiliation:\n          allOf:\n          - $ref: '#/components/schemas/PoliticalAffiliationEnum'\n          description: Your political preference\n        religion:\n          allOf:\n          - $ref: '#/components/schemas/ReligionEnum'\n          description: Your religion\n        degree_of_political_engagement:\n          allOf:\n          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'\n          description: Your degree of political engagement\n        moral_philosophy:\n          allOf:\n          - $ref: '#/components/schemas/MoralPhilosophyEnum'\n          description: Your preferred moral philosophy\n        website:\n          type: string\n          format: uri\n          nullable: true\n          description: Your website URL\n          maxLength: 500\n        linkedin:\n          type: string\n          format: uri\n          nullable: true\n          description: Your LinkedIn URL\n          maxLength: 500\n        youtube:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Youtube channel URL\n          maxLength: 500\n        google_scholar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Google Scholar URL\n          maxLength: 500\n        orcid:\n          type: string\n          format: uri\n          nullable: true\n          description: Your ORCID URL\n          maxLength: 500\n        researchgate:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Researchgate profile URL\n          maxLength: 500\n        twitter:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Twitter URL\n          maxLength: 500\n        avatar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your profile picture.\n      required:\n      - email\n      - id\n      - password\n      - username\n    RegisterUserRequest:\n      type: object\n      description: |-\n        Default serializer used for user registration. It will use these:\n\n        * User fields\n        * :ref:`user-hidden-fields-setting` setting\n        * :ref:`user-public-fields-setting` setting\n\n        to automagically generate the required serializer fields.\n      properties:\n        password:\n          type: string\n          minLength: 1\n          maxLength: 128\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          minLength: 1\n          title: Email address\n          maxLength: 254\n        is_demo:\n          type: boolean\n          description: Is a demo account?\n        first_name:\n          type: string\n          nullable: true\n          description: First name\n          maxLength: 100\n        last_name:\n          type: string\n          nullable: true\n          description: Last name\n          maxLength: 100\n        title:\n          type: string\n          nullable: true\n          description: Your position\n        bio:\n          type: string\n          nullable: true\n          description: Self-description (degree, biography, ...)\n        comment_anonymously:\n          type: boolean\n          description: Comment anonymously by-default\n        show_online_presence:\n          type: boolean\n          description: Show my online presence on Tournesol\n        show_my_profile:\n          type: boolean\n          description: Show my profile on Tournesol\n        birth_year:\n          type: integer\n          maximum: 2100\n          minimum: 1900\n          nullable: true\n          description: Year of birth\n        gender:\n          allOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          description: Your gender\n        nationality:\n          allOf:\n          - $ref: '#/components/schemas/NationalityEnum'\n          description: Your country of nationality\n        residence:\n          allOf:\n          - $ref: '#/components/schemas/ResidenceEnum'\n          description: Your country of residence\n        race:\n          allOf:\n          - $ref: '#/components/schemas/RaceEnum'\n          description: Your ethnicity\n        political_affiliation:\n          allOf:\n          - $ref: '#/components/schemas/PoliticalAffiliationEnum'\n          description: Your political preference\n        religion:\n          allOf:\n          - $ref: '#/components/schemas/ReligionEnum'\n          description: Your religion\n        degree_of_political_engagement:\n          allOf:\n          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'\n          description: Your degree of political engagement\n        moral_philosophy:\n          allOf:\n          - $ref: '#/components/schemas/MoralPhilosophyEnum'\n          description: Your preferred moral philosophy\n        website:\n          type: string\n          format: uri\n          nullable: true\n          description: Your website URL\n          maxLength: 500\n        linkedin:\n          type: string\n          format: uri\n          nullable: true\n          description: Your LinkedIn URL\n          maxLength: 500\n        youtube:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Youtube channel URL\n          maxLength: 500\n        google_scholar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Google Scholar URL\n          maxLength: 500\n        orcid:\n          type: string\n          format: uri\n          nullable: true\n          description: Your ORCID URL\n          maxLength: 500\n        researchgate:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Researchgate profile URL\n          maxLength: 500\n        twitter:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Twitter URL\n          maxLength: 500\n        avatar:\n          type: string\n          format: binary\n          nullable: true\n          description: Your profile picture.\n        password_confirm:\n          type: string\n          writeOnly: true\n          minLength: 1\n      required:\n      - email\n      - password\n      - password_confirm\n      - username\n    RelatedVideo:\n      type: object\n      description: |-\n        A video serializer that will create the Entity object on validation\n        if it does not exist in the database yet.\n\n        Used by ModelSerializer(s) having one or more nested relations with Entity,\n        and having the constraint to ensure that video instances exist before\n        they can be saved properly.\n      properties:\n        uid:\n          type: string\n          readOnly: true\n          description: A unique identifier, build with a namespace and an external\n            id.\n        name:\n          type: string\n          readOnly: true\n          description: Video Title\n        description:\n          type: string\n          readOnly: true\n          nullable: true\n          description: Video Description from the web page\n        publication_date:\n          type: string\n          format: date\n          readOnly: true\n          nullable: true\n          description: Video publication date\n        views:\n          type: integer\n          readOnly: true\n          nullable: true\n          description: Number of views\n        uploader:\n          type: string\n          readOnly: true\n          nullable: true\n          description: Name of the channel (uploader)\n        language:\n          readOnly: true\n          nullable: true\n          description: Language of the video\n          oneOf:\n          - $ref: '#/components/schemas/LanguageEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        rating_n_ratings:\n          type: integer\n          readOnly: true\n          description: Total number of pairwise comparisons for this videofrom certified\n            contributors\n        rating_n_contributors:\n          type: integer\n          readOnly: true\n          description: Total number of certified contributors who rated the video\n        duration:\n          type: integer\n          nullable: true\n          readOnly: true\n        video_id:\n          type: string\n          pattern: ^[A-Za-z0-9-_]{11}$\n      required:\n      - description\n      - duration\n      - language\n      - name\n      - publication_date\n      - rating_n_contributors\n      - rating_n_ratings\n      - uid\n      - uploader\n      - video_id\n      - views\n    RelatedVideoRequest:\n      type: object\n      description: |-\n        A video serializer that will create the Entity object on validation\n        if it does not exist in the database yet.\n\n        Used by ModelSerializer(s) having one or more nested relations with Entity,\n        and having the constraint to ensure that video instances exist before\n        they can be saved properly.\n      properties:\n        video_id:\n          type: string\n          minLength: 1\n          pattern: ^[A-Za-z0-9-_]{11}$\n      required:\n      - video_id\n    ReligionEnum:\n      enum:\n      - Not Specified\n      - Christian\n      - Muslim\n      - Hindu\n      - Buddhist\n      - Jewish\n      - Atheist\n      - Agnostic\n      - Other\n      type: string\n    ResetPassword:\n      type: object\n      properties:\n        user_id:\n          type: string\n        timestamp:\n          type: integer\n        signature:\n          type: string\n        password:\n          type: string\n      required:\n      - password\n      - signature\n      - timestamp\n      - user_id\n    ResetPasswordRequest:\n      type: object\n      properties:\n        user_id:\n          type: string\n          minLength: 1\n        timestamp:\n          type: integer\n        signature:\n          type: string\n          minLength: 1\n        password:\n          type: string\n          minLength: 1\n      required:\n      - password\n      - signature\n      - timestamp\n      - user_id\n    ResidenceEnum:\n      enum:\n      - Not Specified\n      - Afghanistan\n      - Åland Islands\n      - Albania\n      - Algeria\n      - American Samoa\n      - Andorra\n      - Angola\n      - Anguilla\n      - Antarctica\n      - Antigua and Barbuda\n      - Argentina\n      - Armenia\n      - Aruba\n      - Australia\n      - Austria\n      - Azerbaijan\n      - Bahamas\n      - Bahrain\n      - Bangladesh\n      - Barbados\n      - Belarus\n      - Belgium\n      - Belize\n      - Benin\n      - Bermuda\n      - Bhutan\n      - Bolivia\n      - Bonaire, Sint Eustatius and Saba\n      - Bosnia and Herzegovina\n      - Botswana\n      - Bouvet Island\n      - Brazil\n      - British Indian Ocean Territory\n      - Brunei\n      - Bulgaria\n      - Burkina Faso\n      - Burundi\n      - Cabo Verde\n      - Cambodia\n      - Cameroon\n      - Canada\n      - Cayman Islands\n      - Central African Republic\n      - Chad\n      - Chile\n      - China\n      - Christmas Island\n      - Cocos (Keeling) Islands\n      - Colombia\n      - Comoros\n      - Congo\n      - Congo (the Democratic Republic of the)\n      - Cook Islands\n      - Costa Rica\n      - Côte d'Ivoire\n      - Croatia\n      - Cuba\n      - Curaçao\n      - Cyprus\n      - Czechia\n      - Denmark\n      - Djibouti\n      - Dominica\n      - Dominican Republic\n      - Ecuador\n      - Egypt\n      - El Salvador\n      - Equatorial Guinea\n      - Eritrea\n      - Estonia\n      - Eswatini\n      - Ethiopia\n      - Falkland Islands (Malvinas)\n      - Faroe Islands\n      - Fiji\n      - Finland\n      - France\n      - French Guiana\n      - French Polynesia\n      - French Southern Territories\n      - Gabon\n      - Gambia\n      - Georgia\n      - Germany\n      - Ghana\n      - Gibraltar\n      - Greece\n      - Greenland\n      - Grenada\n      - Guadeloupe\n      - Guam\n      - Guatemala\n      - Guernsey\n      - Guinea\n      - Guinea-Bissau\n      - Guyana\n      - Haiti\n      - Heard Island and McDonald Islands\n      - Holy See\n      - Honduras\n      - Hong Kong\n      - Hungary\n      - Iceland\n      - India\n      - Indonesia\n      - Iran\n      - Iraq\n      - Ireland\n      - Isle of Man\n      - Israel\n      - Italy\n      - Jamaica\n      - Japan\n      - Jersey\n      - Jordan\n      - Kazakhstan\n      - Kenya\n      - Kiribati\n      - Kuwait\n      - Kyrgyzstan\n      - Laos\n      - Latvia\n      - Lebanon\n      - Lesotho\n      - Liberia\n      - Libya\n      - Liechtenstein\n      - Lithuania\n      - Luxembourg\n      - Macao\n      - Madagascar\n      - Malawi\n      - Malaysia\n      - Maldives\n      - Mali\n      - Malta\n      - Marshall Islands\n      - Martinique\n      - Mauritania\n      - Mauritius\n      - Mayotte\n      - Mexico\n      - Micronesia (Federated States of)\n      - Moldova\n      - Monaco\n      - Mongolia\n      - Montenegro\n      - Montserrat\n      - Morocco\n      - Mozambique\n      - Myanmar\n      - Namibia\n      - Nauru\n      - Nepal\n      - Netherlands\n      - New Caledonia\n      - New Zealand\n      - Nicaragua\n      - Niger\n      - Nigeria\n      - Niue\n      - Norfolk Island\n      - North Korea\n      - North Macedonia\n      - Northern Mariana Islands\n      - Norway\n      - Oman\n      - Pakistan\n      - Palau\n      - Palestine, State of\n      - Panama\n      - Papua New Guinea\n      - Paraguay\n      - Peru\n      - Philippines\n      - Pitcairn\n      - Poland\n      - Portugal\n      - Puerto Rico\n      - Qatar\n      - Réunion\n      - Romania\n      - Russia\n      - Rwanda\n      - Saint Barthélemy\n      - Saint Helena, Ascension and Tristan da Cunha\n      - Saint Kitts and Nevis\n      - Saint Lucia\n      - Saint Martin (French part)\n      - Saint Pierre and Miquelon\n      - Saint Vincent and the Grenadines\n      - Samoa\n      - San Marino\n      - Sao Tome and Principe\n      - Saudi Arabia\n      - Senegal\n      - Serbia\n      - Seychelles\n      - Sierra Leone\n      - Singapore\n      - Sint Maarten (Dutch part)\n      - Slovakia\n      - Slovenia\n      - Solomon Islands\n      - Somalia\n      - South Africa\n      - South Georgia and the South Sandwich Islands\n      - South Korea\n      - South Sudan\n      - Spain\n      - Sri Lanka\n      - Sudan\n      - Suriname\n      - Svalbard and Jan Mayen\n      - Sweden\n      - Switzerland\n      - Syria\n      - Taiwan\n      - Tajikistan\n      - Tanzania\n      - Thailand\n      - Timor-Leste\n      - Togo\n      - Tokelau\n      - Tonga\n      - Trinidad and Tobago\n      - Tunisia\n      - Turkey\n      - Turkmenistan\n      - Turks and Caicos Islands\n      - Tuvalu\n      - Uganda\n      - Ukraine\n      - United Arab Emirates\n      - United Kingdom\n      - United States Minor Outlying Islands\n      - United States of America\n      - Uruguay\n      - Uzbekistan\n      - Vanuatu\n      - Venezuela\n      - Vietnam\n      - Virgin Islands (British)\n      - Virgin Islands (U.S.)\n      - Wallis and Futuna\n      - Western Sahara\n      - Yemen\n      - Zambia\n      - Zimbabwe\n      type: string\n    Statistics:\n      type: object\n      description: A representation of the Tournesol public statistics.\n      properties:\n        user_count:\n          type: integer\n        last_month_user_count:\n          type: integer\n        video_count:\n          type: integer\n        last_month_video_count:\n          type: integer\n        comparison_count:\n          type: integer\n        last_month_comparison_count:\n          type: integer\n      required:\n      - comparison_count\n      - last_month_comparison_count\n      - last_month_user_count\n      - last_month_video_count\n      - user_count\n      - video_count\n    StatusEnum:\n      enum:\n      - RJ\n      - ACK\n      - PD\n      type: string\n    TypeEnum:\n      enum:\n      - video\n      type: string\n    UserProfile:\n      type: object\n      description: |-\n        Default serializer used for user profile. It will use these:\n\n        * User fields\n        * :ref:`user-hidden-fields-setting` setting\n        * :ref:`user-public-fields-setting` setting\n        * :ref:`user-editable-fields-setting` setting\n\n        to automagically generate the required serializer fields.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          readOnly: true\n          title: Email address\n        is_demo:\n          type: boolean\n          description: Is a demo account?\n        first_name:\n          type: string\n          nullable: true\n          description: First name\n          maxLength: 100\n        last_name:\n          type: string\n          nullable: true\n          description: Last name\n          maxLength: 100\n        title:\n          type: string\n          nullable: true\n          description: Your position\n        bio:\n          type: string\n          nullable: true\n          description: Self-description (degree, biography, ...)\n        comment_anonymously:\n          type: boolean\n          description: Comment anonymously by-default\n        show_online_presence:\n          type: boolean\n          description: Show my online presence on Tournesol\n        show_my_profile:\n          type: boolean\n          description: Show my profile on Tournesol\n        birth_year:\n          type: integer\n          maximum: 2100\n          minimum: 1900\n          nullable: true\n          description: Year of birth\n        gender:\n          allOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          description: Your gender\n        nationality:\n          allOf:\n          - $ref: '#/components/schemas/NationalityEnum'\n          description: Your country of nationality\n        residence:\n          allOf:\n          - $ref: '#/components/schemas/ResidenceEnum'\n          description: Your country of residence\n        race:\n          allOf:\n          - $ref: '#/components/schemas/RaceEnum'\n          description: Your ethnicity\n        political_affiliation:\n          allOf:\n          - $ref: '#/components/schemas/PoliticalAffiliationEnum'\n          description: Your political preference\n        religion:\n          allOf:\n          - $ref: '#/components/schemas/ReligionEnum'\n          description: Your religion\n        degree_of_political_engagement:\n          allOf:\n          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'\n          description: Your degree of political engagement\n        moral_philosophy:\n          allOf:\n          - $ref: '#/components/schemas/MoralPhilosophyEnum'\n          description: Your preferred moral philosophy\n        website:\n          type: string\n          format: uri\n          nullable: true\n          description: Your website URL\n          maxLength: 500\n        linkedin:\n          type: string\n          format: uri\n          nullable: true\n          description: Your LinkedIn URL\n          maxLength: 500\n        youtube:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Youtube channel URL\n          maxLength: 500\n        google_scholar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Google Scholar URL\n          maxLength: 500\n        orcid:\n          type: string\n          format: uri\n          nullable: true\n          description: Your ORCID URL\n          maxLength: 500\n        researchgate:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Researchgate profile URL\n          maxLength: 500\n        twitter:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Twitter URL\n          maxLength: 500\n        avatar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your profile picture.\n        is_trusted:\n          type: boolean\n      required:\n      - email\n      - id\n      - is_trusted\n      - username\n    UserProfileRequest:\n      type: object\n      description: |-\n        Default serializer used for user profile. It will use these:\n\n        * User fields\n        * :ref:`user-hidden-fields-setting` setting\n        * :ref:`user-public-fields-setting` setting\n        * :ref:`user-editable-fields-setting` setting\n\n        to automagically generate the required serializer fields.\n      properties:\n        username:\n          type: string\n          minLength: 1\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        is_demo:\n          type: boolean\n          description: Is a demo account?\n        first_name:\n          type: string\n          nullable: true\n          description: First name\n          maxLength: 100\n        last_name:\n          type: string\n          nullable: true\n          description: Last name\n          maxLength: 100\n        title:\n          type: string\n          nullable: true\n          description: Your position\n        bio:\n          type: string\n          nullable: true\n          description: Self-description (degree, biography, ...)\n        comment_anonymously:\n          type: boolean\n          description: Comment anonymously by-default\n        show_online_presence:\n          type: boolean\n          description: Show my online presence on Tournesol\n        show_my_profile:\n          type: boolean\n          description: Show my profile on Tournesol\n        birth_year:\n          type: integer\n          maximum: 2100\n          minimum: 1900\n          nullable: true\n          description: Year of birth\n        gender:\n          allOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          description: Your gender\n        nationality:\n          allOf:\n          - $ref: '#/components/schemas/NationalityEnum'\n          description: Your country of nationality\n        residence:\n          allOf:\n          - $ref: '#/components/schemas/ResidenceEnum'\n          description: Your country of residence\n        race:\n          allOf:\n          - $ref: '#/components/schemas/RaceEnum'\n          description: Your ethnicity\n        political_affiliation:\n          allOf:\n          - $ref: '#/components/schemas/PoliticalAffiliationEnum'\n          description: Your political preference\n        religion:\n          allOf:\n          - $ref: '#/components/schemas/ReligionEnum'\n          description: Your religion\n        degree_of_political_engagement:\n          allOf:\n          - $ref: '#/components/schemas/DegreeOfPoliticalEngagementEnum'\n          description: Your degree of political engagement\n        moral_philosophy:\n          allOf:\n          - $ref: '#/components/schemas/MoralPhilosophyEnum'\n          description: Your preferred moral philosophy\n        website:\n          type: string\n          format: uri\n          nullable: true\n          description: Your website URL\n          maxLength: 500\n        linkedin:\n          type: string\n          format: uri\n          nullable: true\n          description: Your LinkedIn URL\n          maxLength: 500\n        youtube:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Youtube channel URL\n          maxLength: 500\n        google_scholar:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Google Scholar URL\n          maxLength: 500\n        orcid:\n          type: string\n          format: uri\n          nullable: true\n          description: Your ORCID URL\n          maxLength: 500\n        researchgate:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Researchgate profile URL\n          maxLength: 500\n        twitter:\n          type: string\n          format: uri\n          nullable: true\n          description: Your Twitter URL\n          maxLength: 500\n        avatar:\n          type: string\n          format: binary\n          nullable: true\n          description: Your profile picture.\n        is_trusted:\n          type: boolean\n      required:\n      - is_trusted\n      - username\n    VerifyEmail:\n      type: object\n      properties:\n        user_id:\n          type: string\n        email:\n          type: string\n          format: email\n        timestamp:\n          type: integer\n        signature:\n          type: string\n      required:\n      - email\n      - signature\n      - timestamp\n      - user_id\n    VerifyEmailRequest:\n      type: object\n      properties:\n        user_id:\n          type: string\n          minLength: 1\n        email:\n          type: string\n          format: email\n          minLength: 1\n        timestamp:\n          type: integer\n        signature:\n          type: string\n          minLength: 1\n      required:\n      - email\n      - signature\n      - timestamp\n      - user_id\n    VerifyRegistration:\n      type: object\n      properties:\n        user_id:\n          type: string\n        timestamp:\n          type: integer\n        signature:\n          type: string\n      required:\n      - signature\n      - timestamp\n      - user_id\n    VerifyRegistrationRequest:\n      type: object\n      properties:\n        user_id:\n          type: string\n          minLength: 1\n        timestamp:\n          type: integer\n        signature:\n          type: string\n          minLength: 1\n      required:\n      - signature\n      - timestamp\n      - user_id\n    Video:\n      type: object\n      properties:\n        uid:\n          type: string\n          readOnly: true\n          description: A unique identifier, build with a namespace and an external\n            id.\n        name:\n          type: string\n          readOnly: true\n          description: Video Title\n        description:\n          type: string\n          readOnly: true\n          nullable: true\n          description: Video Description from the web page\n        publication_date:\n          type: string\n          format: date\n          readOnly: true\n          nullable: true\n          description: Video publication date\n        views:\n          type: integer\n          readOnly: true\n          nullable: true\n          description: Number of views\n        uploader:\n          type: string\n          readOnly: true\n          nullable: true\n          description: Name of the channel (uploader)\n        language:\n          readOnly: true\n          nullable: true\n          description: Language of the video\n          oneOf:\n          - $ref: '#/components/schemas/LanguageEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        rating_n_ratings:\n          type: integer\n          readOnly: true\n          description: Total number of pairwise comparisons for this videofrom certified\n            contributors\n        rating_n_contributors:\n          type: integer\n          readOnly: true\n          description: Total number of certified contributors who rated the video\n        duration:\n          type: integer\n          nullable: true\n          readOnly: true\n        video_id:\n          type: string\n          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$\n          pattern: ^[A-Za-z0-9-_]{11}$\n          maxLength: 20\n      required:\n      - description\n      - duration\n      - language\n      - name\n      - publication_date\n      - rating_n_contributors\n      - rating_n_ratings\n      - uid\n      - uploader\n      - video_id\n      - views\n    VideoRateLater:\n      type: object\n      properties:\n        video:\n          $ref: '#/components/schemas/RelatedVideo'\n      required:\n      - video\n    VideoRateLaterRequest:\n      type: object\n      properties:\n        video:\n          $ref: '#/components/schemas/RelatedVideoRequest'\n      required:\n      - video\n    VideoRequest:\n      type: object\n      properties:\n        video_id:\n          type: string\n          minLength: 1\n          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$\n          pattern: ^[A-Za-z0-9-_]{11}$\n          maxLength: 20\n      required:\n      - video_id\n    VideoSerializerWithCriteria:\n      type: object\n      properties:\n        uid:\n          type: string\n          description: A unique identifier, build with a namespace and an external\n            id.\n          maxLength: 144\n        name:\n          type: string\n          description: Video Title\n          maxLength: 1000\n        description:\n          type: string\n          nullable: true\n          description: Video Description from the web page\n        publication_date:\n          type: string\n          format: date\n          nullable: true\n          description: Video publication date\n        views:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n          description: Number of views\n        uploader:\n          type: string\n          nullable: true\n          description: Name of the channel (uploader)\n          maxLength: 1000\n        language:\n          nullable: true\n          description: Language of the video\n          oneOf:\n          - $ref: '#/components/schemas/LanguageEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        rating_n_ratings:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Total number of pairwise comparisons for this videofrom certified\n            contributors\n        rating_n_contributors:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          description: Total number of certified contributors who rated the video\n        duration:\n          type: integer\n          nullable: true\n          readOnly: true\n        video_id:\n          type: string\n          description: Video ID from YouTube URL, matches ^[A-Za-z0-9-_]{11}$\n          pattern: ^[A-Za-z0-9-_]{11}$\n          maxLength: 20\n        criteria_scores:\n          type: array\n          items:\n            $ref: '#/components/schemas/EntityCriteriaScore'\n      required:\n      - criteria_scores\n      - duration\n      - uid\n      - video_id\n  securitySchemes:\n    oauth2:\n      type: oauth2\n      flows:\n        password:\n          tokenUrl: http://127.0.0.1:8000/o/token/\n          refreshUrl: http://127.0.0.1:8000/o/token/\n          scopes:\n            openid: OpenID Connect scope\n            read: Read scope\n            write: Write scope\n            groups: Access to your groups\n"
		}
	},
	"Error": "parse: parse spec: paths: /video/: get: operation \"video_list\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/PaginatedVideoSerializerWithCriteriaList\": parse schema: results: parse schema: item: parse schema: reference \"#/components/schemas/VideoSerializerWithCriteria\": parse schema: language: parse schema: oneOf: [2]: parse schema: reference \"#/components/schemas/NullEnum\": parse schema: infer enum type: cannot infer type from \"null\""
}