{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dragonflyoss/image-service"
		},
		"file": {
			"name": "nydus-api-v2.yaml",
			"size": 0,
			"path": "api/openapi/nydus-api-v2.yaml",
			"byteSize": 4043,
			"content": "openapi: \"3.0.2\"\ninfo:\n  title: Nydus Service and Management APIs, version 2.\n  description:\n    This is the second version of RESTful Nydus service and management APIs to manage the global daemon and\n    individual services.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: \"0.1\"\nservers:\n  - url: https://localhost/v2\npaths:\n  /daemon:\n    summary: Returns general information about the nydus daemon\n    get:\n      operationId: describeDaemon\n      responses:\n        \"200\":\n          description: Daemon information\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DaemonInfo\"\n        \"500\":\n          description: Internal Server Error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorMsg\"\n    put:\n      operationId: configureDaemon\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DaemonConf\"\n      responses:\n        \"204\":\n          description: \"Successfully configure the daemon!\"\n        \"500\":\n          description: \"Can't configure the daemon!\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorMsg\"\n  /blob_objects:\n    summary: Manage cached blob objects\n    ####################################################################\n    get:\n      operationId: getBlobObject\n      responses:\n        \"200\":\n          description: Blob objects\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlobObjectList\"\n        \"404\":\n          description: \"Blob object not found\"\n        \"500\":\n          description: \"Internal Server Error\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorMsg\"\n    put:\n      operationId: createBlobObject\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BlobObjectConf\"\n      responses:\n        \"204\":\n          description: \"Successfully created the blob object!\"\n        \"500\":\n          description: \"Can't create the blob object!\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorMsg\"\n    delete:\n      operationId: deleteBlobObject\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BlobObjectParam\"\n      responses:\n        \"204\":\n          description: \"Successfully deleted the blob object!\"\n        \"500\":\n          description: \"Can't delete the blob object!\"\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ErrorMsg\"\n################################################################\ncomponents:\n  schemas:\n    DaemonInfo:\n      type: object\n      properties:\n        version:\n          type: object\n          properties:\n            package_ver:\n              type: string\n            git_commit:\n              type: string\n            build_time:\n              type: string\n            profile:\n              type: string\n            rustc:\n              type: string\n        id:\n          type: string\n        supervisor:\n          type: string\n        state:\n          type: string\n          enum:\n            - INIT\n            - RUNNING\n            - UPGRADING\n            - INTERRUPTED\n            - STOPPED\n            - UNKNOWN\n    DaemonConf:\n      type: object\n      properties:\n        log_level:\n          type: string\n          enum: [trace, debug, info, warn, error]\n    ErrorMsg:\n      type: object\n      properties:\n        code:\n          description: Nydus defined error code indicating certain error type\n          type: string\n        message:\n          description: Details about the error\n          type: string\n",
			"canonicalURL": "/github.com/dragonflyoss/image-service@c547b5bfea21fcad526ab6694b23897ffe7c398e/-/blob/api/openapi/nydus-api-v2.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dragonflyoss/image-service/blob/c547b5bfea21fcad526ab6694b23897ffe7c398e/api/openapi/nydus-api-v2.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/blob_objects\": get: operation \"getBlobObject\": responses: 200: content: application/json: schema: parse schema: at 1:1571: find schema: resolve: can't find value for \"components/schemas/BlobObjectList\""
}