{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/billingo.hu/3.0.7/openapi.yaml",
			"byteSize": 86243,
			"content": "openapi: 3.0.0\nservers:\n  - description: Billingo API\n    url: https://api.billingo.hu/v3\ninfo:\n  contact:\n    email: hello@billingo.hu\n    name: Billingo Support\n    url: https://www.billingo.hu/kapcsolat\n  description: This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.\n  termsOfService: https://www.billingo.hu/felhasznalasi-feltetelek\n  title: Billingo API v3\n  version: 3.0.7\n  x-apisguru-categories:\n    - financial\n  x-logo:\n    url: https://www.billingo.hu/images/billingo_logo.svg\n  x-origin:\n    - format: openapi\n      url: https://api.swaggerhub.com/apis/Billingo/Billingo/3.0.7\n      version: \"3.0\"\n  x-providerName: billingo.hu\nexternalDocs:\n  description: Find out more information about Billingo API v3 usage.\n  url: https://support.billingo.hu/content/446136358\nsecurity:\n  - api_key: []\ntags:\n  - description: Document object represents your invoice.\n    name: Document\n  - description: DocumentBlock object represents your invoice pad.\n    name: DocumentBlock\n  - description: Partner object represents your client.\n    name: Partner\n  - description: Product object represents your document's product.\n    name: Product\n  - description: BankAccount object represents your bank account information.\n    name: BankAccount\npaths:\n  /bank-accounts:\n    get:\n      description: Returns a list of your bank accounts. The bank accounts are returned sorted by creation date, with the most recent bank account appearing first.\n      operationId: ListBankAccount\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            default: \"1\"\n            type: integer\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            default: 25\n            maximum: 100\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccountList\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: List all bank account\n      tags:\n        - BankAccount\n    post:\n      description: Create a new bank account. Returns a bank account object if the create is succeded.\n      operationId: CreateBankAccount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BankAccount\"\n        description: BankAccount object that you would like to store.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: BankAccount created successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Create a bank account\n      tags:\n        - BankAccount\n  \"/bank-accounts/{id}\":\n    delete:\n      description: Delete an existing bank account.\n      operationId: DeleteBankAccount\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Bank account deleted successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Delete a bank account\n      tags:\n        - BankAccount\n    get:\n      description: Retrieves the details of an existing bank account.\n      operationId: GetBankAccount\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a bank account\n      tags:\n        - BankAccount\n    put:\n      description: Update an existing bank accounts. Returns a bank account object if the update is succeded.\n      operationId: UpdateBankAccount\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/BankAccount\"\n        description: Bank account object that you would like to update.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BankAccount\"\n          description: Bank account updated successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Update a bank account\n      tags:\n        - BankAccount\n  /currencies:\n    get:\n      description: Return with the exchange value of given currencies.\n      operationId: GetConversionRate\n      parameters:\n        - in: query\n          name: from\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Currency\"\n        - in: query\n          name: to\n          required: true\n          schema:\n            $ref: \"#/components/schemas/Currency\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConversationRate\"\n          description: Currencies exchange rate returned.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Get currencies exchange rate.\n      tags:\n        - Currency\n  /document-blocks:\n    get:\n      description: Returns a list of your document blocks. The document blocks are returned sorted by creation date, with the most recent document blocks appearing first.\n      operationId: ListDocumentBlock\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            default: \"1\"\n            type: integer\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            default: 25\n            maximum: 100\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentBlockList\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: List all document blocks\n      tags:\n        - DocumentBlock\n  /documents:\n    get:\n      description: Returns a list of your documents. The documents are returned sorted by creation date, with the most recent documents appearing first.\n      operationId: ListDocument\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            default: \"1\"\n            type: integer\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            default: 25\n            maximum: 100\n            minimum: 1\n            type: integer\n        - description: Filter documents by the identifier of your DocumentBlock.\n          in: query\n          name: block_id\n          required: false\n          schema:\n            type: integer\n        - description: Filter documents by the identifier of your Partner.\n          in: query\n          name: partner_id\n          required: false\n          schema:\n            type: integer\n        - description: Filter documents by PaymentMethod value.\n          example: cash\n          in: query\n          name: payment_method\n          required: false\n          schema:\n            $ref: \"#/components/schemas/PaymentMethod\"\n        - description: Filter documents by PaymentStatus value.\n          example: paid\n          in: query\n          name: payment_status\n          required: false\n          schema:\n            $ref: \"#/components/schemas/PaymentStatus\"\n        - description: Filter documents by date.\n          example: 2020-05-15\n          in: query\n          name: start_date\n          required: false\n          schema:\n            format: date\n            type: string\n        - description: Filter documents by date.\n          example: 2020-05-15\n          in: query\n          name: end_date\n          required: false\n          schema:\n            format: date\n            type: string\n        - description: Starting number of the document, should not contain year or any other formatting. Required if `start_year` given\n          example: \"1\"\n          in: query\n          name: start_number\n          required: false\n          schema:\n            type: integer\n        - description: Ending number of the document, should not contain year or any other formatting. Required if `end_year` given\n          example: \"10\"\n          in: query\n          name: end_number\n          required: false\n          schema:\n            type: integer\n        - description: Year for `start_number` parameter. Required if `start_number` given.\n          example: \"2020\"\n          in: query\n          name: start_year\n          required: false\n          schema:\n            type: integer\n        - description: Year for `end_number` parameter. Required if `end_number` given.\n          example: \"2020\"\n          in: query\n          name: end_year\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentList\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: List all documents\n      tags:\n        - Document\n    post:\n      description: Create a new document. Returns a document object if the create is succeded.\n      operationId: CreateDocument\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DocumentInsert\"\n        description: DocumentInsert object that you would like to store.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: Document created successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Create a document\n      tags:\n        - Document\n  \"/documents/{id}\":\n    get:\n      description: Retrieves the details of an existing document.\n      operationId: GetDocument\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a document\n      tags:\n        - Document\n  \"/documents/{id}/cancel\":\n    post:\n      description: Cancel a document. Returns a cancellation document object if the cancellation is succeded.\n      operationId: CancelDocument\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: Document cancellation successfully. Cancel document returned.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Cancel a document\n      tags:\n        - Document\n  \"/documents/{id}/create-from-proforma\":\n    post:\n      description: Create a new document from proforma. Returns a document object if the create is succeded.\n      operationId: CreateDocumentFromProforma\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Document\"\n          description: Document created successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Create a document from proforma.\n      tags:\n        - Document\n  \"/documents/{id}/download\":\n    get:\n      description: Download a document. Returns a document in PDF format.\n      operationId: DownloadDocument\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/pdf:\n              schema:\n                format: binary\n                type: string\n          description: Document PDF file.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Document PDF has not generated yet. You should try to download again later.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Download a document in PDF format.\n      tags:\n        - Document\n  \"/documents/{id}/online-szamla\":\n    get:\n      description: Retrieves the details of an existing document status.\n      operationId: GetOnlineSzamlaStatus\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OnlineSzamlaStatus\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a document Online Számla status\n      tags:\n        - Document\n  \"/documents/{id}/payments\":\n    delete:\n      description: Delete all exist payment history on document.\n      operationId: DeletePayment\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentHistory\"\n                type: array\n          description: Payment history deleted successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Delete all payment history on document\n      tags:\n        - Document\n    get:\n      description: Retrieves the details of payment history an existing document.\n      operationId: GetPayment\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentHistory\"\n                type: array\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a payment histroy\n      tags:\n        - Document\n    put:\n      description: Update payment history an existing document. Returns a payment history object if the update is succeded.\n      operationId: UpdatePayment\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              items:\n                $ref: \"#/components/schemas/PaymentHistory\"\n              type: array\n        description: Payment history object that you would like to update.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: \"#/components/schemas/PaymentHistory\"\n                type: array\n          description: Payment history updated successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Update payment history\n      tags:\n        - Document\n  \"/documents/{id}/public-url\":\n    get:\n      description: Retrieves public url to download an existing document.\n      operationId: GetPublicUrl\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DocumentPublicUrl\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a document download public url.\n      tags:\n        - Document\n  \"/documents/{id}/send\":\n    post:\n      description: Returns a list of emails, where the invoice is sent.\n      operationId: SendDocument\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/SendDocument\"\n        description: List of email-s where you want to send the invoice.\n        required: false\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SendDocument\"\n          description: List of email adresses where the invoice sent.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Send invoice to given email adresses.\n      tags:\n        - Document\n  /organization:\n    get:\n      description: Retrieves the data of organization.\n      operationId: GetOrganizationData\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OrganizationData\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a organization data.\n      tags:\n        - Organization\n  /partners:\n    get:\n      description: Returns a list of your partners. The partners are returned sorted by creation date, with the most recent partners appearing first.\n      operationId: ListPartner\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            default: \"1\"\n            type: integer\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            default: 25\n            maximum: 100\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/PartnerList\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: List all partners\n      tags:\n        - Partner\n    post:\n      description: Create a new partner. Returns a partner object if the create is succeded.\n      operationId: CreatePartner\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PartnerUpsert\"\n        description: PartnerUpsert object that you would like to store.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Partner\"\n          description: Partner created successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Create a partner\n      tags:\n        - Partner\n  \"/partners/{id}\":\n    delete:\n      description: Delete an existing partner.\n      operationId: DeletePartner\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Partner deleted successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Delete a partner\n      tags:\n        - Partner\n    get:\n      description: Retrieves the details of an existing partner.\n      operationId: GetPartner\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Partner\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a partner\n      tags:\n        - Partner\n    put:\n      description: Update an existing partner. Returns a partner object if the update is succeded.\n      operationId: UpdatePartner\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PartnerUpsert\"\n        description: Partner object that you would like to update.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Partner\"\n          description: Partner updated successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Update a partner\n      tags:\n        - Partner\n  /products:\n    get:\n      description: Returns a list of your products. The partners are returned sorted by creation date, with the most recent partners appearing first.\n      operationId: ListProduct\n      parameters:\n        - in: query\n          name: page\n          required: false\n          schema:\n            default: \"1\"\n            type: integer\n        - in: query\n          name: per_page\n          required: false\n          schema:\n            default: 25\n            maximum: 100\n            minimum: 1\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ProductList\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: List all product\n      tags:\n        - Product\n    post:\n      description: Create a new product. Returns a product object if the create is succeded.\n      operationId: CreateProduct\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Product\"\n        description: Product object that you would like to store.\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Product created successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Create a product\n      tags:\n        - Product\n  \"/products/{id}\":\n    delete:\n      description: Delete an existing product.\n      operationId: DeleteProduct\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"204\":\n          description: Product deleted successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Delete a product\n      tags:\n        - Product\n    get:\n      description: Retrieves the details of an existing product.\n      operationId: GetProduct\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Retrieve a product\n      tags:\n        - Product\n    put:\n      description: Update an existing product. Returns a product object if the update is succeded.\n      operationId: UpdateProduct\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Product\"\n        description: Product object that you would like to update.\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Product\"\n          description: Product updated successfully.\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"403\":\n          $ref: \"#/components/responses/Forbidden\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Update a product\n      tags:\n        - Product\n  \"/utils/convert-legacy-id/{id}\":\n    get:\n      description: Retrieves the API v3 ID.\n      operationId: GetId\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Id\"\n          description: Success response\n          headers:\n            Retry-After:\n              description: How many seconds you have to wait before making new request.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Limit:\n              description: Request limit per minute.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Remaining:\n              description: The number of requests left for the time window.\n              schema:\n                format: int32\n                type: integer\n            X-RateLimit-Reset:\n              description: The timestamp at which the current rate limit window resets.\n              schema:\n                format: int32\n                type: integer\n        \"400\":\n          $ref: \"#/components/responses/BadRequest\"\n        \"401\":\n          $ref: \"#/components/responses/Unauthorized\"\n        \"404\":\n          $ref: \"#/components/responses/NotFound\"\n        \"422\":\n          $ref: \"#/components/responses/UnprocessableEntity\"\n        \"500\":\n          $ref: \"#/components/responses/ServerError\"\n      summary: Convert legacy ID to v3 ID.\n      tags:\n        - Util\ncomponents:\n  responses:\n    BadRequest:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ClientErrorResponse\"\n      description: The request is malformed.\n      headers:\n        Retry-After:\n          description: How many seconds you have to wait before making new request.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: Request limit per minute.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of requests left for the time window.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The timestamp at which the current rate limit window resets.\n          schema:\n            format: int32\n            type: integer\n    Forbidden:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ClientErrorResponse\"\n      description: Authenticated user doesn't have access to the resource.\n      headers:\n        Retry-After:\n          description: How many seconds you have to wait before making new request.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: Request limit per minute.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of requests left for the time window.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The timestamp at which the current rate limit window resets.\n          schema:\n            format: int32\n            type: integer\n    NotFound:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ClientErrorResponse\"\n      description: Non-existent resource is requested.\n      headers:\n        Retry-After:\n          description: How many seconds you have to wait before making new request.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: Request limit per minute.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of requests left for the time window.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The timestamp at which the current rate limit window resets.\n          schema:\n            format: int32\n            type: integer\n    ServerError:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ServerErrorResponse\"\n      description: Internal server error.\n      headers:\n        Retry-After:\n          description: How many seconds you have to wait before making new request.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: Request limit per minute.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of requests left for the time window.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The timestamp at which the current rate limit window resets.\n          schema:\n            format: int32\n            type: integer\n    Unauthorized:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ClientErrorResponse\"\n      description: Authorization information is missing or invalid.\n      headers:\n        Retry-After:\n          description: How many seconds you have to wait before making new request.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: Request limit per minute.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of requests left for the time window.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The timestamp at which the current rate limit window resets.\n          schema:\n            format: int32\n            type: integer\n    UnprocessableEntity:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/ValidationErrorResponse\"\n      description: Validation errors occured.\n      headers:\n        Retry-After:\n          description: How many seconds you have to wait before making new request.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Limit:\n          description: Request limit per minute.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Remaining:\n          description: The number of requests left for the time window.\n          schema:\n            format: int32\n            type: integer\n        X-RateLimit-Reset:\n          description: The timestamp at which the current rate limit window resets.\n          schema:\n            format: int32\n            type: integer\n  schemas:\n    Address:\n      properties:\n        address:\n          type: string\n        city:\n          type: string\n        country_code:\n          $ref: \"#/components/schemas/Country\"\n        post_code:\n          type: string\n      required:\n        - country_code\n        - post_code\n        - city\n        - address\n      type: object\n    BankAccount:\n      properties:\n        account_number:\n          type: string\n        account_number_iban:\n          type: string\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        id:\n          readOnly: true\n          type: integer\n        name:\n          type: string\n        need_qr:\n          default: \"false\"\n          type: boolean\n        swift:\n          type: string\n      required:\n        - name\n        - account_number\n        - currency\n      type: object\n    BankAccountList:\n      description: A object with a data property that contains an array of up to limit bank accounts. Each entry in the array is a separate bank account object. If no more bank accounts are available, the resulting array will be empty.\n      properties:\n        current_page:\n          type: integer\n        data:\n          items:\n            $ref: \"#/components/schemas/BankAccount\"\n          type: array\n        last_page:\n          type: integer\n        next_page_url:\n          type: string\n        per_page:\n          type: integer\n        prev_page_url:\n          type: string\n        total:\n          type: integer\n      type: object\n    ClientError:\n      properties:\n        message:\n          type: string\n      type: object\n    ClientErrorResponse:\n      example:\n        error:\n          message: \"Authorization information (Header: %s) is missing or invalid.\"\n      properties:\n        error:\n          $ref: \"#/components/schemas/ClientError\"\n      type: object\n    ConversationRate:\n      properties:\n        conversation_rate:\n          format: float\n          type: number\n        from_currency:\n          $ref: \"#/components/schemas/Currency\"\n        to_currency:\n          $ref: \"#/components/schemas/Currency\"\n      type: object\n    Country:\n      enum:\n        - \"\"\n        - AC\n        - AD\n        - AE\n        - AF\n        - AG\n        - AI\n        - AL\n        - AM\n        - AO\n        - AQ\n        - AR\n        - AS\n        - AT\n        - AU\n        - AW\n        - AX\n        - AZ\n        - BA\n        - BB\n        - BD\n        - BE\n        - BF\n        - BG\n        - BH\n        - BI\n        - BJ\n        - BL\n        - BM\n        - BN\n        - BO\n        - BQ\n        - BR\n        - BS\n        - BT\n        - BW\n        - BY\n        - BZ\n        - CA\n        - CC\n        - CD\n        - CF\n        - CG\n        - CH\n        - CI\n        - CK\n        - CL\n        - CM\n        - CN\n        - CO\n        - CR\n        - CU\n        - CV\n        - CW\n        - CX\n        - CY\n        - CZ\n        - DE\n        - DG\n        - DJ\n        - DK\n        - DM\n        - DO\n        - DZ\n        - EA\n        - EC\n        - EE\n        - EG\n        - EH\n        - ER\n        - ES\n        - ET\n        - FI\n        - FJ\n        - FK\n        - FM\n        - FO\n        - FR\n        - GA\n        - GB\n        - GD\n        - GE\n        - GF\n        - GG\n        - GH\n        - GI\n        - GL\n        - GM\n        - GN\n        - GP\n        - GQ\n        - GR\n        - GS\n        - GT\n        - GU\n        - GW\n        - GY\n        - HK\n        - HN\n        - HR\n        - HT\n        - HU\n        - IC\n        - ID\n        - IE\n        - IL\n        - IM\n        - IN\n        - IO\n        - IQ\n        - IR\n        - IS\n        - IT\n        - JE\n        - JM\n        - JO\n        - JP\n        - KE\n        - KG\n        - KH\n        - KI\n        - KM\n        - KN\n        - KP\n        - KR\n        - KW\n        - KY\n        - KZ\n        - LA\n        - LB\n        - LC\n        - LI\n        - LK\n        - LR\n        - LS\n        - LT\n        - LU\n        - LV\n        - LY\n        - MA\n        - MC\n        - MD\n        - ME\n        - MF\n        - MG\n        - MH\n        - MK\n        - ML\n        - MM\n        - MN\n        - MO\n        - MP\n        - MQ\n        - MR\n        - MS\n        - MT\n        - MU\n        - MV\n        - MW\n        - MX\n        - MY\n        - MZ\n        - NA\n        - NC\n        - NE\n        - NF\n        - NG\n        - NI\n        - NL\n        - NO\n        - NP\n        - NR\n        - NU\n        - NZ\n        - OM\n        - PA\n        - PE\n        - PF\n        - PG\n        - PH\n        - PK\n        - PL\n        - PM\n        - PN\n        - PR\n        - PS\n        - PT\n        - PW\n        - PY\n        - QA\n        - RE\n        - RO\n        - RS\n        - RU\n        - RW\n        - SA\n        - SB\n        - SC\n        - SD\n        - SE\n        - SG\n        - SH\n        - SI\n        - SJ\n        - SK\n        - SL\n        - SM\n        - SN\n        - SO\n        - SR\n        - SS\n        - ST\n        - SV\n        - SX\n        - SY\n        - SZ\n        - TA\n        - TC\n        - TD\n        - TF\n        - TG\n        - TH\n        - TJ\n        - TK\n        - TL\n        - TM\n        - TN\n        - TO\n        - TR\n        - TT\n        - TV\n        - TW\n        - TZ\n        - UA\n        - UG\n        - UM\n        - US\n        - UY\n        - UZ\n        - VA\n        - VC\n        - VE\n        - VG\n        - VI\n        - VN\n        - VU\n        - WF\n        - WS\n        - XA\n        - XB\n        - XK\n        - YE\n        - YT\n        - ZA\n        - ZM\n        - ZW\n      type: string\n    Currency:\n      enum:\n        - AUD\n        - BGN\n        - BRL\n        - CAD\n        - CHF\n        - CNY\n        - CZK\n        - DKK\n        - EUR\n        - GBP\n        - HKD\n        - HRK\n        - HUF\n        - IDR\n        - ILS\n        - INR\n        - ISK\n        - JPY\n        - KRW\n        - LTL\n        - LVL\n        - MXN\n        - MYR\n        - NOK\n        - NZD\n        - PHP\n        - PLN\n        - RON\n        - RSD\n        - RUB\n        - SEK\n        - SGD\n        - THB\n        - TRY\n        - UAH\n        - USD\n        - ZAR\n      type: string\n    Document:\n      description: Document object representing your invoice.\n      properties:\n        block_id:\n          description: DocumentBlock's identifier.\n          type: integer\n        cancelled:\n          type: boolean\n        comment:\n          type: string\n        conversion_rate:\n          format: float\n          type: number\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        due_date:\n          format: date\n          type: string\n        electronic:\n          type: boolean\n        fulfillment_date:\n          format: date\n          type: string\n        gross_total:\n          description: The document's gross total price.\n          format: float\n          type: number\n        id:\n          description: The document's unique identifier.\n          type: integer\n        invoice_date:\n          format: date\n          type: string\n        invoice_number:\n          description: The document's invoice number.\n          example: PREFIX / 2020-000001\n          type: string\n        items:\n          items:\n            $ref: \"#/components/schemas/DocumentItem\"\n          type: array\n        language:\n          $ref: \"#/components/schemas/DocumentLanguage\"\n        notification_status:\n          $ref: \"#/components/schemas/DocumentNotificationStatus\"\n        organization:\n          $ref: \"#/components/schemas/DocumentOrganization\"\n        paid_date:\n          format: date\n          type: string\n        partner:\n          $ref: \"#/components/schemas/Partner\"\n        payment_method:\n          $ref: \"#/components/schemas/PaymentMethod\"\n        payment_status:\n          $ref: \"#/components/schemas/PaymentStatus\"\n        settings:\n          $ref: \"#/components/schemas/DocumentSettings\"\n        summary:\n          $ref: \"#/components/schemas/DocumentSummary\"\n        tags:\n          items:\n            type: string\n          type: array\n        type:\n          $ref: \"#/components/schemas/DocumentType\"\n      type: object\n    DocumentBankAccount:\n      properties:\n        account_number:\n          type: string\n        account_number_iban:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        name:\n          type: string\n        swift:\n          type: string\n      required:\n        - name\n        - account_number\n      type: object\n    DocumentBlock:\n      properties:\n        custom_field1:\n          type: string\n        custom_field2:\n          type: string\n        id:\n          type: integer\n        name:\n          type: string\n        prefix:\n          type: string\n      type: object\n    DocumentBlockList:\n      description: A object with a data property that contains an array of up to limit document blocks. Each entry in the array is a separate document block object. If no more document block are available, the resulting array will be empty.\n      properties:\n        current_page:\n          type: integer\n        data:\n          items:\n            $ref: \"#/components/schemas/DocumentBlock\"\n          type: array\n        last_page:\n          type: integer\n        next_page_url:\n          type: string\n        per_page:\n          type: integer\n        prev_page_url:\n          type: string\n        total:\n          type: integer\n      type: object\n    DocumentInsert:\n      properties:\n        bank_account_id:\n          type: integer\n        block_id:\n          type: integer\n        comment:\n          type: string\n        conversion_rate:\n          default: \"1\"\n          format: float\n          type: number\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        due_date:\n          format: date\n          type: string\n        electronic:\n          default: false\n          type: boolean\n        fulfillment_date:\n          format: date\n          type: string\n        items:\n          items:\n            oneOf:\n              - $ref: \"#/components/schemas/DocumentItemData\"\n              - $ref: \"#/components/schemas/DocumentProductData\"\n          type: array\n        language:\n          $ref: \"#/components/schemas/DocumentLanguage\"\n        paid:\n          default: false\n          type: boolean\n        partner_id:\n          type: integer\n        payment_method:\n          $ref: \"#/components/schemas/PaymentMethod\"\n        settings:\n          $ref: \"#/components/schemas/DocumentSettings\"\n        type:\n          $ref: \"#/components/schemas/DocumentInsertType\"\n        vendor_id:\n          type: string\n      required:\n        - partner_id\n        - block_id\n        - type\n        - fulfillment_date\n        - due_date\n        - payment_method\n        - language\n        - currency\n      type: object\n    DocumentInsertType:\n      enum:\n        - advance\n        - draft\n        - invoice\n        - proforma\n      type: string\n    DocumentItem:\n      properties:\n        gross_amount:\n          format: float\n          type: number\n        name:\n          type: string\n        net_amount:\n          format: float\n          type: number\n        net_unit_amount:\n          format: float\n          type: number\n        product_id:\n          type: integer\n        quantity:\n          format: float\n          type: number\n        vat:\n          $ref: \"#/components/schemas/Vat\"\n        vat_amount:\n          format: float\n          type: number\n      type: object\n    DocumentItemData:\n      properties:\n        product_id:\n          type: integer\n        quantity:\n          format: float\n          type: number\n      required:\n        - product_id\n        - quantity\n      type: object\n    DocumentLanguage:\n      enum:\n        - de\n        - en\n        - fr\n        - hr\n        - hu\n        - it\n        - ro\n        - sk\n      type: string\n    DocumentList:\n      description: A object with a data property that contains an array of up to limit documents. Each entry in the array is a separate document object. If no more documents are available, the resulting array will be empty.\n      properties:\n        current_page:\n          type: integer\n        data:\n          items:\n            $ref: \"#/components/schemas/Document\"\n          type: array\n        last_page:\n          type: integer\n        next_page_url:\n          type: string\n        per_page:\n          type: integer\n        prev_page_url:\n          type: string\n        total:\n          type: integer\n      type: object\n    DocumentNotificationStatus:\n      enum:\n        - closed\n        - downloaded\n        - failed\n        - none\n        - opened\n        - readed\n      type: string\n    DocumentOrganization:\n      properties:\n        address:\n          $ref: \"#/components/schemas/Address\"\n        bank_account:\n          $ref: \"#/components/schemas/DocumentBankAccount\"\n        cash_settled:\n          type: boolean\n        eu_tax_number:\n          type: string\n        ev_number:\n          type: string\n        name:\n          type: string\n        small_taxpayer:\n          type: boolean\n        tax_number:\n          type: string\n      type: object\n    DocumentProductData:\n      properties:\n        comment:\n          type: string\n        name:\n          type: string\n        quantity:\n          format: float\n          type: number\n        unit:\n          type: string\n        unit_price:\n          format: float\n          type: number\n        unit_price_type:\n          $ref: \"#/components/schemas/UnitPriceType\"\n        vat:\n          $ref: \"#/components/schemas/Vat\"\n      required:\n        - name\n        - unit_price\n        - unit_price_type\n        - quantity\n        - unit\n        - vat\n      type: object\n    DocumentPublicUrl:\n      properties:\n        public_url:\n          type: string\n      type: object\n    DocumentSettings:\n      properties:\n        mediated_service:\n          default: false\n          type: boolean\n        online_payment:\n          $ref: \"#/components/schemas/OnlinePayment\"\n        place_id:\n          type: integer\n        round:\n          $ref: \"#/components/schemas/Round\"\n        without_financial_fulfillment:\n          default: false\n          type: boolean\n      type: object\n    DocumentSummary:\n      properties:\n        gross_amount_local:\n          format: float\n          type: number\n        net_amount:\n          format: float\n          type: number\n        net_amount_local:\n          format: float\n          type: number\n        vat_amount:\n          format: float\n          type: number\n        vat_amount_local:\n          format: float\n          type: number\n        vat_rate_summary:\n          items:\n            $ref: \"#/components/schemas/DocumentVatRateSummary\"\n          type: array\n      type: object\n    DocumentType:\n      enum:\n        - advance\n        - canceled\n        - cancellation\n        - draft\n        - invoice\n        - proforma\n      type: string\n    DocumentVatRateSummary:\n      properties:\n        vat_name:\n          type: string\n        vat_percentage:\n          format: float\n          type: number\n        vat_rate_gross_amount:\n          format: float\n          type: number\n        vat_rate_net_amount:\n          format: float\n          type: number\n        vat_rate_vat_amount:\n          format: float\n          type: number\n        vat_rate_vat_amount_local:\n          format: float\n          type: number\n      type: object\n    Id:\n      properties:\n        id:\n          type: integer\n        legacy_id:\n          type: integer\n      type: object\n    OnlinePayment:\n      enum:\n        - \"\"\n        - Barion\n        - SimplePay\n        - no\n      type: string\n    OnlineSzamlaStatus:\n      properties:\n        messages:\n          items:\n            $ref: \"#/components/schemas/OnlineSzamlaStatusMessage\"\n          type: array\n        status:\n          type: string\n        transaction_id:\n          type: string\n      type: object\n    OnlineSzamlaStatusMessage:\n      properties:\n        human_readable_message:\n          type: string\n        validation_error_code:\n          type: string\n        validation_result_code:\n          type: string\n      type: object\n    OrganizationData:\n      properties:\n        tax_code:\n          type: string\n      type: object\n    Partner:\n      allOf:\n        - $ref: \"#/components/schemas/PartnerUpsert\"\n        - properties:\n            id:\n              type: integer\n    PartnerList:\n      description: A object with a data property that contains an array of up to limit partners. Each entry in the array is a separate partner object. If no more partners are available, the resulting array will be empty.\n      properties:\n        current_page:\n          type: integer\n        data:\n          items:\n            $ref: \"#/components/schemas/Partner\"\n          type: array\n        last_page:\n          type: integer\n        next_page_url:\n          type: string\n        per_page:\n          type: integer\n        prev_page_url:\n          type: string\n        total:\n          type: integer\n      type: object\n    PartnerUpsert:\n      properties:\n        account_number:\n          type: string\n        address:\n          $ref: \"#/components/schemas/Address\"\n        emails:\n          items:\n            type: string\n          type: array\n        general_ledger_number:\n          type: string\n        iban:\n          type: string\n        name:\n          type: string\n        phone:\n          type: string\n        swift:\n          type: string\n        taxcode:\n          type: string\n      required:\n        - name\n        - address\n      type: object\n    PaymentHistory:\n      properties:\n        conversion_rate:\n          format: float\n          type: number\n        date:\n          format: date\n          type: string\n        payment_method:\n          $ref: \"#/components/schemas/PaymentMethod\"\n        price:\n          format: float\n          type: number\n        voucher_number:\n          type: string\n      required:\n        - date\n        - price\n        - payment_method\n      type: object\n    PaymentMethod:\n      enum:\n        - aruhitel\n        - bankcard\n        - barion\n        - barter\n        - cash\n        - cash_on_delivery\n        - coupon\n        - elore_utalas\n        - ep_kartya\n        - kompenzacio\n        - levonas\n        - online_bankcard\n        - payoneer\n        - paypal\n        - paypal_utolag\n        - payu\n        - pick_pack_pont\n        - postai_csekk\n        - postautalvany\n        - skrill\n        - szep_card\n        - transferwise\n        - upwork\n        - utalvany\n        - valto\n        - wire_transfer\n      type: string\n    PaymentStatus:\n      enum:\n        - expired\n        - none\n        - outstanding\n        - paid\n        - partially_paid\n      type: string\n    Product:\n      properties:\n        comment:\n          type: string\n        currency:\n          $ref: \"#/components/schemas/Currency\"\n        general_ledger_number:\n          type: string\n        general_ledger_taxcode:\n          type: string\n        id:\n          readOnly: true\n          type: integer\n        name:\n          type: string\n        net_unit_price:\n          format: float\n          type: number\n        unit:\n          type: string\n        vat:\n          $ref: \"#/components/schemas/Vat\"\n      required:\n        - name\n        - currency\n        - vat\n        - unit\n      type: object\n    ProductList:\n      description: A object with a data property that contains an array of up to limit products. Each entry in the array is a separate product object. If no more products are available, the resulting array will be empty.\n      properties:\n        current_page:\n          type: integer\n        data:\n          items:\n            $ref: \"#/components/schemas/Product\"\n          type: array\n        last_page:\n          type: integer\n        next_page_url:\n          type: string\n        per_page:\n          type: integer\n        prev_page_url:\n          type: string\n        total:\n          type: integer\n      type: object\n    Round:\n      enum:\n        - five\n        - none\n        - one\n        - ten\n      type: string\n    SendDocument:\n      properties:\n        emails:\n          items:\n            type: string\n          type: array\n      type: object\n    ServerError:\n      properties:\n        message:\n          type: string\n        trace_id:\n          description: You should send us this ID to investigate the issue.\n          type: string\n      type: object\n    ServerErrorResponse:\n      example:\n        error:\n          message: Internal Server Error.\n          trace_id: 664b218f93954a3480cb0ddb8f919c3f\n      properties:\n        error:\n          $ref: \"#/components/schemas/ServerError\"\n      type: object\n    UnitPriceType:\n      enum:\n        - gross\n        - net\n      type: string\n    ValidationError:\n      properties:\n        field:\n          type: string\n        message:\n          type: string\n      type: object\n    ValidationErrorResponse:\n      properties:\n        errors:\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          type: array\n        message:\n          type: string\n      type: object\n    Vat:\n      enum:\n        - 0%\n        - 1%\n        - 10%\n        - 11%\n        - 12%\n        - 13%\n        - 14%\n        - 15%\n        - 16%\n        - 17%\n        - 18%\n        - 19%\n        - 2%\n        - 20%\n        - 21%\n        - 22%\n        - 23%\n        - 24%\n        - 25%\n        - 26%\n        - 27%\n        - 3%\n        - 4%\n        - 5%\n        - 6%\n        - 7%\n        - 8%\n        - 9%\n        - AAM\n        - AM\n        - EU\n        - EUK\n        - F.AFA\n        - FAD\n        - K.AFA\n        - MAA\n        - TAM\n        - ÁKK\n        - ÁTHK\n      type: string\n  securitySchemes:\n    api_key:\n      in: header\n      name: X-API-KEY\n      type: apiKey\n"
		}
	},
	"Error": "parse: parse spec: paths: /documents/{id}/create-from-proforma: post: operation \"CreateDocumentFromProforma\": responses: 201: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/Document\": parse schema: property \"organization\": parse schema: resolve \"#/components/schemas/DocumentOrganization\": parse schema: property \"address\": parse schema: resolve \"#/components/schemas/Address\": parse schema: property \"country_code\": parse schema: resolve \"#/components/schemas/Country\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}