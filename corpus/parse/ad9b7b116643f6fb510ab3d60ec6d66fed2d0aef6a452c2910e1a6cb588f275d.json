{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ITISFoundation/osparc-simcore"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "services/web/server/src/simcore_service_webserver/api/v0/openapi.yaml",
			"byteSize": 174452,
			"content": "openapi: 3.0.0\ninfo:\n  title: osparc-simcore web API\n  version: 0.7.0\n  description: API designed for the front-end app\n  contact:\n    name: IT'IS Foundation\n    email: support@simcore.io\n  license:\n    name: MIT\n    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'\nservers:\n  - description: API server\n    url: /v0\n  - description: Development server\n    url: 'http://{host}:{port}/{basePath}'\n    variables:\n      host:\n        default: localhost\n      port:\n        default: '8001'\n      basePath:\n        enum:\n          - v0\n        default: v0\ntags:\n  - name: authentication\n  - name: user\n  - name: project\n  - name: cluster\n  - name: catalog\n  - name: storage\n  - name: service\n  - name: activity\n  - name: tag\n    description: |\n      Grouping the paths and operations that perform changes on the TAG entity.\n      Tags are customized visual elements that help the user group and quickly identify different items\n      on the interface. They can also be used for searching and filtering purposes.\n  - name: node\n    description: |\n      The simcore frontend provides a bunch of custom ui elements for nodes to interact with users.\n      The frontend uses these api calls to query the nodes about the gui elemets they want to use, and it\n      defines the protocol for the frontend to interact with the node.\n  - name: configuration\n  - name: maintenance\n  - name: publication\n    description: |\n      oSPARC users can make publications. Starting from submission of new service candidates, but this could\n      end up accepting other types of publications.\n  - name: viewer\n  - name: repository\npaths:\n  /:\n    get:\n      tags:\n        - maintenance\n      summary: run check\n      operationId: check_running\n      responses:\n        '200':\n          description: Service information\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      status:\n                        type: string\n                      api_version:\n                        type: string\n                      version:\n                        type: string\n                    example:\n                      name: simcore-director-service\n                      status: SERVICE_RUNNING\n                      api_version: 0.1.0-dev+NJuzzD9S\n                      version: 0.1.0-dev+N127Mfv9H\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /health:\n    get:\n      tags:\n        - maintenance\n      summary: health check\n      operationId: check_health\n      responses:\n        '200':\n          description: Service information\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1/get/responses/200/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /status:\n    get:\n      tags:\n        - maintenance\n      summary: checks status of self and connected services\n      operationId: get_app_status\n      responses:\n        '200':\n          description: returns app status check\n  /status/diagnostics:\n    get:\n      tags:\n        - maintenance\n      operationId: get_app_diagnostics\n      responses:\n        '200':\n          description: returns app diagnostics report\n  '/status/{service_name}':\n    get:\n      tags:\n        - maintenance\n      operationId: get_service_status\n      parameters:\n        - in: path\n          required: true\n          name: service_name\n          schema:\n            type: string\n      responses:\n        '200':\n          description: returns status of connected service\n  '/check/{action}':\n    post:\n      tags:\n        - maintenance\n      summary: service test endpoint\n      operationId: check_action\n      parameters:\n        - in: path\n          required: true\n          name: action\n          schema:\n            type: string\n            default: echo\n            enum:\n              - fail\n              - echo\n        - in: query\n          name: data\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - path_value\n                - query_value\n                - body_value\n              properties:\n                path_value:\n                  type: string\n                query_value:\n                  type: string\n                body_value:\n                  type: object\n                  additionalProperties:\n                    type: string\n              example:\n                path_value: foo\n                query_value: bar\n                body_value:\n                  key1: value1\n                  key2: value2\n      responses:\n        '200':\n          description: Echoes response based on action\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    $ref: '#/paths/~1check~1%7Baction%7D/post/requestBody/content/application~1json/schema'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          description: Returns enveloped payload w/ or w/o data\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1check~1%7Baction%7D/post/responses/200/content/application~1json/schema'\n  /config:\n    get:\n      summary: Front end runtime configuration\n      operationId: get_config\n      tags:\n        - configuration\n      responses:\n        '200':\n          description: configuration details\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      invitation_required:\n                        type: boolean\n                    example:\n                      invitation_required: true\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /auth/register:\n    post:\n      operationId: auth_register\n      tags:\n        - authentication\n      requestBody:\n        description: user registration\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n                confirm:\n                  type: string\n                invitation:\n                  type: string\n                  description: Invitation code\n              required:\n                - email\n                - password\n              example:\n                email: foo@mymail.com\n                password: my secret\n                confirm: my secret\n                invitation: 33c451d4-17b7-4e65-9880-694559b8ffc2\n        required: true\n      responses:\n        '200':\n          description: User has been succesfully registered.\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /auth/login:\n    post:\n      summary: user logs in\n      tags:\n        - authentication\n      operationId: auth_login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                email:\n                  type: string\n                password:\n                  type: string\n              example:\n                email: foo@mymail.com\n                password: my secret\n      responses:\n        '200':\n          description: Succesfully logged in\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      level:\n                        description: log level\n                        type: string\n                        default: INFO\n                        enum:\n                          - DEBUG\n                          - WARNING\n                          - INFO\n                          - ERROR\n                      message:\n                        description: 'log message. If logger is USER, then it MUST be human readable'\n                        type: string\n                      logger:\n                        description: name of the logger receiving this message\n                        type: string\n                    required:\n                      - message\n                    example:\n                      message: 'Hi there, Mr user'\n                      level: INFO\n                      logger: user-logger\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /auth/logout:\n    post:\n      tags:\n        - authentication\n      operationId: auth_logout\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                client_session_id:\n                  type: string\n                  example: 5ac57685-c40f-448f-8711-70be1936fd63\n      responses:\n        '200':\n          description: Succesfully logged out\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /auth/reset-password:\n    post:\n      summary: a non logged-in user requests a password reset\n      tags:\n        - authentication\n      operationId: auth_reset_password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n              example:\n                email: foo@mymail.com\n      responses:\n        '200':\n          description: confirmation email sent to user\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema'\n        '503':\n          description: failed to send confirmation email\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n  '/auth/reset-password/{code}':\n    post:\n      tags:\n        - authentication\n      summary: changes password using a token code without being logged in\n      operationId: auth_reset_password_allowed\n      parameters:\n        - name: code\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - password\n                - confirm\n              properties:\n                password:\n                  type: string\n                confirm:\n                  type: string\n              example:\n                password: my secret\n                confirm: my secret\n      responses:\n        '200':\n          description: password was successfully changed\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema'\n        '401':\n          description: unauthorized reset due to invalid token code\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /auth/change-email:\n    post:\n      summary: logged in user changes email\n      tags:\n        - authentication\n      operationId: auth_change_email\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - email\n              properties:\n                email:\n                  type: string\n              example:\n                email: foo@mymail.com\n      responses:\n        '200':\n          description: confirmation sent to new email to complete operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema'\n        '401':\n          description: unauthorized user. Login required\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n        '503':\n          description: unable to send confirmation email\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /auth/change-password:\n    post:\n      summary: logged in user changes password\n      tags:\n        - authentication\n      operationId: auth_change_password\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - current\n                - new\n                - confirm\n              properties:\n                current:\n                  type: string\n                new:\n                  type: string\n                confirm:\n                  type: string\n              example:\n                current: my secret\n                new: my new secret\n                confirm: my new secret\n      responses:\n        '200':\n          description: password was successfully changed\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema'\n        '401':\n          description: unauthorized user. Login required\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n        '409':\n          description: mismatch between new and confirmation passwords\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n        '422':\n          description: current password is invalid\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/responses/DefaultErrorResponse/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/auth/confirmation/{code}':\n    get:\n      summary: email link sent to user to confirm an action\n      tags:\n        - authentication\n      operationId: auth_confirmation\n      parameters:\n        - name: code\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        3XX:\n          description: redirection to specific ui application page\n  /auth/api-keys:\n    get:\n      summary: lists display names of API keys by this user\n      tags:\n        - authentication\n      operationId: list_api_keys\n      responses:\n        '200':\n          description: returns the display names of API keys\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n        '401':\n          description: requires login to  list keys\n        '403':\n          description: not enough permissions to list keys\n    post:\n      summary: creates API keys to access public API\n      tags:\n        - authentication\n      operationId: create_api_key\n      requestBody:\n        description: user registration\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                display_name:\n                  type: string\n      responses:\n        '200':\n          description: Authorization granted returning API key\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  display_name:\n                    type: string\n                  api_key:\n                    type: string\n                  api_secret:\n                    type: string\n        '400':\n          description: key name requested is invalid\n        '401':\n          description: requires login to  create a key\n        '403':\n          description: not enough permissions to create a key\n    delete:\n      summary: deletes API key by name\n      tags:\n        - authentication\n      operationId: delete_api_key\n      requestBody:\n        description: deletes given api key by name\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1auth~1api-keys/post/requestBody/content/application~1json/schema'\n      responses:\n        '204':\n          description: api key successfully deleted\n        '401':\n          description: requires login to  delete a key\n        '403':\n          description: not enough permissions to delete a key\n  /me:\n    get:\n      operationId: get_my_profile\n      tags:\n        - user\n      responses:\n        '200':\n          description: current user profile\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    allOf:\n                      - $ref: '#/paths/~1me/put/requestBody/content/application~1json/schema/allOf/0'\n                      - type: object\n                        properties:\n                          login:\n                            type: string\n                            format: email\n                          role:\n                            type: string\n                          groups:\n                            $ref: '#/paths/~1groups/get/responses/200/content/application~1json/schema/properties/data'\n                          gravatar_id:\n                            type: string\n                    example:\n                      login: pcrespov@foo.com\n                      role: Admin\n                      gravatar_id: 205e460b479e2e5b48aec07710c08d50\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    put:\n      operationId: update_my_profile\n      tags:\n        - user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              allOf:\n                - type: object\n                  properties:\n                    first_name:\n                      type: string\n                    last_name:\n                      type: string\n                  example:\n                    first_name: Pedro\n                    last_name: Crespo\n              example:\n                first_name: Pedro\n                last_name: Crespo\n      responses:\n        '204':\n          description: updated profile\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /me/tokens:\n    get:\n      summary: List tokens\n      operationId: list_tokens\n      tags:\n        - user\n      responses:\n        '200':\n          description: list of tokens\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1me~1tokens/post/requestBody/content/application~1json/schema/properties/data'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      summary: Create tokens\n      operationId: create_tokens\n      tags:\n        - user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - data\n              properties:\n                data:\n                  description: api keys for third party services\n                  type: object\n                  properties:\n                    service:\n                      description: uniquely identifies the service where this token is used\n                      type: string\n                    token_key:\n                      description: basic token key\n                      type: string\n                      format: uuid\n                    token_secret:\n                      type: string\n                      format: uuid\n                  required:\n                    - service\n                    - token_key\n                  example:\n                    service: github-api-v1\n                    token_key: N1BP5ZSpB\n                error:\n                  nullable: true\n                  default: null\n      responses:\n        '201':\n          description: token created\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1me~1tokens/post/requestBody/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/me/tokens/{service}':\n    parameters:\n      - name: service\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Gets specific token\n      operationId: get_token\n      tags:\n        - user\n      responses:\n        '200':\n          description: got detailed token\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1me~1tokens/post/requestBody/content/application~1json/schema'\n    put:\n      summary: Updates token\n      operationId: update_token\n      tags:\n        - user\n      responses:\n        '204':\n          description: token has been successfully updated\n    delete:\n      summary: Delete token\n      operationId: delete_token\n      tags:\n        - user\n      responses:\n        '204':\n          description: token has been successfully deleted\n  /groups:\n    get:\n      summary: List my groups\n      operationId: list_groups\n      tags:\n        - group\n      responses:\n        '200':\n          description: list of the groups I belonged to\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      me:\n                        $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'\n                      organizations:\n                        type: array\n                        items:\n                          $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'\n                      all:\n                        $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      summary: Create a new group\n      operationId: create_group\n      tags:\n        - group\n      requestBody:\n        required: true\n        description: the group to create\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                gid:\n                  description: the group ID\n                  type: string\n                label:\n                  description: the group name\n                  type: string\n                description:\n                  description: the group description\n                  type: string\n                thumbnail:\n                  description: url to the group thumbnail\n                  type: string\n                  format: uri\n                accessRights:\n                  $ref: '#/paths/~1groups~1%7Bgid%7D~1users~1%7Buid%7D/patch/requestBody/content/application~1json/schema/properties/accessRights'\n              required:\n                - gid\n                - label\n                - description\n                - accessRights\n              example:\n                - gid: '27'\n                  label: A user\n                  description: A very special user\n                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'\n                - gid: '1'\n                  label: ITIS Foundation\n                  description: The Foundation for Research on Information Technologies in Society\n                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'\n                - gid: '0'\n                  label: All\n                  description: Open to all users\n                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'\n      responses:\n        '201':\n          description: group created\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/groups/{gid}':\n    parameters:\n      - name: gid\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - group\n      summary: Gets one group details\n      operationId: get_group\n      responses:\n        '200':\n          description: got group\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1groups/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    patch:\n      summary: Update one group\n      operationId: update_group\n      tags:\n        - group\n      requestBody:\n        required: true\n        description: the group to update\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1groups/post/requestBody/content/application~1json/schema'\n      responses:\n        '200':\n          description: the modified group\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1groups/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - group\n      summary: Deletes one group\n      operationId: delete_group\n      responses:\n        '204':\n          description: group has been successfully deleted\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/groups/{gid}/users':\n    parameters:\n      - name: gid\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - group\n      summary: Gets list of users in group\n      operationId: get_group_users\n      responses:\n        '200':\n          description: got list of users and their respective rights\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1groups~1%7Bgid%7D~1users~1%7Buid%7D/get/responses/200/content/application~1json/schema/properties/data'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      tags:\n        - group\n      summary: Adds a user in the group\n      operationId: add_group_user\n      requestBody:\n        required: true\n        description: the user to add\n        content:\n          application/json:\n            schema:\n              anyOf:\n                - type: object\n                  required:\n                    - uid\n                  properties:\n                    uid:\n                      type: string\n                      description: the user id\n                - type: object\n                  required:\n                    - email\n                  properties:\n                    email:\n                      type: string\n                      format: email\n                      description: the user email\n      responses:\n        '204':\n          description: user successfully added\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/groups/{gid}/users/{uid}':\n    parameters:\n      - name: gid\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: uid\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - group\n      summary: Gets specific user in group\n      operationId: get_group_user\n      responses:\n        '200':\n          description: got user\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    allOf:\n                      - type: object\n                        properties:\n                          first_name:\n                            type: string\n                            description: the user first name\n                          last_name:\n                            type: string\n                            description: the user last name\n                          login:\n                            type: string\n                            format: email\n                            description: the user login email\n                          gravatar_id:\n                            type: string\n                            description: the user gravatar id hash\n                          id:\n                            type: string\n                            description: the user id\n                          gid:\n                            type: string\n                            description: the user primary gid\n                        example:\n                          first_name: Mr\n                          last_name: Smith\n                          login: mr.smith@matrix.com\n                          gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540\n                          id: '1'\n                          gid: '3'\n                      - $ref: '#/paths/~1groups~1%7Bgid%7D~1users~1%7Buid%7D/patch/requestBody/content/application~1json/schema/properties/accessRights'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    patch:\n      tags:\n        - group\n      summary: Modify specific user in group\n      operationId: update_group_user\n      requestBody:\n        required: true\n        description: the user rights to modify\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                accessRights:\n                  description: defines acesss rights for the user\n                  type: object\n                  properties:\n                    read:\n                      type: boolean\n                    write:\n                      type: boolean\n                    delete:\n                      type: boolean\n                  required:\n                    - read\n                    - write\n                    - delete\n                  example:\n                    - read: true\n                      write: false\n                      delete: false\n                    - read: true\n                      write: true\n                      delete: false\n                    - read: true\n                      write: true\n                      delete: true\n              required:\n                - accessRights\n      responses:\n        '200':\n          description: modified user\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1groups~1%7Bgid%7D~1users~1%7Buid%7D/get/responses/200/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - group\n      summary: Delete specific user in group\n      operationId: delete_group_user\n      responses:\n        '204':\n          description: successfully removed user\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/groups/{gid}/classifiers':\n    get:\n      parameters:\n        - name: gid\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: tree_view\n          in: query\n          description: Some classifiers (e.g. sparc's) offer different tree views\n          schema:\n            type: string\n            enum:\n              - std\n              - sort\n            default: std\n      tags:\n        - group\n      summary: Gets classifiers bundle for this group\n      operationId: get_group_classifiers\n      responses:\n        '200':\n          description: got a bundle with all information about classifiers\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/groups/sparc/classifiers/scicrunch-resources/{rrid}':\n    parameters:\n      - name: rrid\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - group\n      summary: 'Returns information on a valid RRID (https://www.force11.org/group/resource-identification-initiative)'\n      operationId: get_scicrunch_resource\n      responses:\n        '200':\n          description: Got information of a valid RRID\n        '400':\n          description: Invalid RRID\n        '503':\n          description: scircrunch.org service is not reachable\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      tags:\n        - group\n      summary: Adds new RRID to classifiers\n      operationId: add_scicrunch_resource\n      responses:\n        '200':\n          description: Got information of a valid RRID\n        '400':\n          description: Invalid RRID\n        '503':\n          description: scircrunch.org service is not reachable\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/groups/sparc/classifiers/scicrunch-resources:search':\n    get:\n      parameters:\n        - name: guess_name\n          in: query\n          required: true\n          schema:\n            type: string\n      tags:\n        - group\n      summary: Returns a list of related resource provided a search name\n      operationId: search_scicrunch_resources\n      responses:\n        '200':\n          description: Got information of a valid RRID\n        '503':\n          description: scircrunch.org service is not reachable\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /storage/locations:\n    get:\n      summary: Get available storage locations\n      tags:\n        - storage\n      operationId: get_storage_locations\n      responses:\n        '200':\n          description: List of availabe storage locations\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    id:\n                      type: number\n                  example:\n                    filename: simcore.s3\n                    id: 0\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/storage/locations/{location_id}:sync':\n    post:\n      summary: Manually triggers the synchronisation of the file meta data table in the database\n      tags:\n        - storage\n      operationId: synchronise_meta_data_table\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: dry_run\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: fire_and_forget\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: 'An object containing added, changed and removed paths'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                  - error\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - removed\n                    properties:\n                      dry_run:\n                        type: boolean\n                      fire_and_forget:\n                        type: boolean\n                      removed:\n                        type: array\n                        items:\n                          type: string\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/storage/locations/{location_id}/files/metadata':\n    get:\n      summary: Get list of file meta data\n      tags:\n        - storage\n      operationId: get_files_metadata\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of file meta-datas\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/paths/~1storage~1locations~1%7Blocation_id%7D~1files~1%7BfileId%7D~1metadata/patch/requestBody/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/storage/locations/{location_id}/files/{fileId}':\n    get:\n      summary: Returns download link for requested file\n      tags:\n        - storage\n      operationId: download_file\n      parameters:\n        - name: fileId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns presigned link\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  link:\n                    type: string\n                example:\n                  link: example_link\n    put:\n      summary: Returns upload link or performs copy operation to datcore\n      tags:\n        - storage\n      operationId: upload_file\n      parameters:\n        - name: fileId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: extra_location\n          in: query\n          required: false\n          schema:\n            type: string\n        - name: extra_source\n          in: query\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/paths/~1storage~1locations~1%7Blocation_id%7D~1files~1%7BfileId%7D/get/responses/200'\n    delete:\n      summary: Deletes File\n      tags:\n        - storage\n      operationId: delete_file\n      parameters:\n        - name: fileId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '204':\n          description: ''\n  '/storage/locations/{location_id}/files/{fileId}/metadata':\n    get:\n      summary: Get File Metadata\n      tags:\n        - storage\n      operationId: get_file_metadata\n      parameters:\n        - name: fileId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Returns file metadata\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1storage~1locations~1%7Blocation_id%7D~1files~1%7BfileId%7D~1metadata/patch/requestBody/content/application~1json/schema'\n    patch:\n      summary: Update File Metadata\n      tags:\n        - storage\n      operationId: update_file_meta_data\n      parameters:\n        - name: fileId\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                file_uuid:\n                  type: string\n                location_id:\n                  type: string\n                location:\n                  type: string\n                bucket_name:\n                  type: string\n                object_name:\n                  type: string\n                project_id:\n                  type: string\n                project_name:\n                  type: string\n                node_id:\n                  type: string\n                node_name:\n                  type: string\n                file_name:\n                  type: string\n                user_id:\n                  type: string\n                user_name:\n                  type: string\n                file_id:\n                  type: string\n                raw_file_path:\n                  type: string\n                display_file_path:\n                  type: string\n                created_at:\n                  type: string\n                last_modified:\n                  type: string\n                file_size:\n                  type: integer\n                parent_id:\n                  type: string\n                entity_tag:\n                  type: string\n              example:\n                file_uuid: simcore-testing/105/1000/3\n                location_id: '0'\n                location_name: simcore.s3\n                bucket_name: simcore-testing\n                object_name: 105/10000/3\n                project_id: '105'\n                project_name: futurology\n                node_id: '10000'\n                node_name: alpha\n                file_name: example.txt\n                user_id: '12'\n                user_name: dennis\n                file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'\n                raw_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv\n                display_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv\n                created_at: '2019-06-19T12:29:03.308611Z'\n                last_modified: '2019-06-19T12:29:03.78852Z'\n                file_size: 73\n                parent_id: 'N:collection:e263da07-2d89-45a6-8b0f-61061b913873'\n                entity_tag: a87ff679a2f3e71d9181a67b7542122c\n      responses:\n        '200':\n          $ref: '#/paths/~1storage~1locations~1%7Blocation_id%7D~1files~1%7BfileId%7D~1metadata/get/responses/200'\n  '/storage/locations/{location_id}/datasets/{dataset_id}/metadata':\n    get:\n      summary: Get Files Metadata\n      tags:\n        - storage\n      operationId: get_files_metadata_dataset\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n        - name: dataset_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of file meta-datas\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1storage~1locations~1%7Blocation_id%7D~1files~1metadata/get/responses/200/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/storage/locations/{location_id}/datasets':\n    get:\n      summary: Get datasets metadata\n      tags:\n        - storage\n      operationId: get_datasets_metadata\n      parameters:\n        - name: location_id\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: list of dataset meta-datas\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    dataset_id:\n                      type: string\n                    display_name:\n                      type: string\n                  example:\n                    dataset_uuid: 'N:id-aaaa'\n                    display_name: simcore-testing\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/computation/pipeline/{project_id}:start':\n    post:\n      description: Starts the pipeline(s) of a given (meta) project\n      tags:\n        - service\n      operationId: start_pipeline\n      parameters:\n        - $ref: '#/paths/~1computation~1pipeline~1%7Bproject_id%7D%3Astop/post/parameters/0'\n      requestBody:\n        required: false\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                force_restart:\n                  type: boolean\n                  default: false\n                  description: if true will force re-running all dependent nodes\n                cluster_id:\n                  type: integer\n                  description: 'the computation shall use the cluster described by its id, 0 is the default cluster'\n                  default: 0\n                  minimum: 0\n                subgraph:\n                  description: The node uuids selected for running a partial pipeline\n                  type: array\n                  uniqueItems: true\n                  items:\n                    type: string\n                    format: uuid\n      responses:\n        '201':\n          description: Successfully started the pipeline\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - pipelines_id\n                    properties:\n                      pipeline_id:\n                        type: string\n                        description: ID for created pipeline (=project identifier)\n                      ref_ids:\n                        type: array\n                        items:\n                          type: integer\n                        description: Checkpoints IDs for created pipeline\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/computation/pipeline/{project_id}:stop':\n    post:\n      description: Stops (all) pipeline(s) of a given (meta) project\n      tags:\n        - service\n      operationId: stop_pipeline\n      parameters:\n        - in: path\n          name: project_id\n          required: true\n          description: the uuid of the project\n          schema:\n            type: string\n            example: 123e4567-e89b-12d3-a456-426655440000\n      responses:\n        '204':\n          description: Succesffully stopped the pipeline\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /projects:\n    get:\n      tags:\n        - project\n      summary: List all projects\n      operationId: list_projects\n      parameters:\n        - name: type\n          in: query\n          schema:\n            type: string\n            default: all\n            enum:\n              - template\n              - user\n              - all\n        - name: show_hidden\n          in: query\n          schema:\n            type: boolean\n            default: false\n          description: includes projects marked as hidden in the listing\n        - name: offset\n          in: query\n          schema:\n            type: integer\n            minimum: 0\n            default: 0\n          required: false\n          description: index to the first item to return\n        - name: limit\n          in: query\n          schema:\n            type: integer\n            default: 20\n            minimum: 1\n            maximum: 50\n          required: false\n          description: maximum number of items to return\n      responses:\n        '200':\n          description: list of projects\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema/properties/data'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      tags:\n        - project\n      summary: Create new project\n      operationId: create_projects\n      parameters:\n        - name: from_template\n          in: query\n          schema:\n            type: string\n          description: 'Option to create a project from existing template: from_template={template_uuid}'\n        - name: as_template\n          in: query\n          schema:\n            type: string\n          description: 'Option to create a template from existing project: as_template={study_uuid}'\n        - name: copy_data\n          in: query\n          schema:\n            type: boolean\n            default: true\n          description: 'Option to copy data when creating from an existing template or as a template, defaults to True'\n        - name: hidden\n          in: query\n          schema:\n            type: boolean\n            default: false\n          description: Enables/disables hidden flag. Hidden projects are by default unlisted.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: simcore project\n              description: Description of a simcore project\n              type: object\n              additionalProperties: false\n              required:\n                - uuid\n                - name\n                - description\n                - prjOwner\n                - accessRights\n                - creationDate\n                - lastChangeDate\n                - thumbnail\n                - workbench\n              properties:\n                uuid:\n                  type: string\n                  format: uuid\n                  description: project unique identifier\n                  example: 07640335-a91f-468c-ab69-a374fa82078d\n                name:\n                  type: string\n                  description: project name\n                  example: Temporal Distortion Simulator\n                description:\n                  type: string\n                  description: longer one-line description about the project\n                  example: Dabbling in temporal transitions ...\n                prjOwner:\n                  type: string\n                  format: email\n                  description: user email\n                accessRights:\n                  type: object\n                  description: object containing the GroupID as key and read/write/execution permissions as value\n                  x-patternProperties:\n                    ^\\S+$:\n                      type: object\n                      description: the group id\n                      additionalProperties: false\n                      required:\n                        - read\n                        - write\n                        - delete\n                      properties:\n                        read:\n                          type: boolean\n                          description: gives read access\n                        write:\n                          type: boolean\n                          description: gives write access\n                        delete:\n                          type: boolean\n                          description: gives deletion rights\n                  additionalProperties: true\n                creationDate:\n                  type: string\n                  description: project creation date\n                  pattern: '\\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\\d)T(2[0-3]|1\\d|0?[0-9])(:(\\d|[0-5]\\d)){2}(\\.\\d{3})?Z'\n                  example: '2018-07-01T11:13:43Z'\n                lastChangeDate:\n                  type: string\n                  description: last save date\n                  pattern: '\\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\\d)T(2[0-3]|1\\d|0?[0-9])(:(\\d|[0-5]\\d)){2}(\\.\\d{3})?Z'\n                  example: '2018-07-01T11:13:43Z'\n                thumbnail:\n                  type: string\n                  minLength: 0\n                  maxLength: 2083\n                  format: uri\n                  description: url of the latest screenshot of the project\n                  example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'\n                workbench:\n                  type: object\n                  x-patternProperties:\n                    '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n                      type: object\n                      additionalProperties: false\n                      required:\n                        - key\n                        - version\n                        - label\n                      properties:\n                        key:\n                          type: string\n                          description: distinctive name for the node based on the docker registry path\n                          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n                          example:\n                            - simcore/services/comp/sleeper\n                            - simcore/services/dynamic/3dviewer\n                            - simcore/services/frontend/file-picker\n                        version:\n                          type: string\n                          description: semantic version number of the node\n                          pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n                          example:\n                            - 1.0.0\n                            - 0.0.1\n                        label:\n                          type: string\n                          description: The short name of the node\n                          example:\n                            - JupyterLab\n                        progress:\n                          type: number\n                          maximum: 100\n                          minimum: 0\n                          description: the node progress value\n                        thumbnail:\n                          minLength: 0\n                          maxLength: 2083\n                          format: uri\n                          type: string\n                          description: url of the latest screenshot of the node\n                          example:\n                            - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'\n                        runHash:\n                          description: the hex digest of the resolved inputs +outputs hash at the time when the last outputs were generated\n                          type:\n                            - string\n                            - 'null'\n                          example:\n                            - a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2\n                        inputs:\n                          type: object\n                          description: values of input properties\n                          patternProperties:\n                            '^[-_a-zA-Z0-9]+$':\n                              oneOf:\n                                - type:\n                                    - integer\n                                    - boolean\n                                    - string\n                                    - number\n                                    - 'null'\n                                - type: object\n                                  additionalProperties: false\n                                  required:\n                                    - nodeUuid\n                                    - output\n                                  properties:\n                                    nodeUuid:\n                                      type: string\n                                      format: uuid\n                                    output:\n                                      type: string\n                                      pattern: '^[-_a-zA-Z0-9]+$'\n                                - type: object\n                                  additionalProperties: false\n                                  required:\n                                    - store\n                                    - path\n                                  properties:\n                                    store:\n                                      type:\n                                        - string\n                                        - integer\n                                    dataset:\n                                      type: string\n                                    path:\n                                      type: string\n                                    label:\n                                      type: string\n                                    eTag:\n                                      type: string\n                                - type: object\n                                  additionalProperties: false\n                                  required:\n                                    - downloadLink\n                                  properties:\n                                    downloadLink:\n                                      minLength: 1\n                                      maxLength: 65536\n                                      type: string\n                                      format: uri\n                                    label:\n                                      type: string\n                                - type: array\n                                  items: {}\n                        inputAccess:\n                          description: map with key - access level pairs\n                          type: object\n                          patternProperties:\n                            '^[-_a-zA-Z0-9]+$':\n                              type: string\n                              enum:\n                                - Invisible\n                                - ReadOnly\n                                - ReadAndWrite\n                              default: ReadAndWrite\n                              example:\n                                - ReadOnly\n                        inputNodes:\n                          type: array\n                          items:\n                            type: string\n                            format: uuid\n                          description: node IDs of where the node is connected to\n                          example:\n                            - nodeUuid1\n                            - nodeUuid2\n                        outputs:\n                          default: {}\n                          type: object\n                          patternProperties:\n                            '^[-_a-zA-Z0-9]+$':\n                              oneOf:\n                                - type:\n                                    - integer\n                                    - boolean\n                                    - string\n                                    - number\n                                    - 'null'\n                                - type: object\n                                  additionalProperties: false\n                                  required:\n                                    - store\n                                    - path\n                                  properties:\n                                    store:\n                                      type:\n                                        - string\n                                        - integer\n                                    dataset:\n                                      type: string\n                                    path:\n                                      type: string\n                                    label:\n                                      type: string\n                                    eTag:\n                                      type: string\n                                - type: object\n                                  additionalProperties: false\n                                  required:\n                                    - downloadLink\n                                  properties:\n                                    downloadLink:\n                                      minLength: 1\n                                      maxLength: 65536\n                                      type: string\n                                      format: uri\n                                    label:\n                                      type: string\n                                - type: array\n                                  items: {}\n                        outputNode:\n                          type: boolean\n                          deprecated: true\n                        outputNodes:\n                          type: array\n                          items:\n                            type: string\n                            format: uuid\n                          description: Used in group-nodes. Node IDs of those connected to the output\n                          example:\n                            - nodeUuid1\n                            - nodeUuid2\n                        parent:\n                          type:\n                            - 'null'\n                            - string\n                          format: uuid\n                          description: Parent's (group-nodes') node ID s.\n                          example:\n                            - nodeUuid1\n                            - nodeUuid2\n                        position:\n                          type: object\n                          additionalProperties: false\n                          required:\n                            - x\n                            - 'y'\n                          properties:\n                            x:\n                              type: integer\n                              description: The x position\n                              example:\n                                - '12'\n                            'y':\n                              type: integer\n                              description: The y position\n                              example:\n                                - '15'\n                          deprecated: true\n                        state:\n                          title: NodeState\n                          type: object\n                          properties:\n                            modified:\n                              title: Modified\n                              description: true if the node's outputs need to be re-computed\n                              default: true\n                              type: boolean\n                            dependencies:\n                              title: Dependencies\n                              description: contains the node inputs dependencies if they need to be computed first\n                              type: array\n                              uniqueItems: true\n                              items:\n                                type: string\n                                format: uuid\n                            currentStatus:\n                              description: the node's current state\n                              default: NOT_STARTED\n                              example:\n                                - RUNNING\n                                - FAILED\n                              enum:\n                                - UNKNOWN\n                                - PUBLISHED\n                                - NOT_STARTED\n                                - PENDING\n                                - STARTED\n                                - RETRY\n                                - SUCCESS\n                                - FAILED\n                                - ABORTED\n                              type: string\n                          additionalProperties: false\n                        bootOptions:\n                          title: Boot Options\n                          description: 'Some services provide alternative parameters to be injected at boot time. The user selection should be stored here, and it will overwrite the services''s defaults.'\n                          type: object\n                          patternProperties:\n                            '[a-zA-Z][a-azA-Z0-9_]*':\n                              type: string\n                  additionalProperties: true\n                ui:\n                  type: object\n                  additionalProperties: true\n                  properties:\n                    workbench:\n                      type: object\n                      x-patternProperties:\n                        '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n                          type: object\n                          additionalProperties: false\n                          required:\n                            - position\n                          properties:\n                            position:\n                              type: object\n                              additionalProperties: false\n                              required:\n                                - x\n                                - 'y'\n                              properties:\n                                x:\n                                  type: integer\n                                  description: The x position\n                                  example:\n                                    - '12'\n                                'y':\n                                  type: integer\n                                  description: The y position\n                                  example:\n                                    - '15'\n                      additionalProperties: true\n                    slideshow:\n                      type: object\n                      x-patternProperties:\n                        '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':\n                          type: object\n                          additionalProperties: false\n                          required:\n                            - position\n                          properties:\n                            position:\n                              type: integer\n                              description: Slide's position\n                              example:\n                                - 0\n                                - 2\n                      additionalProperties: true\n                    currentNodeId:\n                      type: string\n                      format: uuid\n                tags:\n                  type: array\n                  items:\n                    type: integer\n                classifiers:\n                  type: array\n                  description: Contains the reference to the project classifiers\n                  items:\n                    type: string\n                  example: 'some:id:to:a:classifier'\n                dev:\n                  type: object\n                  description: object used for development purposes only\n                state:\n                  title: State\n                  description: Project state\n                  anyOf:\n                    - nullable: true\n                    - title: ProjectState\n                      type: object\n                      additionalProperties: false\n                      properties:\n                        locked:\n                          title: Locked\n                          description: The project lock state\n                          allOf:\n                            - title: ProjectLocked\n                              type: object\n                              additionalProperties: false\n                              properties:\n                                value:\n                                  title: Value\n                                  description: True if the project is locked\n                                  type: boolean\n                                owner:\n                                  title: Owner\n                                  description: 'If locked, the user that owns the lock'\n                                  allOf:\n                                    - title: Owner\n                                      type: object\n                                      additionalProperties: false\n                                      properties:\n                                        user_id:\n                                          title: User Id\n                                          type: integer\n                                          description: Owner's identifier when registered in the user's database table\n                                          example:\n                                            - 2\n                                        first_name:\n                                          title: First Name\n                                          description: Owner first name\n                                          example:\n                                            - John\n                                          type: string\n                                        last_name:\n                                          title: Last Name\n                                          description: Owner last name\n                                          example:\n                                            - Smith\n                                          type: string\n                                      required:\n                                        - user_id\n                                        - first_name\n                                        - last_name\n                                status:\n                                  title: Status\n                                  description: The status of the project\n                                  enum:\n                                    - CLOSED\n                                    - CLOSING\n                                    - CLONING\n                                    - OPENING\n                                    - EXPORTING\n                                    - OPENED\n                                  type: string\n                              required:\n                                - value\n                                - status\n                        state:\n                          title: State\n                          description: The project running state\n                          allOf:\n                            - title: ProjectRunningState\n                              type: object\n                              additionalProperties: false\n                              properties:\n                                value:\n                                  title: RunningState\n                                  description: An enumeration.\n                                  enum:\n                                    - UNKNOWN\n                                    - NOT_STARTED\n                                    - PUBLISHED\n                                    - PENDING\n                                    - STARTED\n                                    - RETRY\n                                    - SUCCESS\n                                    - FAILED\n                                    - ABORTED\n                                  type: string\n                              required:\n                                - value\n                      required:\n                        - locked\n                        - state\n                quality:\n                  type: object\n                  title: Quality\n                  description: Object containing Quality Assessment related data\n      responses:\n        '201':\n          description: project created\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    allOf:\n                      - $ref: '#/paths/~1projects/post/requestBody/content/application~1json/schema'\n                      - type: object\n                        properties:\n                          state:\n                            $ref: '#/paths/~1projects~1%7Bproject_id%7D~1state/get/responses/200/content/application~1json/schema/properties/data'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /projects/active:\n    get:\n      tags:\n        - project\n      summary: Gets active project\n      operationId: get_active_project\n      responses:\n        '200':\n          description: returns active project\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - project\n      summary: Gets given project\n      operationId: get_project\n      responses:\n        '200':\n          description: got detailed project\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    put:\n      tags:\n        - project\n      summary: Enclosed entity replaces given project\n      operationId: replace_project\n      parameters:\n        - name: run\n          in: query\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1projects/post/requestBody/content/application~1json/schema'\n      responses:\n        '200':\n          description: got detailed project\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - project\n      summary: Delete given project\n      operationId: delete_project\n      responses:\n        '204':\n          description: project has been successfully deleted\n  '/projects/{project_id}:open':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - project\n      summary: Open a given project\n      operationId: open_project\n      requestBody:\n        description: browser tab identifier\n        required: true\n        content:\n          application/json:\n            schema:\n              type: string\n              example: 5ac57685-c40f-448f-8711-70be1936fd63\n      responses:\n        '200':\n          description: project successfuly opened\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}/state':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - project\n      summary: returns the state of a project\n      operationId: state_project\n      responses:\n        '200':\n          description: returns the project current state\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - locked\n                    properties:\n                      locked:\n                        type: object\n                        description: describes the project lock state\n                        required:\n                          - value\n                        properties:\n                          value:\n                            type: boolean\n                            description: true if the project is locked\n                          owner:\n                            type: object\n                            properties:\n                              first_name:\n                                type: string\n                              last_name:\n                                type: string\n                            required:\n                              - firstName\n                              - lastName\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}:xport':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - exporter\n      summary: creates an archive of the project and downloads it\n      operationId: export_project\n      responses:\n        '200':\n          description: creates an archive from a project file\n          content:\n            application/zip:\n              schema:\n                type: string\n                format: binary\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}:duplicate':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - exporter\n      summary: duplicates an existing project\n      operationId: duplicate_project\n      responses:\n        '200':\n          description: project was duplicated correctly\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  uuid:\n                    type: string\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects:import':\n    post:\n      tags:\n        - exporter\n      summary: Create new project from an archive\n      operationId: import_project\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                fileName:\n                  type: string\n                  format: binary\n      responses:\n        '200':\n          description: creates a new project from an archive\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  uuid:\n                    type: string\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}:close':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - project\n      summary: Closes a given project\n      operationId: close_project\n      requestBody:\n        description: browser tab identifier\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/paths/~1projects~1%7Bproject_id%7D%3Aopen/post/requestBody/content/application~1json/schema'\n      responses:\n        '204':\n          description: project succesfuly closed\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}/nodes':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - project\n      summary: Create a new node\n      operationId: create_node\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                service_uuid:\n                  type: string\n                  description: the uuid to assign to the service\n                service_key:\n                  type: string\n                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n                  description: The key (url) of the service\n                service_version:\n                  type: string\n                  pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n                  description: The tag/version of the service\n              required:\n                - service_key\n                - service_version\n            example:\n              service_key: simcore/services/dynamic/3d-viewer\n              service_version: 1.4.0\n      responses:\n        '201':\n          description: created\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - node_id\n                    properties:\n                      node_id:\n                        type: string\n                        description: The UUID attached to this node\n                        example: 123e4567-e89b-12d3-a456-426655440000\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}/nodes/{node_id}':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: node_id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - project\n      description: Gets node status\n      operationId: get_node\n      responses:\n        '200':\n          description: OK service exists and runs. Returns node details.\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - published_port\n                      - service_uuid\n                      - service_key\n                      - service_version\n                      - service_host\n                      - service_port\n                      - service_state\n                      - user_id\n                    properties:\n                      published_port:\n                        description: The ports where the service provides its interface\n                        type: integer\n                        format: int32\n                        minimum: 1\n                        example: 30000\n                      entry_point:\n                        description: The entry point where the service provides its interface if specified\n                        type: string\n                        example: /the/entry/point/is/here\n                      service_uuid:\n                        description: The UUID attached to this service\n                        type: string\n                        example: 123e4567-e89b-12d3-a456-426655440000\n                      service_key:\n                        type: string\n                        description: distinctive name for the node based on the docker registry path\n                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\\w/-]+)+$'\n                        example:\n                          - simcore/services/comp/itis/sleeper\n                          - simcore/services/dynamic/3dviewer\n                      service_version:\n                        type: string\n                        description: semantic version number\n                        pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n                        example:\n                          - 1.0.0\n                          - 0.0.1\n                      service_host:\n                        description: service host name within the network\n                        type: string\n                        example: jupyter_E1O2E-LAH\n                      service_port:\n                        description: port to access the service within the network\n                        type: integer\n                        minimum: 1\n                        example: 8081\n                      service_basepath:\n                        description: different base path where current service is mounted otherwise defaults to root\n                        type: string\n                        example: /x/E1O2E-LAH\n                        default: ''\n                      service_state:\n                        description: |\n                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start\n                        type: string\n                        enum:\n                          - pending\n                          - pulling\n                          - starting\n                          - running\n                          - complete\n                          - failed\n                      service_message:\n                        description: the service message\n                        type: string\n                        example: no suitable node (insufficient resources on 1 node)\n                      user_id:\n                        description: the user that started the service\n                        type: string\n                        example: '123'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - project\n      description: Stops and removes a node from the project\n      operationId: delete_node\n      responses:\n        '204':\n          description: node has been successfully deleted from project\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_id}/nodes/{node_id}:retrieve':\n    parameters:\n      - name: project_id\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: node_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - project\n      description: Triggers service retrieve\n      operationId: post_retrieve\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                port_keys:\n                  description: list of por keys to be retrieved\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Returns the amount of transferred bytes when pulling data via nodeports\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: object\n                    description: response payload\n                    properties:\n                      size_bytes:\n                        type: integer\n                        description: amount of transferred bytes\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_uuid}/nodes/{node_id}:restart':\n    parameters:\n      - name: project_uuid\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: node_id\n        in: path\n        required: true\n        schema:\n          type: string\n    post:\n      tags:\n        - project\n      description: Restarts containers started by the dynamic-sidecar\n      operationId: post_restart\n      responses:\n        '204':\n          description: Restarts containers started by the dynamic-sidecar\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/nodes/{nodeInstanceUUID}/outputUi/{outputKey}':\n    get:\n      tags:\n        - node\n      description: get a json description of the ui for presenting the output within the mainUi and a list of open api json schema objects describing the possible json payloads and responses for the api calls available at this endpoint\n      operationId: get_node_output_ui\n      parameters:\n        - $ref: '#/paths/~1nodes~1%7BnodeInstanceUUID%7D~1iframe/get/parameters/0'\n        - in: path\n          name: outputKey\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Service Information\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  plugin:\n                    type: string\n                  config:\n                    type: object\n        default:\n          description: Unexpected error\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - error\n                properties:\n                  data:\n                    nullable: true\n                    default: null\n                  error:\n                    type: object\n                    required:\n                      - status\n                      - message\n                    properties:\n                      message:\n                        description: Error message\n                        type: string\n                        example: Unexpected error\n                      errors:\n                        type: array\n                        items:\n                          properties:\n                            code:\n                              type: string\n                              description: Server Exception\n                              example: ServiceUUIDNotFoundError\n                      status:\n                        description: Error code\n                        type: integer\n                        example: 404\n  '/nodes/{nodeInstanceUUID}/outputUi/{outputKey}/{apiCall}':\n    post:\n      tags:\n        - node\n      summary: send data back to the output api ... protocol depends on the definition\n      operationId: send_to_node_output_api\n      parameters:\n        - $ref: '#/paths/~1nodes~1%7BnodeInstanceUUID%7D~1iframe/get/parameters/0'\n        - $ref: '#/paths/~1nodes~1%7BnodeInstanceUUID%7D~1outputUi~1%7BoutputKey%7D/get/parameters/1'\n        - in: path\n          name: apiCall\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              oneOf:\n                - description: oa3 json schema description of the request structure\n                  type: object\n                  required:\n                    - start\n                    - count\n                  properties:\n                    start:\n                      type: integer\n                    count:\n                      type: integer\n                    filter:\n                      type: string\n                    orderBy:\n                      type: string\n                - type: object\n                  required:\n                    - key\n                  properties:\n                    key:\n                      type: string\n                - description: |\n                    oa3 json schema description of the request structure.\n                    If no `rootKey` is specified, the first level of the tree is returned.\n                    The `filter` will return any items matching the filter string as well as any\n                    folder items containing matching items further down the tree.\n                  type: object\n                  properties:\n                    rootKey:\n                      type: string\n                    filter:\n                      type: string\n                - type: object\n                  required:\n                    - key\n                  properties:\n                    key:\n                      type: string\n      responses:\n        default:\n          description: node type specific api call according to the node type presented\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: array\n                    items:\n                      type: object\n                      properties:\n                        key:\n                          type: string\n                        label:\n                          type: string\n                        thumbnail:\n                          description: 'data url - https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs'\n                          type: string\n                  - type: object\n                  - type: array\n                    items:\n                      type: object\n                      properties:\n                        key:\n                          type: string\n                        label:\n                          type: string\n                        folder:\n                          type: boolean\n                  - type: object\n  '/nodes/{nodeInstanceUUID}/iframe':\n    get:\n      tags:\n        - node\n      summary: entry point for iframe interaction with the node. This relies on the reverse proxy code.\n      operationId: get_node_output_iframe\n      parameters:\n        - in: path\n          name: nodeInstanceUUID\n          required: true\n          schema:\n            type: string\n      responses:\n        default:\n          description: any response appropriate in the iframe context\n  '/projects/{study_uuid}/tags/{tag_id}':\n    parameters:\n      - name: tag_id\n        in: path\n        required: true\n        schema:\n          type: integer\n      - name: study_uuid\n        in: path\n        required: true\n        schema:\n          type: string\n    put:\n      tags:\n        - project\n      summary: Links an existing label with an existing study\n      operationId: add_tag\n      responses:\n        '200':\n          description: The tag has been successfully linked to the study\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - project\n      summary: Removes an existing link between a label and a study\n      operationId: remove_tag\n      responses:\n        '200':\n          description: The tag has been successfully removed from the study\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/projects/{project_uuid}/checkpoint/{ref_id}/iterations':\n    get:\n      tags:\n        - meta-projects\n      summary: List Project Iterations\n      description: Lists current project's iterations\n      operationId: simcore_service_webserver.meta_modeling_handlers._list_meta_project_iterations_handler\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n        - required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: integer\n              - type: string\n          name: ref_id\n          in: path\n        - description: index to the first item to return (pagination)\n          required: false\n          schema:\n            title: Offset\n            exclusiveMinimum: false\n            type: integer\n            description: index to the first item to return (pagination)\n            default: 0\n            minimum: 0\n          name: offset\n          in: query\n        - description: maximum number of items to return (pagination)\n          required: false\n          schema:\n            title: Limit\n            maximum: 50\n            minimum: 1\n            type: integer\n            description: maximum number of items to return (pagination)\n            default: 20\n          name: limit\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: 'Page[IterationItem]'\n                required:\n                  - _meta\n                  - _links\n                  - data\n                type: object\n                properties:\n                  _meta:\n                    title: PageMetaInfoLimitOffset\n                    required:\n                      - total\n                      - count\n                    type: object\n                    properties:\n                      limit:\n                        title: Limit\n                        exclusiveMinimum: true\n                        type: integer\n                        default: 20\n                        minimum: 0\n                      total:\n                        title: Total\n                        minimum: 0\n                        type: integer\n                      offset:\n                        title: Offset\n                        minimum: 0\n                        type: integer\n                        default: 0\n                      count:\n                        title: Count\n                        minimum: 0\n                        type: integer\n                  _links:\n                    title: PageLinks\n                    required:\n                      - self\n                      - first\n                      - last\n                    type: object\n                    properties:\n                      self:\n                        title: Self\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      first:\n                        title: First\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      prev:\n                        title: Prev\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      next:\n                        title: Next\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      last:\n                        title: Last\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                    additionalProperties: false\n                  data:\n                    title: Data\n                    type: array\n                    items:\n                      title: IterationItem\n                      required:\n                        - name\n                        - parent\n                        - workcopy_project_id\n                        - workcopy_project_url\n                        - url\n                      type: object\n                      properties:\n                        name:\n                          title: Name\n                          type: string\n                          description: 'Iteration''s resource name [AIP-122](https://google.aip.dev/122)'\n                        parent:\n                          title: Parent\n                          allOf:\n                            - title: ParentMetaProjectRef\n                              required:\n                                - project_id\n                                - ref_id\n                              type: object\n                              properties:\n                                project_id:\n                                  title: Project Id\n                                  type: string\n                                  format: uuid\n                                ref_id:\n                                  title: Ref Id\n                                  type: integer\n                          description: Reference to the the meta-project that defines this iteration\n                        workcopy_project_id:\n                          title: Workcopy's Project Id\n                          type: string\n                          description: ID to this iteration's working copy.A working copy is a real project where this iteration is run\n                          format: uuid\n                        workcopy_project_url:\n                          title: Workcopy's Project Url\n                          maxLength: 2083\n                          minLength: 1\n                          type: string\n                          format: uri\n                        url:\n                          title: Url\n                          maxLength: 2083\n                          minLength: 1\n                          type: string\n                          format: uri\n        '404':\n          description: This project has no iterations.Only meta-project have iterations and they must be explicitly created.\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                title: HTTPValidationError\n                type: object\n                properties:\n                  detail:\n                    title: Detail\n                    type: array\n                    items:\n                      title: ValidationError\n                      required:\n                        - loc\n                        - msg\n                        - type\n                      type: object\n                      properties:\n                        loc:\n                          title: Location\n                          type: array\n                          items:\n                            type: string\n                        msg:\n                          title: Message\n                          type: string\n                        type:\n                          title: Error Type\n                          type: string\n  '/projects/{project_uuid}/checkpoint/{ref_id}/iterations/{iter_id}':\n    get:\n      tags:\n        - meta-projects\n      summary: Get Project Iterations\n      description: Get current project's iterations\n      operationId: simcore_service_webserver.meta_modeling_handlers._get_meta_project_iterations_handler\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n        - required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: integer\n              - type: string\n          name: ref_id\n          in: path\n        - required: true\n          name: iter_id\n          schema:\n            type: integer\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n  '/projects/{project_uuid}/checkpoint/{ref_id}/iterations/-/results':\n    get:\n      tags:\n        - meta-projects\n      summary: List Project Iterations Results\n      description: Lists current project's iterations results table\n      operationId: simcore_service_webserver.meta_modeling_handlers._list_meta_project_iterations_results_handler\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n        - required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: integer\n              - type: string\n          name: ref_id\n          in: path\n        - description: index to the first item to return (pagination)\n          required: false\n          schema:\n            title: Offset\n            exclusiveMinimum: false\n            type: integer\n            description: index to the first item to return (pagination)\n            default: 0\n            minimum: 0\n          name: offset\n          in: query\n        - description: maximum number of items to return (pagination)\n          required: false\n          schema:\n            title: Limit\n            maximum: 50\n            minimum: 1\n            type: integer\n            description: maximum number of items to return (pagination)\n            default: 20\n          name: limit\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: 'Page[IterationResultItem]'\n                required:\n                  - _meta\n                  - _links\n                  - data\n                type: object\n                properties:\n                  _meta:\n                    $ref: '#/paths/~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/200/content/application~1json/schema/properties/_meta'\n                  _links:\n                    $ref: '#/paths/~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/200/content/application~1json/schema/properties/_links'\n                  data:\n                    title: Data\n                    type: array\n                    items:\n                      $ref: '#/paths/~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/200/content/application~1json/schema/properties/data/items'\n        '404':\n          description: This project has no iterations.Only meta-project have iterations and they must be explicitly created.\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/422/content/application~1json/schema'\n  '/projects/{project_uuid}/checkpoint/{ref_id}/iterations/{iter_id}/results':\n    get:\n      tags:\n        - meta-projects\n      summary: Get Project Iteration Results\n      description: Get current project's iterations\n      operationId: simcore_service_webserver.meta_modeling_handlers._get_meta_project_iteration_results_handler\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n        - required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: integer\n              - type: string\n          name: ref_id\n          in: path\n        - required: true\n          schema:\n            type: integer\n          name: iter_id\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n  /repos/projects:\n    get:\n      tags:\n        - repository\n      summary: List Repos\n      description: List info about versioned projects\n      operationId: simcore_service_webserver.version_control_handlers._list_repos_handler\n      parameters:\n        - description: index to the first item to return (pagination)\n          required: false\n          schema:\n            title: Offset\n            exclusiveMinimum: false\n            type: integer\n            description: index to the first item to return (pagination)\n            default: 0\n          name: offset\n          in: query\n        - description: maximum number of items to return (pagination)\n          required: false\n          schema:\n            title: Limit\n            maximum: 50\n            minimum: 1\n            type: integer\n            description: maximum number of items to return (pagination)\n            default: 20\n          name: limit\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: 'Page[Repo]'\n                required:\n                  - _meta\n                  - _links\n                  - data\n                type: object\n                properties:\n                  _meta:\n                    title: PageMetaInfoLimitOffset\n                    required:\n                      - limit\n                      - total\n                      - count\n                    type: object\n                    properties:\n                      limit:\n                        title: Limit\n                        exclusiveMinimum: false\n                        type: integer\n                      total:\n                        title: Total\n                        minimum: 0\n                        type: integer\n                      offset:\n                        title: Offset\n                        minimum: 0\n                        type: integer\n                        default: 0\n                      count:\n                        title: Count\n                        minimum: 0\n                        type: integer\n                    additionalProperties: false\n                  _links:\n                    title: PageLinks\n                    required:\n                      - self\n                      - first\n                      - last\n                    type: object\n                    properties:\n                      self:\n                        title: Self\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      first:\n                        title: First\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      prev:\n                        title: Prev\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      next:\n                        title: Next\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                      last:\n                        title: Last\n                        maxLength: 65536\n                        minLength: 1\n                        type: string\n                        format: uri\n                    additionalProperties: false\n                  data:\n                    title: Data\n                    type: array\n                    items:\n                      title: Repo\n                      required:\n                        - project_uuid\n                        - url\n                      type: object\n                      properties:\n                        project_uuid:\n                          title: Project Uuid\n                          type: string\n                          format: uuid\n                        url:\n                          title: Url\n                          maxLength: 2083\n                          minLength: 1\n                          type: string\n                          format: uri\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                title: HTTPValidationError\n                type: object\n                properties:\n                  detail:\n                    title: Detail\n                    type: array\n                    items:\n                      title: ValidationError\n                      required:\n                        - loc\n                        - msg\n                        - type\n                      type: object\n                      properties:\n                        loc:\n                          title: Location\n                          type: array\n                          items:\n                            type: string\n                        msg:\n                          title: Message\n                          type: string\n                        type:\n                          title: Error Type\n                          type: string\n  '/repos/projects/{project_uuid}/checkpoints':\n    get:\n      tags:\n        - repository\n      summary: List Checkpoints\n      description: Lists commits\u0026tags tree of the project\n      operationId: simcore_service_webserver.version_control_handlers._list_checkpoints_handler\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n        - description: index to the first item to return (pagination)\n          required: false\n          schema:\n            title: Offset\n            exclusiveMinimum: false\n            type: integer\n            description: index to the first item to return (pagination)\n            default: 0\n          name: offset\n          in: query\n        - description: maximum number of items to return (pagination)\n          required: false\n          schema:\n            title: Limit\n            maximum: 50\n            minimum: 1\n            type: integer\n            description: maximum number of items to return (pagination)\n            default: 20\n          name: limit\n          in: query\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: 'Page[Checkpoint]'\n                required:\n                  - _meta\n                  - _links\n                  - data\n                type: object\n                properties:\n                  _meta:\n                    $ref: '#/paths/~1repos~1projects/get/responses/200/content/application~1json/schema/properties/_meta'\n                  _links:\n                    $ref: '#/paths/~1repos~1projects/get/responses/200/content/application~1json/schema/properties/_links'\n                  data:\n                    title: Data\n                    type: array\n                    items:\n                      $ref: '#/paths/~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema/properties/data'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n    post:\n      tags:\n        - repository\n      summary: Create Checkpoint\n      operationId: simcore_service_webserver.version_control_handlers._create_checkpoint_handler\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: CheckpointNew\n              required:\n                - tag\n              type: object\n              properties:\n                tag:\n                  title: Tag\n                  type: string\n                message:\n                  title: Message\n                  type: string\n        required: true\n      responses:\n        '201':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: 'Envelope[Checkpoint]'\n                type: object\n                properties:\n                  data:\n                    title: Checkpoint\n                    required:\n                      - id\n                      - checksum\n                      - tag\n                      - message\n                      - parent\n                      - created_at\n                      - url\n                    type: object\n                    properties:\n                      id:\n                        title: Id\n                        exclusiveMinimum: false\n                        type: integer\n                      checksum:\n                        title: Checksum\n                        type: string\n                      tag:\n                        title: Tag\n                        type: string\n                      message:\n                        title: Message\n                        type: string\n                      parent:\n                        title: Parent\n                        exclusiveMinimum: false\n                        type: integer\n                      created_at:\n                        title: Created At\n                        type: string\n                        format: date-time\n                      url:\n                        title: Url\n                        maxLength: 2083\n                        minLength: 1\n                        type: string\n                        format: uri\n                  error:\n                    title: Error\n                    required:\n                      - code\n                      - message\n                    type: object\n                    properties:\n                      code:\n                        title: Code\n                        type: integer\n                      message:\n                        title: Message\n                        type: string\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n  '/repos/projects/{project_uuid}/checkpoints/HEAD':\n    get:\n      tags:\n        - repository\n      summary: Gets HEAD (i.e. current) checkpoint\n      description: Get current commit\n      operationId: simcore_service_webserver.version_control_handlers._get_checkpoint_handler_head\n      parameters:\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n  '/repos/projects/{project_uuid}/checkpoints/{ref_id}':\n    get:\n      tags:\n        - repository\n      summary: Get Checkpoint\n      description: Set ref_id=HEAD to return current commit\n      operationId: simcore_service_webserver.version_control_handlers._get_checkpoint_handler\n      parameters:\n        - description: 'A repository ref (commit, tag or branch)'\n          required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: string\n                format: uuid\n              - type: string\n            description: 'A repository ref (commit, tag or branch)'\n          name: ref_id\n          in: path\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n    patch:\n      tags:\n        - repository\n      summary: Update Checkpoint Annotations\n      operationId: simcore_service_webserver.version_control_handlers._update_checkpoint_annotations_handler\n      parameters:\n        - description: 'A repository ref (commit, tag or branch)'\n          required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: string\n                format: uuid\n              - type: string\n            description: 'A repository ref (commit, tag or branch)'\n          name: ref_id\n          in: path\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n      requestBody:\n        content:\n          application/json:\n            schema:\n              title: CheckpointAnnotations\n              type: object\n              properties:\n                tag:\n                  title: Tag\n                  type: string\n                message:\n                  title: Message\n                  type: string\n        required: true\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n  '/repos/projects/{project_uuid}/checkpoints/{ref_id}:checkout':\n    post:\n      tags:\n        - repository\n      summary: Checkout\n      description: |-\n        Affect current working copy of the project, i.e. get_project will now return\n        the check out\n      operationId: simcore_service_webserver.version_control_handlers._checkout_handler\n      parameters:\n        - description: 'A repository ref (commit, tag or branch)'\n          required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: string\n                format: uuid\n              - type: string\n            description: 'A repository ref (commit, tag or branch)'\n          name: ref_id\n          in: path\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n  '/repos/projects/{project_uuid}/checkpoints/{ref_id}/workbench/view':\n    get:\n      tags:\n        - repository\n      summary: View Project Workbench\n      description: Returns a view of the workbench for a given project's version\n      operationId: simcore_service_webserver.version_control_handlers._view_project_workbench_handler\n      parameters:\n        - description: 'A repository ref (commit, tag or branch)'\n          required: true\n          schema:\n            title: Ref Id\n            anyOf:\n              - type: string\n                format: uuid\n              - type: string\n            description: 'A repository ref (commit, tag or branch)'\n          name: ref_id\n          in: path\n        - description: Project unique identifier\n          required: true\n          schema:\n            title: Project Uuid\n            type: string\n            description: Project unique identifier\n            format: uuid\n          name: project_uuid\n          in: path\n      responses:\n        '200':\n          description: Successful Response\n          content:\n            application/json:\n              schema:\n                title: 'Envelope[WorkbenchView]'\n                type: object\n                properties:\n                  data:\n                    title: WorkbenchView\n                    type: object\n                    properties:\n                      workbench:\n                        title: Workbench\n                        type: object\n                        additionalProperties:\n                          title: Node\n                          required:\n                            - key\n                            - version\n                            - label\n                            - inputs\n                            - outputs\n                          type: object\n                          properties:\n                            key:\n                              title: Key\n                              type: string\n                            version:\n                              title: Version\n                              pattern: \\d+\\.\\d+\\.\\d+\n                              type: string\n                            label:\n                              title: Label\n                              type: string\n                            inputs:\n                              title: Inputs\n                              type: object\n                            outputs:\n                              title: Outputs\n                              type: object\n                        default: {}\n                      ui:\n                        title: Ui\n                        type: object\n                        default: {}\n                    description: A view (i.e. read-only and visual) of the project's workbench\n                  error:\n                    $ref: '#/paths/~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema/properties/error'\n        '422':\n          description: Validation Error\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1repos~1projects/get/responses/422/content/application~1json/schema'\n  /activity/status:\n    get:\n      operationId: get_status\n      tags:\n        - activity\n      responses:\n        '200':\n          description: 'Object containing queuing, CPU and Memory usage/limits information of services'\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    additionalProperties: true\n                    type: object\n                    properties:\n                      stats:\n                        type: object\n                        properties:\n                          cpuUsage:\n                            type: number\n                            minimum: 0\n                          memoryUsage:\n                            type: number\n                      limits:\n                        type: object\n                        properties:\n                          cpus:\n                            type: number\n                          mem:\n                            type: number\n                      queued:\n                        type: boolean\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /tags:\n    get:\n      tags:\n        - tag\n      summary: List all tags for the current user\n      operationId: list_tags\n      responses:\n        '200':\n          description: List of tags\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - tags\n                    properties:\n                      tags:\n                        type: array\n                        items:\n                          $ref: '#/paths/~1tags/post/responses/200/content/application~1json/schema/properties/data'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      tags:\n        - tag\n      summary: Creates a new tag\n      operationId: create_tag\n      responses:\n        '200':\n          description: The created tag\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    required:\n                      - name\n                      - color\n                    properties:\n                      id:\n                        type: integer\n                      name:\n                        type: string\n                      description:\n                        type: string\n                      color:\n                        type: string\n                        pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/tags/{tag_id}':\n    parameters:\n      - name: tag_id\n        in: path\n        required: true\n        schema:\n          type: integer\n    put:\n      tags:\n        - tag\n      summary: Updates a tag\n      operationId: update_tag\n      responses:\n        '200':\n          description: The updated tag\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1tags/post/responses/200/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - tag\n      summary: Deletes an existing tag\n      operationId: delete_tag\n      responses:\n        '204':\n          description: The tag has been successfully deleted\n  /publications/service-submission:\n    post:\n      tags:\n        - publication\n      summary: Submits a new service candidate\n      operationId: service_submission\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - metadata\n              properties:\n                metadata:\n                  type: string\n                  format: binary\n                attachment:\n                  type: string\n                  format: binary\n      responses:\n        '204':\n          description: Submission has been registered\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /catalog/dags:\n    get:\n      tags:\n        - catalog\n      operationId: list_catalog_dags\n      responses:\n        '200':\n          description: List of catalog dags\n        '422':\n          description: Validation Error\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      tags:\n        - catalog\n      summary: Creates a new dag in catalog\n      operationId: create_catalog_dag\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: true\n      responses:\n        '201':\n          description: The dag was successfully created\n        '422':\n          description: Validation Error\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/catalog/dags/{dag_id}':\n    parameters:\n      - in: path\n        name: dag_id\n        required: true\n        schema:\n          title: Dag Id\n          type: integer\n    put:\n      tags:\n        - catalog\n      summary: Replaces a dag in catalog\n      operationId: replace_catalog_dag\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: true\n      responses:\n        '200':\n          description: The dag was replaced in catalog\n        '422':\n          description: Validation Error\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - catalog\n      summary: Deletes an existing dag\n      operationId: delete_catalog_dag\n      responses:\n        '204':\n          description: Successfully deleted\n        '422':\n          description: Validation Error\n  /catalog/services:\n    get:\n      tags:\n        - catalog\n      summary: List Services\n      operationId: list_services_handler\n      responses:\n        '200':\n          description: Returns list of services from the catalog\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/catalog/services/{service_key}/{service_version}':\n    parameters:\n      - in: path\n        name: service_key\n        required: true\n        schema:\n          title: Service key\n          type: string\n          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n      - in: path\n        name: service_version\n        required: true\n        schema:\n          title: Service version\n          type: string\n          pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n    get:\n      tags:\n        - catalog\n      summary: Get Service\n      operationId: get_service_handler\n      responses:\n        '200':\n          description: Returns service\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    patch:\n      tags:\n        - catalog\n      summary: Update Service\n      operationId: update_service_handler\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              additionalProperties: true\n      responses:\n        '200':\n          description: Returns modified service\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/catalog/services/{service_key}/{service_version}/inputs':\n    get:\n      tags:\n        - catalog\n      operationId: list_service_inputs_handler\n      parameters:\n        - in: path\n          name: service_key\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Service Key\n            type: string\n        - in: path\n          name: service_version\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Service Version\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                additionalProperties: false\n                description: Metadata on a service input port\n                example:\n                  defaultValue: 0\n                  description: Time to wait before completion\n                  displayOrder: 2\n                  keyId: input_2\n                  label: Sleep Time\n                  type: number\n                  unit: second\n                  unitLong: seconds\n                  unitShort: sec\n                  widget:\n                    details:\n                      minHeight: 1\n                    type: TextArea\n                properties:\n                  defaultValue:\n                    anyOf:\n                      - type: boolean\n                      - type: integer\n                      - type: number\n                      - type: string\n                    title: Defaultvalue\n                  description:\n                    description: description of the property\n                    example: Age in seconds since 1970\n                    title: Description\n                    type: string\n                  displayOrder:\n                    description: use this to numerically sort the properties for display\n                    title: Displayorder\n                    type: number\n                  fileToKeyMap:\n                    description: Place the data associated with the named keys in files\n                    title: Filetokeymap\n                    type: object\n                  keyId:\n                    description: Unique name identifier for this input\n                    pattern: '^[-_a-zA-Z0-9]+$'\n                    title: Keyid\n                    type: string\n                  label:\n                    description: short name for the property\n                    example: Age\n                    title: Label\n                    type: string\n                  type:\n                    description: data type expected on this input glob matching for data type is allowed\n                    pattern: '^(number|integer|boolean|string|data:([^/\\s,]+/[^/\\s,]+|\\[[^/\\s,]+/[^/\\s,]+(,[^/\\s]+/[^/,\\s]+)*\\]))$'\n                    title: Type\n                    type: string\n                  unit:\n                    description: 'Units, when it refers to a physical quantity'\n                    title: Unit\n                    type: string\n                  unitLong:\n                    description: 'Long name of the unit, if available'\n                    title: Unitlong\n                    type: string\n                  unitShort:\n                    description: 'Short name for the unit, if available'\n                    title: Unitshort\n                    type: string\n                  widget:\n                    allOf:\n                      - additionalProperties: false\n                        properties:\n                          details:\n                            anyOf:\n                              - additionalProperties: false\n                                properties:\n                                  minHeight:\n                                    description: minimum Height of the textarea\n                                    x-exclusiveMinimum: 0\n                                    title: Minheight\n                                    type: integer\n                                required:\n                                  - minHeight\n                                title: TextArea\n                                type: object\n                              - additionalProperties: false\n                                properties:\n                                  structure:\n                                    items:\n                                      additionalProperties: false\n                                      properties:\n                                        key:\n                                          anyOf:\n                                            - type: string\n                                            - type: boolean\n                                            - type: number\n                                          title: Key\n                                        label:\n                                          title: Label\n                                          type: string\n                                      required:\n                                        - key\n                                        - label\n                                      title: Structure\n                                      type: object\n                                    minItems: 1\n                                    title: Structure\n                                    type: array\n                                required:\n                                  - structure\n                                title: SelectBox\n                                type: object\n                            title: Details\n                          type:\n                            allOf:\n                              - description: An enumeration.\n                                enum:\n                                  - TextArea\n                                  - SelectBox\n                                title: WidgetType\n                                type: string\n                            description: type of the property\n                        required:\n                          - type\n                          - details\n                        title: Widget\n                        type: object\n                    description: custom widget to use instead of the default one determined from the data-type\n                    title: Widget\n                required:\n                  - displayOrder\n                  - label\n                  - description\n                  - type\n                  - keyId\n                title: ServiceInputApiOut\n                type: object\n          description: Successful Response\n        '422':\n          content:\n            application/json:\n              schema:\n                properties:\n                  detail:\n                    items:\n                      properties:\n                        loc:\n                          items:\n                            type: string\n                          title: Location\n                          type: array\n                        msg:\n                          title: Message\n                          type: string\n                        type:\n                          title: Error Type\n                          type: string\n                      required:\n                        - loc\n                        - msg\n                        - type\n                      title: ValidationError\n                      type: object\n                    title: Detail\n                    type: array\n                title: HTTPValidationError\n                type: object\n          description: Validation Error\n      summary: List Service Inputs\n  '/catalog/services/{service_key}/{service_version}/inputs/{input_key}':\n    get:\n      tags:\n        - catalog\n      operationId: get_service_input_handler\n      parameters:\n        - in: path\n          name: service_key\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Service Key\n            type: string\n        - in: path\n          name: service_version\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Service Version\n            type: string\n        - in: path\n          name: input_key\n          required: true\n          schema:\n            pattern: '^[-_a-zA-Z0-9]+$'\n            title: Input Key\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/200/content/application~1json/schema'\n          description: Successful Response\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'\n          description: Validation Error\n      summary: Get Service Input\n  '/catalog/services/{service_key}/{service_version}/inputs:match':\n    get:\n      tags:\n        - catalog\n      description: 'Filters inputs of this service that match a given service output. Returns compatible input ports of the service, provided an output port of a connected node.'\n      operationId: get_compatible_inputs_given_source_output_handler\n      parameters:\n        - in: path\n          name: service_key\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Service Key\n            type: string\n        - in: path\n          name: service_version\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Service Version\n            type: string\n        - in: query\n          name: fromService\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Fromservice\n            type: string\n        - in: query\n          name: fromVersion\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Fromversion\n            type: string\n        - in: query\n          name: fromOutput\n          required: true\n          schema:\n            pattern: '^[-_a-zA-Z0-9]+$'\n            title: Fromoutput\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  pattern: '^[-_a-zA-Z0-9]+$'\n                  type: string\n                title: Response Get Compatible Inputs Given Source Output Catalog Services  Service Key   Service Version  Inputs Match Get\n                type: array\n          description: Successful Response\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'\n          description: Validation Error\n      summary: Get Compatible Inputs Given Source Output\n  '/catalog/services/{service_key}/{service_version}/outputs':\n    get:\n      tags:\n        - catalog\n      operationId: list_service_outputs_handler\n      parameters:\n        - in: path\n          name: service_key\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Service Key\n            type: string\n        - in: path\n          name: service_version\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Service Version\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1outputs~1%7Boutput_key%7D/get/responses/200/content/application~1json/schema'\n                title: Response List Service Outputs Catalog Services  Service Key   Service Version  Outputs Get\n                type: array\n          description: Successful Response\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'\n          description: Validation Error\n      summary: List Service Outputs\n  '/catalog/services/{service_key}/{service_version}/outputs/{output_key}':\n    get:\n      tags:\n        - catalog\n      operationId: get_service_output_handler\n      parameters:\n        - in: path\n          name: service_key\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Service Key\n            type: string\n        - in: path\n          name: service_version\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Service Version\n            type: string\n        - in: path\n          name: output_key\n          required: true\n          schema:\n            pattern: '^[-_a-zA-Z0-9]+$'\n            title: Output Key\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                additionalProperties: false\n                description: Metadata on a service input or output port\n                example:\n                  defaultValue: 0\n                  description: Time to wait before completion\n                  displayOrder: 2\n                  keyId: input_2\n                  label: Sleep Time\n                  type: number\n                  unit: second\n                  unitLong: seconds\n                  unitShort: sec\n                  widget:\n                    details:\n                      minHeight: 1\n                    type: TextArea\n                properties:\n                  defaultValue:\n                    anyOf:\n                      - type: boolean\n                      - type: integer\n                      - type: number\n                      - type: string\n                    title: Defaultvalue\n                  description:\n                    description: description of the property\n                    example: Age in seconds since 1970\n                    title: Description\n                    type: string\n                  displayOrder:\n                    description: use this to numerically sort the properties for display\n                    title: Displayorder\n                    type: number\n                  fileToKeyMap:\n                    description: Place the data associated with the named keys in files\n                    title: Filetokeymap\n                    type: object\n                  keyId:\n                    description: Unique name identifier for this input\n                    pattern: '^[-_a-zA-Z0-9]+$'\n                    title: Keyid\n                    type: string\n                  label:\n                    description: short name for the property\n                    example: Age\n                    title: Label\n                    type: string\n                  type:\n                    description: data type expected on this input glob matching for data type is allowed\n                    pattern: '^(number|integer|boolean|string|data:([^/\\s,]+/[^/\\s,]+|\\[[^/\\s,]+/[^/\\s,]+(,[^/\\s]+/[^/,\\s]+)*\\]))$'\n                    title: Type\n                    type: string\n                  unit:\n                    description: 'Units, when it refers to a physical quantity'\n                    title: Unit\n                    type: string\n                  unitLong:\n                    description: 'Long name of the unit, if available'\n                    title: Unitlong\n                    type: string\n                  unitShort:\n                    description: 'Short name for the unit, if available'\n                    title: Unitshort\n                    type: string\n                  widget:\n                    allOf:\n                      - $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/200/content/application~1json/schema/properties/widget/allOf/0'\n                    deprecated: true\n                    description: custom widget to use instead of the default one determined from the data-type\n                    title: Widget\n                required:\n                  - displayOrder\n                  - label\n                  - description\n                  - type\n                  - keyId\n                title: ServiceOutputApiOut\n                type: object\n          description: Successful Response\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'\n          description: Validation Error\n      summary: Get Service Output\n  '/catalog/services/{service_key}/{service_version}/outputs:match':\n    get:\n      tags:\n        - catalog\n      description: Filters outputs of this service that match a given service input. Returns compatible output port of a connected node for a given input\n      operationId: get_compatible_outputs_given_target_input_handler\n      parameters:\n        - in: path\n          name: service_key\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Service Key\n            type: string\n        - in: path\n          name: service_version\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Service Version\n            type: string\n        - in: query\n          name: toService\n          required: true\n          schema:\n            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\\w/-]+)+$'\n            title: Toservice\n            type: string\n        - in: query\n          name: toVersion\n          required: true\n          schema:\n            pattern: '^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$'\n            title: Toversion\n            type: string\n        - in: query\n          name: toInput\n          required: true\n          schema:\n            pattern: '^[-_a-zA-Z0-9]+$'\n            title: Toinput\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                items:\n                  pattern: '^[-_a-zA-Z0-9]+$'\n                  type: string\n                title: Response Get Compatible Outputs Given Target Input Catalog Services  Service Key   Service Version  Outputs Match Get\n                type: array\n          description: Successful Response\n        '422':\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'\n          description: Validation Error\n      summary: Get Compatible Outputs Given Target Input\n  /clusters:\n    get:\n      summary: List my clusters\n      operationId: list_clusters_handler\n      tags:\n        - cluster\n      responses:\n        '200':\n          description: list of the clusters I have access to\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: array\n                    items:\n                      $ref: '#/paths/~1clusters/post/responses/201/content/application~1json/schema/properties/data'\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    post:\n      summary: Create a new cluster\n      operationId: create_cluster_handler\n      tags:\n        - cluster\n      requestBody:\n        required: true\n        description: the cluster to create\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: the cluster name\n                  type: string\n                description:\n                  description: the cluster description\n                  type: string\n                type:\n                  description: the cluster type\n                  type: string\n                  enum:\n                    - ON_PREMISE\n                    - AWS\n                thumbnail:\n                  type: string\n                endpoint:\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                authentication:\n                  description: Dask gateway authentication\n                  anyOf:\n                    - type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - simple\n                          default: simple\n                        username:\n                          type: string\n                        password:\n                          type: string\n                          writeOnly: true\n                      required:\n                        - username\n                        - password\n                      additionalProperties: false\n                    - type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - kerberos\n                          default: kerberos\n                      additionalProperties: false\n                    - type: object\n                      properties:\n                        type:\n                          type: string\n                          enum:\n                            - jupyterhub\n                          default: jupyterhub\n                        api_token:\n                          type: string\n                      required:\n                        - api_token\n                      additionalProperties: false\n              required:\n                - name\n                - type\n                - endpoint\n                - authentication\n              additionalProperties: false\n      responses:\n        '201':\n          description: cluster created\n          content:\n            application/json:\n              schema:\n                type: object\n                required:\n                  - data\n                properties:\n                  data:\n                    type: object\n                    properties:\n                      id:\n                        description: the cluster id\n                        type: integer\n                        minimum: 1\n                      name:\n                        description: the cluster name\n                        type: string\n                      description:\n                        description: the cluster description\n                        type: string\n                      type:\n                        description: the cluster type\n                        type: string\n                        enum:\n                          - ON_PREMISE\n                          - AWS\n                      owner:\n                        description: the cluster owner group\n                        type: integer\n                        minimum: 1\n                      thumbnail:\n                        type: string\n                        format: uri\n                      endpoint:\n                        type: string\n                        minLength: 1\n                        maxLength: 65536\n                      authentication:\n                        description: Dask gateway authentication\n                        anyOf:\n                          - $ref: '#/paths/~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/0'\n                          - $ref: '#/paths/~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/1'\n                          - $ref: '#/paths/~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/2'\n                      accessRights:\n                        type: object\n                        description: object containing the GroupID as key and read/write/execution permissions as value\n                        x-patternProperties:\n                          ^\\S+$:\n                            $ref: '#/paths/~1clusters~1%7Bcluster_id%7D/patch/requestBody/content/application~1json/schema/properties/accessRights/x-patternProperties/%5E%5CS%2B%24'\n                    required:\n                      - id\n                      - name\n                      - accessRights\n                      - endpoint\n                      - authentication\n                    additionalProperties: false\n                    example:\n                      - id: 1\n                        name: AWS cluster\n                        type: AWS\n                        endpoint: 'https://registry.osparc-development.fake.dev'\n                        authentication:\n                          type: simple\n                          username: someuser\n                          password: somepassword\n                        owner: 2\n                        accessRights:\n                          '2':\n                            read: true\n                            write: true\n                            delete: true\n                  error:\n                    nullable: true\n                    default: null\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  '/clusters/{cluster_id}':\n    parameters:\n      - name: cluster_id\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      tags:\n        - cluster\n      summary: Gets one cluster details\n      operationId: get_cluster_handler\n      responses:\n        '200':\n          description: got cluster\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1clusters/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    patch:\n      summary: Update one cluster\n      operationId: update_cluster_handler\n      tags:\n        - cluster\n      requestBody:\n        required: true\n        description: the cluster to update\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: the cluster name\n                  type: string\n                description:\n                  description: the cluster description\n                  type: string\n                type:\n                  description: the cluster type\n                  type: string\n                  enum:\n                    - ON_PREMISE\n                    - AWS\n                owner:\n                  description: the cluster owner group\n                  type: integer\n                  minimum: 1\n                thumbnail:\n                  type: string\n                endpoint:\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                authentication:\n                  description: Dask gateway authentication\n                  anyOf:\n                    - $ref: '#/paths/~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/0'\n                    - $ref: '#/paths/~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/1'\n                    - $ref: '#/paths/~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/2'\n                accessRights:\n                  type: object\n                  description: object containing the GroupID as key and read/write/execution permissions as value\n                  x-patternProperties:\n                    ^\\S+$:\n                      description: defines acesss rights for the cluster\n                      type: object\n                      properties:\n                        read:\n                          type: boolean\n                          description: allows usage of the cluster\n                        write:\n                          type: boolean\n                          description: allows modification of the cluster\n                        delete:\n                          type: boolean\n                          description: allows deletion of the cluster\n                      required:\n                        - read\n                        - write\n                        - delete\n              additionalProperties: false\n      responses:\n        '200':\n          description: the modified cluster\n          content:\n            application/json:\n              schema:\n                $ref: '#/paths/~1clusters/post/responses/201/content/application~1json/schema'\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n    delete:\n      tags:\n        - cluster\n      summary: Deletes one cluster\n      operationId: delete_cluster_handler\n      responses:\n        '204':\n          description: cluster has been successfully deleted\n        default:\n          $ref: '#/components/responses/DefaultErrorResponse'\n  /viewers:\n    get:\n      operationId: list_viewers\n      parameters:\n        - in: query\n          name: file_type\n          required: false\n          schema:\n            title: File Type\n            description: Filters list to viewers supporting that filetype\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    items:\n                      $ref: '#/paths/~1viewers~1default/get/responses/200/content/application~1json/schema/properties/data'\n                    type: array\n                required:\n                  - data\n                title: ViewerListEnveloped\n                type: object\n          description: Successful Response\n      summary: Lists viewers\n      description: Lists all publicaly available viewers. Notice that this might contain multiple services for the same filetype\n      tags:\n        - viewer\n  /viewers/default:\n    get:\n      operationId: list_default_viewers\n      parameters:\n        - in: query\n          name: file_type\n          required: false\n          schema:\n            title: File Type\n            description: Filters list to viewers supporting that filetype\n            type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                properties:\n                  data:\n                    properties:\n                      file_type:\n                        title: File Type\n                        type: string\n                        description: Identifier for the file type\n                      view_url:\n                        description: 'Base url to execute viewer. Needs appending file_size,[file_name] and download_link as query parameters'\n                        format: uri\n                        maxLength: 2083\n                        minLength: 1\n                        title: Redirection Url\n                        type: string\n                      title:\n                        description: Short formatted label with name and version of the viewer\n                        title: Viewer Title\n                        type: string\n                    required:\n                      - file_type\n                      - viewer_title\n                      - view_url\n                    title: Viewer\n                    type: object\n                required:\n                  - data\n                title: ViewerEnveloped\n                type: object\n          description: Successful Response\n      summary: List Default Viewers\n      description: Lists a default viewer for each supported filetype. Only publicaly available viewers.\n      tags:\n        - viewer\ncomponents:\n  responses:\n    DefaultErrorResponse:\n      description: Default http error response body\n      content:\n        application/json:\n          schema:\n            type: object\n            required:\n              - error\n            properties:\n              data:\n                nullable: true\n                default: null\n              error:\n                type: object\n                nullable: true\n                properties:\n                  logs:\n                    description: log messages\n                    type: array\n                    items:\n                      $ref: '#/paths/~1auth~1login/post/responses/200/content/application~1json/schema/properties/data'\n                  errors:\n                    description: errors metadata\n                    type: array\n                    items:\n                      type: object\n                      required:\n                        - code\n                        - message\n                      properties:\n                        code:\n                          type: string\n                          description: Typically the name of the exception that produced it otherwise some known error code\n                        message:\n                          type: string\n                          description: Error message specific to this item\n                        resource:\n                          type: string\n                          description: API resource affected by this error\n                        field:\n                          type: string\n                          description: Specific field within the resource\n                  status:\n                    description: HTTP error code\n                    type: integer\n                example:\n                  BadRequestError:\n                    logs:\n                      - message: Requested information is incomplete or malformed\n                        level: ERROR\n                      - message: Invalid email and password\n                        level: ERROR\n                        logger: USER\n                    errors:\n                      - code: InvalidEmail\n                        message: Email is malformed\n                        field: email\n                      - code: UnsavePassword\n                        message: Password is not secure\n                        field: pasword\n                    status: 400\n"
		}
	},
	"Error": "parse: parse spec: paths: /config: get: operation \"get_config\": responses: 200: content: \"application/json\": schema: parse schema: error: parse schema: infer default type: cannot infer type from \"null\""
}