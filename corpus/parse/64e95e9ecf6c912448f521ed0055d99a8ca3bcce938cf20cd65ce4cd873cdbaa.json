{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lob/lob-openapi"
		},
		"file": {
			"name": "lob-api-bundled.yml",
			"size": 0,
			"path": "dist/lob-api-bundled.yml",
			"byteSize": 623473,
			"content": "openapi: 3.0.3\ninfo:\n  title: Lob\n  version: 1.6.5\n  description: \u003e\n    The Lob API is organized around REST. Our API is designed to have\n    predictable, resource-oriented URLs and uses HTTP response codes to indicate\n    any API errors. \u003cp\u003e\n  license:\n    name: MIT\n    url: https://mit-license.org/\n  contact:\n    name: Lob Developer Experience\n    url: https://support.lob.com/\n    email: lob-openapi@lob.com\n  termsOfService: https://www.lob.com/legal\nservers:\n  - url: https://api.lob.com/v1\n    description: production\ntags:\n  - name: Addresses\n    description: \u003e\n      To add an address to your address book, you create a new address object.\n      You can retrieve and delete individual\n\n      addresses as well as get a list of addresses. Addresses are identified by\n      a unique random ID.\n  - name: Authentication\n    x-traitTag: true\n    description: \u003e\n      Requests made to the API are protected with \u003ca\n      href=\"https://en.wikipedia.org/wiki/Basic_access_authentication\"\n      target=\"_blank\"\u003eHTTP Basic authentication\u003c/a\u003e.\n\n      In order to properly authenticate with the API you must use your API key\n      as the username\n\n      while leaving the password blank. Requests not properly authenticated will\n      return a `401`\n\n      [error code](#tag/Errors). You can find your account's API keys\n\n      in your \u003ca href=\"https://dashboard.lob.com/settings/api-keys\"\n      target=\"_blank\"\u003eDashboard Settings\u003c/a\u003e.\n\n      ### Example Request\n\n      curl uses the -u flag to pass basic auth credentials (adding a colon after\n      your API key will prevent it from asking you for a\n\n      password). One of our test API keys has been filled into all the examples\n      on the page, so you can test out any example right away.\n\n      ```bash\n\n      curl https://api.lob.com/v1/addresses \\\n        -u test_0dc8dXXXXXXXXXXXXXXXXXXXXXX5b0cc:\n      ```\n\n      ## API Keys\n        Lob authenticates your API requests using your account's API keys.\n        If you do not include your key when making an API request, or use\n        one that is incorrect or outdated, Lob returns an error with a `401`\n        HTTP response code. You can find all API keys in your dashboard\n        under \u003ca href=\"https://dashboard.lob.com/settings/api-keys\" target=\"_blank\"\u003eSettings\u003c/a\u003e.\n        There are two types of API keys: *secret* and *publishable*.\n        - **Secret API keys** should be kept confidential and only stored on your own servers.\n        Your account's secret API key can perform any API request to Lob without restriction.\n        - **Publishable API keys** are limited to US verifications, international verifications,\n        and US autocomplete requests. While we encourage you to use a secret key for maximum\n        security, you can publish these keys to JavaScript code or in an Android or iPhone app\n        without exposing print and mail services or your secret key. Publishable keys are always\n        prefixed with `[environment]_pub`.\n        Every type comes with a pair of keys: one for the testing environment and one for the\n        live environment. We recommend reading [Test and Live Environments](#tag/Test-and-Live-Environments)\n        for more information.\n  - name: Bank Accounts\n    description: \u003e\n      Bank Accounts allow you to store your bank account securely in our system.\n      The API provides\n\n      endpoints for creating bank accounts, deleting bank accounts, verifying\n      bank accounts,\n\n      retrieving individual bank accounts, and retrieving a list of bank\n      accounts.\n  - name: Beta Program\n    x-traitTag: true\n    description: \u003e\n      At Lob, we pride ourselves on building high quality platform capabilities\n      rapidly\n\n      and iteratively, so we can constantly be delivering additional value to\n      our customers.\n\n      When evaluating a new product or feature from Lob, you may see that it has\n      been released in Beta.\n\n\n      Typically, something in Beta means that the feature is early in its\n      lifecycle here at\n\n      Lob. While we fully stand behind the quality of everything we release in\n      Beta, we do\n\n      anticipate receiving a higher level of customer feedback on Beta features,\n      as well as a\n\n      faster pace of changes from our engineering team in response to that\n      feedback.\n\n\n      By participating in a Lob Beta program, you will have the opportunity to\n      get early access\n\n      to a new product capability, as well as having a unique opportunity to\n      influence the product's\n\n      direction with your feedback.\n\n\n      You should also anticipate that features in Beta may have functional or\n      design limitations,\n\n      and might change rapidly as we receive customer feedback and make\n      improvements. In particular,\n\n      new APIs in Beta may also go through more frequent versioning and version\n      deprecation cycles\n\n      than our more mature APIs.\n\n\n      If you are participating in a Beta program and want to provide feedback,\n      please feel free to\n\n      \u003ca href=\"https://lob.com/support#contact\" target=\"_blank\"\u003econtact us\u003c/a\u003e!\n  - name: Billing Groups\n    description: \u003e\n      The Billing Groups API allows you to create and view labels that can be\n      attached to certain consumption-based\n\n      usages of Letters, Checks, Postcards and Self-Mailers to customize your\n      bill. Please check each\n\n      resource API section to learn more about how to access the Billing Groups\n      API.\n  - name: Bulk Intl Verifications\n    description: Verify a list of non-US addresses.\n  - name: Bulk US Verifications\n    description: Verify a list of US addresses.\n  - name: Card Orders\n    description: \u003e\n      The card orders endpoint allows you to easily create card orders for\n      existing cards.\n\n      The API provides endpoints for creating card orders and listing card\n      orders for a given card.\n  - name: Cards\n    description: \u003e\n      The cards endpoint allows you to easily create cards that can later be\n      affixed to Letters.\n\n      The API provides endpoints for creating cards, retrieving individual\n      cards, creating card orders, and retrieving a list of cards.\n  - name: Checks\n    description: \u003e\n      Checks allow you to send payments via physical checks. The API provides\n      endpoints\n\n      for creating checks, retrieving individual checks, canceling checks, and\n      retrieving a list of checks.\n  - name: Errors\n    x-traitTag: true\n    description: \u003e\n      Lob uses RESTful HTTP response codes to indicate success or failure of an\n      API request - read below for more information. In general, 2xx indicates\n      success, 4xx indicate an input error, and 5xx indicates an error on Lob's\n      end.\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eATTRIBUTE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eDESCRIPTION\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ecode\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA consistent machine-keyable string identifying the error\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003estatus_code\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA conventional HTTP status code\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003emessage\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA human-readable, subject-to-change message with more details about the error\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      ### HTTP Status Code Summary\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eSTATUS_CODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eCODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eMESSAGE\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e200\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eSUCCESS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eSuccessful API request\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e401\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUNAUTHORIZED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAuthorization error with your API key or account\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e403\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFORBIDDEN\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eForbidden error with your API key or account\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e404\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eNOT FOUND\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe requested item does not exist\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eBAD REQUEST\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe query or body parameters did not pass validation\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e429\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTOO MANY REQUESTS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eToo many requests have been sent with an API key in a given amount of time\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e500\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eSERVER ERROR\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn internal server error occurred, please contact support@lob.com\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      ### Error Codes - Generic\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eSTATUS_CODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eCODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eMESSAGE\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eBAD_REQUEST\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn invalid request was made. See error message for details.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e409/422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eCONFLICT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThis operation would leave data in a conflicted state.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e403\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFEATURE_LIMIT_REACHED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe account has reached its resource limit and requires upgrading to add more.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e500\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINTERNAL_SERVER_ERROR\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn error has occured on Lob's servers. Please try request again.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn invalid request was made. See error message for details.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eNOT_DELETABLE\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn attempt was made to delete a resource, but the resource cannot be deleted.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e404\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eNOT_FOUND\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe requested resource was not found.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e408\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eREQUEST_TIMEOUT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe request took too long. Please try again.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e503\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eSERVICE_UNAVAILABLE\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe Lob servers are temporarily unavailable. Please try again.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e404\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUNRECOGNIZED_ENDPOINT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe requested endpoint doesn't exist.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUNSUPPORTED_LOB_VERSION\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn unsupported Lob API version was requested.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      ### Error Codes - Authentication\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eSTATUS_CODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eCODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eMESSAGE\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e401\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eEMAIL_REQUIRED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAccount must have a verified email address before creating live resources.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e401\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUNAUTHORIZED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe request isn't authorized.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e401\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUNAUTHORIZED_TOKEN\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eToken isn't authorized.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e401/403\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_API_KEY\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe API key is invalid.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e403\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003ePUBLISHABLE_KEY_NOT_ALLOWED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe requested operation needs a secret key, not a publishable key. See [API Keys](#tag/API-Keys) for more information.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e429\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eRATE_LIMIT_EXCEEDED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eRequests were sent too quickly and must be slowed down.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n       ### Error Codes - Advanced\n\n       \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eSTATUS_CODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eCODE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eMESSAGE\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e401\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003ePAYMENT_METHOD_UNVERIFIED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eYou must have a verified bank account or credit card to submit live requests.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e404\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eDELETED_BANK_ACCOUNT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eChecks cannot be created with a deleted bank account.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eADDRESS_LENGTH_EXCEEDS_LIMIT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe sum of to.address_line1 and to.address_line2 cannot surpass 50 characters.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eBANK_ACCOUNT_ALREADY_VERIFIED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe bank account has already been verified.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eBANK_ERROR\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThere's an issue with the bank account.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eCUSTOM_ENVELOPE_INVENTORY_DEPLETED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eCustom envelope inventory is depleted, and more will need to be ordered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFAILED_DELIVERABILITY_STRICTNESS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe to address doesn't meet strictness requirements. \n          See \u003ca href=\"https://dashboard.lob.com/#/settings/account\" target=\"_blank\"\u003eAccount Settings\u003c/a\u003e to configure strictness.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFILE_PAGES_BELOW_MIN\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eNot enough pages.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFILE_PAGES_EXCEED_MAX\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eToo many pages.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFILE_SIZE_EXCEEDS_LIMIT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe file size is too large. See description for details.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFOREIGN_RETURN_ADDRESS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe 'from' address must be a US address.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINCONSISTENT_PAGE_DIMENSIONS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAll pages of the input file must have the same dimensions.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_BANK_ACCOUNT\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe provided bank routing number is invalid.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_BANK_ACCOUNT_VERIFICATION\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eVerification amounts do not match.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_CHECK_INTERNATIONAL\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eChecks cannot be sent internationally.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_COUNTRY_COVID\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe postal service in the specified country is currently unable to process the request due to COVID-19 restrictions.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_FILE\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe file is invalid.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_FILE_DIMENSIONS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFile dimensions are incorrect for the selected mail type.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_FILE_DOWNLOAD_TIME\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eFile download from remote server took too long.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_FILE_URL\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe file URL when creating a resource is invalid.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_IMAGE_DPI\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eDPI must be at least 300.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_INTERNATIONAL_FEATURE\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe specified product cannot be sent to the destination.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_PERFORATION_RETURN_ENVELOPE\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eBoth `return_envelope` and `perforation` must be used together.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eINVALID_TEMPLATE_HTML\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe provided HTML is invalid.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eMERGE_VARIABLE_REQUIRED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA required merge variable is missing.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eMERGE_VARIABLE_WHITESPACE\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eMerge variable names cannot contain whitespace.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003ePDF_ENCRYPTED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn encrypted PDF was provided.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eSPECIAL_CHARACTERS_RESTRICTED\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eCannot use special characters for merge variable names.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003e422\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUNEMBEDDED_FONTS\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eThe provided PDF contains non-standard unembedded fonts. See description for details.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n  - name: Events\n    description: \u003e\n      When various notable things happen within the Lob architecture, Events\n      will be created. To get these events sent to your server\n\n      automatically when they occur, you can set up [Webhooks](#tag/Webhooks).\n\n\n      \u003ch3\u003ePostcards\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT TYPE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eLIVE-ONLY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eWHEN EVENT TYPE OCCURS\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard is successfully created (Lob returns a 200 status code).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.rendered_pdf\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard's PDF proof is successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.rendered_thumbnails\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard's thumbnails are successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.deleted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard is successfully canceled.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.mailed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard receives a \"Mailed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e. Only enabled for certain \u003ca href='https://dashboard.lob.com/#/settings/editions' target=\"_blank\"\u003ePrint \u0026 Mail Editions\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.in_transit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard receives an \"In Local Area\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.processed_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard receives a \"Processed for Delivery\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.re-routed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard receives a \"Re-Routed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epostcard.returned_to_sender\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA postcard receives a \"Returned to Sender\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eSelf Mailers\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT TYPE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eLIVE-ONLY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eWHEN EVENT TYPE OCCURS\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer is successfully created (Lob returns a 200 status code).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.rendered_pdf\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer's PDF proof is successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.rendered_thumbnails\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer's thumbnails are successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.deleted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer is successfully canceled.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.mailed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer receives a \"Mailed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e. Only enabled for certain \n          \u003ca href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\"\u003ePrint \u0026 Mail Editions\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.in_transit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer receives an \"In Local Area\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.processed_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer receives a \"Processed for Delivery\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.re-routed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer receives a \"Re-Routed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eself_mailer.returned_to_sender\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA self_mailer receives a \"Returned to Sender\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eLetters\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT TYPE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eLIVE-ONLY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eWHEN EVENT TYPE OCCURS\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter is successfully created (Lob returns a 200 status code).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.rendered_pdf\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter's PDF proof is successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.rendered_thumbnails\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter's thumbnails are successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.deleted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter is successfully canceled.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.mailed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter receives a \"Mailed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e. Only enabled for certain \n          \u003ca href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\"\u003ePrint \u0026 Mail Editions\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.in_transit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter receives an \"In Local Area\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.processed_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter receives a \"Processed for Delivery\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.re-routed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter receives a \"Re-Routed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.returned_to_sender\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA letter receives a \"Returned to Sender\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.mailed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives a \"Mailed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e. Only enabled for certain \n          \u003ca href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\"\u003ePrint \u0026 Mail Editions\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.in_transit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives an \"In Local Area\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.processed_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives a \"Processed for Delivery\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.re-routed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives a \"Re-Routed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.returned_to_sender\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives a \"Returned to Sender\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.delivered\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives a \"Delivered\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.pickup_available\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives a \"Pickup Available\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.certified.issue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA certified letter receives an \"Issue\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.return_envelope.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA return envelope is created (occurs simultaneously with letter creation).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.return_envelope.in_transit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA return envelope receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.return_envelope.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA return envelope receives an \"In Local Area\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.return_envelope.processed_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA return envelope receives a \"Processed for Delivery\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.return_envelope.re-routed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA return envelope receives a \"Re-Routed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eletter.return_envelope.returned_to_senders\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA return envelope receives a \"Returned to Sender\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eChecks\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT TYPE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eLIVE-ONLY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eWHEN EVENT TYPE OCCURS\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check is successfully created (Lob returns a 200 status code).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.rendered_pdf\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check's PDF proof is successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.rendered_thumbnails\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check's thumbnails are successfully rendered.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.deleted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check is successfully canceled.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.mailed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check receives a \"Mailed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e. Only enabled for certain \u003ca href=\"https://dashboard.lob.com/#/settings/editions\" target=\"_blank\"\u003ePrint \u0026 Mail Editions\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.in_transit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check receives an \"In Transit\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check receives an \"In Local Area\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.processed_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check receives a \"Processed for Delivery\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.re-routed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check receives a \"Re-Routed\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003echeck.returned_to_sender\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA check receives a \"Returned to Sender\" \u003ca href='#operation/tracking_event'\u003etracking event\u003c/a\u003e.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eAddresses\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT TYPE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eLIVE-ONLY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eWHEN EVENT TYPE OCCURS\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eaddress.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn address is successfully created (Lob returns a 200 status code).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eaddress.deleted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eAn address is successfully deleted.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eBank Accounts\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT TYPE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eLIVE-ONLY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eWHEN EVENT TYPE OCCURS\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ebank_account.created\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA bank account is successfully created (Lob returns a 200 status code).\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ebank_account.deleted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA bank account is successfully deleted.\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ebank_account.verified\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eA bank account is successfully verified.\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n  - name: Getting Started\n    x-traitTag: true\n    description: \u003e\n      ### 1. Get Setup\n\n      * Create an account at \u003ca href=\"https://dashboard.lob.com/#/register\"\n      target=\"_blank\"\u003eLob.com\u003c/a\u003e\n\n      * Obtain your API keys in the Lob dashboard \u003ca\n      href=\"https://dashboard.lob.com/settings/api-keys\"\n      target=\"_blank\"\u003esettings\u003c/a\u003e\n\n      * You'll use the format, `test_*.` for your Test API key and `live_*.` for\n      your Live API key.\n\n\n      ### 2. Explore\n\n      * Try out in Postman:\n\n      \u003cdiv class=\"postman-run-button\"\n\n      data-postman-action=\"collection/fork\"\n\n      data-postman-var-1=\"16169677-975ecb9f-ea22-4d8f-a4f9-53a42f2aee03\"\n\n      data-postman-collection-url=\"entityId=16169677-975ecb9f-ea22-4d8f-a4f9-53a42f2aee03\u0026entityType=collection\u0026workspaceId=5404d3a5-5a84-4df6-b078-a1547e1a68a7\"\n\n      style=\"background:#0099d7;color: white;display: flex;justify-content:\n      center;align-items: center;\"\u003e\n        Run in Postman\n      \u003c/div\u003e\n\n      \u003cscript type=\"text/javascript\"\u003e\n        (function (p,o,s,t,m,a,n) {\n          !p[s] \u0026\u0026 (p[s] = function () { (p[t] || (p[t] = [])).push(arguments); });\n          !o.getElementById(s+t) \u0026\u0026 o.getElementsByTagName(\"head\")[0].appendChild((\n            (n = o.createElement(\"script\")),\n            (n.id = s+t), (n.async = 1), (n.src = m), n\n          ));\n        }(window, document, \"_pm\", \"PostmanRunObject\", \"https://run.pstmn.io/button.js\"));\n      \u003c/script\u003e\n\n      * Launch your terminal and copy/paste a CURL command.\n\n      ```bash\n\n      curl https://api.lob.com/v1/addresses \\\n        -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n      ```\n\n      * Download a [Lob SDK](#tag/SDKs-and-Tools) into your favorite IDE\n      (integrated development environment)\n\n\n      ### 3. Learn more\n\n      Try our quick start (TypeScript, Python, PHP, Java or Ruby):\n\n      * \u003ca\n      href=\"https://help.lob.com/en_US/developer-documentation/developer-quickstart-guide\"\n      target=\"_blank\"\u003eSend your first Postcards\u003c/a\u003e\n\n\n      Use Case guides\n\n      * \u003ca href=\"https://help.lob.com/use-case-guides/massdeletion\"\n      target=\"_blank\"\u003eMass Deletion\u003c/a\u003e\n\n      * \u003ca href=\"https://help.lob.com/en_US/use-case-guides/ncoa-restrictions\"\n      target=\"_blank\"\u003eNCOALink Restrictions\u003c/a\u003e\n  - name: Intl Autocompletions\n    description: \u003e\n      Address autocompletion for non-US addresses. Given partial address\n      information, this endpoint returns up to 10 address suggestions.\n\n      ## Autocompletion Test Env\n\n      Your test API key does not autocomplete international addresses and is\n      used to simulate\n\n      behavior. With your test API key, requests with specific values for\n      `address_prefix`\n\n      return predetermined values. When `address_prefix` is set to:\n\n      - `0 suggestions` - Returns no suggestions\n\n      - `[PRIMARY NUMBER] s[uggestion]` - Returns a maximum of ten predefined\n      suggested addresses.\n        `[PRIMARY NUMBER]` does not have to be a valid primary number when sending a test request.\n        Each additional letter in `suggestion` reduces the number of suggestions by one (e.g.\n        `1 su` returns 9 suggested addresses). `[PRIMARY NUMBER]` does not affect the number of\n        suggestions returned.\n      Country is a required field.\n\n      City and state filters work as expected and filter the list of\n      predetermined suggested addresses.\n\n      See the `test` request \u0026 response examples under [Autocomplete\n      Examples](#operation/intl_autocompletions) within the \"Autocomplete\n\n      a partial address\" section in Intl Autocompletions.\n  - name: Intl Verifications\n    description: \u003e\n      Address verification for non-US addresses\n\n\n      ## Intl Verifications Test Env\n\n\n      When verifying international addresses, you'll likely want to test against\n\n      a wide array of addresses to ensure you're handling responses correctly.\n\n      With your test API key, requests that use specific values for\n      `primary_line`\n\n      let you explore the responses to many types of addresses:\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eDELIVERABILITY OF SAMPLE RESPONSE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eSET \u003ccode\u003eprimary_line\u003c/code\u003e TO\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003edeliverable\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable_missing_info\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003edeliverable missing info\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eundeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eundeliverable\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eno_match\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eno match\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      See the `test` request \u0026 response examples under [Intl Verification\n      Examples](#operation/intl_verification) within the\n\n      \"Verify an international address section\" in Intl Verifications.\n\n\n      You can rely on the response from these examples generally matching the\n      response\n\n      you'd see in the live environment with an address of that type (excluding\n      the `recipient` field).\n\n\n      The test API key does not perform any verification, automatic correction,\n      or standardization\n\n      for addresses. If you wish to try these features out, use our \u003ca\n      href=\"https://lob.com/address-verification\" target=\"_blank\"\u003elive demo\u003c/a\u003e\n\n      or the free plan (see \u003ca\n      href=\"https://lob.com/pricing/address-verification\" target=\"_blank\"\u003eour\n      pricing\u003c/a\u003e for details).\n  - name: Introduction\n    x-traitTag: true\n    description: \u003e\n      Lob’s Print \u0026 Mail and Address Verification APIs help companies transform\n      outdated,\n\n      manual print-and-mail processes; save 1,000s of hours in processing time\n      by sending mail much more\n\n      quickly; and increase ROI on offline communications.\n\n\n      Automate direct mail by triggering on-demand postcards, letters, and\n      checks directly from your\n\n      CRM or customer data systems.\n\n\n      Address Verification corrects, standardizes, and cleanses address data for\n      assured delivery with\n\n      instant verification across 240+ countries and territories.\n\n\n      Lob's print delivery network eliminates the hassle of vendor management\n      with automated\n\n      production and postage across a global network of vetted commercial\n      printers.\n\n\n      Tracking \u0026 Analytics gives you complete visibility of production and\n      delivery for each piece of\n\n      mail you send to meet compliance requirements and measure campaign\n      performance.\n  - name: Letters\n    description: \u003e\n      The letters endpoint allows you to easily print and mail letters. The API\n      provides endpoints for\n\n      creating letters, retrieving individual letters, canceling letters, and\n      retrieving a list of letters.\n  - name: Manage Mail\n    x-traitTag: true\n    description: \u003e\n      ## Cancellation Windows\n\n\n      By default, all new accounts have a 5 minute cancellation window for\n      postcards,\n\n      self mailers, letters, and checks. Within that timeframe, you can cancel\n\n      mailings from production, free of charge. Once the window has passed for a\n\n      postcard, self mailer, letter, or check, the mailing is no longer\n      cancelable.\n\n      In addition, certain customers can customize their cancellation windows by\n\n      product in their \u003ca href=\"https://dashboard.lob.com/#\"\n      target=\"_blank\"\u003eDashboard Settings\u003c/a\u003e. Upgrade to\n\n      the appropriate \u003ca href=\"https://dashboard.lob.com/#/settings/editions\"\n      target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e\n\n      to automatically gain access to this ability. For more details on this\n      feature,\n\n      check out our \u003ca\n      href=\"https://help.lob.com/print_mail/mail-send-settings#cancellation-windows\"\n      target=\"_blank\"\u003eCancellation Guide\u003c/a\u003e.\n\n\n      If you schedule a postcard, self mailer, letter, or check for up to 180\n      days\n\n      in the future by supplying the `send_date` parameter, that will override\n      any\n\n      cancellation window you may have for that product.\n\n\n      ## Scheduled Mailings\n\n\n      Postcards, self mailers, letters, and checks can be scheduled to be sent\n      up\n\n      to 180 days in advance. You can use this feature to:\n\n      - Create automated drip campaigns (e.g. send a postcard at 15, 30, and 60\n\n      days)\n\n      - Schedule recurring sends\n\n      - Plan your mailing schedule ahead of time\n\n\n      Up until the time a mailing is scheduled for, it can also be canceled.\n\n      If you use this feature in conjunction with [a cancellation window](\n\n      index.html#section/Cancellation-Windows), the `send_date` parameter will\n      always\n\n      take precedence.\n\n\n      For implementation details, see documentation below for each respective\n\n      endpoint. For more help, see our \u003ca\n      href=\"https://help.lob.com/print_mail/mail-send-settings#scheduling-mailings-for-a-future-date\"\n      target=\"_blank\"\u003eScheduled Mailings Guide\u003c/a\u003e.\n\n\n      This feature is exclusive to certain customers. Upgrade to the appropriate\n\n      \u003ca href=\"https://dashboard.lob.com/#/settings/editions\"\n      target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to\n\n      gain access.\n\n\n      ### Example Create Request using Send Date\n\n\n      ```bash\n        curl https://api.lob.com/v1/postcards \\\n          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n          -d \"description=Demo Future Postcard\" \\\n          -d \"to=adr_bae820679f3f536b\" \\\n          -d \"from=adr_210a8d4b0b76d77b\" \\\n          -d \"front=tmpl_b846a20859ae11a\" \\\n          -d \"back=tmpl_01b0d396a10c268\" \\\n          -d \"merge_variables[name]=Harry\" \\\n          -d \"send_date=2021-07-26\"\n      ```\n  - name: National Change of Address\n    x-traitTag: true\n    description: \u003e\n      National Change of Address Linkage (NCOALink) is a service offered by the\n      USPS, which allows individuals\n\n      or businesses who have recently moved to have any mail forwarded from\n      their previous address\n\n      to their new address.\n\n\n      As a CASS-certified Address Verification Provider, Lob also offers\n      NCOALink\n\n      functionality to our Print \u0026 Mail customers. With the Lob NCOALink feature\n      enabled, Postcards,\n\n      Letters, Checks and Addresses can automatically be corrected to reflect an\n      individual's or business's\n\n      new address in the case that they have moved (only if they have registered\n      for NCOALink with the USPS).\n\n\n      Due to privacy concerns and USPS constraints, for customers with NCOALink\n      enabled, our API responses\n\n      for a limited set of endpoints differ slightly in the case when an address\n      has been changed through NCOALink.\n\n\n      **NOTE**: This feature is exclusive to certain customers. Upgrade to the\n      appropriate \u003ca href='https://dashboard.lob.com/#/settings/editions'\n      target=\"_blank\"\u003ePrint \u0026 Mail Editions\u003c/a\u003e to gain access.\n\n\n      For more information, see our \u003ca\n      href=\"https://help.lob.com/print_mail/all-about-addresses#national-change-of-address-ncoa\"\n      target=\"_blank\"\u003eNCOALink guide\u003c/a\u003e.\n\n\n      ## NCOALink Live Environment\n\n      Though there are no changes to API requests, there are significant changes\n      to our API responses, but\n\n      only in the event that an address has been changed through NCOALink. If an\n      address has not been changed\n\n      through NCOALink, the response would be identical to our standard\n      responses, except the addition of a\n\n      `recipient_moved` field, which is `false` for unchanged addresses.\n\n\n      If an address has been changed through NCOALink, we are required to\n      suppress the following response\n\n      fields for that address:\n\n      - `address_line1`\n\n      - `address_line2`\n\n      - The +4 portion of the ZIP+4 (5-digit ZIP code will still be present)\n\n\n      See the `ncoa_us_live` example under [Response\n      samples](#operation/address_create) within the \"Create an Address\" section\n      in Addresses\n\n\n      ## NCOALink Test Environment\n\n\n      In addition to sending live requests, you may also want to simulate what\n      an NCOALink response might\n\n      look like so that you can ensure your application behaves as expected. The\n      behavior of NCOALink in\n\n      Lob's Test Environment is very similar to our [US Verifications Test\n      Mode](#section/US-Verifications-Test-Env).\n\n\n      To simulate an NCOALink request, send a POST request to any of the four\n      endpoints below with an `address_line1` field equal to `NCOA`:\n\n      - `POST /v1/addresses`\n\n      - `POST /v1/checks`\n\n      - `POST /v1/letters`\n\n      - `POST /v1/postcards`\n\n      - `POST /v1/self_mailers`\n\n\n      A static address will always be returned, as documented in the\n      `ncoa_us_test` example under [Response samples](#operation/address_create)\n      within the \"Create an Address\"\n\n      section in Addresses (along with the corresponding request under \"Request\n      samples\").\n  - name: Postcards\n    description: \u003e\n      The postcards endpoint allows you to easily print and mail postcards. The\n      API provides endpoints for creating postcards,\n\n      retrieving individual postcards, canceling postcards, and retrieving a\n      list of postcards.\n  - name: Rate Limiting\n    x-traitTag: true\n    description: \u003e-\n      To prevent misuse, we enforce a rate limit on an API Key and endpoint\n      basis, similar to the way many other APIs enforce rate limits. By default,\n      all accounts and their corresponding Test and Live API Keys have a rate\n      limit of 150 requests per 5 seconds per endpoint. The `POST\n      /v1/us_verifications` and `POST /v1/us_autocompletions` endpoints have a\n      limit of 300 requests per 5 seconds for all accounts.\n\n\n      When your application exceeds the rate limit for a given API endpoint, the\n      Lob API will return an HTTP 429 \"Too Many Requests\" response code instead\n      of the variety of codes you would find across the other API endpoints.\n\n\n      **HTTP Headers**\n\n\n      HTTP headers are returned on each request to a rate limited endpoint.\n      Ensure that you inspect these headers during your requests as they provide\n      relevant data on how many more requests your application is allowed to\n      make for the endpoint you just utilized.\n\n\n      While the headers are documented here in titlecase, HTTP headers are case\n      insensitive and certain libraries may transform them to lowercase. Please\n      inspect your headers carefully to see how they will be represented in your\n      chosen development scenario.\n\n      \u003ctable\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd\u003eX-Rate-Limit-Limit:\u003c/td\u003e\n            \u003ctd\u003ethe rate limit ceiling for a given request\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003eX-Rate-Limit-Remaining:\u003c/td\u003e\n            \u003ctd\u003ethe number of requests remaining in this window\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003eX-Rate-Limit-Reset:\u003c/td\u003e\n            \u003ctd\u003ethe time at which the rate limit window resets (in \u003ca  href=\"https://en.wikipedia.org/wiki/Unix_time\"  target=\"_blank\"\u003eUTC epoch seconds\u003c/a\u003e)\n          \u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n\n\n      ### Example HTTP Headers\n\n\n      ```bash\n        X-Rate-Limit-Limit:150\n        X-Rate-Limit-Remaining:100\n        X-Rate-Limit-Reset:1528749846\n      ```\n\n\n      ### Example Response\n\n\n      If you hit the rate limit on a given endpoint, this is the body of the\n      HTTP 429 message that you will see:\n\n\n      ```javascript\n        {\n          \"error\": {\n            \"message\": \"Rate limit exceeded. Please wait 5 seconds and try your request again.\",\n            \"code\": \"rate_limit_exceeded\",\n            \"status_code\": 429\n          }\n        }\n      ```\n  - name: Requests and Responses\n    x-traitTag: true\n    description: \u003e\n      ## Asset URLs\n\n\n      All asset URLs returned by the Lob API (postcards, letters, thumbnails,\n\n      etc) are signed links served over HTTPS. All links returned will expire in\n\n      30 days to prevent mis-sharing. Each time a GET request is initiated, a\n\n      new signed URL will be generated.\n\n\n      ## Idempotent Requests\n\n\n      Lob supports idempotency for safely retrying `POST` requests to create\n\n      postcards, self mailers, letters, and checks without accidentally creating\n\n      duplicates.\n\n\n      For example, if a request to create a check fails due to a network error,\n\n      you can safely retry the same request with the same idempotency key and\n\n      guarantee that only one check will ultimately be created and sent. When a\n\n      request is sent with an idempotency key for an already created resource,\n\n      the response object for the existing resource will be returned.\n\n\n      To perform an idempotent `POST` request to one of the mailpiece product\n\n      endpoints, provide an additional `Idempotency-Key` header or an\n      `idempotency_key`\n\n      query parameter to the request. If multiple idempotency keys are provided,\n\n      the request will fail. How you create unique keys is up to you, but we\n\n      suggest using random values, such as V4 UUIDs. Idempotency keys are\n      intended\n\n      to prevent issues over a short periods of time, therefore keys expire\n      after\n\n      24 hours. Keys are unique by mode (Test vs. Live) as well as by resource\n\n      (postcard vs. letter, etc.).\n\n\n      By default, all `GET` and `DELETE` requests are idempotent by nature, so\n\n      they do not require an additional idempotency key.\n\n\n      For more help integrating idempotency keys, refer to our\n\n      \u003ca\n      href=\"https://help.lob.com/print_mail/mail-send-settings#idempotent-requests\"\n      target=\"_blank\"\u003eimplementation guide\u003c/a\u003e.\n\n\n      **Headers**\n\n      \u003ctable\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd\u003eIdempotency-Key:\u003c/td\u003e\n            \u003ctd\u003e\n              optional\n              \u003cp style=\"color:#888;margin-top:0px;\"\u003e\n                \u003cfont size=\"-1\"\u003e\n                  A string of no longer than 256 characters\n                  that uniquely identifies this resource.\n                \u003c/font\u003e\n              \u003c/p\u003e\n            \u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n\n\n      **Query Parameters**\n\n      \u003ctable\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd\u003eidempotency-key:\u003c/td\u003e\n            \u003ctd\u003e\n              optional\n              \u003cp style=\"color:#888;margin-top:0px;\"\u003e\n                \u003cfont size=\"-1\"\u003e\n                  A string of no longer than 256 characters\n                  that uniquely identifies this resource.\n                \u003c/font\u003e\n              \u003c/p\u003e\n            \u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n\n\n\n      ### Example Request\n\n\n      ```bash\n        curl https://api.lob.com/v1/postcards \\\n          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n          -H \"Idempotency-Key: 026e7634-24d7-486c-a0bb-4a17fd0eebc5\" \\\n          -d \"to=adr_bae820679f3f536b\" \\\n          -d \"from=adr_210a8d4b0b76d77b\" \\\n          --data-urlencode \"front=\u003chtml style='margin: 130px; font-size: 50;'\u003eFront HTML for {{name}}\u003c/html\u003e\" \\\n          --data-urlencode \"back=\u003chtml style='margin: 130px; font-size: 50;'\u003eBack HTML\u003c/html\u003e\" \\\n          -d \"merge_variables[name]=Harry\"\n      ```\n\n\n      ## Metadata\n\n\n      When creating any Lob object, you can include a metadata object with up to\n      20 key-value pairs of\n\n      custom data. You can use metadata to store information like\n      `metadata[customer_id] = \"987654\"` or\n\n      `metadata[campaign] = \"NEWYORK2015\"`. This is especially useful for\n      filtering and matching to internal\n\n      systems.\n\n\n      Each metadata key must be less than 40 characters long and values must be\n      less than 500 characters.\n\n      Metadata does not support nested objects.\n\n\n      ### Example Create Request with Metadata\n\n\n      ```bash\n        curl https://api.lob.com/v1/postcards \\\n          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n          -d \"description=Demo Postcard job\" \\\n          -d \"metadata[campaign]=NEWYORK2015\" \\\n          -d \"to=adr_bae820679f3f536b\" \\\n          -d \"from=adr_210a8d4b0b76d77b\" \\\n          --data-urlencode \"front=\u003chtml style='margin: 130px; font-size: 50;'\u003eFront HTML for {{name}}\u003c/html\u003e\" \\\n          --data-urlencode \"back=\u003chtml style='margin: 130px; font-size: 50;'\u003eBack HTML\u003c/html\u003e\" \\\n          -d \"merge_variables[name]=Harry\"\n      ```\n\n\n      ### Example List Request with Metadata Filter\n\n\n      ```bash\n        curl -g \"https://api.lob.com/v1/postcards?metadata[campaign]=NEWYORK2015\u0026limit=2\" \\\n          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n      ```\n\n\n\n      ## Request Body\n\n\n      When manually sending a POST HTTP request directly to the Lob API, without\n\n      the use of a library, you may represent the body as either a Form URL\n\n      Encoded request, a JSON document, or a Multipart Form Data request.\n\n\n      However, if you're using one of our [SDKs](#tag/SDKs-and-Tools),\n\n      the generation of the request bodies is done for you automatically and you\n      don't\n\n      need to worry about the format.\n\n\n      ### Form URL Encoded\n\n\n      This request body encoding is accompanied with the\n\n      `Content-Type: application/x-www-form-urlencoded` header. The content is\n      an\n\n      example of what the [Verify a US\n      address](index.html#operation/us_verification)\n\n      endpoint accepts. An example of a request body encoded in this format\n      follows.\n\n\n\n      ```javascript\n        primary_line=210 King Street\u0026city=San Francisco\u0026state=CA\u0026zip_code=94107\n      ```\n\n\n      ### JSON\n\n\n      This request body encoding is accompanied with the `Content-Type:\n      application/json` header.\n\n      The content is an example of what the [Verify a US address\n      endpoint](index.html#operation/us_verification)\n\n      accepts. An example of a request body encoded in this format follows.\n\n\n\n      ```javascript\n        {\n          \"primary_line\": \"210 King Street\",\n          \"city\": \"San Francisco\",\n          \"state\": \"CA\",\n          \"zip_code\": \"94107\"\n        }\n      ```\n\n\n      ### Multipart Form Data\n\n\n      This request body encoding is accompanied with the `Content-Type:\n      multipart/form-data`\n\n      header. This is the only format that can be used for uploading a file to\n      the API. The\n\n      content is an example of what the [Create a\n      check](index.html#operation/check_create)\n\n      endpoint accepts. An example of a request body encoded in this format\n      follows.\n\n\n\n      ```javascript\n        --------------------------7015ebe79c0a5f8c\n        Content-Disposition: form-data; name=\"description\"\n\n        Demo Letter\n        --------------------------7015ebe79c0a5f8c\n        Content-Disposition: form-data; name=\"to\"\n\n        adr_bae820679f3f536b\n        --------------------------7015ebe79c0a5f8c\n        Content-Disposition: form-data; name=\"from\"\n\n        adr_210a8d4b0b76d77b\n        --------------------------7015ebe79c0a5f8c\n        Content-Disposition: form-data; name=\"file\"; filename=\"file.pdf\"\n        Content-Type: application/pdf\n\n        \u003cFILE CONTENT\u003e\n        --------------------------7015ebe79c0a5f8c\n        Content-Disposition: form-data; name=\"color\"\n\n        true\n        --------------------------7015ebe79c0a5f8c--\n      ```\n  - name: Reverse Geocode Lookups\n    description: \u003e\n      Find a list of zip codes associated with a valid US location via latitude\n      and longitude.\n  - name: SDKs and Tools\n    x-traitTag: true\n    description: \u003e\n      Please visit our \u003ca href=\"https://www.github.com/lob\"\n      target=\"_blank\"\u003eGithub\u003c/a\u003e for a list of our supported libraries.\n\n      - \u003ca href=\"https://github.com/lob/lob-typescript-sdk\"\n      target=\"_blank\"\u003eTypescript\u003c/a\u003e\n\n      - \u003ca href=\"https://github.com/lob/lob-php\" target=\"_blank\"\u003ePHP\u003c/a\u003e\n\n      - \u003ca href=\"https://github.com/lob/lob-python\" target=\"_blank\"\u003ePython\u003c/a\u003e\n\n      - \u003ca href=\"https://github.com/lob/lob-java\" target=\"_blank\"\u003eJava\u003c/a\u003e\n\n      - \u003ca href=\"https://github.com/lob/lob-ruby\" target=\"_blank\"\u003eRuby\u003c/a\u003e\n\n      - \u003ca href=\"https://github.com/lob/lob-elixir\" target=\"_blank\"\u003eElixir\u003c/a\u003e\n\n      - \u003ca href=\"https://github.com/lob/lob-node\" target=\"_blank\"\u003eNode.js\n      (legacy)\u003c/a\u003e\n  - name: Self Mailers\n    description: \u003e\n      The self mailer endpoint allows you to easily print and mail self mailers.\n      The API provides endpoints\n\n      for creating self mailers, retrieving individual self mailers, canceling\n      self mailers, and retrieving a list of self mailers.\n  - name: Template Design\n    x-traitTag: true\n    description: \u003e\n      ## HTML Templates\n\n      You can save commonly used HTML as templates within Lob to more easily\n      manage them. You can reference\n\n      your saved templates in postcard, letter, and check requests instead of\n      having to pass a long HTML\n\n      string on each request. Additionally, you can make changes to your HTML\n      templates and update them\n\n      independently, without having to touch your API integration. Templates can\n      be created, edited,\n\n      and viewed on your \u003ca href=\"https://dashboard.lob.com/#/templates\"\n      target=\"_blank\"\u003eDashboard\u003c/a\u003e. To use a template in a postcard,\n\n      letter, or check, see the documentation for each endpoint below. For help\n      using templates, check out our\n\n      \u003ca\n      href=\"https://help.lob.com/print_mail/dynamic-personalization#html-templates\"\n      target=\"_blank\"\u003eHTML Templates Guide\u003c/a\u003e or get started with a\n\n      \u003ca href=\"https://lob.com/template-gallery\" target=\"_blank\"\u003epre-designed\n      template from our gallery\u003c/a\u003e. In Live mode, you can only have\n\n      as many templates as allotted in your current\n\n      \u003ca href=\"https://dashboard.lob.com/#/settings/editions\"\n      target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e. There is no limit in Test mode.\n\n\n      If you'd like to interact with templates programmatically, check out our\n      Beta Program for API access\n\n      to the [HTML Templates Endpoints](#tag/Templates).\n\n\n      ### Example Create Request using HTML Templates\n\n      ```bash\n        curl https://api.lob.com/v1/postcards \\\n          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n          -d \"description=Demo Postcard job\" \\\n          -d \"to=adr_78c304d54912c502\" \\\n          -d \"from=adr_61a0865c8c573139\" \\\n          -d \"front=tmpl_b846a20859ae11a\" \\\n          -d \"back=tmpl_01b0d396a10c268\" \\\n          -d \"merge_variables[name]=Harry\"\n      ```\n\n\n      ## HTML Examples\n\n      Use a pre-designed template from our \u003ca\n      href=\"https://lob.com/resources/template-gallery\"\n      target=\"_blank\"\u003egallery\u003c/a\u003e or follow these\n\n      basic \u003ca href=\"https://github.com/lob/examples\"\n      target=\"_blank\"\u003eguidelines\u003c/a\u003e as starting points for creating custom\n      Postcards,\n\n      Self Mailers, Letters, and Checks.\n\n\n      Please follow the standards used in these templates, such as:\n\n      - For any linked assets, you must use a performant file hosting provider\n      with no rate limits such as Amazon\n\n      S3.\n\n      - Use inline styles or an internal stylesheet, do not link to external\n      stylesheets.\n\n      - Link to images that are 300DPI and sized at the final desired size on\n      the physical mailing. For example,\n\n      for a photo that is desired to be 1in x 1in on the final postcard, the\n      image asset should be sized at 1in\n\n      x 1in at 300DPI (which equates to 300px by 300px).\n\n      - The sum of all linked assets should not exceed 5MB in file size.\n\n      - Use `-webkit` prefixes for CSS properties when recommended \u003ca\n      href=\"http://shouldiprefix.com/\" target=\"_blank\"\u003ehere\u003c/a\u003e.\n\n\n      Because different browsers have varying user-agent styles, the HTML you\n      see in your browser will not\n\n      always look identical to what is produced through the API. It is\n      **strongly** recommended that you test all\n\n      HTML requests by reviewing the final PDF files in your Test Environment,\n      as these are the files that will be\n\n      printed.\n\n\n      ## Image Prepping\n\n      Currently we support the following file types for all endpoints:\n\n      - PDF\n\n      - PNG\n\n      - JPEG\n\n\n      **Templates**\n\n\n      You can find pre-made templates that already adhere to all of these\n      guidelines here:\n\n      - [Postcards](#tag/Postcards)\n\n      - [Letters](#tag/Letters)\n\n      - [Checks](#tag/Checks)\n\n      - [Self Mailers](#tag/Self-Mailers)\n\n\n      **Prepping All Images**\n\n\n      The following guidelines apply to image types:\n\n      - Images should be 300 dpi or higher - PNG/JPEG files with less than 300\n      dpi will be rejected.\n\n      - Your artwork should include a 1/8\" border around the final trim size.\n      This means your final file size will be a total of 0.25\" larger than your\n      expected printed piece (ie, a 4\"x6\" postcard should be submitted as\n      4.25\"x6.25\"). There is no need to include crop marks in your submitted\n      content.\n\n      - Include a safe zone – make sure no critical elements are within 1/8\"\n      from the edge of the final size.\n\n      - Do not include any additional postage marks or indicia.\n\n      - File sizes should be no larger than 5MB.\n\n\n      **Prepping PDFs**\n\n\n      To ensure that you are producing PDF's correctly please follow the\n      guidelines below:\n\n      - [Make sure all non-standard fonts are\n      embedded.](#section/Standard-PDF-Fonts)\n\n      - Generated PDF's need to be be PDF/A compliant.\n\n\n      **Prepping PNGs/JPEGs**\n\n\n      To ensure that you are producing PNG's/JPEG's correctly please follow the\n      guidelines below:\n\n\n      - Minimum 300 dpi. The dpi is calculated as (width of image in pixels) /\n      (width of product in inches) and (length of image in pixels) / (length of\n      product in inches). For Example: 1275px x 1875px image used to create a\n      4.25\" x 6.25\" postcard has a dpi of 300.\n\n      - Submitted images must have the same length to width ratio as the chosen\n      product. Images will not be cropped or stretched by the API.\n\n\n      ## Standard PDF Fonts\n\n      Ideally, all fonts in provided PDFs should be embedded. Embedding a font\n      in a PDF ensures that the final\n\n      printed product will look as it was designed. Fonts can vary greatly in\n      size and shape, even within the\n\n      same family. If the exact font that was used to design the artwork is not\n      used to print, the look and\n\n      placement of the text is not guaranteed to be the same.\n\n\n      In general, requests that provide PDFs with un-embedded fonts will be\n      rejected. We make an exception for\n\n      \"standard fonts\", a set of fonts that we have identified as being common.\n      PDFs that contain un-embedded\n\n      fonts that are found in the list, and match the accepted \u003ca\n      href=\"https://en.wikipedia.org/wiki/Category:Font_formats\"\n      target=\"_blank\"\u003efont type\u003c/a\u003e\n\n      will be accepted. Otherwise, the request will be rejected.\n\n\n      Font embedding is an essential part of standard PDF workflows. Fonts\n      should be embedded automatically by\n\n      PDF editing software that are compliant with PDF standards.\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eFONT NAME\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eTYPES\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1, TrueType, CID TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial,Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1, TrueType, CID TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial,BoldItalic\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1, TrueType, CID TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial,Italic\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType, CID TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArialMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType, CID TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial-BoldMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial-BoldItalicMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArial-ItalicMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArialNarrow\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eArialNarrow-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCalibri\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCalibri-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCalibri-Italic\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCandara-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourier\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourier-Oblique\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourier-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourier-BoldOblique\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourierNewPSMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourierNewPS-ItalicMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eCourierNewPS-BoldMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eHelvetica\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eHelvetica-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eHelvetica-BoldOblique\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eHelvetica-Oblique\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eLucidaConsole\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eMsSansSerif\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eMsSansSerif,Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eSymbol\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1, TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTahoma\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTahoma-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimes-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimes-BoldItalic\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimes-Italic\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimes-Roman\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimesNewRomanPS-BoldItalicMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimesNewRomanPS-BoldMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimesNewRomanPS-ItalicMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimesNewRomanPSMT\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType, CID TrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTimesNewRomanPSMT,Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eTrebuchetMS\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eVerdana\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eVerdana-Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eVerdana,Bold\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eVerdana,Italic\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eTrueType\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eZapfDingbats\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eType 1\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n  - name: Template Versions\n    description: \u003e\n      These API endpoints allow you to create, retrieve, update and delete\n      versions of reusable HTML templates for use with the Print \u0026 Mail API.\n  - name: Templates\n    description: \u003e\n      These API endpoints allow you to create, retrieve, update and delete\n      reusable HTML templates for use with the Print \u0026 Mail API.\n  - name: Test and Live Environments\n    x-traitTag: true\n    description: \u003e\n      To make the API as explorable as possible, accounts have test and live\n\n      environment API keys. You're not charged any fees in the test environment,\n\n      so we encourage you to use it to try out services, perform quality\n\n      assurance, and run automated testing. Objects―addresses, letters, checks,\n\n      etc―in one environment cannot be manipulated by objects in the other.\n\n\n      In general, a payment method (either credit card or ACH account) must be\n\n      added to your account to make live API requests. However, a payment method\n\n      is not required for the first 300 live requests per month to the\n\n      `/v1/us_verifications` endpoint. After the first 300 requests, you will\n\n      begin receiving errors with status code `403`.\n\n\n      Requests made in the test environment always validate request arguments,\n\n      simulate live environment behavior, and enforce rate limits. _They never\n\n      print, mail nor, for verification services, verify addresses._ The US \u0026\n\n      International verification services trigger behavior with specific\n\n      argument values, and, if you plan on using those, we recommend reading\n\n      [US Verification Test Environment](#tag/US-Verifications-Test-Environment)\n\n      and [Intl Verification Test\n      Environment](#tag/Intl-Verifications-Test-Environment).\n\n\n      To switch between environments, use the appropriate key for that\n\n      environment when performing a request. You can find each environment's API\n\n      key in your dashboard under Settings; test API keys are always prefixed\n\n      with `test_` and production API keys with `live_`.\n  - name: Tracking Events\n    description: \u003e\n      As mailpieces travel through the mail stream, USPS scans their unique\n      barcodes, and Lob processes these mail scans to generate tracking events.\n\n\n      \u003ch3\u003eCertified Tracking Event Details\u003c/h3\u003e\n\n\n      Letters sent with USPS Certified Mail are fully tracked by USPS, and\n\n      therefore their [tracking events](#operation/tracking_event) have an\n\n      additional `details` object with more detailed information about the\n\n      tracking event. The following table shows the potential values for\n\n      the fields in the `details` object mapped to the tracking event `name`.\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eNAME\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eEVENT\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eDESCRIPTION\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eACTION REQUIRED\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eMailed\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_accepted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been accepted into the carrier network for delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIn Transit\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_arrived\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has arrived at an intermediate location in the carrier network.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIn Transit\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_departed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has departed from an intermediate location in the carrier network.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIn Transit\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_processing\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is processing at an intermediate location in the carrier network.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIn Transit\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_processed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been processed at an intermediate location.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIn Local Area\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_in_local_area\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is at a location near the end destination.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eProcessed For Delivery\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edelivery_scheduled\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is scheduled for delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eProcessed For Delivery\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eout_for_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is out for delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003ePickup Available\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epickup_available\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is available for pickup at carrier location.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eDelivered\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edelivered\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been delivered.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eRe-Routed\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_forwarded\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been forwarded.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eReturned to Sender\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ereturned_to_sender\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is to be returned to sender.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eaddress_issue\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eAddress information is incorrect. Contact carrier to ensure delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003econtact_carrier\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eContact the carrier for more information.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edelayed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eDelivery of package is delayed.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edelivery_attempted\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eDelivery of package has been attempted. Contact carrier to ensure delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edelivery_rescheduled\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eDelivery of package has been rescheduled.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003elocation_inaccessible\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eDelivery location inaccessible to carrier. Contact carrier to ensure delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003enotice_left\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eCarrier left notice during attempted delivery. Follow carrier instructions on notice.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_damaged\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been damaged. Contact carrier for more details.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_disposed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been disposed.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_held\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage held at carrier location. Contact carrier for more details.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_lost\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage has been lost. Contact carrier for more details.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_unclaimed\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is unclaimed.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epackage_undeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003ePackage is not able to be delivered.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ereschedule_delivery\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eContact carrier to reschedule delivery.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eIssue\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eother\u003c/code\u003e\u003c/td\u003e\n          \u003ctd\u003eUnrecognized carrier status.\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n  - name: US Autocompletions\n    description: \u003e\n      Given partial address information, this endpoint returns up to 10 address\n      suggestions.\n\n      ## Autocompletion Test Env\n\n      Your test API key does not autocomplete US addresses and is used to\n      simulate behavior. With your test API key, requests with specific values\n      for `address_prefix` return predetermined values. When `address_prefix` is\n      set to:\n\n      - `0 suggestions` - Returns no suggestions - `[PRIMARY NUMBER]\n      s[uggestion]` - Returns a maximum of ten predefined suggested addresses.\n        `[PRIMARY NUMBER]` does not have to be a valid primary number when sending a test request.\n        Each additional letter in `suggestion` reduces the number of suggestions by one (e.g.\n        `1 su` returns 9 suggested addresses). `[PRIMARY NUMBER]` does not affect the number of\n        suggestions returned.\n\n      City and state filters work as expected and filter the list of\n      predetermined suggested addresses.\n\n      See the `test` request \u0026 response examples under [Autocomplete\n      Examples](#operation/autocompletion) within the \"Autocomplete a partial\n      address\" section in US Autocompletions.\n  - name: US Verification Types\n    x-traitTag: true\n    description: \u003e\n      These are detailed definitions for various fields in the [US verification\n      object](#operation/us_verification).\n\n\n      \u003ch3\u003eZIP Code Types - \u003ccode\u003ecomponents[zip_code_type]\u003c/code\u003e\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003estandard\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe default ZIP code type. Used when none of the other types apply.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003epo_box\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe ZIP code contains only PO Boxes.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eunique\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe ZIP code is uniquely assigned to a single organization (such as a government agency) that receives a large volume of mail.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003emilitary\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe ZIP code contains military addresses.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ci\u003eempty string\u003c/i\u003e\u003c/td\u003e\n            \u003ctd\u003eA match could not be made with the provided inputs.\u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eRecord Types - \u003ccode\u003ecomponents[record_type]\u003c/code\u003e\u003c/h3\u003e\n\n\n      \u003ctable\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003estreet\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe default address type.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003ehighrise\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is a commercial building, apartment complex, highrise, etc.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003efirm\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is of an organizational entity which receives a minimum number of mailpieces per day.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003epo_box\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is a PO Box.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003erural_route\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address exists on a Rural Route. This is an older system of mail delivery which is still used in some parts of the country.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003egeneral_delivery\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is part of the USPS General Delivery service, which allows individuals without permanent addresses to receive mail.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ci\u003eempty string\u003c/i\u003e\u003c/td\u003e\n            \u003ctd\u003eA match could not be made with the provided inputs.\u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eCarrier Route Types - \u003ccode\u003ecomponents[carrier_route_type]\u003c/code\u003e\u003c/h3\u003e\n\n\n      \u003ctable class=\"table-docs table-docs-code\"\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003ecity_delivery\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe default carrier route type. Used when none of the other types apply.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003erural_route\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe carrier route is a Rural Route. This is an older system of mail delivery which is still used in some parts of the country.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003ehighway_contract\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe carrier route is a Highway Contract Route. This is an older system of mail delivery which is still used in some parts of the country.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003epo_box\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe carrier route consists of PO Boxes.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003egeneral_delivery\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe carrier route is part of the USPS General Delivery service, which allows individuals without permanent addresses to receive mail.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ci\u003eempty string\u003c/i\u003e\u003c/td\u003e\n            \u003ctd\u003eA match could not be made with the provided inputs.\u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n\n\n      \u003ch3\u003eDPV Footnotes -\n      \u003ccode\u003edeliverability_analysis[dpv_footnotes]\u003c/code\u003e\u003c/h3\u003e\n\n\n      \u003ctable class=\"table-docs table-docs-code\"\u003e\n        \u003ctbody\u003e\n          \u003ctr\u003e\n            \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eAA\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eSome parts of the address (such as the street and ZIP code) are valid.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eA1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is invalid based on given inputs.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eBB\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is deliverable.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eCC\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is deliverable by removing the provided secondary unit designator.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eN1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is deliverable but is missing a secondary information (apartment, unit, etc).\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eF1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is a deliverable military address.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eG1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is a deliverable General Delivery address. General Delivery is a USPS service which allows individuals without permanent addresses to receive mail.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eU1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address is a deliverable unique address. A unique ZIP code is assigned to a single organization (such as a government agency) that receives a large volume of mail.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eM1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe primary number is missing.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eM3\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe primary number is invalid.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eP1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003ePO Box, Rural Route, or Highway Contract box number is missing.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eP3\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003ePO Box, Rural Route, or Highway Contract box number is invalid.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eR1\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address matched to a \u003ca href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\"\u003eCMRA\u003c/a\u003e and private mailbox information is not present.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eR7\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address matched to a Phantom Carrier Route (\u003ccode\u003ecarrier_route\u003c/code\u003e of \u003ccode\u003eR777\u003c/code\u003e), which corresponds to physical addresses that are not eligible for delivery.\u003c/td\u003e\n          \u003c/tr\u003e\n          \u003ctr\u003e\n            \u003ctd\u003e\u003ccode\u003eRR\u003c/code\u003e\u003c/td\u003e\n            \u003ctd\u003eThe address matched to a \u003ca href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\" target=\"_blank\"\u003eCMRA\u003c/a\u003e and private mailbox information is present.\u003c/td\u003e\n          \u003c/tr\u003e\n        \u003c/tbody\u003e\n      \u003c/table\u003e\n  - name: US Verifications\n    description: \u003e\n      Validate, automatically correct, and standardize the addresses in your\n\n      address book based on USPS's \u003ca\n      href=\"https://postalpro.usps.com/certifications/cass\"\n      target=\"_blank\"\u003eCoding Accuracy Support System (CASS)\u003c/a\u003e.\n\n\n      ## US Verifications Test Env\n\n\n      When verifying US addresses, you'll likely want to test against a wide\n      array of addresses to\n\n      ensure you're handling responses correctly. With your test API key,\n      requests that use specific\n\n      values for `address` or `primary_line` and (if using `primary_line`) an\n      arbitrary five digit\n\n      number for `zip_code` (e.g. \"11111\") let you explore the responses to many\n      types of addresses:\n\n\n      \u003ctable\u003e\n        \u003ctr\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eADDRESS TYPE FOR SAMPLE RESPONSE\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eDELIVERABILITY\u003c/th\u003e\n          \u003cth style=\"white-space: nowrap\"\u003eSET \u003ccode\u003eprimary_line\u003c/code\u003e OR \u003ccode\u003eaddress\u003c/code\u003e TO\u003c/th\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eCommercial highrise\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003ecommercial highrise\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eResidential highrise\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eresidential highrise\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eResidential house\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eresidential house\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003ePO Box\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epo box\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eRural route\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003erural route\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003ePuerty Rico address w/ urbanization\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003epuerto rico\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eMilitary address\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003emilitary\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eDepartment of state\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edepartment of state\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eGeneric deliverable\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eMissing a suite number\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable_missing_unit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003emissing unit\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eSuite number doesn't exist\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable_incorrect_unit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eincorrect unit\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eResidential house with unnecessary suite number\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003edeliverable_unnecessary_unit\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eunnecessary unit\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUndeliverable and block matched\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eundeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eundeliverable block match\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n        \u003ctr\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003eUndeliverable and no block matched\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eundeliverable\u003c/code\u003e\u003c/td\u003e\n          \u003ctd style=\"white-space: nowrap\"\u003e\u003ccode\u003eundeliverable no match\u003c/code\u003e\u003c/td\u003e\n        \u003c/tr\u003e\n      \u003c/table\u003e\n\n\n      See the `test` request \u0026 response examples under [US Verification\n      Examples](#operation/us_verification) within the\n\n      \"Verify a US or US territory address\" section in US Verifications.\n\n\n      You can rely on the response from these examples generally matching the\n      response you'd see in the live environment with an\n\n      address of that type (excluding the `recipient` field).\n\n\n      The test API key does not perform any verification, automatic correction,\n      or standardization for addresses. If you wish to\n\n      try these features out, use our \u003ca\n      href=\"https://lob.com/address-verification\" target=\"_blank\"\u003elive demo\u003c/a\u003e\n      or the free plan (see \u003ca\n      href=\"https://lob.com/pricing/address-verification\" target=\"_blank\"\u003eour\n      pricing\u003c/a\u003e for details).\n  - name: Versioning and Changelog\n    x-traitTag: true\n    description: \u003e\n      ### API Versioning\n\n\n      When backwards-incompatible changes are made to the API, a new dated\n      version\n\n      is released. The latest version of the API is version **2020-02-11**. You\n      can\n\n      view your version and upgrade to the latest version in your\n\n      \u003ca href=\"https://dashboard.lob.com/settings/api-keys\"\n      target=\"_blank\"\u003eDashboard Settings\u003c/a\u003e. You will\n\n      only need to specify a version if you would like to test a newer version\n      of\n\n      the API without doing a full upgrade. The API will return an error if a\n\n      version older than your current one is passed in. See\n\n      [API Changelog](#tag/Versioning-and-Changelog) for a full list of breaking\n      changes.\n\n\n      ### Example Request\n\n\n      ```bash\n        curl https://api.lob.com/v1/addresses \\\n          -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n          -H \"Lob-Version: 2020-02-11\"\n      ```\n\n\n      ### Specification Versioning\n\n      You might be wondering why our API and specification use different\n      versioning schemes.\n\n      Lob's API predates our specification and follows the \u003ca\n      href=\"https://stripe.com/blog/api-versioning\" target=\"_blank\"\u003eStripe\n      versioning\u003c/a\u003e\n\n      approach. This works well to manage backwards-incompatible changes to our\n      API.\n\n\n      For our API specification (used to create this documentation), we've\n      chosen \u003ca href=\"https://semver.org/\" target=\"_blank\"\u003esemantic\n\n      versioning\u003c/a\u003e. This versioning reflects the backward-compatible\n\n      changes that do not require a versioning of Lob's API.\n\n\n      Lob's API specification will be used to generate artifacts like\n      documentation, client SDKs,\n\n      and other developer tooling. Semantic versioning of our specification will\n      inform how we\n\n      version those artifacts like SDKs. It is helpful to know the version of a\n      specification\n\n      used to produce an artifact in order reference the specification release\n      notes.\n\n\n\n      ### Changelog\n\n\n      **2020-02-11**\n\n      - renders merge_variables into HTML with syntax that supports objects,\n      conditionals, and loops\n\n\n      **2019-06-01**\n\n      - changed pagination model of GET endpoints for postcards, letters,\n      checks, addresses, bank accounts, templates, and template versions to a\n      cursor-based model\n\n      - offset parameter on these endpoints has been removed\n\n      - previous_url and next_url response fields have been added\n\n\n      **2018-06-05**\n\n      - remove rate-limit headers\n\n\n      **2018-03-30**\n\n      - updated letter template which includes a white box behind the address\n      block area to ensure deliverability\n\n\n      **2018-03-01**\n\n      - US verification deliverability value no_match deprecated and merged into\n      undeliverable\n\n      - US verification deliverability value deliverable_extra_secondary is\n      split into deliverable_unnecessary_unit and deliverable_incorrect_unit\n\n      - US verification deliverability value deliverable_missing_secondary\n      renamed to deliverable_missing_unit\n\n      - US verifications zip_code special values deprecated in favor of more\n      comprehensive primary_line special values\n\n\n      **2018-02-08**\n\n      - enforce 50 character limit on the sum of address_line1 and address_line2\n      for check recipients\n\n\n      **2017-11-08**\n\n      - split extra_secondary_information into extra_secondary_designator and\n      extra_secondary_number for /v1/us_verifications\n\n\n      **2017-10-17**\n\n      - remove support for the /v1/states endpoint\n\n      - remove support for the /v1/countries endpoint\n\n      - remove support for the message field from the POST /v1/postcards\n      endpoint\n\n\n      **2017-09-08**\n\n      - renames input parameters and restructures response object for\n      /v1/intl_verifications\n\n\n      **2017-08-14**\n\n      - automatically standardizes and corrects US addresses created via POST\n      /v1/addresses. non-US addresses will be standardized into uppercase only.\n\n      - automatically standardizes and corrects inline US addresses used in POST\n      /v1/postcards, POST /v1/letters, and POST /v1/checks. non-US addresses\n      will be standardized into uppercase only.\n\n      - enforce 40 character limit on name and company for all addresses\n\n      - enforce 64 character limit on address_line1 and address_line2 for US\n      addresses\n\n\n      **2017-06-16**\n\n      - enforce 10,000 character limit on HTML strings\n\n      - rename data parameter for all products to merge_variables\n\n\n      **2017-05-17**\n\n      - discontinues the /v1/verify endpoint - please use /v1/us_verifications\n      or /v1/intl_verifications instead\n\n\n      **2016-06-30** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - unnest tracking object from postcard, letter, and check response objects\n\n\n      **2016-05-02** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - adds address_placement parameter to letters that defaults to\n      top_first_page, template is no longer allowed\n\n\n      **2016-03-21** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - removes tracking numbers that do not provide any consumer-facing\n      tracking information\n\n      - removes link from tracking responses\n\n      - requires account_type when creating a bank account\n\n\n      **2016-01-19** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - renames the count parameter to limit for all list endpoints\n\n      - removes the next_url and previous_url from list responses\n\n\n      **2015-12-22** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - adds size parameter to postcards that defaults to 4x6, setting is no\n      longer allowed\n\n\n      **2015-11-23** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - remove price from letters\n\n      - remove pages from letters\n\n      - remove price from postcards\n\n      - renamed file parameter to check_bottom for checks\n\n\n      **2015-11-06** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - remove bank_address from bank_accounts\n\n      - remove account_address from bank_accounts and add from to checks\n\n      - remove price from checks\n\n\n      **2015-10-21** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - use the new HTML renderer for all products\n\n\n      **2015-06-25** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - remove the status field from all endpoints\n\n\n      **2015-04-11** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - errors on all endpoints are now single objects instead of arrays\n\n      - full_bleed is no longer allowed for postcards, objects, and area mails -\n      all products are now full_bleed by default\n\n      - template is no longer allowed for postcards - all postcards must adhere\n      to the template\n\n      - name is no longer allowed for area mails, bank accounts, checks, jobs,\n      objects, and postcards - it has been replaced by description\n\n      - setting ID's 100 and 101 are no longer supported for objects - please\n      use the Simple Letter Service instead\n\n      - service is no longer supported for jobs\n\n      - all boolean parameters now return true/false instead of 1/0\n\n      - double_sided is no longer allowed for objects - all products are default\n      double sided if more than one page is allowed\n\n      - template is no longer allowed for objects\n\n\n      **2014-12-18** \u003cspan style=\"background: #ebf2fb;color:\n      #1878e0;text-transform: none;letter-spacing: 1px;font-weight:\n      500;border-radius: 100px;padding: 6px 16px;font-size:\n      14px;\"\u003eSunsetted\u003c/span\u003e\n\n      - removed concept of packaging\n\n      - signatory is now a required field when creating a bank account\n\n      - bank_code is no longer an allowed field when creating a bank account\n\n      - service_id parameter replaced by service parameter in /jobs\n\n      - setting_id parameter replaced by setting parameter in /objects\n  - name: Webhooks\n    x-traitTag: true\n    description: \u003e\n      Webhooks are an easy way to get notifications on events happening\n      asynchronously\n\n      within Lob's architecture. For example, when a postcard gets a \"Processed\n      For\n\n      Delivery\" tracking event, an event object of type\n      `postcard.processed_for_delivery`\n\n      will be created. If you are subscribed to that event type in that\n      Environment\n\n      (Test vs. Live), Lob will send that event to any URLs you've specified via\n      an\n\n      HTTP POST request. In Live mode, you can only have as many webhooks as\n      allotted\n\n      in your current \u003ca href=\"https://dashboard.lob.com/#/settings/editions\"\n      target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e.\n\n      There is no limit in Test mode.\n\n      You can view and create \u003ca href=\"https://dashboard.lob.com/#/webhooks\"\n      target=\"_blank\"\u003ewebhooks\u003c/a\u003e on the\n\n      Lob Dashboard, as well as view your \u003ca\n      href=\"https://dashboard.lob.com/#/events\" target=\"_blank\"\u003eevents\u003c/a\u003e.\n\n      See our \u003ca\n      href=\"https://help.lob.com/print_mail/webhooks-for-tracking-events\"\n      target=\"_blank\"\u003eWebhooks Integration Guide\u003c/a\u003e for more\n\n      details on how to integrate. Please see the full list of event types\n      available for\n\n      subscription here.\n  - name: Zip Lookups\n    description: \u003e\n      Find a list of cities, states and associated information about a US ZIP\n      code.\nx-tagGroups:\n  - name: Overview\n    tags:\n      - Introduction\n      - Authentication\n      - Getting Started\n      - SDKs and Tools\n  - name: Address Book\n    tags:\n      - Addresses\n      - National Change of Address\n  - name: Print and Mail API\n    tags:\n      - Postcards\n      - Self Mailers\n      - Letters\n      - Checks\n      - Bank Accounts\n      - Templates\n      - Template Versions\n      - Template Design\n      - Manage Mail\n  - name: Address Verification API\n    tags:\n      - US Verifications\n      - US Verification Types\n      - US Autocompletions\n      - Reverse Geocode Lookups\n      - Zip Lookups\n      - Intl Autocompletions\n      - Intl Verifications\n  - name: Webhooks\n    tags:\n      - Webhooks\n      - Events\n      - Tracking Events\n  - name: Special Features\n    tags:\n      - Billing Groups\n      - Cards\n      - Card Orders\n  - name: Appendix\n    tags:\n      - Beta Program\n      - Errors\n      - Rate Limiting\n      - Requests and Responses\n      - Test and Live Environments\n      - Versioning and Changelog\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n  parameters:\n    limit:\n      in: query\n      name: limit\n      required: false\n      description: How many results to return.\n      schema:\n        type: integer\n        minimum: 1\n        default: 10\n        maximum: 100\n        example: 10\n    before_after:\n      in: query\n      name: before/after\n      required: false\n      description: \u003e\n        `before` and `after` are both optional but only one of them can be in\n        the query at a time.\n      schema:\n        allOf:\n          - type: object\n            properties:\n              before:\n                type: string\n                description: \u003e\n                  A reference to a list entry used for paginating to the\n                  previous set of entries. This field is pre-populated in the\n                  `previous_url` field in the return response.\n              after:\n                type: string\n                description: \u003e\n                  A reference to a list entry used for paginating to the next\n                  set of entries. This field is pre-populated in the `next_url`\n                  field in the return response.\n          - oneOf:\n              - required:\n                  - before\n              - required:\n                  - after\n    include:\n      in: query\n      name: include\n      description: \u003e\n        Request that the response include the total count by specifying\n        `include=[\"total_count\"]`.\n      schema:\n        type: array\n        items:\n          type: string\n      explode: true\n    date_created:\n      in: query\n      name: date_created\n      description: Filter by date created.\n      schema:\n        $ref: '#/components/schemas/date_filter'\n      style: deepObject\n      explode: true\n    metadata:\n      in: query\n      name: metadata\n      description: Filter by metadata key-value pair`.\n      schema:\n        $ref: '#/components/schemas/metadata'\n      style: deepObject\n      explode: true\n    offset:\n      in: query\n      name: offset\n      required: false\n      description: \u003e-\n        An integer that designates the offset at which to begin returning\n        results. Defaults to 0.\n      schema:\n        type: integer\n        default: 0\n    date_modified:\n      in: query\n      name: date_modified\n      description: Filter by date modified.\n      schema:\n        $ref: '#/components/schemas/date_filter'\n      style: deepObject\n      explode: true\n    sort_by:\n      in: query\n      name: sort_by\n      description: \u003e\n        Sorts items by ascending or descending dates. Use either `date_created`\n        or `send_date`, not both.\n      schema:\n        allOf:\n          - type: object\n            properties:\n              date_created:\n                type: string\n                enum:\n                  - asc\n                  - desc\n              send_date:\n                type: string\n                enum:\n                  - asc\n                  - desc\n          - oneOf:\n              - required:\n                  - date_created\n              - required:\n                  - send_date\n    scheduled:\n      in: query\n      name: scheduled\n      description: \u003e\n        * `true` - only return orders (past or future) where `send_date` is\n\n        greater than `date_created`\n\n        * `false` - only return orders where `send_date` is equal to\n        `date_created`\n      schema:\n        type: boolean\n    send_date:\n      in: query\n      name: send_date\n      description: \u003e\n        Filter by ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\":\n        \"2012-01-31T12:34:56Z\" }` where `gt` is \u003e, `lt` is \u003c, `gte` is ≥, and\n        `lte` is ≤.\n      schema:\n        $ref: '#/components/schemas/send_date'\n    mail_type:\n      in: query\n      name: mail_type\n      description: \u003e\n        A string designating the mail postage type: * `usps_first_class` -\n        (default) * `usps_standard` - a \u003ca\n        href=\"https://lob.com/pricing/print-mail#compare\"\n        target=\"_blank\"\u003echeaper option\u003c/a\u003e which is less predictable and takes\n        longer to deliver. `usps_standard` cannot be used with `4x6` postcards\n        or for any postcards sent outside of the United States.\n      schema:\n        $ref: '#/components/schemas/mail_type'\n    idem-header:\n      in: header\n      name: Idempotency-Key\n      required: false\n      description: \u003e\n        A string of no longer than 256 characters that uniquely identifies this\n        resource. For more help integrating idempotency keys, refer to our \u003ca\n        href=\"https://help.lob.com/print_mail/mail-send-settings#idempotent-requests\"\n        target=\"_blank\"\u003eimplementation guide\u003c/a\u003e.\n      schema:\n        type: string\n        maxLength: 256\n        example: 026e7634-24d7-486c-a0bb-4a17fd0eebc5\n    idem-query:\n      in: query\n      name: idempotency_key\n      required: false\n      description: \u003e\n        A string of no longer than 256 characters that uniquely identifies this\n        resource. For more help integrating idempotency keys, refer to our \u003ca\n        href=\"https://help.lob.com/print_mail/mail-send-settings#idempotent-requests\"\n        target=\"_blank\"\u003eimplementation guide\u003c/a\u003e.\n      schema:\n        type: string\n        maxLength: 256\n        example: 026e7634-24d7-486c-a0bb-4a17fd0eebc5\n    lang_spec:\n      in: header\n      name: x-lang-output\n      required: false\n      description: \u003e\n        * `native` - Translate response to the native language of the country in\n        the request\n\n        * `match` - match the response to the language in the request\n\n\n        Default response is in English.\n      schema:\n        type: string\n        enum:\n          - native\n          - match\n  schemas:\n    date_filter:\n      type: object\n      additionalProperties:\n        type: string\n      description: \u003e-\n        Filter by ISO-8601 date or datetime, e.g. `{ \"gt\": \"2012-01-01\", \"lt\":\n        \"2012-01-31T12:34:56Z\" }` where `gt` is \u003e, `lt` is \u003c, `gte` is ≥, and\n        `lte` is ≤.\n    metadata:\n      type: object\n      additionalProperties:\n        type: string\n      description: \u003e-\n        Use metadata to store custom information for tagging and labeling back\n        to your internal systems. Must be an object with up to 20 key-value\n        pairs. Keys must be at most 40 characters and values must be at most 500\n        characters. Neither can contain the characters `\"` and `\\`. i.e.\n        '{\"customer_id\" : \"NEWYORK2015\"}' Nested objects are not supported.  See\n        [Metadata](#section/Metadata) for more information.\n      maxLength: 500\n      pattern: '[^\"\\\\]{0,500}'\n    failure_status_code:\n      type: integer\n      enum:\n        - 401\n        - 403\n        - 404\n        - 413\n        - 422\n        - 429\n        - 500\n      description: |\n        A conventional HTTP status code:\n          * `401` - Authorization error with your API key or account\n          * `403` - Forbidden error with your API key or account\n          * `404` - The requested item does not exist\n          * `413` - Payload too large\n          * `422` - The query or body parameters did not pass validation\n          * `429` - Too many requests have been sent with an API key in a given amount of time\n          * `500` - An internal server error occurred, please contact support@lob.com\n    error:\n      type: object\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      required:\n        - error\n      properties:\n        error:\n          type: object\n          required:\n            - message\n            - status_code\n            - code\n          properties:\n            message:\n              type: string\n              description: A human-readable message with more details about the error\n              example: \u003e-\n                Rate limit exceeded. Please wait 5 seconds and try your request\n                again.\n            status_code:\n              $ref: '#/components/schemas/failure_status_code'\n            code:\n              type: string\n              enum:\n                - bad_request\n                - conflict\n                - feature_limit_reached\n                - internal_server_error\n                - invalid\n                - not_deletable\n                - not_found\n                - request_timeout\n                - service_unavailable\n                - unrecognized_endpoint\n                - unsupported_lob_version\n                - address_length_exceeds_limit\n                - bank_account_already_verified\n                - bank_error\n                - custom_envelope_inventory_depleted\n                - deleted_bank_account\n                - failed_deliverability_strictness\n                - file_pages_below_min\n                - file_pages_exceed_max\n                - file_size_exceeds_limit\n                - foreign_return_address\n                - inconsistent_page_dimensions\n                - invalid_bank_account\n                - invalid_bank_account_verification\n                - invalid_check_international\n                - invalid_country_covid\n                - invalid_file\n                - invalid_file_dimensions\n                - invalid_file_download_time\n                - invalid_file_url\n                - invalid_image_dpi\n                - invalid_international_feature\n                - invalid_perforation_return_envelope\n                - invalid_template_html\n                - merge_variable_required\n                - merge_variable_whitespace\n                - payment_method_unverified\n                - pdf_encrypted\n                - special_characters_restricted\n                - unembedded_fonts\n                - email_required\n                - invalid_api_key\n                - publishable_key_not_allowed\n                - rate_limit_exceeded\n                - unauthorized\n                - unauthorized_token\n              description: \u003e\n                A pre-defined string identifying an error. Error codes fall into\n                three categories:\n\n\n                **GENERIC**\n\n                * `bad_request` - 422: an invalid request was made. See error\n                message for details.\n\n                * `conflict` - 409/422: this operation would leave data in a\n                conflicted state.\n\n                * `feature_limit_reached` - 403: the account has reached its\n                resource limit and requires upgrading to add more.\n\n                * `internal_server_error` - 500: an error has occured on Lob's\n                servers. Please try request again.\n\n                * `invalid` - 422: an invalid request was made. See error\n                message for details.\n\n                * `not_deletable` - 422: an attempt was made to delete a\n                resource, but the resource cannot be deleted.\n\n                * `not_found` - 404: the requested resource was not found.\n\n                * `request_timeout` - 408: the request took too long. Please try\n                again.\n\n                * `service_unavailable` - 503: the Lob servers are temporarily\n                unavailable. Please try agian.\n\n                * `unrecognized_endpoint` - 404: the requested endpoint doesn't\n                exist.\n\n                * `unsupported_lob_version` - 422: an unsupported Lob API\n                version was requested.\n\n\n                **ADVANCED**\n\n                * `address_length_exceeds_limit` - 422: the sum of\n                to.address_line1 and to.address_line2 cannot surpass 50\n                characters.\n\n                * `bank_account_already_verified` - 422: the bank account has\n                already been verified.\n\n                * `bank_error` - 422: there's an issue with the bank account.\n\n                * `custom_envelope_inventory_depleted` - 422: custom envelope\n                inventory is depleted, and more will need to be ordered.\n\n                * `deleted_bank_account` - 404: checks cannot be created with a\n                deleted bank account.\n\n                * `failed_deliverability_strictness` - 422: the `to` address\n                doesn't meet strictness requirements. See \u003ca\n                href=\"https://dashboard.lob.com/#/settings/account\"\n                target=\"_blank\"\u003eAccount Settings\u003c/a\u003e to configure strictness.\n\n                * `file_pages_below_min` - 422: not enough pages.\n\n                * `file_pages_exceed_max` - 422: too many pages.\n\n                * `file_size_exceeds_limit` - 422: the file size is too large.\n                See description for details.\n\n                * `foreign_return_address` - 422: the `from` address must be a\n                US address.\n\n                * `inconsistent_page_dimensions` - 422: all pages of the input\n                file must have the same dimensions.\n\n                * `invalid_bank_account` - 422: the provided bank routing number\n                is invalid.\n\n                * `invalid_bank_account_verification` - 422: verification\n                amounts do not match.\n\n                * `invalid_check_international` - 422: checks cannot be sent\n                internationally.\n\n                * `invalid_country_covid` - 422: the postal service in the\n                specified country is currently unable to process the request due\n                to COVID-19 restrictions.\n\n                * `invalid_file` - 422: the file is invalid.\n\n                * `invalid_file_dimensions` - 422: file dimensions are incorrect\n                for the selected mail type.\n\n                * `invalid_file_download_time` - 422: file download from remote\n                server took too long.\n\n                * `invalid_file_url` - 422: the file URL when creating a\n                resource is invalid.\n\n                * `invalid_image_dpi` - 422: DPI must be at least 300.\n\n                * `invalid_international_feature` - 422: the specified product\n                cannot be sent to the destination.\n\n                * `invalid_perforation_return_envelope` - 422: both\n                `return_envelope` and `perforation` must be used together.\n\n                * `invalid_template_html` - 422: the provided HTML is invalid.\n\n                * `merge_variable_required` - 422: a required merge variable is\n                missing.\n\n                * `merge_variable_whitespace` - 422: merge variable names cannot\n                contain whitespace.\n\n                * `payment_method_unverified` - 401: you must have a verified\n                bank account or credit card to submit live requests.\n\n                * `pdf_encrypted` - 422: an encrypted PDF was provided.\n\n                * `special_characters_restricted` - 422: cannot use special\n                characters for merge variable names.\n\n                * `unembedded_fonts` - 422: the provided PDF contains\n                non-standard unembedded fonts. See description for details.\n\n\n                **AUTHENTICATION**\n\n                * `email_required` - 401: account must have a verified email\n                address before creating live resources.\n\n                * `invalid_api_key` - 401/403: the API key is invalid.\n\n                * `publishable_key_not_allowed` - 403: the requested operation\n                needs a secret key, not a publishable key. See [API\n                Keys](#section/API-Keys) for more information.\n\n                * `rate_limit_exceeded` - 429: requests were sent too quickly\n                and must be slowed down.\n\n                * `unauthorized` - 401: the request isn't authorized.\n\n                * `unauthorized_token` - 401: token isn't authorized.\n    object:\n      type: string\n      description: Value is resource type.\n    count:\n      type: integer\n      description: number of resources in a set\n    list:\n      type: object\n      description: Multiple items returned in order\n      properties:\n        object:\n          $ref: '#/components/schemas/object'\n        next_url:\n          type: string\n          description: Url of next page of items in list.\n          nullable: true\n        previous_url:\n          type: string\n          description: Url of previous page of items in list.\n          nullable: true\n        count:\n          $ref: '#/components/schemas/count'\n        total_count:\n          type: integer\n          description: \u003e-\n            indicates the total number of records. Provided when the request\n            specifies an \"include\" query parameter\n    date_created:\n      type: string\n      format: date-time\n      description: A timestamp in ISO 8601 format of the date the resource was created.\n    date_modified:\n      type: string\n      format: date-time\n      description: \u003e-\n        A timestamp in ISO 8601 format of the date the resource was last\n        modified.\n    deleted:\n      type: boolean\n      description: Only returned if the resource has been successfully deleted.\n    lob_base:\n      type: object\n      required:\n        - date_created\n        - date_modified\n        - object\n      properties:\n        date_created:\n          $ref: '#/components/schemas/date_created'\n        date_modified:\n          $ref: '#/components/schemas/date_modified'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n        object:\n          $ref: '#/components/schemas/object'\n    adr_id:\n      type: string\n      description: Unique identifier prefixed with `adr_`.\n      pattern: ^adr_[a-zA-Z0-9]+$\n    resource_description:\n      type: string\n      description: \u003e\n        An internal description that identifies this resource. Must be no longer\n        than 255 characters.\n      maxLength: 255\n      nullable: true\n    address_us:\n      allOf:\n        - $ref: '#/components/schemas/lob_base'\n        - type: object\n          required:\n            - id\n            - address_line1\n            - address_city\n            - address_state\n            - address_zip\n          anyOf:\n            - title: address obj with `name` defined\n              required:\n                - name\n            - title: address obj with `company` defined\n              required:\n                - company\n          properties:\n            id:\n              $ref: '#/components/schemas/adr_id'\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - address\n              default: address\n            description:\n              $ref: '#/components/schemas/resource_description'\n            name:\n              type: string\n              description: \u003e\n                Either `name` or `company` is required, you may also add both.\n                Must be no longer than 40 characters. If both `name` and\n                `company` are provided, they will be printed on two separate\n                lines above the rest of the address.\n              maxLength: 40\n              nullable: true\n            company:\n              type: string\n              description: \u003e\n                Either `name` or `company` is required, you may also add both.\n                Must be no longer than 40 characters. If both `name` and\n                `company` are provided, they will be printed on two separate\n                lines above the rest of the address. This field can be used for\n                any secondary recipient information which is not part of the\n                actual mailing address (Company Name, Department, Attention\n                Line, etc).\n              maxLength: 40\n              nullable: true\n            phone:\n              type: string\n              description: Must be no longer than 40 characters.\n              maxLength: 40\n              nullable: true\n            email:\n              type: string\n              description: Must be no longer than 100 characters.\n              maxLength: 100\n              nullable: true\n            address_line1:\n              type: string\n              description: The primary number, street name, and directional information.\n              maxLength: 64\n            address_line2:\n              type: string\n              description: \u003e-\n                An optional field containing any information which can't fit\n                into line 1.\n              maxLength: 64\n              nullable: true\n            address_city:\n              type: string\n              maxLength: 200\n            address_state:\n              type: string\n              description: 2 letter state short-name code\n              pattern: ^[a-zA-Z]{2}$\n            address_zip:\n              type: string\n              description: \u003e\n                Must follow the ZIP format of `12345` or ZIP+4 format of\n                `12345-1234`.\n              pattern: ^\\d{5}(-\\d{4})?$\n            address_country:\n              type: string\n              enum:\n                - UNITED STATES\n              description: Full name of country\n              minLength: 13\n              maxLength: 13\n            metadata:\n              $ref: '#/components/schemas/metadata'\n            recipient_moved:\n              type: boolean\n              description: \u003e\n                Only returned for accounts on certain \u003ca\n                href=\"https://dashboard.lob.com/#/settings/editions\"\n                target=\"_blank\"\u003ePrint \u0026amp; Mail Editions\u003c/a\u003e. Value is `true`\n                if the address was altered because the recipient filed for a \u003ca\n                href=\"#tag/National-Change-of-Address\"\u003eNational Change of\n                Address Linkage (NCOALink)\u003c/a\u003e, `false` if the NCOALink check\n                was run but no altered address was found, and `null` if the\n                NCOALink check was not run. The NCOALink check does not happen\n                for non-US addresses, for non-deliverable US addresses, or for\n                addresses created before the NCOALink feature was added to your\n                account.\n              nullable: true\n          example:\n            id: adr_e68217bd744d65c8\n            description: Harry - Office\n            name: HARRY ZHANG\n            company: LOB\n            phone: '5555555555'\n            email: harry@lob.com\n            address_line1: 210 KING ST STE 6100\n            address_line2: null\n            address_city: SAN FRANCISCO\n            address_state: CA\n            address_zip: 94107-1741\n            address_country: UNITED STATES\n            metadata: {}\n            recipient_moved: false\n            date_created: 2019-08-12T00:16:00.361Z\n            date_modified: 2019-08-12T00:16:00.361Z\n            object: address\n    company:\n      type: string\n      description: \u003e\n        Either `name` or `company` is required, you may also add both. Must be\n        no longer than 40 characters. If both `name` and `company` are provided,\n        they will be printed on two separate lines above the rest of the\n        address. This field can be used for any secondary recipient information\n        which is not part of the actual mailing address (Company Name,\n        Department, Attention Line, etc).\n      maxLength: 40\n      nullable: true\n    address_intl:\n      allOf:\n        - $ref: '#/components/schemas/lob_base'\n        - type: object\n          required:\n            - id\n            - address_line1\n            - address_country\n          anyOf:\n            - title: address obj with `name` defined\n              required:\n                - name\n            - title: address obj with `company` defined\n              required:\n                - company\n          properties:\n            id:\n              $ref: '#/components/schemas/adr_id'\n            description:\n              $ref: '#/components/schemas/resource_description'\n            name:\n              type: string\n              description: \u003e\n                Either `name` or `company` is required, you may also add both.\n                Must be no longer than 40 characters. If both `name` and\n                `company` are provided, they will be printed on two separate\n                lines above the rest of the address.\n              maxLength: 40\n              nullable: true\n            company:\n              $ref: '#/components/schemas/company'\n            phone:\n              type: string\n              description: Must be no longer than 40 characters.\n              maxLength: 40\n              nullable: true\n            email:\n              type: string\n              description: Must be no longer than 100 characters.\n              maxLength: 100\n              nullable: true\n            metadata:\n              $ref: '#/components/schemas/metadata'\n            address_line1:\n              type: string\n              maxLength: 200\n            address_line2:\n              type: string\n              maxLength: 200\n              nullable: true\n            address_city:\n              type: string\n              maxLength: 200\n              nullable: true\n            address_state:\n              description: Will be returned as a full string\n              type: string\n              maxLength: 200\n              nullable: true\n            address_zip:\n              type: string\n              description: Optional postal code.\n              maxLength: 40\n              nullable: true\n            address_country:\n              description: Full name of country\n              type: string\n              maxLength: 200\n              enum:\n                - AFGHANISTAN\n                - ALBANIA\n                - ALGERIA\n                - AMERICAN SAMOA\n                - ANDORRA\n                - ANGOLA\n                - ANGUILLA\n                - ANTARCTICA\n                - ANTIGUA AND BARBUDA\n                - ARGENTINA\n                - ARUBA\n                - AUSTRALIA\n                - AUSTRIA\n                - AZERBAIJAN\n                - BAHRAIN\n                - BANGLADESH\n                - BARBADOS\n                - BELARUS\n                - BELGIUM\n                - BELIZE\n                - BENIN\n                - BERMUDA\n                - BHUTAN\n                - BOLIVIA (PLURINATIONAL STATE OF)\n                - BONAIRE, SAINT EUSTATIUS AND SABA\n                - BOSNIA AND HERZEGOVINA\n                - BOTSWANA\n                - BRAZIL\n                - BRITISH INDIAN OCEAN TERRITORY\n                - BRITISH VIRGIN ISLANDS\n                - BRUNEI DARUSSALAM\n                - BULGARIA\n                - BURKINA FASO\n                - BURUNDI\n                - CABO VERDE\n                - CAMBODIA\n                - CAMEROON\n                - CANADA\n                - CAYMAN ISLANDS\n                - CENTRAL AFRICAN REPUBLIC\n                - CHAD\n                - CHILE\n                - CHINA\n                - COLOMBIA\n                - COMOROS\n                - CONGO\n                - CONGO, DEMOCRATIC REPUBLIC OF THE\n                - COOK ISLANDS\n                - COSTA RICA\n                - CÔTE D'IVOIRE\n                - CROATIA\n                - CUBA\n                - CURAÇAO\n                - CYPRUS\n                - CZECH REPUBLIC\n                - DENMARK\n                - DJIBOUTI\n                - DOMINICA\n                - DOMINICAN REPUBLIC\n                - ECUADOR\n                - EGYPT\n                - EL SALVADOR\n                - EQUATORIAL GUINEA\n                - ERITREA\n                - ESTONIA\n                - ESWATINI\n                - ETHIOPIA\n                - FALKLAND ISLANDS (MALVINAS)\n                - FAROE ISLANDS\n                - FIJI\n                - FINLAND\n                - FRANCE\n                - GABON\n                - GAMBIA\n                - GEORGIA\n                - GERMANY\n                - GHANA\n                - GIBRALTAR\n                - GREECE\n                - GREENLAND\n                - GRENADA\n                - GUATEMALA\n                - GUINEA\n                - GUINEA-BISSAU\n                - GUYANA\n                - HAITI\n                - HOLY SEE\n                - HONDURAS\n                - HONG KONG\n                - HUNGARY\n                - ICELAND\n                - INDIA\n                - INDONESIA\n                - IRAN (ISLAMIC REPUBLIC OF)\n                - IRAQ\n                - IRELAND\n                - ISRAEL\n                - ITALY\n                - JAMAICA\n                - JAPAN\n                - JORDAN\n                - KAZAKHSTAN\n                - KENYA\n                - KIRIBATI\n                - KOREA (DEMOCRATIC PEOPLE’S REPUBLIC OF)\n                - KOREA, REPUBLIC OF\n                - KUWAIT\n                - KYRGYZSTAN\n                - LAO PEOPLE’S DEMOCRATIC REPUBLIC\n                - LATVIA\n                - LEBANON\n                - LESOTHO\n                - LIBERIA\n                - LIBYA\n                - LIECHTENSTEIN\n                - LITHUANIA\n                - LUXEMBOURG\n                - MACAO\n                - MACEDONIA\n                - MADAGASCAR\n                - MALAWI\n                - MALAYSIA\n                - MALDIVES\n                - MALI\n                - MALTA\n                - MAURITANIA\n                - MAURITIUS\n                - MEXICO\n                - MOLDOVA, REPUBLIC OF\n                - MONACO\n                - MONGOLIA\n                - MONTENEGRO\n                - MONTSERRAT\n                - MOROCCO\n                - MOZAMBIQUE\n                - MYANMAR\n                - NAMIBIA\n                - NAURU\n                - NEPAL\n                - NETHERLAND ANTILLES\n                - NETHERLANDS\n                - NEW ZEALAND\n                - NICARAGUA\n                - NIGER\n                - NIGERIA\n                - NIUE\n                - NORFOLK ISLAND\n                - NORWAY\n                - OMAN\n                - PAKISTAN\n                - PANAMA\n                - PAPUA NEW GUINEA\n                - PARAGUAY\n                - PERU\n                - PHILIPPINES\n                - PITCAIRN\n                - POLAND\n                - PORTUGAL\n                - QATAR\n                - ROMANIA\n                - RUSSIAN FEDERATION\n                - RWANDA\n                - SAINT HELENA\n                - SAINT KITTS AND NEVIS\n                - SAINT LUCIA\n                - SAINT VINCENT AND THE GRENADINES\n                - SAMOA\n                - SAN MARINO\n                - SAO TOME AND PRINCIPE\n                - SAUDI ARABIA\n                - SENEGAL\n                - SERBIA\n                - SEYCHELLES\n                - SIERRA LEONE\n                - SINGAPORE\n                - SINT MAARTEN\n                - SLOVAKIA\n                - SLOVENIA\n                - SOLOMON ISLANDS\n                - SOMALIA\n                - SOUTH AFRICA\n                - SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS\n                - SOUTH SUDAN\n                - SPAIN\n                - SRI LANKA\n                - SUDAN\n                - SURINAME\n                - SWEDEN\n                - SWITZERLAND\n                - SYRIAN ARAB REPUBLIC\n                - TAIWAN\n                - TAJIKISTAN\n                - TANZANIA\n                - THAILAND\n                - THE BAHAMAS\n                - TIMOR-LESTE\n                - TOGO\n                - TOKELAU\n                - TONGA\n                - TRINIDAD AND TOBAGO\n                - TUNISIA\n                - TURKEY\n                - TURKMENISTAN\n                - TURKS AND CAICOS ISLANDS\n                - TUVALU\n                - UGANDA\n                - UKRAINE\n                - UNITED ARAB EMIRATES\n                - UNITED KINGDOM\n                - URUGUAY\n                - UZBEKISTAN\n                - VANUATU\n                - VENEZUELA\n                - VIET NAM\n                - WESTERN SAHARA\n                - YEMEN\n                - ZAMBIA\n                - ZIMBABWE\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - address\n              default: address\n          example:\n            id: adr_e68217bd744d65c8\n            description: Harry - Office\n            name: Harry Zhang\n            company: Lob\n            phone: '5555555555'\n            email: harry@lob.com\n            metadata: {}\n            address_line1: 370 WATER ST\n            address_line2: ''\n            address_city: SUMMERSIDE\n            address_state: PRINCE EDWARD ISLAND\n            address_zip: C1N 1C4\n            address_country: CANADA\n    address:\n      oneOf:\n        - $ref: '#/components/schemas/address_us'\n        - $ref: '#/components/schemas/address_intl'\n    address_fields_us:\n      type: object\n      required:\n        - address_line1\n        - address_city\n        - address_state\n        - address_zip\n      properties:\n        address_line1:\n          type: string\n          description: The primary number, street name, and directional information.\n          maxLength: 64\n        address_line2:\n          type: string\n          description: \u003e-\n            An optional field containing any information which can't fit into\n            line 1.\n          maxLength: 64\n          nullable: true\n        address_city:\n          type: string\n          maxLength: 200\n        address_state:\n          type: string\n          description: 2 letter state short-name code\n          pattern: ^[a-zA-Z]{2}$\n        address_zip:\n          type: string\n          description: \u003e\n            Must follow the ZIP format of `12345` or ZIP+4 format of\n            `12345-1234`.\n          pattern: ^\\d{5}(-\\d{4})?$\n    address_editable_us:\n      allOf:\n        - $ref: '#/components/schemas/address_fields_us'\n        - type: object\n          anyOf:\n            - title: address obj with `name` defined\n              required:\n                - name\n            - title: address obj with `company` defined\n              required:\n                - company\n          properties:\n            description:\n              $ref: '#/components/schemas/resource_description'\n            name:\n              type: string\n              description: \u003e\n                Either `name` or `company` is required, you may also add both.\n                Must be no longer than 40 characters. If both `name` and\n                `company` are provided, they will be printed on two separate\n                lines above the rest of the address.\n              maxLength: 40\n              nullable: true\n            company:\n              $ref: '#/components/schemas/company'\n            phone:\n              type: string\n              description: Must be no longer than 40 characters.\n              maxLength: 40\n              nullable: true\n            email:\n              type: string\n              description: Must be no longer than 100 characters.\n              maxLength: 100\n              nullable: true\n            address_country:\n              type: string\n              enum:\n                - US\n              default: US\n            metadata:\n              $ref: '#/components/schemas/metadata'\n    address_fields_intl:\n      type: object\n      required:\n        - address_line1\n        - address_country\n      properties:\n        address_line1:\n          type: string\n          description: The primary number, street name, and directional information.\n          maxLength: 200\n        address_line2:\n          type: string\n          description: \u003e-\n            An optional field containing any information which can't fit into\n            line 1.\n          maxLength: 200\n          nullable: true\n        address_city:\n          type: string\n          maxLength: 200\n          nullable: true\n        address_state:\n          type: string\n          maxLength: 200\n          nullable: true\n        address_zip:\n          type: string\n          description: Optional postal code.\n          maxLength: 40\n          nullable: true\n    country_extended:\n      type: string\n      description: \u003e-\n        Must be a 2 letter country short-name code (ISO 3166). Does not accept\n        `US`, `AS`, `PR`, `FM`, `GU`, `MH`, `MP`, `PW`, or `VI`. For these\n        addresses, please use the US verification API. Also does not accept\n        `PS`, which is not currently supported.\n      enum:\n        - AD\n        - AE\n        - AF\n        - AG\n        - AI\n        - AL\n        - AN\n        - AO\n        - AQ\n        - AR\n        - AT\n        - AU\n        - AW\n        - AZ\n        - BA\n        - BB\n        - BD\n        - BE\n        - BF\n        - BG\n        - BH\n        - BI\n        - BJ\n        - BM\n        - BN\n        - BO\n        - BQ\n        - BR\n        - BS\n        - BT\n        - BW\n        - BY\n        - BZ\n        - CA\n        - CD\n        - CG\n        - CH\n        - CI\n        - CK\n        - CL\n        - CM\n        - CN\n        - CO\n        - CR\n        - CS\n        - CU\n        - CV\n        - CW\n        - CY\n        - CZ\n        - DE\n        - DJ\n        - DK\n        - DM\n        - DO\n        - DZ\n        - EC\n        - EE\n        - EG\n        - EH\n        - ER\n        - ES\n        - ET\n        - FI\n        - FJ\n        - FK\n        - FO\n        - FR\n        - GA\n        - GB\n        - GD\n        - GE\n        - GH\n        - GI\n        - GL\n        - GM\n        - GN\n        - GQ\n        - GR\n        - GS\n        - GT\n        - GW\n        - GY\n        - HK\n        - HN\n        - HR\n        - HT\n        - HU\n        - ID\n        - IE\n        - IL\n        - IN\n        - IO\n        - IQ\n        - IR\n        - IS\n        - IT\n        - JM\n        - JO\n        - JP\n        - KE\n        - KG\n        - KH\n        - KI\n        - KM\n        - KN\n        - KP\n        - KR\n        - KW\n        - KY\n        - KZ\n        - LA\n        - LB\n        - LC\n        - LI\n        - LK\n        - LR\n        - LS\n        - LT\n        - LU\n        - LV\n        - LY\n        - MA\n        - MC\n        - MD\n        - ME\n        - MG\n        - MK\n        - ML\n        - MM\n        - MN\n        - MO\n        - MR\n        - MS\n        - MT\n        - MU\n        - MV\n        - MW\n        - MX\n        - MY\n        - MZ\n        - NA\n        - NE\n        - NF\n        - NG\n        - NI\n        - NL\n        - 'NO'\n        - NP\n        - NR\n        - NU\n        - NZ\n        - OM\n        - PA\n        - PE\n        - PG\n        - PH\n        - PK\n        - PL\n        - PN\n        - PT\n        - PY\n        - QA\n        - RO\n        - RS\n        - RU\n        - RW\n        - SA\n        - SB\n        - SC\n        - SD\n        - SE\n        - SG\n        - SH\n        - SI\n        - SK\n        - SL\n        - SM\n        - SN\n        - SO\n        - SR\n        - SS\n        - ST\n        - SV\n        - SX\n        - SY\n        - SZ\n        - TC\n        - TD\n        - TG\n        - TH\n        - TJ\n        - TK\n        - TL\n        - TM\n        - TN\n        - TO\n        - TR\n        - TT\n        - TV\n        - TW\n        - TZ\n        - UA\n        - UG\n        - UY\n        - UZ\n        - VA\n        - VC\n        - VE\n        - VG\n        - VN\n        - VU\n        - WS\n        - YE\n        - ZA\n        - ZM\n        - ZW\n    address_editable_intl:\n      allOf:\n        - $ref: '#/components/schemas/address_fields_intl'\n        - type: object\n          anyOf:\n            - title: address obj with `name` defined\n              required:\n                - name\n            - title: address obj with `company` defined\n              required:\n                - company\n          properties:\n            description:\n              $ref: '#/components/schemas/resource_description'\n            name:\n              type: string\n              description: \u003e\n                Either `name` or `company` is required, you may also add both.\n                Must be no longer than 40 characters. If both `name` and\n                `company` are provided, they will be printed on two separate\n                lines above the rest of the address.\n              maxLength: 40\n              nullable: true\n            company:\n              $ref: '#/components/schemas/company'\n            phone:\n              type: string\n              description: Must be no longer than 40 characters.\n              maxLength: 40\n              nullable: true\n            email:\n              type: string\n              description: Must be no longer than 100 characters.\n              maxLength: 100\n              nullable: true\n            address_country:\n              $ref: '#/components/schemas/country_extended'\n            metadata:\n              $ref: '#/components/schemas/metadata'\n    address_editable:\n      oneOf:\n        - $ref: '#/components/schemas/address_editable_us'\n        - $ref: '#/components/schemas/address_editable_intl'\n    address_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/adr_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    bank_id_no_description:\n      type: string\n      pattern: ^bank_[a-zA-Z0-9]+$\n    bank_id:\n      allOf:\n        - $ref: '#/components/schemas/bank_id_no_description'\n        - type: string\n          description: Unique identifier prefixed with `bank_`.\n    cents:\n      type: integer\n      minimum: 1\n      maximum: 100\n    bank_account_verify:\n      type: object\n      required:\n        - amounts\n      properties:\n        amounts:\n          description: \u003e-\n            In live mode, an array containing the two micro deposits (in cents)\n            placed in the bank account. In test mode, no micro deposits will be\n            placed, so any two integers between `1` and `100` will work.\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            $ref: '#/components/schemas/cents'\n    bank_account_base:\n      type: object\n      required:\n        - routing_number\n        - account_number\n        - account_type\n        - signatory\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        routing_number:\n          description: \u003e-\n            Must be a \u003ca href=\"https://www.frbservices.org/index.html\"\n            target=\"_blank\"\u003evalid US routing number\u003c/a\u003e.\n          type: string\n          minLength: 9\n          maxLength: 9\n        account_number:\n          type: string\n          maxLength: 17\n        account_type:\n          type: string\n          enum:\n            - company\n            - individual\n          description: The type of entity that holds the account.\n        signatory:\n          description: \u003e-\n            The signatory associated with your account. This name will be\n            printed on checks created with this bank account. If you prefer to\n            use a custom signature image on your checks instead, please create\n            your bank account from the \u003ca\n            href=\"https://dashboard.lob.com/#/login\"\n            target=\"_blank\"\u003eDashboard\u003c/a\u003e.\n          type: string\n          maxLength: 30\n        metadata:\n          $ref: '#/components/schemas/metadata'\n    signed_link:\n      type: string\n      description: \u003e-\n        A [signed link](#section/Asset-URLs) served over HTTPS. The link\n        returned will expire in 30 days to prevent mis-sharing. Each time a GET\n        request is initiated, a new signed URL will be generated.\n      pattern: \u003e-\n        ^https://lob-assets\\.com/(letters|postcards|bank-accounts|checks|self-mailers|cards)/[a-z]{3,4}_[a-z0-9]{15,16}(\\.pdf|_thumb_[a-z]+_[0-9]+\\.png)\\?(version=[a-z0-9-]*\u0026)?expires=[0-9]{10}\u0026signature=[a-zA-Z0-9-_]+$\n    bank_account:\n      allOf:\n        - $ref: '#/components/schemas/bank_account_base'\n        - $ref: '#/components/schemas/lob_base'\n        - type: object\n          required:\n            - id\n          properties:\n            id:\n              $ref: '#/components/schemas/bank_id'\n            signature_url:\n              allOf:\n                - type: string\n                  nullable: true\n                  description: A [signed link](#section/Asset-URLs) to the signature image.\n                - $ref: '#/components/schemas/signed_link'\n            bank_name:\n              description: \u003e-\n                The name of the bank based on the provided routing number, e.g.\n                `JPMORGAN CHASE BANK`.\n              type: string\n            verified:\n              description: \u003e-\n                A bank account must be verified before a check can be created.\n                More info [here](#operation/bank_account_verify).\n              type: boolean\n              default: false\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - bank_account\n              default: bank_account\n      example:\n        id: bank_a\n        signature_url: \u003e-\n          https://lob-assets.com/bank-accounts/asd_asdfghjkqwertyui.pdf?expires=1234567890\u0026signature=aksdf\n        bank_name: JPMORGAN CHASE BANK\n        verified: true\n        object: bank_account\n        description: Test Bank Account\n        routing_number: '322271627'\n        account_number: '123456789'\n        signatory: Jane Doe\n        account_type: individual\n        metadat:\n          spiffy: 'true'\n        date_created: 2019-08-08T19:34:47.571Z\n        date_modified: 2019-08-08T19:34:47.571Z\n    bank_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/bank_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    bg_id:\n      type: string\n      description: Unique identifier prefixed with `bg_`.\n      pattern: ^bg_[a-zA-Z0-9]+$\n    bg_description:\n      type: string\n      description: Description of the billing group.\n      maxLength: 255\n    name:\n      type: string\n      description: Name of the billing group.\n      maxLength: 255\n    billing_group_base:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/bg_description'\n        name:\n          $ref: '#/components/schemas/name'\n    billing_group:\n      allOf:\n        - $ref: '#/components/schemas/billing_group_base'\n        - type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/bg_id'\n            date_created:\n              $ref: '#/components/schemas/date_created'\n            date_modified:\n              $ref: '#/components/schemas/date_modified'\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - billing_group\n              default: billing_group\n    billing_group_editable:\n      allOf:\n        - $ref: '#/components/schemas/billing_group_base'\n        - required:\n            - name\n    recipient:\n      type: string\n      description: The intended recipient, typically a person's or firm's name.\n      nullable: true\n      maxLength: 500\n    primary_line_us:\n      type: string\n      description: |\n        The primary delivery line (usually the street address) of the address.\n        Combination of the following applicable `components`:\n        * `primary_number`\n        * `street_predirection`\n        * `street_name`\n        * `street_suffix`\n        * `street_postdirection`\n        * `secondary_designator`\n        * `secondary_number`\n        * `pmb_designator`\n        * `pmb_number`\n      maxLength: 500\n    secondary_line:\n      type: string\n      description: \u003e\n        The secondary delivery line of the address. This field is typically\n        empty but may contain information if `primary_line` is too long.\n      maxLength: 500\n    urbanization:\n      type: string\n      description: \u003e\n        Only present for addresses in Puerto Rico. An urbanization refers to an\n        area, sector, or development within a city. See \u003ca\n        href=\"https://pe.usps.com/text/pub28/28api_008.htm#:~:text=I51.,-4%20Urbanizations\u0026text=In%20Puerto%20Rico%2C%20identical%20street,placed%20before%20the%20urbanization%20name.\"\n        target=\"_blank\"\u003eUSPS documentation\u003c/a\u003e for clarification.\n      maxLength: 500\n    city_no_description:\n      type: string\n      maxLength: 200\n    zip_code:\n      type: string\n      pattern: ^\\d{5}((-)?\\d{4})?$\n    multiple_components:\n      allOf:\n        - anyOf:\n            - title: US verification object with `city` and `state`\n              required:\n                - city\n                - state\n            - title: US verification object with `zip_code`\n              required:\n                - zip_code\n        - type: object\n          required:\n            - primary_line\n          properties:\n            recipient:\n              $ref: '#/components/schemas/recipient'\n            primary_line:\n              $ref: '#/components/schemas/primary_line_us'\n            secondary_line:\n              $ref: '#/components/schemas/secondary_line'\n            urbanization:\n              $ref: '#/components/schemas/urbanization'\n            city:\n              allOf:\n                - $ref: '#/components/schemas/city_no_description'\n                - type: string\n                  description: \u003e-\n                    The name of the city. `city` and `state` are required if no\n                    `zip_code` is passed.\n            state:\n              type: string\n              description: \u003e-\n                The \u003ca href=\"https://en.wikipedia.org/wiki/ISO_3166-2:US\"\n                target=\"_blank\"\u003eISO 3166-2\u003c/a\u003e two letter code or subdivision\n                name for the state. `city` and `state` are required if no\n                `zip_code` is passed.\n              maxLength: 50\n            zip_code:\n              allOf:\n                - description: \u003e-\n                    Required if `city` and `state` are not passed in. If\n                    included, must be formatted as a US ZIP or ZIP+4 (e.g.\n                    `94107`, `941072282`, `94107-2282`).\n                - $ref: '#/components/schemas/zip_code'\n    multiple_components_list:\n      type: object\n      required:\n        - addresses\n      properties:\n        addresses:\n          type: array\n          minItems: 1\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/multiple_components'\n    us_ver_id:\n      type: string\n      description: Unique identifier prefixed with `us_ver_`.\n      pattern: ^us_ver_[a-zA-Z0-9_]+$\n    primary_number:\n      type: string\n      description: \u003e-\n        The numeric or alphanumeric part of an address preceding the street\n        name. Often the house, building, or PO Box number.\n    street_name:\n      type: string\n      description: The name of the street.\n    city:\n      allOf:\n        - $ref: '#/components/schemas/city_no_description'\n        - type: string\n          description: The name of the city.\n    state:\n      type: string\n      description: \u003e\n        The \u003ca href=\"https://en.wikipedia.org/wiki/ISO_3166-2\"\n        target=\"_blank\"\u003eISO 3166-2\u003c/a\u003e two letter code for the state.\n      maxLength: 2\n    zip_code_plus_4:\n      type: string\n      pattern: ^\\d{4}$\n    zip_code_type:\n      type: string\n      enum:\n        - standard\n        - po_box\n        - unique\n        - military\n        - ''\n      description: \u003e\n        A description of the ZIP code type. For more detailed information about\n\n        each ZIP code type, see [US Verification\n        Details](#tag/US-Verification-Types).\n    county:\n      type: string\n      description: County name of the address city.\n    county_fips:\n      type: string\n      description: \u003e\n        A 5-digit \u003ca href=\"https://en.wikipedia.org/wiki/FIPS_county_code\"\n        target=\"_blank\"\u003eFIPS county code\u003c/a\u003e which uniquely identifies\n        `components[county]`. It consists of a 2-digit state code and a 3-digit\n        county code.\n      pattern: \\d{5}\n    us_components:\n      type: object\n      description: A nested object containing a breakdown of each component of an address.\n      required:\n        - primary_number\n        - street_predirection\n        - street_name\n        - street_suffix\n        - street_postdirection\n        - secondary_designator\n        - secondary_number\n        - pmb_designator\n        - pmb_number\n        - extra_secondary_designator\n        - extra_secondary_number\n        - city\n        - state\n        - zip_code\n        - zip_code_plus_4\n        - zip_code_type\n        - delivery_point_barcode\n        - address_type\n        - record_type\n        - default_building_address\n        - county\n        - county_fips\n        - carrier_route\n        - carrier_route_type\n      properties:\n        primary_number:\n          $ref: '#/components/schemas/primary_number'\n        street_predirection:\n          type: string\n          enum:\n            - 'N'\n            - S\n            - E\n            - W\n            - NE\n            - SW\n            - SE\n            - NW\n            - ''\n          description: \u003e\n            Geographic direction preceding a street name (`N`, `S`, `E`, `W`,\n            `NE`, `SW`, `SE`, `NW`).\n        street_name:\n          $ref: '#/components/schemas/street_name'\n        street_suffix:\n          type: string\n          description: \u003e\n            The standard USPS abbreviation for the street suffix (`ST`, `AVE`,\n            `BLVD`, etc).\n        street_postdirection:\n          type: string\n          enum:\n            - 'N'\n            - S\n            - E\n            - W\n            - NE\n            - SW\n            - SE\n            - NW\n            - ''\n          description: \u003e\n            Geographic direction following a street name (`N`, `S`, `E`, `W`,\n            `NE`, `SW`, `SE`, `NW`).\n        secondary_designator:\n          type: string\n          description: \u003e\n            The standard USPS abbreviation describing the\n            `components[secondary_number]` (`STE`, `APT`, `BLDG`, etc).\n        secondary_number:\n          type: string\n          description: |\n            Number of the apartment/unit/etc.\n        pmb_designator:\n          type: string\n          description: \u003e\n            Designator of a \u003ca\n            href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\"\n            target=\"_blank\"\u003eCMRA-authorized\u003c/a\u003e private mailbox.\n        pmb_number:\n          type: string\n          description: \u003e\n            Number of a \u003ca\n            href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\"\n            target=\"_blank\"\u003eCMRA-authorized\u003c/a\u003e private mailbox.\n        extra_secondary_designator:\n          type: string\n          description: \u003e\n            An extra (often unnecessary) secondary designator provided with the\n            input address.\n        extra_secondary_number:\n          type: string\n          description: \u003e\n            An extra (often unnecessary) secondary number provided with the\n            input address.\n        city:\n          $ref: '#/components/schemas/city'\n        state:\n          $ref: '#/components/schemas/state'\n        zip_code:\n          type: string\n          description: The 5-digit ZIP code\n          pattern: ^\\d{5}$\n        zip_code_plus_4:\n          allOf:\n            - description: The 4-digit ZIP add-on code\n            - $ref: '#/components/schemas/zip_code_plus_4'\n        zip_code_type:\n          $ref: '#/components/schemas/zip_code_type'\n        delivery_point_barcode:\n          type: string\n          description: \u003e\n            A 12-digit identifier that uniquely identifies a delivery point\n            (location where mail can be sent and received). It consists of the\n            5-digit ZIP code (`zip_code`), 4-digit ZIP+4 add-on\n            (`zip_code_plus_4`), 2-digit delivery point, and 1-digit delivery\n            point check digit.\n        address_type:\n          type: string\n          enum:\n            - residential\n            - commercial\n            - ''\n          description: \u003e\n            Uses USPS's \u003ca\n            href=\"https://www.usps.com/nationalpremieraccounts/rdi.htm\"\n            target=\"_blank\"\u003eResidential Delivery Indicator (RDI)\u003c/a\u003e to identify\n\n            whether an address is classified as residential or\n\n            business. Possible values are:\n\n            * `residential` –– The address is residential or a PO Box.\n\n            * `commercial` –– The address is commercial.\n\n            * `''` –– Not enough information provided to be determined.\n        record_type:\n          type: string\n          enum:\n            - street\n            - highrise\n            - firm\n            - po_box\n            - rural_route\n            - general_delivery\n            - ''\n          description: \u003e\n            A description of the type of address. Populated if a DPV match is\n            made (`deliverability_analysis[dpv_confirmation]`\n\n            is `Y`, `S`, or `D`). For more detailed information about each\n            record type, see\n\n            [US Verification Details](#tag/US-Verification-Types).\n        default_building_address:\n          type: boolean\n          description: \u003e\n            Designates whether or not the address is the default address for a\n            building containing multiple delivery points.\n        county:\n          $ref: '#/components/schemas/county'\n        county_fips:\n          $ref: '#/components/schemas/county_fips'\n        carrier_route:\n          type: string\n          description: \u003e\n            A 4-character code assigned to a mail delivery route within a ZIP\n            code.\n        carrier_route_type:\n          type: string\n          enum:\n            - city_delivery\n            - rural_route\n            - highway_contract\n            - po_box\n            - general_delivery\n          description: \u003e\n            The type of `components[carrier_route]`. For more detailed\n            information about\n\n            each carrier route type, see [US Verification\n            Details](#tag/US-Verification-Types).\n        latitude:\n          type: number\n          format: float\n          description: \u003e\n            A positive or negative decimal indicating the geographic latitude of\n            the address, specifying the north-to-south position of a location.\n            This should be used with `longitude` to pinpoint locations on a map.\n            Will not be returned for undeliverable addresses or military\n            addresses (state is `AA`, `AE`, or `AP`).\n          nullable: true\n        longitude:\n          type: number\n          format: float\n          description: \u003e\n            A positive or negative decimal indicating the geographic longitude\n            of the address, specifying the north-to-south position of a\n            location. This should be used with `latitude` to pinpoint locations\n            on a map. Will not be returned for undeliverable addresses or\n            military addresses (state is `AA`, `AE`, or `AP`).\n          nullable: true\n    dpv_footnote:\n      type: string\n      enum:\n        - AA\n        - A1\n        - BB\n        - CC\n        - N1\n        - F1\n        - G1\n        - U1\n        - M1\n        - M3\n        - P1\n        - P3\n        - R1\n        - R7\n        - RR\n      example: AA\n    deliverability_analysis:\n      type: object\n      description: \u003e-\n        A nested object containing a breakdown of the deliverability of an\n        address.\n      required:\n        - dpv_confirmation\n        - dpv_cmra\n        - dpv_vacant\n        - dpv_active\n        - dpv_footnotes\n        - ews_match\n        - lacs_indicator\n        - lacs_return_code\n        - suite_return_code\n      properties:\n        dpv_confirmation:\n          type: string\n          enum:\n            - 'Y'\n            - S\n            - D\n            - 'N'\n            - ''\n          description: \u003e\n            Result of Delivery Point Validation (DPV), which determines whether\n            or not the address is deliverable by the USPS. Possible values are:\n\n            * `Y` –– The address is deliverable by the USPS.\n\n            * `S` –– The address is deliverable by removing the provided\n            secondary unit designator. This information may be incorrect or\n            unnecessary.\n\n            * `D` –– The address is deliverable to the building's default\n            address but is missing a secondary unit designator and/or number.\n              There is a chance the mail will not reach the intended recipient.\n            * `N` –– The address is not deliverable according to the USPS, but\n            parts of the address are valid (such as the street and ZIP code).\n\n            * `''` –– This address is not deliverable. No matching street could\n            be found within the city or ZIP code.\n          example: 'Y'\n        dpv_cmra:\n          type: string\n          enum:\n            - 'Y'\n            - 'N'\n            - ''\n          description: \u003e\n            Indicates whether or not the address is \u003ca\n            href=\"https://en.wikipedia.org/wiki/Commercial_mail_receiving_agency\"\n            target=\"_blank\"\u003eCMRA-authorized\u003c/a\u003e. Possible values are:\n\n            * `Y` –– Address is CMRA-authorized.\n\n            * `N` –– Address is not CMRA-authorized.\n\n            * `''` –– A DPV match is not made\n            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty\n            string).\n          example: 'N'\n        dpv_vacant:\n          type: string\n          enum:\n            - 'Y'\n            - 'N'\n            - ''\n          description: \u003e\n            Indicates that an address was once deliverable, but has become\n            vacant and is no longer receiving deliveries. Possible values are:\n\n            * `Y` –– Address is vacant.\n\n            * `N` –– Address is not vacant.\n\n            * `''` –– A DPV match is not made\n            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty\n            string).\n          example: 'N'\n        dpv_active:\n          type: string\n          enum:\n            - 'Y'\n            - 'N'\n            - ''\n          description: \u003e\n            Corresponds to the USPS field `dpv_no_stat`. Indicates that an\n            address has been vacated in the recent past, and is no longer\n            receiving deliveries. If it's been unoccupied for 90+ days, or\n            temporarily vacant, this will be flagged. Possible values are:\n\n            * `Y` –– Address is active.\n\n            * `N` –– Address is not active.\n\n            * `''` –– A DPV match is not made\n            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty\n            string).\n          example: 'Y'\n        dpv_footnotes:\n          type: array\n          description: \u003e\n            An array of 2-character strings that gives more insight into how\n            `deliverability_analysis[dpv_confirmation]` was determined. Will\n            always include at least 1 string, and can include up to 3. For\n            details, see [US Verification Details](#tag/US-Verification-Types).\n          items:\n            $ref: '#/components/schemas/dpv_footnote'\n          example:\n            - AA\n            - BB\n        ews_match:\n          type: boolean\n          description: \u003e\n            Indicates whether or not an address has been flagged in the \u003ca\n            href=\"https://docs.informatica.com/data-engineering/data-engineering-quality/10-4-0/address-validator-port-reference/postal-carrier-certification-data-ports/early-warning-system-return-code.html\"\n            target=\"_blank\"\u003eEarly Warning System\u003c/a\u003e, meaning the address is\n            under development and not yet ready to receive mail. However, it\n            should become available in a few months.\n          example: false\n        lacs_indicator:\n          type: string\n          enum:\n            - 'Y'\n            - 'N'\n            - ''\n          description: \u003e\n            Indicates whether this address has been converted by\n\n            \u003ca href=\"https://postalpro.usps.com/address-quality/lacslink\"\n            target=\"_blank\"\u003eLACS\u003csup\u003eLink\u003c/sup\u003e\u003c/a\u003e.\n\n            LACS\u003csup\u003eLink\u003c/sup\u003e corrects outdated addresses into their modern\n            counterparts.\n\n            Possible values are:\n\n            * `Y` –– New address produced with a matching record in\n            LACS\u003csup\u003eLink\u003c/sup\u003e.\n\n            * `N` –– New address could not be produced with a matching record in\n            LACS\u003csup\u003eLink\u003c/sup\u003e.\n\n            * `''` –– A DPV match is not made\n            (`deliverability_analysis[dpv_confirmation]` is `N` or an empty\n            string).\n          example: ''\n        lacs_return_code:\n          type: string\n          description: \u003e\n            A code indicating how `deliverability_analysis[lacs_indicator]` was\n            determined.\n\n            Possible values are:\n\n            * `A` — A new address was produced because a match was found in\n            LACS\u003csup\u003eLink\u003c/sup\u003e.\n\n            * `92` — A LACS\u003csup\u003eLink\u003c/sup\u003e record was matched after dropping\n            secondary information.\n\n            * `14` — A match was found in LACS\u003csup\u003eLink\u003c/sup\u003e, but could not be\n            converted to a deliverable address.\n\n            * `00` — A match was not found in LACS\u003csup\u003eLink\u003c/sup\u003e, and no new\n            address was produced.\n\n            * `''` — LACS\u003csup\u003eLink\u003c/sup\u003e was not attempted.\n          example: ''\n        suite_return_code:\n          type: string\n          enum:\n            - A\n            - '00'\n            - ''\n          description: \u003e\n            A return code that indicates whether the address was matched and\n            corrected by\n\n            \u003ca\n            href=\"https://postalpro.usps.com/address-quality-solutions/suitelink\"\n            target=\"_blank\"\u003eSuite\u003csup\u003eLink\u003c/sup\u003e\u003c/a\u003e.\n\n            Suite\u003csup\u003eLink\u003c/sup\u003e attempts to provide secondary information to\n            business addresses.\n\n            Possible values are:\n\n            * `A` –– A Suite\u003csup\u003eLink\u003c/sup\u003e match was found and secondary\n            information was added.\n\n            * `00` –– A Suite\u003csup\u003eLink\u003c/sup\u003e match could not be found and no\n            secondary information was added.\n\n            * `''` –– Suite\u003csup\u003eLink\u003c/sup\u003e lookup was not attempted.\n          example: ''\n    lob_confidence_score:\n      type: object\n      description: \u003e-\n        Lob Confidence Score is a nested object that provides a numerical value\n        between 0-100 of the likelihood that an address is deliverable based on\n        Lob’s mail delivery data to over half of US households.\n      required:\n        - score\n        - level\n      properties:\n        score:\n          type: number\n          nullable: true\n          format: float\n          description: \u003e\n            A numerical score between 0 and 100 that represents the percentage\n            of mailpieces Lob has sent to this addresses that have been\n            delivered successfully over the past 2 years. Will be `null` if no\n            tracking data exists for this address.\n          default: null\n          minimum: 0\n          maximum: 100\n        level:\n          type: string\n          enum:\n            - high\n            - medium\n            - low\n            - ''\n          description: \u003e\n            Indicates the likelihood that the address is a valid, mail-receiving\n            address. Possible values are:\n              - `high` — Over 70% of mailpieces Lob has sent to this address were delivered successfully and recent mailings were also successful.\n              - `medium` — Between 40% and 70% of mailpieces Lob has sent to this address were delivered successfully.\n              - `low` — Less than 40% of mailpieces Lob has sent to this address were delivered successfully and recent mailings weren't successful.\n              - `\"\"` — No tracking data exists for this address or lob deliverability was unable to find a corresponding level of mail success.\n    us_verification:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/us_ver_id'\n        recipient:\n          $ref: '#/components/schemas/recipient'\n        primary_line:\n          $ref: '#/components/schemas/primary_line_us'\n        secondary_line:\n          $ref: '#/components/schemas/secondary_line'\n        urbanization:\n          $ref: '#/components/schemas/urbanization'\n        last_line:\n          type: string\n          description: |\n            Combination of the following applicable `components`:\n            * City (`city`)\n            * State (`state`)\n            * ZIP code (`zip_code`)\n            * ZIP+4 (`zip_code_plus_4`)\n        deliverability:\n          type: string\n          enum:\n            - deliverable\n            - deliverable_unnecessary_unit\n            - deliverable_incorrect_unit\n            - deliverable_missing_unit\n            - undeliverable\n          description: \u003e\n            Summarizes the deliverability of the `us_verification` object.\n\n            For full details, see the `deliverability_analysis` field. Possible\n            values are:\n\n            * `deliverable` – The address is deliverable by the USPS.\n\n            * `deliverable_unnecessary_unit` – The address is deliverable, but\n            the secondary unit information is unnecessary.\n\n            * `deliverable_incorrect_unit` – The address is deliverable to the\n            building's default address but the secondary unit provided may not\n            exist. There is a chance the mail will not reach the intended\n            recipient.\n\n            * `deliverable_missing_unit` – The address is deliverable to the\n            building's default address but is missing secondary unit\n            information. There is a chance the mail will not reach the intended\n            recipient.\n\n            * `undeliverable` – The address is not deliverable according to the\n            USPS.\n        valid_address:\n          type: boolean\n          enum:\n            - true\n            - false\n          description: \u003e\n            This field indicates whether an address was found in a more\n            comprehensive address dataset that includes sources from the USPS,\n            open source mapping data, and our proprietary mail delivery data.\n\n            This field can be interpreted as a representation of whether an\n            address is a real location or not. Additionally a valid address may\n            contradict the deliverability field since an address can be a real\n            valid location but the USPS may not deliver to that address.\n        components:\n          $ref: '#/components/schemas/us_components'\n        deliverability_analysis:\n          $ref: '#/components/schemas/deliverability_analysis'\n        lob_confidence_score:\n          $ref: '#/components/schemas/lob_confidence_score'\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - us_verification\n          default: us_verification\n    us_verifications:\n      type: object\n      required:\n        - addresses\n        - errors\n      properties:\n        addresses:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/us_verification'\n              - $ref: '#/components/schemas/error'\n        errors:\n          description: \u003e-\n            Indicates whether any errors occurred during the verification\n            process.\n          type: boolean\n    primary_line:\n      type: string\n      description: |\n        The primary delivery line (usually the street address) of the address.\n      maxLength: 200\n    intl_verification_base:\n      type: object\n      properties:\n        recipient:\n          $ref: '#/components/schemas/recipient'\n        primary_line:\n          $ref: '#/components/schemas/primary_line'\n        secondary_line:\n          $ref: '#/components/schemas/secondary_line'\n    postal_code:\n      type: string\n      description: The postal code.\n      maxLength: 12\n    multiple_components_intl:\n      allOf:\n        - $ref: '#/components/schemas/intl_verification_base'\n        - type: object\n          required:\n            - primary_line\n            - country\n          properties:\n            city:\n              $ref: '#/components/schemas/city'\n            state:\n              type: string\n              description: The name of the state.\n            postal_code:\n              $ref: '#/components/schemas/postal_code'\n            country:\n              $ref: '#/components/schemas/country_extended'\n    intl_verifications_payload:\n      type: object\n      required:\n        - addresses\n      properties:\n        addresses:\n          type: array\n          minItems: 1\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/multiple_components_intl'\n    intl_ver_id:\n      type: string\n      description: Unique identifier prefixed with `intl_ver_`.\n      pattern: ^intl_ver_[a-zA-Z0-9]+$\n    country_short:\n      type: string\n      description: \u003e-\n        The country of the address. Will be returned as a 2 letter country\n        short-name code (ISO 3166).\n      example: CA\n    intl_components:\n      type: object\n      description: A nested object containing a breakdown of each component of an address.\n      properties:\n        primary_number:\n          $ref: '#/components/schemas/primary_number'\n        street_name:\n          $ref: '#/components/schemas/street_name'\n        city:\n          $ref: '#/components/schemas/city'\n        state:\n          $ref: '#/components/schemas/state'\n        postal_code:\n          $ref: '#/components/schemas/postal_code'\n    intl_verification:\n      allOf:\n        - $ref: '#/components/schemas/intl_verification_base'\n        - type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/intl_ver_id'\n            last_line:\n              type: string\n              description: |\n                Combination of the following applicable `components`:\n                * `city`\n                * `state`\n                * `zip_code`\n                * `zip_code_plus_4`\n            country:\n              $ref: '#/components/schemas/country_short'\n            coverage:\n              type: string\n              enum:\n                - SUBBUILDING\n                - HOUSENUMBER/BUILDING\n                - STREET\n                - LOCALITY\n                - SPARSE\n              description: \u003e\n                The coverage level for the country. This represents the maximum\n                level of\n\n                accuracy an input address can be verified to.\n\n\n                * `SUBBUILDING` - Coverage down to unit numbers. For example, in\n                an apartment or a large building\n\n                * `HOUSENUMBER/BUILDING` - Coverage down to house number. For\n                example, the address where a house or building may be located\n\n                * `STREET` - Coverage down to street. This means that we can\n                verify that an street exists in a city, state, country\n\n                * `LOCALITY` - Coverage down to city, state, or village or\n                province. This means that we can verify that a city, village,\n                province, or state exists in a country. Countries differ in how\n                they define what is a province, state, city, village, etc. This\n                attempts to group eveyrthing together.\n\n                * `SPARSE` - Some addresses for this country exist in our\n                databases\n            deliverability:\n              type: string\n              enum:\n                - deliverable\n                - deliverable_missing_info\n                - undeliverable\n                - no_match\n              description: \u003e\n                Summarizes the deliverability of the `intl_verification` object.\n                Possible values are:\n\n                * `deliverable` — The address is deliverable.\n\n                * `deliverable_missing_info` — The address is missing some\n                information, but is most likely deliverable.\n\n                * `undeliverable` — The address is most likely not deliverable.\n                Some components of the address (such as city or postal code) may\n                have been found.\n\n                * `no_match` — This address is not deliverable. No matching\n                street could be found within the city or postal code.\n            status:\n              type: string\n              enum:\n                - LV4\n                - LV3\n                - LV2\n                - LV1\n                - LF4\n                - LF3\n                - LF2\n                - LF1\n                - LM4\n                - LM3\n                - LM2\n                - LU1\n              description: \u003e\n                The status level for the country. This represents the maximum\n                level of\n\n                accuracy an input address can be verified to.\n\n\n                * `LV4` - Verified. The input data is correct. All input data\n                was able to match in databases.\n\n                * `LV3` - Verified. The input data is correct. All input data\n                was able to match in databases \u003cem\u003eafter\u003c/em\u003e some or all\n                elements were standarized. The input data may also be using\n                outdated city, state, or country names.\n\n                * `LV2` - Verified. The input data is correct although some\n                input data is unverifiable due to incomplete data.\n\n                * `LV1` - Verified. The input data is acceptable but in an\n                attempt to standarize user input, errors were introduced.\n\n                * `LF4` - Fixed. The input data is matched and fixed. (Example:\n                Brighon, UK -\u003e Brighton, UK)\n\n                * `LF3` - Fixed. The input data is matched and fixed but some\n                elements such as Subbuilding number and house number cannot be\n                checked.\n\n                * `LF2` - Fixed. The input data is matched but some elements\n                such as Street cannot be checked.\n\n                * `LF1` - Fixed. The input data is acceptable but in an attempt\n                to standarize user input, errors were introduced.\n\n                * `LM4` - Missing Info. The input data cannot be corrected\n                completely.\n\n                * `LM3` - Missing Info. The input data cannot be corrected\n                completely and there were multiple matches found in databases.\n\n                * `LM2` - Missing Info. The input data cannot be corrected\n                completely and only some elements were found.\n\n                * `LU1` - Unverified. The input data cannot be corrected or\n                matched.\n            components:\n              $ref: '#/components/schemas/intl_components'\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - intl_verification\n              default: intl_verification\n    intl_verifications:\n      type: object\n      required:\n        - addresses\n        - errors\n      properties:\n        addresses:\n          type: array\n          items:\n            oneOf:\n              - $ref: '#/components/schemas/intl_verification'\n              - $ref: '#/components/schemas/error'\n        errors:\n          description: \u003e-\n            Indicates whether any errors occurred during the verification\n            process.\n          type: boolean\n    card_description:\n      type: string\n      description: Description of the card.\n      maxLength: 255\n      nullable: true\n    card_base:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/card_description'\n        size:\n          description: The size of the card\n          enum:\n            - 3.375x2.125\n            - 2.125x3.375\n          type: string\n          default: 2.125x3.375\n    card_id:\n      type: string\n      description: Unique identifier prefixed with `card_`.\n      pattern: ^card_[a-zA-Z0-9]+$\n    thumbnail:\n      type: object\n      properties:\n        small:\n          $ref: '#/components/schemas/signed_link'\n        medium:\n          $ref: '#/components/schemas/signed_link'\n        large:\n          $ref: '#/components/schemas/signed_link'\n    card:\n      allOf:\n        - $ref: '#/components/schemas/lob_base'\n        - $ref: '#/components/schemas/card_base'\n        - required:\n            - description\n        - type: object\n          required:\n            - id\n            - url\n            - auto_reorder\n            - reorder_quantity\n            - raw_url\n            - front_original_url\n            - back_original_url\n            - thumbnails\n            - available_quantity\n            - pending_quantity\n            - status\n            - orientation\n            - threshold_amount\n            - object\n          properties:\n            id:\n              $ref: '#/components/schemas/card_id'\n            url:\n              description: The signed link for the card.\n              maxLength: 2083\n              minLength: 1\n              type: string\n              format: uri\n            auto_reorder:\n              description: True if the cards should be auto-reordered.\n              type: boolean\n              default: false\n            reorder_quantity:\n              description: The number of cards to be reordered.\n              type: integer\n              nullable: true\n            raw_url:\n              description: The raw URL of the card.\n              maxLength: 2083\n              minLength: 1\n              type: string\n              format: uri\n            front_original_url:\n              description: The original URL of the front template.\n              maxLength: 2083\n              minLength: 1\n              type: string\n              format: uri\n            back_original_url:\n              description: The original URL of the back template.\n              maxLength: 2083\n              minLength: 1\n              type: string\n              format: uri\n            thumbnails:\n              type: array\n              items:\n                $ref: '#/components/schemas/thumbnail'\n            available_quantity:\n              description: The available quantity of cards.\n              type: integer\n              default: 0\n            pending_quantity:\n              description: The pending quantity of cards.\n              type: integer\n              default: 0\n            status:\n              title: The status of the card.\n              enum:\n                - processed\n                - rendered\n              type: string\n            orientation:\n              description: The orientation of the card.\n              enum:\n                - horizontal\n                - vertical\n              type: string\n              default: horizontal\n            threshold_amount:\n              description: The threshold amount of the card\n              type: integer\n              default: 0\n            object:\n              description: object\n              enum:\n                - card\n              type: string\n              default: card\n    remote_file_url:\n      type: string\n      description: \u003e\n        The location of a remote file. Remote URLs have a 20 MB file size limit\n        and must be downloaded within 40 seconds.\n      pattern: ^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$\n    local_file_path:\n      type: string\n      description: The path to a local file.\n      pattern: ^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf|png|jpg)$\n    card_editable:\n      allOf:\n        - $ref: '#/components/schemas/card_base'\n        - type: object\n          required:\n            - front\n          properties:\n            front:\n              description: A PDF template for the front of the card\n              oneOf:\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n            back:\n              description: A PDF template for the back of the card\n              oneOf:\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n              default: \u003e-\n                https://s3.us-west-2.amazonaws.com/public.lob.com/assets/card_blank_horizontal.pdf\n    card_updatable:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/card_description'\n        auto_reorder:\n          description: Allows for auto reordering\n          type: boolean\n        reorder_quantity:\n          description: \u003e-\n            The quantity of items to be reordered (only required when\n            auto_reorder is true).\n          type: number\n          minimum: 10000\n          maximum: 10000000\n    card_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/card_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    co_id:\n      type: string\n      description: Unique identifier prefixed with `co_`.\n      pattern: ^co_[a-zA-Z0-9]+$\n    card_order:\n      allOf:\n        - $ref: '#/components/schemas/lob_base'\n        - type: object\n          properties:\n            id:\n              $ref: '#/components/schemas/co_id'\n            card_id:\n              $ref: '#/components/schemas/card_id'\n            status:\n              description: The status of the card order.\n              enum:\n                - pending\n                - printing\n                - available\n                - cancelled\n                - depleted\n              type: string\n            inventory:\n              description: The inventory of the card order.\n              type: number\n              default: 0\n            quantity_ordered:\n              description: The quantity of cards ordered\n              type: number\n              default: 0\n            unit_price:\n              description: The unit price for the card order.\n              type: number\n              default: 0\n            cancelled_reason:\n              description: The reason for cancellation.\n              type: string\n            availability_date:\n              type: string\n              format: date-time\n              description: \u003e-\n                A timestamp in ISO 8601 format of the date the resource was\n                created.\n            expected_availability_date:\n              type: string\n              format: date-time\n              description: The fixed deadline for the cards to be printed.\n    card_order_editable:\n      type: object\n      required:\n        - quantity\n      properties:\n        quantity:\n          type: integer\n          description: The quantity of cards in the order (minimum 10,000).\n          minimum: 10000\n          maximum: 10000000\n    chk_id:\n      type: string\n      description: Unique identifier prefixed with `chk_`.\n      pattern: ^chk_[a-zA-Z0-9]+$\n    merge_variables:\n      type: object\n      description: \u003e-\n        You can input a merge variable payload object to your template to render\n        dynamic content. For example, if you have a template like:\n        `{{variable_name}}`, pass in `{\"variable_name\": \"Harry\"}` to render\n        `Harry`. `merge_variables` must be an object. Any type of value is\n        accepted as long as the object is valid JSON; you can use `strings`,\n        `numbers`, `booleans`, `arrays`, `objects`, or `null`. The max length of\n        the object is 25,000 characters. If you call `JSON.stringify` on your\n        object, it can be no longer than 25,000 characters. Your variable names\n        cannot contain any whitespace or any of the following special\n        characters: `!`, `\"`, `#`, `%`, `\u0026`, `'`, `(`, `)`, `*`, `+`, `,`, `/`,\n        `;`, `\u003c`, `=`, `\u003e`, `@`, `[`, `\\`, `]`, `^`, `` ` ``, `{`, `|`, `}`,\n        `~`. More instructions can be found in  \u003ca\n        href=\"https://help.lob.com/en_US/print_mail/dynamic-personalization#using-html-and-merge-variables\"\n        target=\"_blank\"\u003eour guide to using html and merge variables\u003c/a\u003e.\n        Depending on your \u003ca href=\"https://dashboard.lob.com/#/settings/account\"\n        target=\"_blank\"\u003eMerge Variable strictness\u003c/a\u003e setting, if you define\n        variables in your HTML but do not pass them here, you will either\n        receive an error or the variable will render as an empty string.\n      maxLength: 25000\n      nullable: true\n    send_date:\n      type: string\n      description: \u003e-\n        A timestamp in ISO 8601 format which specifies a date after the current\n        time and up to 180 days in the future to send the letter off for\n        production. Setting a send date overrides the default [cancellation\n        window](#section/Cancellation-Windows) applied to the mailpiece. Until\n        the `send_date` has passed, the mailpiece can be canceled. If a date in\n        the format `2017-11-01` is passed, it will evaluate to midnight UTC of\n        that date (`2017-11-01T00:00:00.000Z`). If a datetime is passed, that\n        exact time will be used. A `send_date` passed with no time zone will\n        default to UTC, while a `send_date` passed with a time zone will be\n        converted to UTC.\n      anyOf:\n        - format: date-time\n        - format: date\n    editable_no_mailtype:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        metadata:\n          $ref: '#/components/schemas/metadata'\n        merge_variables:\n          $ref: '#/components/schemas/merge_variables'\n        send_date:\n          $ref: '#/components/schemas/send_date'\n    check_base:\n      allOf:\n        - $ref: '#/components/schemas/editable_no_mailtype'\n        - type: object\n          properties:\n            mail_type:\n              description: Checks must be sent `usps_first_class`\n              type: string\n              enum:\n                - usps_first_class\n              default: usps_first_class\n            memo:\n              description: Text to include on the memo line of the check.\n              type: string\n              maxLength: 40\n              nullable: true\n            check_number:\n              description: \u003e-\n                An integer that designates the check number.\n\n                If `check_number` is not provided, checks created from a new\n                `bank_account` will start at `10000` and increment with each\n                check created with the `bank_account`.\n\n                A provided `check_number` overrides the defaults. Subsequent\n                checks created with the same `bank_account` will increment from\n                the provided check number.\n              type: integer\n              minimum: 1\n              maximum: 500000000\n            message:\n              description: \u003e-\n                Max of 400 characters to be included at the bottom of the check\n                page.\n              type: string\n              maxLength: 400\n    from_us:\n      type: object\n      properties:\n        from:\n          $ref: '#/components/schemas/address_us'\n    tmpl_id:\n      type: string\n      description: \u003e-\n        Unique identifier prefixed with `tmpl_`. ID of a saved [HTML\n        template](#section/HTML-Templates).\n      pattern: ^tmpl_[a-zA-Z0-9]+$\n    vrsn_id:\n      type: string\n      description: Unique identifier prefixed with `vrsn_`.\n      pattern: ^vrsn_[a-zA-Z0-9]+$\n    expected_delivery_date:\n      type: string\n      description: \u003e-\n        A date in YYYY-MM-DD format of the mailpiece's expected delivery date\n        based on its `send_date`.\n      format: date\n    evnt_id:\n      type: string\n      description: Unique identifier prefixed with `evnt_`.\n      pattern: ^evnt_[a-zA-Z0-9]+$\n    tracking_event_base:\n      type: object\n      description: \u003e-\n        As mail pieces travel through the mail stream, USPS scans their unique\n        barcodes, and Lob processes these mail scans to generate tracking\n        events.\n      required:\n        - id\n        - date_created\n        - date_modified\n        - object\n      properties:\n        id:\n          $ref: '#/components/schemas/evnt_id'\n        time:\n          type: string\n          format: date-time\n          description: \u003e-\n            A timestamp in ISO 8601 format of the date USPS registered the\n            event.\n        date_created:\n          $ref: '#/components/schemas/date_created'\n        date_modified:\n          $ref: '#/components/schemas/date_modified'\n        object:\n          allOf:\n            - $ref: '#/components/schemas/object'\n            - type: string\n              enum:\n                - tracking_event\n              default: tracking_event\n    tracking_event_normal:\n      allOf:\n        - $ref: '#/components/schemas/tracking_event_base'\n        - type: object\n          required:\n            - type\n            - name\n          properties:\n            type:\n              description: non-Certified postcards, self mailers, letters, and checks\n              type: string\n              enum:\n                - normal\n            name:\n              type: string\n              enum:\n                - In Transit\n                - In Local Area\n                - Processed for Delivery\n                - Re-Routed\n                - Returned to Sender\n                - Mailed\n              description: \u003e\n                Name of tracking event (for normal postcards, self mailers,\n                letters, and checks):\n\n                  * `In Transit` - The mailpiece is being processed at the entry/origin facility.\n\n                  * `In Local Area` - The mailpiece is being processed at the destination facility.\n\n                  * `Processed for Delivery` - The mailpiece has been greenlit for\n                    delivery at the recipient's nearest postal facility. The mailpiece\n                    should reach the mailbox within 1 business day of this tracking\n                    event.\n\n                  * `Re-Routed` - The mailpiece is re-routed due to recipient change of\n                    address, address errors, or USPS relabeling of barcode/ID tag\n                    area.\n\n                  * `Returned to Sender` - The mailpiece is being returned to sender due\n                    to barcode, ID tag area, or address errors.\n\n                  * `Mailed` - The mailpiece has been handed off to and accepted by USPS\n                    and is en route. \u003ca href=\"https://help.lob.com/print_mail/mail-data-tracking?from_search=85693657#mail-tracking-events\" target=\"_blank\"\u003eMore about\n                    Mailed.\u003c/a\u003e\n                    Note this data is only available in Enterprise editions of\n                    Lob. \u003ca href=\"https://lob.com/support/contact#contact\" target=\"_blank\"\u003eContact Sales\u003c/a\u003e if\n                    you want access to this feature.\n\n                \u003ca\n                href=\"https://help.lob.com/print_mail/mail-data-tracking?from_search=85693657#what-is-mail-tracking\"\n                target=\"_blank\"\u003eMore about tracking\u003c/a\u003e\n            details:\n              description: Will be `null` for `type=normal` events\n              type: object\n              enum:\n                - null\n              nullable: true\n            location:\n              type: string\n              description: \u003e\n                The zip code in which the scan event occurred. Null for `Mailed`\n                events.\n              nullable: true\n    check:\n      allOf:\n        - $ref: '#/components/schemas/check_base'\n        - $ref: '#/components/schemas/from_us'\n        - type: object\n          required:\n            - bank_account\n            - id\n            - amount\n            - to\n            - url\n            - carrier\n            - date_created\n            - date_modified\n            - object\n          properties:\n            id:\n              $ref: '#/components/schemas/chk_id'\n            amount:\n              description: The payment amount to be sent in US dollars.\n              type: number\n              format: float\n              multipleOf: 0.01\n              maximum: 999999.99\n            bank_account:\n              $ref: '#/components/schemas/bank_account'\n            check_bottom_template_id:\n              allOf:\n                - description: \u003e-\n                    The unique ID of the HTML template used for the check\n                    bottom.\n                - $ref: '#/components/schemas/tmpl_id'\n            attachment_template_id:\n              allOf:\n                - description: The unique ID of the HTML template used for the attachment.\n                - $ref: '#/components/schemas/tmpl_id'\n            check_bottom_template_version_id:\n              allOf:\n                - description: \u003e-\n                    The unique ID of the specific version of the HTML template\n                    used for the check bottom.\n                  type: string\n                - $ref: '#/components/schemas/vrsn_id'\n            attachment_template_version_id:\n              allOf:\n                - description: \u003e-\n                    The unique ID of the specific version of the HTML template\n                    used for the attachment.\n                  type: string\n                - $ref: '#/components/schemas/vrsn_id'\n            url:\n              allOf:\n                - description: A [signed link](#section/Asset-URLs) to the rendered check.\n                - $ref: '#/components/schemas/signed_link'\n            to:\n              $ref: '#/components/schemas/address_us'\n            carrier:\n              type: string\n              enum:\n                - USPS\n              default: USPS\n            thumbnails:\n              type: array\n              items:\n                $ref: '#/components/schemas/thumbnail'\n            expected_delivery_date:\n              $ref: '#/components/schemas/expected_delivery_date'\n            tracking_events:\n              description: \u003e-\n                An array of tracking_event objects ordered by ascending `time`.\n                Will not be populated for checks created in test mode.\n              type: array\n              items:\n                $ref: '#/components/schemas/tracking_event_normal'\n              nullable: true\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - check\n              default: check\n            date_created:\n              $ref: '#/components/schemas/date_created'\n            date_modified:\n              $ref: '#/components/schemas/date_modified'\n            deleted:\n              $ref: '#/components/schemas/deleted'\n    check_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/chk_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    mail_type:\n      type: string\n      enum:\n        - usps_first_class\n        - usps_standard\n      description: \u003e\n        A string designating the mail postage type:\n\n        * `usps_first_class` - (default)\n\n        * `usps_standard` - a \u003ca\n        href=\"https://lob.com/pricing/print-mail#compare\"\n        target=\"_blank\"\u003echeaper option\u003c/a\u003e which is\n\n        less predictable and takes longer to deliver. `usps_standard` cannot be\n        used with `4x6`\n\n        postcards or for any postcards sent outside of the United States.\n      default: usps_first_class\n    inline_address_us:\n      allOf:\n        - $ref: '#/components/schemas/address_editable_us'\n        - type: object\n          required:\n            - address_line1\n            - address_city\n            - address_state\n            - address_zip\n    check_input_to:\n      type: object\n      properties:\n        to:\n          description: \u003e-\n            Must either be an address ID or an inline object with correct\n            address parameters. Checks cannot be sent internationally\n            (`address_country` must be `US`). The total string of the sum of\n            `address_line1` and `address_line2` must be no longer than 50\n            characters combined. If an object is used, an address will be\n            created, corrected, and standardized for free whenever possible\n            using our US Address Verification engine, and returned back with an\n            ID. Depending on your \u003ca\n            href=\"https://dashboard.lob.com/#/settings/editions\"\n            target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e, addresses may also be run\n            through [National Change of Address\n            (NCOALink)](#tag/National-Change-of-Address). If an address used\n            does not meet your account’s \u003ca\n            href=\"https://dashboard.lob.com/#/settings/account\"\n            target=\"_blank\"\u003eUS Mail Strictness Setting\u003c/a\u003e, the request will\n            fail. \u003ca\n            href=\"https://help.lob.com/en_US/print_mail/all-about-addresses#standardization-verification\"\n            target=\"_blank\"\u003eMore about verification of mailing addresses\u003c/a\u003e\n          oneOf:\n            - $ref: '#/components/schemas/adr_id'\n            - $ref: '#/components/schemas/inline_address_us'\n    html_string:\n      type: string\n      description: An HTML string of under 10,000 characters.\n      maxLength: 10000\n      pattern: \u003c\n    check_bottom:\n      description: \u003e-\n        The artwork to use on the bottom of the check page.\n\n\n        Notes:\n\n        - HTML merge variables should not include delimiting whitespace.\n\n        - PDF, PNG, and JPGs must be sized at 8.5\"x11\" at 300 DPI, while\n        supplied HTML will be rendered and trimmed to fit on a 8.5\"x11\" page.\n\n        - The check bottom will always be printed in black \u0026 white.\n\n        - Must conform to \u003ca\n        href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/check_bottom_template.pdf\"\n        target=\"_blank\"\u003ethis template\u003c/a\u003e.\n\n\n        Need more help? Consult our [HTML examples](#section/HTML-Examples).\n      oneOf:\n        - $ref: '#/components/schemas/html_string'\n        - $ref: '#/components/schemas/tmpl_id'\n        - $ref: '#/components/schemas/remote_file_url'\n        - $ref: '#/components/schemas/local_file_path'\n    billing_group_id:\n      type: string\n      description: \u003e-\n        An optional string with the billing group ID to tag your usage with. Is\n        used for billing purposes. Requires special activation to use. See \u003ca\n        href=\"#tag/Billing-Groups\"\u003eBilling Group API\u003c/a\u003e for more information.\n    check_editable_props:\n      allOf:\n        - $ref: '#/components/schemas/check_base'\n        - $ref: '#/components/schemas/check_input_to'\n        - type: object\n          required:\n            - bank_account\n            - to\n            - from\n            - amount\n          properties:\n            from:\n              description: \u003e-\n                Must either be an address ID or an inline object with correct\n                address parameters. Must either be an address ID or an inline\n                object with correct address parameters. All addresses will be\n                standardized into uppercase without being modified by\n                verification.\n              oneOf:\n                - $ref: '#/components/schemas/adr_id'\n                - $ref: '#/components/schemas/inline_address_us'\n            bank_account:\n              allOf:\n                - $ref: '#/components/schemas/bank_id_no_description'\n                - type: string\n                  description: The id for a verified bank account.\n            amount:\n              description: \u003e-\n                The payment amount to be sent in US dollars. Amounts will be\n                rounded to two decimal places.\n              type: number\n              format: float\n              maximum: 999999.99\n            logo:\n              description: \u003e-\n                Accepts a remote URL or local file upload to an image to print\n                (in grayscale) in the upper-left corner of your check. Image\n                requirements:\n\n                  * RGB or CMYK\n\n                  * square\n\n                  * minimum size: 100px x 100px\n\n                  * transparent backgrond\n\n                  * `png` or `jpg`\n              oneOf:\n                - type: string\n                  pattern: ^https://[-a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$\n                - type: string\n                  pattern: ^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(png|jpg)$\n            check_bottom:\n              $ref: '#/components/schemas/check_bottom'\n            attachment:\n              description: \u003e-\n                A document to include with the check.\n\n\n                Notes:\n\n                - HTML merge variables should not include delimiting whitespace.\n\n                - All pages of PDF, PNG, and JPGs must be sized at 8.5\"x11\" at\n                300 DPI, while supplied HTML will be rendered and trimmed to as\n                many 8.5\"x11\" pages as necessary.\n\n                - If a PDF is provided, it must be 6 pages or fewer.\n\n                - The attachment will be printed double-sided in black \u0026 white\n                and will be included in the envelope after the check page.\n\n                - Please follow these \u003ca\n                href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/check_attachment_template.pdf\"\n                target=\"_blank\"\u003edesign guidelines\u003c/a\u003e.\n\n\n                See \u003ca href=\"https://lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred. Need more\n                help? Consult our [HTML examples](#section/HTML-Examples).\n              oneOf:\n                - $ref: '#/components/schemas/html_string'\n                - $ref: '#/components/schemas/tmpl_id'\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n            billing_group_id:\n              $ref: '#/components/schemas/billing_group_id'\n    check_editable:\n      oneOf:\n        - title: words at check bottom\n          allOf:\n            - required:\n                - message\n            - $ref: '#/components/schemas/check_editable_props'\n        - title: image at check bottom\n          allOf:\n            - required:\n                - check_bottom\n            - $ref: '#/components/schemas/check_editable_props'\n    intl_autocompletions_writable:\n      type: object\n      required:\n        - address_prefix\n        - country\n      properties:\n        address_prefix:\n          type: string\n          description: |\n            Only accepts numbers and street names in an alphanumeric format.\n        city:\n          type: string\n          description: \u003e\n            An optional city input used to filter suggestions. Case insensitive\n            and does not match partial abbreviations.\n        state:\n          type: string\n          description: \u003e\n            An optional state input used to filter suggestions. Case insensitive\n            and does not match partial abbreviations.\n        zip_code:\n          type: string\n          description: \u003e\n            An optional Zip Code input used to filter suggestions. Matches\n            partial entries.\n        country:\n          $ref: '#/components/schemas/country_extended'\n    intl_auto_id:\n      type: string\n      description: Unique identifier prefixed with `intl_auto_`.\n      pattern: ^intl_auto_[a-zA-Z0-9]+$\n    intl_suggestions:\n      type: object\n      required:\n        - primary_number_range\n        - primary_line\n        - city\n        - country\n        - state\n        - zip_code\n      properties:\n        primary_number_range:\n          type: string\n          description: \u003e\n            The primary number range of the address that identifies a building\n            at street level.\n        primary_line:\n          type: string\n          description: \u003e\n            The primary delivery line (usually the street address) of the\n            address.\n\n            Combination of the following applicable `components` (primary number\n            \u0026\n\n            secondary information may be missing or inaccurate):\n\n            * `primary_number`\n\n            * `street_predirection`\n\n            * `street_name`\n\n            * `street_suffix`\n\n            * `street_postdirection`\n\n            * `secondary_designator`\n\n            * `secondary_number`\n\n            * `pmb_designator`\n\n            * `pmb_number`\n        city:\n          $ref: '#/components/schemas/city'\n        country:\n          $ref: '#/components/schemas/country_extended'\n        state:\n          $ref: '#/components/schemas/state'\n        zip_code:\n          $ref: '#/components/schemas/postal_code'\n    intl_autocompletions:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/intl_auto_id'\n        suggestions:\n          type: array\n          description: |\n            An array of objects representing suggested addresses.\n          minItems: 0\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/intl_suggestions'\n    single_line_address_intl:\n      type: object\n      required:\n        - address\n        - country\n      properties:\n        address:\n          type: string\n          description: |\n            The entire address in one string (e.g., \"370 Water St C1N 1C4\").\n          maxLength: 500\n        country:\n          $ref: '#/components/schemas/country_extended'\n    intl_verification_writable:\n      oneOf:\n        - $ref: '#/components/schemas/multiple_components_intl'\n        - $ref: '#/components/schemas/single_line_address_intl'\n    ltr_id:\n      type: string\n      description: Unique identifier prefixed with `ltr_`.\n      pattern: ^ltr_[a-zA-Z0-9]+$\n    tracking_event_details:\n      type: object\n      required:\n        - event\n        - description\n        - action_required\n      properties:\n        event:\n          type: string\n          enum:\n            - package_accepted\n            - package_arrived\n            - package_departed\n            - package_processing\n            - package_processed\n            - package_in_local_area\n            - delivery_scheduled\n            - out_for_delivery\n            - pickup_available\n            - delivered\n            - package_forwarded\n            - returned_to_sender\n            - address_issue\n            - contact_carrier\n            - delayed\n            - delivery_attempted\n            - delivery_rescheduled\n            - location_inaccessible\n            - notice_left\n            - package_damaged\n            - package_disposed\n            - package_held\n            - package_lost\n            - package_unclaimed\n            - package_undeliverable\n            - reschedule_delivery\n            - other\n          description: \u003e\n            Find the full table [here](#tag/Tracking-Events). A detailed\n            substatus about the event:\n\n            * `package_accepted` - Package has been accepted into the carrier\n            network for delivery.\n\n            * `package_arrived` - Package has arrived at an intermediate\n            location in the carrier network.\n\n            * `package_departed` - Package has departed from an intermediate\n            location in the carrier network.\n\n            * `package_processing` - Package is processing at an intermediate\n            location in the carrier network.\n\n            * `package_processed` - Package has been processed at an\n            intermediate location.\n\n            * `package_in_local_area` - Package is at a location near the end\n            destination.\n\n            * `delivery_scheduled` - Package is scheduled for delivery.\n\n            * `out_for_delivery` - Package is out for delivery.\n\n            * `pickup_available` - Package is available for pickup at carrier\n            location.\n\n            * `delivered` - Package has been delivered.\n\n            * `package_forwarded` - Package has been forwarded.\n\n            * `returned_to_sender` - Package is to be returned to sender.\n\n            * `address_issue` - Address information is incorrect. Contact\n            carrier to ensure delivery.\n\n            * `contact_carrier` - Contact the carrier for more information.\n\n            * `delayed` - Delivery of package is delayed.\n\n            * `delivery_attempted` - Delivery of package has been attempted.\n            Contact carrier to ensure delivery.\n\n            * `delivery_rescheduled` - Delivery of package has been rescheduled.\n\n            * `location_inaccessible` - Delivery location inaccessible to\n            carrier. Contact carrier to ensure delivery.\n\n            * `notice_left` - Carrier left notice during attempted delivery.\n            Follow carrier instructions on notice.\n\n            * `package_damaged` - Package has been damaged. Contact carrier for\n            more details.\n\n            * `package_disposed` - Package has been disposed.\n\n            * `package_held` - Package held at carrier location. Contact carrier\n            for more details.\n\n            * `package_lost` - Package has been lost. Contact carrier for more\n            details.\n\n            * `package_unclaimed` - Package is unclaimed.\n\n            * `package_undeliverable` - Package is not able to be delivered.\n\n            * `reschedule_delivery` - Contact carrier to reschedule delivery.\n\n            * `other` - Unrecognized carrier status.\n        description:\n          type: string\n          description: The description as listed in the description for event.\n        notes:\n          type: string\n          description: Event-specific notes from USPS about the tracking event.\n        action_required:\n          type: boolean\n          description: \u003e\n            `true` if action is required by the end recipient, `false`\n            otherwise.\n    tracking_event_certified:\n      allOf:\n        - $ref: '#/components/schemas/tracking_event_base'\n        - type: object\n          required:\n            - type\n            - name\n          properties:\n            type:\n              description: a Certified letter tracking event\n              type: string\n              enum:\n                - certified\n            name:\n              type: string\n              enum:\n                - Mailed\n                - In Transit\n                - In Local Area\n                - Processed for Delivery\n                - Pickup Available\n                - Delivered\n                - Re-Routed\n                - Returned to Sender\n                - Issue\n              description: \u003e\n                Name of tracking event for Certified letters. Letters sent with\n                USPS Certified Mail are fully tracked by USPS, therefore their\n                tracking events have an additional details object with more\n                detailed information about the tracking event. Some certified\n                tracking event names have multiple meanings, noted in the list\n                here. See the description of the details object for the full set\n                of combined certified tracking event name meanings.\n\n                  * `Mailed` - Package has been accepted into the carrier network for delivery.\n\n                  * `In Transit` - Maps to four distinct stages of transit.\n\n                  * `In Local Area` - Package is at a location near the end destination.\n\n                  * `Processed for Delivery` - Maps to two distinct stages of delivery.\n\n                  * `Pickup Available` - Package is available for pickup at carrier location.\n\n                  * `Delivered` - Package has been delivered.\n\n                  * `Re-Routed` - Package has been forwarded.\n\n                  * `Returned to Sender` - Package is to be returned to sender.\n\n                  * `Issue` - Maps to (at least) 15 possible issues, some of which are actionable.\n            details:\n              $ref: '#/components/schemas/tracking_event_details'\n            location:\n              type: string\n              description: \u003e\n                The zip code in which the event occurred if it exists, otherwise\n                will be the name of a Regional Distribution Center if it exists,\n                otherwise will be null.\n              nullable: true\n    inline_address_intl:\n      allOf:\n        - $ref: '#/components/schemas/address_editable_intl'\n        - type: object\n          required:\n            - address_line1\n            - address_country\n        - type: object\n          oneOf:\n            - required:\n                - address_city\n                - address_state\n            - required:\n                - address_zip\n    inline_address:\n      oneOf:\n        - $ref: '#/components/schemas/inline_address_us'\n        - $ref: '#/components/schemas/inline_address_intl'\n    return_address:\n      description: \u003e-\n        Specifies the address the return envelope will be sent back to. This is\n        an optional argument that is available if an account is signed up for\n        the return envelope tracking beta, and has `return_envelope`, and\n        `perforated_page` fields populated in the API request.\n      oneOf:\n        - $ref: '#/components/schemas/adr_id'\n        - $ref: '#/components/schemas/inline_address'\n    return_envelope:\n      type: object\n      properties:\n        id:\n          type: string\n          description: The unique ID of the Return Envelope\n        alias:\n          type: string\n          description: A quick reference name for the Return Envelope\n        url:\n          type: string\n          description: The url of the  return envelope\n        object:\n          type: string\n    letter_base:\n      allOf:\n        - $ref: '#/components/schemas/editable_no_mailtype'\n        - type: object\n          required:\n            - color\n          properties:\n            mail_type:\n              $ref: '#/components/schemas/mail_type'\n            color:\n              type: boolean\n              description: \u003e-\n                Set this key to `true` if you would like to print in color. Set\n                to `false` if you would like to print in black and white.\n            double_sided:\n              type: boolean\n              description: \u003e-\n                Set this attribute to `true` for double sided printing, or\n                `false` for for single sided printing. Defaults to `true`.\n              default: true\n            address_placement:\n              type: string\n              enum:\n                - top_first_page\n                - insert_blank_page\n                - bottom_first_page_center\n                - bottom_first_page\n              description: \u003e\n                Specifies the location of the address information that will show\n                through the double-window envelope. To see how this will impact\n                your letter design, view our letter template.\n                  * `top_first_page` - (default) print address information at the top of your provided first page\n                  * `insert_blank_page` - insert a blank address page at the beginning of your file (you will be charged for the extra page)\n                  * `bottom_first_page_center` - **(deprecation planned within a few months)** print address information at the bottom center of your provided first page\n                  * `bottom_first_page` - print address information at the bottom of your provided first page\n              default: top_first_page\n            return_envelope:\n              oneOf:\n                - type: boolean\n                - $ref: '#/components/schemas/return_envelope'\n              description: \u003e-\n                Indicates if a return envelope is requested for the letter. The\n                value corresponding to this field is by default a boolean. But\n                if the account is signed up for custom return envelopes, the\n                value is of type string and is `no_9_single_window` for a\n                standard return envelope and a custom `return_envelope_id` for\n                non-standard return envelopes.\n\n\n                To include a return envelope with your letter, set to `true` and\n                specify the `perforated_page`. See \u003ca\n                href=\"https://www.lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred.\n              default: false\n            perforated_page:\n              type: integer\n              description: \u003e-\n                Required if `return_envelope` is `true`. The number of the page\n                that should be perforated for use with the return envelope. Must\n                be greater than or equal to `1`. The blank page added by\n                `address_placement=insert_blank_page` will be ignored when\n                considering the perforated page number. To see how perforation\n                will impact your letter design, view our \u003ca\n                href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\"\n                target=\"_blank\"\u003eperforation guide\u003c/a\u003e.\n              nullable: true\n            custom_envelope:\n              type: object\n              description: \u003e-\n                A nested custom envelope object containing more information\n                about the custom envelope used or `null` if a custom envelope\n                was not used.\n\n\n                Accepts an envelope ID for any customized envelope with\n                available inventory. If no inventory is available for the\n                specified ID, the letter will not be sent, and an error will be\n                returned. If the letter has more than 6 sheets, it will be sent\n                in a blank flat envelope. Custom envelopes may be created and\n                ordered from the dashboard. This feature is exclusive to certain\n                customers. Upgrade to the appropriate \u003ca\n                href=\"https://dashboard.lob.com/#/settings/editions\"\n                target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n              required:\n                - id\n                - url\n                - object\n              properties:\n                id:\n                  type: string\n                  description: The unique identifier of the custom envelope used.\n                  maxLength: 40\n                url:\n                  type: string\n                  description: The url of the envelope asset used.\n                object:\n                  type: string\n                  description: Value is resource type.\n                  enum:\n                    - envelope\n                  default: envelope\n              nullable: true\n    generated:\n      type: object\n      required:\n        - to\n        - carrier\n      properties:\n        to:\n          $ref: '#/components/schemas/address'\n        carrier:\n          type: string\n          enum:\n            - USPS\n          default: USPS\n        thumbnails:\n          type: array\n          items:\n            $ref: '#/components/schemas/thumbnail'\n        expected_delivery_date:\n          $ref: '#/components/schemas/expected_delivery_date'\n        date_created:\n          $ref: '#/components/schemas/date_created'\n        date_modified:\n          $ref: '#/components/schemas/date_modified'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    from:\n      type: object\n      properties:\n        from:\n          $ref: '#/components/schemas/address'\n    letter_generated_base:\n      allOf:\n        - $ref: '#/components/schemas/generated'\n        - $ref: '#/components/schemas/from'\n        - type: object\n          required:\n            - id\n            - from\n          properties:\n            id:\n              $ref: '#/components/schemas/ltr_id'\n            template_id:\n              allOf:\n                - description: The unique ID of the HTML template used for the letter.\n                - $ref: '#/components/schemas/tmpl_id'\n            template_version_id:\n              allOf:\n                - description: \u003e-\n                    The unique ID of the specific version of the HTML template\n                    used for the letter.\n                  type: string\n                - $ref: '#/components/schemas/vrsn_id'\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - letter\n              default: letter\n    certified:\n      allOf:\n        - type: object\n          required:\n            - extra_service\n            - tracking_events\n          properties:\n            extra_service:\n              type: string\n              enum:\n                - certified\n                - certified_return_receipt\n              description: \u003e\n                Add an extra service to your letter. See \u003ca\n                href=\"https://www.lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred.\n                  * `certified` - track and confirm delivery for domestic destinations. An extra sheet (1 PDF page single-sided or 2 PDF pages double-sided) is added to the beginning of your letter for address and barcode information. See here for templates: \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_template.pdf\" target=\"_blank\"\u003e#10 envelope\u003c/a\u003e and \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_flat_template.pdf\" target=\"_blank\"\u003eflat envelope\u003c/a\u003e (used for letters over 6 pages single-sided or 12 pages double-sided). You will not be charged for this extra sheet.\n                  * `certified_return_receipt` - request an electronic copy of the recipient's signature to prove delivery of your certified letter\n            tracking_number:\n              type: string\n              description: |-\n                The tracking number will be here immediately upon creation.\n                Dummy tracking numbers are created in test mode.\n              nullable: true\n            tracking_events:\n              description: \u003e-\n                An array of certified tracking events ordered by ascending\n                `time`. Not populated in test mode.\n              type: array\n              items:\n                $ref: '#/components/schemas/tracking_event_certified'\n            return_address:\n              $ref: '#/components/schemas/return_address'\n        - $ref: '#/components/schemas/letter_base'\n        - $ref: '#/components/schemas/letter_generated_base'\n    registered:\n      allOf:\n        - type: object\n          required:\n            - extra_service\n          properties:\n            extra_service:\n              type: string\n              enum:\n                - registered\n              description: \u003e\n                Add an extra service to your letter. See \u003ca\n                href=\"https://www.lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred.\n                  * registered - provides tracking and confirmation for international addresses\n            tracking_number:\n              type: string\n              description: |-\n                The tracking number will appear here when it becomes available.\n                Dummy tracking numbers are not created in test mode.\n              nullable: true\n            tracking_events:\n              description: Tracking events are not populated for registered letters.\n              type: array\n              items:\n                $ref: '#/components/schemas/tracking_event_normal'\n              maxItems: 0\n            return_address:\n              $ref: '#/components/schemas/return_address'\n        - $ref: '#/components/schemas/letter_base'\n        - $ref: '#/components/schemas/letter_generated_base'\n    no_extra_service:\n      allOf:\n        - type: object\n          properties:\n            tracking_events:\n              description: An array of tracking events ordered by ascending `time`.\n              type: array\n              items:\n                $ref: '#/components/schemas/tracking_event_normal'\n            cards:\n              description: An array of cards associated with a specific letter\n              type: array\n              items:\n                $ref: '#/components/schemas/card'\n              nullable: true\n            return_address:\n              $ref: '#/components/schemas/return_address'\n        - $ref: '#/components/schemas/letter_base'\n        - $ref: '#/components/schemas/letter_generated_base'\n    letter:\n      oneOf:\n        - title: certified\n          $ref: '#/components/schemas/certified'\n        - title: registered\n          $ref: '#/components/schemas/registered'\n        - title: regular\n          $ref: '#/components/schemas/no_extra_service'\n    letter_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/ltr_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    input_to:\n      type: object\n      properties:\n        to:\n          description: \u003e-\n            Must either be an address ID or an inline object with correct\n            address parameters. If an object is used, an address will be\n            created, corrected, and standardized for free whenever possible\n            using our US Address Verification engine (if it is a US address),\n            and returned back with an ID. Depending on your \u003ca\n            href=\"https://dashboard.lob.com/#/settings/editions\"\n            target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e, US addresses may also be\n            run through \u003ca href=\"#tag/National-Change-of-Address\"\u003eNational\n            Change of Address Linkage(NCOALink)\u003c/a\u003e. Non-US addresses will be\n            standardized into uppercase only. If a US address used does not meet\n            your account’s \u003ca\n            href=\"https://dashboard.lob.com/#/settings/account\"\n            target=\"_blank\"\u003eUS Mail strictness setting\u003c/a\u003e, the request will\n            fail. \u003ca\n            href=\"https://help.lob.com/en_US/print_mail/all-about-addresses#standardization-verification\"\n            target=\"_blank\"\u003eLob Guide: Verification of Mailing Addresses\u003c/a\u003e\n          oneOf:\n            - $ref: '#/components/schemas/adr_id'\n            - $ref: '#/components/schemas/inline_address'\n    input_from:\n      type: object\n      properties:\n        from:\n          description: \u003e-\n            Must either be an address ID or an inline object with correct\n            address parameters. Must be a US address unless using a\n            `custom_envelope`. All addresses will be standardized into uppercase\n            without being modified by verification.\n          oneOf:\n            - $ref: '#/components/schemas/adr_id'\n            - $ref: '#/components/schemas/inline_address'\n    letter_editable:\n      allOf:\n        - $ref: '#/components/schemas/input_to'\n        - $ref: '#/components/schemas/input_from'\n        - type: object\n          required:\n            - to\n            - from\n            - file\n          properties:\n            file:\n              description: \u003e-\n                Notes:\n\n                - HTML merge variables should not include delimiting whitespace.\n\n                - All pages of a supplied PDF file must be sized at 8.5\"x11\",\n                while supplied HTML will be rendered and trimmed to as many\n                8.5\"x11\" pages as necessary.\n\n                - For design specifications, please see our \u003ca\n                href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_template.pdf\"\n                target=\"_blank\"\u003ePDF\u003c/a\u003e and [HTML](#section/HTML-Examples)\n                templates.\n\n                - If a `custom_envelope` is used, follow \u003ca\n                href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_custom_envelope.pdf\"\n                target=\"_blank\"\u003ethis template\u003c/a\u003e.\n\n                - For domestic destinations, the file limit is 60 pages\n                single-sided or 120 pages double-sided. For international\n                destinations, the file limit is 6 pages single-sided or 12 pages\n                double-sided. PDFs that surpass the file limit will error, while\n                HTML that renders more pages than the file limit will be\n                trimmed.\n\n                - Any letters over 6 pages single-sided or 12 pages double-sided\n                will be placed in a \u003ca\n                href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_flat_template.pdf\"\n                target=\"_blank\"\u003eflat envelope\u003c/a\u003e instead of the standard double\n                window envelope.\n\n\n                See \u003ca href=\"https://lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred.\n              oneOf:\n                - $ref: '#/components/schemas/html_string'\n                - $ref: '#/components/schemas/tmpl_id'\n                - $ref: '#/components/schemas/remote_file_url'\n                - type: string\n                  pattern: ^(?!https://)[a-zA-Z0-9@:%._+~#=/]{1,256}.(html?|pdf)$\n            extra_service:\n              type: string\n              enum:\n                - certified\n                - certified_return_receipt\n                - registered\n                - null\n              description: \u003e\n                Add an extra service to your letter. See \u003ca\n                href=\"https://www.lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred.\n                  * `certified` - track and confirm delivery for domestic destinations. An extra sheet (1 PDF page single-sided or 2 PDF pages double-sided) is added to the beginning of your letter for address and barcode information. See here for templates: \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_template.pdf\" target=\"_blank\"\u003e#10 envelope\u003c/a\u003e and \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_certified_flat_template.pdf\" target=\"_blank\"\u003eflat envelope\u003c/a\u003e (used for letters over 6 pages single-sided or 12 pages double-sided). You will not be charged for this extra sheet.\n                  * `certified_return_receipt` - request an electronic copy of the recipient's signature to prove delivery of your certified letter\n                  * `registered` - provides tracking and confirmation for international addresses\n              nullable: true\n            cards:\n              description: \u003e-\n                A single-element array containing an existing card id in a\n                string format. See [cards](#tag/Cards) for more information.\n              type: array\n              items:\n                $ref: '#/components/schemas/card_id'\n              minItems: 0\n              maxItems: 1\n              nullable: true\n            mail_type:\n              $ref: '#/components/schemas/mail_type'\n            color:\n              type: boolean\n              description: \u003e-\n                Set this key to `true` if you would like to print in color. Set\n                to `false` if you would like to print in black and white.\n            double_sided:\n              type: boolean\n              description: \u003e-\n                Set this attribute to `true` for double sided printing, or\n                `false` for for single sided printing. Defaults to `true`.\n              default: true\n            address_placement:\n              type: string\n              enum:\n                - top_first_page\n                - insert_blank_page\n                - bottom_first_page_center\n                - bottom_first_page\n              description: \u003e\n                Specifies the location of the address information that will show\n                through the double-window envelope. To see how this will impact\n                your letter design, view our letter template.\n\n                This feature is exclusive to certain customers. Upgrade to the\n                appropriate \u003ca\n                href=\"https://dashboard.lob.com/#/settings/editions\"\n                target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n                  * `top_first_page` - (default) print address information at the top of your provided first page\n                  * `insert_blank_page` - insert a blank address page at the beginning of your file (you will be charged for the extra page)\n                  * `bottom_first_page_center` - **(deprecation planned within a few months)** print address information at the bottom center of your provided first page\n                  * `bottom_first_page` - print address information at the bottom of your provided first page\n              default: top_first_page\n            return_envelope:\n              oneOf:\n                - type: string\n                - type: boolean\n              description: \u003e-\n                Indicates if a return envelope is requested for the letter. The\n                value corresponding to this field is by default a boolean. But\n                if the account is signed up for custom return envelopes, the\n                value is of type string and is `no_9_single_window` for a\n                standard return envelope and a custom `return_envelope_id` for\n                non-standard return envelopes.\n\n\n                To include a return envelope with your letter, set to `true` and\n                specify the `perforated_page`. See \u003ca\n                href=\"https://www.lob.com/pricing/print-mail#compare\"\n                target=\"_blank\"\u003epricing\u003c/a\u003e for extra costs incurred.\n              default: false\n            perforated_page:\n              type: integer\n              description: \u003e-\n                Required if `return_envelope` is `true`. The number of the page\n                that should be perforated for use with the return envelope. Must\n                be greater than or equal to `1`. The blank page added by\n                `address_placement=insert_blank_page` will be ignored when\n                considering the perforated page number. To see how perforation\n                will impact your letter design, view our \u003ca\n                href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/letter_perf_template.pdf\"\n                target=\"_blank\"\u003eperforation guide\u003c/a\u003e.\n              nullable: true\n            custom_envelope:\n              type: object\n              description: \u003e-\n                A nested custom envelope object containing more information\n                about the custom envelope used or `null` if a custom envelope\n                was not used.\n\n\n                Accepts an envelope ID for any customized envelope with\n                available inventory. If no inventory is available for the\n                specified ID, the letter will not be sent, and an error will be\n                returned. If the letter has more than 6 sheets, it will be sent\n                in a blank flat envelope. Custom envelopes may be created and\n                ordered from the dashboard. This feature is exclusive to certain\n                customers. Upgrade to the appropriate \u003ca\n                href=\"https://dashboard.lob.com/#/settings/editions\"\n                target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n              required:\n                - id\n                - url\n                - object\n              properties:\n                id:\n                  type: string\n                  description: The unique identifier of the custom envelope used.\n                  maxLength: 40\n                url:\n                  type: string\n                  description: The url of the envelope asset used.\n                object:\n                  allOf:\n                    - $ref: '#/components/schemas/object'\n                    - type: string\n                      enum:\n                        - envelope\n                      default: envelope\n              nullable: true\n            billing_group_id:\n              $ref: '#/components/schemas/billing_group_id'\n    psc_id:\n      type: string\n      description: Unique identifier prefixed with `psc_`.\n      pattern: ^psc_[a-zA-Z0-9]+$\n    editable:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        metadata:\n          $ref: '#/components/schemas/metadata'\n        mail_type:\n          $ref: '#/components/schemas/mail_type'\n        merge_variables:\n          $ref: '#/components/schemas/merge_variables'\n        send_date:\n          $ref: '#/components/schemas/send_date'\n    postcard_size:\n      type: string\n      enum:\n        - 4x6\n        - 6x9\n        - 6x11\n      description: \u003e\n        Specifies the size of the postcard. Only `4x6` postcards can be sent to\n        international destinations.\n      default: 4x6\n    postcard_base:\n      allOf:\n        - $ref: '#/components/schemas/editable'\n        - type: object\n          properties:\n            size:\n              $ref: '#/components/schemas/postcard_size'\n    postcard:\n      allOf:\n        - $ref: '#/components/schemas/postcard_base'\n        - $ref: '#/components/schemas/generated'\n        - $ref: '#/components/schemas/from_us'\n        - type: object\n          required:\n            - id\n            - front_template_id\n            - back_template_id\n            - url\n          properties:\n            id:\n              $ref: '#/components/schemas/psc_id'\n            front_template_id:\n              type: string\n              description: \u003e-\n                The unique ID of the HTML template used for the front of the\n                postcard. Only filled out when the request contains a valid\n                postcard template ID.\n              pattern: ^tmpl_[a-zA-Z0-9]+$\n              nullable: true\n            back_template_id:\n              type: string\n              description: \u003e-\n                The unique ID of the HTML template used for the back of the\n                postcard. Only filled out when the request contains a valid\n                postcard template ID.\n              pattern: ^tmpl_[a-zA-Z0-9]+$\n              nullable: true\n            front_template_version_id:\n              type: string\n              description: \u003e-\n                The unique ID of the specific version of the HTML template used\n                for the front of the postcard. Only filled out when the request\n                contains a valid postcard template ID.\n              pattern: ^vrsn_[a-zA-Z0-9]+$\n              nullable: true\n            back_template_version_id:\n              type: string\n              description: \u003e-\n                The unique ID of the specific version of the HTML template used\n                for the back of the postcard. Only filled out when the request\n                contains a valid postcard template ID.\n              pattern: ^vrsn_[a-zA-Z0-9]+$\n              nullable: true\n            tracking_events:\n              description: \u003e-\n                An array of tracking_event objects ordered by ascending `time`.\n                Will not be populated for postcards created in test mode.\n              type: array\n              items:\n                $ref: '#/components/schemas/tracking_event_normal'\n              nullable: true\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - postcard\n              default: postcard\n            url:\n              allOf:\n                - description: \u003e-\n                    A [signed link](#section/Asset-URLs) to the rendered\n                    postcard.\n                - $ref: '#/components/schemas/signed_link'\n    postcard_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/psc_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    input_from_us:\n      type: object\n      properties:\n        from:\n          description: \u003e-\n            *Required* if `to` address is international. Must either be an\n            address ID or an inline object with correct address parameters. Must\n            either be an address ID or an inline object with correct address\n            parameters. All addresses will be standardized into uppercase\n            without being modified by verification.\n          oneOf:\n            - $ref: '#/components/schemas/adr_id'\n            - $ref: '#/components/schemas/inline_address_us'\n    postcard_editable:\n      allOf:\n        - $ref: '#/components/schemas/postcard_base'\n        - $ref: '#/components/schemas/input_to'\n        - $ref: '#/components/schemas/input_from_us'\n        - type: object\n          required:\n            - to\n            - front\n            - back\n          properties:\n            front:\n              description: \u003e\n                The artwork to use as the front of your postcard.\n\n\n                Notes:\n\n                - HTML merge variables should not include delimiting whitespace.\n\n                - PDF, PNG, and JPGs must be sized at 4.25\"x6.25\", 6.25\"x9.25\",\n                or 6.25\"x11.25\" at 300 DPI, while supplied HTML will be rendered\n                to the specified `size`.\n\n\n                See [here](#section/HTML-Examples) for HTML examples.\n              oneOf:\n                - $ref: '#/components/schemas/html_string'\n                - $ref: '#/components/schemas/tmpl_id'\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n            back:\n              description: \u003e\n                The artwork to use as the back of your postcard.\n\n\n                Notes:\n\n                - HTML merge variables should not include delimiting whitespace.\n\n                - PDF, PNG, and JPGs must be sized at 4.25\"x6.25\", 6.25\"x9.25\",\n                or 6.25\"x11.25\" at 300 DPI, while supplied HTML will be rendered\n                to the specified `size`.\n\n                - Be sure to leave room for address and postage information by\n                following the templates provided here:\n                  - \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/4x6_postcard.pdf\" target=\"_blank\"\u003e4x6 template\u003c/a\u003e\n                  - \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/6x9_postcard.pdf\" target=\"_blank\"\u003e6x9 template\u003c/a\u003e\n                  - \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/postcards/6x11_postcard.pdf\" target=\"_blank\"\u003e6x11 template\u003c/a\u003e\n\n\n                See [here](#section/HTML-Examples) for HTML examples.\n              oneOf:\n                - $ref: '#/components/schemas/html_string'\n                - $ref: '#/components/schemas/tmpl_id'\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n            billing_group_id:\n              $ref: '#/components/schemas/billing_group_id'\n    sfm_id:\n      type: string\n      description: Unique identifier prefixed with `sfm_`.\n      pattern: ^sfm_[a-zA-Z0-9]+$\n    self_mailer_size:\n      type: string\n      enum:\n        - 6x18_bifold\n        - 11x9_bifold\n        - 12x9_bifold\n      description: Specifies the size of the self mailer.\n      default: 6x18_bifold\n    self_mailer_base:\n      allOf:\n        - $ref: '#/components/schemas/editable'\n        - type: object\n          properties:\n            size:\n              $ref: '#/components/schemas/self_mailer_size'\n    self_mailer:\n      allOf:\n        - $ref: '#/components/schemas/self_mailer_base'\n        - $ref: '#/components/schemas/generated'\n        - $ref: '#/components/schemas/from_us'\n        - type: object\n          required:\n            - id\n            - outside_template_id\n            - inside_template_id\n            - outside_template_version_id\n            - inside_template_version_id\n            - url\n          properties:\n            id:\n              $ref: '#/components/schemas/sfm_id'\n            outside_template_id:\n              description: \u003e-\n                The unique ID of the HTML template used for the outside of the\n                self mailer.\n              allOf:\n                - $ref: '#/components/schemas/tmpl_id'\n                - type: string\n                  nullable: true\n            inside_template_id:\n              description: \u003e-\n                The unique ID of the HTML template used for the inside of the\n                self mailer.\n              allOf:\n                - $ref: '#/components/schemas/tmpl_id'\n                - type: string\n                  nullable: true\n            outside_template_version_id:\n              description: \u003e-\n                The unique ID of the specific version of the HTML template used\n                for the outside of the self mailer.\n              allOf:\n                - $ref: '#/components/schemas/vrsn_id'\n                - type: string\n                  nullable: true\n            inside_template_version_id:\n              description: \u003e-\n                The unique ID of the specific version of the HTML template used\n                for the inside of the self mailer.\n              allOf:\n                - $ref: '#/components/schemas/vrsn_id'\n                - type: string\n                  nullable: true\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - self_mailer\n              default: self_mailer\n            tracking_events:\n              description: \u003e-\n                An array of certified tracking events ordered by ascending\n                `time`. Not populated in test mode.\n              type: array\n              items:\n                $ref: '#/components/schemas/tracking_event_certified'\n            url:\n              allOf:\n                - description: \u003e-\n                    A [signed link](#section/Asset-URLs) to the rendered self\n                    mailer.\n                - $ref: '#/components/schemas/signed_link'\n    self_mailer_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/sfm_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    self_mailer_editable:\n      allOf:\n        - $ref: '#/components/schemas/self_mailer_base'\n        - $ref: '#/components/schemas/input_to'\n        - $ref: '#/components/schemas/input_from_us'\n        - type: object\n          required:\n            - to\n            - inside\n            - outside\n          properties:\n            inside:\n              description: \u003e\n                The artwork to use as the inside of your self mailer.\n\n\n                Notes:\n\n                - HTML merge variables should not include delimiting whitespace.\n\n                - PDF, PNG, and JPGs must be sized at 6\"x18\" at 300 DPI, while\n                supplied HTML will be rendered to the specified `size`.\n\n                - Be sure to leave room for address and postage information by\n                following the templates provided here:\n                  - \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_bifold_template.pdf\" target=\"_blank\"\u003e6x18 bifold template\u003c/a\u003e\n                  - \u003ca href=\"https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/12x9_sfm_bifold_template.pdf\" target=\"_blank\"\u003e12x9 bifold template\u003c/a\u003e\n\n\n                See [here](#section/HTML-Examples) for HTML examples.\n              oneOf:\n                - $ref: '#/components/schemas/html_string'\n                - $ref: '#/components/schemas/tmpl_id'\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n            outside:\n              description: \u003e\n                The artwork to use as the outside of your self mailer.\n\n\n                Notes:\n\n                - HTML merge variables should not include delimiting whitespace.\n\n                - PDF, PNG, and JPGs must be sized at 6\"x18\" at 300 DPI, while\n                supplied HTML will be rendered to the specified `size`.\n\n\n                See [here](#section/HTML-Examples) for HTML examples.\n              oneOf:\n                - $ref: '#/components/schemas/html_string'\n                - $ref: '#/components/schemas/tmpl_id'\n                - $ref: '#/components/schemas/remote_file_url'\n                - $ref: '#/components/schemas/local_file_path'\n            billing_group_id:\n              $ref: '#/components/schemas/billing_group_id'\n    template_html:\n      type: string\n      description: \u003e\n        An HTML string of less than 100,000 characters to be used as the\n        `published_version` of this template. See [here](#section/HTML-Examples)\n        for guidance on designing HTML templates. Please see endpoint specific\n        documentation for any other product-specific HTML details:\n\n        - [Postcards](#operation/postcard_create) - `front` and `back`\n\n        - [Self Mailers](#operation/self_mailer_create) - `inside` and `outside`\n\n        - [Letters](#operation/letter_create) - `file`\n\n        - [Checks](#operation/check_create) - `check_bottom` and `attachment`\n\n        - [Cards](#operation/card_create) - `front` and `back`\n\n\n        If there is a syntax error with your variable names within your HTML,\n        then an error will be thrown, e.g. using a `{{#users}}` opening tag\n        without the corresponding closing tag `{{/users}}`.\n      maxLength: 100000\n    engine:\n      type: string\n      description: |\n        The engine used to combine HTML template with merge variables.\n          * `legacy` - Lob's original engine\n          * `handlebars`\n      enum:\n        - legacy\n        - handlebars\n      nullable: true\n      default: legacy\n    template_version_writable:\n      type: object\n      required:\n        - html\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        html:\n          $ref: '#/components/schemas/template_html'\n        engine:\n          $ref: '#/components/schemas/engine'\n    template_version:\n      allOf:\n        - $ref: '#/components/schemas/template_version_writable'\n        - $ref: '#/components/schemas/lob_base'\n        - type: object\n          required:\n            - id\n          properties:\n            id:\n              $ref: '#/components/schemas/vrsn_id'\n            suggest_json_editor:\n              type: boolean\n              description: |\n                Used by frontend, true if the template uses advanced features.\n            merge_variables:\n              type: object\n              description: \u003e\n                Used by frontend, an object representing the keys of every merge\n                variable present in the template. It has one key named 'keys',\n                and its value is an array of strings.\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - version\n              default: version\n    template_version_updatable:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        engine:\n          $ref: '#/components/schemas/engine'\n    template_version_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/vrsn_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    template:\n      type: object\n      required:\n        - id\n        - versions\n        - published_version\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        id:\n          $ref: '#/components/schemas/tmpl_id'\n        versions:\n          type: array\n          description: \u003e-\n            An array of all non-deleted [version\n            objects](#tag/Template-Versions) associated with the template.\n          items:\n            $ref: '#/components/schemas/template_version'\n        published_version:\n          allOf:\n            - description: \u003e-\n                The template's currently published version. This version will be\n                used in any Print \u0026 Mail API requests that reference the\n                specified template.\n            - $ref: '#/components/schemas/template_version'\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - template\n          default: template\n        metadata:\n          $ref: '#/components/schemas/metadata'\n        date_created:\n          $ref: '#/components/schemas/date_created'\n        date_modified:\n          $ref: '#/components/schemas/date_modified'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    template_update:\n      type: object\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        published_version:\n          allOf:\n            - description: \u003e-\n                The ID of the published version of a template you'd like to\n                update. The published version is the one that will be used in\n                any Print \u0026 Mail API requests that reference the specified\n                template. Will err if the referenced `published_version` has\n                been deleted or does not exist.\n              type: string\n            - $ref: '#/components/schemas/vrsn_id'\n    template_deletion:\n      description: \u003e-\n        Lob uses RESTful HTTP response codes to indicate success or failure of\n        an API request. In general, 2xx indicates success, 4xx indicate an input\n        error, and 5xx indicates an error on Lob's end.\n      properties:\n        id:\n          $ref: '#/components/schemas/tmpl_id'\n        deleted:\n          $ref: '#/components/schemas/deleted'\n    template_writable:\n      type: object\n      required:\n        - html\n      properties:\n        description:\n          $ref: '#/components/schemas/resource_description'\n        html:\n          $ref: '#/components/schemas/template_html'\n        metadata:\n          $ref: '#/components/schemas/metadata'\n        engine:\n          $ref: '#/components/schemas/engine'\n    us_autocompletions_writable:\n      type: object\n      required:\n        - address_prefix\n      properties:\n        address_prefix:\n          type: string\n          description: |\n            Only accepts numbers and street names in an alphanumeric format.\n        city:\n          type: string\n          description: \u003e\n            An optional city input used to filter suggestions. Case insensitive\n            and does not match partial abbreviations.\n        state:\n          type: string\n          description: \u003e\n            An optional state input used to filter suggestions. Case insensitive\n            and does not match partial abbreviations.\n        zip_code:\n          type: string\n          description: \u003e\n            An optional ZIP Code input used to filter suggestions. Matches\n            partial entries.\n        geo_ip_sort:\n          type: boolean\n          description: \u003e\n            If `true`, sort suggestions by proximity to the IP set in the\n            `X-Forwarded-For` header.\n    us_auto_id:\n      type: string\n      description: Unique identifier prefixed with `us_auto_`.\n      pattern: ^us_auto_[a-zA-Z0-9]+$\n    suggestions:\n      type: object\n      required:\n        - primary_line\n        - city\n        - state\n        - zip_code\n      properties:\n        primary_line:\n          type: string\n          description: \u003e\n            The primary delivery line (usually the street address) of the\n            address.\n\n            Combination of the following applicable `components` (primary number\n            \u0026\n\n            secondary information may be missing or inaccurate):\n\n            * `primary_number`\n\n            * `street_predirection`\n\n            * `street_name`\n\n            * `street_suffix`\n\n            * `street_postdirection`\n\n            * `secondary_designator`\n\n            * `secondary_number`\n\n            * `pmb_designator`\n\n            * `pmb_number`\n        city:\n          $ref: '#/components/schemas/city'\n        state:\n          $ref: '#/components/schemas/state'\n        zip_code:\n          allOf:\n            - description: \u003e\n                Must be formatted as a US ZIP or ZIP+4 (e.g. `94107`,\n                `941072282`, `94107-2282`).\n            - $ref: '#/components/schemas/zip_code'\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - us_autocompletion\n          default: us_autocompletion\n    us_autocompletions:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/us_auto_id'\n        suggestions:\n          type: array\n          description: |\n            An array of objects representing suggested addresses.\n          minItems: 0\n          maxItems: 10\n          items:\n            $ref: '#/components/schemas/suggestions'\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - us_autocompletion\n          default: us_autocompletion\n    location:\n      type: object\n      required:\n        - latitude\n        - longitude\n      properties:\n        latitude:\n          type: number\n          minimum: -90\n          maximum: 90\n          format: float\n          description: \u003e\n            A positive or negative decimal indicating the geographic latitude of\n            the address, specifying the north-to-south position of a location.\n            This should be input with `longitude` to pinpoint locations on a\n            map.\n          nullable: true\n        longitude:\n          type: number\n          minimum: -180\n          maximum: 180\n          format: float\n          description: \u003e\n            A positive or negative decimal indicating the geographic longitude\n            of the address, specifying the north-to-south position of a\n            location. This should be input with `latitude` to pinpoint locations\n            on a map.\n          nullable: true\n    reverse_geocode_id:\n      type: string\n      description: Unique identifier prefixed with `us_reverse_geocode_`.\n      pattern: ^us_reverse_geocode_[a-zA-Z0-9_]+$\n    components:\n      type: object\n      description: \u003e-\n        A nested object containing a breakdown of each component of a reverse\n        geocoded response.\n      required:\n        - zip_code\n        - zip_code_plus_4\n      properties:\n        zip_code:\n          type: string\n          description: The 5-digit ZIP code\n          pattern: ^\\d{5}$\n        zip_code_plus_4:\n          allOf:\n            - description: A 4-digit ZIP add-on code\n            - $ref: '#/components/schemas/zip_code_plus_4'\n    location_analysis:\n      type: object\n      description: \u003e-\n        A nested object containing a breakdown of the analysis of a reverse\n        geocoded location.\n      required:\n        - latitude\n        - longitude\n        - distance\n      properties:\n        latitude:\n          type: number\n          minimum: -90\n          maximum: 90\n          format: float\n          description: \u003e\n            A positive or negative decimal indicating the geographic latitude of\n            the address, specifying the north-to-south position of a location.\n            This should be used with `longitude` to pinpoint locations on a map.\n            Will not be returned for undeliverable addresses or military\n            addresses (state is `AA`, `AE`, or `AP`).\n          nullable: true\n        longitude:\n          type: number\n          minimum: -180\n          maximum: 180\n          format: float\n          description: \u003e\n            A positive or negative decimal indicating the geographic longitude\n            of the address, specifying the north-to-south position of a\n            location. This should be used with `latitude` to pinpoint locations\n            on a map. Will not be returned for undeliverable addresses or\n            military addresses (state is `AA`, `AE`, or `AP`).\n          nullable: true\n        distance:\n          type: number\n          format: float\n          description: \u003e\n            The distance from the input location to this exact zip code in\n            miles.\n    addresses:\n      type: object\n      properties:\n        components:\n          $ref: '#/components/schemas/components'\n        location_analysis:\n          $ref: '#/components/schemas/location_analysis'\n    reverse_geocode:\n      type: object\n      properties:\n        id:\n          $ref: '#/components/schemas/reverse_geocode_id'\n        addresses:\n          type: array\n          description: |\n            list of addresses\n          items:\n            $ref: '#/components/schemas/addresses'\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - us_reverse_geocode_lookup\n          default: us_reverse_geocode_lookup\n    single_line_address:\n      type: object\n      required:\n        - address\n      properties:\n        address:\n          type: string\n          description: \u003e\n            The entire address in one string (e.g., \"210 King Street 94107\").\n            _Does not support a recipient and will error when other payload\n            parameters are provided._\n          maxLength: 500\n    us_verifications_writable:\n      oneOf:\n        - $ref: '#/components/schemas/multiple_components'\n        - $ref: '#/components/schemas/single_line_address'\n    zip5:\n      type: object\n      required:\n        - zip_code\n      properties:\n        zip_code:\n          type: string\n          description: A 5-digit ZIP code.\n          pattern: ^\\d{5}$\n          example: '94107'\n    zip_id:\n      type: string\n      description: Unique identifier prefixed with `us_zip_`.\n      pattern: ^us_zip_[a-zA-Z0-9]+$\n    zip_lookup_city:\n      type: object\n      required:\n        - city\n        - state\n        - county\n        - county_fips\n        - preferred\n      properties:\n        city:\n          $ref: '#/components/schemas/city'\n        state:\n          $ref: '#/components/schemas/state'\n        county:\n          $ref: '#/components/schemas/county'\n        county_fips:\n          $ref: '#/components/schemas/county_fips'\n        preferred:\n          type: boolean\n          description: \u003e\n            Indicates whether or not the city is the \u003ca\n            href=\"https://en.wikipedia.org/wiki/ZIP_Code#ZIP_Codes_and_previous_zoning_lines\"\n            target=\"_blank\"\u003eUSPS default city\u003c/a\u003e (preferred city) of a ZIP\n            code. There is only one preferred city per ZIP code, which will\n            always be in position 0 in the array of cities.\n          example: true\n    zip:\n      allOf:\n        - $ref: '#/components/schemas/zip5'\n        - type: object\n          required:\n            - id\n            - cities\n            - zip_code_type\n            - object\n          properties:\n            id:\n              $ref: '#/components/schemas/zip_id'\n            cities:\n              type: array\n              items:\n                $ref: '#/components/schemas/zip_lookup_city'\n              description: \u003e\n                An array of city objects containing valid cities for the\n                `zip_code`. Multiple cities will be returned if more than one\n                city is associated with the input ZIP code.\n            zip_code_type:\n              $ref: '#/components/schemas/zip_code_type'\n            object:\n              type: string\n              description: Value is resource type.\n              enum:\n                - us_zip_lookup\n              default: us_zip_lookup\n    postcard_types:\n      type: string\n      description: Unique identifier referring to status of postcard\n      enum:\n        - postcard.created\n        - postcard.rendered_pdf\n        - postcard.rendered_thumbnails\n        - postcard.deleted\n        - postcard.mailed\n        - postcard.in_transit\n        - postcard.in_local_area\n        - postcard.processed_for_delivery\n        - postcard.re-routed\n        - postcard.returned_to_sender\n    self_mailer_types:\n      type: string\n      description: Unique identifier referring to status of self mailer\n      enum:\n        - self_mailer.created\n        - self_mailer.rendered_pdf\n        - self_mailer.rendered_thumbnails\n        - self_mailer.deleted\n        - self_mailer.mailed\n        - self_mailer.in_transit\n        - self_mailer.in_local_area\n        - self_mailer.processed_for_delivery\n        - self_mailer.re-routed\n        - self_mailer.returned_to_sender\n    letter_types:\n      type: string\n      description: Unique identifier referring to status of letter\n      enum:\n        - letter.created\n        - letter.rendered_pdf\n        - letter.rendered_thumbnails\n        - letter.deleted\n        - letter.mailed\n        - letter.in_transit\n        - letter.in_local_area\n        - letter.processed_for_delivery\n        - letter.re-routed\n        - letter.returned_to_sender\n        - letter.certified.mailed\n        - letter.certified.in_transit\n        - letter.certified.in_local_area\n        - letter.certified.processed_for_delivery\n        - letter.certified.re-routed\n        - letter.certified.returned_to_sender\n        - letter.certified.delivered\n        - letter.certified.pickup_available\n        - letter.certified.issue\n        - letter.return_envelope.created\n        - letter.return_envelope.in_transit\n        - letter.return_envelope.in_local_area\n        - letter.return_envelope.processed_for_delivery\n        - letter.return_envelope.re_routed\n        - letter.return_envelope.returned_to_sender\n    check_types:\n      type: string\n      description: Unique identifier referring to status of check\n      enum:\n        - check.created\n        - check.rendered_pdf\n        - check.rendered_thumbnails\n        - check.deleted\n        - check.mailed\n        - check.in_transit\n        - check.in_local_area\n        - check.processed_for_delivery\n        - check.re-routed\n        - check.returned_to_sender\n    address_types:\n      type: string\n      description: Unique identifier referring to status of address\n      enum:\n        - address.created\n        - address.deleted\n    bank_account_types:\n      type: string\n      description: Unique identifier referring to status of bank account\n      enum:\n        - bank_account.created\n        - bank_account.deleted\n        - bank_account.verified\n    event_type:\n      type: object\n      required:\n        - id\n        - enabled_for_test\n        - resource\n        - object\n      properties:\n        id:\n          oneOf:\n            - $ref: '#/components/schemas/postcard_types'\n            - $ref: '#/components/schemas/self_mailer_types'\n            - $ref: '#/components/schemas/letter_types'\n            - $ref: '#/components/schemas/check_types'\n            - $ref: '#/components/schemas/address_types'\n            - $ref: '#/components/schemas/bank_account_types'\n        enabled_for_test:\n          type: boolean\n          description: \u003e-\n            Value is `true` if the event type is enabled in both the test and\n            live environments and `false` if it is only enabled in the live\n            environment.\n        resource:\n          type: string\n          enum:\n            - postcards\n            - self mailers\n            - letters\n            - checks\n            - addresses\n            - bank accounts\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - event_type\n          default: event_type\n    events:\n      type: object\n      required:\n        - id\n        - body\n        - reference_id\n        - event_type\n        - date_created\n        - object\n      properties:\n        id:\n          type: string\n          description: Unique identifier prefixed with `evt_`.\n          pattern: ^evt_[a-zA-Z0-9_]+$\n        body:\n          type: object\n          description: \u003e-\n            The body of the associated resource as they were at the time of the\n            event, i.e. the [postcard object](#operation/postcard_retrieve),\n            [the letter object](#operation/letter_retrieve), [the check\n            object](#operation/check_retrieve), [the address\n            object](#operation/address_retrieve), or [the bank account\n            object](#operation/bank_account_retrieve). For `.deleted` events,\n            the body matches the response for the corresponding delete endpoint\n            for that resource (e.g. the [postcard delete\n            response](#operation/postcard_delete)).\n        reference_id:\n          description: Unique identifier of the related resource for the event.\n          type: string\n        event_type:\n          $ref: '#/components/schemas/event_type'\n        date_created:\n          $ref: '#/components/schemas/date_created'\n        object:\n          type: string\n          description: Value is resource type.\n          enum:\n            - event\n          default: event\n  responses:\n    address_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: not_found\n              message: address not found\n              status_code: 404\n    all_addresses:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` addresses. Each entry in the array is a separate address object.\n        The previous and next page of address entries can be retrieved by\n        calling the endpoint contained in the `previous_url` and `next_url`\n        fields in the API response respectively.\u003cbr\u003eIf no more addresses are\n        available beyond the current set of returned results, the `next_url`\n        field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of addresses\n                    items:\n                      $ref: '#/components/schemas/address'\n          example:\n            data:\n              - id: adr_e68217bd744d65c8\n                description: Harry - Office\n                name: HARRY ZHANG\n                company: LOB\n                phone: '5555555555'\n                email: harry@lob.com\n                address_line1: 210 KING ST STE 6100\n                address_line2: null\n                address_city: SAN FRANCISCO\n                address_state: CA\n                address_zip: 94107-1741\n                address_country: UNITED STATES\n                metadata: {}\n                date_created: 2019-08-12T00:16:00.361Z\n                date_modified: 2019-08-12T00:16:00.361Z\n                object: address\n              - id: adr_asdi2y3riuasasoi\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                phone: '5555555555'\n                email: harry@lob.com\n                metadata: {}\n                address_line1: 370 WATER ST\n                address_line2: ''\n                address_city: SUMMERSIDE\n                address_state: PRINCE EDWARD ISLAND\n                address_zip: C1N 1C4\n                address_country: CANADA\n                date_created: 2019-09-20T00:14:00.361Z\n                date_modified: 2019-09-20T00:14:00.361Z\n                object: address\n            object: list\n            next_url: \u003e-\n              https://api.lob.com/v1/addresses?limit=2\u0026after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wN1QyMTo1OTo0Ni43NjRaIiwiaWRPZmZzZXQiOiJhZHJfODMwYmYwZWFiZGFhYTQwOSJ9\n            previous_url: null\n            count: 2\n    post_address:\n      description: Echos the writable fields of a newly created address object.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/address'\n          examples:\n            full_us:\n              value:\n                id: adr_d3489cd64c791ab5\n                description: Harry - Office\n                name: HARRY ZHANG\n                company: LOB\n                phone: '5555555555'\n                email: harry@lob.com\n                address_line1: 210 KING ST STE 6100\n                address_city: SAN FRANCISCO\n                address_state: CA\n                address_zip: '94107'\n                address_country: UNITED STATES\n                metadata: {}\n                date_created: 2017-09-05T17:47:53.767Z\n                date_modified: 2017-09-05T17:47:53.767Z\n                object: address\n            full_intl:\n              value:\n                id: adr_b9f49f464c836203\n                description: Harry - Office\n                name: HARRY ZHANG\n                company: LOB\n                phone: '5555555555'\n                email: harry@lob.com\n                address_line1: 370 WATER ST\n                address_city: SUMMERSIDE\n                address_state: PRINCE EDWARD ISLAND\n                address_zip: C1N 1C4\n                address_country: CANADA\n                metadata: {}\n                date_created: 2021-11-29T20:55:46.843Z\n                date_modified: 2021-11-29T20:56:46.843Z\n                object: address\n            ncoa_us_live:\n              value:\n                id: adr_d3489cd64c791ab5\n                description: Harry - Office\n                name: HARRY ZHANG\n                company: LOB\n                phone: '5555555555'\n                email: harry@lob.com\n                address_line1: ████\n                address_line2: ████\n                address_city: SAN FRANCISCO\n                address_state: CA\n                address_zip: '94107'\n                address_country: UNITED STATES\n                metadata: {}\n                date_created: 2017-09-05T17:47:53.767Z\n                date_modified: 2017-09-05T17:47:53.767Z\n                recipient_moved: true\n                inline: false\n                object: address\n            ncoa_us_test:\n              value:\n                id: adr_e463565030210e12\n                description: null\n                name: TEST KEYS DO NOT VERIFY ADDRESSES\n                company: null\n                phone: null\n                email: null\n                address_line1: ████\n                address_line2: ████\n                address_city: SAN FRANCISCO\n                address_state: CA\n                address_zip: '94107'\n                address_country: UNITED STATES\n                metadata: {}\n                date_created: 2019-12-05T19:39:19.932Z\n                date_modified: 2019-12-05T19:39:19.932Z\n                recipient_moved: true\n                inline: false\n                object: address\n    address:\n      description: Returns an address object if a valid identifier was provided.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/address'\n    address_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/address_deletion'\n          example:\n            id: adr_123456789\n            deleted: true\n    bank_account_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: routing_number is required\n              status_code: 422\n    post_bank_account:\n      description: Returns a bank_account object\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/bank_account'\n          example:\n            id: bank_8cad8df5354d33f\n            signature_url: \u003e-\n              https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45\u0026expires=1234567890\u0026signature=a\n            description: Test Bank Account\n            metadata: {}\n            routing_number: '322271627'\n            account_number: '123456789'\n            account_type: company\n            signatory: John Doe\n            bank_name: J.P. MORGAN CHASE BANK, N.A.\n            verified: false\n            date_created: 2015-11-06T19:24:24.440Z\n            date_modified: 2015-11-06T19:24:24.440Z\n            object: bank_account\n    bank_account_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/bank_deletion'\n          example:\n            id: bank_123456789\n            deleted: true\n    all_bank_accounts:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` bank_accounts. Each entry in the array is a separate\n        bank_account. The previous and next page of bank_accounts can be\n        retrieved by calling the endpoint contained in the `previous_url` and\n        `next_url` fields in the API response respectively.\u003cbr\u003eIf no more\n        bank_accounts are available beyond the current set of returned results,\n        the `next_url` field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of bank_accounts\n                    items:\n                      $ref: '#/components/schemas/bank_account'\n          example:\n            data:\n              - id: bank_0e3fb07eba0b35b\n                signature_url: \u003e-\n                  https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45\u0026expires=1234567890\u0026signature=a\n                description: Example bank account\n                metadata: {}\n                routing_number: '122100024'\n                account_number: '1234564789'\n                account_type: company\n                signatory: John Doe\n                bank_name: JPMORGAN CHASE BANK, NA\n                verified: true\n                date_created: 2019-03-30T13:13:22.200Z\n                date_modified: 2019-03-30T13:13:23.385Z\n                object: bank_account\n              - id: bank_eba93f7de3c02d9\n                description: Example bank account\n                metadata: {}\n                routing_number: '122100024'\n                account_number: '1234564789'\n                account_type: company\n                signatory: John Doe\n                bank_name: JPMORGAN CHASE BANK, NA\n                verified: true\n                date_created: 2019-03-30T13:11:06.809Z\n                date_modified: 2019-03-30T13:11:07.872Z\n                object: bank_account\n            object: list\n            next_url: \u003e-\n              https://api.lob.com/v1/bank_accounts?limit=2\u0026after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0zMFQxMzoxMTowNi44MDlaIiwiaWRPZmZzZXQiOiJiYW5rX2ViYTkzZjdkZTNjMDJkOSJ9\n            previous_url: null\n            count: 2\n    billing_group_list_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: not_found\n              message: billing_group not found\n              status_code: 404\n    billing_group_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: message about incorrect parameter\n              status_code: 422\n    post_billing_group:\n      description: Returns a billing group object\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/billing_group'\n          example:\n            id: bg_c94e83ca2cd5121\n            name: Marketing Dept\n            description: Usage group used for the Marketing Dept resource sends\n            date_created: 2017-11-07T22:56:10.962Z\n            date_modified: 2017-11-07T22:56:10.962Z\n            object: billing_group\n    us_verifications_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: primary_line is required or address is required\n              status_code: 422\n    bulk_us_verifications:\n      description: Returns a list of US verification objects.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/us_verifications'\n          example:\n            addresses:\n              - id: us_ver_c7cb63d68f8d6\n                recipient: LOB.COM\n                primary_line: 210 KING ST STE 6100\n                secondary_line: ''\n                urbanization: ''\n                last_line: SAN FRANCISCO CA 94107-1728\n                deliverability: deliverable\n                valid_address: true\n                components:\n                  primary_number: '185'\n                  street_predirection: ''\n                  street_name: KING\n                  street_suffix: ST\n                  street_postdirection: ''\n                  secondary_designator: STE\n                  secondary_number: '6100'\n                  pmb_designator: ''\n                  pmb_number: ''\n                  extra_secondary_designator: ''\n                  extra_secondary_number: ''\n                  city: SAN FRANCISCO\n                  state: CA\n                  zip_code: '94107'\n                  zip_code_plus_4: '1728'\n                  zip_code_type: standard\n                  delivery_point_barcode: '941071728506'\n                  address_type: commercial\n                  record_type: highrise\n                  default_building_address: false\n                  county: SAN FRANCISCO\n                  county_fips: '06075'\n                  carrier_route: C001\n                  carrier_route_type: city_delivery\n                  latitude: 37.77597542841264\n                  longitude: -122.3929557343685\n                deliverability_analysis:\n                  dpv_confirmation: 'Y'\n                  dpv_cmra: 'N'\n                  dpv_vacant: 'N'\n                  dpv_active: 'Y'\n                  dpv_footnotes:\n                    - AA\n                    - BB\n                  ews_match: false\n                  lacs_indicator: ''\n                  lacs_return_code: ''\n                  suite_return_code: ''\n                lob_confidence_score:\n                  score: 100\n                  level: high\n                object: us_verification\n            errors: false\n    intl_verifications_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: country is required\n              status_code: 422\n    bulk_intl_verifications:\n      description: Returns an array of international verification objects.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/intl_verifications'\n          example:\n            addresses:\n              - id: intl_ver_c7cb63d68f8d6\n                recipient: null\n                primary_line: 370 WATER ST\n                secondary_line: ''\n                last_line: SUMMERSIDE PE C1N 1C4\n                country: CA\n                coverage: SUBBUILDING\n                deliverability: deliverable\n                status: LV4\n                components:\n                  primary_number: '370'\n                  street_name: WATER ST\n                  city: SUMMERSIDE\n                  state: PE\n                  postal_code: C1N 1C4\n                object: intl_verification\n            errors: false\n    mailpiece_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: not_found\n              message: to address not found\n              status_code: 404\n    card_deleted:\n      description: Deleted the card\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/card_deletion'\n          example:\n            id: card_123456789\n            deleted: true\n    card_order_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: not_found\n              message: card not found\n              status_code: 404\n    check_canceled:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/check_deletion'\n          example:\n            id: chk_123456789\n            deleted: true\n    all_checks:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` checks. Each entry in the array is a separate check. The\n        previous and next page of checks can be retrieved by calling the\n        endpoint contained in the `previous_url` and `next_url` fields in the\n        API response respectively.\u003cbr\u003eIf no more checks are available beyond the\n        current set of returned results, the `next_url` field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of checks\n                    items:\n                      $ref: '#/components/schemas/check'\n          example:\n            data:\n              - id: chk_0176bf6197100185\n                description: Demo Check\n                metadata: {}\n                check_number: 12559\n                memo: rent\n                amount: 22.5\n                url: \u003e-\n                  https://lob-assets.com/checks/chk_0176bf6197100185.pdf?version=v1\u0026expires=1568239682\u0026signature=aqKV5lmg_ktxzyl-qEwIf8-7DbvcguLO0LrfFcyMrUDDt6hxX_da0MEEpElxKR876VUaZrpHq_i_ayDWrsK3BA\n                to:\n                  id: adr_bae820679f3f536b\n                  description: Harry - Office\n                  name: HARRY ZHANG\n                  company: LOB\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: ''\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:08:43.446Z\n                  date_modified: 2018-12-08T03:08:43.446Z\n                  object: address\n                  recipient_moved: false\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  name: LEORE AVIDAR\n                  address_line1: 210 KING ST STE 6100\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                bank_account:\n                  id: bank_8cad8df5354d33f\n                  description: Test Bank Account\n                  metadata: {}\n                  routing_number: '322271627'\n                  account_number: '123456789'\n                  account_type: individual\n                  signatory: John Doe\n                  bank_name: J.P. MORGAN CHASE BANK, N.A.\n                  verified: true\n                  date_created: 2015-11-06T19:24:24.440Z\n                  date_modified: 2015-11-06T19:41:28.312Z\n                  object: bank_account\n                  signature_url: \u003e-\n                    https://lob-assets.com/bank-accounts/asd_asdfghjkqwertyui.pdf?expires=1234567890\u0026signature=aksdf\n                carrier: USPS\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/checks/chk_0176bf6197100185_thumb_small_1.png?version=v1\u0026expires=1568239682\u0026signature=T8DfMm_mxJJzIPgm8I0lvYY4Z6I8aFjsGsrEAicEqw8Ei_FaOtiGQKGeY16rdugAt8lmS_iX0lveBoG2RgWDDw\n                    medium: \u003e-\n                      https://lob-assets.com/checks/chk_0176bf6197100185_thumb_medium_1.png?version=v1\u0026expires=1568239682\u0026signature=-iJD7C58xOCD8eQ01StqSlw9WbDymL0Ygze9twfTs9s17zQppr2Zx363_Z4bP3ATHNhF3osjHuAxIasI2Wf6DQ\n                    large: \u003e-\n                      https://lob-assets.com/checks/chk_0176bf6197100185_thumb_large_1.png?version=v1\u0026expires=1568239682\u0026signature=VJlOkVDPKZThstdd632r3Grm2WhoyPkC-pffpcePTw1i1NkpAObDSRaItKMOQgeWkAcUud3SH0tYcVOadaNiCw\n                  - small: \u003e-\n                      https://lob-assets.com/checks/chk_0176bf6197100185_thumb_small_2.png?version=v1\u0026expires=1568239682\u0026signature=XpCkOjy2zIKXkuc0s-UAYGNwpD_pgt7c9FKTDUCYbyqXupAg1MV1l2tdqevr0L0LT5FJqrGZH9khD5QRMQTkAA\n                    medium: \u003e-\n                      https://lob-assets.com/checks/chk_0176bf6197100185_thumb_medium_2.png?version=v1\u0026expires=1568239682\u0026signature=sdgnJMzusEfndu7dNmk37eKc0AV7Hmqev6TQAqkCESs5pg7j6dDTsp7v4pnDvhsj8d7SIMcahl1aGiysoom0CA\n                    large: \u003e-\n                      https://lob-assets.com/checks/chk_0176bf6197100185_thumb_large_2.png?version=v1\u0026expires=1568239682\u0026signature=ybe8ovBh8Gf-AWKGRs4CB4XkU-erPVbY66umXARhTiJG2Dg1QlyCb9WmBXWt0tBCwD5NGMl20mHeAgHwecLxBA\n                expected_delivery_date: 2019-08-16\n                mail_type: usps_first_class\n                date_created: 2019-08-08T19:34:47.571Z\n                date_modified: 2019-08-08T19:34:49.612Z\n                send_date: 2019-08-08\n                message: pancakes are good\n                object: check\n                check_bottom_template_id: tmpl_a\n                attachment_template_id: tmpl_a\n                check_bottom_template_version_id: vrsn_a\n                attachment_template_version_id: vrsn_a\n                merge_variables: {}\n                deleted: true\n              - id: chk_92b9a6714bc0557c\n                description: Demo Check\n                metadata: {}\n                check_number: 12558\n                memo: rent\n                amount: 22.5\n                url: \u003e-\n                  https://lob-assets.com/checks/chk_92b9a6714bc0557c.pdf?version=v1\u0026expires=1568239682\u0026signature=jCct5PvzU58Iz2pSo58nf6rgsMRcJfMbUWThmm6lztFl5Vn2Y204b9h7gvw0vJvkDK2ThfaYqaUbWc0KzTpvAg\n                to:\n                  id: adr_bae820679f3f536b\n                  name: HARRY ZHANG\n                  address_line1: 210 KING ST STE 6100\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:08:43.446Z\n                  date_modified: 2018-12-08T03:08:43.446Z\n                  object: address\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  name: LEORE AVIDAR\n                  address_line1: 210 KING ST STE 6100\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                bank_account:\n                  id: bank_8cad8df5354d33f\n                  description: Test Bank Account\n                  metadata: {}\n                  routing_number: '322271627'\n                  account_number: '123456789'\n                  account_type: individual\n                  signatory: John Doe\n                  bank_name: J.P. MORGAN CHASE BANK, N.A.\n                  verified: true\n                  date_created: 2015-11-06T19:24:24.440Z\n                  date_modified: 2015-11-06T19:41:28.312Z\n                  object: bank_account\n                carrier: USPS\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_small_1.png?version=v1\u0026expires=1568239682\u0026signature=ublquO_xAdvAkAwGJuOjgZQwcz7c3Ao4NHWHeDVTBEBjcrQr8LavxWEwUc1KU105Zex3SajRQLd6hqJOrDl0Bw\n                    medium: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_medium_1.png?version=v1\u0026expires=1568239682\u0026signature=vHyuOtsanX4HnY_0LNft6ZJ8C67JnbI8ZVCjA2d9nR0Rd6lCl0Nk1s6BAhefbBkzecX9Yp0B8NWN9Q5v1Z4ICw\n                    large: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_large_1.png?version=v1\u0026expires=1568239682\u0026signature=SzCLKJ5m_TKJPLlL9PMw-zW9wo5mVYEK1jCtHwWRwwEaNU2v4Aehy-YHtus3TFJIt8RD2M-0Y3MtCxHwhqSABg\n                  - small: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_small_2.png?version=v1\u0026expires=1568239682\u0026signature=iElagODaOCkF_lCUxIw-lK50GhEU1ar_odmslCazZqD4Fsd_rQLx3M4Q5HzYWp4evfzuCoFvk4oAQVuIAaguAw\n                    medium: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_medium_2.png?version=v1\u0026expires=1568239682\u0026signature=2vwvm_QsfmdtkAa-_F4uk-0yeUPRascyhfwOr-OX1ya9i_8gdFQAxMTrP-FfNBVSYFXeknFm6IUPJHggfgeiBg\n                    large: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_large_2.png?version=v1\u0026expires=1568239682\u0026signature=NQf7tP9F4rP66S16hQ8duFpZSbTjaGBGK61Sr3H5D4CWtRyaPdoQlIpT2Jw-eKRcuYRkDEtQse_oWtL5gPqXDQ\n                  - small: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_small_3.png?version=v1\u0026expires=1568239682\u0026signature=dbjFd44H9TyZsc3d0fqKon5e0GqZ6GA1dT26MH6WnoX8lrQor2CA6sZJ5qmu0Z4SAFlMKAzb-twqN7faLjEbDQ\n                    medium: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_medium_3.png?version=v1\u0026expires=1568239682\u0026signature=vSgwVs7T9E6KKBK7XU-6jRL9i0jvgTqvNxkdRARFf0UNlryJFm8l_t_x5mPH0sCTFZcLp7ouRaR5hhdHC6vZBQ\n                    large: \u003e-\n                      https://lob-assets.com/checks/chk_92b9a6714bc0557c_thumb_large_3.png?version=v1\u0026expires=1568239682\u0026signature=If4tXlN13WYy7JDPpFkWw0HAQpYNJHqi2UstiPHxUA_8IAj6vXORb-22acI124Pd1bR1QSjBHAW1gbiJ0kjiAQ\n                merge_variables: null\n                expected_delivery_date: 2019-08-16\n                mail_type: usps_first_class\n                date_created: 2019-08-08T19:34:27.802Z\n                date_modified: 2019-08-08T19:34:30.582Z\n                send_date: 2019-08-08T19:34:27.802Z\n                object: check\n            object: list\n            next_url: \u003e-\n              https://api.lob.com/v1/checks?limit=2\u0026after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wOFQxOTozNDoyNy44MDJaIiwiaWRPZmZzZXQiOiJjaGtfOTJiOWE2NzE0YmMwNTU3YyJ9\n            previous_url: null\n            count: 2\n    post_check:\n      description: Returns a check object\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/check'\n          example:\n            id: chk_534f10783683daa0\n            description: Demo Check\n            metadata: {}\n            check_number: 10062\n            memo: rent\n            amount: 22.5\n            url: \u003e-\n              https://lob-assets.com/checks/chk_534f10783683daa0.pdf?expires=1540372221\u0026signature=Ty3IV2bGPEoQfrdraYHlNYTaarnHLXb\n            to:\n              id: adr_bae820679f3f536b\n              description: Harry - Office\n              name: HARRY ZHANG\n              company: LOB\n              email: harry@lob.com\n              phone: '5555555555'\n              address_line1: 210 KING ST STE 6100\n              address_line2: ''\n              address_city: SAN FRANCISCO\n              address_state: CA\n              address_zip: 94107-1741\n              address_country: UNITED STATES\n              metadata: {}\n              date_created: 2018-12-08T03:08:43.446Z\n              date_modified: 2018-12-08T03:08:43.446Z\n              object: address\n              recipient_moved: false\n            from:\n              id: adr_b8fb5acf3a2b55db\n              name: LEORE AVIDAR\n              address_line1: 210 KING ST STE 6100\n              address_city: SAN FRANCISCO\n              address_state: CA\n              address_zip: 94107-1741\n              address_country: UNITED STATES\n              metadata: {}\n              date_created: 2017-09-05T17:47:53.767Z\n              date_modified: 2017-09-05T17:47:53.767Z\n              object: address\n            bank_account:\n              id: bank_8cad8df5354d33f\n              description: Test Bank Account\n              metadata: {}\n              routing_number: '322271627'\n              account_number: '123456789'\n              signatory: John Doe\n              bank_name: J.P. MORGAN CHASE BANK, N.A.\n              verified: true\n              account_type: company\n              date_created: 2015-11-06T19:24:24.440Z\n              date_modified: 2015-11-06T19:41:28.312Z\n              object: bank_account\n              signature_url: \u003e-\n                https://lob-assets.com/bank-accounts/asd_asdfghjkqwertyui.pdf?expires=1234567890\u0026signature=aksdf\n            carrier: USPS\n            tracking_events: []\n            thumbnails:\n              - small: \u003e-\n                  https://lob-assets.com/checks/chk_534f10783683daa0_thumb_small_1.png?expires=1540372221\u0026signature=ShhPpH74wYkNiAj7Il9B6q8ZKkzlGd4\n                medium: \u003e-\n                  https://lob-assets.com/checks/chk_534f10783683daa0_thumb_medium_1.png?expires=1540372221\u0026signature=tmIOq6aAyKgzAECp7STj1rvJuMS5Svd\n                large: \u003e-\n                  https://lob-assets.com/checks/chk_534f10783683daa0_thumb_large_1.png?expires=1540372221\u0026signature=04nLEwE9d2qgQJNgJYWSOgPnU0FZbEv\n            merge_variables:\n              name: Harry\n            expected_delivery_date: 2017-09-12\n            mail_type: usps_first_class\n            date_created: 2017-09-05T17:47:53.896Z\n            date_modified: 2017-09-05T17:47:53.896Z\n            send_date: 2017-09-05T17:47:53.896Z\n            object: check\n            message: pancakes are good\n            check_bottom_template_id: tmpl_a\n            attachment_template_id: tmpl_a\n            check_bottom_template_version_id: vrsn_a\n            attachment_template_version_id: vrsn_a\n            deleted: true\n    intl_autocompletions_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: address_prefix is required\n              status_code: 422\n    intl_autocompletions:\n      description: Returns an international autocompletions object.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/intl_autocompletions'\n          examples:\n            basic:\n              value:\n                id: intl_auto_a3ac97bcfbb2460ab20c\n                suggestions:\n                  - primary_number_range: ''\n                    primary_line: 340 WATERSTONE PL SE\n                    city: AIRDRIE\n                    state: AB\n                    country: CA\n                    zip_code: T4B 2G7\n                  - primary_number_range: ''\n                    primary_line: 340 WATT BLVD SW\n                    city: EDMONTON\n                    state: AB\n                    country: CA\n                    zip_code: T6X 1R7\n                  - primary_number_range: ''\n                    primary_line: 340 WATROUS ST\n                    city: PRINCE GEORGE\n                    state: BC\n                    country: CA\n                    zip_code: V2M 2B6\n                  - primary_number_range: ''\n                    primary_line: 340 WATERS RD\n                    city: QUALICUM BEACH\n                    state: BC\n                    country: CA\n                    zip_code: V9K 2B8\n                  - primary_number_range: ''\n                    primary_line: SUITE 340, 1510 WATT DR SW\n                    city: EDMONTON\n                    state: AB\n                    country: CA\n                    zip_code: T6X 2E6\n                  - primary_number_range: ''\n                    primary_line: WATERFRONT POINTE WEST SUITE 340, 5212 25 AVE NW\n                    city: EDMONTON\n                    state: AB\n                    country: CA\n                    zip_code: T6L 6R7\n                  - primary_number_range: ''\n                    primary_line: WATERFRONT POINTE EAST SUITE 340, 2520 52 ST NW\n                    city: EDMONTON\n                    state: AB\n                    country: CA\n                    zip_code: T6L 6S2\n                  - primary_number_range: ''\n                    primary_line: WATERSTONE SUITE 340, 6079 MAYNARD WAY NW\n                    city: EDMONTON\n                    state: AB\n                    country: CA\n                    zip_code: T6R 0S4\n                  - primary_number_range: ''\n                    primary_line: WATSON APTS. SUITE 340, 5207 39 ST\n                    city: RED DEER\n                    state: AB\n                    country: CA\n                    zip_code: T4N 0Z9\n                  - primary_number_range: ''\n                    primary_line: WATERS EDGE SUITE 3400..3409, 2600 FERGUSON RD\n                    city: SAANICHTON\n                    state: BC\n                    country: CA\n                    zip_code: V8M 2C1\n                object: intl_autocompletion\n            test:\n              value:\n                id: intl_auto_a3ac97bcfbb2460ab20c\n                suggestions:\n                  - primary_number_range: ''\n                    primary_line: 1 TWIN OAKS CT\n                    city: GREENVILLE\n                    state: SC\n                    country: CA\n                    zip_code: '29615'\n                  - primary_number_range: ''\n                    primary_line: 1 TEVA DR\n                    city: STAR CITY\n                    state: CA\n                    country: CA\n                    zip_code: '91355'\n                  - primary_number_range: ''\n                    primary_line: 1 TELEGRAM AVE\n                    city: ELMONT\n                    state: NY\n                    country: CA\n                    zip_code: '11003'\n                  - primary_number_range: ''\n                    primary_line: 1 TELEGRAM AVE\n                    city: GARDEN CITY\n                    state: KS\n                    country: CA\n                    zip_code: '67846'\n                  - primary_number_range: ''\n                    primary_line: 1 TELEGRAPH HILL RD\n                    city: HOLMDEL\n                    state: NJ\n                    country: CA\n                    zip_code: '07733'\n                  - primary_number_range: ''\n                    primary_line: 1 TELEGRAPH HILL RD S\n                    city: HOLMDEL\n                    state: NJ\n                    country: CA\n                    zip_code: '07733'\n                  - primary_number_range: ''\n                    primary_line: 1 TELEGRAPH HILL BLVD\n                    city: SAN FRANCISCO\n                    state: CA\n                    country: CA\n                    zip_code: '94133'\n                object: intl_autocompletion\n    intl_verifications:\n      description: Returns an international verification object.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/intl_verification'\n          examples:\n            full:\n              value:\n                id: intl_ver_c7cb63d68f8d6\n                recipient: null\n                primary_line: 370 WATER ST\n                secondary_line: ''\n                last_line: SUMMERSIDE PE C1N 1C4\n                country: CA\n                coverage: SUBBUILDING\n                deliverability: deliverable\n                status: LV4\n                components:\n                  primary_number: '370'\n                  street_name: WATER ST\n                  city: SUMMERSIDE\n                  state: PE\n                  postal_code: C1N 1C4\n                object: intl_verification\n            test:\n              value:\n                id: intl_ver_c7cb63d68f8d6\n                recipient: TEST KEYS DO NOT VERIFY ADDRESSES\n                primary_line: 370 WATER ST\n                secondary_line: ''\n                last_line: SUMMERSIDE PE C1N 1C4\n                country: CA\n                coverage: SUBBUILDING\n                deliverability: deliverable\n                status: LV4\n                components:\n                  primary_number: '370'\n                  street_name: WATER ST\n                  city: SUMMERSIDE\n                  state: PE\n                  postal_code: C1N 1C4\n                object: intl_verification\n    letter_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/letter_deletion'\n          example:\n            id: ltr_123456789\n            deleted: true\n    all_letters:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` letters. Each entry in the array is a separate letter. The\n        previous and next page of letters can be retrieved by calling the\n        endpoint contained in the `previous_url` and `next_url` fields in the\n        API response respectively. If no more letters are available beyond the\n        current set of returned results, the `next_url` field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of letters\n                    items:\n                      $ref: '#/components/schemas/letter'\n          example:\n            data:\n              - id: ltr_5ba44b462c79f07c\n                description: Demo Letter\n                metadata: {}\n                to:\n                  id: adr_asdi2y3riuasasoi\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  phone: '5555555555'\n                  email: harry@lob.com\n                  metadata: {}\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PRINCE EDWARD ISLAND\n                  address_zip: C1N 1C4\n                  address_country: CANADA\n                  recipient_moved: false\n                  date_created: 2019-09-20T00:14:00.361Z\n                  date_modified: 2019-09-20T00:14:00.361Z\n                  object: address\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                color: true\n                double_sided: false\n                address_placement: top_first_page\n                return_envelope: false\n                perforated_page: null\n                extra_service: certified\n                custom_envelope: null\n                template_id: tmpl_a\n                template_version_id: vrsn_a\n                mail_type: usps_first_class\n                url: \u003e-\n                  https://lob-assets.com/letters/ltr_5ba44b462c79f07c.pdf?version=v1\u0026expires=1568239830\u0026signature=Ob-DUPLJLM4scWQeCDNadPJ4j33MZw16pykOxwv2us-bA7utTYi6oZ8WrEtBYDBBo09XkapR3gdJf0NEr90xAA\n                merge_variables: null\n                carrier: USPS\n                tracking_number: '92071902358909000011275538'\n                tracking_events:\n                  - id: evnt_9e84094c9368cfb\n                    type: certified\n                    name: Delivered\n                    details:\n                      event: delivered\n                      description: Package has been delivered.\n                      notes: Delivered, Front Desk/Reception/Mail Room\n                      action_required: false\n                    location: '33408'\n                    time: 2019-10-08T19:41:00Z\n                    date_created: 2019-10-08T19:41:00Z\n                    date_modified: 2019-10-08T19:41:00Z\n                    object: tracking_event\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_small_1.png?version=v1\u0026expires=1568239830\u0026signature=xZUmE8rq8wSECHPEb9c37cUDZBzGUO3XK5LsIPZhI6dOXgm6zJEn8_7tKuZ3JWBmvNJNXdTl_ufkNu4avjQUDw\n                    medium: \u003e-\n                      https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_medium_1.png?version=v1\u0026expires=1568239830\u0026signature=H7354Qpcm9S4aXbrMsBe6QJ6lSNi9IWPgMJtLWLi4Kyx9tHF8Mp9YEc_IL9x89Jfw4-yRzKDXA410X4W0PssBQ\n                    large: \u003e-\n                      https://lob-assets.com/letters/ltr_5ba44b462c79f07c_thumb_large_1.png?version=v1\u0026expires=1568239830\u0026signature=54LUIDKZyItA9pnC87d1pJVAuw8bhKLCsMpNWkB3LgdVWxPxxb_c1IyIWAbSR-dyOYEOlDBCc40J4Kns-O_mAg\n                expected_delivery_date: 2019-08-16\n                date_created: 2019-08-08T17:09:14.514Z\n                date_modified: 2019-08-08T17:09:16.850Z\n                send_date: 2019-08-08\n                object: letter\n              - id: ltr_da8267c6a6545cd6\n                description: Demo Letter\n                metadata: {}\n                to:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                color: true\n                double_sided: false\n                address_placement: top_first_page\n                return_envelope: false\n                perforated_page: null\n                extra_service: null\n                custom_envelope: null\n                mail_type: usps_first_class\n                url: \u003e-\n                  https://lob-assets.com/letters/ltr_da8267c6a6545cd6.pdf?version=v1\u0026expires=1568239830\u0026signature=HH-5RnbD4x0eJcnEC9HhqKSvQGsbkjovzvqSKgBijUHKIXwEKQJ4CbYhKs_U2q2A1k20Xefcaw7bfdPKozuqCQ\n                merge_variables: null\n                carrier: USPS\n                tracking_number: null\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_small_1.png?version=v1\u0026expires=1568239830\u0026signature=C1Rs83187HpWGhsg_pJIOhDIKlDtC_IgBBxHiocCEzJ8CncJwqrq5yHke-p97Dv7o81G_pfhFmirai589O6DCw\n                    medium: \u003e-\n                      https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_medium_1.png?version=v1\u0026expires=1568239830\u0026signature=gz63l0yi3sK_sXjYfIVdLSvkknJFr_O5TWRulo_iKIgS-PosIl6J0tDR6bx_Tv5Ab_w7DABg3qdKZ846MZ7TCw\n                    large: \u003e-\n                      https://lob-assets.com/letters/ltr_da8267c6a6545cd6_thumb_large_1.png?version=v1\u0026expires=1568239830\u0026signature=4Y1OIymaWkSO3aBIHCeshFAVnF-pDcF2FFqkx_jovaUFuk4FT1SI24L7_POwTRXQHlETMGlzkP_CGgqselRUAA\n                expected_delivery_date: 2019-08-16\n                date_created: 2019-08-08T17:08:12.224Z\n                date_modified: 2019-08-08T17:08:13.990Z\n                send_date: 2019-08-08T17:08:12.224Z\n                cards: null\n                object: letter\n            object: list\n            next_url: \u003e-\n              https://api.lob.com/v1/letters?limit=2\u0026after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wOC0wOFQxNzowODoxMi4yMjRaIiwiaWRPZmZzZXQiOiJsdHJfZGE4MjY3YzZhNjU0NWNkNiJ9\n            previous_url: null\n            count: 2\n    post_letter:\n      description: Returns a letter object\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/letter'\n          example:\n            id: ltr_4868c3b754655f90\n            description: Demo Letter\n            metadata: {}\n            to:\n              id: adr_d3489cd64c791ab5\n              description: null\n              name: HARRY ZHANG\n              company: null\n              phone: null\n              email: null\n              address_line1: 210 KING ST STE 6100\n              address_line2: null\n              address_city: SAN FRANCISCO\n              address_state: CA\n              address_zip: 94107-1741\n              address_country: UNITED STATES\n              metadata: {}\n              date_created: 2017-09-05T15:54:53.264Z\n              date_modified: 2017-09-05T15:54:53.264Z\n              deleted: true\n              object: address\n            from:\n              id: adr_b8fb5acf3a2b55db\n              description: null\n              name: LEORE AVIDAR\n              company: null\n              phone: null\n              email: null\n              address_line1: 210 KING ST STE 6100\n              address_line2: null\n              address_city: SAN FRANCISCO\n              address_state: CA\n              address_zip: 94107-1741\n              address_country: UNITED STATES\n              metadata: {}\n              date_created: 2017-09-05T15:54:53.264Z\n              date_modified: 2017-09-05T15:54:53.264Z\n              deleted: true\n              object: address\n            color: true\n            double_sided: true\n            address_placement: top_first_page\n            return_envelope: false\n            perforated_page: null\n            custom_envelope: null\n            extra_service: null\n            mail_type: usps_first_class\n            url: \u003e-\n              https://lob-assets.com/letters/ltr_4868c3b754655f90.pdf?expires=1540372221\u0026signature=8r94fse8uam7wGWmW5baxXulU88X2CA\n            carrier: USPS\n            tracking_number: null\n            tracking_events: []\n            thumbnails:\n              - small: \u003e-\n                  https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221\u0026signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\n                medium: \u003e-\n                  https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221\u0026signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\n                large: \u003e-\n                  https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221\u0026signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\n            merge_variables:\n              name: Harry\n            expected_delivery_date: 2017-09-12\n            date_created: 2017-09-05T15:54:53.346Z\n            date_modified: 2017-09-05T15:54:53.346Z\n            send_date: 2017-09-05T15:54:53.346Z\n            cards:\n              - id: card_c51ae96f5cebf3e\n                account_id: fa9ea650fc7b31a89f92\n                description: null\n                url: \u003e-\n                  https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1\u0026expires=1636910992\u0026signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA\n                size: 2.125x3.375\n                auto_reorder: false\n                reorder_quantity: null\n                raw_url: \u003e-\n                  https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                front_original_url: \u003e-\n                  https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                back_original_url: \u003e-\n                  https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1\u0026expires=1636910992\u0026signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg\n                    medium: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1\u0026expires=1636910992\u0026signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA\n                    large: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1\u0026expires=1636910992\u0026signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw\n                  - small: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1\u0026expires=1636910992\u0026signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg\n                    medium: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1\u0026expires=1636910992\u0026signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag\n                    large: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1\u0026expires=1636910992\u0026signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw\n                available_quantity: 10000\n                pending_quantity: 0\n                countries: null\n                status: rendered\n                mode: test\n                orientation: horizontal\n                threshold_amount: 0\n                date_created: 2017-08-05T15:54:53.346Z\n                date_modified: 2017-08-05T15:54:53.346Z\n                object: card\n            object: letter\n    postcard_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/postcard_deletion'\n          example:\n            id: psc_123456789\n            deleted: true\n    all_postcards:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` postcards. Each entry in the array is a separate postcard. The\n        previous and next page of postcards can be retrieved by calling the\n        endpoint contained in the `previous_url` and `next_url` fields in the\n        API response respectively.\u003cbr\u003eIf no more postcards are available beyond\n        the current set of returned results, the `next_url` field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of postcards\n                    items:\n                      $ref: '#/components/schemas/postcard'\n          example:\n            data:\n              - id: psc_208e45e48d271294\n                description: null\n                metadata: {}\n                to:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1\u0026expires=1619218302\u0026signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\n                carrier: USPS\n                front_template_id: null\n                back_template_id: null\n                front_template_version_id: null\n                back_template_version_id: null\n                date_created: 2021-03-24T22:51:42.838Z\n                date_modified: 2021-03-24T22:51:42.838Z\n                send_date: 2021-03-24T22:51:42.838Z\n                object: postcard\n              - id: psc_0e03d1ad7d31f151\n                description: null\n                metadata: {}\n                to:\n                  id: adr_c7cb63d68f8d6\n                  description: null\n                  name: JANE DOE\n                  company: LOB\n                  phone: '5555555555'\n                  email: jane.doe@lob.com\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PE\n                  address_zip: C1N 1C4\n                  address_country: CANADA\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                  recipient_moved: false\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1\u0026expires=1619218302\u0026signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\n                carrier: USPS\n                front_template_id: null\n                back_template_id: null\n                front_template_version_id: null\n                back_template_version_id: null\n                tracking_events: []\n                size: 6x11\n                mail_type: usps_first_class\n                merge_variables: {}\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221\u0026signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\n                    medium: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221\u0026signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\n                    large: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221\u0026signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\n                expected_delivery_date: 2021-03-30\n                date_created: 2021-03-24T22:51:42.838Z\n                date_modified: 2021-03-24T22:51:42.838Z\n                send_date: 2021-03-24T22:51:42.838Z\n                object: postcard\n            object: list\n            previous_url: null\n            next_url: null\n            count: 2\n    post_postcard:\n      description: Returns a postcard object\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/postcard'\n          examples:\n            basic:\n              value:\n                id: psc_208e45e48d271294\n                description: null\n                metadata: {}\n                to:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: null\n                  company: LOB\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1\u0026expires=1619218302\u0026signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\n                carrier: USPS\n                front_template_id: null\n                back_template_id: null\n                date_created: 2021-03-24T22:51:42.838Z\n                date_modified: 2021-03-24T22:51:42.838Z\n                send_date: 2021-03-24T22:51:42.838Z\n                object: postcard\n            full:\n              value:\n                id: psc_0e03d1ad7d31f151\n                description: null\n                metadata: {}\n                to:\n                  id: adr_c7cb63d68f8d6\n                  description: null\n                  name: JANE DOE\n                  company: LOB\n                  phone: '5555555555'\n                  email: jane.doe@lob.com\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PE\n                  address_zip: C1N 1C4\n                  address_country: CANADA\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                  recipient_moved: false\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1\u0026expires=1619218302\u0026signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\n                carrier: USPS\n                front_template_id: tmpl_93c369f06171958\n                back_template_id: tmpl_93c369f06171958\n                front_template_version_id: vrsn_a83e044941c393b\n                back_template_version_id: vrsn_a83e044941c393b\n                tracking_events: []\n                size: 6x11\n                mail_type: usps_first_class\n                merge_variables: {}\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221\u0026signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\n                    medium: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221\u0026signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\n                    large: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221\u0026signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\n                expected_delivery_date: 2021-03-30\n                date_created: 2021-03-24T22:51:42.838Z\n                date_modified: 2021-03-24T22:51:42.838Z\n                send_date: 2021-03-24T22:51:42.838Z\n                object: postcard\n    self_mailer_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/self_mailer_deletion'\n          example:\n            id: sfm_123456789\n            deleted: true\n    all_self_mailers:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` self_mailers. Each entry in the array is a separate self_mailer.\n        The previous and next page of self_mailers can be retrieved by calling\n        the endpoint contained in the `previous_url` and `next_url` fields in\n        the API response respectively.\u003cbr\u003eIf no more self_mailers are available\n        beyond the current set of returned results, the `next_url` field will be\n        empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of self_mailers\n                    items:\n                      $ref: '#/components/schemas/self_mailer'\n          example:\n            data:\n              - id: sfm_7239rhwqkrfaskas\n                description: April Campaign\n                metadata: {}\n                to:\n                  id: adr_asdi2y3riuasasoi\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  phone: '5555555555'\n                  email: harry@lob.com\n                  metadata: {}\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PRINCE EDWARD ISLAND\n                  address_zip: C1N 1C4\n                  address_country: CANADA\n                  recipient_moved: false\n                  date_created: 2019-09-20T00:14:00.361Z\n                  date_modified: 2019-09-20T00:14:00.361Z\n                  object: address\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: null\n                  company: LOB\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1\u0026expires=1618781264\u0026signature=YP_bCwrgVA2lz1Gr1YVCJN1f-WspUGsH0aJp2ihjfLXU7lDUV12_xRv4uPch0mfWeOOxEqpyP8hGpgvjmQKNAw\n                outside_template_id: tmpl_a3cb937f26d7eec\n                inside_template_id: tmpl_a3cb937f26d7eec\n                inside_template_version_id: vrsn_bfdf70893b00a85\n                outside_template_version_id: vrsn_bfdf70893b00a85\n                carrier: USPS\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1\u0026expires=1618781264\u0026signature=A7q5HbRO53sUYYnwGlmP5mTS6ylLE7kS2mYhfcEOdexjyqG7UseK0MD26DppE4Q0aE4u2msDVMxd5ukjMerYCg\n                    medium: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1\u0026expires=1618781264\u0026signature=b9pynuawVpU_vrhnT_mTpksdE-FLF_ZjdIBOFR_ltIzEGlx-VKD4VvZrqP98lG2D8V7UKQ7SdRr2nUAk4LxvCg\n                    large: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1\u0026expires=1618781264\u0026signature=g2jifhCselPqIj8au6lsbJMNFN8ZX3aM6GkLoAXiHBCS8X5mF9nhVbmO0odpnmwNlV1CWIp-MXVsZkC3NmxqBQ\n                  - small: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1\u0026expires=1618781264\u0026signature=biJY4-ZbNNRydPYg3cZkq7wxjILbPBK_nIVyoyQsg5X5q4jlsa-2fzeMa48V9jprUetsC6WEuYvasHosRfG_DQ\n                    medium: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1\u0026expires=1618781264\u0026signature=xEAX7bURyc8fSphacuo5yb7iVIpT8Xvq05KgMaNQS4r3aCpx0z1p42wbPmW758B5Ae0li1YDYvVyzS7qJIoWAw\n                    large: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1\u0026expires=1618781264\u0026signature=NieHDnoQ7STZUvofHrFt7S987CzIkUJWpaSgpVQPZw-C3_wwTPsIrvxYdXEuFrr6ciTUcxRBFPlE0lurmMkyCA\n                merge_variables:\n                  name: null\n                size: 6x18_bifold\n                mail_type: usps_first_class\n                expected_delivery_date: 2021-03-24\n                date_created: 2021-03-16T18:40:40.504Z\n                date_modified: 2021-03-16T18:41:06.691Z\n                send_date: 2021-03-16T18:45:40.493Z\n                deleted: true\n                object: self_mailer\n              - id: sfm_8ffbe811dea49dcf\n                description: April Campaign\n                metadata: {}\n                to:\n                  id: adr_f9228b743884ff98\n                  description: null\n                  name: AYA\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 2812 PARK RD\n                  address_line2: null\n                  address_city: CHARLOTTE\n                  address_state: NC\n                  address_zip: 28209-1314\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2021-03-16T18:40:40.410Z\n                  date_modified: 2021-03-16T18:40:40.410Z\n                  deleted: true\n                  object: address\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: null\n                  company: LOB\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:01:07.651Z\n                  date_modified: 2018-12-08T03:01:07.651Z\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1\u0026expires=1618781264\u0026signature=YP_bCwrgVA2lz1Gr1YVCJN1f-WspUGsH0aJp2ihjfLXU7lDUV12_xRv4uPch0mfWeOOxEqpyP8hGpgvjmQKNAw\n                outside_template_id: tmpl_a3cb937f26d7eec\n                inside_template_id: tmpl_a3cb937f26d7eec\n                inside_template_version_id: vrsn_bfdf70893b00a85\n                outside_template_version_id: vrsn_bfdf70893b00a85\n                carrier: USPS\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1\u0026expires=1618781264\u0026signature=A7q5HbRO53sUYYnwGlmP5mTS6ylLE7kS2mYhfcEOdexjyqG7UseK0MD26DppE4Q0aE4u2msDVMxd5ukjMerYCg\n                    medium: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1\u0026expires=1618781264\u0026signature=b9pynuawVpU_vrhnT_mTpksdE-FLF_ZjdIBOFR_ltIzEGlx-VKD4VvZrqP98lG2D8V7UKQ7SdRr2nUAk4LxvCg\n                    large: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1\u0026expires=1618781264\u0026signature=g2jifhCselPqIj8au6lsbJMNFN8ZX3aM6GkLoAXiHBCS8X5mF9nhVbmO0odpnmwNlV1CWIp-MXVsZkC3NmxqBQ\n                  - small: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1\u0026expires=1618781264\u0026signature=biJY4-ZbNNRydPYg3cZkq7wxjILbPBK_nIVyoyQsg5X5q4jlsa-2fzeMa48V9jprUetsC6WEuYvasHosRfG_DQ\n                    medium: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1\u0026expires=1618781264\u0026signature=xEAX7bURyc8fSphacuo5yb7iVIpT8Xvq05KgMaNQS4r3aCpx0z1p42wbPmW758B5Ae0li1YDYvVyzS7qJIoWAw\n                    large: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1\u0026expires=1618781264\u0026signature=NieHDnoQ7STZUvofHrFt7S987CzIkUJWpaSgpVQPZw-C3_wwTPsIrvxYdXEuFrr6ciTUcxRBFPlE0lurmMkyCA\n                merge_variables:\n                  name: null\n                size: 6x18_bifold\n                mail_type: usps_first_class\n                expected_delivery_date: 2021-03-24\n                date_created: 2021-03-16T18:40:40.504Z\n                date_modified: 2021-03-16T18:41:06.691Z\n                send_date: 2021-03-16T18:45:40.493Z\n                deleted: true\n                object: self_mailer\n            object: list\n            next_url: null\n            previous_url: null\n            count: 2\n    post_self_mailer:\n      description: Returns a self_mailer object\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/self_mailer'\n          example:\n            id: sfm_8ffbe811dea49dcf\n            description: April Campaign\n            metadata: {}\n            to:\n              id: adr_bae820679f3f536b\n              description: null\n              name: HARRY ZHANG\n              company: null\n              phone: null\n              email: null\n              address_line1: 210 KING ST STE 6100\n              address_line2: null\n              address_city: SAN FRANCISCO\n              address_state: CA\n              address_zip: 94107-1741\n              address_country: UNITED STATES\n              metadata: {}\n              date_created: 2017-09-05T17:47:53.767Z\n              date_modified: 2017-09-05T17:47:53.767Z\n              deleted: true\n              object: address\n            from:\n              id: adr_210a8d4b0b76d77b\n              description: null\n              name: LEORE AVIDAR\n              company: null\n              phone: null\n              email: null\n              address_line1: 210 KING ST STE 6100\n              address_line2: null\n              address_city: SAN FRANCISCO\n              address_state: CA\n              address_zip: 94107-1741\n              address_country: UNITED STATES\n              metadata: {}\n              date_created: 2017-09-05T17:47:53.767Z\n              date_modified: 2017-09-05T17:47:53.767Z\n              deleted: true\n              object: address\n            url: \u003e-\n              https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1\u0026expires=1618512040\u0026signature=qvyCqXI1ndBvc4AjvG8FlirqLXEcfmYo4sDrRtabaXMOsX88to9G3K49uIk_aqevvZXe8HoRYD_nWydbQHqaCA\n            outside_template_id: tmpl_a3cb937f26d7eec\n            inside_template_id: tmpl_a3cb937f26d7eec\n            inside_template_version_id: vrsn_bfdf70893b00a85\n            outside_template_version_id: vrsn_bfdf70893b00a85\n            carrier: USPS\n            tracking_events: []\n            thumbnails:\n              - small: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1\u0026expires=1618512040\u0026signature=-bipeUHP-hAMcCBSrWM0ZH1VwRdSPNVGGZN9hAZKr6Lh4ly6uxvratVd5LXJCK_zOEMYk_mTWASt0ge7OY6SDA\n                medium: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1\u0026expires=1618512040\u0026signature=ryxN7bsXGtw_GRFSP3Cs3A3IYjxZi3cW9BHDCNgMt6p3nobVmsc_iFHt2e-S7ndAXhhN7nP-MQVov3bt3r37BQ\n                large: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1\u0026expires=1618512040\u0026signature=kBrm00xkyCkJNJRHxH8HshFaebtOxnzjVWOs1VVmGMuw8H6OBNcMAMxt9s49K0jlpHoh3Nr9uSncEZMQaaNjAg\n              - small: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1\u0026expires=1618512040\u0026signature=3gTgU7Fd3KoT_vNlQnTGptRps5ZgnkhSnPrAwk7L98higIzSwfKoLvuu_DIpMM48dHbxckKT9waR8euJ4KSDBQ\n                medium: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1\u0026expires=1618512040\u0026signature=Ue1lw5CMj7KRx6cMQL8xPeazaHCdJzWcACd1w3acuYPnWkVIpSt62OIO7hAtpAQK9xm1dhhlFj0rqRZMdRMMBA\n                large: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1\u0026expires=1618512040\u0026signature=cICc7HEm1xG_eyM4a_wtvPk2FqoLRmtgGa29kJisWnMIYBL0OkyzG4ZCYGMhp-5cZpJlSpXfTgGKh_Qmeo1TDw\n            merge_variables:\n              name: null\n            size: 6x18_bifold\n            mail_type: usps_first_class\n            expected_delivery_date: 2021-03-24\n            date_created: 2021-03-16T18:40:40.504Z\n            date_modified: 2021-03-16T18:40:40.504Z\n            send_date: 2021-03-16T18:45:40.493Z\n            object: self_mailer\n    template_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: html is required\n              status_code: 422\n    post_template_version:\n      description: Returns the template version with the given template and version ids.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/template_version'\n          example:\n            id: vrsn_534e339882d2282\n            description: Second Version\n            html: \u003chtml\u003eSecond HTML for {{name}}\u003c/html\u003e\n            date_created: 2017-11-09T04:49:38.016Z\n            date_modified: 2017-11-09T04:49:38.016Z\n            object: version\n    template_version_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/template_version_deletion'\n          example:\n            value:\n              id: vrsn_123456789\n              deleted: true\n    all_template_versions:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` template versions. Each entry in the array is a separate\n        template version object. The previous and next page of template versions\n        can be retrieved by calling the endpoint contained in the `previous_url`\n        and `next_url` fields in the API response respectively.\u003cbr\u003eIf no more\n        template versions are available beyond the current set of returned\n        results, the `next_url` field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of template versions\n                    items:\n                      $ref: '#/components/schemas/template_version'\n          example:\n            data:\n              - id: vrsn_4d6ff5d868bf630\n                description: Second Version\n                html: 'Second HTML for '\n                date_created: 2017-11-09T05:09:03.665Z\n                date_modified: 2018-05-22T22:01:10.479Z\n                object: version\n              - id: vrsn_2a17159c1911919\n                description: Test Template\n                html: 'HTML for '\n                date_created: 2017-11-09T05:08:40.004Z\n                date_modified: 2018-05-22T22:01:11.309Z\n                object: version\n            object: list\n            count: 2\n    template_deleted:\n      description: Deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/template_deletion'\n          example:\n            value:\n              id: tmpl_123456789\n              deleted: true\n    all_templates:\n      description: \u003e-\n        A dictionary with a data property that contains an array of up to\n        `limit` templates. Each entry in the array is a separate template. The\n        previous and next page of templates can be retrieved by calling the\n        endpoint contained in the `previous_url` and `next_url` fields in the\n        API response respectively.\u003cbr\u003eIf no more templates are available beyond\n        the current set of returned results, the `next_url` field will be empty.\n      content:\n        application/json:\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/list'\n              - type: object\n                properties:\n                  data:\n                    type: array\n                    description: list of templates\n                    items:\n                      $ref: '#/components/schemas/template'\n          example:\n            data:\n              - id: tmpl_d5a5a89da9106f8\n                description: Test Template\n                versions:\n                  - id: vrsn_232a02fb8224791\n                    suggest_json_editor: true\n                    description: Test Template\n                    engine: legacy\n                    html: 'HTML for '\n                    date_created: 2019-07-27T23:49:01.512Z\n                    date_modified: 2019-07-27T23:49:01.512Z\n                    object: version\n                published_version:\n                  id: vrsn_232a02fb8224791\n                  suggest_json_editor: false\n                  description: Test Template\n                  engine: handlebars\n                  html: 'HTML for '\n                  date_created: 2019-07-27T23:49:01.512Z\n                  date_modified: 2019-07-27T23:49:01.512Z\n                  object: version\n                metadata: {}\n                date_created: 2019-07-27T23:49:01.511Z\n                date_modified: 2019-07-27T23:49:01.511Z\n                object: template\n              - id: tmpl_59b2150ae120887\n                description: Test Template\n                versions:\n                  - id: vrsn_2a7eb63ccb795b9\n                    description: Test Template\n                    html: 'HTML for '\n                    date_created: 2019-03-29T10:22:34.643Z\n                    date_modified: 2019-03-29T10:22:34.643Z\n                    object: version\n                published_version:\n                  id: vrsn_2a7eb63ccb795b9\n                  description: Test Template\n                  html: 'HTML for '\n                  date_created: 2019-03-29T10:22:34.643Z\n                  date_modified: 2019-03-29T10:22:34.643Z\n                  object: version\n                metadata: {}\n                date_created: 2019-03-29T10:22:34.642Z\n                date_modified: 2019-03-29T10:22:34.642Z\n                object: template\n            object: list\n            previous_url: null\n            next_url: \u003e-\n              https://api.lob.com/v1/templates?limit=2\u0026after=eyJkYXRlT2Zmc2V0IjoiMjAxOS0wMy0yOVQxMDoyMjozNC42NDJaIiwiaWRPZmZzZXQiOiJ0bXBsXzU5YjIxNTBhZTEyMDg4NyJ9\n            count: 2\n    us_autocompletions_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: address_prefix is required\n              status_code: 422\n    us_autocompletions:\n      description: Returns a US autocompletion object.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/us_autocompletions'\n          examples:\n            basic:\n              value:\n                id: us_auto_a3ac97bcfbb2460ab20c\n                suggestions:\n                  - primary_line: 185 BAYSIDE VILLAGE PL\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                  - primary_line: 185 BRANNAN ST\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                  - primary_line: 185 BONIFACIO ST\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                  - primary_line: 185 BLAIR TER\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                  - primary_line: 185 BLUXOME ST\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                  - primary_line: 210 KING ST\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                  - primary_line: 185 BRYANT ST\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94107'\n                object: us_autocompletion\n            test:\n              value:\n                id: us_auto_a3ac97bcfbb2460ab20c\n                suggestions:\n                  - primary_line: 1 TELEPHONE RD\n                    city: OXFORD\n                    state: AR\n                    zip_code: '72565'\n                  - primary_line: 1 TELEGA PL\n                    city: PALMDALE\n                    state: CA\n                    zip_code: '93550'\n                  - primary_line: 1 TELEGRAM AVE\n                    city: ELMONT\n                    state: NY\n                    zip_code: '11003'\n                  - primary_line: 1 TELEGRAM AVE\n                    city: GARDEN CITY\n                    state: KS\n                    zip_code: '67846'\n                  - primary_line: 1 TELEGRAPH HILL RD\n                    city: HOLMDEL\n                    state: NJ\n                    zip_code: '07733'\n                  - primary_line: 1 TELEGRAPH HILL RD S\n                    city: HOLMDEL\n                    state: NJ\n                    zip_code: '07733'\n                  - primary_line: 1 TELEGRAPH HILL BLVD\n                    city: SAN FRANCISCO\n                    state: CA\n                    zip_code: '94133'\n                object: us_autocompletion\n    reverse_geocode_lookups_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: latitude is required\n              status_code: 422\n    reverse_geocode_lookups:\n      description: Returns a zip lookup object if a valid zip was provided.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/reverse_geocode'\n          example:\n            id: us_reverse_geocode_8a013f3e\n            addresses:\n              - components:\n                  zip_code: '94107'\n                  zip_code_plus_4: '1702'\n                location_analysis:\n                  latitude: 37.78271\n                  longitude: -122.416202\n                  distance: 1.32\n              - components:\n                  zip_code: '94107'\n                  zip_code_plus_4: '1702'\n                location_analysis:\n                  latitude: 37.782917\n                  longitude: -122.416131\n                  distance: 1.33\n    us_verifications:\n      description: Returns a US verification object.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/us_verification'\n          examples:\n            basic:\n              value:\n                id: us_ver_c7cb63d68f8d6\n                recipient: LOB.COM\n                primary_line: 210 KING ST STE 6100\n                secondary_line: ''\n                urbanization: ''\n                last_line: SAN FRANCISCO CA 94107-1728\n                deliverability: deliverable\n                valid_address: true\n                components:\n                  primary_number: '185'\n                  street_predirection: ''\n                  street_name: KING\n                  street_suffix: ST\n                  street_postdirection: ''\n                  secondary_designator: STE\n                  secondary_number: '6100'\n                  pmb_designator: ''\n                  pmb_number: ''\n                  extra_secondary_designator: ''\n                  extra_secondary_number: ''\n                  city: SAN FRANCISCO\n                  state: CA\n                  zip_code: '94107'\n                  zip_code_plus_4: '1728'\n                  zip_code_type: standard\n                  delivery_point_barcode: '941071728506'\n                  address_type: commercial\n                  record_type: highrise\n                  default_building_address: false\n                  county: SAN FRANCISCO\n                  county_fips: '06075'\n                  carrier_route: C001\n                  carrier_route_type: city_delivery\n                  latitude: 37.77597542841264\n                  longitude: -122.3929557343685\n                deliverability_analysis:\n                  dpv_confirmation: 'Y'\n                  dpv_cmra: 'N'\n                  dpv_vacant: 'N'\n                  dpv_active: 'Y'\n                  dpv_footnotes:\n                    - AA\n                    - BB\n                  ews_match: false\n                  lacs_indicator: ''\n                  lacs_return_code: ''\n                  suite_return_code: ''\n                lob_confidence_score:\n                  score: 100\n                  level: high\n                object: us_verification\n            test:\n              value:\n                id: us_ver_po_box\n                recipient: TEST KEYS DO NOT VERIFY ADDRESSES\n                primary_line: PO BOX 720114\n                secondary_line: ''\n                urbanization: ''\n                last_line: SAN FRANCISCO CA 94172-0114\n                deliverability: deliverable\n                valid_address: true\n                components:\n                  primary_number: '720114'\n                  street_predirection: ''\n                  street_name: PO BOX\n                  street_suffix: ''\n                  street_postdirection: ''\n                  secondary_designator: ''\n                  secondary_number: ''\n                  pmb_designator: ''\n                  pmb_number: ''\n                  extra_secondary_designator: ''\n                  extra_secondary_number: ''\n                  city: SAN FRANCISCO\n                  state: CA\n                  zip_code: '94172'\n                  zip_code_plus_4: '0114'\n                  zip_code_type: po_box\n                  delivery_point_barcode: '941720114146'\n                  address_type: residential\n                  record_type: po_box\n                  default_building_address: false\n                  county: SAN FRANCISCO\n                  county_fips: '06075'\n                  carrier_route: BOO2\n                  carrier_route_type: po_box\n                  latitude: 37.75971500260575\n                  longitude: -122.69397561170017\n                deliverability_analysis:\n                  dpv_confirmation: 'Y'\n                  dpv_cmra: 'N'\n                  dpv_vacant: 'N'\n                  dpv_active: 'Y'\n                  dpv_footnotes:\n                    - AA\n                    - BB\n                  ews_match: false\n                  lacs_indicator: ''\n                  lacs_return_code: ''\n                  suite_return_code: ''\n                object: us_verification\n    zip_lookups_error:\n      description: Error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error'\n          example:\n            error:\n              code: invalid\n              message: zip_code is required\n              status_code: 422\n    zip_lookups:\n      description: Returns a zip lookup object if a valid zip was provided.\n      headers:\n        ratelimit-limit:\n          $ref: '#/components/headers/ratelimit-limit'\n        ratelimit-remaining:\n          $ref: '#/components/headers/ratelimit-remaining'\n        ratelimit-reset:\n          $ref: '#/components/headers/ratelimit-reset'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/zip'\n          example:\n            id: us_zip_c7cb63d68f8d6\n            cities:\n              - city: SAN FRANCISCO\n                state: CA\n                county: SAN FRANCISCO\n                county_fips: '06075'\n                preferred: true\n            zip_code_type: standard\n            object: us_zip_lookup\n            zip_code: '94107'\n    events:\n      description: Returns an `event` object to the specified server.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/events'\n          example:\n            event_type:\n              resource: postcards\n              enabled_for_test: true\n              id: postcard.created\n              object: event_type\n            reference_id: psc_d2d10a2e9cba991c\n            id: evt_d95ff8ffd2b5cfb4\n            date_created: 2016-12-04T22:50:08.180Z\n            body:\n              id: psc_d2d10a2e9cba991c\n              description: Test Postcard\n              metadata: {}\n              to:\n                id: adr_8e783523dd7f0e70\n                description: Test Recipient Address\n                name: Harry Zhang\n                company: LOB\n                phone: null\n                email: null\n                address_line1: 123 TEST ST\n                address_line2: UNIT 1\n                address_city: SAN FRANCISCO\n                address_state: CA\n                address_zip: '94107'\n                address_country: UNITED STATES\n                metadata: {}\n                date_created: 2016-12-04T10:51:51.844Z\n                date_modified: 2016-12-04T10:51:51.844Z\n                object: address\n              from:\n                id: adr_d2e26faf793ed422\n                description: Test Sender Address\n                name: Harry Zhang\n                company: LOB\n                phone: null\n                email: null\n                address_line1: 123 TEST ST\n                address_line2: UNIT 1\n                address_city: SAN FRANCISCO\n                address_state: CA\n                address_zip: '94107'\n                address_country: UNITED STATES\n                metadata: {}\n                date_created: 2016-12-04T10:51:51.845Z\n                date_modified: 2016-12-04T10:51:51.845Z\n                object: address\n              url: \u003e-\n                https://lob-assets.com/postcards/psc_d2d10a2e9cba991c.pdf?expires=1540372221\u0026signature=dNE8OtbDymujUxBIMYle4H1cv1aZNFk\n              front_template_id: null\n              back_template_id: null\n              carrier: USPS\n              tracking_events: []\n              thumbnails:\n                - small: \u003e-\n                    https://lob-assets.com/postcards/psc_d2d10a2e9cba991c_thumb_small_1.png?expires=1540372221\u0026signature=McmqScxPgbe7yQY5X31U3vhU8VUlfA1\n                  medium: \u003e-\n                    https://lob-assets.com/postcards/psc_d2d10a2e9cba991c_thumb_medium_1.png?expires=1540372221\u0026signature=VBClptOuCcj9Ybay6gE5aetT5j3C7KS\n                  large: \u003e-\n                    https://lob-assets.com/postcards/psc_d2d10a2e9cba991c_thumb_large_1.png?expires=1540372221\u0026signature=RAHpIwoYKYM17f0bbaoOiamCkjpzYfH\n                - small: \u003e-\n                    https://lob-assets.com/postcards/psc_d2d10a2e9cba991c_thumb_small_1.png?expires=1540372221\u0026signature=5biHoaCmkphQaGJymOZxmTF0hHdiH4N\n                  medium: \u003e-\n                    https://lob-assets.com/postcards/psc_d2d10a2e9cba991c_thumb_medium_1.png?expires=1540372221\u0026signature=1ApGx0kn5EO4qQKGJzCe6zEPnQpzpRY\n                  large: \u003e-\n                    https://lob-assets.com/postcards/psc_d2d10a2e9cba991c_thumb_large_1.png?expires=1540372221\u0026signature=z80p90RBak6T26IAfg5yg7a6qKF53a8\n              merge_variables: null\n              mail_type: usps_first_class\n              size: 4x6\n              expected_delivery_date: 2016-12-09\n              date_created: 2016-12-04T10:51:51.843Z\n              date_modified: 2016-12-04T10:51:51.843Z\n              send_date: 2016-12-04T10:56:51.843Z\n              object: postcard\n            object: event\n    tracking_events:\n      description: Returns a `tracking_event` object to the specified server.\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - $ref: '#/components/schemas/tracking_event_normal'\n              - $ref: '#/components/schemas/tracking_event_certified'\n          examples:\n            normal:\n              value:\n                id: evnt_9e84094c9368cfb\n                type: normal\n                name: In Local Area\n                details: null\n                location: '72231'\n                time: 2016-06-30T15:51:41.000Z\n                date_created: 2016-06-30T17:41:59.771Z\n                date_modified: 2016-06-30T17:41:59.771Z\n                object: tracking_event\n            certified:\n              value:\n                id: evnt_9e84094c9368cfb\n                type: certified\n                name: Delivered\n                details:\n                  event: delivered\n                  description: Package has been delivered.\n                  notes: Delivered, Front Desk/Reception/Mail Room\n                  action_required: false\n                location: '33408'\n                time: 2019-10-08T19:41:00Z\n                date_created: 2019-10-08T19:41:00Z\n                date_modified: 2019-10-08T19:41:00Z\n                object: tracking_event\n  headers:\n    ratelimit-limit:\n      description: The rate limit for a given endpoint.\n      schema:\n        type: integer\n        example: 150\n    ratelimit-remaining:\n      description: The number of requests remaining in the current window.\n      schema:\n        type: integer\n        example: 100\n    ratelimit-reset:\n      description: \u003e\n        The time at which the rate limit window resets in  \u003ca\n        href=\"https://en.wikipedia.org/wiki/Unix_time\" target=\"_blank\"\u003eUTC epoch\n        seconds\u003c/a\u003e\n      schema:\n        type: integer\n        example: 1528749846\nsecurity:\n  - basicAuth: []\nx-webhooks:\n  events:\n    post:\n      summary: Events\n      description: Information about an event\n      operationId: event\n      tags:\n        - Events\n      responses:\n        '200':\n          $ref: '#/components/responses/events'\n  tracking_events:\n    post:\n      summary: Tracking Events\n      description: Information about tracking events\n      operationId: tracking_event\n      tags:\n        - Tracking Events\n      responses:\n        '200':\n          $ref: '#/components/responses/tracking_events'\npaths:\n  /addresses:\n    get:\n      operationId: addresses_list\n      summary: List\n      description: \u003e-\n        Returns a list of your addresses. The addresses are returned sorted by\n        creation date, with the most recently created addresses appearing first.\n      tags:\n        - Addresses\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_addresses'\n        default:\n          $ref: '#/components/responses/address_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/addresses/?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const addresses = await new AddressesApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.addresses.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.addresses.list(limit: 2)\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Address.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eaddresses()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, Object\u003e params = new HashMap\u003c\u003e();\n            params.put(\"limit\", 2);\n\n            LobResponse\u003cAddressCollection\u003e response = Address.list(params);\n            AddressCollection addresses = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Address.list(%{limit: 2})\n          label: ELIXIR\n    post:\n      operationId: address_create\n      summary: Create\n      description: Creates a new address given information\n      tags:\n        - Addresses\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/address_editable'\n            examples:\n              full_us:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 210 King St\n                  address_line2: '# 6100'\n                  address_city: San Francisco\n                  address_state: CA\n                  address_zip: '94107'\n                  address_country: US\n              ncoa_us_test:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: NCOA\n                  address_line2: '#6100'\n                  address_city: San Francisco\n                  address_state: CA\n                  address_zip: '94107'\n                  address_country: US\n              full_intl:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PRINCE EDWARD ISLAND\n                  address_zip: C1N 1C4\n                  address_country: CA\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/address_editable'\n            examples:\n              full_us:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 210 King St\n                  address_line2: '# 6100'\n                  address_city: San Francisco\n                  address_state: CA\n                  address_zip: '94107'\n                  address_country: US\n              ncoa_us_test:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: NCOA\n                  address_line2: '# 6100'\n                  address_city: San Francisco\n                  address_state: CA\n                  address_zip: '94107'\n                  address_country: US\n              full_intl:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PRINCE EDWARD ISLAND\n                  address_zip: C1N 1C4\n                  address_country: CA\n            encoding:\n              metadata:\n                style: deepObject\n                explode: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/address_editable'\n            examples:\n              full_us:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 210 King St\n                  address_line2: '# 6100'\n                  address_city: San Francisco\n                  address_state: CA\n                  address_zip: '94107'\n                  address_country: US\n              ncoa_us_test:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: NCOA\n                  address_line2: '# 6100'\n                  address_city: San Francisco\n                  address_state: CA\n                  address_zip: '94107'\n                  address_country: US\n              full_intl:\n                value:\n                  description: Harry - Office\n                  name: Harry Zhang\n                  company: Lob\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 370 WATER ST\n                  address_line2: ''\n                  address_city: SUMMERSIDE\n                  address_state: PRINCE EDWARD ISLAND\n                  address_zip: C1N 1C4\n                  address_country: CA\n      responses:\n        '200':\n          $ref: '#/components/responses/post_address'\n        default:\n          $ref: '#/components/responses/address_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/addresses \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Harry - Office\" \\\n              -d \"name=Harry Zhang\" \\\n              -d \"company=Lob\" \\\n              -d \"email=harry@lob.com\" \\\n              -d \"phone=5555555555\" \\\n              -d \"address_line1=210 King St\" \\\n              -d \"address_line2=# 6100\" \\\n              -d \"address_city=San Francisco\" \\\n              -d \"address_state=CA\" \\\n              -d \"address_zip=94107\" \\\n              -d \"address_country=US\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const addressCreate = new AddressEditable({\n              description: 'Harry - Office',\n              name: 'Harry Zhang',\n              company: 'Lob',\n              email: 'harry@lob.com',\n              phone: '5555555555',\n              address_line1: '210 King St',\n              address_line2: '# 6100',\n              address_city: 'San Francisco',\n              address_state: 'CA',\n              address_zip: '94107',\n              address_country: 'US'\n            });\n\n            try {\n              const myAddress = await new AddressesApi(config).create(addressCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.addresses.create({\n              description: 'Harry - Office',\n              name: 'Harry Zhang',\n              company: 'Lob',\n              email: 'harry@lob.com',\n              phone: '5555555555',\n              address_line1: '210 King St',\n              address_line2: '# 6100',\n              address_city: 'San Francisco',\n              address_state: 'CA',\n              address_zip: '94107',\n              address_country: 'US'\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.addresses.create(\n              description: \"Harry - Office\",\n              name: \"Harry Zhang\",\n              company: \"Lob\",\n              email: \"harry@lob.com\",\n              phone: \"5555555555\",\n              address_line1: \"210 King St\",\n              address_line2: \"# 6100\",\n              address_city: \"San Francisco\",\n              address_state: \"CA\",\n              address_country: \"US\",\n              address_zip: \"94107\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Address.create(\n              description='Harry - Office',\n              name='Harry Zhang',\n              company='Lob',\n              email='harry@lob.com',\n              phone='5555555555',\n              address_line1='210 King St',\n              address_line2='# 6100',\n              address_city='San Francisco',\n              address_state='CA',\n              address_zip='94107',\n              address_country='US',\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eaddresses()-\u003ecreate(array(\n              'description'       =\u003e 'Harry - Office',\n              'name'              =\u003e 'Harry Zhang',\n              'company'           =\u003e 'Lob',\n              'address_line1'     =\u003e '210 King St',\n              'address_line2'     =\u003e '# 6100',\n              'address_city'      =\u003e 'San Francisco',\n              'address_state'     =\u003e 'CA',\n              'address_country'   =\u003e 'US',\n              'address_zip'       =\u003e '94107',\n              'email'             =\u003e 'harry@lob.com',\n              'phone'             =\u003e '5555555555'\n            ));\n        - lang: Java\n          source: |\n            LobResponse\u003cAddress\u003e response = new Address.RequestBuilder()\n                    .setDescription(\"Harry - Office\")\n                    .setName(\"Harry Zhang\")\n                    .setCompany(\"Lob\")\n                    .setLine1(\"210 King St\")\n                    .setLine2(\"# 6100\")\n                    .setCity(\"San Francisco\")\n                    .setState(\"CA\")\n                    .setZip(\"94107\")\n                    .setCountry(\"US\")\n                    .setPhone(\"555-555-5555\")\n                    .setEmail(\"harry@lob.com\")\n                    .create();\n\n            Address address = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Address.create(%{\n              description: \"Harry - Office\",\n              name: \"Harry Zhang\",\n              company: \"Lob\",\n              email: \"harry@lob.com\",\n              phone: \"5555555555\",\n              address_line1: \"210 King St\",\n              address_line2: \"# 6100\",\n              address_city: \"San Francisco\",\n              address_state: \"CA\",\n              address_country: \"US\",\n              address_zip: \"94107\"\n            })\n          label: ELIXIR\n  /addresses/{adr_id}:\n    parameters:\n      - in: path\n        name: adr_id\n        description: id of the address\n        required: true\n        schema:\n          $ref: '#/components/schemas/adr_id'\n    get:\n      operationId: address_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing address. You need only supply the\n        unique identifier that was returned upon address creation.\n      tags:\n        - Addresses\n      responses:\n        '200':\n          $ref: '#/components/responses/address'\n        default:\n          $ref: '#/components/responses/address_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/addresses/adr_fa85158b26c3eb7c \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const address = await new AddressesApi(config).get('adr_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.addresses.retrieve('adr_fa85158b26c3eb7c', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.addresses.find(\"adr_fa85158b26c3eb7c\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Address.retrieve('adr_fa85158b26c3eb7c')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eaddresses()-\u003eget('adr_fa85158b26c3eb7c');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cAddress\u003e response =\n            Address.retrieve(\"adr_fa85158b26c3eb7c\");\n\n            Address address = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Address.retrieve(\"adr_fa85158b26c3eb7c\")\n          label: ELIXIR\n    delete:\n      operationId: address_delete\n      summary: Delete\n      description: \u003e-\n        Deletes the details of an existing address. You need only supply the\n        unique identifier that was returned upon address creation.\n      tags:\n        - Addresses\n      responses:\n        '200':\n          $ref: '#/components/responses/address_deleted'\n        default:\n          $ref: '#/components/responses/address_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X DELETE https://api.lob.com/v1/addresses/adr_43769b47aed248c2\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteAddress = await new AddressesApi(config).delete('adr_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.addresses.delete('adr_43769b47aed248c2', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.addresses.destroy(\"adr_43769b47aed248c2\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Address.delete('adr_43769b47aed248c2')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eaddresses()-\u003edelete('adr_43769b47aed248c2');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cAddress\u003e response =\n            Address.delete(\"adr_43769b47aed248c2\");\n\n            Address address = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Address.delete(\"adr_43769b47aed248c2\")\n          label: ELIXIR\n  /bank_accounts/{bank_id}/verify:\n    parameters:\n      - in: path\n        name: bank_id\n        description: id of the bank account to be verified\n        required: true\n        schema:\n          $ref: '#/components/schemas/bank_id'\n    post:\n      operationId: bank_account_verify\n      summary: Verify\n      description: Verify a bank account in order to create a check.\n      tags:\n        - Bank Accounts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bank_account_verify'\n            example:\n              amounts:\n                - 1\n                - 100\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/bank_account_verify'\n            example:\n              amounts:\n                - 1\n                - 100\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/bank_account_verify'\n            example:\n              amounts:\n                - 1\n                - 100\n      responses:\n        '200':\n          $ref: '#/components/responses/post_bank_account'\n        default:\n          $ref: '#/components/responses/bank_account_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl\n            https://api.lob.com/v1/bank_accounts/bank_dfceb4a2a05b57e/verify \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"amounts[]=25\" \\\n              -d \"amounts[]=63\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const verificationData = new BankAccountVerify({\n              amounts: [11, 35],\n            });\n\n            try {\n              const verifiedAccount = await new BankAccountsApi(config).verify('bank_xxxx', verificationData);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.bankAccounts.verify('bank_dfceb4a2a05b57e', {\n              amounts: [25, 63]\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bank_accounts.verify(\"bank_dfceb4a2a05b57e\", amounts: [25, 63])\n          label: RUBY\n        - lang: Python\n          source: \u003e\n            lob.BankAccount.verify(id = 'bank_dfceb4a2a05b57e', amounts = [25,\n            63])\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebankAccounts()-\u003everify(array(\n              'id' =\u003e 'bank_dfceb4a2a05b57e',\n              'amounts' =\u003e array(25, 63)\n            ));\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cBankAccount\u003e response =\n            BankAccount.verify(newBankAccount.getId(), Arrays.asList(25, 63));\n\n            BankAccount bankAccount = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BankAccount.verify(\"bank_dfceb4a2a05b57e\", %{amounts: [25, 63]})\n          label: ELIXIR\n  /bank_accounts/{bank_id}:\n    parameters:\n      - in: path\n        name: bank_id\n        description: id of the bank account\n        required: true\n        schema:\n          $ref: '#/components/schemas/bank_id'\n    get:\n      operationId: bank_account_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing bank account. You need only supply\n        the unique bank account identifier that was returned upon bank account\n        creation.\n      tags:\n        - Bank Accounts\n      responses:\n        '200':\n          description: Returns a bank account object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/bank_account'\n              example:\n                id: bank_8cad8df5354d33f\n                signature_url: \u003e-\n                  https://lob-assets.com/letters/asd_asdfghjklqwertyu.pdf?version=45\u0026expires=1234567890\u0026signature=a\n                description: Test Bank Account\n                metadata: {}\n                routing_number: '322271627'\n                account_number: '123456789'\n                account_type: company\n                signatory: John Doe\n                bank_name: J.P. MORGAN CHASE BANK, N.A.\n                verified: false\n                date_created: 2015-11-06T19:24:24.440Z\n                date_modified: 2015-11-06T19:24:24.440Z\n                object: bank_account\n        default:\n          $ref: '#/components/responses/bank_account_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/bank_accounts/bank_8cad8df5354d33f \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const bankAccount = await new BankAccountsApi(config).get('bank_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: \u003e\n            Lob.bankAccounts.retrieve('bank_8cad8df5354d33f', function (err,\n            res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bank_accounts.find(\"bank_8cad8df5354d33f\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.BankAccount.retrieve('bank_8cad8df5354d33f')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebankAccounts()-\u003eget('bank_8cad8df5354d33f');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cBankAccount\u003e response =\n            BankAccount.retrieve(\"bank_8cad8df5354d33f\");\n\n            BankAccount bankAccount = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BankAccount.find(\"bank_8cad8df5354d33f\")\n          label: ELIXIR\n    delete:\n      operationId: bank_account_delete\n      summary: Delete\n      description: Permanently deletes a bank account. It cannot be undone.\n      tags:\n        - Bank Accounts\n      responses:\n        '200':\n          $ref: '#/components/responses/bank_account_deleted'\n        default:\n          $ref: '#/components/responses/bank_account_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X DELETE\n            https://api.lob.com/v1/bank_accounts/bank_3e64d9904356b20 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteBankAccount = await new BankAccountsApi(config).delete('bank_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: \u003e\n            Lob.bankAccounts.delete('bank_3e64d9904356b20', function (err, res)\n            {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bank_accounts.destroy(\"bank_3e64d9904356b20\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.BankAccount.delete('bank_3e64d9904356b20')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebankAccounts()-\u003edelete('bank_3e64d9904356b20');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cBankAccount\u003e response =\n            BankAccount.delete(\"bank_3e64d9904356b20\");\n\n            BankAccount bankAccount = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BankAccount.destroy(\"bank_3e64d9904356b20\")\n          label: ELIXIR\n  /bank_accounts:\n    get:\n      operationId: bank_accounts_list\n      summary: List\n      description: \u003e-\n        Returns a list of your bank accounts. The bank accounts are returned\n        sorted by creation date, with the most recently created bank accounts\n        appearing first.\n      tags:\n        - Bank Accounts\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_bank_accounts'\n        default:\n          $ref: '#/components/responses/bank_account_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/bank_accounts?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const bankaccounts = await new BankaccountsApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.bankAccounts.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bank_accounts.list(limit: 2)\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.BankAccount.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebankAccounts()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n        - lang: Java\n          source: \u003e\n            Map\u003cString, Object\u003e params = new HashMap\u003c\u003e();\n\n            params.put(\"limit\", 2);\n\n\n            LobResponse\u003cBankAccountCollection\u003e response =\n            BankAccount.list(params);\n\n            BankAccountCollection bankAccounts = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BankAccount.list(%{limit: 2})\n          label: ELIXIR\n    post:\n      operationId: bank_account_create\n      summary: Create\n      description: \u003e-\n        Creates a new bank account with the provided properties. Bank accounts\n        created in live mode will need to be verified via micro deposits before\n        being able to send live checks. The deposits will appear in the bank\n        account in 2-3 business days and have the description \"VERIFICATION\".\n      tags:\n        - Bank Accounts\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/bank_account_base'\n            example:\n              description: Test Bank Account\n              routing_number: '322271627'\n              account_number: '123456789'\n              signatory: Jane Doe\n              account_type: individual\n              metadata:\n                spiffy: 'true'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/bank_account_base'\n            example:\n              description: Test Bank Account\n              routing_number: '322271627'\n              account_number: '123456789'\n              signatory: Jane Doe\n              account_type: individual\n              metadata:\n                spiffy: 'true'\n            encoding:\n              metadata:\n                style: deepObject\n                explode: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/bank_account_base'\n            example:\n              description: Test Bank Account\n              routing_number: '322271627'\n              account_number: '123456789'\n              signatory: Jane Doe\n              account_type: individual\n              metadata:\n                spiffy: 'true'\n      responses:\n        '200':\n          $ref: '#/components/responses/post_bank_account'\n        default:\n          $ref: '#/components/responses/bank_account_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/bank_accounts \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Test Bank Account\" \\\n              -d \"routing_number=322271627\" \\\n              -d \"account_number=123456789\" \\\n              -d \"signatory=John Doe\" \\\n              -d \"account_type=company\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const bankAccountCreate = new BankAccountWritable({\n              description: 'Test Bank Account',\n              routing_number: '322271627',\n              account_number: '123456789',\n              signatory: 'Gomez Addams',\n              account_type: BankTypeEnum.Individual\n            });\n\n            try {\n              const myBankAcount = await new BankAccountsApi(config).create(bankAccountCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.bankAccounts.create({\n              description: 'Test Bank Account',\n              routing_number: 322271627,\n              account_number: 123456789,\n              signatory: 'John Doe',\n              account_type: 'company'\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bank_accounts.create(\n              description: \"Test Bank Account\",\n              routing_number: \"322271627\",\n              account_number: \"123456789\",\n              signatory: \"John Doe\",\n              account_type: \"company\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.BankAccount.create(\n              description = 'Test Bank Account',\n              routing_number = '322271627',\n              account_number = '123456789',\n              signatory = 'John Doe',\n              account_type = 'company'\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebankAccounts()-\u003ecreate(array(\n              'description'       =\u003e 'Test Bank Account',\n              'routing_number'    =\u003e '322271627',\n              'account_number'    =\u003e '123456789',\n              'signatory'         =\u003e 'John Doe',\n              'account_type'      =\u003e 'company'\n            ));\n        - lang: Java\n          source: |\n            LobResponse\u003cBankAccount\u003e response = new BankAccount.RequestBuilder()\n                    .setDescription(\"Test Bank Account\")\n                    .setRoutingNumber(\"322271627\")\n                    .setAccountNumber(\"123456789\")\n                    .setSignatory(\"John Doe\")\n                    .setAccountType(\"company\")\n                    .create();\n\n            BankAccount bankAccount = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BankAccount.create(%{\n              description: \"Test Bank Account\",\n              routing_number: \"322271627\",\n              account_number: \"123456789\",\n              signatory: \"John Doe\",\n              account_type: \"company\"\n            })\n          label: ELIXIR\n  /billing_groups/{bg_id}:\n    parameters:\n      - in: path\n        name: bg_id\n        description: id of the billing_group\n        required: true\n        schema:\n          $ref: '#/components/schemas/bg_id'\n    get:\n      operationId: billing_group_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing billing_group. You need only supply\n        the unique billing_group identifier that was returned upon billing_group\n        creation.\n      tags:\n        - Billing Groups\n      responses:\n        '200':\n          description: Returns a billing_group object.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/billing_group'\n              example:\n                id: bg_c94e83ca2cd5121\n                name: Marketing Dept\n                description: Usage group used for the Marketing Dept resource sends\n                date_created: 2017-11-07T22:56:10.962Z\n                date_modified: 2017-11-07T22:56:10.962Z\n                object: billing_group\n        default:\n          $ref: '#/components/responses/billing_group_list_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/billing_groups/bg_4bb02b527a72667d0 \\\n            -u \u003cYOUR API KEY\u003e:\n    post:\n      operationId: billing_group_update\n      summary: Update\n      description: Updates all editable attributes of the billing_group with the given id.\n      tags:\n        - Billing Groups\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/billing_group_base'\n            example:\n              name: Marketing Dept\n              description: Usage group used for the Marketing Dept resource sends\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/billing_group_base'\n            example:\n              name: Marketing Dept\n              description: Usage group used for the Marketing Dept resource sends\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/billing_group_base'\n            example:\n              name: Marketing Dept\n              description: Usage group used for the Marketing Dept resource sends\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/billing_groups/bg_759954f540a1bfdb5 \\\n            -u \u003cYOUR API KEY\u003e: \\\n            -d \"description=demo replacement\" \\\n      responses:\n        '200':\n          $ref: '#/components/responses/post_billing_group'\n        default:\n          $ref: '#/components/responses/billing_group_error'\n  /billing_groups:\n    get:\n      operationId: billing_groups_list\n      summary: List\n      description: \u003e-\n        Returns a list of your billing_groups. The billing_groups are returned\n        sorted by creation date, with the most recently created billing_groups\n        appearing first.\n      tags:\n        - Billing Groups\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/offset'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/date_modified'\n        - $ref: '#/components/parameters/sort_by'\n      responses:\n        '200':\n          description: Returns a list of billing_groups.\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/list'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        description: list of billing_groups\n                        items:\n                          $ref: '#/components/schemas/billing_group'\n              example:\n                data:\n                  - id: bg_d5a5a89da9106f8\n                    description: Test billing_group\n                    metadata: {}\n                    date_created: 2019-07-27T23:49:01.511Z\n                    date_modified: 2019-07-27T23:49:01.511Z\n                    object: billing_group\n                  - id: bg_59b2150ae120887\n                    description: Test billing_group\n                    metadata: {}\n                    date_created: 2019-03-29T10:22:34.642Z\n                    date_modified: 2019-03-29T10:22:34.642Z\n                    object: billing_group\n                object: list\n                next_url: null\n                prev_url: null\n                count: 2\n        default:\n          $ref: '#/components/responses/billing_group_list_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/billing_groups?limit=2\" \\\n            -u \u003cYOUR API KEY\u003e:\n    post:\n      operationId: billing_group_create\n      summary: Create\n      description: Creates a new billing_group with the provided properties.\n      tags:\n        - Billing Groups\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/billing_group_editable'\n            example:\n              name: Marketing Dept\n              description: Usage group used for the Marketing Dept resource sends\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/billing_group_editable'\n            example:\n              name: Marketing Dept\n              description: Usage group used for the Marketing Dept resource sends\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/billing_group_editable'\n            example:\n              name: Marketing Dept\n              description: Usage group used for the Marketing Dept resource sends\n      responses:\n        '200':\n          $ref: '#/components/responses/post_billing_group'\n        default:\n          $ref: '#/components/responses/billing_group_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl https://api.lob.com/v1/billing_groups \\\n\n            -u \u003cYOUR API KEY\u003e: \\\n\n            -d \"name=Marketing Department\" \\\n\n            -d \"description=Usage group used for the Marketing Department's\n            resource sends\"\n  /bulk/us_verifications:\n    post:\n      operationId: bulk_us_verifications\n      summary: Bulk Verify\n      description: \u003e-\n        Verify a list of US or US territory addresses _with a live API key_.\n        Requests to this endpoint with a test API key will return a dummy\n        response based on the primary line you input.\n      tags:\n        - US Verifications\n      parameters:\n        - in: query\n          name: case\n          schema:\n            type: string\n            enum:\n              - upper\n              - proper\n            default: upper\n          description: \u003e-\n            Casing of the verified address. Possible values are `upper` and\n            `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO\n            Box\"), respectively. Only affects `recipient`, `primary_line`,\n            `secondary_line`, `urbanization`, and `last_line`. Default casing is\n            `upper`.\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/multiple_components_list'\n            example:\n              addresses:\n                - primary_line: 210 King Street\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n                - recipient: Walgreens\n                  primary_line: Ave Wilson Churchill 123\n                  secondary_line: ''\n                  urbanization: URB FAIR OAKS\n                  city: RIO PIEDRAS\n                  state: PR\n                  zip_code: '00926'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/multiple_components_list'\n            example:\n              addresses:\n                - primary_line: 210 King Street\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n                - recipient: Walgreens\n                  primary_line: Ave Wilson Churchill 123\n                  secondary_line: ''\n                  urbanization: URB FAIR OAKS\n                  city: RIO PIEDRAS\n                  state: PR\n                  zip_code: '00926'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/multiple_components_list'\n            example:\n              addresses:\n                - primary_line: 210 King Street\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n                - recipient: Walgreens\n                  primary_line: Ave Wilson Churchill 123\n                  secondary_line: ''\n                  urbanization: URB FAIR OAKS\n                  city: RIO PIEDRAS\n                  state: PR\n                  zip_code: '00926'\n      responses:\n        '200':\n          $ref: '#/components/responses/bulk_us_verifications'\n        default:\n          $ref: '#/components/responses/us_verifications_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/bulk_us_verifications \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              --data-raw '{\n                \"addresses\": [\n                  {\n                    \"primary_line\": \"210 King Street\",\n                    \"city\": \"San Francisco\",\n                    \"state\": \"CA\",\n                    \"zip_code\": \"94107\"\n                  }\n                ]\n              }'\n          label: CURL\n        - lang: Typescript\n          source: |\n            const UsVerifications = new USVerificationsApi(av_config);\n            const verificationData1: UsVerificationsWritable = {\n              primary_line: '210 King St',\n              city: 'San Francisco',\n              state: 'CA',\n              zip_code: '94107'\n            };\n            const verificationData2: UsVerificationsWritable = {\n              primary_line: '185 BERRY ST STE 6600',\n              city: 'SAN FRANCISCO',\n              state: 'CA',\n              zip_code: '94107'\n            };\n            const addressList: MultipleComponentsList = {\n              addresses: [verificationData1, verificationData2],\n            };\n\n            try {\n              const bulkVerified = await UsVerifications.verifyBulk(addressList);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.bulkUSVerifications.verify({\n              addresses: [{\n                primary_line: '210 King St',\n                city: 'San Francisco',\n                state: 'CA',\n                zip_code: '94107'\n              }]\n            }), function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bulk_us_verifications.verify(\n              addresses: [\n                {\n                recipient: \"LOB.COM\",\n                primary_line: \"185 BERRY ST STE 6600\",\n                city: \"SAN FRANCISCO\",\n                state: \"CA\",\n                zip_code: \"94107\"\n                }\n              ]\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.BulkUSVerification.create(\n              addresses=[{\n              'primary_line'='210 King Street',\n              'city'='San Francisco',\n              'state'='CA',\n              'zip_code'='94107'\n              }]\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebulkUSVerifications()-\u003everify('addresses' =\u003e array(\n              array(\n                'primary_line' =\u003e '210 King Street',\n                'city'         =\u003e 'San Francisco',\n                'state'        =\u003e 'CA',\n                'zip_code'     =\u003e '94107'\n              )));\n        - lang: Java\n          source: \u003e\n            List\u003cUSVerification.RequestBuilder\u003e addresses = new\n            ArrayList\u003cUSVerification.RequestBuilder\u003e();\n\n            addresses.add(new USVerification.RequestBuilder()\n                    .setRecipient(\"Donald\")\n                    .setPrimaryLine(\"deliverable\")\n                    .setSecondaryLine(\"Ste 6100\")\n                    .setUrbanization(\"\")\n                    .setCity(\"San Francisco\")\n                    .setState(\"CA\")\n                    .setZipCode(\"94107\"));\n            LobResponse\u003cBulkUSVerification\u003e response = new\n            BulkUSVerification.RequestBuilder()\n                    .setAddresses(addresses)\n                    .verify();\n            BulkUSVerification bulkUSVerification = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BulkUSVerification.verify.verify(\n            %{\n              addresses:[\n                {\n                  primary_line: \"210 King Street\",\n                  city: \"San Francisco\",\n                  state: \"CA\",\n                  zip_code: \"94107\"\n                }\n             ]\n            })\n          label: ELIXIR\n  /bulk/intl_verifications:\n    post:\n      operationId: bulk_intl_verifications\n      summary: Bulk Verify\n      description: \u003e-\n        Verify a list of international (except US or US territories) address\n        _with a live API key_. Requests to this endpoint with a test API key\n        will return a dummy response based on the primary line you input.\n      tags:\n        - Intl Verifications\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/intl_verifications_payload'\n            example:\n              addresses:\n                - recipient: John Doe\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edwards Island\n                  postal_code: C1N 1C4\n                  country: CA\n                - recipient: Jane Doe\n                  primary_line: UL. DOLSKAYA 1\n                  secondary_line: ''\n                  city: MOSCOW\n                  state: MOSCOW G\n                  postal_code: '115569'\n                  country: RU\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/intl_verifications_payload'\n            example:\n              addresses:\n                - recipient: John Doe\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edwards Island\n                  postal_code: C1N 1C4\n                  country: CA\n                - recipient: Jane Doe\n                  primary_line: UL. DOLSKAYA 1\n                  secondary_line: ''\n                  city: MOSCOW\n                  state: MOSCOW G\n                  postal_code: '115569'\n                  country: RU\n      responses:\n        '200':\n          $ref: '#/components/responses/bulk_intl_verifications'\n        default:\n          $ref: '#/components/responses/intl_verifications_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/bulk_intl_verifications \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              --data-raw '{\n                \"addresses\": [\n                  {\n                    \"primary_line\": \"210 King Street\",\n                    \"city\": \"San Francisco\",\n                    \"state\": \"CA\",\n                    \"zip_code\": \"94107\"\n                  }\n                ]\n              }'\n          label: CURL\n        - lang: Typescript\n          source: |\n            const IntlVerifications = new IntlVerificationsApi(av_config);\n            let verificationData1: IntlVerificationWritable = {\n                primary_line: '370 WATER ST',\n                postal_code: 'C1N 1C4',\n                country: CountryExtended.Ca\n            };\n            const verificationData2: IntlVerificationWritable = {\n                primary_line: '012 PLACEHOLDER ST',\n                postal_code: 'F0O 8A2',\n                country: CountryExtended.Ca\n            };\n            let addressList = new IntlVerificationsPayload({\n                addresses: [verificationData1, verificationData2]\n            });\n\n            try {\n              const bulkVerified = await IntlVerifications.verifyBulk(addressList);\n                \n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.bulkIntlVerifications.verify({\n              addresses: [{\n                primary_line: '370 Water St',\n                secondary_line: '',\n                city: 'Summerside',\n                state: 'Prince Edward Island',\n                postal_code: 'C1N 1C4',\n                country: 'CA'\n              }]\n            }), function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.bulk_intl_verifications.verify(\n              addresses: [\n                {\n                  primary_line: '370 Water St',\n                  secondary_line: '',\n                  city: 'Summerside',\n                  state: 'Prince Edward Island',\n                  postal_code: 'C1N 1C4',\n                  country: 'CA'\n                }\n              ]\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.BulkIntlVerification.create(\n              addresses=[\n                {\n                  'primary_line' = '370 Water St',\n                  'secondary_line' = '',\n                  'city' = 'Summerside',\n                  'state'= 'Prince Edward Island',\n                  'postal_code' = 'C1N 1C4',\n                  'country' = 'CA'\n                }\n              ]\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ebulkIntlVerifications()-\u003everify('addresses' =\u003e array(\n              array(\n                'primary_line' =\u003e '370 Water St',\n                'city' =\u003e 'Summerside',\n                'state' =\u003e 'Prince Edward Island',\n                'postal_code' =\u003e 'C1N 1C4',\n                'country' =\u003e 'CA'\n              )));\n        - lang: Java\n          source: \u003e\n            List\u003cIntlVerification.RequestBuilder\u003e addresses = new\n            ArrayList\u003cIntlVerification.RequestBuilder\u003e();\n\n            addresses.add(new IntlVerification.RequestBuilder()\n                    .setPrimaryLine(\"370 Water St\")\n                    .setCity(\"Summerside\")\n                    .setState(\"Prince Edward Island\")\n                    .setPostalCode(\"C1N 1C4\")\n                    .setCountry(\"CA\"));\n            LobResponse\u003cBulkIntlVerification\u003e response = new\n            BulkIntlVerification.RequestBuilder()\n                    .setAddresses(addresses)\n                    .verify();\n            BulkIntlVerification bulkIntlVerification =\n            response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.BulkIntlVerification.verify.verify(\n            %{addresses:[\n                {\n                  primary_line: '370 Water St',\n                  secondary_line: '',\n                  city: 'Summerside',\n                  state: 'Prince Edward Island',\n                  postal_code: 'C1N 1C4',\n                  country: 'CA'\n                }\n              ]\n            })\n          label: ELIXIR\n  /cards:\n    get:\n      operationId: cards_list\n      summary: List\n      description: \u003e-\n        Returns a list of your cards. The cards are returned sorted by creation\n        date, with the most recently created addresses appearing first.\n      tags:\n        - Cards\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/sort_by'\n      responses:\n        '200':\n          description: Returns a list of card objects\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/list'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        description: list of cards\n                        items:\n                          $ref: '#/components/schemas/card'\n              example:\n                data:\n                  - id: card_7a6d73c5c8457fc\n                    account_id: fa9ea650fc7b31a89f92\n                    description: null\n                    url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1\u0026expires=1636910992\u0026signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA\n                    size: 2.125x3.375\n                    auto_reorder: false\n                    reorder_quantity: null\n                    raw_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    front_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    back_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    thumbnails:\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1\u0026expires=1636910992\u0026signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1\u0026expires=1636910992\u0026signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1\u0026expires=1636910992\u0026signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw\n                    available_quantity: 10000\n                    pending_quantity: 0\n                    countries: null\n                    status: rendered\n                    mode: test\n                    orientation: horizontal\n                    threshold_amount: 0\n                    date_created: 2021-03-24T22:51:42.838Z\n                    date_modified: 2021-03-24T22:51:42.838Z\n                    send_date: 2021-03-24T22:51:42.838Z\n                    object: card\n                object: list\n                previous_url: null\n                next_url: null\n                count: 1\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/cards?limit=2\" \\\n              -u \u003cYOUR API KEY\u003e:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const cards = await new CardsApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cards.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Python\n          source: |\n            lob.Card.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ecards()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n    post:\n      operationId: card_create\n      summary: Create\n      description: Creates a new card given information\n      tags:\n        - Cards\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/card_editable'\n            example:\n              description: Test card\n              front: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\n              back: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\n              size: 2.125x3.375\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/card_editable'\n            example:\n              description: Test card\n              front: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\n              back: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\n              size: 2.125x3.375\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/card_editable'\n            example:\n              description: Test card\n              front: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\n              back: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\n              size: 2.125x3.375\n      responses:\n        '200':\n          description: Card created successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n              examples:\n                basic:\n                  value:\n                    id: card_7a6d73c5c8457fc\n                    account_id: fa9ea650fc7b31a89f92\n                    description: Test card\n                    url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1\u0026expires=1636910992\u0026signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA\n                    size: 2.125x3.375\n                    auto_reorder: false\n                    reorder_quantity: null\n                    raw_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    front_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    back_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    thumbnails:\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1\u0026expires=1636910992\u0026signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1\u0026expires=1636910992\u0026signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1\u0026expires=1636910992\u0026signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1\u0026expires=1636910992\u0026signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1\u0026expires=1636910992\u0026signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1\u0026expires=1636910992\u0026signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw\n                    available_quantity: 10000\n                    pending_quantity: 0\n                    countries: null\n                    status: rendered\n                    mode: test\n                    orientation: horizontal\n                    threshold_amount: 0\n                    date_created: 2021-03-24T22:51:42.838Z\n                    date_modified: 2021-03-24T22:51:42.838Z\n                    send_date: 2021-03-24T22:51:42.838Z\n                    object: card\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/cards \\\n              -u \u003cYOUR API KEY\u003e: \\\n              -d \"description=Test card\" \\\n              -d \"front=https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\" \\\n              -d \"back=https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf\" \\\n              -d \"size=2.125x3.375\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const cardsCreate = new CardEditable({\n              front: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              back: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              size: CardEditableSizeEnum._2125x3375,\n              description: 'Test card'\n            });\n\n            try {\n              const myCard = await new CardsApi(config).create(cardsCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cards.create({\n              description: 'Test card',\n              front: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              back: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              size: '2.125x3.375'\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Python\n          source: |\n            lob.Card.create(\n              description = 'Test card',\n              front = 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              back = 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              size = '2.125x3.375'\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ecards()-\u003ecreate(array(\n              'description'           =\u003e 'Test card',\n              'front'                 =\u003e 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              'back'                  =\u003e 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/card_horizontal.pdf',\n              'size' =\u003e               =\u003e '2.125x3.375'\n            ));\n  /cards/{card_id}:\n    parameters:\n      - in: path\n        name: card_id\n        description: id of the card\n        required: true\n        schema:\n          $ref: '#/components/schemas/card_id'\n    get:\n      operationId: card_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing card. You need only supply the\n        unique customer identifier that was returned upon card creation.\n      tags:\n        - Cards\n      responses:\n        '200':\n          description: Returns a card object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n              examples:\n                basic:\n                  value:\n                    id: card_7a6d73c5c8457fc\n                    account_id: fa9ea650fc7b31a89f92\n                    description: Test card\n                    url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1\u0026expires=1636910992\u0026signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA\n                    size: 2.125x3.375\n                    auto_reorder: false\n                    reorder_quantity: null\n                    raw_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    front_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    back_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    thumbnails:\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1\u0026expires=1636910992\u0026signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1\u0026expires=1636910992\u0026signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1\u0026expires=1636910992\u0026signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1\u0026expires=1636910992\u0026signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1\u0026expires=1636910992\u0026signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1\u0026expires=1636910992\u0026signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw\n                    available_quantity: 10000\n                    pending_quantity: 0\n                    countries: null\n                    status: rendered\n                    mode: test\n                    orientation: horizontal\n                    threshold_amount: 0\n                    date_created: 2021-03-24T22:51:42.838Z\n                    date_modified: 2021-03-24T22:51:42.838Z\n                    send_date: 2021-03-24T22:51:42.838Z\n                    object: card\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/cards/card_7a6d73c5c8457fc \\\n              -u \u003cYOUR API KEY\u003e:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const card = await new CardsApi(config).get('card_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cards.retrieve('card_7a6d73c5c8457fc', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Python\n          source: |\n            lob.Card.retrieve('card_7a6d73c5c8457fc')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ecards()-\u003eget('card_7a6d73c5c8457fc');\n    post:\n      operationId: card_update\n      summary: Update\n      description: \u003e-\n        Update the details of an existing card. You need only supply the unique\n        identifier that was returned upon card creation.\n      tags:\n        - Cards\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/card_updatable'\n            example:\n              description: Test card\n              auto_reorder: true\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/card_updatable'\n            example:\n              description: Test card\n              auto_reorder: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/card_updatable'\n            example:\n              description: Test card\n              auto_reorder: true\n      responses:\n        '200':\n          description: Returns a card object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card'\n              examples:\n                basic:\n                  value:\n                    id: card_7a6d73c5c8457fc\n                    account_id: fa9ea650fc7b31a89f92\n                    description: Test card\n                    url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1\u0026expires=1636910992\u0026signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA\n                    size: 2.125x3.375\n                    auto_reorder: false\n                    reorder_quantity: null\n                    raw_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    front_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    back_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    thumbnails:\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1\u0026expires=1636910992\u0026signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1\u0026expires=1636910992\u0026signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1\u0026expires=1636910992\u0026signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1\u0026expires=1636910992\u0026signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1\u0026expires=1636910992\u0026signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1\u0026expires=1636910992\u0026signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw\n                    available_quantity: 10000\n                    pending_quantity: 0\n                    countries: null\n                    status: rendered\n                    mode: test\n                    orientation: horizontal\n                    threshold_amount: 0\n                    date_created: 2021-03-24T22:51:42.838Z\n                    date_modified: 2021-03-24T22:51:42.838Z\n                    send_date: 2021-03-24T22:51:42.838Z\n                    object: card\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X POST https://api.lob.com/v1/cards/card_7a6d73c5c8457fc \\\n              -u \u003cYOUR API KEY\u003e: \\\n              -d \"description=Awesome card\" \\\n              -d \"auto_reorder=true\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const cardUpdatable =  new CardEditable ({\n              description: 'Awesome card',\n              auto_reorder: true\n            });\n\n            try {\n              await new CardsApi(config).update(cardUpdatable);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cards.update('card_7a6d73c5c8457fc', {\n              description: 'Awesome card',\n              auto_reorder: true\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n    delete:\n      operationId: card_delete\n      summary: Delete\n      description: \u003e-\n        Delete an existing card. You need only supply the unique identifier that\n        was returned upon card creation.\n      tags:\n        - Cards\n      responses:\n        '200':\n          $ref: '#/components/responses/card_deleted'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X DELETE https://api.lob.com/v1/cards/card_7a6d73c5c8457fc \\\n              -u \u003cYOUR API KEY\u003e:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteCard = await new CardsApi(config).delete('card_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cards.delete('card_7a6d73c5c8457fc', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Python\n          source: |\n            lob.Card.delete('card_7a6d73c5c8457fc')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ecards()-\u003edelete('card_7a6d73c5c8457fc');\n  /cards/{card_id}/orders:\n    parameters:\n      - in: path\n        name: card_id\n        description: The ID of the card to which the card orders belong.\n        required: true\n        schema:\n          $ref: '#/components/schemas/card_id'\n    get:\n      operationId: card_orders_retrieve\n      summary: Retrieve\n      description: Retrieves the card orders associated with the given card id.\n      tags:\n        - Card Orders\n      responses:\n        '200':\n          description: Returns the card orders associated with the given card id\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - $ref: '#/components/schemas/list'\n                  - type: object\n                    properties:\n                      data:\n                        type: array\n                        description: List of card orders\n                        items:\n                          $ref: '#/components/schemas/card_order'\n              example:\n                data:\n                  - id: co_e0f8a0562a06bea7f\n                    card_id: card_6afffd19045076c\n                    status: available\n                    inventory: 9500\n                    quantity_ordered: 10000\n                    unit_price: 0.75\n                    cancelled_reason: No longer needed\n                    availability_date: 2021-10-12T21:41:48.326Z\n                    expected_availability_date: 2021-11-04T21:03:18.871Z\n                    date_created: 2021-10-07T21:03:18.871Z\n                    date_modified: 2021-10-16T01:00:30.144Z\n                    object: card_order\n                object: list\n                next_url: null\n                previous_url: null\n                count: 1\n        default:\n          $ref: '#/components/responses/card_order_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/cards/card_6afffd19045076c/orders/ \\\n              -u \u003cYOUR API KEY\u003e:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const cardOrders = await new CardOrdersApi(cofig).get( 'co_xxxx' );\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cardOrders.list('card_6afffd19045076c', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Python\n          source: |\n            lob.CardOrder.list('card_6afffd19045076c')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ecardOrders('card_6afffd19045076c')-\u003eall();\n    post:\n      operationId: card_order_create\n      summary: Create\n      description: Creates a new card order given information\n      tags:\n        - Card Orders\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/card_order_editable'\n            example:\n              quantity: 10000\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/card_order_editable'\n            example:\n              quantity: 10000\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/card_order_editable'\n            example:\n              quantity: 10000\n      responses:\n        '200':\n          description: Card order created successfully\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/card_order'\n              examples:\n                basic:\n                  value:\n                    id: co_e0f8a0562a06bea7f\n                    card_id: card_6afffd19045076c\n                    status: available\n                    inventory: 9500\n                    quantity_ordered: 10000\n                    unit_price: 0.75\n                    cancelled_reason: No longer needed\n                    availability_date: 2021-10-12T21:41:48.326Z\n                    expected_availability_date: 2021-11-04T21:03:18.871Z\n                    date_created: 2021-10-07T21:03:18.871Z\n                    date_modified: 2021-10-16T01:00:30.144Z\n                    object: card_order\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/cards/card_6afffd19045076c/orders \\\n              -u \u003cYOUR API KEY\u003e: \\\n              -d \"quantity=10000\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const cardForCreate = new CardOrderEditable({\n              quantity: 200\n            });\n\n            try {\n              const myCardOrder = await new CardOrdersApi(config).create('card_xxxx', cardForCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.cardOrders.create('card_6afffd19045076c', {\n              quantity: 10000\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Python\n          source: |\n            lob.CardOrder.create('card_6afffd19045076c', quantity = 10000)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003ecardOrders('card_6afffd19045076c')-\u003ecreate(array(\n              'quantity'           =\u003e 10000\n            ));\n  /checks/{chk_id}:\n    parameters:\n      - in: path\n        name: chk_id\n        description: id of the check\n        required: true\n        schema:\n          $ref: '#/components/schemas/chk_id'\n    get:\n      operationId: check_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing check. You need only supply the\n        unique check identifier that was returned upon check creation.\n      tags:\n        - Checks\n      responses:\n        '200':\n          description: Returns a check object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/check'\n              example:\n                id: chk_534f10783683daa0\n                description: Demo Check\n                metadata: {}\n                check_number: 10062\n                memo: rent\n                amount: 22.5\n                url: \u003e-\n                  https://lob-assets.com/checks/chk_534f10783683daa0.pdf?expires=1540372221\u0026signature=Ty3IV2bGPEoQfrdraYHlNYTaarnHLXb\n                to:\n                  id: adr_bae820679f3f536b\n                  description: Harry - Office\n                  name: HARRY ZHANG\n                  company: LOB\n                  email: harry@lob.com\n                  phone: '5555555555'\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: ''\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2018-12-08T03:08:43.446Z\n                  date_modified: 2018-12-08T03:08:43.446Z\n                  object: address\n                  recipient_moved: false\n                from:\n                  id: adr_b8fb5acf3a2b55db\n                  name: LEORE AVIDAR\n                  address_line1: 210 KING ST STE 6100\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2017-09-05T17:47:53.767Z\n                  date_modified: 2017-09-05T17:47:53.767Z\n                  object: address\n                bank_account:\n                  id: bank_8cad8df5354d33f\n                  description: Test Bank Account\n                  metadata: {}\n                  routing_number: '322271627'\n                  account_number: '123456789'\n                  signatory: John Doe\n                  bank_name: J.P. MORGAN CHASE BANK, N.A.\n                  verified: true\n                  account_type: company\n                  date_created: 2015-11-06T19:24:24.440Z\n                  date_modified: 2015-11-06T19:41:28.312Z\n                  object: bank_account\n                  signature_url: \u003e-\n                    https://lob-assets.com/bank-accounts/asd_asdfghjkqwertyui.pdf?expires=1234567890\u0026signature=aksdf\n                carrier: USPS\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/checks/chk_534f10783683daa0_thumb_small_1.png?expires=1540372221\u0026signature=ShhPpH74wYkNiAj7Il9B6q8ZKkzlGd4\n                    medium: \u003e-\n                      https://lob-assets.com/checks/chk_534f10783683daa0_thumb_medium_1.png?expires=1540372221\u0026signature=tmIOq6aAyKgzAECp7STj1rvJuMS5Svd\n                    large: \u003e-\n                      https://lob-assets.com/checks/chk_534f10783683daa0_thumb_large_1.png?expires=1540372221\u0026signature=04nLEwE9d2qgQJNgJYWSOgPnU0FZbEv\n                merge_variables:\n                  name: Harry\n                expected_delivery_date: 2017-09-12\n                mail_type: usps_first_class\n                date_created: 2017-09-05T17:47:53.896Z\n                date_modified: 2017-09-05T17:47:53.896Z\n                send_date: 2017-09-05T17:47:53.896Z\n                object: check\n                message: pancakes are good\n                check_bottom_template_id: tmpl_a\n                attachment_template_id: tmpl_a\n                check_bottom_template_version_id: vrsn_a\n                attachment_template_version_id: vrsn_a\n                deleted: true\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/checks/chk_534f10783683daa0 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const check = await new ChecksApi(config).get('chk_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.checks.retrieve('chk_534f10783683daa0', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.checks.find(\"chk_534f10783683daa0\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Check.retrieve('chk_534f10783683daa0')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003echecks()-\u003eget('chk_534f10783683daa0');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cCheck\u003e response =\n            Check.retrieve(\"chk_534f10783683daa0\");\n\n            Check check = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Check.find(\"chk_534f10783683daa0\")\n          label: ELIXIR\n    delete:\n      operationId: check_cancel\n      summary: Cancel\n      description: \u003e-\n        Completely removes a check from production. This can only be done if the\n        check has a `send_date` and the `send_date` has not yet passed. If the\n        check is successfully canceled, you will not be charged for it. Read\n        more on [cancellation windows](#section/Cancellation-Windows) and\n        [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation\n        is a premium feature. Upgrade to the appropriate \u003ca\n        href=\"https://dashboard.lob.com/#/settings/editions\"\n        target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n      tags:\n        - Checks\n      responses:\n        '200':\n          $ref: '#/components/responses/check_canceled'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X DELETE https://api.lob.com/v1/checks/chk_534f10783683daa0 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteCheck = await new ChecksApi(config).delete('chk_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.checks.delete('chk_534f10783683daa0', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.checks.destroy(\"chk_534f10783683daa0\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Check.delete('chk_534f10783683daa0')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003echecks()-\u003edelete('chk_534f10783683daa0');\n        - lang: Java\n          source: |\n            LobResponse\u003cCheck\u003e response = Check.delete(\"chk_534f10783683daa0\");\n            Check check = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Check.destroy(\"chk_534f10783683daa0\")\n          label: ELIXIR\n  /checks:\n    get:\n      operationId: checks_list\n      summary: List\n      description: \u003e-\n        Returns a list of your checks. The checks are returned sorted by\n        creation date, with the most recently created checks appearing first.\n      tags:\n        - Checks\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n        - $ref: '#/components/parameters/scheduled'\n        - $ref: '#/components/parameters/send_date'\n        - $ref: '#/components/parameters/mail_type'\n        - $ref: '#/components/parameters/sort_by'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_checks'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/checks?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: typescript\n          source: |\n            try {\n              const checks = await new ChecksApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.checks.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.checks.list(limit: 2)\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Check.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003echecks()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, Object\u003e params = new HashMap\u003c\u003e();\n            params.put(\"limit\", 2);\n\n            LobResponse\u003cCheckCollection\u003e response = Check.list(params);\n            CheckCollection checks = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Check.list(%{limit: 2})\n          label: ELIXIR\n    post:\n      operationId: check_create\n      summary: Create\n      description: Creates a new check with the provided properties.\n      tags:\n        - Checks\n      parameters:\n        - $ref: '#/components/parameters/idem-header'\n        - $ref: '#/components/parameters/idem-query'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/check_editable'\n            example:\n              description: Demo Check\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                name: Leore Avidar\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: 94107-1741\n              bank_account: bank_8cad8df5354d33f\n              amount: 22.5\n              memo: rent\n              logo: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png\n              check_bottom: tmpl_23668b406d5afef\n              merge_variables:\n                name: Harry\n              metadata:\n                memo: rafting trip\n              attachment: ./cool.pdf\n              send_date: 2017-11-01T00:00:00.000Z\n              mail_type: usps_first_class\n              check_number: 10001\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/check_editable'\n            example:\n              description: Demo Check\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                name: Leore Avidar\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: 94107-1741\n              bank_account: bank_8cad8df5354d33f\n              amount: 22.5\n              memo: rent\n              logo: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png\n              check_bottom: tmpl_23668b406d5afef\n              merge_variables:\n                name: Harry\n              metadata:\n                memo: rafting trip\n              attachment: ./cool.pdf\n              send_date: 2017-11-01T00:00:00.000Z\n              mail_type: usps_first_class\n              check_number: 10001\n            encoding:\n              to:\n                style: deepObject\n                explode: true\n              from:\n                style: deepObject\n                explode: true\n              merge_variables:\n                style: deepObject\n                explode: true\n              metadata:\n                style: deepObject\n                explode: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/check_editable'\n            example:\n              description: Demo Check\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                name: Leore Avidar\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: 94107-1741\n              bank_account: bank_8cad8df5354d33f\n              amount: 22.5\n              memo: rent\n              logo: \u003e-\n                https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png\n              check_bottom: tmpl_23668b406d5afef\n              merge_variables:\n                name: Harry\n              metadata:\n                memo: rafting trip\n              attachment: ./cool.pdf\n              send_date: 2017-11-01T00:00:00.000Z\n              mail_type: usps_first_class\n              check_number: 10001\n            encoding:\n              logo:\n                contentType: image/png, image/jpeg\n      responses:\n        '200':\n          $ref: '#/components/responses/post_check'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/checks \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d 'description=Demo Check' \\\n              -d 'to[name]=Harry Zhang' \\\n              -d 'to[address_line1]=210 King St' \\\n              -d 'to[address_line2]=# 6100' \\\n              -d 'to[address_city]=San Francisco' \\\n              -d 'to[address_state]=CA' \\\n              -d 'to[address_zip]=94107' \\\n              -d 'from=adr_210a8d4b0b76d77b' \\\n              -d 'bank_account=bank_8cad8df5354d33f' \\\n              -d 'amount=22.50' \\\n              -d 'memo=rent' \\\n              --data-urlencode 'logo=https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png' \\\n              --data-urlencode 'check_bottom=\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e' \\\n              -d 'merge_variables[name]=Harry'\n          label: CURL\n        - lang: Typescript\n          source: |\n            const checkCreate = new CheckEditable({\n            to: new AddressEditable({\n              name: 'Harry Zhang',\n              address_line1: '210 King St',\n              address_line2: '# 6100',\n              address_city: 'San Francisco',\n              address_state: 'CA',\n              address_zip: '94107',\n            }),\n            from: 'adr_xxxx',\n            bank_account: 'bank_xxxx',\n            amount: 100\n            });\n\n            try {\n              const myCheck = await new ChecksApi(config).create(checkCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.checks.create({\n              description: 'Demo Check',\n              bank_account: 'bank_8cad8df5354d33f',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              amount: 22.50,\n              memo: 'rent',\n              logo: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png',\n              check_bottom: '\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e',\n              merge_variables: {\n                name: 'Harry'\n              }\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.checks.create(\n              description: 'Demo Check',\n              bank_account: 'bank_8cad8df5354d33f',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              amount: 22.50,\n              memo: 'rent',\n              logo: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png',\n              check_bottom: '\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e',\n              merge_variables: {\n                name: 'Harry'\n              }\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Check.create(\n              description = 'Demo Check',\n              to_address = {\n                'name': 'Harry Zhang',\n                'address_line1': '210 King St',\n                'address_line2': '# 6100',\n                'address_city': 'San Francisco',\n                'address_state': 'CA',\n                'address_zip': '94107'\n              },\n              from_address = 'adr_210a8d4b0b76d77b',\n              bank_account = 'bank_8cad8df5354d33f',\n              amount = 22.50,\n              memo = 'rent',\n              logo = 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png',\n              check_bottom = '\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e',\n              merge_variables = {\n                'name': 'Harry'\n              }\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003echecks()-\u003ecreate(array(\n              'description'           =\u003e 'Demo Check',\n              'to[name]'              =\u003e 'Harry Zhang',\n              'to[address_line1]'     =\u003e '210 King St',\n              'to[address_line2]'     =\u003e '# 6100',\n              'to[address_city]'      =\u003e 'San Francisco',\n              'to[address_zip]'       =\u003e '94107',\n              'to[address_state]'     =\u003e 'CA',\n              'from'                  =\u003e 'adr_210a8d4b0b76d77b',\n              'bank_account'          =\u003e 'bank_8cad8df5354d33f',\n              'amount'                =\u003e 22.50,\n              'memo'                  =\u003e 'rent',\n              'logo'                  =\u003e 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png',\n              'check_bottom'          =\u003e '\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e',\n              'merge_variables[name]' =\u003e 'Harry'\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, String\u003e mergeVariables = new HashMap\u003c\u003e();\n            mergeVariables.put('name', 'Harry');\n\n            LobResponse\u003cCheck\u003e response = new Check.RequestBuilder()\n                    .setDescription('Demo Check')\n                    .setCheckBottom('\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e')\n                    .setMergeVariables(mergeVariables)\n                    .setAmount(22.50f)\n                    .memo('rent')\n                    .setLogo('https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png')\n                    .setTo(\n                            new Address.RequestBuilder()\n                                    .setName('Harry Zhang')\n                                    .setLine1('210 King St Ste 6100')\n                                    .setCity('San Francisco')\n                                    .setState('CA')\n                                    .setZip('94107')\n                    )\n                    .setFrom('adr_210a8d4b0b76d77b')\n                    .setBankAccount('bank_8cad8df5354d33f')\n                    .create();\n\n            Check check = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Check.create(%{\n              description: 'Demo Check',\n              bank_account: 'bank_8cad8df5354d33f',\n              to: %{\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              amount: 22.50,\n              memo: 'rent',\n              logo: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/check_logo.png',\n              check_bottom: '\u003ch1 style=\"padding-top:4in;\"\u003eDemo Check for {{name}}\u003c/h1\u003e',\n              merge_variables: %{\n                name: 'Harry'\n              }\n            })\n          label: ELIXIR\n  /intl_autocompletions:\n    post:\n      operationId: intl_autocompletions\n      summary: Autocomplete\n      description: \u003e-\n        Given an address prefix consisting of a partial primary line and\n        country, as well as optional input of city, state, and zip code, this\n        functionality returns up to 10 full International address suggestions.\n        Not all of them will turn out to be valid addresses; they'll need to be\n        [verified](#operation/intl_verification).\n      tags:\n        - Intl Autocompletions\n      parameters:\n        - $ref: '#/components/parameters/lang_spec'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/intl_autocompletions_writable'\n            examples:\n              basic:\n                value:\n                  address_prefix: 340 Wat\n                  city: Summerside\n                  state: Prince Edward Island\n                  zip_code: C1N 1C4\n                  country: CA\n              test:\n                value:\n                  address_prefix: 1 sugg\n                  country: CA\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/intl_autocompletions_writable'\n            examples:\n              basic:\n                value:\n                  address_prefix: 340 Wat\n                  city: Summerside\n                  state: Prince Edward Island\n                  zip_code: C1N 1C4\n                  country: CA\n              test:\n                value:\n                  address_prefix: 1 sugg\n                  country: CA\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/intl_autocompletions_writable'\n            examples:\n              basic:\n                value:\n                  address_prefix: 340 Wat\n                  city: Summerside\n                  state: Prince Edward Island\n                  zip_code: C1N 1C4\n                  country: CA\n              test:\n                value:\n                  address_prefix: 1 sugg\n                  country: CA\n      responses:\n        '200':\n          $ref: '#/components/responses/intl_autocompletions'\n        default:\n          $ref: '#/components/responses/intl_autocompletions_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/intl_autocompletions \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              -d \"address_prefix=340 Wat\" \\\n              -d \"city=Summerside\" \\\n              -d \"state=Prince Edward Island\" \\\n              -d \"zip_code=C1N 1C4\" \\\n              -d \"country=CA\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            This feature is not currently supported by this library.\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.intlVerifications.verify({\n              address_prefix: '340 Wat',\n              city: 'Summerside',\n              state: 'Prince Edward Island',\n              zip_code: 'C1N 1C4',\n              country: 'CA'\n            }, function (err, res) {\n              console.log (err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.intl_verifications.verify(\n              address_prefix: \"340 Wat\",\n              city:         \"Summerside\",\n              state:        \"Prince Edward Island\",\n              zip_code:  \"C1N 1C4\",\n              country:      \"CA\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.IntlVerification.create(\n              address_prefix='340 Wat',\n              city='Summerside',\n              state='Prince Edward Island',\n              zip_code='C1N 1C4',\n              country='CA'\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eintlVerifications()-\u003everify(array(\n              'address_prefix' =\u003e '340 Wat',\n              'city'         =\u003e 'Summerside',\n              'state'        =\u003e 'Prince Edward Island',\n              'zip_code'  =\u003e 'C1N 1C4',\n              'country'      =\u003e 'CA',\n            ));\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cIntlVerification\u003e response = new\n            IntlVerification.RequestBuilder()\n                    .setAddressPrefix(\"340 Wat\")\n                    .setCity(\"Summerside\")\n                    .setState(\"Prince Edward Island\")\n                    .setPostalCode(\"C1N 1C4\")\n                    .setCountry(\"CA\")\n                    .verify();\n            IntlVerification intlVerification = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.IntlVerification.verify(%{\n              address_prefix: \"340 Wat\",\n              city: \"Summerside\",\n              state: \"Prince Edward Island\",\n              zip_code: \"C1N 1C4\",\n              country: \"CA\"\n            })\n          label: ELIXIR\n  /intl_verifications:\n    post:\n      operationId: intl_verification\n      summary: Single Verify\n      description: \u003e-\n        Verify an international (except US or US territories) address _with a\n        live API key_. Requests to this endpoint with a test API key will return\n        a dummy response based on the primary line you input.\n      tags:\n        - Intl Verifications\n      parameters:\n        - $ref: '#/components/parameters/lang_spec'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/intl_verification_writable'\n            examples:\n              basic:\n                value:\n                  recipient: Harry Zhang\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edward Island\n                  postal code: C1N 1C4\n                  country: CA\n              full_payload:\n                value:\n                  recipient: Harry Zhang\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edward Island\n                  postal code: C1N 1C4\n                  country: CA\n              single_line:\n                value:\n                  address: 370 Water St C1N 1C4\n                  country: CA\n              test:\n                value:\n                  primary_line: deliverable\n                  country: CA\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/intl_verification_writable'\n            examples:\n              basic:\n                value:\n                  recipient: Harry Zhang\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edward Island\n                  postal code: C1N 1C4\n                  country: CA\n              full_payload:\n                value:\n                  recipient: Harry Zhang\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edward Island\n                  postal code: C1N 1C4\n                  country: CA\n              single_line:\n                value:\n                  address: 370 Water St C1N 1C4\n                  country: CA\n              test:\n                value:\n                  primary_line: deliverable\n                  country: CA\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/intl_verification_writable'\n            examples:\n              basic:\n                value:\n                  recipient: Harry Zhang\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edward Island\n                  postal code: C1N 1C4\n                  country: CA\n              full_payload:\n                value:\n                  recipient: Harry Zhang\n                  primary_line: 370 Water St\n                  secondary_line: ''\n                  city: Summerside\n                  state: Prince Edward Island\n                  postal code: C1N 1C4\n                  country: CA\n              single_line:\n                value:\n                  address: 370 Water St C1N 1C4\n                  country: CA\n              test:\n                value:\n                  primary_line: deliverable\n                  country: CA\n      responses:\n        '200':\n          $ref: '#/components/responses/intl_verifications'\n        default:\n          $ref: '#/components/responses/intl_verifications_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/intl_verifications \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              -d \"primary_line=370 Water St\" \\\n              -d \"city=Summerside\" \\\n              -d \"state=Prince Edward Island\" \\\n              -d \"postal_code=C1N 1C4\" \\\n              -d \"country=CA\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const IntlVerifications = new IntlVerificationsApi(av_config);\n            let verificationData1: IntlVerificationWritable = {\n              primary_line: '370 WATER ST',\n              postal_code: 'C1N 1C4',\n              country: CountryExtended.Ca\n            };\n\n            try {\n              const singleVerified = await IntlVerifications.verifySingle(verificationData1);   \n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.intlVerifications.verify({\n              primary_line: '370 Water St',\n              city: 'Summerside',\n              state: 'Prince Edward Island',\n              postal_code: 'C1N 1C4',\n              country: 'CA'\n            }, function (err, res) {\n              console.log (err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.intl_verifications.verify(\n              primary_line: \"370 Water St\",\n              city:         \"Summerside\",\n              state:        \"Prince Edward Island\",\n              postal_code:  \"C1N 1C4\",\n              country:      \"CA\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.IntlVerification.create(\n              primary_line='370 Water St',\n              city='Summerside',\n              state='Prince Edward Island',\n              postal_code='C1N 1C4',\n              country='CA'\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eintlVerifications()-\u003everify(array(\n              'primary_line' =\u003e '370 Water St',\n              'city'         =\u003e 'Summerside',\n              'state'        =\u003e 'Prince Edward Island',\n              'postal_code'  =\u003e 'C1N 1C4',\n              'country'      =\u003e 'CA',\n            ));\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cIntlVerification\u003e response = new\n            IntlVerification.RequestBuilder()\n                    .setPrimaryLine(\"370 Water St\")\n                    .setCity(\"Summerside\")\n                    .setState(\"Prince Edward Island\")\n                    .setPostalCode(\"C1N 1C4\")\n                    .setCountry(\"CA\")\n                    .verify();\n\n            IntlVerification intlVerification = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.IntlVerification.verify(%{\n              primary_line: \"370 Water St\",\n              city: \"Summerside\",\n              state: \"Prince Edward Island\",\n              postal_code: \"C1N 1C4\",\n              country: \"CA\"\n            })\n          label: ELIXIR\n  /letters/{ltr_id}:\n    parameters:\n      - in: path\n        name: ltr_id\n        description: id of the letter\n        required: true\n        schema:\n          $ref: '#/components/schemas/ltr_id'\n    get:\n      operationId: letter_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing letter. You need only supply the\n        unique letter identifier that was returned upon letter creation.\n      tags:\n        - Letters\n      responses:\n        '200':\n          description: Returns a letter object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/letter'\n              example:\n                id: ltr_4868c3b754655f90\n                description: Demo Letter\n                metadata: {}\n                to:\n                  id: adr_d3489cd64c791ab5\n                  description: null\n                  name: HARRY ZHANG\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2017-09-05T15:54:53.264Z\n                  date_modified: 2017-09-05T15:54:53.264Z\n                  deleted: true\n                  object: address\n                from:\n                  id: adr_b8fb5acf3a2b55db\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2017-09-05T15:54:53.264Z\n                  date_modified: 2017-09-05T15:54:53.264Z\n                  deleted: true\n                  object: address\n                color: true\n                double_sided: true\n                address_placement: top_first_page\n                return_envelope: false\n                perforated_page: null\n                custom_envelope: null\n                extra_service: null\n                mail_type: usps_first_class\n                url: \u003e-\n                  https://lob-assets.com/letters/ltr_4868c3b754655f90.pdf?expires=1540372221\u0026signature=8r94fse8uam7wGWmW5baxXulU88X2CA\n                carrier: USPS\n                tracking_number: null\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221\u0026signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\n                    medium: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221\u0026signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\n                    large: \u003e-\n                      https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221\u0026signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\n                merge_variables:\n                  name: Harry\n                expected_delivery_date: 2017-09-12\n                date_created: 2017-09-05T15:54:53.346Z\n                date_modified: 2017-09-05T15:54:53.346Z\n                send_date: 2017-09-05T15:54:53.346Z\n                cards:\n                  - id: card_c51ae96f5cebf3e\n                    account_id: fa9ea650fc7b31a89f92\n                    description: null\n                    url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e.pdf?version=v1\u0026expires=1636910992\u0026signature=mnsDH2DAxdkN9VibdlLMxJC86sME5WYDqkNtmvGwdNsAaUWfbnv0rJhJ1mR8Ol4uxQq61j5wYZ0r3s-lBkQfDA\n                    size: 2.125x3.375\n                    auto_reorder: false\n                    reorder_quantity: null\n                    raw_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    front_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    back_original_url: \u003e-\n                      https://lob-assets.com/cards/card_c51ae96f5cebf3e_raw.pdf?version=v1\u0026expires=1636910992\u0026signature=-bZo31FMAp2vmNaZKyXn_Qa4APqwtNinw76FrQ7uyQejFZw6VBQQYfoiQ642iXh0H2K5i2aOo8_BAkt3UJdVDw\n                    thumbnails:\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_1.png?version=v1\u0026expires=1636910992\u0026signature=mrv8JDvpZK4I8WUGH0tPdtK-My5oes0Ltj_gL7BDw96SpCTTeZFHkz81SzclyFP9dQRtlsvAsjcuGcTBvCvOCg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_1.png?version=v1\u0026expires=1636910992\u0026signature=VgL_2Ckm_kxKiWGgWtdNoy9HHOn8dGYSVOn7UqyCbwdbVlUtx28TRN4Bo8Iru3n0keKp9He0YhKT1ILotznMDA\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_1.png?version=v1\u0026expires=1636910992\u0026signature=FKSzymA13j-CQ0uk20cGHZTzT3vimzNBYrgp-xifLFg4mMdo1BZALR5O0aF_jVhsX614hKP35ONdYl47TQxXAw\n                      - small: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_small_2.png?version=v1\u0026expires=1636910992\u0026signature=IWsmPa_ULlv2yyqjX564d_YfHHY_M7i9YxDnw-WXDr2jtOFcArmRZQbnHeE9g_rYxnddJbgosuv8-c2utiu7Cg\n                        medium: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_medium_2.png?version=v1\u0026expires=1636910992\u0026signature=zxK7VKGiTvz5Ywrkaydd0v3GcYf58R7A08J4tNfI7-aiNODDcTF3l0MqY13n9Pyc8RXSdD0XVBY-OpbA1VM-Ag\n                        large: \u003e-\n                          https://lob-assets.com/cards/card_c51ae96f5cebf3e_thumb_large_2.png?version=v1\u0026expires=1636910992\u0026signature=r0OFUhh315ZwN0raMZdIwJd2oCIEYsz0BABaMxIuO1PKTD0ckGWrhcGdzk2dlWQ6vSvp0CUQ5k1RXGqkIIqkDw\n                    available_quantity: 10000\n                    pending_quantity: 0\n                    countries: null\n                    status: rendered\n                    mode: test\n                    orientation: horizontal\n                    threshold_amount: 0\n                    date_created: 2017-08-05T15:54:53.346Z\n                    date_modified: 2017-08-05T15:54:53.346Z\n                    object: card\n                object: letter\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/letters/ltr_4868c3b754655f90 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const letter= await new LettersApi(config).get('ltr_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.letters.retrieve('ltr_4868c3b754655f90', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.letters.find(\"ltr_4868c3b754655f90\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Letter.retrieve('ltr_4868c3b754655f90')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eletters()-\u003eget('ltr_4868c3b754655f90');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cLetter\u003e response =\n            Letter.retrieve(\"ltr_4868c3b754655f90\");\n\n            Letter letter = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Letter.find(\"ltr_4868c3b754655f90\")\n          label: ELIXIR\n    delete:\n      operationId: letter_cancel\n      summary: Cancel\n      description: \u003e-\n        Completely removes a letter from production. This can only be done if\n        the letter has a `send_date` and the `send_date` has not yet passed. If\n        the letter is successfully canceled, you will not be charged for it.\n        Read more on [cancellation windows](#section/Cancellation-Windows) and\n        [scheduling](#section/Scheduled-Mailings). Scheduling and cancellation\n        is a premium feature. Upgrade to the appropriate \u003ca\n        href=\"https://dashboard.lob.com/#/settings/editions\"\n        target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n      tags:\n        - Letters\n      responses:\n        '200':\n          $ref: '#/components/responses/letter_deleted'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X DELETE https://api.lob.com/v1/letters/ltr_4868c3b754655f90 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteLetter = await new LettersApi(config).delete('ltr_xxxx')\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.letters.delete('ltr_4868c3b754655f90', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.letters.destroy(\"ltr_4868c3b754655f90\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Letter.delete('ltr_4868c3b754655f90')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eletters()-\u003edelete('ltr_4868c3b754655f90');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cLetter\u003e response =\n            Letter.delete(\"ltr_4868c3b754655f90\");\n\n            Letter letter= = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Letter.destroy(\"ltr_4868c3b754655f90\")\n          label: ELIXIR\n  /letters:\n    get:\n      operationId: letters_list\n      summary: List\n      description: \u003e-\n        Returns a list of your letters. The letters are returned sorted by\n        creation date, with the most recently created letters appearing first.\n      tags:\n        - Letters\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n        - in: query\n          name: color\n          description: \u003e-\n            Set to `true` to return only color letters. Set to `false` to return\n            only black \u0026 white letters.\n          schema:\n            type: boolean\n        - $ref: '#/components/parameters/scheduled'\n        - $ref: '#/components/parameters/send_date'\n        - $ref: '#/components/parameters/mail_type'\n        - $ref: '#/components/parameters/sort_by'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_letters'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/letters?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: typescript\n          source: |\n            try {\n              const letters = await new LettersApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.letters.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.letters.list(limit: 2)\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Letter.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eletters()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, Object\u003e params = new HashMap\u003c\u003e\u003e();\n            params.put(\"limit\", 2);\n\n            LobResponse\u003cLetterCollection\u003e response = Letter.list(params);\n            LetterCollection letters = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Letter.list(%{limit: 2})\n          label: ELIXIR\n    post:\n      operationId: letter_create\n      summary: Create\n      description: Creates a new letter given information\n      tags:\n        - Letters\n      parameters:\n        - $ref: '#/components/parameters/idem-header'\n        - $ref: '#/components/parameters/idem-query'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/letter_editable'\n            example:\n              description: demo\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                name: Harry\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n              file: \u003e-\n                \u003chtml style='padding-top: 3in; margin: .5in;'\u003eHTML Letter for\n                {{name}}\u003c/html\u003e\n              color: true\n              cards:\n                - card_c51ae96f5cebf3e\n              double_sided: false\n              address_placement: bottom_first_page\n              mail_type: usps_first_class\n              return_envelope: true\n              perforated_page: 1\n              merge_variables:\n                name: Harry\n              metadata:\n                spiffy: 'true'\n              send_date: 2017-11-01T00:00:00.000Z\n              extra_service: registered\n              custom_envelope: null\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/letter_editable'\n            example:\n              description: demo\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                name: Harry\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n              file: \u003e-\n                \u003chtml style='padding-top: 3in; margin: .5in;'\u003eHTML Letter for\n                {{name}}\u003c/html\u003e\n              color: true\n              cards:\n                - card_c51ae96f5cebf3e\n              double_sided: false\n              address_placement: top_first_page\n              mail_type: usps_first_class\n              return_envelope: true\n              perforated_page: 1\n              merge_variables:\n                name: Harry\n              metadata:\n                spiffy: 'true'\n              send_date: 2017-11-01T00:00:00.000Z\n              extra_service: registered\n              custom_envelope: null\n            encoding:\n              to:\n                style: deepObject\n                explode: true\n              from:\n                style: deepObject\n                explode: true\n              merge_variables:\n                style: deepObject\n                explode: true\n              metadata:\n                style: deepObject\n                explode: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/letter_editable'\n            example:\n              description: demo\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                name: Harry\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n              file: \u003e-\n                \u003chtml style='padding-top: 3in; margin: .5in;'\u003eHTML Letter for\n                {{name}}\u003c/html\u003e\n              color: true\n              cards:\n                - card_c51ae96f5cebf3e\n              double_sided: false\n              address_placement: top_first_page\n              mail_type: usps_first_class\n              return_envelope: true\n              perforated_page: 1\n              merge_variables:\n                name: Harry\n              metadata:\n                spiffy: 'true'\n              send_date: 2017-11-01T00:00:00.000Z\n              extra_service: registered\n              custom_envelope: null\n      responses:\n        '200':\n          $ref: '#/components/responses/post_letter'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/letters \\\n              -u YOUR_API_KEY \\\n              -d 'description=Demo Letter' \\\n              -d 'to[name]=Harry Zhang' \\\n              -d 'to[address_line1]=210 King St' \\\n              -d 'to[address_line2]=# 6100' \\\n              -d 'to[address_city]=San Francisco' \\\n              -d 'to[address_state]=CA' \\\n              -d 'to[address_zip]=94107' \\\n              -d 'from=adr_210a8d4b0b76d77b' \\\n              --data-urlencode 'file=\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e' \\\n              -d 'merge_variables[name]=Harry' \\\n              -d 'color=true' \\\n              -d 'cards[]=card_c51ae96f5cebf3e'\n          label: CURL\n        - lang: Typescript\n          source: |\n            const letterCreate = new LetterEditable({\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_xxxx',\n              color: true,\n              extra_service: LetterEditableExtraServiceEnum.Certified,\n              file: 'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/us_letter_1pg.pdf'\n            });\n\n            try {\n              const myLetter = await new LettersApi(config).create(letterCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.letters.create({\n              description: 'Demo Letter',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              file: '\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e',\n              merge_variables: {\n                name: 'Harry'\n              },\n              color: true,\n              cards: ['card_c51ae96f5cebf3e']\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.letters.create(\n              description: 'Demo Letter',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              file: '\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e',\n              merge_variables: {\n                name: 'Harry'\n              },\n              color: true,\n              cards: ['card_c51ae96f5cebf3e']\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Letter.create(\n              description = 'Demo Letter',\n              to_address = {\n                  'name': 'Harry Zhang',\n                  'address_line1': '210 King St',\n                  'address_line2': '# 6100',\n                  'address_city': 'San Francisco',\n                  'address_state': 'CA',\n                  'address_zip': '94107'\n              },\n              from_address = 'adr_210a8d4b0b76d77b',\n              file = '\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e',\n              merge_variables = {\n                'name': 'Harry'\n              },\n              color = True,\n              cards = ['card_c51ae96f5cebf3e']\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eletters()-\u003ecreate(array(\n              'description'           =\u003e 'Demo Letter',\n              'to[name]'              =\u003e 'Harry Zhang',\n              'to[address_line1]'     =\u003e '210 King St',\n              'to[address_line2]'     =\u003e '# 6100',\n              'to[address_city]'      =\u003e 'San Francisco',\n              'to[address_zip]'       =\u003e '94107',\n              'to[address_state]'     =\u003e 'CA',\n              'from'                  =\u003e 'adr_210a8d4b0b76d77b',\n              'file'                  =\u003e '\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e',\n              'merge_variables[name]' =\u003e 'Harry',\n              'color'                 =\u003e true,\n              'cards'                 =\u003e ['card_c51ae96f5cebf3e']\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, String\u003e mergeVariables = new HashMap\u003c\u003e();\n            mergeVariables.put('name', 'Harry');\n\n            LobResponse\u003cLetter\u003e response = new Letter.RequestBuilder()\n                    .setDescription('Demo Letter')\n                    .setFile('\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e')\n                    .setColor(true)\n                    .setMergeVariables(mergeVariables)\n                    .setTo(\n                            new Address.RequestBuilder()\n                                    .setName('Harry Zhang')\n                                    .setLine1('210 King St Ste 6100')\n                                    .setCity('San Francisco')\n                                    .setState('CA')\n                                    .setZip('94107')\n                    )\n                    .setFrom('adr_210a8d4b0b76d77b')\n                    .setCards('card_c51ae96f5cebf3e')\n                    .create();\n\n            Letter letter = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Letter.create(%{\n              description: 'Demo Letter',\n              to: %{\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              file: '\u003chtml style=\"padding-top: 3in; margin: .5in;\"\u003eHTML Letter for {{name}}\u003c/html\u003e',\n              merge_variables: %{\n                name: 'Harry'\n              },\n              color: true,\n              cards: ['card_c51ae96f5cebf3e']\n            })\n          label: ELIXIR\n  /postcards/{psc_id}:\n    parameters:\n      - in: path\n        name: psc_id\n        description: id of the postcard\n        required: true\n        schema:\n          $ref: '#/components/schemas/psc_id'\n    get:\n      operationId: postcard_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing postcard. You need only supply the\n        unique customer identifier that was returned upon postcard creation.\n      tags:\n        - Postcards\n      responses:\n        '200':\n          description: Returns a postcard object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/postcard'\n              examples:\n                basic:\n                  value:\n                    id: psc_208e45e48d271294\n                    description: null\n                    metadata: {}\n                    to:\n                      id: adr_210a8d4b0b76d77b\n                      description: null\n                      name: null\n                      company: LOB\n                      phone: null\n                      email: null\n                      address_line1: 210 KING ST STE 6100\n                      address_line2: null\n                      address_city: SAN FRANCISCO\n                      address_state: CA\n                      address_zip: 94107-1741\n                      address_country: UNITED STATES\n                      metadata: {}\n                      date_created: 2018-12-08T03:01:07.651Z\n                      date_modified: 2018-12-08T03:01:07.651Z\n                      object: address\n                    url: \u003e-\n                      https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1\u0026expires=1619218302\u0026signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\n                    carrier: USPS\n                    front_template_id: null\n                    back_template_id: null\n                    date_created: 2021-03-24T22:51:42.838Z\n                    date_modified: 2021-03-24T22:51:42.838Z\n                    send_date: 2021-03-24T22:51:42.838Z\n                    object: postcard\n                full:\n                  value:\n                    id: psc_0e03d1ad7d31f151\n                    description: null\n                    metadata: {}\n                    to:\n                      id: adr_c7cb63d68f8d6\n                      description: null\n                      name: JANE DOE\n                      company: LOB\n                      phone: '5555555555'\n                      email: jane.doe@lob.com\n                      address_line1: 370 WATER ST\n                      address_line2: ''\n                      address_city: SUMMERSIDE\n                      address_state: PE\n                      address_zip: C1N 1C4\n                      address_country: CANADA\n                      metadata: {}\n                      date_created: 2018-12-08T03:01:07.651Z\n                      date_modified: 2018-12-08T03:01:07.651Z\n                      object: address\n                      recipient_moved: false\n                    from:\n                      id: adr_210a8d4b0b76d77b\n                      description: null\n                      name: LEORE AVIDAR\n                      company: null\n                      phone: null\n                      email: null\n                      address_line1: 210 KING ST STE 6100\n                      address_line2: null\n                      address_city: SAN FRANCISCO\n                      address_state: CA\n                      address_zip: 94107-1741\n                      address_country: UNITED STATES\n                      metadata: {}\n                      date_created: 2018-12-08T03:01:07.651Z\n                      date_modified: 2018-12-08T03:01:07.651Z\n                      object: address\n                    url: \u003e-\n                      https://lob-assets.com/postcards/psc_208e45e48d271294.pdf?version=v1\u0026expires=1619218302\u0026signature=NfHHLBSr5tOHA_Z4kij4dKqZG8f3vMDtwvuFVeeF9pV_lylcjLsVVODhNCE5hR6-2slUr6t9WMNsi429Pj7_DA\n                    carrier: USPS\n                    front_template_id: tmpl_93c369f06171958\n                    back_template_id: tmpl_93c369f06171958\n                    front_template_version_id: vrsn_a83e044941c393b\n                    back_template_version_id: vrsn_a83e044941c393b\n                    tracking_events: []\n                    size: 6x11\n                    mail_type: usps_first_class\n                    merge_variables: {}\n                    thumbnails:\n                      - small: \u003e-\n                          https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_small_1.png?expires=1540372221\u0026signature=a5fRBJ22ZA78Vgpg34M9UfmHWTS3eha\n                        medium: \u003e-\n                          https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_medium_1.png?expires=1540372221\u0026signature=bAzL8sv935PY09FWSkpDpWKkyvGSWYF\n                        large: \u003e-\n                          https://lob-assets.com/letters/ltr_4868c3b754655f90_thumb_large_1.png?expires=1540372221\u0026signature=gsKvxXgrm4v4iZD3bOibK7jApNkEMdW\n                    expected_delivery_date: 2021-03-30\n                    date_created: 2021-03-24T22:51:42.838Z\n                    date_modified: 2021-03-24T22:51:42.838Z\n                    send_date: 2021-03-24T22:51:42.838Z\n                    object: postcard\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/postcards/psc_5c002b86ce47537a \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const postcard = await new PostCardsApi(config).get('psc_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.postcards.retrieve('psc_5c002b86ce47537a', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.postcards.find(\"psc_5c002b86ce47537a\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Postcard.retrieve('psc_5c002b86ce47537a')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003epostcards()-\u003eget('psc_5c002b86ce47537a');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cPostcard\u003e response =\n            Postcard.retrieve(\"psc_5c002b86ce47537a\");\n\n            Postcard postcard = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Postcard.find(\"psc_5c002b86ce47537a\")\n          label: ELIXIR\n    delete:\n      operationId: postcard_delete\n      summary: Cancel\n      description: \u003e-\n        Completely removes a postcard from production. This can only be done if\n        the postcard has a `send_date` and the `send_date` has not yet passed.\n        If the postcard is successfully canceled, you will not be charged for\n        it. Read more on [cancellation windows](#section/Cancellation-Windows)\n        and [scheduling](#section/Scheduled-Mailings). Scheduling and\n        cancellation is a premium feature. Upgrade to the appropriate \u003ca\n        href=\"https://dashboard.lob.com/#/settings/editions\"\n        target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n      tags:\n        - Postcards\n      responses:\n        '200':\n          $ref: '#/components/responses/postcard_deleted'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X DELETE https://api.lob.com/v1/postcards/psc_5c002b86ce47537a\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deletePostcard = await new PostcardsApi(config).delete('psc_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.postcards.delete('psc_5c002b86ce47537a', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.postcards.destroy(\"psc_5c002b86ce47537a\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Postcard.delete('psc_5c002b86ce47537a')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003epostcards()-\u003edelete('psc_5c002b86ce47537a');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cPostcard\u003e deleteResponse =\n            Postcard.delete(\"psc_5c002b86ce47537a\");\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Postcard.destroy(\"psc_5c002b86ce47537a\")\n          label: ELIXIR\n  /postcards:\n    get:\n      operationId: postcards_list\n      summary: List\n      description: \u003e-\n        Returns a list of your postcards. The addresses are returned sorted by\n        creation date, with the most recently created addresses appearing first.\n      tags:\n        - Postcards\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n        - in: query\n          name: size\n          description: \u003e-\n            Specifies the size of the postcard. Only `4x6` postcards can be sent\n            to international destinations.\n          schema:\n            $ref: '#/components/schemas/postcard_size'\n        - $ref: '#/components/parameters/scheduled'\n        - $ref: '#/components/parameters/send_date'\n        - $ref: '#/components/parameters/mail_type'\n        - $ref: '#/components/parameters/sort_by'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_postcards'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/postcards?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: typescript\n          source: |\n            try {\n              const postcards = await new PostcardsApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.postcards.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.postcards.list(limit: 2)\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Postcard.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003epostcards()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, Object\u003e params = new HashMap\u003c\u003e\u003e();\n            params.put(\"limit\", 2);\n\n            LobResponse\u003cPostcardCollection\u003e response = Postcard.list(params);\n            PostcardCollection postcards = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Postcard.list(%{limit: 2})\n          label: ELIXIR\n    post:\n      operationId: postcard_create\n      summary: Create\n      description: Creates a new postcard given information\n      tags:\n        - Postcards\n      parameters:\n        - $ref: '#/components/parameters/idem-header'\n        - $ref: '#/components/parameters/idem-query'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/postcard_editable'\n            example:\n              description: demo\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              front: tmpl_a1234dddg\n              back: tmpl_a1234dddg\n              size: 6x9\n              mail_type: usps_first_class\n              merge_variables:\n                name: Harry\n              metadata:\n                spiffy: 'true'\n              send_date: 2017-11-01T00:00:00.000Z\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/postcard_editable'\n            example:\n              description: demo\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              front: tmpl_c94e83ca2cd5121\n              back: tmpl_c94e83ca2cd5121\n              size: 6x9\n              mail_type: usps_first_class\n              merge_variables:\n                name: Harry\n              metadata:\n                spiffy: 'true'\n              send_date: 2017-11-01T00:00:00.000Z\n            encoding:\n              to:\n                style: deepObject\n                explode: true\n              from:\n                style: deepObject\n                explode: true\n              merge_variables:\n                style: deepObject\n                explode: true\n              metadata:\n                style: deepObject\n                explode: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/postcard_editable'\n            example:\n              description: demo\n              to:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              from:\n                description: Harry - Office\n                name: Harry Zhang\n                company: Lob\n                email: harry@lob.com\n                phone: '5555555555'\n                address_line1: 210 King St\n                address_line2: '# 6100'\n                address_city: San Francisco\n                address_state: CA\n                address_zip: '94107'\n                address_country: US\n              front: tmpl_a1234dddg\n              back: tmpl_a1234dddg\n              size: 6x9\n              mail_type: usps_first_class\n              merge_variables:\n                name: Harry\n              metadata:\n                spiffy: 'true'\n              send_date: 2017-11-01T00:00:00.000Z\n      responses:\n        '200':\n          $ref: '#/components/responses/post_postcard'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/postcards \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d 'description=Demo Postcard job' \\\n              -d 'to[name]=Harry Zhang' \\\n              -d 'to[address_line1]=210 King St' \\\n              -d 'to[address_line2]=# 6100' \\\n              -d 'to[address_city]=San Francisco' \\\n              -d 'to[address_state]=CA' \\\n              -d 'to[address_zip]=94107' \\\n              -d 'from=adr_210a8d4b0b76d77b' \\\n              --data-urlencode 'front=\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e' \\\n              --data-urlencode 'back=\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e' \\\n              -d 'merge_variables[name]=Harry'\n          label: CURL\n        - lang: Typescript\n          source: \u003e\n            const postcardCreate = new PostcardEditable({\n\n            to: new AddressEditable({\n              name: 'Harry Zhang',\n              address_line1: '210 King St',\n              address_line2: '# 6100',\n              address_city: 'San Francisco',\n              address_state: 'CA',\n              address_zip: '94107'\n            }),\n\n            from: 'adr_xxxx',\n\n            front:\n\n            'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/4x6_pc_template.pdf',\n\n            back:\n            'https://s3-us-west-2.amazonaws.com/public.lob.com/assets/templates/4x6_pc_template.pdf'\n\n            });\n\n\n            try {\n              const myPostcard = await new PostcardsApi(config).create(postcardCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.postcards.create({\n              description: 'Demo Postcard job',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              front: '\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e',\n              back: '\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e',\n              merge_variables: {\n                name: 'Harry'\n              }\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.postcards.create(\n              description: 'Demo Postcard job',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              front: '\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e',\n              back: '\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e',\n              merge_variables: {\n                name: 'Harry'\n              }\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.Postcard.create(\n              description = 'Demo Postcard job',\n              to_address = {\n                'name': 'Harry Zhang',\n                'address_line1': '210 King St',\n                'address_line2': '# 6100',\n                'address_city': 'San Francisco',\n                'address_state': 'CA',\n                'address_zip': '94107'\n              },\n              from_address = 'adr_210a8d4b0b76d77b',\n              front = '\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e',\n              back = '\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e',\n              merge_variables = {\n                'name': 'Harry'\n              }\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003epostcards()-\u003ecreate(array(\n              'description'           =\u003e 'Demo Postcard job',\n              'to[name]'              =\u003e 'Harry Zhang',\n              'to[address_line1]'     =\u003e '210 King St',\n              'to[address_line2]'     =\u003e '# 6100',\n              'to[address_city]'      =\u003e 'San Francisco',\n              'to[address_zip]'       =\u003e '94107',\n              'to[address_state]'     =\u003e 'CA',\n              'from'                  =\u003e 'adr_210a8d4b0b76d77b',\n              'front'                 =\u003e '\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e',\n              'back'                  =\u003e '\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e',\n              'merge_variables[name]' =\u003e 'Harry'\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, String\u003e mergeVariables = new HashMap\u003c\u003e();\n            mergeVariables.put('name', 'Harry');\n\n            LobResponse\u003cPostcard\u003e response = new Postcard.RequestBuilder()\n                    .setDescription('Demo Postcard job')\n                    .setTo(\n                            new Address.RequestBuilder()\n                                    .setName('Harry Zhang')\n                                    .setLine1('210 King St')\n                                    .setLine2('# 6100')\n                                    .setCity('San Francisco')\n                                    .setState('CA')\n                                    .setZip('94107')\n                    )\n                    .setFrom('adr_210a8d4b0b76d77b')\n                    .setFront('\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e')\n                    .setBack('\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e')\n                    .setMergeVariables(mergeVariables)\n                    .create();\n\n            Postcard postcard = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.Postcard.create(%{\n              description: 'Demo Postcard job',\n              to: %{\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_line2: '# 6100',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              front: '\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eFront HTML for {{name}}\u003c/html\u003e',\n              back: '\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eBack HTML for {{name}}\u003c/html\u003e',\n              merge_variables: %{\n                name: 'Harry'\n              }\n            })\n          label: ELIXIR\n  /self_mailers/{sfm_id}:\n    parameters:\n      - in: path\n        name: sfm_id\n        description: id of the self_mailer\n        required: true\n        schema:\n          $ref: '#/components/schemas/sfm_id'\n    get:\n      operationId: self_mailer_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing self_mailer. You need only supply\n        the unique self_mailer identifier that was returned upon self_mailer\n        creation.\n      tags:\n        - Self Mailers\n      responses:\n        '200':\n          description: Returns a self_mailer object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/self_mailer'\n              example:\n                id: sfm_8ffbe811dea49dcf\n                description: April Campaign\n                metadata: {}\n                to:\n                  id: adr_bae820679f3f536b\n                  description: null\n                  name: HARRY ZHANG\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2017-09-05T17:47:53.767Z\n                  date_modified: 2017-09-05T17:47:53.767Z\n                  deleted: true\n                  object: address\n                from:\n                  id: adr_210a8d4b0b76d77b\n                  description: null\n                  name: LEORE AVIDAR\n                  company: null\n                  phone: null\n                  email: null\n                  address_line1: 210 KING ST STE 6100\n                  address_line2: null\n                  address_city: SAN FRANCISCO\n                  address_state: CA\n                  address_zip: 94107-1741\n                  address_country: UNITED STATES\n                  metadata: {}\n                  date_created: 2017-09-05T17:47:53.767Z\n                  date_modified: 2017-09-05T17:47:53.767Z\n                  deleted: true\n                  object: address\n                url: \u003e-\n                  https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf.pdf?version=v1\u0026expires=1618512040\u0026signature=qvyCqXI1ndBvc4AjvG8FlirqLXEcfmYo4sDrRtabaXMOsX88to9G3K49uIk_aqevvZXe8HoRYD_nWydbQHqaCA\n                outside_template_id: tmpl_a3cb937f26d7eec\n                inside_template_id: tmpl_a3cb937f26d7eec\n                inside_template_version_id: vrsn_bfdf70893b00a85\n                outside_template_version_id: vrsn_bfdf70893b00a85\n                carrier: USPS\n                tracking_events: []\n                thumbnails:\n                  - small: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_1.png?version=v1\u0026expires=1618512040\u0026signature=-bipeUHP-hAMcCBSrWM0ZH1VwRdSPNVGGZN9hAZKr6Lh4ly6uxvratVd5LXJCK_zOEMYk_mTWASt0ge7OY6SDA\n                    medium: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_1.png?version=v1\u0026expires=1618512040\u0026signature=ryxN7bsXGtw_GRFSP3Cs3A3IYjxZi3cW9BHDCNgMt6p3nobVmsc_iFHt2e-S7ndAXhhN7nP-MQVov3bt3r37BQ\n                    large: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_1.png?version=v1\u0026expires=1618512040\u0026signature=kBrm00xkyCkJNJRHxH8HshFaebtOxnzjVWOs1VVmGMuw8H6OBNcMAMxt9s49K0jlpHoh3Nr9uSncEZMQaaNjAg\n                  - small: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_small_2.png?version=v1\u0026expires=1618512040\u0026signature=3gTgU7Fd3KoT_vNlQnTGptRps5ZgnkhSnPrAwk7L98higIzSwfKoLvuu_DIpMM48dHbxckKT9waR8euJ4KSDBQ\n                    medium: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_medium_2.png?version=v1\u0026expires=1618512040\u0026signature=Ue1lw5CMj7KRx6cMQL8xPeazaHCdJzWcACd1w3acuYPnWkVIpSt62OIO7hAtpAQK9xm1dhhlFj0rqRZMdRMMBA\n                    large: \u003e-\n                      https://lob-assets.com/self-mailers/sfm_8ffbe811dea49dcf_thumb_large_2.png?version=v1\u0026expires=1618512040\u0026signature=cICc7HEm1xG_eyM4a_wtvPk2FqoLRmtgGa29kJisWnMIYBL0OkyzG4ZCYGMhp-5cZpJlSpXfTgGKh_Qmeo1TDw\n                merge_variables:\n                  name: null\n                size: 6x18_bifold\n                mail_type: usps_first_class\n                expected_delivery_date: 2021-03-24\n                date_created: 2021-03-16T18:40:40.504Z\n                date_modified: 2021-03-16T18:40:40.504Z\n                send_date: 2021-03-16T18:45:40.493Z\n                object: self_mailer\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X GET\n            \"https://api.lob.com/v1/self_mailers/sfm_8ffbe811dea49dcf\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: typescript\n          source: |\n            try {\n              const selfMailer = await new SelfMailersApi(config).get('sfm_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: \u003e\n            Lob.selfMailers.retrieve('sfm_8ffbe811dea49dcf', function (err, res)\n            {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.self_mailers.find(\"sfm_8ffbe811dea49dcf\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.SelfMailer.retrieve('sfm_8ffbe811dea49dcf')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eselfMailers()-\u003eget('sfm_8ffbe811dea49dcf');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cSelfMailer\u003e response =\n            SelfMailer.retrieve(\"sfm_8ffbe811dea49dcf\");\n\n            SelfMailer selfMailer = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.SelfMailer.find(\"sfm_8ffbe811dea49dcf\")\n          label: ELIXIR\n    delete:\n      operationId: self_mailer_delete\n      summary: Delete\n      description: \u003e-\n        Completely removes a self mailer from production. This can only be done\n        if the self mailer's `send_date` has not yet passed. If the self mailer\n        is successfully canceled, you will not be charged for it. This feature\n        is exclusive to certain customers. Upgrade to the appropriate \u003ca\n        href=\"https://dashboard.lob.com/#/settings/editions\"\n        target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e to gain access.\n      tags:\n        - Self Mailers\n      responses:\n        '200':\n          $ref: '#/components/responses/self_mailer_deleted'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X DELETE\n            https://api.lob.com/v1/self_mailers/sfm_8ffbe811dea49dcf \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: typescript\n          source: |\n            try {\n              const deleteSelfMailer = await new SelfMailersApi(config).delete('sfm_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.selfMailers.delete('sfm_8ffbe811dea49dcf', function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.self_mailers.destroy(\"sfm_8ffbe811dea49dcf\")\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.SelfMailer.delete('sfm_8ffbe811dea49dcf')\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eselfMailers()-\u003edelete('sfm_8ffbe811dea49dcf');\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cSelfMailer\u003e deleteResponse =\n            SelfMailer.delete(\"sfm_8ffbe811dea49dcf\");\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.SelfMailer.destroy(\"sfm_8ffbe811dea49dcf\")\n          label: ELIXIR\n  /self_mailers:\n    get:\n      operationId: self_mailers_list\n      summary: List\n      description: \u003e-\n        Returns a list of your self_mailers. The self_mailers are returned\n        sorted by creation date, with the most recently created self_mailers\n        appearing first.\n      tags:\n        - Self Mailers\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n        - in: query\n          name: size\n          description: The self mailer sizes to be returned.\n          schema:\n            $ref: '#/components/schemas/self_mailer_size'\n        - $ref: '#/components/parameters/scheduled'\n        - $ref: '#/components/parameters/send_date'\n        - $ref: '#/components/parameters/mail_type'\n        - $ref: '#/components/parameters/sort_by'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_self_mailers'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/self_mailers?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: typescript\n          source: |\n            try {\n              const selfMailers = await new selfMailersApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.selfMailers.list({limit: 2}, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.self_mailers.list(limit: 2)\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.SelfMailer.list(limit=2)\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eselfMailers()-\u003eall(array(\n              'limit' =\u003e 2\n            ));\n        - lang: Java\n          source: \u003e\n            Map\u003cString, Object\u003e params = new HashMap\u003c\u003e\u003e();\n\n            params.put('limit', 2);\n\n\n            LobResponse\u003cSelfMailerCollection\u003e response =\n            SelfMailer.list(params);\n\n            SelfMailerCollection selfMailers = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.SelfMailer.list(%{limit: 2})\n          label: ELIXIR\n    post:\n      operationId: self_mailer_create\n      summary: Create\n      description: Creates a new self_mailer given information\n      tags:\n        - Self Mailers\n      parameters:\n        - $ref: '#/components/parameters/idem-header'\n        - $ref: '#/components/parameters/idem-query'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/self_mailer_editable'\n            example:\n              description: Demo Self Mailer job\n              to: adr_bae820679f3f536b\n              from: adr_210a8d4b0b76d77b\n              inside: https://lob.com/selfmailerinside.pdf\n              outside: https://lob.com/selfmaileroutside.pdf\n              size: 12x9_bifold\n              metadata:\n                spiffy: 'true'\n              mail_type: usps_standard\n              merge_variables:\n                name: Harry\n              send_date: 2017-11-01T00:00:00.000Z\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/self_mailer_editable'\n            example:\n              description: Demo Self Mailer job\n              to: adr_bae820679f3f536b\n              from: adr_210a8d4b0b76d77b\n              inside: https://lob.com/selfmailerinside.pdf\n              outside: https://lob.com/selfmaileroutside.pdf\n              size: 12x9_bifold\n              metadata:\n                spiffy: 'true'\n              mail_type: usps_standard\n              merge_variables:\n                name: Harry\n              send_date: 2017-11-01T00:00:00.000Z\n            encoding:\n              merge_variables:\n                style: deepObject\n                explode: true\n              metadata:\n                style: deepObject\n                explode: true\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/self_mailer_editable'\n            example:\n              description: Demo Self Mailer job\n              to: adr_bae820679f3f536b\n              from: adr_210a8d4b0b76d77b\n              inside: https://lob.com/selfmailerinside.pdf\n              outside: https://lob.com/selfmaileroutside.pdf\n              size: 12x9_bifold\n              metadata:\n                spiffy: 'true'\n              mail_type: usps_standard\n              merge_variables:\n                name: Harry\n              send_date: 2017-11-01T00:00:00.000Z\n      responses:\n        '200':\n          $ref: '#/components/responses/post_self_mailer'\n        default:\n          $ref: '#/components/responses/mailpiece_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/self_mailers \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Demo Self Mailer job\" \\\n              -d \"to[name]=Harry Zhang\" \\\n              -d \"to[address_line1]=210 King St\" \\\n              -d \"to[address_city]=San Francisco\" \\\n              -d \"to[address_state]=CA\" \\\n              -d \"to[address_zip]=94107\" \\\n              -d \"from=adr_210a8d4b0b76d77b\" \\\n              --data-urlencode \"inside=\u003chtml style='padding: 1in; font-size: 50;'\u003eInside HTML for {{name}}\u003c/html\u003e\" \\\n              --data-urlencode \"outside=\u003chtml style='padding: 1in; font-size: 20;'\u003eOutside HTML for {{name}}\u003c/html\u003e\" \\\n              -d \"merge_variables[name]=Harry\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const selfMailerCreate = new SelfMailerEditable({\n              to: {\n              name: 'Harry Zhang',\n              address_line1: '210 King St',\n              address_line2: '# 6100',\n              address_city: 'San Francisco',\n              address_state: 'CA',\n              address_zip: '94107',\n            },\n              from: 'adr_xxxx',\n              inside:\n              'https://s3.us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_inside.pdf',\n              outside:\n              'https://s3.us-west-2.amazonaws.com/public.lob.com/assets/templates/self_mailers/6x18_sfm_outside.pdf'\n            });\n\n            try {\n              const mySelfMailer = await new SelfMailersApi(config).create(selfMailerCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.selfMailers.create({\n              description: 'Demo Self Mailer job',\n              to: {\n                name: 'Harry Zhang',\n                address_line1: '210 King St',\n                address_city: 'San Francisco',\n                address_state: 'CA',\n                address_zip: '94107'\n              },\n              from: 'adr_210a8d4b0b76d77b',\n              inside: '\u003chtml style=\"padding: 1in; font-size: 50;\"\u003eInside HTML for {{name}}\u003c/html\u003e',\n              outside: '\u003chtml style=\"padding: 1in; font-size: 20;\"\u003eOutside HTML for {{name}}\u003c/html\u003e',\n              merge_variables: {\n                name: 'Harry'\n              }\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.self_mailers.create(\n               description: \"Demo Self Mailers job\",\n               to: {\n                 name: \"Harry Zhang\",\n                 address_line1: \"210 King St\",\n                 address_city: \"San Francisco\",\n                 address_state: \"CA\",\n                 address_zip: \"94107\"\n               },\n               from: \"adr_210a8d4b0b76d77b\",\n               inside: \"\u003chtml style='padding: 1in; font-size: 50;'\u003eInside HTML for {{name}}\u003c/html\u003e\",\n               outside: \"\u003chtml style='padding: 1in; font-size: 20;'\u003eOutside HTML for {{name}}\u003c/html\u003e\",\n               merge_variables: {\n                 name: \"Harry\"\n               }\n             )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.SelfMailer.create(\n              description = 'Demo Self Mailer job',\n              to_address = {\n                'name': 'Harry Zhang',\n                'address_line1': '210 King St',\n                'address_city': 'San Francisco',\n                'address_state': 'CA',\n                'address_zip': '94107'\n              },\n              from_address = 'adr_210a8d4b0b76d77b',\n              inside = '\u003chtml style='padding: 1in; font-size: 50;'\u003eInside HTML for {{name}}\u003c/html\u003e',\n              outside = '\u003chtml style='padding: 1in; font-size: 20;'\u003eOutside HTML for {{name}}\u003c/html\u003e',\n              merge_variables = {\n                'name': 'Harry'\n              }\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eselfMailers()-\u003ecreate(array(\n              'description'           =\u003e 'Demo Self Mailer job',\n              'to[name]'              =\u003e 'Harry Zhang',\n              'to[address_line1]'     =\u003e '210 King St',\n              'to[address_city]'     =\u003e 'San Francisco',\n              'to[address_zip]'       =\u003e '94107',\n              'to[address_state]'     =\u003e 'CA',\n              'from'                  =\u003e 'adr_210a8d4b0b76d77b',\n              'inside'                =\u003e '\u003chtml style='padding: 1in; font-size: 50;'\u003eInside HTML for {{name}}\u003c/html\u003e',\n              'outside'               =\u003e '\u003chtml style='padding: 1in; font-size: 20;'\u003eOutside HTML for {{name}}\u003c/html\u003e',\n              'merge_variables[name]' =\u003e 'Harry'\n            ));\n        - lang: Java\n          source: |\n            Map\u003cString, String\u003e mergeVariables = new HashMap\u003c\u003e();\n            mergeVariables.put(\"name\", \"Harry\");\n\n            LobResponse\u003cSelfMailer\u003e response = new SelfMailer.RequestBuilder()\n                    .setDescription(\"Demo Self Mailer job\")\n                    .setTo(\n                            new Address.RequestBuilder()\n                                    .setName(\"Harry Zhang\")\n                                    .setLine1(\"210 King St\")\n                                    .setCity(\"San Francisco\")\n                                    .setState(\"CA\")\n                                    .setZip(\"94107\")\n                    )\n                    .setFrom(\"adr_210a8d4b0b76d77b\")\n                    .setInside(\"\u003chtml style='padding: 1in; font-size: 50;'\u003eInside HTML for {{name}}\u003c/html\u003e\")\n                    .setOutside(\"\u003chtml style='padding: 1in; font-size: 20;'\u003eOutside HTML for {{name}}\u003c/html\u003e\")\n                    .setMergeVariables(mergeVariables)\n                    .create();\n\n            SelfMailer selfMailer = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.SelfMailer.create(%{\n              description: \"Demo Self Mailer job\",\n              to: %{\n                name: \"Harry Zhang\",\n                address_line1: \"210 King St\",\n                address_city: \"San Francisco\",\n                address_state: \"CA\",\n                address_zip: \"94107\"\n              },\n              from: \"adr_210a8d4b0b76d77b\",\n              inside: \"\u003chtml style='padding: 1in; font-size: 50;'\u003eInside HTML for {{name}}\u003c/html\u003e\",\n              outside: \"\u003chtml style='padding: 1in; font-size: 20;'\u003eOutside HTML for {{name}}\u003c/html\u003e\",\n              merge_variables: %{\n                name: \"Harry\"\n              }\n            })\n          label: ELIXIR\n  /templates/{tmpl_id}/versions/{vrsn_id}:\n    parameters:\n      - in: path\n        name: tmpl_id\n        description: The ID of the template to which the version belongs.\n        required: true\n        schema:\n          $ref: '#/components/schemas/tmpl_id'\n      - in: path\n        name: vrsn_id\n        description: id of the template_version\n        required: true\n        schema:\n          $ref: '#/components/schemas/vrsn_id'\n    get:\n      operationId: template_version_retrieve\n      summary: Retrieve\n      description: Retrieves the template version with the given template and version ids.\n      tags:\n        - Template Versions\n      responses:\n        '200':\n          description: \u003e-\n            Returns the template version with the given template and version\n            ids.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/template_version'\n              example:\n                id: vrsn_534e339882d2282\n                description: Second Version\n                html: \u003chtml\u003eSecond HTML for {{name}}\u003c/html\u003e\n                date_created: 2017-11-09T04:49:38.016Z\n                date_modified: 2017-11-09T04:49:38.016Z\n                object: version\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl\n            https://api.lob.com/v1/templates/tmpl_c94e83ca2cd5121/versions/vrsn_534e339882d2282\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const templateVersion = await new TemplateVersionsApi(config).get('tmpl_xxxx', 'vrsn_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n    post:\n      operationId: template_version_update\n      summary: Update\n      description: Updates the template version with the given template and version ids.\n      tags:\n        - Template Versions\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/template_version_updatable'\n            example:\n              description: Some description\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/template_version_updatable'\n            example:\n              description: Some description\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/template_version_updatable'\n            example:\n              description: Some description\n      responses:\n        '200':\n          $ref: '#/components/responses/post_template_version'\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl\n            https://api.lob.com/v1/templates/tmpl_c94e83ca2cd5121/versions/vrsn_534e339882d2282\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Updated description\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const TemplateVersions = new TemplateVersionsApi(config);\n\n            try {\n              const updateData = new TemplateVersionUpdatable({\n                description: 'updated template'\n              });\n              const updateTemplateVersion = await TemplateVersions.update('vrsn_xxxx', updateData);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n    delete:\n      operationId: template_version_delete\n      summary: Delete\n      description: \u003e-\n        Permanently deletes a template version. A template's `published_version`\n        can not be deleted.\n      tags:\n        - Template Versions\n      responses:\n        '200':\n          $ref: '#/components/responses/template_version_deleted'\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X DELETE\n            https://api.lob.com/v1/templates/tmpl_4aa14648113e45b/versions/vrsn_534e339882d2282\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteTemplateVersion = await new TemplateVersionsApi(config).delete(\"tmpl_xxxx\",\"vrsn_xxxx\");\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n  /templates/{tmpl_id}/versions:\n    get:\n      operationId: template_versions_list\n      summary: List\n      description: \u003e\n        Returns a list of template versions for the given template ID. The\n        template versions are sorted by creation date, with the most recently\n        created appearing first.\n      tags:\n        - Template Versions\n      parameters:\n        - in: path\n          name: tmpl_id\n          description: The ID of the template associated with the retrieved versions\n          required: true\n          schema:\n            $ref: '#/components/schemas/tmpl_id'\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_template_versions'\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X GET\n            \"https://api.lob.com/v1/templates/tmpl_ea6e6a1abf01703/versions?limit=2\"\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const templateVersions = await new TemplateVersionsApi(config).list(tmpl_xxxx);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n    post:\n      operationId: create_template_version\n      summary: Create\n      description: Creates a new template version attached to the specified template.\n      tags:\n        - Template Versions\n      parameters:\n        - in: path\n          name: tmpl_id\n          description: The ID of the template the new version will be attached to\n          required: true\n          schema:\n            $ref: '#/components/schemas/tmpl_id'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/template_version_writable'\n            example:\n              description: Some Description\n              html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/template_version_writable'\n            example:\n              description: Some Description\n              html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/template_version_writable'\n            example:\n              description: Some Description\n              html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n      responses:\n        '200':\n          $ref: '#/components/responses/post_template_version'\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl https://api.lob.com/v1/templates/tmpl_4aa14648113e45b/versions\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Second Version\" \\\n              --data-urlencode \"html=\u003chtml\u003eSecond HTML for {{name}}\u003c/html\u003e\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const templateVersionCreate = new TemplateVersionWritable({\n              description: 'Newer Template',\n              html: '\u003chtml\u003eUpdated HTML for {{name}}\u003c/html\u003e'\n            });\n\n            try {\n              const myTemplateVersion = await new TemplateVersionsApi(config).create('tmpl_xxxx', templateVersionCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n  /templates/{tmpl_id}:\n    parameters:\n      - in: path\n        name: tmpl_id\n        description: id of the template\n        required: true\n        schema:\n          $ref: '#/components/schemas/tmpl_id'\n    get:\n      operationId: template_retrieve\n      summary: Retrieve\n      description: \u003e-\n        Retrieves the details of an existing template. You need only supply the\n        unique template identifier that was returned upon template creation.\n      tags:\n        - Templates\n      responses:\n        '200':\n          description: Returns a template object\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/template'\n              example:\n                id: tmpl_c94e83ca2cd5121\n                description: Test Template\n                versions:\n                  - id: vrsn_362184d96d9b0c9\n                    suggest_json_editor: true\n                    description: Test Template\n                    engine: legacy\n                    html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n                    date_created: 2017-11-07T22:56:10.962Z\n                    date_modified: 2017-11-07T22:56:10.962Z\n                    object: version\n                published_version:\n                  id: vrsn_362184d96d9b0c9\n                  suggest_json_editor: false\n                  description: Test Template\n                  engine: handlebars\n                  html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n                  date_created: 2017-11-07T22:56:10.962Z\n                  date_modified: 2017-11-07T22:56:10.962Z\n                  object: version\n                metadata: {}\n                date_created: 2017-11-07T22:56:10.962Z\n                date_modified: 2017-11-07T22:56:10.962Z\n                object: template\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/templates/tmpl_c94e83ca2cd5121 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const Template = await new TemplatesApi(config).get('tmpl_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n    post:\n      operationId: template_update\n      summary: Update\n      description: \u003e-\n        Updates the description and/or published version of the template with\n        the given id. To update the template's html, create a new version of the\n        template.\n      tags:\n        - Templates\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/template_update'\n            example:\n              description: Updated Example\n              published_version: vrsn_a\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/template_update'\n            example:\n              description: Updated Example\n              published_version: vrsn_a\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/template_update'\n            example:\n              description: Updated Example\n              published_version: vrsn_a\n      responses:\n        '200':\n          description: Returns the updated template object\n          headers:\n            ratelimit-limit:\n              $ref: '#/components/headers/ratelimit-limit'\n            ratelimit-remaining:\n              $ref: '#/components/headers/ratelimit-remaining'\n            ratelimit-reset:\n              $ref: '#/components/headers/ratelimit-reset'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/template'\n              example:\n                id: tmpl_c94e83ca2cd5121\n                description: Test Template\n                versions:\n                  - id: vrsn_362184d96d9b0c9\n                    suggest_json_editor: true\n                    description: Test Template\n                    engine: legacy\n                    html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n                    date_created: 2017-11-07T22:56:10.962Z\n                    date_modified: 2017-11-07T22:56:10.962Z\n                    object: version\n                published_version:\n                  id: vrsn_362184d96d9b0c9\n                  suggest_json_editor: false\n                  description: Test Template\n                  engine: handlebars\n                  html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n                  date_created: 2017-11-07T22:56:10.962Z\n                  date_modified: 2017-11-07T22:56:10.962Z\n                  object: version\n                metadata: {}\n                date_created: 2017-11-07T22:56:10.962Z\n                date_modified: 2017-11-07T22:56:10.962Z\n                object: template\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/templates/tmpl_c94e83ca2cd5121 \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Updated description\" \\\n              -d \"published_version=vrsn_362184d96d9b0c9\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const Templates = new TemplatesApi(config);\n\n            try {\n              const updateData = new TemplateUpdate ({\n                description: 'updated template',\n                published_version: 'vrsn_xxxx'\n            });\n              const updateTemplate = await Templates.update('tmpl_xxxx', updateData);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n    delete:\n      operationId: template_delete\n      summary: Delete\n      description: \u003e-\n        Permanently deletes a template. Deleting a template also deletes its\n        associated versions. Deleted templates can not be used to create\n        postcard, letter, or check resources.\n      tags:\n        - Templates\n      responses:\n        '200':\n          $ref: '#/components/responses/template_deleted'\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: \u003e\n            curl -X DELETE https://api.lob.com/v1/templates/tmpl_df934eeda694203\n            \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const deleteTemplate = await new TemplatesApi(config).delete('tmpl_xxxx');\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n  /templates:\n    get:\n      operationId: templates_list\n      summary: List\n      description: \u003e-\n        Returns a list of your templates. The templates are returned sorted by\n        creation date, with the most recently created templates appearing first.\n      tags:\n        - Templates\n      parameters:\n        - $ref: '#/components/parameters/limit'\n        - $ref: '#/components/parameters/before_after'\n        - $ref: '#/components/parameters/include'\n        - $ref: '#/components/parameters/date_created'\n        - $ref: '#/components/parameters/metadata'\n      responses:\n        '200':\n          $ref: '#/components/responses/all_templates'\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl -X GET \"https://api.lob.com/v1/templates?limit=2\" \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc:\n          label: CURL\n        - lang: Typescript\n          source: |\n            try {\n              const templates = await new TemplatesApi(config).list(2);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n    post:\n      operationId: create_template\n      summary: Create\n      description: \u003e-\n        Creates a new template for use with the Print \u0026 Mail API. In Live mode,\n        you can only have as many non-deleted templates as allotted in your\n        current \u003ca href=\"https://dashboard.lob.com/#/settings/editions\"\n        target=\"_blank\"\u003ePrint \u0026 Mail Edition\u003c/a\u003e. If you attempt to create a\n        template past your limit, you will receive a `403` error. There is no\n        limit in Test mode.\n      tags:\n        - Templates\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/template_writable'\n            example:\n              description: demo\n              html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n              metadata:\n                spiffy: 'true'\n              engine: handlebars\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/template_writable'\n            example:\n              description: demo\n              html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n              metadata:\n                spiffy: 'true'\n              engine: handlebars\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/template_writable'\n            example:\n              description: demo\n              html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n              metadata:\n                spiffy: 'true'\n              engine: handlebars\n      responses:\n        '200':\n          description: Returns a template object\n          headers:\n            ratelimit-limit:\n              $ref: '#/components/headers/ratelimit-limit'\n            ratelimit-remaining:\n              $ref: '#/components/headers/ratelimit-remaining'\n            ratelimit-reset:\n              $ref: '#/components/headers/ratelimit-reset'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/template'\n              example:\n                id: tmpl_c94e83ca2cd5121\n                description: Test Template\n                versions:\n                  - id: vrsn_362184d96d9b0c9\n                    suggest_json_editor: true\n                    description: Test Template\n                    engine: legacy\n                    html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n                    date_created: 2017-11-07T22:56:10.962Z\n                    date_modified: 2017-11-07T22:56:10.962Z\n                    object: version\n                published_version:\n                  id: vrsn_362184d96d9b0c9\n                  suggest_json_editor: false\n                  description: Test Template\n                  engine: handlebars\n                  html: \u003chtml\u003eHTML for {{name}}\u003c/html\u003e\n                  date_created: 2017-11-07T22:56:10.962Z\n                  date_modified: 2017-11-07T22:56:10.962Z\n                  object: version\n                metadata: {}\n                date_created: 2017-11-07T22:56:10.962Z\n                date_modified: 2017-11-07T22:56:10.962Z\n                object: template\n        default:\n          $ref: '#/components/responses/template_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/templates \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"description=Test Template\" \\\n              --data-urlencode \"html=\u003chtml\u003eHTML for {{name}}\u003c/html\u003e\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const templateCreate = new TemplateWritable({\n              description: 'Newer Template',\n              html: '\u003chtml\u003eUpdated HTML for {{name}}\u003c/html\u003e'\n            });\n\n            try {\n              const myTemplate = await new TemplatesApi(config).create(templateCreate);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            This feature is not currently supported by this library.\n          label: NODE\n        - lang: Ruby\n          source: |\n            This feature is not currently supported by this library.\n          label: RUBY\n        - lang: Python\n          source: |\n            This feature is not currently supported by this library.\n          label: PYTHON\n        - lang: PHP\n          source: |\n            This feature is not currently supported by this library.\n        - lang: Java\n          source: |\n            This feature is not currently supported by this library.\n          label: JAVA\n        - lang: Elixir\n          source: |\n            This feature is not currently supported by this library.\n          label: ELIXIR\n  /us_autocompletions:\n    post:\n      operationId: autocompletion\n      summary: Autocomplete\n      description: \u003e-\n        Given an address prefix consisting of a partial primary line, as well as\n        optional input of city, state, and zip code, this functionality returns\n        up to 10 full US address suggestions. Not all of them will turn out to\n        be valid addresses; they'll need to be\n        [verified](#operation/verification_us).\n      tags:\n        - US Autocompletions\n      parameters:\n        - in: query\n          name: case\n          schema:\n            type: string\n            enum:\n              - upper\n              - proper\n            default: upper\n          description: \u003e-\n            Casing of the verified address. Possible values are `upper` and\n            `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO\n            Box\"), respectively. Only affects `primary_line`,  `city`, and\n            `state`. Default casing is `upper`.\n          required: false\n        - in: query\n          name: valid_addresses\n          schema:\n            type: boolean\n            enum:\n              - true\n              - false\n            default: false\n          description: \u003e-\n            Possible values are `true` and `false`. If false, not all of the\n            suggestions in the response will be valid addresses; they'll need to\n            be verified in order to determine the deliverability.  The\n            valid_addresses flag will greatly reduce the number of keystrokes\n            needed before reaching an intended address.\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/us_autocompletions_writable'\n            examples:\n              basic:\n                value:\n                  address_prefix: 185 B\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n                  geo_ip_sort: false\n              test:\n                value:\n                  address_prefix: 1 sugg\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/us_autocompletions_writable'\n            examples:\n              basic:\n                value:\n                  address_prefix: 185 B\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n                  geo_ip_sort: false\n              test:\n                value:\n                  address_prefix: 1 sugg\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/us_autocompletions_writable'\n            examples:\n              basic:\n                value:\n                  address_prefix: 185 B\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n                  geo_ip_sort: false\n              test:\n                value:\n                  address_prefix: 1 sugg\n      responses:\n        '200':\n          $ref: '#/components/responses/us_autocompletions'\n        default:\n          $ref: '#/components/responses/us_autocompletions_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/us_autocompletions \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              -d \"address_prefix=185 B\" \\\n              -d \"city=San Francisco\" \\\n              -d \"state=CA\"\n              -d \"zip_code=94107\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const UsAutocompletions = new USAutocompletionsApi(av_config);\n            const autocompletionData: UsAutocompletionsWritable = {\n              address_prefix: '185 B',\n              city: 'SAN FRANCISCO'\n            };\n\n            try {\n              const autocompletedAddresses = await UsAutocompletions.autocomplete(autocompletionData);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.usAutocompletions.autocomplete({\n              address_prefix: '185 B',\n              city: 'San Francisco',\n              state: 'CA',\n              zip_code: '94107',\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.us_autocompletions.autocomplete(\n              address_prefix: \"185 B\",\n              city:           \"San Francisco\",\n              state:          \"CA\",\n              zip_code:       \"94107\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.USAutocompletion.create(\n              address_prefix='185 B',\n              city='San Francisco',\n              state='CA',\n              zip_code='94107'\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eusAutocompletions()-\u003eautocomplete(array(\n              'address_prefix' =\u003e '185 B',\n              'city'           =\u003e 'San Francisco',\n              'state'          =\u003e 'CA',\n              'zip_code'       =\u003e '94107'\n            ));\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cUSAutocompletion\u003e response = new\n            USAutocompletion.RequestBuilder()\n                .setAddressPrefix(\"185 B\")\n                .setCity(\"San Francisco\")\n                .setState(\"CA\")\n                .setZipCode(\"94107\")\n                .autocomplete();\n\n            USAutocompletion usAutocompletion = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.USAutocompletion.autocomplete(%{\n              address_prefix: \"185 B\",\n              city:           \"San Francisco\",\n              state:          \"CA\",\n              zip_code:       \"94107\"\n            })\n          label: ELIXIR\n  /us_reverse_geocode_lookups:\n    post:\n      operationId: reverse_geocode_lookup\n      summary: Reverse Geocode Lookup\n      description: Reverse geocode a valid US location with a live API key.\n      tags:\n        - Reverse Geocode Lookups\n      parameters:\n        - in: query\n          name: size\n          schema:\n            type: integer\n            minimum: 1\n            default: 5\n            maximum: 50\n            example: 5\n          description: \u003e-\n            Determines the number of locations returned. Possible values are\n            between 1 and 50 and any number higher will be rounded down to 50.\n            Default size is a list of 5 reverse geocoded locations.\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/location'\n            example:\n              latitude: 37.7749\n              longitude: 122.4194\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/location'\n            example:\n              latitude: 37.7749\n              longitude: 122.4194\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/location'\n            example:\n              latitude: 37.7749\n              longitude: 122.4194\n      responses:\n        '200':\n          $ref: '#/components/responses/reverse_geocode_lookups'\n        default:\n          $ref: '#/components/responses/reverse_geocode_lookups_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/us_reverse_geocode_lookups \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              -d \"latitude=37.7749\" \\\n              -d \"longitude=122.4194\" \\\n          label: CURL\n        - lang: Typescript\n          source: \u003e\n            const ReverseGeocodeLookup = new\n            ReverseGeocodeLookupsApi(av_config);\n\n            const coordinates: Location = {\n              Latitude: 37.777456,\n              longitude: -122.393039\n            };\n\n            try {\n              const geocode = await ReverseGeocodeLookup.lookup(coordinates);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.reverseGeocodeLookups.lookup({\n              latitude: 37.7749,\n              longitude: 122.4194\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.reverse_geocode_lookups.lookup(\n              latitude: 37.7749,\n              longitude: 122.4194\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.ReverseGeocodeLookups.create(\n              latitude= 37.7749,\n              longitude= 122.4194\n            )\n          label: Python\n        - lang: PHP\n          source: |\n            $lob-\u003ereverseGeocodeLookups()-\u003elookup(array(\n              'latitude' =\u003e 37.7749,\n              'longitude' =\u003e 122.4194\n\n            ));\n          label: PHP\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cReverseGeocodeLookup\u003e response = new\n            ReverseGeocodeLookup.RequestBuilder()\n                    .setLatitude(37.7749)\n                    .setLongitude(122.4194)\n                    .lookup();\n\n            ReverseGeocodeLookup reverseGeocodeLookup =\n            response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.ReverseGeocodeLookup.lookup(%{\n              latitude: 37.7749,\n              longitude: 122.4194\n            })\n          label: ELIXIR\n  /us_verifications:\n    post:\n      operationId: us_verification\n      summary: Single Verify\n      description: \u003e-\n        Verify a US or US territory address _with a live API key_. The address\n        can be in components (e.g. `primary_line` is \"210 King Street\",\n        `zip_code` is \"94107\") or as a single string (e.g. \"210 King Street\n        94107\"), but not as both. Requests using a test API key validate\n        required fields but return empty values unless specific `primary_line`\n        values are provided. See the [US Verifications Test\n        Environment](#section/US-Verifications-Test-Env) for details.\n      tags:\n        - US Verifications\n      parameters:\n        - in: query\n          name: case\n          schema:\n            type: string\n            enum:\n              - upper\n              - proper\n            default: upper\n          description: \u003e-\n            Casing of the verified address. Possible values are `upper` and\n            `proper` for uppercased (e.g. \"PO BOX\") and proper-cased (e.g. \"PO\n            Box\"), respectively. Only affects `recipient`, `primary_line`,\n            `secondary_line`, `urbanization`, and `last_line`. Default casing is\n            `upper`.\n          required: false\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/us_verifications_writable'\n            examples:\n              basic:\n                value:\n                  primary_line: 210 King Street\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n              full_payload:\n                value:\n                  recipient: Walgreens\n                  primary_line: Ave Wilson Churchill 123\n                  secondary_line: ''\n                  urbanization: URB FAIR OAKS\n                  city: RIO PIEDRAS\n                  state: PR\n                  zip_code: '00926'\n              single_line:\n                value:\n                  address: 210 King Street 94107\n              test:\n                value:\n                  primary_line: po box\n                  zip_code: '11111'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/us_verifications_writable'\n            examples:\n              basic:\n                value:\n                  primary_line: 210 King Street\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n              full_payload:\n                value:\n                  recipient: Walgreens\n                  primary_line: Ave Wilson Churchill 123\n                  secondary_line: ''\n                  urbanization: URB FAIR OAKS\n                  city: RIO PIEDRAS\n                  state: PR\n                  zip_code: '00926'\n              single_line:\n                value:\n                  address: 210 King Street 94107\n              test:\n                value:\n                  primary_line: po box\n                  zip_code: '11111'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/us_verifications_writable'\n            examples:\n              basic:\n                value:\n                  primary_line: 210 King Street\n                  city: San Francisco\n                  state: CA\n                  zip_code: '94107'\n              full_payload:\n                value:\n                  recipient: Walgreens\n                  primary_line: Ave Wilson Churchill 123\n                  secondary_line: ''\n                  urbanization: URB FAIR OAKS\n                  city: RIO PIEDRAS\n                  state: PR\n                  zip_code: '00926'\n              single_line:\n                value:\n                  address: 210 King Street 94107\n              test:\n                value:\n                  primary_line: po box\n                  zip_code: '11111'\n      responses:\n        '200':\n          $ref: '#/components/responses/us_verifications'\n        default:\n          $ref: '#/components/responses/us_verifications_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/us_verifications \\\n              -u \u003cYOUR_LIVE_API_KEY\u003e: \\\n              -d \"primary_line=210 King Street\" \\\n              -d \"city=San Francisco\" \\\n              -d \"state=CA\" \\\n              -d \"zip_code=94107\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const UsVerification = new USVerificationsApi(av_config);\n            const verificationData1: UsVerificationsWritable = {\n              primary_line: '210 King Street',\n              city: 'San Francisco',\n              state: 'CA',\n              zip_code: '94107'\n            };\n\n            try {\n              const singleVerified = await UsVerification.verifySingle(verificationData1);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.usVerifications.verify({\n              primary_line: '210 King Street',\n              city: 'San Francisco',\n              state: 'CA',\n              zip_code: '94107'\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.us_verifications.verify(\n              primary_line: \"210 King Street\",\n              city:         \"San Francisco\",\n              state:        \"CA\",\n              zip_code:     \"94107\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.USVerification.create(\n              primary_line='210 King Street',\n              city='San Francisco',\n              state='CA',\n              zip_code='94107'\n            )\n          label: PYTHON\n        - lang: PHP\n          source: |\n            $lob-\u003eusVerifications()-\u003everify(array(\n              'primary_line' =\u003e '210 King Street',\n              'city'         =\u003e 'San Francisco',\n              'state'        =\u003e 'CA',\n              'zip_code'     =\u003e '94107'\n            ));\n        - lang: Java\n          source: \u003e\n            LobResponse\u003cUSVerification\u003e response = new\n            USVerification.RequestBuilder()\n                    .setRecipient(\"Donald\")\n                    .setPrimaryLine(\"210 King St\")\n                    .setSecondaryLine(\"Ste 6100\")\n                    .setCity(\"San Francisco\")\n                    .setState(\"CA\")\n                    .setZipCode(\"94107\")\n                    .verify();\n\n            USVerification usVerification = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.USVerification.verify(%{\n              primary_line: \"210 King Street\",\n              city: \"San Francisco\",\n              state: \"CA\",\n              zip_code: \"94107\"\n            })\n          label: ELIXIR\n  /us_zip_lookups:\n    post:\n      operationId: zip_lookup\n      summary: Lookups\n      description: Returns information about a ZIP code\n      tags:\n        - Zip Lookups\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/zip5'\n            example:\n              zip_code: '94107'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/zip5'\n            example:\n              zip_code: '94107'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/zip5'\n            example:\n              zip_code: '94107'\n      responses:\n        '200':\n          $ref: '#/components/responses/zip_lookups'\n        default:\n          $ref: '#/components/responses/zip_lookups_error'\n      x-codeSamples:\n        - lang: Shell\n          source: |\n            curl https://api.lob.com/v1/us_zip_lookups \\\n              -u test_0dc8d51e0acffcb1880e0f19c79b2f5b0cc: \\\n              -d \"zip_code=94107\"\n          label: CURL\n        - lang: Typescript\n          source: |\n            const ZipLookup = new ZipLookupsApi(av_config);\n            const zipRequest : ZipEditable = {\n              zip_code: '07090'\n            }\n            try {\n              const zipLookup : Zip = await ZipLookup.lookup(zipRequest);\n            } catch (err: any) {\n              console.error(err);\n            }\n          label: TYPESCRIPT\n        - lang: Javascript\n          source: |\n            Lob.usZipLookups.lookup({\n              zip_code: '94107'\n            }, function (err, res) {\n              console.log(err, res);\n            });\n          label: NODE\n        - lang: Ruby\n          source: |\n            @lob.us_zip_lookups.lookup(\n              zip_code: \"94107\"\n            )\n          label: RUBY\n        - lang: Python\n          source: |\n            lob.USZipLookup.create(\n              zip_code='94107'\n            )\n          label: Python\n        - lang: PHP\n          source: |\n            $lob-\u003eusZipLookups()-\u003elookup(array(\n              'zip_code' =\u003e '94107'\n            ));\n          label: PHP\n        - lang: Java\n          source: |\n            LobResponse\u003cUSZipLookup\u003e response = new USZipLookup.RequestBuilder()\n                    .setZipCode(\"94107\")\n                    .lookup();\n\n            USZipLookup usZipLookup = response.getResponseBody();\n          label: JAVA\n        - lang: Elixir\n          source: |\n            Lob.USZipLookup.lookup(%{\n              zip_code: \"94107\"\n            })\n          label: ELIXIR\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"letter\": parse schema: oneOf: [0]: parse schema: resolve \"#/components/schemas/certified\": parse schema: allOf: [1]: parse schema: resolve \"#/components/schemas/letter_base\": parse schema: allOf: [1]: parse schema: property \"return_envelope\": parse default: unexpected type: \"\""
}