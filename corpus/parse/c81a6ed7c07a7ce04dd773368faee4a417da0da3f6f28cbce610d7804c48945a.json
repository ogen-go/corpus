{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/OpenBanking-Brasil/areadesenvolvedor"
		},
		"file": {
			"name": "swagger_payments_apis.yaml",
			"size": 0,
			"path": "documentation/source/swagger/swagger_payments_apis.yaml",
			"byteSize": 93129,
			"content": "﻿openapi: 3.0.0\ninfo:\n  title: API Payment Initiation - Open Banking Brasil\n  description: |\n    API de Iniciação de Pagamentos, responsável por viabilizar as operações de iniciação de pagamentos para o Open Banking Brasil.\n    Para cada uma das formas de pagamento previstas é necessário obter prévio consentimento do cliente através dos `endpoints` dedicados ao consentimento nesta API.\n\n    # Orientações\n    No diretório de participantes duas `Roles` estão relacionadas à presente API:\n    - `CONTA`, referente às instituições detentoras de conta participantes do Open Banking Brasil;\n    - `PAGTO`, referente às instituições iniciadoras de transação de pagamento de conta participantes do Open Banking Brasil.\n    Os tokens utilizados para consumo dos `endpoints` desta API devem possuir os `scopes` `openid` e `payments`.\n    Esta API não requer a implementação de `permissions` para sua utilização.\n    Todas as requisições e respostas devem ser assinadas seguindo o protocolo estabelecido na sessão \u003ca href=\"https://openbanking-brasil.github.io/areadesenvolvedor/#assinaturas\" target=\"_blank\"\u003eAssinaturas\u003c/a\u003e do guia de segurança.\n\n    ## Assinatura de payloads\n\n    No contexto da API Payment Initiation, os `payloads` de mensagem que trafegam tanto por parte da instituição iniciadora de transação de pagamento quanto por parte da instituição detentora\n    de conta devem estar assinados. Para o processo de assinatura destes `payloads` as instituições devem seguir as especificações de segurança publicadas no Portal do desenvolvedor:\n\n    - Certificados exigidos para assinatura de mensagens:\n    [Padrões de certificados digitais Open Banking Brasil](https://github.com/OpenBanking-Brasil/specs-seguranca/blob/main/open-banking-brasil-certificate-standards-1_ID1.md#certificado-de-assinatura-certificadoassinatura)\n\n    - Como assinar o payload JWS: [https://openbanking-brasil.github.io/areadesenvolvedor/#como-assinar-o-payload](https://openbanking-brasil.github.io/areadesenvolvedor/#como-assinar-o-payload)\n\n    ## Controle de acesso\n\n    O endpoint de consulta de pagamento GET /pix/payments/{​​​paymentId}​​​ deve suportar acesso a partir de access_token emitido por meio de um grant_type do tipo `client credentials`, como opção do uso do token vinculado ao consentimento (hybrid flow).\n\n    Para evitar vazamento de informação, a detentora deve validar que o pagamento consultado pertence ao ClientId que o criou e, caso haja divergências, retorne um erro HTTP 400.\n  version: 1.0.1\n  license:\n    name: Apache 2.0\n    url: 'https://www.apache.org/licenses/LICENSE-2.0'\n  contact:\n    name: Governança do Open Banking Brasil – Especificações\n    email: gt-interfaces@openbankingbr.org\n    url: 'https://openbanking-brasil.github.io/areadesenvolvedor/'\nservers:\n  - url: 'https://api.banco.com.br/open-banking/payments/v1'\n    description: Servidor de Produção\n  - url: 'https://apih.banco.com.br/open-banking/payments/v1'\n    description: Servidor de Homologação\ntags:\n  - name: Pagamentos\npaths:\n  /consents:\n    post:\n      tags:\n        - Pagamentos\n      summary: Criar consentimento para a iniciação de pagamento.\n      operationId: paymentsPostConsents\n      description: Método de criação do consentimento para a iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n      requestBody:\n        content:\n          application/jwt:\n            schema:\n              $ref: '#/components/schemas/CreatePaymentConsent'\n        description: Payload para criação do consentimento para iniciação do pagamento.\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/201PaymentsConsentsConsentCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityConsents'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OpenId:\n            - openid\n          OAuth2ClientCredentials:\n            - payments\n  '/consents/{consentId}':\n    get:\n      tags:\n        - Pagamentos\n      summary: Consultar consentimento para iniciação de pagamento.\n      operationId: paymentsGetConsentsConsentId\n      description: Método para consulta do consentimento para a iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n      responses:\n        '200':\n          $ref: '#/components/responses/200PaymentsConsentsConsentIdRead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OAuth2ClientCredentials:\n            - payments\n    patch:\n      tags:\n        - Pagamentos\n      summary: Revogar consentimento de pagamento.\n      operationId: paymentsPatchPixPayments\n      description: Método para revogação do consentimento.\n      parameters:\n        - $ref: '#/components/parameters/consentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n      requestBody:\n        content:\n          application/jwt:\n            schema:\n              $ref: '#/components/schemas/PatchPaymentsConsent'\n        description: Payload para revogação do consentimento.\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/200PatchPaymentsConsent'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityPatchConsent'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OAuth2AuthorizationCode:\n            - 'consent:consentId'\n            - payments\n        - OAuth2ClientCredentials:\n            - payments\n  /pix/payments:\n    post:\n      tags:\n        - Pagamentos\n      summary: Criar iniciação de pagamento.\n      operationId: paymentsPostPixPayments\n      description: Método para criar uma iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n        - $ref: '#/components/parameters/XIdempotencyKey'\n      requestBody:\n        content:\n          application/jwt:\n            schema:\n              $ref: '#/components/schemas/CreatePixPayment'\n        description: Payload para criação da iniciação do pagamento Pix.\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/201PaymentsInitiationPixPaymentCreated'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '415':\n          $ref: '#/components/responses/UnsupportedMediaType'\n        '422':\n          $ref: '#/components/responses/UnprocessableEntityPixPayments'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OAuth2AuthorizationCode:\n            - 'consent:consentId'\n            - payments\n  '/pix/payments/{paymentId}':\n    get:\n      tags:\n        - Pagamentos\n      summary: Consultar iniciação de pagamento.\n      operationId: paymentsGetPixPaymentsPaymentId\n      description: Método para consultar uma iniciação de pagamento.\n      parameters:\n        - $ref: '#/components/parameters/paymentId'\n        - $ref: '#/components/parameters/Authorization'\n        - $ref: '#/components/parameters/xFapiAuthDate'\n        - $ref: '#/components/parameters/xFapiCustomerIpAddress'\n        - $ref: '#/components/parameters/xFapiInteractionId'\n        - $ref: '#/components/parameters/xCustomerUserAgent'\n      responses:\n        '200':\n          $ref: '#/components/responses/200PaymentsInitiationPixPaymentIdRead'\n        '400':\n          $ref: '#/components/responses/BadRequest'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/NotFound'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowed'\n        '406':\n          $ref: '#/components/responses/NotAcceptable'\n        '429':\n          $ref: '#/components/responses/TooManyRequests'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\n        default:\n          description: Erro inesperado.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResponseError'\n      security:\n        - OAuth2AuthorizationCode:\n            - payments\n        - OAuth2ClientCredentials:\n            - payments\ncomponents:\n  schemas:\n    422ResponseErrorCreateConsent:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 3\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                type: string\n                maxLength: 21\n                enum:\n                  - FORMA_PGTO_INVALIDA\n                  - DATA_PGTO_INVALIDA\n                  - DETALHE_PGTO_INVALIDO\n                  - NAO_INFORMADO\n                example: FORMA_PGTO_INVALIDA\n                description: |\n                  Códigos de erros previstos na criação de consentimento para a iniciação de pagamentos:  \n                  • FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  \n                  • DATA_PGTO_INVALIDA: Data de pagamento inválida.  \n                  • DETALHE_PGTO_INVALIDO: Detalhe do pagamento inválido.  \n                  • NAO_INFORMADO: Não informado.   \n              title:\n                type: string\n                maxLength: 255\n                pattern: \\w*\\W*\n                example: Forma de pagamento inválida.\n                description: |\n                  Título específico do erro reportado, de acordo com o código enviado:  \n                  • FORMA_PGTO_INVALIDA: Forma de pagamento inválida.  \n                  • DATA_PGTO_INVALIDA: Data de pagamento inválida. \n                  • DETALHE_PGTO_INVALIDO: Detalhe do pagamento inválido.\n                  • NAO_INFORMADO: Não informado.    \n              detail:\n                type: string\n                maxLength: 2048\n                pattern: \\w*\\W*\n                example: Meio de pagamento inválido.\n                description: |\n                  Descrição específica do erro de acordo com o código reportado:  \n                  • FORMA_PGTO_INVALIDA – Meio de pagamento inválido.  \n                  • DATA_PGTO_INVALIDA – Data de pagamento inválida no contexto, por exemplo, data no passado. Para pagamentos únicos deve ser informada a data atual, do dia corrente.  \n                  • DETALHE_PGTO_INVALIDO: O campo [nome_campo] não atende os requisitos de preenchimento.  \n                  • NAO_INFORMADO – Não reportado/identificado pela instituição detentora de conta.  \n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    422ResponseErrorCreatePixPayment:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 9\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                $ref: '#/components/schemas/EnumErrorsCreatePayment'\n              title:\n                type: string\n                maxLength: 255\n                pattern: \\w*\\W*\n                example: Saldo insuficiente.\n                description: |\n                  Título específico do erro reportado, de acordo com o código enviado:\n                  • SALDO_INSUFICIENTE: Saldo insuficiente.\n                  • BENEFICIARIO_INCOMPATIVEL: Beneficiário incompatível.\n                  • VALOR_INCOMPATIVEL: Valor da transação incompatível.\n                  • VALOR_ACIMA_LIMITE: Acima do limite estabelecido.\n                  • VALOR_INVALIDO: Valor inválido.\n                  • COBRANCA_INVALIDA: Cobrança inválida.\n                  • CONSENTIMENTO_INVALIDO: Consentimento inválido.\n                  • JANELA_OPER_INVALIDA: Janela de operação inválida.\n                  • NAO_INFORMADO: Não informado.\n                  • PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: divergência entre pagamento e consentimento.\n              detail:\n                type: string\n                maxLength: 2048\n                pattern: \\w*\\W*\n                example: A conta selecionada não possui saldo suficiente para realizar o pagamento.\n                description: |\n                  Descrição específica do erro de acordo com o código reportado:\n                  • SALDO_INSUFICIENTE: A conta selecionada não possui saldo suficiente para realizar o pagamento.\n                  • BENEFICIARIO_INCOMPATIVEL: O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.\n                  • VALOR_INCOMPATIVEL: O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.\n                  • VALOR_ACIMA_LIMITE: O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.\n                  • VALOR_INVALIDO: O valor enviado não é válido para o QR Code informado.\n                  • COBRANCA_INVALIDA: Validação de expiração, validação de vencimento ou Status Válido.\n                  • CONSENTIMENTO_INVALIDO: Consentimento inválido (status diferente de \"AUTHORISED\" ou está expirado).\n                  • JANELA_OPER_INVALIDA: Requisição está fora da janela de funcionamento.\n                  • NAO_INFORMADO: Não reportado/identificado pela instituição detentora de conta.\n                  • PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: Dados do pagamento divergentes dos dados do consentimento.\n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    BusinessEntity:\n      type: object\n      description: 'Usuário (pessoa jurídica) que encontra-se logado na instituição Iniciadora de Pagamento. [Restrição] Preenchimento obrigatório se usuário logado na instituição Iniciadora de Pagamento for um CNPJ (pessoa jurídica).'\n      additionalProperties: false\n      required:\n        - document\n      properties:\n        document:\n          type: object\n          additionalProperties: false\n          required:\n            - identification\n            - rel\n          properties:\n            identification:\n              type: string\n              maxLength: 14\n              description: Número do documento de identificação oficial do titular pessoa jurídica.\n              example: '11111111111111'\n              pattern: '^\\d{14}$'\n            rel:\n              type: string\n              maxLength: 4\n              description: Tipo do documento de identificação oficial do titular pessoa jurídica.\n              example: CNPJ\n              pattern: '^[A-Z]{4}$'\n    CreatePaymentConsent:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          type: object\n          description: Objeto contendo as informações de consentimento para a iniciação de pagamento individual.\n          required:\n            - loggedUser\n            - creditor\n            - payment\n          properties:\n            loggedUser:\n              $ref: '#/components/schemas/LoggedUser'\n            businessEntity:\n              $ref: '#/components/schemas/BusinessEntity'\n            creditor:\n              $ref: '#/components/schemas/Identification'\n            payment:\n              $ref: '#/components/schemas/PaymentConsent'\n            debtorAccount:\n              $ref: '#/components/schemas/DebtorAccount'\n          additionalProperties: false\n      additionalProperties: false\n    CreatePixPayment:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/CreatePixPaymentData'\n      additionalProperties: false\n    CreatePixPaymentData:\n      type: object\n      description: Objeto contendo dados do pagamento e do recebedor (creditor).\n      required:\n        - localInstrument\n        - payment\n        - creditorAccount\n        - cnpjInitiator\n      properties:\n        localInstrument:\n          type: string\n          maxLength: 4\n          enum:\n            - MANU\n            - DICT\n            - QRDN\n            - QRES\n            - INIC\n          example: DICT\n          description: |\n            Especifica a forma de iniciação do pagamento:\n            - MANU - Inserção manual de dados da conta transacional\n            - DICT - Inserção manual de chave Pix\n            - QRDN - QR code dinâmico\n            - QRES - QR code estático\n            - INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.\n        payment:\n          $ref: '#/components/schemas/PaymentPix'\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n        remittanceInformation:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Pagamento da nota XPTO035-002.\n          description: |\n            Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n        qrCode:\n          type: string\n          maxLength: 512\n          pattern: '[\\w\\W\\s]*'\n          example: |\n            00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\n            BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n            530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\n            CD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n          description: |\n            Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.\n            É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.\n            Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.\n            No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.\n            Este campo deverá ser no formato UTF-8.\n            [Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.\n        proxy:\n          type: string\n          maxLength: 77\n          pattern: '[\\w\\W\\s]*'\n          example: '12345678901'\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.\n            No caso de telefone celular deve ser informado no padrão E.1641.\n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.\n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.\n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.\n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.\n            Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES e validar o campo creditorAccount.\n            Esta validação é opcional caso o localInstrument for igual a INIC.\n            [Restrição] Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre preenchido com a chave Pix.\n        cnpjInitiator:\n          type: string\n          pattern: '^\\d{14}$'\n          maxLength: 14\n          example: '50685362000135'\n          description: CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.\n        transactionIdentification:\n          type: string\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9]{0,24}$'\n          maxLength: 25\n          example: E00038166201907261559y6j6\n          description: |\n            Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador.\n            Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são:\n            - Letras minúsculas, de ‘a’ a ‘z’\n            - Letras maiúsculas, de ‘A’ a ‘z’\n            - Dígitos decimais, de ‘0’ a ‘9’\n\n            [Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente.\n            Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido.\n            A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.\n          additionalProperties: false\n        ibgeTownCode:\n          type: string\n          minLength: 7\n          maxLength: 7\n          pattern: '^\\d{7}$'\n          example: '5300108'\n          description: |\n            Traz o código da cidade segundo o IBGE (Instituto Brasileiro de Geografia e Estatística).\n            Para o preenchimento deste campo, o Iniciador de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.\n            O preenchimento do campo tanto em pix/payments quanto /consents deve ser igual. Caso haja divergência dos valores, a instituição deve retornar HTTP 422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.\n            Este campo faz referência ao campo CodMun do arranjo Pix.\n    CreditorAccount:\n      type: object\n      description: |\n        Objeto que contém a identificação da conta de destino do beneficiário/recebedor.  \n      required:\n        - ispb\n        - number\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        issuer:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência emissora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 3\n          maxLength: 20\n          pattern: '^\\d{3,20}$'\n          example: '1234567890'\n          description: |\n            Deve ser preenchido com o número da conta do usuário recebedor, com dígito verificador (se este existir),  \n            se houver valor alfanumérico, este deve ser convertido para 0.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    DebtorAccount:\n      type: object\n      description: |\n        Objeto que contém a identificação da conta de origem do pagador.  \n        As informações quanto à conta de origem do pagador poderão ser trazidas no consentimento para a detentora, caso a iniciadora tenha coletado essas informações do cliente. Do contrário, será coletada na detentora e trazida para a iniciadora como resposta à criação do pagamento.\n      required:\n        - ispb\n        - number\n        - accountType\n      properties:\n        ispb:\n          type: string\n          minLength: 8\n          maxLength: 8\n          pattern: '^[0-9]{8}$'\n          example: '12345678'\n          description: |\n            Deve ser preenchido com o ISPB (Identificador do Sistema de Pagamentos Brasileiros) do participante do SPI (Sistema de pagamentos instantâneos) somente com números.\n        issuer:\n          type: string\n          maxLength: 4\n          pattern: '^\\d{4}$'\n          example: '1774'\n          description: |\n            Código da Agência emissora da conta sem dígito.  \n            (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito,  \n            no exercício de atividades da instituição, não podendo ser móvel ou transitória).  \n            [Restrição] Preenchimento obrigatório para os seguintes tipos de conta: CACC (CONTA_DEPOSITO_A_VISTA), SVGS (CONTA_POUPANCA) e SLRY (CONTA_SALARIO).\n        number:\n          type: string\n          minLength: 3\n          maxLength: 20\n          pattern: '^\\d{3,20}$'\n          example: '1234567890'\n          description: |\n            Deve ser preenchido com o número da conta transacional do usuário pagador, com dígito verificador (se este existir),  \n            se houver valor alfanumérico, este deve ser convertido para 0.\n        accountType:\n          $ref: '#/components/schemas/EnumAccountPaymentsType'\n      additionalProperties: false\n    Details:\n      type: object\n      description: |\n        Objeto contendo os detalhes do pagamento.\n      required:\n        - localInstrument\n        - creditorAccount\n      properties:\n        localInstrument:\n          $ref: '#/components/schemas/EnumLocalInstrument'\n        qrCode:\n          type: string\n          maxLength: 512\n          pattern: '[\\w\\W\\s]*'\n          example: |\n            00020104141234567890123426660014BR.GOV.BCB.PIX014466756C616E6F32303139406578616D706C652E636F6D27300012\n            BR.COM.OUTRO011001234567895204000053039865406123.455802BR5915NOMEDORECEBEDOR6008BRASILIA61087007490062\n            530515RP12345678-201950300017BR.GOV.BCB.BRCODE01051.0.080450014BR.GOV.BCB.PIX0123PADRAO.URL.PIX/0123AB\n            CD81390012BR.COM.OUTRO01190123.ABCD.3456.WXYZ6304EB76\n          description: |\n            Sequência de caracteres que corresponde ao QR Code disponibilizado para o pagador.\n            É a sequência de caracteres que seria lida pelo leitor de QR Code, e deve propiciar o retorno dos dados do pagador após consulta na DICT.\n            Essa funcionalidade é possível tanto para QR Code estático quanto para QR Code dinâmico.\n            No arranjo do Pix esta é a mesma sequência gerada e/ou lida pela funcionalidade Pix Copia e Cola.\n            Este campo deverá ser no formato UTF-8.\n            [Restrição] Preenchimento obrigatório para pagamentos por QR Code, observado o tamanho máximo de 512 bytes.\n        proxy:\n          type: string\n          maxLength: 77\n          pattern: '[\\w\\W\\s]*'\n          example: '12345678901'\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.\n            No caso de telefone celular deve ser informado no padrão E.1641.\n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.\n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.\n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.\n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.\n            Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES e validar o campo creditorAccount.\n            Esta validação é opcional caso o localInstrument for igual a INIC.\n            [Restrição]\n            Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido.\n            Se localInstrument for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre preenchido com a chave Pix.\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n      additionalProperties: false\n    EndToEndId:\n      type: string\n      minLength: 32\n      maxLength: 32\n      pattern: '^([E])([0-9]{8})([0-9]{4})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(2[0-3]|[01][0-9])([0-5][0-9])([a-zA-Z0-9]{11})$'\n      example: E9040088820210128000800123873170\n      description: |\n        Deve ser preenchido no formato padrão ExxxxxxxxyyyyMMddHHmmkkkkkkkkkkk (32 caracteres; “case sensitive”, isso é, diferencia letras maiúsculas e minúsculas), sendo:\n        • “E” – fixo (1 caractere);  \n        • xxxxxxxx – identificação do agente que gerou o ´EndToEndId´, podendo ser: o ISPB do participante direto ou o ISPB do participante indireto (8 caracteres numéricos [0-9]);  \n        • yyyyMMddHHmm – data, hora e minuto (12 caracteres), seguindo o horário UTC, da submissão da ordem de pagamento, caso a liquidação seja prioritária, ou prevista para o envio da ordem ao sistema de liquidação, caso seja realizado um agendamento. Para ordens prioritárias e não prioritárias, aceita-se o preenchimento, pelo agente que gerou o ´EndToEndId´, com uma tolerância máxima de 12 horas, para o futuro e para o passado, em relação ao horário efetivo de processamento da ordem pelo SPI;  \n        • kkkkkkkkkkk – sequencial criado pelo agente que gerou o ´EndToEndId´ (11 caracteres alfanuméricos [a-z/A-Z/0-9]). Deve ser único dentro de cada “yyyyMMddHHmm”.  \n        Admite-se que o ´EndToEndId´ seja gerado pelo participante direto, pelo participante indireto ou pelo iniciador de pagamento.  \n        Ele deve ser único, não podendo ser repetido em qualquer outra operação enviada ao SPI.  \n        [Restrição] O ´EndToEndId´ deve ser informado obrigatoriamente caso o status do pagamento seja ACCEPTED_SETTLEMENT_COMPLETED.\n    EnumAccountPaymentsType:\n      type: string\n      maxLength: 4\n      enum:\n        - CACC\n        - SLRY\n        - SVGS\n        - TRAN\n      example: CACC\n      description: |\n        Tipos de contas usadas para pagamento via Pix.  \n        Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas,  \n        conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica.  \n        Segue descrição de cada valor do ENUM para o escopo do Pix.  \n        CACC - Current - Conta Corrente.  \n        SLRY - Salary - Conta-Salário.  \n        SVGS - Savings - Conta de Poupança.  \n        TRAN - TransactingAccount - Conta de Pagamento pré-paga.\n    EnumAuthorisationStatusType:\n      type: string\n      maxLength: 22\n      enum:\n        - AWAITING_AUTHORISATION\n        - AUTHORISED\n        - REJECTED\n        - CONSUMED\n        - REVOKED\n      example: REVOKED\n      description: |\n        Retorna o estado do consentimento, o qual no momento de sua criação será AWAITING_AUTHORISATION.\n        Este estado será alterado depois da autorização do consentimento na detentora da conta do pagador (Debtor) para AUTHORISED, REJECTED ou REVOKED.\n        O consentimento fica no estado CONSUMED após ocorrer a iniciação do pagamento referente ao consentimento.\n        Em caso de consentimento expirado a detentora deverá retornar o status REJECTED.\n        Em caso de revogação do consentimento a detentora deverá retornar o status REVOKED.\n        Estados possíveis:\n        AWAITING_AUTHORISATION - Aguardando autorização\n        AUTHORISED - Autorizado\n        REJECTED - Rejeitado\n        CONSUMED - Consumido\n        REVOKED - Revogado\n    EnumErrorsCreatePayment:\n      type: string\n      maxLength: 25\n      enum:\n        - SALDO_INSUFICIENTE\n        - BENEFICIARIO_INCOMPATIVEL\n        - VALOR_INCOMPATIVEL\n        - VALOR_ACIMA_LIMITE\n        - VALOR_INVALIDO\n        - COBRANCA_INVALIDA\n        - CONSENTIMENTO_INVALIDO\n        - JANELA_OPER_INVALIDA\n        - NAO_INFORMADO\n        - PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO\n      example: SALDO_INSUFICIENTE\n      description: |\n        Códigos de erros previstos na criação da iniciação de pagamento:\n        • SALDO_INSUFICIENTE – Esta conta não possui saldo suficiente para realizar o pagamento.\n        • BENEFICIARIO_INCOMPATIVEL – O beneficiário informado no consentimento não é o mesmo do esperado pelo DICT.\n        • VALOR_INCOMPATIVEL – O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento.\n        • VALOR_ACIMA_LIMITE – O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente.\n        • VALOR_INVALIDO – O valor enviado não é válido para o QR Code informado.\n        • COBRANCA_INVALIDA – Validação de expiração, validação de vencimento, Status Válido.\n        • CONSENTIMENTO_INVALIDO – Consentimento inválido (status não é \"authorised\" ou está expirado).\n        • JANELA_OPER_INVALIDA – Requisição está fora da janela de funcionamento.\n        • NAO_INFORMADO – Não informada pela detentora de conta.\n        • PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO: Dados do pagamento divergentes dos dados do consentimento.\n    EnumLocalInstrument:\n      type: string\n      maxLength: 4\n      enum:\n        - MANU\n        - DICT\n        - QRDN\n        - QRES\n        - INIC\n      example: DICT\n      description: |\n        Especifica a forma de iniciação do pagamento:\n        - MANU - Inserção manual de dados da conta transacional\n        - DICT - Inserção manual de chave Pix\n        - QRDN - QR code dinâmico\n        - QRES - QR code estático\n        - INIC - Indica que o recebedor (creditor) contratou o Iniciador de Pagamentos especificamente para realizar iniciações de pagamento em que o beneficiário é previamente conhecido.\n    EnumPaymentPersonType:\n      type: string\n      maxLength: 15\n      enum:\n        - PESSOA_NATURAL\n        - PESSOA_JURIDICA\n      description: |\n        Titular, pessoa natural ou juridica a quem se referem os dados de recebedor (creditor).\n    EnumPaymentStatusType:\n      type: string\n      maxLength: 45\n      enum:\n        - PDNG\n        - SASP\n        - SASC\n        - PART\n        - ACSP\n        - ACSC\n        - ACCC\n        - RJCT\n      example: PDNG\n      description: |\n        Estado atual da iniciação de pagamento. O estado evolui na seguinte ordem:  \n        1. PDNG (PENDING) - Iniciação de pagamento ou transação de pagamento está pendente. Checagens adicionais em realização.  \n        2. SASP (SCHEDULE_ACCEPTED_SETTLEMENT_IN_PROCESS) - Indica que o processo de agendamento está em processamento.  \n        3. SASC (SCHEDULE_ACCEPTED_SETTLEMENT_COMPLETED) - Indica que o processo de agendamento foi realizado.  \n        4. PART (PARTIALLY ACCEPTED) - Aguardando autorização múltipla alçada.  \n        5. ACSP (ACCEPTED_SETTLEMENT_IN_PROCESS) - Iniciação de pagamento aceita e processamento do pagamento foi iniciado.  \n        6. ACSC (ACCEPTED_SETTLEMENT_COMPLETED_DEBITOR_ACCOUNT) - Débito realizado na conta do pagador.  \n        7. ACCC (ACCEPTED_SETTLEMENT_COMPLETED) - Crédito realizado na instituição de destino.  \n\n        Em caso insucesso:  \n        RJCT (REJECTED) - Instrução de pagamento rejeitada.\n    EnumPaymentType:\n      type: string\n      maxLength: 3\n      enum:\n        - PIX\n      example: PIX\n      description: |\n        Este campo define o tipo de pagamento que será iniciado após a autorização do consentimento.\n    EnumRejectionReasonType:\n      type: string\n      maxLength: 50\n      enum:\n        - ABORTED_SETTLEMENT_TIMEOUT\n        - ERROR_CREDITOR_AGENT\n        - TIMEOUT_DEBTOR_AGENT\n        - INVALID_CREDITOR_ACCOUNT_NUMBER\n        - BLOCKED_ACCOUNT\n        - CLOSED_CREDITOR_ACCOUNT_NUMBER\n        - INVALID_CREDITOR_ACCOUNTTYPE\n        - TRANSACTION_NOT_SUPPORTED\n        - NOT_ALLOWED_BOOK_TRANSFER\n        - FORBIDDEN_RETURN_PAYMENT\n        - INCORRECT_AGENT\n        - ZERO_AMOUNT\n        - NOT_ALLOWED_AMOUNT\n        - INSUFFICIENT_FUNDS\n        - WRONG_AMOUNT\n        - INVALID_AMOUNT\n        - INVALID_NUMBER_OF_TRANSACTIONS\n        - INCONSISTENT_WITH_END_CUSTOMER\n        - INVALID_IDENTIFICATION_CODE\n        - INVALID_CREDITOR_IDENTIFICATION_CODE\n        - CREDITOR_IDENTIFIER_INCORRECT\n        - ELEMENT_CONTENT_FORMALLY_INCORRECT\n        - ORDER_REJECTED\n        - NOT_ALLOWED_PAYMENT\n        - NOT_ALLOWED_ACCOUNT\n        - USER_NOT_YET_ACTIVATED\n        - INVALID_CREATION_DATE\n        - INVALID_CUT_OFF_DATE\n        - SETTLEMENT_FAILED\n        - INVALID_PURPOSE\n        - INVALID_END_TO_END_ID\n        - INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER\n        - INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER\n        - REGULATORY_REASON\n        - SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT\n        - INVALID_BILL\n        - OPERATION_WINDOW\n        - INCOMPATIBLE_DATE\n        - MISMATCH_AMOUNT\n        - OVER_LIMIT\n        - INVALID_CONSENT\n        - DENIED_MULTIPLE_AUTHORISATIONS\n        - EXPIRED_MULTIPLE_AUTHORISATIONS\n        - EXPIRED_BILL\n      example: USER_NOT_YET_ACTIVATED\n      description: |\n        Motivo da rejeição do pagamento. Informações complementares sobre o motivo do status.  \n        ABORTED_SETTLEMENT_TIMEOUT - Liquidação da transação interrompida devido a timeout no SPI (AB03).  \n        ERROR_CREDITOR_AGENT - Transação interrompida devido a erro no participante do usuário recebedor (AB09).  \n        TIMEOUT_DEBTOR_AGENT - Timeout do participante emissor da ordem de pagamento (AB11).  \n        INVALID_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor inexistente ou inválido (AC03).  \n        BLOCKED_ACCOUNT - Conta transacional do usuário recebedor encontra-se bloqueada (AC06).  \n        CLOSED_CREDITOR_ACCOUNT_NUMBER - Número da conta transacional do usuário recebedor encerrada (AC07).  \n        INVALID_CREDITOR_ACCOUNTTYPE - Tipo incorreto para a conta transacional do usuário recebedor (AC14).  \n        TRANSACTION_NOT_SUPPORTED - Tipo de transação não é suportado/autorizado na conta transacional do usuário recebedor (AG03). Exemplo: transferência para conta salário.  \n        NOT_ALLOWED_BOOK_TRANSFER - Não é permitida ordem de pagamento/devolução no SPI cujos recursos sejam transferidos de uma conta transacional para outra em uma mesma instituição participante ou entre participantes que utilizem o serviço de liquidação de um mesmo participante liquidante no SPI (booktransfer) (AG12).  \n        FORBIDDEN_RETURN_PAYMENT - Não é permitido devolver a devolução de um pagamento instantâneo (AG13).  \n        INCORRECT_AGENT - Participante direto não é liquidante do participante do usuário pagador / participante do usuário recebedor (AGNT).  \n        ZERO_AMOUNT - Ordem de pagamento instantâneo com valor zero (AM01).  \n        NOT_ALLOWED_AMOUNT - Ordem de pagamento/devolução em valor que faz superar o limite permitido para o tipo de conta transacional creditada (AM02).  \n        INSUFFICIENT_FUNDS - Saldo insuficiente na conta PI do participante do usuário pagador (AM04).  \n        WRONG_AMOUNT - Devolução de pagamento em valor que faz superar o valor da ordem de pagamento instantâneo correspondente (AM09).  \n        INVALID_AMOUNT - Divergência entre a somatória dos valores do bloco ‘valorDoDinheiroOuCompra’ e o campo ‘valor’ (AM12).  \n        INVALID_NUMBER_OF_TRANSACTIONS - Quantidade de transações inválida (AM18).  \n        INCONSISTENT_WITH_END_CUSTOMER - CPF/CNPJ do usuário recebedor não é consistente com o titular da conta transacional especificada (BE01).  \n        INVALID_IDENTIFICATION_CODE - Código de situação de pagamento ou de erro inválido (BE15).  \n        INVALID_CREDITOR_IDENTIFICATION_CODE - QR Code rejeitado pelo participante do usuário recebedor (BE17).  \n        CREDITOR_IDENTIFIER_INCORRECT - CPF/CNPJ do usuário recebedor incorreto (CH11).  \n        ELEMENT_CONTENT_FORMALLY_INCORRECT - Elemento da mensagem incorreto (CH16).  \n        ORDER_REJECTED - Ordem rejeitada pelo participante do usuário recebedor (DS04).  \n        NOT_ALLOWED_PAYMENT - Participante que assinou a mensagem não é autorizado a realizar a operação na conta PI debitada. No caso em que o participante que assinou a mensagem não é o titular da conta PI debitada nem é o liquidante no SPI do participante do usuário pagador (DS0G).  \n        NOT_ALLOWED_ACCOUNT - ISPB do participante que submeteu a resposta à ordem de pagamento/devolução diferente do ISPB do participante creditado pela ordem (DS0H).  \n        USER_NOT_YET_ACTIVATED - Participante não se encontra cadastrado ou ainda não iniciou a operação no SPI (DS27).  \n        INVALID_CREATION_DATE - Data e Hora do envio da mensagem inválida (DT02).  \n        INVALID_CUT_OFF_DATE - Transação extrapola o prazo máximo para devolução de pagamento instantâneo regulamentado pelo Arranjo PIX (DT05).  \n        SETTLEMENT_FAILED - Erro no processamento do pagamento instantâneo (ED05).  \n        INVALID_PURPOSE - Inconsistência entre a finalidade da transação e o preenchimento do bloco elementos Structured (FF07).  \n        INVALID_END_TO_END_ID - Identificador da operação mal formatado (FF08).  \n        INVALID_DEBTOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário pagador inválido ou inexistente (RC09).  \n        INVALID_CREDITOR_CLEARING_SYSTEM_MEMBER_IDENTIFIER - ISPB do participante do usuário recebedor inválido ou inexistente (RC10).  \n        REGULATORY_REASON - Ordem de pagamento em que o usuário pagador é sancionado por resolução do Conselho de Segurança das Nações Unidas (CSNU). Nos casos em que o usuário recebedor for o sancionado, a ordem de pagamento não deve ser rejeitada (RR4).  \n        SPECIFIC_SERVICE_OFFERED_BY_CREDITOR_AGENT - A transação original não está relacionada ao serviço de Saque Pix (SL02).  \n        INVALID_BILL - Validação de expiração, validação de vencimento, Status Válido (INDT).  \n        OPERATION_WINDOW - Requisição está fora da janela de funcionamento (IDEA).  \n        INCOMPATIBLE_DATE - Data do pagamento divergente da data consentida ou divergente da data atual do QR Code (TERM).  \n        MISMATCH_AMOUNT - O valor informado no consentimento não é o mesmo valor do informado no payload de pagamento (OB01).  \n        OVER_LIMIT - O valor (ou quantidade de transações) ultrapassa a faixa de limite parametrizada na detentora para permitir a realização de transações pelo cliente (OB02).   \n        INVALID_CONSENT - Consentimento inválido (status não é \"authorised\" ou está expirado) (OB03).  \n        DENIED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora recusaram a operação (OB04).  \n        EXPIRED_MULTIPLE_AUTHORISATIONS - Um (ou mais) aprovadores na detentora não tomaram ação para aprovar a operação (OB05).  \n        EXPIRED_BILL - O QR Code não é mais válido (OB06).   \n        [Restrição] Esse motivo deverá ser enviado quando o campo /data/status for igual a RJCT (REJECTED).\n    Identification:\n      type: object\n      description: Objeto contendo os dados do recebedor (creditor).\n      required:\n        - personType\n        - cpfCnpj\n        - name\n      properties:\n        personType:\n          $ref: '#/components/schemas/EnumPaymentPersonType'\n        cpfCnpj:\n          type: string\n          minLength: 11\n          maxLength: 14\n          pattern: '^\\d{11}$|^\\d{14}$'\n          example: '58764789000137'\n          description: |\n            Identificação da pessoa envolvida na transação.  \n            Preencher com o CPF ou CNPJ, de acordo com o valor escolhido no campo type.  \n            O CPF será utilizado com 11 números e deverá ser informado sem pontos ou traços.  \n            O CNPJ será utilizado com 14 números e deverá ser informado sem pontos ou traços.\n        name:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Marco Antonio de Brito\n          description: |\n            Em caso de pessoa natural deve ser informado o nome completo do titular da conta do recebedor.  \n            Em caso de pessoa jurídica deve ser informada a razão social ou o nome fantasia da conta do recebedor.\n      additionalProperties: false\n    LoggedUser:\n      type: object\n      description: |\n        Usuário (pessoa natural) que encontra-se logado na instituição Iniciadora de Pagamento.\n        [Restrição] Deve obrigatoriamente ser enviado quando a revogação for feita pelo usuário final, ou seja, se o campo revokedBy estiver com o valor 'USER'.\n      additionalProperties: false\n      required:\n        - document\n      properties:\n        document:\n          type: object\n          description: Objeto que contém os dados de identificação do usuário.\n          additionalProperties: false\n          required:\n            - identification\n            - rel\n          properties:\n            identification:\n              type: string\n              maxLength: 11\n              description: Número do documento de identificação oficial do usuário.\n              example: '11111111111'\n              pattern: '^\\d{11}$'\n            rel:\n              type: string\n              maxLength: 3\n              description: Tipo do documento de identificação oficial do usuário.\n              example: CPF\n              pattern: '^[A-Z]{3}$'\n    Meta:\n      type: object\n      description: Meta informações referente à API requisitada.\n      required:\n        - totalRecords\n        - totalPages\n        - requestDateTime\n      properties:\n        totalRecords:\n          type: integer\n          format: int32\n          description: Número total de registros no resultado\n          example: 1\n        totalPages:\n          type: integer\n          format: int32\n          description: Número total de páginas no resultado\n          example: 1\n        requestDateTime:\n          description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'\n          type: string\n          maxLength: 20\n          format: date-time\n          example: '2021-05-21T08:30:00Z'\n      additionalProperties: false\n    PaymentConsent:\n      type: object\n      description: Objeto contendo dados de pagamento para consentimento.\n      required:\n        - type\n        - currency\n        - amount\n        - details\n      properties:\n        type:\n          $ref: '#/components/schemas/EnumPaymentType'\n        schedule:\n          oneOf:\n            - $ref: '#/components/schemas/Schedule'\n        date:\n          type: string\n          format: date\n          maxLength: 10\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'\n          example: '2021-01-01'\n          description: |\n            Mutuamente exclusivo com o objeto schedule. Este campo é obrigatório no caso de pagamento único. Neste caso, o objeto schedule não deve ser informado.\n        currency:\n          type: string\n          maxLength: 3\n          pattern: '^([A-Z]{3})$'\n          example: BRL\n          description: |\n            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.\n            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.\n        amount:\n          type: string\n          minLength: 4\n          maxLength: 19\n          pattern: '^((\\d{1,16}\\.\\d{2}))$'\n          example: '100000.12'\n          description: |\n            Valor da transação com 2 casas decimais.\n        ibgeTownCode:\n          type: string\n          minLength: 7\n          maxLength: 7\n          pattern: '^\\d{7}$'\n          example: '5300108'\n          description: |\n            Traz o código da cidade segundo o IBGE (Instituto Brasileiro de Geografia e Estatística).\n            Para o preenchimento deste campo, o Iniciador de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.\n            O preenchimento do campo tanto em pix/payments quanto /consents deve ser igual. Caso haja divergência dos valores, a instituição deve retornar HTTP 422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.\n            Este campo faz referência ao campo CodMun do arranjo Pix.\n        details:\n          $ref: '#/components/schemas/Details'\n      additionalProperties: false\n    Schedule:\n      type: object\n      description: |\n        Mutuamente exclusivo com o campo date. Este campo é obrigatório no caso de agendamento. Neste caso, o campo date não deve ser informado.\n      required:\n        - single\n      properties:\n        single:\n          $ref: '#/components/schemas/Single'\n    Single:\n      type: object\n      description: Define a política de agendamento único.\n      additionalProperties: false\n      required:\n        - date\n      properties:\n        date:\n          type: string\n          format: date\n          maxLength: 10\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'\n          example: '2021-01-01'\n          description: |\n            Define a data alvo da liquidação do pagamento. O fuso horário de Brasilia deve ser utilizado para criação e racionalização sobre os dados deste campo.  \n            OBS:Esse campo deverá sempre ser no mínimo D+1 corrido, ou seja, a data imediatamente posterior em relação a data do consentimento considerando o fuso horário de Brasília e deverá ser no máximo um ano corrido a partir da data do consentimento considerando o fuso horário de Brasília.\n    PaymentPix:\n      type: object\n      description: Objeto contendo dados do pagameto como moeda e valor.\n      required:\n        - amount\n        - currency\n      properties:\n        amount:\n          type: string\n          minLength: 4\n          maxLength: 19\n          pattern: '^((\\d{1,16}\\.\\d{2}))$'\n          example: '100000.12'\n          description: |\n            Valor da transação com 2 casas decimais.\n        currency:\n          type: string\n          maxLength: 3\n          pattern: '^([A-Z]{3})$'\n          example: BRL\n          description: |\n            Código da moeda nacional segundo modelo ISO-4217, ou seja, 'BRL'.  \n            Todos os valores monetários informados estão representados com a moeda vigente do Brasil.\n      additionalProperties: false\n    ResponseError:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 13\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                description: Código de erro específico do endpoint\n                type: string\n                pattern: '[\\w\\W\\s]*'\n                maxLength: 255\n              title:\n                description: Título legível por humanos deste erro específico\n                type: string\n                pattern: '[\\w\\W\\s]*'\n                maxLength: 255\n              detail:\n                description: Descrição legível por humanos deste erro específico\n                type: string\n                pattern: '[\\w\\W\\s]*'\n                maxLength: 2048\n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    ResponsePaymentConsent:\n      type: object\n      required:\n        - data\n        - links\n        - meta\n      properties:\n        data:\n          type: object\n          description: Objeto contendo as informações de resposta do consentimento para a iniciação de pagamento individual.\n          required:\n            - consentId\n            - statusUpdateDateTime\n            - creationDateTime\n            - expirationDateTime\n            - status\n            - loggedUser\n            - creditor\n            - payment\n          properties:\n            consentId:\n              type: string\n              maxLength: 256\n              pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n              example: 'urn:bancoex:C1DD33123'\n              description: |\n                Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.\n                Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource\n                Identifier - URI - que é atribuído sob o URI scheme \"urn\" e um namespace URN específico, com a intenção de que o URN\n                seja um identificador de recurso persistente e independente da localização.\n                Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:\n                - o namespace(urn)\n                - o identificador associado ao namespace da instituição transnmissora (bancoex)\n                - o identificador específico dentro do namespace (C1DD33123).\n                Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n            creationDateTime:\n              description: 'Data e hora em que o consentimento foi criado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).'\n              type: string\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n              pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n              maxLength: 20\n            expirationDateTime:\n              description: |\n                Data e hora em que o consentimento da iniciação de pagamento expira, devendo ser sempre o creationDateTime mais 5 minutos. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC (UTC time format).\n                O consentimento é criado com o status AWAITING_AUTHORISATION, e deve assumir o status AUTHORIZED ou REJECTED antes do tempo de expiração - 5 minutos. Caso o tempo seja expirado, o status deve assumir REJECTED.\n                Para o cenário em que o status assumiu AUTHORISED, o tempo máximo do expirationDateTime do consentimento deve assumir \"now + 60 minutos\". Este é o tempo para consumir o consentimento autorizado, mudando seu status para CONSUMED. Não é possível prorrogar este tempo e a criação de um novo consentimento será necessária para os cenários de insucesso.\n                O tempo do expirationDateTime é garantido com os 15 minutos do access token, sendo possível utilizar mais três refresh tokens até totalizar 60 minutos.\n              type: string\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n              pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n              maxLength: 20\n            statusUpdateDateTime:\n              type: string\n              format: date-time\n              example: '2021-05-21T08:30:00Z'\n              pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n              maxLength: 20\n              description: |\n                Data e hora em que o recurso foi atualizado. Uma string com data e hora conforme especificação RFC-3339, sempre com a utilização de timezone UTC(UTC time format).\n            status:\n              $ref: '#/components/schemas/EnumAuthorisationStatusType'\n            revocation:\n              $ref: '#/components/schemas/Revocation'\n            loggedUser:\n              $ref: '#/components/schemas/LoggedUser'\n            businessEntity:\n              $ref: '#/components/schemas/BusinessEntity'\n            creditor:\n              $ref: '#/components/schemas/Identification'\n            payment:\n              $ref: '#/components/schemas/PaymentConsent'\n            debtorAccount:\n              $ref: '#/components/schemas/DebtorAccount'\n          additionalProperties: false\n        links:\n          $ref: '#/components/schemas/ResponsePixPayment/properties/links'\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    ResponsePixPayment:\n      type: object\n      required:\n        - data\n        - links\n        - meta\n      properties:\n        data:\n          $ref: '#/components/schemas/ResponsePixPaymentData'\n        links:\n          type: object\n          description: Referências para outros recusos da API requisitada.\n          required:\n            - self\n          properties:\n            self:\n              type: string\n              format: uri\n              maxLength: 2000\n              description: URI completo que gerou a resposta atual.\n              example: 'https://api.banco.com.br/open-banking/api/v1/resource'\n              pattern: '^(https?:\\/\\/)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?\u0026\\/\\/=]*)$'\n          additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    ResponsePixPaymentData:\n      type: object\n      description: Objeto contendo dados do pagamento e da conta do recebedor (creditor).\n      required:\n        - paymentId\n        - consentId\n        - creationDateTime\n        - statusUpdateDateTime\n        - status\n        - localInstrument\n        - payment\n        - creditorAccount\n        - cnpjInitiator\n      properties:\n        paymentId:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n          example: TXpRMU9UQTROMWhZV2xSU1FUazJSMDl\n          description: |\n            Código ou identificador único informado pela instituição detentora da conta para representar\n            a iniciação de pagamento individual. O `paymentId` deve ser diferente do `endToEndId`.\n            Este é o identificador que deverá ser utilizado na consulta ao status da iniciação de pagamento efetuada.\n        endToEndId:\n          $ref: '#/components/schemas/EndToEndId'\n        consentId:\n          type: string\n          maxLength: 256\n          pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n          example: 'urn:bancoex:C1DD33123'\n          description: |\n            Identificador único do consentimento criado para a iniciação de pagamento solicitada. Deverá ser um URN - Uniform Resource Name.\n            Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) é um Uniform Resource\n            Identifier - URI - que é atribuído sob o URI scheme \"urn\" e um namespace URN específico, com a intenção de que o URN\n            seja um identificador de recurso persistente e independente da localização.\n            Considerando a string urn:bancoex:C1DD33123 como exemplo para consentId temos:\n            - o namespace(urn)\n            - o identificador associado ao namespace da instituição transnmissora (bancoex)\n            - o identificador específico dentro do namespace (C1DD33123).\n            Informações mais detalhadas sobre a construção de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).\n        creationDateTime:\n          type: string\n          format: date-time\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2020-07-21T08:30:00Z'\n          description: |\n            Data e hora em que o recurso foi criado.\n            Uma string com data e hora conforme especificação RFC-3339,\n            sempre com a utilização de timezone UTC(UTC time format).\n        statusUpdateDateTime:\n          type: string\n          format: date-time\n          pattern: '^(\\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)Z$'\n          example: '2020-07-21T08:30:00Z'\n          description: |\n            Data e hora da última atualização da iniciação de pagamento.\n            Uma string com data e hora conforme especificação RFC-3339,\n            sempre com a utilização de timezone UTC(UTC time format).\n        proxy:\n          type: string\n          maxLength: 77\n          pattern: '[\\w\\W\\s]*'\n          example: '12345678901'\n          description: |\n            Chave cadastrada no DICT pertencente ao recebedor. Os tipos de chaves podem ser: telefone, e-mail, cpf/cnpj ou chave aleatória.\n            No caso de telefone celular deve ser informado no padrão E.1641.\n            Para e-mail deve ter o formato xxxxxxxx@xxxxxxx.xxx(.xx) e no máximo 77 caracteres.\n            No caso de CPF deverá ser informado com 11 números, sem pontos ou traços.\n            Para o caso de CNPJ deverá ser informado com 14 números, sem pontos ou traços.\n            No caso de chave aleatória deve ser informado o UUID gerado pelo DICT, conforme formato especificado na RFC41223.\n            Se informado, a detentora da conta deve validar o proxy no DICT quando localInstrument for igual a DICT, QRDN ou QRES e validar o campo creditorAccount.\n            Esta validação é opcional caso o localInstrument for igual a INIC.\n            [Restrição] Se localInstrument for igual a MANU, o campo proxy não deve ser preenchido. Se localInstrument for igual INIC, DICT, QRDN ou QRES, o campo proxy deve ser sempre preenchido com a chave Pix.\n        ibgeTownCode:\n          type: string\n          minLength: 7\n          maxLength: 7\n          pattern: '^\\d{7}$'\n          example: '5300108'\n          description: |\n            Traz o código da cidade segundo o IBGE (Instituto Brasileiro de Geografia e Estatística).\n            Para o preenchimento deste campo, o Iniciador de Pagamentos deve seguir a orientação do arranjo da forma de pagamento.\n            O preenchimento do campo tanto em pix/payments quanto /consents deve ser igual. Caso haja divergência dos valores, a instituição deve retornar HTTP 422 com o código de erro PAGAMENTO_DIVERGENTE_DO_CONSENTIMENTO.\n            Este campo faz referência ao campo CodMun do arranjo Pix.\n        status:\n          $ref: '#/components/schemas/EnumPaymentStatusType'\n        rejectionReason:\n          $ref: '#/components/schemas/EnumRejectionReasonType'\n        localInstrument:\n          $ref: '#/components/schemas/CreatePixPaymentData/properties/localInstrument'\n        cnpjInitiator:\n          type: string\n          pattern: '^\\d{14}$'\n          maxLength: 14\n          example: '50685362000135'\n          description: CNPJ do Iniciador de Pagamento devidamente habilitado para a prestação de Serviço de Iniciação no Pix.\n        payment:\n          $ref: '#/components/schemas/PaymentPix'\n        transactionIdentification:\n          type: string\n          pattern: '^[a-zA-Z0-9][a-zA-Z0-9]{0,24}$'\n          maxLength: 25\n          example: E00038166201907261559y6j6\n          description: |\n            Trata-se de um identificador de transação que deve ser retransmitido intacto pelo PSP do pagador ao gerar a ordem de pagamento. Essa informação permitirá ao recebedor identificar e correlacionar a transferência, quando recebida, com a apresentação das instruções ao pagador.\n            Os caracteres permitidos no contexto do Pix para o campo txid (EMV 62-05) são:\n            - Letras minúsculas, de ‘a’ a ‘z’\n            - Letras maiúsculas, de ‘A’ a ‘z’\n            - Dígitos decimais, de ‘0’ a ‘9’\n\n            [Restrição] Se localInstrument for igual a INIC, o campo transactionIdentification deve ser preenchido obrigatoriamente.\n            Se localInstrument for igual a MANU ou DICT, o campo transactionIdentification não deve ser preenchido.\n            A detentora de conta deve validar se a condicionalidade do campo foi atendida pela iniciadora de pagamento.\n        remittanceInformation:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Pagamento da nota RSTO035-002.\n          description: |\n            Deve ser preenchido sempre que o usuário pagador inserir alguma informação adicional em um pagamento, a ser enviada ao recebedor.\n        creditorAccount:\n          $ref: '#/components/schemas/CreditorAccount'\n      additionalProperties: false\n    XFapiInteractionId:\n      type: string\n      pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n      maxLength: 100\n      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve \"reproduzir\" esse valor no cabeçalho de resposta.'\n    PatchPaymentsConsent:\n      type: object\n      required:\n        - data\n      properties:\n        data:\n          $ref: '#/components/schemas/PatchPaymentsConsentData'\n      additionalProperties: false\n    PatchPaymentsConsentData:\n      type: object\n      description: Objeto contendo dados do pagamento e do recebedor (creditor).\n      required:\n        - status\n        - revocation\n      properties:\n        status:\n          $ref: '#/components/schemas/EnumAuthorisationStatusType'\n        revocation:\n          $ref: '#/components/schemas/Revocation'\n    Revocation:\n      type: object\n      description: |\n        Objeto que contém as informações das circunstância da revogação.\n        O campo loggedUser deve ser preenchido quando a revogação for feita pelo usuário final, ou seja, se o campo data.revocation.revokedBy estiver com o valor 'USER'.\n      required:\n        - revokedBy\n        - reason\n      properties:\n        loggedUser:\n          $ref: '#/components/schemas/LoggedUser'\n        revokedBy:\n          $ref: '#/components/schemas/EnumRevokedBy'\n        reason:\n          $ref: '#/components/schemas/Reason'\n    EnumRevokedBy:\n      type: string\n      maxLength: 8\n      enum:\n        - USER\n        - ASPSP\n        - TPP\n      example: USER\n      description: |\n        Define qual das partes envolvidas na transação está realizando a revogação. Valores possíveis:\n        - USER (Revogado pelo usuário)\n        - ASPSP (Provedor de serviços de pagamento para serviços de conta - Detentora de conta)\n        - TPP (Instituições Provedoras - iniciadora de pagamentos)\n    Reason:\n      type: object\n      description: Define a razão pela qual o consentimento foi revogado.\n      required:\n        - code\n      properties:\n        code:\n          $ref: '#/components/schemas/EnumRevocationReason'\n        additionalInformation:\n          type: string\n          maxLength: 140\n          pattern: '[\\w\\W\\s]*'\n          example: Não quero mais o serviço\n          description: |\n            Contém informações adicionais definidas pelo requisitante da revogação.\n\n            [Restrição] Deverá ser obrigatoriamente preenchido quando a revogação for feita pela iniciadora ou pela detentora unilateralmente, ou seja, quando o campo revokedBy for igual a TPP ou ASPSP e o motivo de revogação for OTHER.\n    EnumRevocationReason:\n      type: string\n      maxLength: 22\n      enum:\n        - FRAUD\n        - ACCOUNT_CLOSURE\n        - OTHER\n      example: OTHER\n      description: \"Define o código da razão pela qual o consentimento foi revogado. \\nValores possíveis:\\_\\nFRAUD\\_- Indica suspeita de fraude\\_\\nACCOUNT_CLOSURE - Indica que a conta do usuário foi encerrada\\_\\nOTHER\\_- Indica que motivo do cancelamento está fora dos motivos pré-estabelecidos.\\n\"\n    422ResponseErrorPatchConsent:\n      type: object\n      required:\n        - errors\n      properties:\n        errors:\n          type: array\n          minItems: 1\n          maxItems: 9\n          items:\n            type: object\n            required:\n              - code\n              - title\n              - detail\n            properties:\n              code:\n                $ref: '#/components/schemas/EnumErrorsPatchConsent'\n              title:\n                type: string\n                maxLength: 255\n                pattern: \\w*\\W*\n                example: Motivo de revogação não permitido.\n                description: |\n                  Título específico do erro reportado, de acordo com o código enviado:  \n                  • INFORMACAO_USUARIO_REQUERIDA: Informação do usuário requerida.  \n                  • OPERACAO_NAO_PERMITIDA_STATUS: Operação não permitida.  \n                  • OPERACAO_NAO_SUPORTADA_TIPO_CONSENTIMENTO: Operação não permitida.  \n                  • TEMPO_LIMITE_REVOGACAO_EXCEDIDO: Prazo limite para revogação excedido.  \n                  • MOTIVO_REVOGACAO_NAO_PERMITIDO: Motivo de revogação não permitido.  \n                  • INFORMACAO_ADICIONAL_REVOGACAO_REQUERIDA: Informação adicional requerida.\n              detail:\n                type: string\n                maxLength: 2048\n                pattern: \\w*\\W*\n                example: Operação não suportada pelo tipo de consentimento.\n                description: |\n                  Descrição específica do erro de acordo com o código reportado:  \n                  • INFORMACAO_USUARIO_REQUERIDA: Informação do usuário requerida.  \n                  • OPERACAO_NAO_PERMITIDA_STATUS: Operação não permitida devido ao status atual do consentimento.  \n                  • OPERACAO_NAO_SUPORTADA_TIPO_CONSENTIMENTO: Operação não suportada pelo tipo de consentimento.  \n                  • TEMPO_LIMITE_REVOGACAO_EXCEDIDO: Prazo limite para revogação excedido.  \n                  • MOTIVO_REVOGACAO_NAO_PERMITIDO: Motivo de revogação não permitido.  \n                  • INFORMACAO_ADICIONAL_REVOGACAO_REQUERIDA: Informação adicional requerida.\n            additionalProperties: false\n        meta:\n          $ref: '#/components/schemas/Meta'\n      additionalProperties: false\n    EnumErrorsPatchConsent:\n      type: string\n      maxLength: 50\n      enum:\n        - INFORMACAO_USUARIO_REQUERIDA\n        - OPERACAO_NAO_PERMITIDA_STATUS\n        - OPERACAO_NAO_SUPORTADA_TIPO_CONSENTIMENTO\n        - TEMPO_LIMITE_REVOGACAO_EXCEDIDO\n        - MOTIVO_REVOGACAO_NAO_PERMITIDO\n        - INFORMACAO_ADICIONAL_REVOGACAO_REQUERIDA\n      example: OPERACAO_NAO_PERMITIDA_STATUS\n      description: |\n        Códigos de erros previstos na revogação do consentimento de pagamento:  \n        • INFORMACAO_USUARIO_REQUERIDA - O campo data.revocation.loggedUser deve ser preenchido quando a revogação for feita pelo usuário final, ou seja, se o campo data.revocation.revokedBy estiver com o valor USER.  \n        • OPERACAO_NAO_PERMITIDA_STATUS: O consentimento só pode ser revogado nos status CONSUMED.  \n        • OPERACAO_NAO_SUPORTADA_TIPO_CONSENTIMENTO: Somente consentimentos para pagamentos agendados podem ser revogados, ou seja, que possuam o campo data.payment.schedule preenchido.  \n        • TEMPO_LIMITE_REVOGACAO_EXCEDIDO: O consentimento só pode ser revogado até o dia anterior, ou seja, a meia noite no fuso horário de Brasília do dia imediatamente anterior a data alvo da liquidação do pagamento.  \n        • MOTIVO_REVOGACAO_NAO_PERMITIDO: Os motivos de revogação do consentimento: FRAUD e ACCOUNT_CLOSURE só podem ser usados caso o campo: data.revocation.revokedBy tenha o valor TPP ou ASPSP, ou seja, somente no caso de revogação unilateral pela iniciadora ou detentora.  \n        • INFORMACAO_ADICIONAL_REVOGACAO_REQUERIDA: O campo data.revocation.reason.additionalInformation é obrigatório quando a revogação for feita pela iniciadora ou pela detentora unilateralmente, ou seja, o campo revokedBy igual a TPP ou ASPSP e o motivo de revogação for OTHER.\n  parameters:\n    consentId:\n      name: consentId\n      in: path\n      description: |\n        O consentId é o identificador único do consentimento a ser revogado e deverá ser um URN - Uniform Resource Name.\n      required: true\n      schema:\n        type: string\n        pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\\-.:=@;$_!*''%\\/?#]+$'\n        maxLength: 256\n    paymentId:\n      name: paymentId\n      in: path\n      description: Identificador da operação de pagamento.\n      required: true\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n        maxLength: 100\n    Authorization:\n      name: Authorization\n      in: header\n      description: Cabeçalho HTTP padrão. Permite que as credenciais sejam fornecidas dependendo do tipo de recurso solicitado\n      required: true\n      schema:\n        type: string\n        pattern: '[\\w\\W\\s]*'\n        maxLength: 2048\n    xCustomerUserAgent:\n      name: x-customer-user-agent\n      in: header\n      description: Indica o user-agent que o usuário utiliza.\n      required: false\n      schema:\n        type: string\n        pattern: '[\\w\\W\\s]*'\n        minLength: 1\n        maxLength: 100\n    xFapiAuthDate:\n      name: x-fapi-auth-date\n      in: header\n      description: 'Data em que o usuário logou pela última vez com o receptor. Representada de acordo com a [RFC7231](https://tools.ietf.org/html/rfc7231).Exemplo: Sun, 10 Sep 2017 19:43:31 UTC'\n      required: false\n      schema:\n        type: string\n        pattern: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$'\n        minLength: 29\n        maxLength: 29\n    xFapiCustomerIpAddress:\n      name: x-fapi-customer-ip-address\n      in: header\n      description: O endereço IP do usuário se estiver atualmente logado com o receptor.\n      required: false\n      schema:\n        type: string\n        pattern: '[\\w\\W\\s]*'\n        minLength: 1\n        maxLength: 100\n    xFapiInteractionId:\n      name: x-fapi-interaction-id\n      in: header\n      description: 'Um UID [RFC4122](https://tools.ietf.org/html/rfc4122) usado como um ID de correlação. Se fornecido, o transmissor deve \"reproduzir\" esse valor no cabeçalho de resposta.'\n      required: false\n      schema:\n        type: string\n        pattern: '^[a-zA-Z0-9][a-zA-Z0-9\\-]{0,99}$'\n        minLength: 1\n        maxLength: 100\n    XIdempotencyKey:\n      name: x-idempotency-key\n      in: header\n      description: Cabeçalho HTTP personalizado. Identificador de solicitação exclusivo para suportar a idempotência.\n      required: true\n      schema:\n        type: string\n        maxLength: 40\n        pattern: ^(?!\\s)(.*)(\\S)$\n  securitySchemes:\n    OpenId:\n      type: openIdConnect\n      openIdConnectUrl: 'https://auth.mockbank.poc.raidiam.io/.well-known/openid-configuration'\n    OAuth2ClientCredentials:\n      type: oauth2\n      description: Fluxo OAuth necessário para que a iniciadora possa iniciar pagamentos. Requer o processo de redirecionamento e autenticação do usuário.\n      flows:\n        clientCredentials:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            payments: Escopo necessário para acesso à API Payment Initiation.\n    OAuth2AuthorizationCode:\n      type: oauth2\n      description: Fluxo OAuth necessário para que a iniciadora possa iniciar pagamentos. Requer o processo de redirecionamento e autenticação do usuário.\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://authserver.example/token'\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            payments: Escopo necessário para acesso à API Payment Initiation.\n  responses:\n    BadRequest:\n      description: 'A requisição foi malformada, omitindo atributos obrigatórios, seja no payload ou através de atributos na URL.'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    Forbidden:\n      description: O token tem escopo incorreto ou uma política de segurança foi violada\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    InternalServerError:\n      description: Ocorreu um erro no gateway da API ou no microsserviço\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    MethodNotAllowed:\n      description: O consumidor tentou acessar o recurso com um método não suportado\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    NotAcceptable:\n      description: A solicitação continha um cabeçalho Accept diferente dos tipos de mídia permitidos ou um conjunto de caracteres diferente de UTF-8\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    NotFound:\n      description: O recurso solicitado não existe ou não foi implementado\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    TooManyRequests:\n      description: 'A operação foi recusada, pois muitas solicitações foram feitas dentro de um determinado período ou o limite global de requisições concorrentes foi atingido'\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n        Retry-After:\n          description: |\n            Cabeçalho que indica o tempo (em segundos) que o cliente deverá aguardar para realizar uma nova tentativa de chamada. Este cabeçalho deverá estar presente quando o código HTTP de retorno for 429 Too many requests.\n          schema:\n            description: |\n              Cabeçalho que indica o tempo (em segundos) que o cliente deverá aguardar para realizar uma nova tentativa de chamada. Este cabeçalho deverá estar presente quando o código HTTP de retorno for 429 Too many requests.\n            type: integer\n    UnprocessableEntityConsents:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/422ResponseErrorCreateConsent'\n          examples:\n            Forma de pagamento inválida:\n              summary: Forma de pagamento inválida\n              value:\n                errors:\n                  - code: FORMA_PGTO_INVALIDA\n                    title: Forma de pagamento inválida.\n                    detail: Meio de pagamento inválido.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    UnprocessableEntityPixPayments:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/422ResponseErrorCreatePixPayment'\n          examples:\n            Saldo insuficiente:\n              summary: Saldo insuficiente\n              value:\n                errors:\n                  - code: SALDO_INSUFICIENTE\n                    title: Saldo insuficiente.\n                    detail: A conta selecionada não possui saldo suficiente para realizar o pagamento.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    Unauthorized:\n      description: Cabeçalho de autenticação ausente/inválido ou token inválido\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    UnsupportedMediaType:\n      description: O formato do payload não é um formato suportado.\n      content:\n        application/json; charset=utf-8:\n          schema:\n            $ref: '#/components/schemas/ResponseError'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    UnprocessableEntityPatchConsent:\n      description: 'A solicitação foi bem formada, mas não pôde ser processada devido à lógica de negócios específica da solicitação.'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/422ResponseErrorPatchConsent'\n          examples:\n            Motivo de revogação não permitido:\n              summary: Motivo de revogação não permitido\n              value:\n                errors:\n                  - code: MOTIVO_REVOGACAO_NAO_PERMITIDO\n                    title: Motivo de revogação não permitido.\n                    detail: Motivo de revogação não permitido.\n                meta:\n                  totalRecords: 1\n                  totalPages: 1\n                  requestDateTime: '2021-05-21T08:30:00Z'\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n    201PaymentsConsentsConsentCreated:\n      description: Consentimento de pagamento criado com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n    200PaymentsConsentsConsentIdRead:\n      description: Dados do consentimento de pagamento obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n    201PaymentsInitiationPixPaymentCreated:\n      description: Iniciação de pagamento Pix criada com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/ResponsePixPayment'\n    200PaymentsInitiationPixPaymentIdRead:\n      description: Dados de iniciação de pagamento Pix obtidos com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/ResponsePixPayment'\n    200PatchPaymentsConsent:\n      description: Revogação do Consentimento informado com sucesso.\n      headers:\n        x-fapi-interaction-id:\n          description: |\n            Um UUID RFC4122 usado como um ID de correlação. O transmissor deve usar o mesmo valor recebido na requisição para o cabeçalho de resposta recebido na requisição, caso não tenha sido fornecido, deve se usar um UUID RFC4122.\n          schema:\n            $ref: '#/components/schemas/XFapiInteractionId'\n      content:\n        application/jwt:\n          schema:\n            $ref: '#/components/schemas/ResponsePaymentConsent'\n"
		}
	},
	"Error": "parse: parse spec: paths: /consents: post: operation \"paymentsPostConsents\": responses: 201: resolve \"#/components/responses/201PaymentsConsentsConsentCreated\" reference: content: \"application/jwt\": schema: parse schema: reference \"#/components/schemas/ResponsePaymentConsent\": parse schema: links: parse schema: reference \"#/components/schemas/ResponsePixPayment/properties/links\": resolve reference \"#/components/schemas/ResponsePixPayment/properties/links\": schema not found"
}