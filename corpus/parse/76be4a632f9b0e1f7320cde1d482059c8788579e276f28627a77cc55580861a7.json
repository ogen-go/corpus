{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/springframeworkguru/spring-cloud-contract-oa3"
		},
		"file": {
			"name": "openapi_petstore.yml",
			"size": 0,
			"path": "src/test/resources/openapi/openapi_petstore.yml",
			"byteSize": 4097,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: 1.0.0\n  title: Swagger Petstore\n  license:\n    name: MIT\nservers:\n  - url: http://petstore.swagger.io/v1\npaths:\n  /pets:\n    get:\n      summary: List all pets\n      operationId: listPets\n      tags:\n        - pets\n      # Define Contracts\n      x-contracts:\n        - contractId: 1\n          name: Test List All Pets, No Limit\n          requestHeaders:\n            - Content-type: application/json\n          serviceName: serviceA\n        - contractId: 2\n          name: Test List All Pets, Limit 5\n          requestHeaders:\n            - Content-type: application/json\n          serviceName: serviceB\n      parameters:\n        - name: limit\n          in: query\n          description: How many items to return at one time (max 100)\n          required: false\n          schema:\n            type: integer\n            format: int32\n          # Define Parameters for Contracts\n          x-contracts:\n            - contractId: 1\n              value: null\n            - contractId: 2\n              value: 5\n      responses:\n        '200':\n          description: An paged array of pets\n          headers:\n            x-next:\n              description: A link to the next page of responses\n              schema:\n                type: string\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n          #Define Expectations for Contracts (expecting 200, application/json response and below conditions)\n          x-contracts:\n            - contractId: 1\n              matchers:\n                    path: $.*\n                    maxOccurance: 25\n            - contractId: 2\n              matchers:\n                    path: $.*\n                    maxOccurance: 25\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      description: Creates a new pet in the store.  Duplicates are allowed\n      operationId: addPet\n      # Define Contracts\n      x-contracts:\n        - contractId: 1\n          name: Test Create Pet\n          serviceName: serviceC\n          requestHeaders:\n            - Content-type: application/json\n      requestBody:\n        description: Pet to add to the store\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NewPet'\n        x-contracts:\n            - contractId: 1\n              body:\n                name: Jake\n      responses:\n        '200':\n          description: pet response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Pet'\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n  /pets/{petId}:\n    get:\n      summary: Info for a specific pet\n      operationId: showPetById\n      tags:\n        - pets\n      parameters:\n        - name: petId\n          in: path\n          required: true\n          description: The id of the pet to retrieve\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Expected response to a valid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pets\"\n        default:\n          description: unexpected error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\ncomponents:\n  schemas:\n    Pet:\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n        tag:\n          type: string\n    Pets:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Pet\"\n    Error:\n      required:\n        - code\n        - message\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string",
			"canonicalURL": "/github.com/springframeworkguru/spring-cloud-contract-oa3@20cec69a6f9b7e37d2a11e6e8b7469e73f513630/-/blob/src/test/resources/openapi/openapi_petstore.yml",
			"externalURLs": [
				{
					"url": "https://github.com/springframeworkguru/spring-cloud-contract-oa3/blob/20cec69a6f9b7e37d2a11e6e8b7469e73f513630/src/test/resources/openapi/openapi_petstore.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/pets\": at 1:475: post: operation \"addPet\": at 1:1592: requestBody: at 1:1702: content: application/json: at 1:1733: schema: at 1:1743: parse schema: resolve \"#/components/schemas/NewPet\": find schema: resolve \"#/components/schemas/NewPet\": can't find value for \"components/schemas/NewPet\""
}