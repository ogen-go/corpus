{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hyperledger-labs/blockchain-carbon-accounting"
		},
		"file": {
			"name": "openapi.json",
			"size": 0,
			"path": "fabric/typescript_app/src/static/openapi.json",
			"byteSize": 25279,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"description\": \"REST-API for connecting to Carbon Accounting network of Hyperledger CA2 SIG.\",\n        \"version\": \"1.0.0\",\n        \"title\": \"Carbon Accounting\",\n        \"contact\": {\n            \"email\": \"r.klemens@yahoo.de\"\n        }\n    },\n    \"servers\": [{ \"url\": \"http://localhost:9000/api/v1/emissions-data\" }],\n    \"tags\": [\n        {\n            \"name\": \"emissionscontract\",\n            \"description\": \"Functions related to the emissionscontract chaincode\"\n        },\n        {\n            \"name\": \"registerEnroll\",\n            \"description\": \"Functions to register an org admin as well as multiple users\"\n        },\n        {\n            \"name\": \"identity\",\n            \"description\": \"Functions to setup authentication for available identity types\"\n        }\n    ],\n    \"paths\": {\n        \"/emissionscontract/recordEmissions\": {\n            \"post\": {\n                \"tags\": [\"emissionscontract\"],\n                \"summary\": \"Record emissions of utility to EmissionsChannel\",\n                \"description\": \"\",\n                \"operationId\": \"recordEmissions\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/userId\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"multipart/form-data\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/RecordEmissionsReq\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Success. Emissions recorded\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EmissionsData\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input parameters\"\n                    }\n                }\n            }\n        },\n        \"/emissionscontract/recordAuditedEmissionsToken\": {\n            \"post\": {\n                \"tags\": [\"emissionscontract\"],\n                \"summary\": \"Issue an audited emission token to the net-emissions-token-network from emissions records on the ledger\",\n                \"description\": \"Issue an audited emission token to the net-emissions-token-network from emissions records on the ledger\",\n                \"operationId\": \"recordAuditedEmissionsToken\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/userId\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    },\n                    {\n                        \"name\": \"eth_address\",\n                        \"in\": \"header\",\n                        \"required\": false,\n                        \"description\": \"ethereum client's address for signing ethereum tx\",\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\"\n                        }\n                    },\n                    {\n                        \"name\": \"eth_private\",\n                        \"in\": \"header\",\n                        \"required\": false,\n                        \"description\": \"ethereum client's private key for signing ethereum tx\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/recordAuditedEmissionsToken\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/allEmissionsData\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input data\"\n                    }\n                }\n            }\n        },\n        \"/emissionscontract/getEmissionsData/{uuid}\": {\n            \"get\": {\n                \"tags\": [\"emissionscontract\"],\n                \"summary\": \"Get emissions data of utility\",\n                \"description\": \"Get emissions data of utility by ID of party, from and thru data\",\n                \"operationId\": \"getEmissionsData\",\n                \"parameters\": [\n                    {\n                        \"name\": \"uuid\",\n                        \"in\": \"path\",\n                        \"description\": \"UUID of emission record\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/userId\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/EmissionsData\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input data\"\n                    }\n                }\n            }\n        },\n        \"/emissionscontract/getAllEmissionsData/{utilityId}/{partyId}\": {\n            \"get\": {\n                \"tags\": [\"emissionscontract\"],\n                \"summary\": \"Get all emissions data from the past year of utility\",\n                \"description\": \"Get all emissions data of utility by ID of utility and party\",\n                \"operationId\": \"getAllEmissionsData\",\n                \"parameters\": [\n                    {\n                        \"name\": \"utilityId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of Utiltiy\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"USA_EIA_252522444142552441242521\"\n                        }\n                    },\n                    {\n                        \"name\": \"partyId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of party\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"party1\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/userId\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/allEmissionsData\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input data\"\n                    }\n                }\n            }\n        },\n        \"/emissionscontract/getAllEmissionsDataByDateRange/{fromDate}/{thruDate}\": {\n            \"get\": {\n                \"tags\": [\"emissionscontract\"],\n                \"summary\": \"Get all emissions data by a range of dates\",\n                \"description\": \"Get all emissions data by a range of dates\",\n                \"operationId\": \"getAllEmissionsDataByDateRange\",\n                \"parameters\": [\n                    {\n                        \"name\": \"fromDate\",\n                        \"in\": \"path\",\n                        \"description\": \"Starting date of the query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"2020-05-07T10:10:09Z\"\n                        }\n                    },\n                    {\n                        \"name\": \"thruDate\",\n                        \"in\": \"path\",\n                        \"description\": \"End date of the query\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"string\",\n                            \"example\": \"2021-05-07T10:10:09Z\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/userId\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful operation\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/allEmissionsData\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input data\"\n                    }\n                }\n            }\n        },\n        \"/registerEnroll/enroll\": {\n            \"post\": {\n                \"tags\": [\"registerEnroll\"],\n                \"summary\": \"Enroll a client\",\n                \"description\": \"Enroll a client\",\n                \"operationId\": \"enroll\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/EnrollReq\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Success. Admin registered\"\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input parameters\"\n                    }\n                }\n            }\n        },\n        \"/registerEnroll/register\": {\n            \"post\": {\n                \"tags\": [\"registerEnroll\"],\n                \"summary\": \"Registers a user.\",\n                \"description\": \"Registers a user by userId and affiliation\",\n                \"operationId\": \"registerUser\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/userId\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/vaultToken\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/webSocketKey\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/RegisterClientReq\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Success. User registered\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RegisterClientRes\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input parameters\"\n                    }\n                }\n            }\n        },\n        \"/identity/webSocket\": {\n            \"post\": {\n                \"tags\": [\"identity\"],\n                \"summary\": \"Setup WS-X.509 identity authentication\",\n                \"description\": \"Provide user with URL and session ID to open connection with ws-identity server. The respone shoul dbe passed to the client's device, open the ws connection and ouput the fial session ID and signature pair used to authorize the app to access the clients key.\",\n                \"operationId\": \"idWebSocket\",\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/keyName\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/pubKeyHex\"\n                    }\n                ],\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Success. User session id generated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/WsX509SessionRes\"\n                                }\n                            }\n                        }\n                    },\n                    \"400\": {\n                        \"description\": \"Error\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict with data content\"\n                    },\n                    \"412\": {\n                        \"description\": \"Invalid input parameters\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"RecordEmissionsReq\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"endpoint\",\n                    \"query\",\n                    \"utilityId\",\n                    \"partyId\",\n                    \"fromDate\",\n                    \"thruDate\",\n                    \"energyUseAmount\",\n                    \"energyUseUom\"\n                ],\n                \"properties\": {\n                    \"endpoint\": {\n                        \"type\": \"string\",\n                        \"example\": \"'http://host.docker.internal:3002/emissionsRecord'\"\n                    },\n                    \"query\": {\n                        \"type\": \"string\",\n                        \"example\": \"getEmissionsByUtilityLookUpItem\"\n                    },\n                    \"utilityId\": {\n                        \"type\": \"string\",\n                        \"example\": \"USA_EIA_252522444142552441242521\"\n                    },\n                    \"partyId\": {\n                        \"type\": \"string\",\n                        \"example\": \"party1\"\n                    },\n                    \"fromDate\": {\n                        \"type\": \"string\",\n                        \"example\": \"2020-05-07T10:10:09Z\"\n                    },\n                    \"thruDate\": {\n                        \"type\": \"string\",\n                        \"example\": \"2021-05-07T10:10:09Z\"\n                    },\n                    \"energyUseAmount\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\",\n                        \"example\": 100\n                    },\n                    \"energyUseUom\": {\n                        \"type\": \"string\",\n                        \"example\": \"kWh\"\n                    },\n                    \"emissionsDoc\": {\n                        \"type\": \"string\",\n                        \"format\": \"binary\"\n                    }\n                }\n            },\n            \"recordAuditedEmissionsToken\": {\n                \"type\": \"object\",\n                \"required\": [\"partyId\", \"addressToIssue\", \"emissionsRecordsToAudit\", \"txID\"],\n                \"properties\": {\n                    \"partyId\": {\n                        \"type\": \"string\"\n                    },\n                    \"addressToIssue\": {\n                        \"type\": \"string\"\n                    },\n                    \"emissionsRecordsToAudit\": {\n                        \"type\": \"string\"\n                    },\n                    \"txID\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"EmissionsData\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"utilityId\": {\n                        \"type\": \"string\"\n                    },\n                    \"partyId\": {\n                        \"type\": \"string\"\n                    },\n                    \"fromDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"thruDate\": {\n                        \"type\": \"string\"\n                    },\n                    \"emissionsAmount\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                    },\n                    \"emissionsUom\": {\n                        \"type\": \"string\"\n                    },\n                    \"renewableEnergyUseAmount\": {\n                        \"type\": \"number\"\n                    },\n                    \"nonrenewableEnergyUseAmount\": {\n                        \"type\": \"number\"\n                    },\n                    \"energyUseUom\": {\n                        \"type\": \"number\"\n                    },\n                    \"factorSource\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"md5\": {\n                        \"type\": \"string\"\n                    },\n                    \"tokenId\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"allEmissionsData\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/EmissionsData\"\n                }\n            },\n            \"EnrollReq\": {\n                \"type\": \"object\",\n                \"required\": [\"enrollmentID\", \"enrollmentSecret\"],\n                \"properties\": {\n                    \"enrollmentID\": {\n                        \"type\": \"string\",\n                        \"example\": \"admin\"\n                    },\n                    \"enrollmentSecret\": {\n                        \"type\": \"string\",\n                        \"example\": \"adminpw\"\n                    }\n                }\n            },\n            \"RegisterClientReq\": {\n                \"type\": \"object\",\n                \"required\": [\"enrollmentID\", \"affiliation\"],\n                \"properties\": {\n                    \"enrollmentID\": {\n                        \"type\": \"string\",\n                        \"example\": \"client1\"\n                    },\n                    \"affiliation\": {\n                        \"type\": \"string\",\n                        \"example\": \"auditor1.department1\"\n                    }\n                }\n            },\n            \"RegisterClientRes\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"enrollmentID\": {\n                        \"type\": \"string\",\n                        \"example\": \"client1\"\n                    },\n                    \"enrollmentSecret\": {\n                        \"type\": \"string\"\n                    }\n                }\n            },\n            \"WsX509SessionRes\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"sessionId\": {\n                        \"type\": \"string\",\n                        \"example\": \"random session ID hex\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"example\": \"ws://localhost:8700/sessions\"\n                    }\n                }\n            }\n        },\n        \"parameters\": {\n            \"vaultToken\": {\n                \"name\": \"vault_token\",\n                \"description\": \"vault token required if server is using a vault transit key to sign blockchain transactions\",\n                \"in\": \"header\",\n                \"required\": false,\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"\"\n                }\n            },\n            \"keyName\": {\n                \"name\": \"key_name\",\n                \"in\": \"query\",\n                \"required\": true,\n                \"description\": \"userId of the calling client\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"admin\"\n                }\n            },\n            \"pubKeyHex\": {\n                \"name\": \"pub_key_hex\",\n                \"in\": \"header\",\n                \"required\": false,\n                \"description\": \"public key of clients userId required when requesting a session ticket on the secure web-socket identity server\",\n                \"schema\": {\n                    \"type\": \"string\",\n                    \"example\": \"[hex address]\"\n                }\n            },\n            \"webSocketKey\": {\n                \"name\": \"web_socket_key\",\n                \"description\": \"web-socket key required by the app to communicate with the cilent's external key file\",\n                \"in\": \"header\",\n                \"required\": false,\n                \"type\": \"object\",\n                \"example\": \"{sessionId:[string],signature:[string]}\",\n                \"schema\": {\n                    \"properties\": {\n                        \"sessionId\": {\n                            \"type\": \"string\",\n                            \"example\": \"\"\n                        },\n                        \"signature\": {\n                            \"description\": \"signature of session id required to access client keys over the ws-identity server\",\n                            \"type\": \"string\",\n                            \"example\": \"\"\n                        }\n                    },\n                    \"required\": [\"sessionId\", \"signature\"]\n                }\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/hyperledger-labs/blockchain-carbon-accounting@0ad146b782fcad40ab4bb6f8411d33b4ae601a07/-/blob/fabric/typescript_app/src/static/openapi.json",
			"externalURLs": [
				{
					"url": "https://github.com/hyperledger-labs/blockchain-carbon-accounting/blob/0ad146b782fcad40ab4bb6f8411d33b4ae601a07/fabric/typescript_app/src/static/openapi.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/emissionscontract/getAllEmissionsData/{utilityId}/{partyId}\": get: operation \"getAllEmissionsData\": parameters: parse parameter \"\": at fabric/typescript_app/src/static/openapi.json:221:33: can't find value for \"components/parameters/userId\""
}