{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/lesspass/lesspass"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "doc/openapi.yaml",
			"byteSize": 13329,
			"content": "openapi: 3.0.0\ninfo:\n  title: LessPass Server API\n  version: 0.1.0\nservers:\n  - url: https://api.lesspass.com/\npaths:\n  /auth/users/:\n    summary: Create new user\n    post:\n      tags:\n        - Auth\n      summary: Create new user\n      description: Create a new user\n      operationId: authusers\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_signup_login'\n        description: New user email and password\n        required: true\n      responses:\n        '201':\n          description: User creation suscessfully\n          content:\n            application/json:\n              example:\n                key: null\n                email: user@example.com\n                id: 14348\n        '400':\n          description: User creation error\n          content:\n            application/json:\n              examples:\n                email problem:\n                  value:\n                    email: [ \"Enter a valid email address.\" ]\n                password problem:\n                  value:\n                    password:\n                      - This password is too short. It must contain at least 8 characters.\n                      - This password is too common.\n                      - This password is entirely numeric.\n  /auth/users/reset_password/:\n    summary: Recover lost password\n    post:\n      tags:\n        - Auth\n      summary: Recover lost password\n      description: Recover lost password of existing user\n      operationId: authusersresetpassword\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_reset_password'\n        description: New user email and password\n        required: true\n      responses:\n        '204':\n          description: Recover suscessfully\n  /auth/users/set_password/:\n    summary: Change user password\n    post:\n      tags:\n        - Auth\n      summary: Change user password\n      description: Change password of existing user\n      operationId: authuserssetpassword\n      security:\n        - JWTAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_set_password'\n        description: New user email and password\n        required: true\n      responses:\n        '204':\n          description: Password changed suscessfully\n        '401':\n          $ref: '#/components/responses/unauthorized_error'\n  /auth/jwt/create/:\n    summary: Perform user login\n    post:\n      tags:\n        - Auth\n      summary: Authenticate an existing user\n      description: Authenticate an existing user\n      operationId: authjwtcreate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/user_signup_login'\n        description: New user email and password\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/auth_jwt_create'\n  /auth/jwt/refresh/:\n    summary: Perform token refresh\n    post:\n      tags:\n        - Auth\n      summary: Refresh user token\n      description: Refresh user token\n      operationId: authjwtrefresh\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/jwt_token_refresh'\n        description: Refresh token\n        required: true\n      responses:\n        '201':\n          $ref: '#/components/responses/auth_jwt_refresh'\n        '400':\n          description: Refresh token is in blank\n          content:\n            application/json:\n              example:\n                refresh: [ \"This field may not be blank.\" ]\n        '401':\n          description: Refresh token has wrong type, is not valid or expired\n          content:\n            application/json:\n              examples:\n                token is invalid or expired:\n                  value:\n                    detail: Token is invalid or expired\n                    code: token_not_valid\n                token has wrong type:\n                  value:\n                    detail: Token has wrong type\n                    code: token_not_valid\n  /passwords/:\n    summary: Work with stored passwords\n    get:\n      tags:\n        - Passwords\n      summary: Get passwords list\n      description: Get passwords list\n      operationId: passwordsget\n      security:\n        - JWTAuth: []\n      responses:\n        '200':\n          $ref: '#/components/responses/passwords'\n        '401':\n          $ref: '#/components/responses/unauthorized_error'\n    post:\n      tags:\n        - Passwords\n      summary: Create new password\n      description: Create new password\n      operationId: passwordspost\n      security:\n        - JWTAuth: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/password'\n        description: Create new password\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/password'\n        '401':\n          $ref: '#/components/responses/unauthorized_error'\n  /passwords/{password_id}/:\n    summary: Modify or delete stored password\n    put:\n      tags:\n        - Passwords\n      summary: Modify existing password\n      description: Modify existing password\n      operationId: passwordsidput\n      security:\n        - JWTAuth: []\n      parameters:\n        - $ref: '#/components/parameters/password_id'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/password'\n        description: Modify existing password\n        required: true\n      responses:\n        '200':\n          $ref: '#/components/responses/password'\n        '400':\n          description: Parse error\n          content:\n            application/json:\n              examples:\n                invalid values in fields:\n                  value:\n                    field: [ \"A valid value is required.\" ]\n                invalid json:\n                  value:\n                    detail: \"JSON parse error - Expecting value: line 1 column 1 (char 0)\"\n        '401':\n          $ref: '#/components/responses/unauthorized_error'\n        '404':\n          description: Password ID not found\n          content:\n            application/json:\n              example:\n                detail: Not found.\n    delete:\n      tags:\n        - Passwords\n      summary: Modify existing password\n      description: Modify existing password\n      operationId: passwordsiddelete\n      security:\n        - JWTAuth: []\n      parameters:\n        - $ref: '#/components/parameters/password_id'\n      responses:\n        '204':\n          description: Deletion done\n        '404':\n          description: Password ID not found\n          content:\n            application/json:\n              example:\n                detail: Not found.\ncomponents:\n  parameters:\n    password_id:\n      in: path\n      name: password_id\n      required: true\n      description: The ID of password\n      schema:\n        type: string\n  responses:\n    auth_jwt_create:\n      description: successful operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/jwt_response'\n    auth_jwt_refresh:\n      description: successful operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/jwt_response'\n    password:\n      description: successful operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/password_response'\n    passwords:\n      description: successful operation\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/passwords_response'\n    unauthorized_error:\n      description: Unauthorized error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/error_response'\n          example:\n            detail: Given token not valid for any token type\n            code: token_not_valid\n            messages:\n              - token_class: AccessToken\n                token_type: access\n                message: Token is invalid or expired\n  securitySchemes:\n    JWTAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    user_signup_login:\n      required:\n        - email\n        - password\n      type: object\n      properties:\n        email:\n          description: User email\n          type: string\n          format: email\n        password:\n          description: User password\n          type: string\n          minLength: 8\n          format: password\n    user_reset_password:\n      required:\n        - email\n      type: object\n      properties:\n        email:\n          description: User email\n          type: string\n          format: email\n    user_set_password:\n      required:\n        - current_password\n        - new_password\n        - re_new_password\n      type: object\n      properties:\n        current_password:\n          description: User current password\n          type: string\n          minLength: 8\n          format: password\n        new_password:\n          description: User new password\n          type: string\n          minLength: 8\n          format: password\n        re_new_password:\n          description: Repeat user new password\n          type: string\n          minLength: 8\n          format: password\n    jwt_token_refresh:\n      required:\n        - refresh\n      type: object\n      properties:\n        refresh:\n          description: Refresh token\n          type: string\n    jwt_response:\n      type: object\n      properties:\n        access:\n          description: Access token\n          type: string\n        refresh:\n          description: Refresh token\n          type: string\n    password:\n      type: object\n      required:\n        - login\n        - site\n        - uppercase\n        - lowercase\n        - numbers\n        - symbols\n        - length\n        - counter\n        - version\n      properties:\n        login:\n          description: User login\n          type: string\n          example: user@example.com\n        site:\n          description: User login\n          type: string\n          example: example.com\n        uppercase:\n          description: Generated password has uppercase characters\n          type: boolean\n          default: true\n        lowercase:\n          description: Generated password has lowercase characters\n          type: boolean\n          default: true\n        numbers:\n          description: Generated password has numbers\n          type: boolean\n          default: true\n        symbols:\n          description: Generated password has symbol characters\n          type: boolean\n          default: true\n        length:\n          description: Password length\n          type: integer\n          default: 16\n        counter:\n          description: Password counter\n          type: integer\n          default: 1\n        version:\n          description: Password version algorithm\n          type: integer\n          default: 2\n    password_response:\n      type: object\n      properties:\n        id:\n          description: Password unique id\n          type: string\n          format: uuid\n        login:\n          description: User login\n          type: string\n          example: user@example.com\n        site:\n          description: User login\n          type: string\n          example: example.com\n        uppercase:\n          description: Generated password has uppercase characters\n          type: boolean\n          default: true\n        lowercase:\n          description: Generated password has lowercase characters\n          type: boolean\n          default: true\n        numbers:\n          description: Generated password has numbers\n          type: boolean\n          default: true\n        symbols:\n          description: Generated password has symbol characters\n          type: boolean\n          default: true\n        length:\n          description: Password length\n          type: integer\n          default: 16\n        counter:\n          description: Password counter\n          type: integer\n          default: 1\n        version:\n          description: Password version algorithm\n          type: integer\n          default: 2\n        created:\n          description: Creation date\n          type: string\n          format: date-time\n        modified:\n          description: Creation date\n          type: string\n          format: date-time\n    passwords_response:\n      type: object\n      properties:\n        count:\n          description: Password items count\n          type: integer\n          example: 1\n        previous:\n          description: Previous page\n          type: integer\n          default: null\n        next:\n          description: Next page\n          type: integer\n          default: null\n        results:\n          description: Password items\n          type: array\n          items:\n            $ref: '#/components/schemas/password_response'\n    error_response:\n      type: object\n      properties:\n        detail:\n          description: Error detail\n          type: string\n        code:\n          description: Error code\n          type: string\n        messages:\n          description: Error messages\n          type: array\n          items:\n            type: object\n",
			"canonicalURL": "/github.com/lesspass/lesspass@314fc7386f2c29750c9b68c801a2c078706b2b82/-/blob/doc/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/lesspass/lesspass/blob/314fc7386f2c29750c9b68c801a2c078706b2b82/doc/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"passwords_response\": parse schema: property \"next\": at 1:3785: parse default: unexpected default \"null\" value"
}