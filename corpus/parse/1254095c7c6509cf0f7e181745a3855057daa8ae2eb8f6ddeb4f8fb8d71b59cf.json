{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "data_lake_store.yaml",
			"size": 0,
			"path": "providers/src/azure/v0.2.0/services/data_lake_store.yaml",
			"byteSize": 93618,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: DataLake Store Account Management Client (Microsoft.DataLakeStore)\n  description: DataLake Store Account Management Client\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-29-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  parameters:\n    SubscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.\n      required: true\n      schema:\n        type: string\n    ApiVersionParameter:\n      name: api-version\n      in: query\n      description: Client Api Version.\n      required: true\n      schema:\n        type: string\n    ResourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The name of the Azure resource group.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    AccountNameParameter:\n      name: accountName\n      in: path\n      description: The name of the Data Lake Store account.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n  schemas:\n    Resource:\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        location:\n          readOnly: true\n          type: string\n          description: The resource location.\n        tags:\n          readOnly: true\n          type: object\n          additionalProperties:\n            type: string\n          description: The resource tags.\n      x-ms-azure-resource: true\n      description: The resource model definition.\n      type: object\n    SubResource:\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n      x-ms-azure-resource: true\n      description: The resource model definition for a nested resource.\n      type: object\n    DataLakeStoreAccount:\n      description: Data Lake Store account information.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        location:\n          readOnly: true\n          type: string\n          description: The resource location.\n        tags:\n          readOnly: true\n          type: object\n          additionalProperties:\n            type: string\n          description: The resource tags.\n        defaultGroup:\n          readOnly: true\n          type: string\n          description: The default owner group for all new folders and files created in the Data Lake Store account.\n        encryptionConfig:\n          readOnly: true\n          $ref: '#/components/schemas/EncryptionConfig'\n          description: The Key Vault encryption configuration.\n        encryptionState:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: EncryptionState\n            modelAsString: false\n          description: The current state of encryption for this Data Lake Store account.\n        encryptionProvisioningState:\n          readOnly: true\n          type: string\n          enum:\n            - Creating\n            - Succeeded\n          x-ms-enum:\n            name: EncryptionProvisioningState\n            modelAsString: false\n          description: The current state of encryption provisioning for this Data Lake Store account.\n        firewallRules:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/FirewallRule'\n          description: The list of firewall rules associated with this Data Lake Store account.\n        virtualNetworkRules:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/VirtualNetworkRule'\n          description: The list of virtual network rules associated with this Data Lake Store account.\n        firewallState:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallState\n            modelAsString: false\n          description: The current state of the IP address firewall for this Data Lake Store account.\n        firewallAllowAzureIps:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallAllowAzureIpsState\n            modelAsString: false\n          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.\n        trustedIdProviders:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/TrustedIdProvider'\n          description: The list of trusted identity providers associated with this Data Lake Store account.\n        trustedIdProviderState:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: TrustedIdProviderState\n            modelAsString: false\n          description: The current state of the trusted identity provider feature for this Data Lake Store account.\n        newTier:\n          readOnly: true\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier to use for next month.\n        currentTier:\n          readOnly: true\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier in use for the current month.\n        identity:\n          readOnly: true\n          $ref: '#/components/schemas/EncryptionIdentity'\n          description: The Key Vault encryption identity, if any.\n      type: object\n    DataLakeStoreAccountBasic:\n      description: Basic Data Lake Store account information, returned on list calls.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        location:\n          readOnly: true\n          type: string\n          description: The resource location.\n        tags:\n          readOnly: true\n          type: object\n          additionalProperties:\n            type: string\n          description: The resource tags.\n        accountId:\n          readOnly: true\n          type: string\n          format: uuid\n          description: The unique identifier associated with this Data Lake Store account.\n        provisioningState:\n          readOnly: true\n          type: string\n          enum:\n            - Failed\n            - Creating\n            - Running\n            - Succeeded\n            - Patching\n            - Suspending\n            - Resuming\n            - Deleting\n            - Deleted\n            - Undeleting\n            - Canceled\n          x-ms-enum:\n            name: DataLakeStoreAccountStatus\n            modelAsString: false\n          description: The provisioning status of the Data Lake Store account.\n        state:\n          readOnly: true\n          type: string\n          enum:\n            - Active\n            - Suspended\n          x-ms-enum:\n            name: DataLakeStoreAccountState\n            modelAsString: false\n          description: The state of the Data Lake Store account.\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: The account creation time.\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: The account last modified time.\n        endpoint:\n          readOnly: true\n          type: string\n          description: The full CName endpoint for this account.\n      type: object\n    DataLakeStoreAccountProperties:\n      description: Data Lake Store account properties information.\n      properties:\n        accountId:\n          readOnly: true\n          type: string\n          format: uuid\n          description: The unique identifier associated with this Data Lake Store account.\n        provisioningState:\n          readOnly: true\n          type: string\n          enum:\n            - Failed\n            - Creating\n            - Running\n            - Succeeded\n            - Patching\n            - Suspending\n            - Resuming\n            - Deleting\n            - Deleted\n            - Undeleting\n            - Canceled\n          x-ms-enum:\n            name: DataLakeStoreAccountStatus\n            modelAsString: false\n          description: The provisioning status of the Data Lake Store account.\n        state:\n          readOnly: true\n          type: string\n          enum:\n            - Active\n            - Suspended\n          x-ms-enum:\n            name: DataLakeStoreAccountState\n            modelAsString: false\n          description: The state of the Data Lake Store account.\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: The account creation time.\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: The account last modified time.\n        endpoint:\n          readOnly: true\n          type: string\n          description: The full CName endpoint for this account.\n        defaultGroup:\n          readOnly: true\n          type: string\n          description: The default owner group for all new folders and files created in the Data Lake Store account.\n        encryptionConfig:\n          readOnly: true\n          $ref: '#/components/schemas/EncryptionConfig'\n          description: The Key Vault encryption configuration.\n        encryptionState:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: EncryptionState\n            modelAsString: false\n          description: The current state of encryption for this Data Lake Store account.\n        encryptionProvisioningState:\n          readOnly: true\n          type: string\n          enum:\n            - Creating\n            - Succeeded\n          x-ms-enum:\n            name: EncryptionProvisioningState\n            modelAsString: false\n          description: The current state of encryption provisioning for this Data Lake Store account.\n        firewallRules:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/FirewallRule'\n          description: The list of firewall rules associated with this Data Lake Store account.\n        virtualNetworkRules:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/VirtualNetworkRule'\n          description: The list of virtual network rules associated with this Data Lake Store account.\n        firewallState:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallState\n            modelAsString: false\n          description: The current state of the IP address firewall for this Data Lake Store account.\n        firewallAllowAzureIps:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallAllowAzureIpsState\n            modelAsString: false\n          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.\n        trustedIdProviders:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/TrustedIdProvider'\n          description: The list of trusted identity providers associated with this Data Lake Store account.\n        trustedIdProviderState:\n          readOnly: true\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: TrustedIdProviderState\n            modelAsString: false\n          description: The current state of the trusted identity provider feature for this Data Lake Store account.\n        newTier:\n          readOnly: true\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier to use for next month.\n        currentTier:\n          readOnly: true\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier in use for the current month.\n      type: object\n    DataLakeStoreAccountPropertiesBasic:\n      properties:\n        accountId:\n          readOnly: true\n          type: string\n          format: uuid\n          description: The unique identifier associated with this Data Lake Store account.\n        provisioningState:\n          readOnly: true\n          type: string\n          enum:\n            - Failed\n            - Creating\n            - Running\n            - Succeeded\n            - Patching\n            - Suspending\n            - Resuming\n            - Deleting\n            - Deleted\n            - Undeleting\n            - Canceled\n          x-ms-enum:\n            name: DataLakeStoreAccountStatus\n            modelAsString: false\n          description: The provisioning status of the Data Lake Store account.\n        state:\n          readOnly: true\n          type: string\n          enum:\n            - Active\n            - Suspended\n          x-ms-enum:\n            name: DataLakeStoreAccountState\n            modelAsString: false\n          description: The state of the Data Lake Store account.\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: The account creation time.\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: The account last modified time.\n        endpoint:\n          readOnly: true\n          type: string\n          description: The full CName endpoint for this account.\n      description: The basic account specific properties that are associated with an underlying Data Lake Store account.\n      type: object\n    DataLakeStoreAccountListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/DataLakeStoreAccountBasic'\n          description: The results of the list operation.\n        nextLink:\n          readOnly: true\n          type: string\n          description: The link (url) to the next page of results.\n      description: Data Lake Store account list information response.\n      type: object\n    EncryptionIdentity:\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - SystemAssigned\n          x-ms-enum:\n            name: EncryptionIdentityType\n            modelAsString: false\n          description: The type of encryption being used. Currently the only supported type is 'SystemAssigned'.\n        principalId:\n          readOnly: true\n          type: string\n          format: uuid\n          description: The principal identifier associated with the encryption.\n        tenantId:\n          readOnly: true\n          type: string\n          format: uuid\n          description: The tenant identifier associated with the encryption.\n      description: The encryption identity properties.\n      type: object\n    EncryptionConfig:\n      required:\n        - type\n      properties:\n        type:\n          type: string\n          enum:\n            - UserManaged\n            - ServiceManaged\n          x-ms-enum:\n            name: EncryptionConfigType\n            modelAsString: false\n          description: The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.\n        keyVaultMetaInfo:\n          $ref: '#/components/schemas/KeyVaultMetaInfo'\n          description: The Key Vault information for connecting to user managed encryption keys.\n      description: The encryption configuration for the account.\n      type: object\n    KeyVaultMetaInfo:\n      required:\n        - keyVaultResourceId\n        - encryptionKeyName\n        - encryptionKeyVersion\n      properties:\n        keyVaultResourceId:\n          type: string\n          description: The resource identifier for the user managed Key Vault being used to encrypt.\n        encryptionKeyName:\n          type: string\n          description: The name of the user managed encryption key.\n        encryptionKeyVersion:\n          type: string\n          description: The version of the user managed encryption key.\n      description: Metadata information used by account encryption.\n      type: object\n    FirewallRule:\n      description: Data Lake Store firewall rule information.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        startIpAddress:\n          readOnly: true\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          readOnly: true\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n      type: object\n    FirewallRuleProperties:\n      properties:\n        startIpAddress:\n          readOnly: true\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          readOnly: true\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n      description: The firewall rule properties.\n      type: object\n    FirewallRuleListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/FirewallRule'\n          description: The results of the list operation.\n        nextLink:\n          readOnly: true\n          type: string\n          description: The link (url) to the next page of results.\n      description: Data Lake Store firewall rule list information.\n      type: object\n    VirtualNetworkRule:\n      description: Data Lake Store virtual network rule information.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        subnetId:\n          readOnly: true\n          type: string\n          description: The resource identifier for the subnet.\n      type: object\n    VirtualNetworkRuleProperties:\n      properties:\n        subnetId:\n          readOnly: true\n          type: string\n          description: The resource identifier for the subnet.\n      description: The virtual network rule properties.\n      type: object\n    VirtualNetworkRuleListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/VirtualNetworkRule'\n          description: The results of the list operation.\n        nextLink:\n          readOnly: true\n          type: string\n          description: The link (url) to the next page of results.\n      description: Data Lake Store virtual network rule list information.\n      type: object\n    TrustedIdProvider:\n      description: Data Lake Store trusted identity provider information.\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The resource identifier.\n        name:\n          readOnly: true\n          type: string\n          description: The resource name.\n        type:\n          readOnly: true\n          type: string\n          description: The resource type.\n        idProvider:\n          readOnly: true\n          type: string\n          description: The URL of this trusted identity provider.\n      type: object\n    TrustedIdProviderProperties:\n      properties:\n        idProvider:\n          readOnly: true\n          type: string\n          description: The URL of this trusted identity provider.\n      description: The trusted identity provider properties.\n      type: object\n    TrustedIdProviderListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/TrustedIdProvider'\n          description: The results of the list operation.\n        nextLink:\n          readOnly: true\n          type: string\n          description: The link (url) to the next page of results.\n      description: Data Lake Store trusted identity provider list information.\n      type: object\n    Operation:\n      properties:\n        name:\n          readOnly: true\n          type: string\n          description: The name of the operation.\n        display:\n          $ref: '#/components/schemas/OperationDisplay'\n          description: The display information for the operation.\n        origin:\n          readOnly: true\n          type: string\n          enum:\n            - user\n            - system\n            - user,system\n          x-ms-enum:\n            name: OperationOrigin\n            modelAsString: true\n          description: The intended executor of the operation.\n      description: An available operation for Data Lake Store.\n      type: object\n    OperationDisplay:\n      properties:\n        provider:\n          readOnly: true\n          type: string\n          description: The resource provider of the operation.\n        resource:\n          readOnly: true\n          type: string\n          description: The resource type of the operation.\n        operation:\n          readOnly: true\n          type: string\n          description: A friendly name of the operation.\n        description:\n          readOnly: true\n          type: string\n          description: A friendly description of the operation.\n      description: The display information for a particular operation.\n      type: object\n    OperationListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/Operation'\n          description: The results of the list operation.\n          x-ms-identifiers:\n            - name\n        nextLink:\n          readOnly: true\n          type: string\n          description: The link (url) to the next page of results.\n      description: The list of available operations for Data Lake Store.\n      type: object\n    CapabilityInformation:\n      properties:\n        subscriptionId:\n          readOnly: true\n          type: string\n          format: uuid\n          description: The subscription credentials that uniquely identifies the subscription.\n        state:\n          readOnly: true\n          type: string\n          enum:\n            - Registered\n            - Suspended\n            - Deleted\n            - Unregistered\n            - Warned\n          x-ms-enum:\n            name: SubscriptionState\n            modelAsString: true\n          description: The subscription state.\n        maxAccountCount:\n          readOnly: true\n          type: integer\n          format: int32\n          description: The maximum supported number of accounts under this subscription.\n        accountCount:\n          readOnly: true\n          type: integer\n          format: int32\n          description: The current number of accounts under this subscription.\n        migrationState:\n          readOnly: true\n          type: boolean\n          description: The Boolean value of true or false to indicate the maintenance state.\n      description: Subscription-level properties and limits for Data Lake Store.\n      type: object\n    UsageName:\n      properties:\n        value:\n          readOnly: true\n          type: string\n          description: Gets a string describing the resource name.\n        localizedValue:\n          readOnly: true\n          type: string\n          description: Gets a localized string describing the resource name.\n      description: The usage names that can be used.\n      type: object\n    Usage:\n      properties:\n        unit:\n          readOnly: true\n          type: string\n          description: Gets the unit of measurement.\n          enum:\n            - Count\n            - Bytes\n            - Seconds\n            - Percent\n            - CountsPerSecond\n            - BytesPerSecond\n          x-ms-enum:\n            name: UsageUnit\n            modelAsString: false\n        id:\n          readOnly: true\n          type: string\n          description: Resource identifier.\n        currentValue:\n          readOnly: true\n          type: integer\n          format: int32\n          description: Gets the current count of the allocated resources in the subscription.\n        limit:\n          readOnly: true\n          type: integer\n          format: int32\n          description: Gets the maximum count of the resources that can be allocated in the subscription.\n        name:\n          $ref: '#/components/schemas/UsageName'\n          readOnly: true\n          description: Gets the name of the type of usage.\n      description: Describes the Resource Usage.\n      type: object\n    UsageListResult:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Usage'\n          description: Gets or sets the list of Storage Resource Usages.\n      description: The response from the List Usages operation.\n      type: object\n    NameAvailabilityInformation:\n      properties:\n        nameAvailable:\n          readOnly: true\n          type: boolean\n          description: The Boolean value of true or false to indicate whether the Data Lake Store account name is available or not.\n        reason:\n          readOnly: true\n          type: string\n          description: The reason why the Data Lake Store account name is not available, if nameAvailable is false.\n        message:\n          readOnly: true\n          type: string\n          description: The message describing why the Data Lake Store account name is not available, if nameAvailable is false.\n      description: Data Lake Store account name availability result information.\n      type: object\n    CreateDataLakeStoreAccountParameters:\n      required:\n        - location\n      properties:\n        defaultGroup:\n          type: string\n          description: The default owner group for all new folders and files created in the Data Lake Store account.\n        encryptionConfig:\n          $ref: '#/components/schemas/EncryptionConfig'\n          description: The Key Vault encryption configuration.\n        encryptionState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: EncryptionState\n            modelAsString: false\n          description: The current state of encryption for this Data Lake Store account.\n        firewallRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateFirewallRuleWithAccountParameters'\n          description: The list of firewall rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        virtualNetworkRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateVirtualNetworkRuleWithAccountParameters'\n          description: The list of virtual network rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        firewallState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallState\n            modelAsString: false\n          description: The current state of the IP address firewall for this Data Lake Store account.\n        firewallAllowAzureIps:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallAllowAzureIpsState\n            modelAsString: false\n          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.\n        trustedIdProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateTrustedIdProviderWithAccountParameters'\n          description: The list of trusted identity providers associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        trustedIdProviderState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: TrustedIdProviderState\n            modelAsString: false\n          description: The current state of the trusted identity provider feature for this Data Lake Store account.\n        newTier:\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier to use for next month.\n        location:\n          type: string\n          description: The resource location.\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: The resource tags.\n        identity:\n          $ref: '#/components/schemas/EncryptionIdentity'\n          description: The Key Vault encryption identity, if any.\n      type: object\n    CreateDataLakeStoreAccountProperties:\n      properties:\n        defaultGroup:\n          type: string\n          description: The default owner group for all new folders and files created in the Data Lake Store account.\n        encryptionConfig:\n          $ref: '#/components/schemas/EncryptionConfig'\n          description: The Key Vault encryption configuration.\n        encryptionState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: EncryptionState\n            modelAsString: false\n          description: The current state of encryption for this Data Lake Store account.\n        firewallRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateFirewallRuleWithAccountParameters'\n          description: The list of firewall rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        virtualNetworkRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateVirtualNetworkRuleWithAccountParameters'\n          description: The list of virtual network rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        firewallState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallState\n            modelAsString: false\n          description: The current state of the IP address firewall for this Data Lake Store account.\n        firewallAllowAzureIps:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallAllowAzureIpsState\n            modelAsString: false\n          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.\n        trustedIdProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/CreateTrustedIdProviderWithAccountParameters'\n          description: The list of trusted identity providers associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        trustedIdProviderState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: TrustedIdProviderState\n            modelAsString: false\n          description: The current state of the trusted identity provider feature for this Data Lake Store account.\n        newTier:\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier to use for next month.\n      type: object\n    UpdateDataLakeStoreAccountParameters:\n      description: Data Lake Store account information to update.\n      properties:\n        defaultGroup:\n          type: string\n          description: The default owner group for all new folders and files created in the Data Lake Store account.\n        encryptionConfig:\n          $ref: '#/components/schemas/UpdateEncryptionConfig'\n          description: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key.\n        firewallRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateFirewallRuleWithAccountParameters'\n          description: The list of firewall rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        virtualNetworkRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateVirtualNetworkRuleWithAccountParameters'\n          description: The list of virtual network rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        firewallState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallState\n            modelAsString: false\n          description: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.\n        firewallAllowAzureIps:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallAllowAzureIpsState\n            modelAsString: false\n          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.\n        trustedIdProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateTrustedIdProviderWithAccountParameters'\n          description: The list of trusted identity providers associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        trustedIdProviderState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: TrustedIdProviderState\n            modelAsString: false\n          description: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled.\n        newTier:\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier to use for next month.\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Resource tags\n      type: object\n    UpdateDataLakeStoreAccountProperties:\n      properties:\n        defaultGroup:\n          type: string\n          description: The default owner group for all new folders and files created in the Data Lake Store account.\n        encryptionConfig:\n          $ref: '#/components/schemas/UpdateEncryptionConfig'\n          description: Used for rotation of user managed Key Vault keys. Can only be used to rotate a user managed encryption Key Vault key.\n        firewallRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateFirewallRuleWithAccountParameters'\n          description: The list of firewall rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        virtualNetworkRules:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateVirtualNetworkRuleWithAccountParameters'\n          description: The list of virtual network rules associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        firewallState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallState\n            modelAsString: false\n          description: The current state of the IP address firewall for this Data Lake Store account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.\n        firewallAllowAzureIps:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: FirewallAllowAzureIpsState\n            modelAsString: false\n          description: The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.\n        trustedIdProviders:\n          type: array\n          items:\n            $ref: '#/components/schemas/UpdateTrustedIdProviderWithAccountParameters'\n          description: The list of trusted identity providers associated with this Data Lake Store account.\n          x-ms-identifiers:\n            - name\n        trustedIdProviderState:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: TrustedIdProviderState\n            modelAsString: false\n          description: The current state of the trusted identity provider feature for this Data Lake Store account. Disabling trusted identity provider functionality does not remove the providers, they will just be ignored until this feature is re-enabled.\n        newTier:\n          type: string\n          enum:\n            - Consumption\n            - Commitment_1TB\n            - Commitment_10TB\n            - Commitment_100TB\n            - Commitment_500TB\n            - Commitment_1PB\n            - Commitment_5PB\n          x-ms-enum:\n            name: TierType\n            modelAsString: false\n          description: The commitment tier to use for next month.\n      description: Data Lake Store account properties information to be updated.\n      type: object\n    UpdateEncryptionConfig:\n      properties:\n        keyVaultMetaInfo:\n          $ref: '#/components/schemas/UpdateKeyVaultMetaInfo'\n          description: The updated Key Vault key to use in user managed key rotation.\n      description: The encryption configuration used to update a user managed Key Vault key.\n      type: object\n    UpdateKeyVaultMetaInfo:\n      properties:\n        encryptionKeyVersion:\n          type: string\n          description: The version of the user managed encryption key to update through a key rotation.\n      description: The Key Vault update information used for user managed key rotation.\n      type: object\n    CreateOrUpdateFirewallRuleParameters:\n      required:\n        - properties\n      description: The parameters used to create a new firewall rule.\n      properties:\n        startIpAddress:\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n      type: object\n    CreateFirewallRuleWithAccountParameters:\n      required:\n        - name\n        - properties\n      description: The parameters used to create a new firewall rule while creating a new Data Lake Store account.\n      properties:\n        startIpAddress:\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        name:\n          type: string\n          description: The unique name of the firewall rule to create.\n      type: object\n    CreateOrUpdateFirewallRuleProperties:\n      required:\n        - startIpAddress\n        - endIpAddress\n      properties:\n        startIpAddress:\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n      description: The firewall rule properties to use when creating a new firewall rule.\n      type: object\n    UpdateFirewallRuleParameters:\n      description: The parameters used to update a firewall rule.\n      properties:\n        startIpAddress:\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n      type: object\n    UpdateFirewallRuleWithAccountParameters:\n      required:\n        - name\n      description: The parameters used to update a firewall rule while updating a Data Lake Store account.\n      properties:\n        startIpAddress:\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        name:\n          type: string\n          description: The unique name of the firewall rule to update.\n      type: object\n    UpdateFirewallRuleProperties:\n      properties:\n        startIpAddress:\n          type: string\n          description: The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n        endIpAddress:\n          type: string\n          description: The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.\n      description: The firewall rule properties to use when updating a firewall rule.\n      type: object\n    CreateOrUpdateVirtualNetworkRuleParameters:\n      required:\n        - properties\n      description: The parameters used to create a new virtual network rule.\n      properties:\n        subnetId:\n          type: string\n          description: The resource identifier for the subnet.\n      type: object\n    CreateVirtualNetworkRuleWithAccountParameters:\n      required:\n        - name\n        - properties\n      description: The parameters used to create a new virtual network rule while creating a new Data Lake Store account.\n      properties:\n        subnetId:\n          type: string\n          description: The resource identifier for the subnet.\n        name:\n          type: string\n          description: The unique name of the virtual network rule to create.\n      type: object\n    CreateOrUpdateVirtualNetworkRuleProperties:\n      required:\n        - subnetId\n      properties:\n        subnetId:\n          type: string\n          description: The resource identifier for the subnet.\n      description: The virtual network rule properties to use when creating a new virtual network rule.\n      type: object\n    UpdateVirtualNetworkRuleParameters:\n      description: The parameters used to update a virtual network rule.\n      properties:\n        subnetId:\n          type: string\n          description: The resource identifier for the subnet.\n      type: object\n    UpdateVirtualNetworkRuleWithAccountParameters:\n      required:\n        - name\n      description: The parameters used to update a virtual network rule while updating a Data Lake Store account.\n      properties:\n        subnetId:\n          type: string\n          description: The resource identifier for the subnet.\n        name:\n          type: string\n          description: The unique name of the virtual network rule to update.\n      type: object\n    UpdateVirtualNetworkRuleProperties:\n      properties:\n        subnetId:\n          type: string\n          description: The resource identifier for the subnet.\n      description: The virtual network rule properties to use when updating a virtual network rule.\n      type: object\n    CreateOrUpdateTrustedIdProviderParameters:\n      required:\n        - properties\n      description: The parameters used to create a new trusted identity provider.\n      properties:\n        idProvider:\n          type: string\n          description: The URL of this trusted identity provider.\n      type: object\n    CreateTrustedIdProviderWithAccountParameters:\n      required:\n        - name\n        - properties\n      description: The parameters used to create a new trusted identity provider while creating a new Data Lake Store account.\n      properties:\n        idProvider:\n          type: string\n          description: The URL of this trusted identity provider.\n        name:\n          type: string\n          description: The unique name of the trusted identity provider to create.\n      type: object\n    CreateOrUpdateTrustedIdProviderProperties:\n      required:\n        - idProvider\n      properties:\n        idProvider:\n          type: string\n          description: The URL of this trusted identity provider.\n      description: The trusted identity provider properties to use when creating a new trusted identity provider.\n      type: object\n    UpdateTrustedIdProviderParameters:\n      description: The parameters used to update a trusted identity provider.\n      properties:\n        idProvider:\n          type: string\n          description: The URL of this trusted identity provider.\n      type: object\n    UpdateTrustedIdProviderWithAccountParameters:\n      required:\n        - name\n      description: The parameters used to update a trusted identity provider while updating a Data Lake Store account.\n      properties:\n        idProvider:\n          type: string\n          description: The URL of this trusted identity provider.\n        name:\n          type: string\n          description: The unique name of the trusted identity provider to update.\n      type: object\n    UpdateTrustedIdProviderProperties:\n      properties:\n        idProvider:\n          type: string\n          description: The URL of this trusted identity provider.\n      description: The trusted identity provider properties to use when updating a trusted identity provider.\n      type: object\n    CheckNameAvailabilityParameters:\n      required:\n        - name\n        - type\n      properties:\n        name:\n          type: string\n          description: The Data Lake Store name to check availability for.\n        type:\n          type: string\n          enum:\n            - Microsoft.DataLakeStore/accounts\n          description: 'The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeStore/accounts'\n      description: Data Lake Store account name availability check parameters.\n      type: object\n  x-stackQL-resources:\n    accounts:\n      id: azure.data_lake_store.accounts\n      name: accounts\n      title: Accounts\n      methods:\n        Accounts_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1accounts~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Accounts_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Accounts_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        Accounts_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Accounts_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        Accounts_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1?api-version=2016-11-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Accounts_EnableKeyVault:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1enableKeyVault~1?api-version=2016-11-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Accounts_CheckNameAvailability:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1locations~1{location}~1checkNameAvailability~1?api-version=2016-11-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/Accounts_Delete'\n    firewall_rules:\n      id: azure.data_lake_store.firewall_rules\n      name: firewall_rules\n      title: Firewall_rules\n      methods:\n        FirewallRules_ListByAccount:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        FirewallRules_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        FirewallRules_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        FirewallRules_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        FirewallRules_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1firewallRules~1{firewallRuleName}~1?api-version=2016-11-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_ListByAccount'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/firewall_rules/methods/FirewallRules_Delete'\n    virtual_network_rules:\n      id: azure.data_lake_store.virtual_network_rules\n      name: virtual_network_rules\n      title: Virtual_network_rules\n      methods:\n        VirtualNetworkRules_ListByAccount:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        VirtualNetworkRules_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        VirtualNetworkRules_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        VirtualNetworkRules_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        VirtualNetworkRules_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1virtualNetworkRules~1{virtualNetworkRuleName}~1?api-version=2016-11-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/VirtualNetworkRules_ListByAccount'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/VirtualNetworkRules_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/virtual_network_rules/methods/VirtualNetworkRules_Delete'\n    trusted_id_providers:\n      id: azure.data_lake_store.trusted_id_providers\n      name: trusted_id_providers\n      title: Trusted_id_providers\n      methods:\n        TrustedIdProviders_ListByAccount:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        TrustedIdProviders_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        TrustedIdProviders_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        TrustedIdProviders_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        TrustedIdProviders_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.DataLakeStore~1accounts~1{accountName}~1trustedIdProviders~1{trustedIdProviderName}~1?api-version=2016-11-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/TrustedIdProviders_ListByAccount'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/TrustedIdProviders_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/trusted_id_providers/methods/TrustedIdProviders_Delete'\n    operations:\n      id: azure.data_lake_store.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.DataLakeStore~1operations~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\n    locations:\n      id: azure.data_lake_store.locations\n      name: locations\n      title: Locations\n      methods:\n        Locations_GetCapability:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1locations~1{location}~1capability~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Locations_GetUsage:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.DataLakeStore~1locations~1{location}~1usages~1?api-version=2016-11-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select: []\n        insert: []\n        update: []\n        delete: []\npaths:\n  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts/?api-version=2016-11-01:\n    get:\n      tags:\n        - Accounts\n      operationId: Accounts_List\n      description: Lists the Data Lake Store accounts within the subscription. The response includes a link to the next page of results, if any.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $filter\n          in: query\n          description: OData filter. Optional.\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: The number of items to return. Optional.\n          required: false\n          schema:\n            format: int32\n            minimum: 1\n            type: integer\n        - name: $skip\n          in: query\n          description: The number of items to skip over before returning elements. Optional.\n          required: false\n          schema:\n            format: int32\n            minimum: 1\n            type: integer\n        - name: $select\n          in: query\n          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.\n          required: false\n          schema:\n            type: string\n        - name: $count\n          in: query\n          description: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Successfully retrieved the list of accounts.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccountListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-ms-odata: '#/components/schemas/DataLakeStoreAccountBasic'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/?api-version=2016-11-01:\n    get:\n      tags:\n        - Accounts\n      operationId: Accounts_ListByResourceGroup\n      description: Lists the Data Lake Store accounts within a specific resource group. The response includes a link to the next page of results, if any.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - name: $filter\n          in: query\n          description: OData filter. Optional.\n          required: false\n          schema:\n            type: string\n        - name: $top\n          in: query\n          description: The number of items to return. Optional.\n          required: false\n          schema:\n            format: int32\n            minimum: 1\n            type: integer\n        - name: $skip\n          in: query\n          description: The number of items to skip over before returning elements. Optional.\n          required: false\n          schema:\n            format: int32\n            minimum: 1\n            type: integer\n        - name: $select\n          in: query\n          description: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.\n          required: false\n          schema:\n            type: string\n        - name: $orderby\n          in: query\n          description: OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.\n          required: false\n          schema:\n            type: string\n        - name: $count\n          in: query\n          description: A Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.\n          required: false\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Successfully retrieved the list of accounts in the specified resource group.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccountListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-ms-odata: '#/components/schemas/DataLakeStoreAccountBasic'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/?api-version=2016-11-01:\n    put:\n      tags:\n        - Accounts\n      operationId: Accounts_Create\n      description: Creates the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      requestBody:\n        description: Parameters supplied to create the Data Lake Store account.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDataLakeStoreAccountParameters'\n      responses:\n        '200':\n          description: Successfully created the account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccount'\n        '201':\n          description: Successfully initiated creation of the account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccount'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: accounts\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - Accounts\n      operationId: Accounts_Get\n      description: Gets the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved details of the specified account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccount'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n    patch:\n      tags:\n        - Accounts\n      operationId: Accounts_Update\n      description: Updates the specified Data Lake Store account information.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      requestBody:\n        description: Parameters supplied to update the Data Lake Store account.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDataLakeStoreAccountParameters'\n      responses:\n        '200':\n          description: Successfully updated the account details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccount'\n        '201':\n          description: Successfully initiated the update of the account details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccount'\n        '202':\n          description: Successfully initiated the update of the account details.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DataLakeStoreAccount'\n      x-ms-long-running-operation: true\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - Accounts\n      operationId: Accounts_Delete\n      description: Deletes the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      responses:\n        '200':\n          description: Successfully deleted the specified account.\n        '202':\n          description: Successfully initiated the deletion of the specified account.\n        '204':\n          description: The specified account was not found.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: accounts\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault/?api-version=2016-11-01:\n    post:\n      tags:\n        - Accounts\n      operationId: Accounts_EnableKeyVault\n      description: Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      responses:\n        '200':\n          description: Successfully enabled the user-managed Key Vault settings used for encrypting this Data Lake Store account.\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/?api-version=2016-11-01:\n    get:\n      tags:\n        - FirewallRules\n      operationId: FirewallRules_ListByAccount\n      description: Lists the Data Lake Store firewall rules within the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the list of firewall rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FirewallRuleListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: firewall_rules\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}/?api-version=2016-11-01:\n    put:\n      tags:\n        - FirewallRules\n      operationId: FirewallRules_CreateOrUpdate\n      description: Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: firewallRuleName\n          in: path\n          description: The name of the firewall rule to create or update.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to create or update the firewall rule.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateFirewallRuleParameters'\n      responses:\n        '200':\n          description: Successfully created or updated the specified firewall rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FirewallRule'\n      x-stackQL-resource: firewall_rules\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - FirewallRules\n      operationId: FirewallRules_Get\n      description: Gets the specified Data Lake Store firewall rule.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: firewallRuleName\n          in: path\n          description: The name of the firewall rule to retrieve.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully retrieved the firewall rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FirewallRule'\n      x-stackQL-resource: firewall_rules\n      x-stackQL-verb: exec\n    patch:\n      tags:\n        - FirewallRules\n      operationId: FirewallRules_Update\n      description: Updates the specified firewall rule.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: firewallRuleName\n          in: path\n          description: The name of the firewall rule to update.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to update the firewall rule.\n        required: false\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateFirewallRuleParameters'\n      responses:\n        '200':\n          description: Successfully updated the specified firewall rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FirewallRule'\n      x-stackQL-resource: firewall_rules\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - FirewallRules\n      operationId: FirewallRules_Delete\n      description: Deletes the specified firewall rule from the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: firewallRuleName\n          in: path\n          description: The name of the firewall rule to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully deleted the specified firewall rule.\n        '204':\n          description: The specified firewall rule does not exist or was already deleted.\n      x-stackQL-resource: firewall_rules\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/?api-version=2016-11-01:\n    get:\n      tags:\n        - VirtualNetworkRules\n      operationId: VirtualNetworkRules_ListByAccount\n      description: Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the list of virtual network rules.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualNetworkRuleListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: virtual_network_rules\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}/?api-version=2016-11-01:\n    put:\n      tags:\n        - VirtualNetworkRules\n      operationId: VirtualNetworkRules_CreateOrUpdate\n      description: Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: virtualNetworkRuleName\n          in: path\n          description: The name of the virtual network rule to create or update.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to create or update the virtual network rule.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleParameters'\n      responses:\n        '200':\n          description: Successfully created or updated the specified virtual network rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualNetworkRule'\n      x-stackQL-resource: virtual_network_rules\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - VirtualNetworkRules\n      operationId: VirtualNetworkRules_Get\n      description: Gets the specified Data Lake Store virtual network rule.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: virtualNetworkRuleName\n          in: path\n          description: The name of the virtual network rule to retrieve.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully retrieved the virtual network rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualNetworkRule'\n      x-stackQL-resource: virtual_network_rules\n      x-stackQL-verb: exec\n    patch:\n      tags:\n        - VirtualNetworkRules\n      operationId: VirtualNetworkRules_Update\n      description: Updates the specified virtual network rule.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: virtualNetworkRuleName\n          in: path\n          description: The name of the virtual network rule to update.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to update the virtual network rule.\n        required: false\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateVirtualNetworkRuleParameters'\n      responses:\n        '200':\n          description: Successfully updated the specified virtual network rule.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VirtualNetworkRule'\n      x-stackQL-resource: virtual_network_rules\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - VirtualNetworkRules\n      operationId: VirtualNetworkRules_Delete\n      description: Deletes the specified virtual network rule from the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: virtualNetworkRuleName\n          in: path\n          description: The name of the virtual network rule to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully deleted the specified virtual network rule.\n        '204':\n          description: The specified virtual network rule does not exist or was already deleted.\n      x-stackQL-resource: virtual_network_rules\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/?api-version=2016-11-01:\n    get:\n      tags:\n        - TrustedIdProviders\n      operationId: TrustedIdProviders_ListByAccount\n      description: Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n      responses:\n        '200':\n          description: Successfully retrieved the list of trusted identity providers.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedIdProviderListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: trusted_id_providers\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}/?api-version=2016-11-01:\n    put:\n      tags:\n        - TrustedIdProviders\n      operationId: TrustedIdProviders_CreateOrUpdate\n      description: Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: trustedIdProviderName\n          in: path\n          description: The name of the trusted identity provider. This is used for differentiation of providers in the account.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to create or replace the trusted identity provider.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderParameters'\n      responses:\n        '200':\n          description: Successfully added the trusted identity provider.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedIdProvider'\n      x-stackQL-resource: trusted_id_providers\n      x-stackQL-verb: insert\n    get:\n      tags:\n        - TrustedIdProviders\n      operationId: TrustedIdProviders_Get\n      description: Gets the specified Data Lake Store trusted identity provider.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: trustedIdProviderName\n          in: path\n          description: The name of the trusted identity provider to retrieve.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully retrieved details of the specified trusted identity provider.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedIdProvider'\n      x-stackQL-resource: trusted_id_providers\n      x-stackQL-verb: exec\n    patch:\n      tags:\n        - TrustedIdProviders\n      operationId: TrustedIdProviders_Update\n      description: Updates the specified trusted identity provider.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: trustedIdProviderName\n          in: path\n          description: The name of the trusted identity provider. This is used for differentiation of providers in the account.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to update the trusted identity provider.\n        required: false\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTrustedIdProviderParameters'\n      responses:\n        '200':\n          description: Successfully added the trusted identity provider.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TrustedIdProvider'\n      x-stackQL-resource: trusted_id_providers\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - TrustedIdProviders\n      operationId: TrustedIdProviders_Delete\n      description: Deletes the specified trusted identity provider from the specified Data Lake Store account\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ResourceGroupNameParameter'\n        - $ref: '#/components/parameters/AccountNameParameter'\n        - name: trustedIdProviderName\n          in: path\n          description: The name of the trusted identity provider to delete.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully deleted the specified trusted identity provider details.\n        '204':\n          description: The specified trusted identity provider was not found.\n      x-stackQL-resource: trusted_id_providers\n      x-stackQL-verb: delete\n  /providers/Microsoft.DataLakeStore/operations/?api-version=2016-11-01:\n    get:\n      tags:\n        - Operations\n      operationId: Operations_List\n      description: Lists all of the available Data Lake Store REST API operations.\n      parameters: []\n      responses:\n        '200':\n          description: Successfully listed the available operations for Data Lake Store.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationListResult'\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability/?api-version=2016-11-01:\n    get:\n      tags:\n        - Locations\n      operationId: Locations_GetCapability\n      description: Gets subscription-level properties and limits for Data Lake Store specified by resource location.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: location\n          in: path\n          description: The resource location without whitespace.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Successfully retrieved the subscription-level properties and limits for Data Lake Store specified by resource location.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CapabilityInformation'\n        '404':\n          description: Subscription not found.\n      x-stackQL-resource: locations\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages/?api-version=2016-11-01:\n    get:\n      tags:\n        - LocationUsage\n      operationId: Locations_GetUsage\n      description: Gets the current usage count and the limit for the resources of the location under the subscription.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: location\n          in: path\n          description: The resource location without whitespace.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- current usage count and limit retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsageListResult'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: locations\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability/?api-version=2016-11-01:\n    post:\n      tags:\n        - Accounts\n      operationId: Accounts_CheckNameAvailability\n      description: Checks whether the specified account name is available or taken.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: location\n          in: path\n          description: The resource location without whitespace.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: Parameters supplied to check the Data Lake Store account name availability.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckNameAvailabilityParameters'\n      responses:\n        '200':\n          description: Successfully retrieved the Data Lake Store account name availability information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NameAvailabilityInformation'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/-/blob/providers/src/azure/v0.2.0/services/data_lake_store.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fa7896eb5ee6872f9b9bb45ca9439fc11f7cd681/providers/src/azure/v0.2.0/services/data_lake_store.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:51485: path MUST NOT contain a query string"
}