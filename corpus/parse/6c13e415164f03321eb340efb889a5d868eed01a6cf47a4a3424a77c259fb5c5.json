{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackql/stackql-provider-registry"
		},
		"file": {
			"name": "storage.yaml",
			"size": 0,
			"path": "providers/src/azure/v0.2.0/services/storage.yaml",
			"byteSize": 383007,
			"content": "openapi: 3.0.0\nservers:\n  - url: https://management.azure.com/\ninfo:\n  title: Storage (Microsoft.Storage)\n  description: Storage\n  contact:\n    name: StackQL Studios\n    url: https://stackql.io/\n    email: info@stackql.io\n  version: 2022-08-29-stackql-generated\nsecurity:\n  - azure_auth:\n      - user_impersonation\ncomponents:\n  securitySchemes:\n    azure_auth:\n      description: Azure Active Directory OAuth2 Flow.\n      type: oauth2\n      flows:\n        implicit:\n          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize\n          scopes:\n            user_impersonation: impersonate your user account\n  parameters:\n    FileServicesName:\n      name: FileServicesName\n      in: path\n      description: The name of the file Service within the specified storage account. File Service Name must be \"default\"\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: FileServicesName\n          modelAsString: false\n        type: string\n    ShareName:\n      name: shareName\n      in: path\n      description: The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 63\n        minLength: 3\n        type: string\n    SubscriptionIdParameter:\n      name: subscriptionId\n      in: path\n      description: The ID of the target subscription.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ApiVersionParameter:\n      name: api-version\n      in: query\n      description: The API version to use for this operation.\n      required: true\n      schema:\n        minLength: 1\n        type: string\n    ResourceGroupNameParameter:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group. The name is case insensitive.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        maxLength: 90\n        type: string\n    PrivateEndpointConnectionName:\n      name: privateEndpointConnectionName\n      in: path\n      description: The name of the private endpoint connection associated with the Azure resource\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        type: string\n    OperationIdParameter:\n      name: operationId\n      in: path\n      description: The ID of an ongoing async operation.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        type: string\n    LocationParameter:\n      name: location\n      in: path\n      description: The name of Azure region.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        type: string\n    ContainerName:\n      name: containerName\n      in: path\n      description: The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 63\n        minLength: 3\n        type: string\n    ImmutabilityPolicyName:\n      name: immutabilityPolicyName\n      in: path\n      description: The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: ImmutabilityPolicyName\n          modelAsString: false\n        type: string\n    BlobServicesName:\n      name: BlobServicesName\n      in: path\n      description: The name of the blob Service within the specified storage account. Blob Service Name must be 'default'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: BlobServicesName\n          modelAsString: false\n        type: string\n    TableServiceName:\n      name: tableServiceName\n      in: path\n      description: The name of the Table Service within the specified storage account. Table Service Name must be 'default'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: TableServiceName\n          modelAsString: false\n        type: string\n    TableName:\n      name: tableName\n      in: path\n      description: A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 63\n        minLength: 3\n        pattern: ^[A-Za-z][A-Za-z0-9]{2,62}$\n        type: string\n    QueueServiceName:\n      name: queueServiceName\n      in: path\n      description: The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: QueueServiceName\n          modelAsString: false\n        type: string\n    QueueName:\n      name: queueName\n      in: path\n      description: A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 63\n        minLength: 3\n        pattern: ^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$\n        type: string\n    ResourceGroupName:\n      name: resourceGroupName\n      in: path\n      description: The name of the resource group within the user's subscription. The name is case insensitive.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        pattern: ^[-\\w\\._\\(\\)]+$\n        minLength: 1\n        maxLength: 90\n        type: string\n    StorageAccountName:\n      name: accountName\n      in: path\n      description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 24\n        minLength: 3\n        type: string\n    DeletedAccountName:\n      name: deletedAccountName\n      in: path\n      description: Name of the deleted storage account.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 24\n        minLength: 3\n        type: string\n    ManagementPolicyName:\n      name: managementPolicyName\n      in: path\n      description: The name of the Storage Account Management Policy. It should always be 'default'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: ManagementPolicyName\n          modelAsString: true\n        type: string\n    EncryptionScopeName:\n      name: encryptionScopeName\n      in: path\n      description: The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        maxLength: 63\n        minLength: 3\n        type: string\n    ObjectReplicationPolicyId:\n      name: objectReplicationPolicyId\n      in: path\n      description: For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 1\n        type: string\n    Username:\n      name: username\n      in: path\n      description: The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        minLength: 3\n        maxLength: 64\n        type: string\n    BlobInventoryPolicyName:\n      name: blobInventoryPolicyName\n      in: path\n      description: The name of the storage account blob inventory policy. It should always be 'default'\n      required: true\n      x-ms-parameter-location: method\n      schema:\n        enum:\n          - default\n        x-ms-enum:\n          name: BlobInventoryPolicyName\n          modelAsString: true\n        type: string\n  schemas:\n    FileServiceItems:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileServiceProperties'\n          description: List of file services returned.\n          readOnly: true\n      type: object\n    FileServiceProperties:\n      description: The properties of File services in storage account.\n      properties:\n        properties:\n          properties:\n            cors:\n              $ref: '#/components/schemas/CorsRules'\n              description: Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.\n            shareDeleteRetentionPolicy:\n              $ref: '#/components/schemas/DeleteRetentionPolicy'\n              description: The file service properties for share soft delete.\n            protocolSettings:\n              $ref: '#/components/schemas/ProtocolSettings'\n              description: Protocol settings for file service\n          x-ms-client-flatten: true\n          x-ms-client-name: FileServiceProperties\n          description: The properties of File services in storage account.\n        sku:\n          $ref: '#/components/schemas/Sku'\n          readOnly: true\n          description: Sku name and tier.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    ProtocolSettings:\n      properties:\n        smb:\n          $ref: '#/components/schemas/SmbSetting'\n          description: Setting for SMB protocol\n      description: Protocol settings for file service\n      type: object\n    SmbSetting:\n      properties:\n        multichannel:\n          $ref: '#/components/schemas/Multichannel'\n          description: Multichannel setting. Applies to Premium FileStorage only.\n        versions:\n          type: string\n          description: SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.\n        authenticationMethods:\n          type: string\n          description: SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.\n        kerberosTicketEncryption:\n          type: string\n          description: Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'\n        channelEncryption:\n          type: string\n          description: SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.\n      description: Setting for SMB protocol\n      type: object\n    Multichannel:\n      properties:\n        enabled:\n          type: boolean\n          description: Indicates whether multichannel is enabled\n      description: Multichannel setting. Applies to Premium FileStorage only.\n      type: object\n    FileShare:\n      description: Properties of the file share, including Id, resource name, resource type, Etag.\n      properties:\n        lastModifiedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the share was last modified.\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair to associate with the share as metadata.\n        shareQuota:\n          type: integer\n          minimum: 1\n          maximum: 102400\n          description: The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.\n        enabledProtocols:\n          type: string\n          enum:\n            - SMB\n            - NFS\n          x-ms-enum:\n            name: EnabledProtocols\n            modelAsString: true\n          description: The authentication protocol that is used for the file share. Can only be specified when creating a share.\n          x-ms-mutability:\n            - create\n            - read\n        rootSquash:\n          type: string\n          enum:\n            - NoRootSquash\n            - RootSquash\n            - AllSquash\n          x-ms-enum:\n            name: RootSquashType\n            modelAsString: true\n          description: The property is for NFS share only. The default is NoRootSquash.\n        version:\n          type: string\n          readOnly: true\n          description: The version of the share.\n        deleted:\n          type: boolean\n          readOnly: true\n          description: Indicates whether the share was deleted.\n        deletedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: The deleted time if the share was deleted.\n        remainingRetentionDays:\n          type: integer\n          readOnly: true\n          description: Remaining retention days for share that was soft deleted.\n        accessTier:\n          type: string\n          enum:\n            - TransactionOptimized\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: ShareAccessTier\n            modelAsString: true\n          description: Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.\n        accessTierChangeTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Indicates the last modification time for share access tier.\n        accessTierStatus:\n          type: string\n          readOnly: true\n          description: Indicates if there is a pending transition for access tier.\n        shareUsageBytes:\n          type: integer\n          format: int64\n          readOnly: true\n          description: The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n        leaseStatus:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: LeaseStatus\n            modelAsString: true\n          description: The lease status of the share.\n        leaseState:\n          type: string\n          readOnly: true\n          enum:\n            - Available\n            - Leased\n            - Expired\n            - Breaking\n            - Broken\n          x-ms-enum:\n            name: LeaseState\n            modelAsString: true\n          description: Lease state of the share.\n        leaseDuration:\n          type: string\n          readOnly: true\n          enum:\n            - Infinite\n            - Fixed\n          x-ms-enum:\n            name: LeaseDuration\n            modelAsString: true\n          description: Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n        signedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/SignedIdentifier'\n          description: List of stored access policies specified on the share.\n        snapshotTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      type: object\n    DeletedShare:\n      properties:\n        deletedShareName:\n          type: string\n          description: Required. Identify the name of the deleted share that will be restored.\n        deletedShareVersion:\n          type: string\n          description: Required. Identify the version of the deleted share that will be restored.\n      required:\n        - deletedShareName\n        - deletedShareVersion\n      description: The deleted share to be restored.\n      type: object\n    FileShareItem:\n      description: The file share properties be listed out.\n      properties:\n        lastModifiedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the share was last modified.\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair to associate with the share as metadata.\n        shareQuota:\n          type: integer\n          minimum: 1\n          maximum: 102400\n          description: The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.\n        enabledProtocols:\n          type: string\n          enum:\n            - SMB\n            - NFS\n          x-ms-enum:\n            name: EnabledProtocols\n            modelAsString: true\n          description: The authentication protocol that is used for the file share. Can only be specified when creating a share.\n          x-ms-mutability:\n            - create\n            - read\n        rootSquash:\n          type: string\n          enum:\n            - NoRootSquash\n            - RootSquash\n            - AllSquash\n          x-ms-enum:\n            name: RootSquashType\n            modelAsString: true\n          description: The property is for NFS share only. The default is NoRootSquash.\n        version:\n          type: string\n          readOnly: true\n          description: The version of the share.\n        deleted:\n          type: boolean\n          readOnly: true\n          description: Indicates whether the share was deleted.\n        deletedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: The deleted time if the share was deleted.\n        remainingRetentionDays:\n          type: integer\n          readOnly: true\n          description: Remaining retention days for share that was soft deleted.\n        accessTier:\n          type: string\n          enum:\n            - TransactionOptimized\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: ShareAccessTier\n            modelAsString: true\n          description: Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.\n        accessTierChangeTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Indicates the last modification time for share access tier.\n        accessTierStatus:\n          type: string\n          readOnly: true\n          description: Indicates if there is a pending transition for access tier.\n        shareUsageBytes:\n          type: integer\n          format: int64\n          readOnly: true\n          description: The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n        leaseStatus:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: LeaseStatus\n            modelAsString: true\n          description: The lease status of the share.\n        leaseState:\n          type: string\n          readOnly: true\n          enum:\n            - Available\n            - Leased\n            - Expired\n            - Breaking\n            - Broken\n          x-ms-enum:\n            name: LeaseState\n            modelAsString: true\n          description: Lease state of the share.\n        leaseDuration:\n          type: string\n          readOnly: true\n          enum:\n            - Infinite\n            - Fixed\n          x-ms-enum:\n            name: LeaseDuration\n            modelAsString: true\n          description: Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n        signedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/SignedIdentifier'\n          description: List of stored access policies specified on the share.\n        snapshotTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      type: object\n    FileShareItems:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileShareItem'\n          description: List of file shares returned.\n          readOnly: true\n        nextLink:\n          type: string\n          description: Request URL that can be used to query next page of shares. Returned when total number of requested shares exceed maximum page size.\n          readOnly: true\n      description: Response schema. Contains list of shares returned, and if paging is requested or required, a URL to next page of shares.\n      type: object\n    FileShareProperties:\n      properties:\n        lastModifiedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the share was last modified.\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair to associate with the share as metadata.\n        shareQuota:\n          type: integer\n          minimum: 1\n          maximum: 102400\n          description: The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.\n        enabledProtocols:\n          type: string\n          enum:\n            - SMB\n            - NFS\n          x-ms-enum:\n            name: EnabledProtocols\n            modelAsString: true\n          description: The authentication protocol that is used for the file share. Can only be specified when creating a share.\n          x-ms-mutability:\n            - create\n            - read\n        rootSquash:\n          type: string\n          enum:\n            - NoRootSquash\n            - RootSquash\n            - AllSquash\n          x-ms-enum:\n            name: RootSquashType\n            modelAsString: true\n          description: The property is for NFS share only. The default is NoRootSquash.\n        version:\n          type: string\n          readOnly: true\n          description: The version of the share.\n        deleted:\n          type: boolean\n          readOnly: true\n          description: Indicates whether the share was deleted.\n        deletedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: The deleted time if the share was deleted.\n        remainingRetentionDays:\n          type: integer\n          readOnly: true\n          description: Remaining retention days for share that was soft deleted.\n        accessTier:\n          type: string\n          enum:\n            - TransactionOptimized\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: ShareAccessTier\n            modelAsString: true\n          description: Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.\n        accessTierChangeTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Indicates the last modification time for share access tier.\n        accessTierStatus:\n          type: string\n          readOnly: true\n          description: Indicates if there is a pending transition for access tier.\n        shareUsageBytes:\n          type: integer\n          format: int64\n          readOnly: true\n          description: The approximate size of the data stored on the share. Note that this value may not include all recently created or recently resized files.\n        leaseStatus:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: LeaseStatus\n            modelAsString: true\n          description: The lease status of the share.\n        leaseState:\n          type: string\n          readOnly: true\n          enum:\n            - Available\n            - Leased\n            - Expired\n            - Breaking\n            - Broken\n          x-ms-enum:\n            name: LeaseState\n            modelAsString: true\n          description: Lease state of the share.\n        leaseDuration:\n          type: string\n          readOnly: true\n          enum:\n            - Infinite\n            - Fixed\n          x-ms-enum:\n            name: LeaseDuration\n            modelAsString: true\n          description: Specifies whether the lease on a share is of infinite or fixed duration, only when the share is leased.\n        signedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/SignedIdentifier'\n          description: List of stored access policies specified on the share.\n        snapshotTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Creation time of share snapshot returned in the response of list shares with expand param \"snapshots\".\n      description: The properties of the file share.\n      type: object\n    LeaseShareRequest:\n      properties:\n        action:\n          type: string\n          enum:\n            - Acquire\n            - Renew\n            - Change\n            - Release\n            - Break\n          x-ms-enum:\n            name: LeaseShareAction\n            modelAsString: true\n          description: Specifies the lease action. Can be one of the available actions.\n        leaseId:\n          type: string\n          description: Identifies the lease. Can be specified in any valid GUID string format.\n        breakPeriod:\n          type: integer\n          format: int32\n          description: Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.\n        leaseDuration:\n          type: integer\n          format: int32\n          description: Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.\n        proposedLeaseId:\n          type: string\n          description: Optional for acquire, required for change. Proposed lease ID, in a GUID string format.\n      required:\n        - action\n      description: Lease Share request schema.\n      type: object\n    LeaseShareResponse:\n      properties:\n        leaseId:\n          type: string\n          description: Returned unique lease ID that must be included with any request to delete the share, or to renew, change, or release the lease.\n        leaseTimeSeconds:\n          type: string\n          description: Approximate time remaining in the lease period, in seconds.\n      description: Lease Share response schema.\n      type: object\n    SignedIdentifier:\n      properties:\n        id:\n          type: string\n          description: An unique identifier of the stored access policy.\n        accessPolicy:\n          $ref: '#/components/schemas/AccessPolicy'\n          description: Access policy\n      type: object\n    AccessPolicy:\n      properties:\n        startTime:\n          type: string\n          format: date-time\n          description: Start time of the access policy\n        expiryTime:\n          type: string\n          format: date-time\n          description: Expiry time of the access policy\n        permission:\n          type: string\n          description: List of abbreviated permissions.\n      type: object\n    Resource:\n      title: Resource\n      description: Common fields that are returned in the response for all Azure Resource Manager resources\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      x-ms-azure-resource: true\n    AzureEntityResource:\n      x-ms-client-name: AzureEntityResource\n      title: Entity Resource\n      description: The resource model definition for an Azure Resource Manager resource with an etag.\n      properties:\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    TrackedResource:\n      title: Tracked Resource\n      description: The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'\n      required:\n        - location\n      properties:\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    ProxyResource:\n      title: Proxy Resource\n      description: The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    ResourceModelWithAllowedPropertySet:\n      description: The resource model definition containing the full set of allowed properties for a resource. Except properties bag, there cannot be a top level property outside of this set.\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          x-ms-mutability:\n            - read\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n        managedBy:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.\n        kind:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.\n          pattern: ^[-\\w\\._,\\(\\)]+$\n        etag:\n          readOnly: true\n          type: string\n          description: 'The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. '\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        identity:\n          allOf:\n            - $ref: '#/components/schemas/Identity'\n        sku:\n          allOf:\n            - $ref: '#/components/schemas/Sku'\n        plan:\n          allOf:\n            - $ref: '#/components/schemas/Plan'\n      x-ms-azure-resource: true\n    Sku:\n      description: The resource model definition representing SKU\n      type: object\n      properties:\n        name:\n          type: string\n          description: The name of the SKU. Ex - P3. It is typically a letter+number code\n        tier:\n          type: string\n          enum:\n            - Free\n            - Basic\n            - Standard\n            - Premium\n          x-ms-enum:\n            name: SkuTier\n            modelAsString: false\n          description: This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.\n        size:\n          type: string\n          description: 'The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. '\n        family:\n          type: string\n          description: If the service has different generations of hardware, for the same SKU, then that can be captured here.\n        capacity:\n          type: integer\n          format: int32\n          description: If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.\n      required:\n        - name\n    Identity:\n      properties:\n        principalId:\n          readOnly: true\n          type: string\n          description: The principal ID of resource identity.\n        tenantId:\n          readOnly: true\n          type: string\n          description: The tenant ID of resource.\n        type:\n          type: string\n          description: The identity type.\n          enum:\n            - None\n            - SystemAssigned\n            - UserAssigned\n            - SystemAssigned,UserAssigned\n          x-ms-enum:\n            name: IdentityType\n            modelAsString: true\n        userAssignedIdentities:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/UserAssignedIdentity'\n          description: Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.\n      required:\n        - type\n      description: Identity for the resource.\n      type: object\n    Plan:\n      type: object\n      properties:\n        name:\n          type: string\n          description: A user defined name of the 3rd Party Artifact that is being procured.\n        publisher:\n          type: string\n          description: The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic\n        product:\n          type: string\n          description: 'The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. '\n        promotionCode:\n          type: string\n          description: A publisher provided promotion code as provisioned in Data Market for the said product/artifact.\n        version:\n          type: string\n          description: The version of the desired product/artifact.\n      description: Plan for the resource.\n      required:\n        - name\n        - publisher\n        - product\n    ErrorResponse:\n      properties:\n        error:\n          $ref: '#/components/schemas/ErrorResponseBody'\n          description: Azure Storage Resource Provider error response body.\n      description: An error response from the storage resource provider.\n      type: object\n    ErrorAdditionalInfo:\n      type: object\n      properties:\n        type:\n          readOnly: true\n          type: string\n          description: The additional info type.\n        info:\n          readOnly: true\n          type: object\n          description: The additional info.\n      description: The resource management error additional info.\n    Operation:\n      description: Storage REST API operation definition.\n      properties:\n        serviceSpecification:\n          $ref: '#/components/schemas/ServiceSpecification'\n          description: One property of operation, include metric specifications.\n        name:\n          description: 'Operation name: {provider}/{resource}/{operation}'\n          type: string\n        display:\n          description: Display metadata associated with the operation.\n          properties:\n            provider:\n              description: 'Service provider: Microsoft Storage.'\n              type: string\n            resource:\n              description: Resource on which the operation is performed etc.\n              type: string\n            operation:\n              description: 'Type of operation: get, read, delete, etc.'\n              type: string\n            description:\n              description: Description of the operation.\n              type: string\n        origin:\n          type: string\n          description: The origin of operations.\n      type: object\n    OperationListResult:\n      description: Result of the request to list Storage operations. It contains a list of operations and a URL link to get the next set of results.\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Operation'\n          description: List of Storage operations supported by the Storage resource provider.\n      type: object\n    locationData:\n      description: Metadata pertaining to the geographic location of the resource.\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 256\n          description: A canonical name for the geographic or physical location.\n        city:\n          type: string\n          description: The city or locality where the resource is located.\n        district:\n          type: string\n          description: The district, state, or province where the resource is located.\n        countryOrRegion:\n          type: string\n          description: The country or region where the resource is located\n      required:\n        - name\n    systemData:\n      description: Metadata pertaining to creation and last modification of the resource.\n      type: object\n      readOnly: true\n      properties:\n        createdBy:\n          type: string\n          description: The identity that created the resource.\n        createdByType:\n          type: string\n          description: The type of identity that created the resource.\n          enum:\n            - User\n            - Application\n            - ManagedIdentity\n            - Key\n          x-ms-enum:\n            name: createdByType\n            modelAsString: true\n        createdAt:\n          type: string\n          format: date-time\n          description: The timestamp of resource creation (UTC).\n        lastModifiedBy:\n          type: string\n          description: The identity that last modified the resource.\n        lastModifiedByType:\n          type: string\n          description: The type of identity that last modified the resource.\n          enum:\n            - User\n            - Application\n            - ManagedIdentity\n            - Key\n          x-ms-enum:\n            name: createdByType\n            modelAsString: true\n        lastModifiedAt:\n          type: string\n          format: date-time\n          description: The timestamp of resource last modification (UTC)\n    encryptionProperties:\n      description: Configuration of key for data encryption\n      type: object\n      properties:\n        status:\n          description: Indicates whether or not the encryption is enabled for container registry.\n          enum:\n            - enabled\n            - disabled\n          type: string\n          x-ms-enum:\n            name: EncryptionStatus\n            modelAsString: true\n        keyVaultProperties:\n          $ref: '#/components/schemas/KeyVaultProperties'\n          description: Key vault properties.\n    KeyVaultProperties:\n      description: Properties of key vault.\n      properties:\n        keyname:\n          type: string\n          description: The name of KeyVault key.\n          x-ms-client-name: KeyName\n        keyversion:\n          type: string\n          description: The version of KeyVault key.\n          x-ms-client-name: KeyVersion\n        keyvaulturi:\n          type: string\n          description: The Uri of KeyVault.\n          x-ms-client-name: KeyVaultUri\n        currentVersionedKeyIdentifier:\n          type: string\n          readOnly: true\n          description: The object identifier of the current versioned Key Vault Key in use.\n          x-ms-client-name: CurrentVersionedKeyIdentifier\n        lastKeyRotationTimestamp:\n          type: string\n          readOnly: true\n          format: date-time\n          description: Timestamp of last rotation of the Key Vault Key.\n          x-ms-client-name: LastKeyRotationTimestamp\n        currentVersionedKeyExpirationTimestamp:\n          type: string\n          readOnly: true\n          format: date-time\n          description: This is a read only property that represents the expiration time of the current version of the customer managed key used for encryption.\n          x-ms-client-name: CurrentVersionedKeyExpirationTimestamp\n      type: object\n    PrivateEndpoint:\n      type: object\n      properties:\n        id:\n          readOnly: true\n          type: string\n          description: The ARM identifier for Private Endpoint\n      description: The Private Endpoint resource.\n    PrivateEndpointConnection:\n      description: The Private Endpoint Connection resource.\n      properties:\n        privateEndpoint:\n          $ref: '#/components/schemas/PrivateEndpoint'\n          description: The resource of private end point.\n        privateLinkServiceConnectionState:\n          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'\n          description: A collection of information about the state of the connection between service consumer and provider.\n        provisioningState:\n          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'\n          description: The provisioning state of the private endpoint connection resource.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    PrivateEndpointConnectionProperties:\n      type: object\n      properties:\n        privateEndpoint:\n          $ref: '#/components/schemas/PrivateEndpoint'\n          description: The resource of private end point.\n        privateLinkServiceConnectionState:\n          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'\n          description: A collection of information about the state of the connection between service consumer and provider.\n        provisioningState:\n          $ref: '#/components/schemas/PrivateEndpointConnectionProvisioningState'\n          description: The provisioning state of the private endpoint connection resource.\n      required:\n        - privateLinkServiceConnectionState\n      description: Properties of the PrivateEndpointConnectProperties.\n    PrivateLinkServiceConnectionState:\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'\n          description: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.\n        description:\n          type: string\n          description: The reason for approval/rejection of the connection.\n        actionsRequired:\n          type: string\n          description: A message indicating if changes on the service provider require any updates on the consumer.\n      description: A collection of information about the state of the connection between service consumer and provider.\n    PrivateEndpointServiceConnectionStatus:\n      type: string\n      description: The private endpoint connection status.\n      enum:\n        - Pending\n        - Approved\n        - Rejected\n      x-ms-enum:\n        name: PrivateEndpointServiceConnectionStatus\n        modelAsString: true\n    PrivateEndpointConnectionProvisioningState:\n      type: string\n      readOnly: true\n      description: The current provisioning state.\n      enum:\n        - Succeeded\n        - Creating\n        - Deleting\n        - Failed\n      x-ms-enum:\n        name: PrivateEndpointConnectionProvisioningState\n        modelAsString: true\n    PrivateLinkResource:\n      description: A private link resource\n      properties:\n        groupId:\n          description: The private link resource group id.\n          type: string\n          readOnly: true\n        requiredMembers:\n          description: The private link resource required member names.\n          type: array\n          items:\n            type: string\n          readOnly: true\n        requiredZoneNames:\n          type: array\n          items:\n            type: string\n          description: The private link resource Private link DNS zone name.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    PrivateLinkResourceProperties:\n      type: object\n      properties:\n        groupId:\n          description: The private link resource group id.\n          type: string\n          readOnly: true\n        requiredMembers:\n          description: The private link resource required member names.\n          type: array\n          items:\n            type: string\n          readOnly: true\n        requiredZoneNames:\n          type: array\n          items:\n            type: string\n          description: The private link resource Private link DNS zone name.\n      description: Properties of a private link resource.\n    PrivateEndpointConnectionListResult:\n      type: object\n      properties:\n        value:\n          type: array\n          description: Array of private endpoint connections\n          items:\n            $ref: '#/components/schemas/PrivateEndpointConnection'\n      description: List of private endpoint connection associated with the specified storage account\n    PrivateLinkResourceListResult:\n      type: object\n      properties:\n        value:\n          type: array\n          description: Array of private link resources\n          items:\n            $ref: '#/components/schemas/PrivateLinkResource'\n      description: A list of private link resources\n    CorsRules:\n      properties:\n        corsRules:\n          type: array\n          items:\n            description: 'Specifies a CORS rule for the Blob service. '\n            $ref: '#/components/schemas/CorsRule'\n          description: 'The List of CORS rules. You can include up to five CorsRule elements in the request. '\n      description: 'Sets the CORS rules. You can include up to five CorsRule elements in the request. '\n      type: object\n    CorsRule:\n      properties:\n        allowedOrigins:\n          type: array\n          items:\n            type: string\n          description: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains\n        allowedMethods:\n          type: array\n          items:\n            type: string\n            enum:\n              - DELETE\n              - GET\n              - HEAD\n              - MERGE\n              - POST\n              - OPTIONS\n              - PUT\n              - PATCH\n            x-ms-enum:\n              name: AllowedMethods\n              modelAsString: true\n          description: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.\n        maxAgeInSeconds:\n          type: integer\n          description: Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.\n        exposedHeaders:\n          type: array\n          items:\n            type: string\n          description: Required if CorsRule element is present. A list of response headers to expose to CORS clients.\n        allowedHeaders:\n          type: array\n          items:\n            type: string\n          description: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.\n      required:\n        - allowedOrigins\n        - allowedMethods\n        - maxAgeInSeconds\n        - exposedHeaders\n        - allowedHeaders\n      description: Specifies a CORS rule for the Blob service.\n      type: object\n    DeleteRetentionPolicy:\n      properties:\n        enabled:\n          type: boolean\n          description: Indicates whether DeleteRetentionPolicy is enabled.\n        days:\n          type: integer\n          minimum: 1\n          maximum: 365\n          description: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.\n        allowPermanentDelete:\n          type: boolean\n          description: This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.\n      description: The service properties for soft delete.\n      type: object\n    SkuName:\n      type: string\n      description: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.\n      enum:\n        - Standard_LRS\n        - Standard_GRS\n        - Standard_RAGRS\n        - Standard_ZRS\n        - Premium_LRS\n        - Premium_ZRS\n        - Standard_GZRS\n        - Standard_RAGZRS\n      x-ms-enum:\n        name: SkuName\n        modelAsString: true\n    Tier:\n      readOnly: true\n      type: string\n      description: The SKU tier. This is based on the SKU name.\n      enum:\n        - Standard\n        - Premium\n      x-ms-enum:\n        name: SkuTier\n        modelAsString: false\n    CloudError:\n      x-ms-external: true\n      properties:\n        error:\n          $ref: '#/components/schemas/CloudErrorBody'\n      description: An error response from the Storage service.\n      type: object\n    CloudErrorBody:\n      x-ms-external: true\n      properties:\n        code:\n          type: string\n          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n        message:\n          type: string\n          description: A message describing the error, intended to be suitable for display in a user interface.\n        target:\n          type: string\n          description: The target of the particular error. For example, the name of the property in error.\n        details:\n          type: array\n          items:\n            $ref: '#/components/schemas/CloudErrorBody'\n          description: A list of additional details about the error.\n      description: An error response from the Storage service.\n      type: object\n    ErrorDetail:\n      description: The error detail.\n      type: object\n      properties:\n        code:\n          readOnly: true\n          type: string\n          description: The error code.\n        message:\n          readOnly: true\n          type: string\n          description: The error message.\n        target:\n          readOnly: true\n          type: string\n          description: The error target.\n        details:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n          x-ms-identifiers:\n            - message\n            - target\n          description: The error details.\n        additionalInfo:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorAdditionalInfo'\n          x-ms-identifiers: []\n          description: The error additional info.\n    OperationStatusResult:\n      description: The current status of an async operation.\n      type: object\n      required:\n        - status\n      properties:\n        id:\n          description: Fully qualified ID for the async operation.\n          type: string\n        name:\n          description: Name of the async operation.\n          type: string\n        status:\n          description: Operation status.\n          type: string\n        percentComplete:\n          description: Percent of the operation that is complete.\n          type: number\n          minimum: 0\n          maximum: 100\n        startTime:\n          description: The start time of the operation.\n          type: string\n          format: date-time\n        endTime:\n          description: The end time of the operation.\n          type: string\n          format: date-time\n        operations:\n          description: The operations list.\n          type: array\n          items:\n            $ref: '#/components/schemas/OperationStatusResult'\n        error:\n          description: If present, details of the operation error.\n          $ref: '#/components/schemas/ErrorDetail'\n    CheckNameAvailabilityRequest:\n      description: The check availability request body.\n      type: object\n      properties:\n        name:\n          description: The name of the resource for which availability needs to be checked.\n          type: string\n        type:\n          description: The resource type.\n          type: string\n    CheckNameAvailabilityResponse:\n      description: The check availability result.\n      type: object\n      properties:\n        nameAvailable:\n          description: Indicates if the resource name is available.\n          type: boolean\n        reason:\n          description: The reason why the given name is not available.\n          type: string\n          enum:\n            - Invalid\n            - AlreadyExists\n          x-ms-enum:\n            name: CheckNameAvailabilityReason\n            modelAsString: true\n        message:\n          description: Detailed reason why the given name is available.\n          type: string\n    ContainerProperties:\n      properties:\n        version:\n          type: string\n          readOnly: true\n          description: The version of the deleted blob container.\n        deleted:\n          type: boolean\n          readOnly: true\n          description: Indicates whether the blob container was deleted.\n        deletedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Blob container deletion time.\n        remainingRetentionDays:\n          type: integer\n          readOnly: true\n          description: Remaining retention days for soft deleted blob container.\n        defaultEncryptionScope:\n          type: string\n          description: Default the container to use specified encryption scope for all writes.\n        denyEncryptionScopeOverride:\n          type: boolean\n          description: Block override of encryption scope from the container default.\n        publicAccess:\n          type: string\n          enum:\n            - Container\n            - Blob\n            - None\n          x-ms-enum:\n            name: PublicAccess\n            modelAsString: false\n          description: Specifies whether data in the container may be accessed publicly and the level of access.\n        lastModifiedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the container was last modified.\n        leaseStatus:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: LeaseStatus\n            modelAsString: true\n          description: The lease status of the container.\n        leaseState:\n          type: string\n          readOnly: true\n          enum:\n            - Available\n            - Leased\n            - Expired\n            - Breaking\n            - Broken\n          x-ms-enum:\n            name: LeaseState\n            modelAsString: true\n          description: Lease state of the container.\n        leaseDuration:\n          type: string\n          readOnly: true\n          enum:\n            - Infinite\n            - Fixed\n          x-ms-enum:\n            name: LeaseDuration\n            modelAsString: true\n          description: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair to associate with the container as metadata.\n        immutabilityPolicy:\n          readOnly: true\n          $ref: '#/components/schemas/ImmutabilityPolicyProperties'\n          x-ms-client-name: ImmutabilityPolicy\n          description: The ImmutabilityPolicy property of the container.\n        legalHold:\n          readOnly: true\n          $ref: '#/components/schemas/LegalHoldProperties'\n          description: The LegalHold property of the container.\n        hasLegalHold:\n          type: boolean\n          readOnly: true\n          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n        hasImmutabilityPolicy:\n          type: boolean\n          readOnly: true\n          description: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageWithVersioning'\n          description: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.\n        enableNfsV3RootSquash:\n          type: boolean\n          description: Enable NFSv3 root squash on blob container.\n        enableNfsV3AllSquash:\n          type: boolean\n          description: Enable NFSv3 all squash on blob container.\n      description: The properties of a container.\n      type: object\n    BlobContainer:\n      description: Properties of the blob container, including Id, resource name, resource type, Etag.\n      properties:\n        version:\n          type: string\n          readOnly: true\n          description: The version of the deleted blob container.\n        deleted:\n          type: boolean\n          readOnly: true\n          description: Indicates whether the blob container was deleted.\n        deletedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Blob container deletion time.\n        remainingRetentionDays:\n          type: integer\n          readOnly: true\n          description: Remaining retention days for soft deleted blob container.\n        defaultEncryptionScope:\n          type: string\n          description: Default the container to use specified encryption scope for all writes.\n        denyEncryptionScopeOverride:\n          type: boolean\n          description: Block override of encryption scope from the container default.\n        publicAccess:\n          type: string\n          enum:\n            - Container\n            - Blob\n            - None\n          x-ms-enum:\n            name: PublicAccess\n            modelAsString: false\n          description: Specifies whether data in the container may be accessed publicly and the level of access.\n        lastModifiedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the container was last modified.\n        leaseStatus:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: LeaseStatus\n            modelAsString: true\n          description: The lease status of the container.\n        leaseState:\n          type: string\n          readOnly: true\n          enum:\n            - Available\n            - Leased\n            - Expired\n            - Breaking\n            - Broken\n          x-ms-enum:\n            name: LeaseState\n            modelAsString: true\n          description: Lease state of the container.\n        leaseDuration:\n          type: string\n          readOnly: true\n          enum:\n            - Infinite\n            - Fixed\n          x-ms-enum:\n            name: LeaseDuration\n            modelAsString: true\n          description: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair to associate with the container as metadata.\n        immutabilityPolicy:\n          readOnly: true\n          $ref: '#/components/schemas/ImmutabilityPolicyProperties'\n          x-ms-client-name: ImmutabilityPolicy\n          description: The ImmutabilityPolicy property of the container.\n        legalHold:\n          readOnly: true\n          $ref: '#/components/schemas/LegalHoldProperties'\n          description: The LegalHold property of the container.\n        hasLegalHold:\n          type: boolean\n          readOnly: true\n          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n        hasImmutabilityPolicy:\n          type: boolean\n          readOnly: true\n          description: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageWithVersioning'\n          description: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.\n        enableNfsV3RootSquash:\n          type: boolean\n          description: Enable NFSv3 root squash on blob container.\n        enableNfsV3AllSquash:\n          type: boolean\n          description: Enable NFSv3 all squash on blob container.\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      type: object\n    ImmutabilityPolicyProperty:\n      properties:\n        immutabilityPeriodSinceCreationInDays:\n          type: integer\n          description: The immutability period for the blobs in the container since the policy creation, in days.\n        state:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: ImmutabilityPolicyState\n            modelAsString: true\n          description: 'The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.'\n        allowProtectedAppendWrites:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.\n        allowProtectedAppendWritesAll:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.\n      description: The properties of an ImmutabilityPolicy of a blob container.\n      type: object\n    ImmutabilityPolicyProperties:\n      description: The properties of an ImmutabilityPolicy of a blob container.\n      properties:\n        immutabilityPeriodSinceCreationInDays:\n          type: integer\n          description: The immutability period for the blobs in the container since the policy creation, in days.\n        state:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: ImmutabilityPolicyState\n            modelAsString: true\n          description: 'The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.'\n        allowProtectedAppendWrites:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.\n        allowProtectedAppendWritesAll:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.\n        etag:\n          type: string\n          readOnly: true\n          description: ImmutabilityPolicy Etag.\n        updateHistory:\n          type: array\n          readOnly: true\n          items:\n            $ref: '#/components/schemas/UpdateHistoryProperty'\n          description: The ImmutabilityPolicy update history of the blob container.\n      type: object\n    ImmutabilityPolicy:\n      required:\n        - properties\n      description: The ImmutabilityPolicy property of a blob container, including Id, resource name, resource type, Etag.\n      properties:\n        immutabilityPeriodSinceCreationInDays:\n          type: integer\n          description: The immutability period for the blobs in the container since the policy creation, in days.\n        state:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: ImmutabilityPolicyState\n            modelAsString: true\n          description: 'The ImmutabilityPolicy state of a blob container, possible values include: Locked and Unlocked.'\n        allowProtectedAppendWrites:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.\n        allowProtectedAppendWritesAll:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      type: object\n    ImmutableStorageWithVersioning:\n      properties:\n        enabled:\n          type: boolean\n          description: This is an immutable property, when set to true it enables object level immutability at the container level.\n        timeStamp:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the object level immutability was enabled.\n        migrationState:\n          type: string\n          readOnly: true\n          enum:\n            - InProgress\n            - Completed\n          x-ms-enum:\n            name: MigrationState\n            modelAsString: true\n          description: This property denotes the container level immutability to object level immutability migration state.\n      description: Object level immutability properties of the container.\n      type: object\n    UpdateHistoryProperty:\n      properties:\n        update:\n          type: string\n          readOnly: true\n          enum:\n            - put\n            - lock\n            - extend\n          x-ms-enum:\n            name: ImmutabilityPolicyUpdateType\n            modelAsString: true\n          description: 'The ImmutabilityPolicy update type of a blob container, possible values include: put, lock and extend.'\n        immutabilityPeriodSinceCreationInDays:\n          type: integer\n          readOnly: true\n          description: The immutability period for the blobs in the container since the policy creation, in days.\n        timestamp:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the ImmutabilityPolicy was updated.\n        objectIdentifier:\n          type: string\n          readOnly: true\n          description: Returns the Object ID of the user who updated the ImmutabilityPolicy.\n        tenantId:\n          type: string\n          readOnly: true\n          description: Returns the Tenant ID that issued the token for the user who updated the ImmutabilityPolicy.\n        upn:\n          type: string\n          readOnly: true\n          description: Returns the User Principal Name of the user who updated the ImmutabilityPolicy.\n        allowProtectedAppendWrites:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.\n        allowProtectedAppendWritesAll:\n          type: boolean\n          description: This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.\n      description: An update history of the ImmutabilityPolicy of a blob container.\n      type: object\n    LegalHoldProperties:\n      properties:\n        hasLegalHold:\n          type: boolean\n          readOnly: true\n          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n        tags:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagProperty'\n          description: The list of LegalHold tags of a blob container.\n        protectedAppendWritesHistory:\n          type: object\n          $ref: '#/components/schemas/ProtectedAppendWritesHistory'\n          description: Protected append blob writes history.\n      description: The LegalHold property of a blob container.\n      type: object\n    TagProperty:\n      properties:\n        tag:\n          type: string\n          readOnly: true\n          description: The tag value.\n        timestamp:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the tag was added.\n        objectIdentifier:\n          type: string\n          readOnly: true\n          description: Returns the Object ID of the user who added the tag.\n        tenantId:\n          type: string\n          readOnly: true\n          description: Returns the Tenant ID that issued the token for the user who added the tag.\n        upn:\n          type: string\n          readOnly: true\n          description: Returns the User Principal Name of the user who added the tag.\n      description: A tag of the LegalHold of a blob container.\n      type: object\n    ProtectedAppendWritesHistory:\n      type: object\n      properties:\n        allowProtectedAppendWritesAll:\n          type: boolean\n          description: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.\n        timestamp:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the tag was added.\n      description: Protected append writes history setting for the blob container with Legal holds.\n    LegalHold:\n      properties:\n        hasLegalHold:\n          type: boolean\n          readOnly: true\n          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n        tags:\n          type: array\n          items:\n            type: string\n            maxLength: 23\n            minLength: 3\n          description: Each tag should be 3 to 23 alphanumeric characters and is normalized to lower case at SRP.\n        allowProtectedAppendWritesAll:\n          type: boolean\n          description: When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining legal hold protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.\n      required:\n        - tags\n      description: The LegalHold property of a blob container.\n      type: object\n    ListContainerItem:\n      description: The blob container properties be listed out.\n      properties:\n        version:\n          type: string\n          readOnly: true\n          description: The version of the deleted blob container.\n        deleted:\n          type: boolean\n          readOnly: true\n          description: Indicates whether the blob container was deleted.\n        deletedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Blob container deletion time.\n        remainingRetentionDays:\n          type: integer\n          readOnly: true\n          description: Remaining retention days for soft deleted blob container.\n        defaultEncryptionScope:\n          type: string\n          description: Default the container to use specified encryption scope for all writes.\n        denyEncryptionScopeOverride:\n          type: boolean\n          description: Block override of encryption scope from the container default.\n        publicAccess:\n          type: string\n          enum:\n            - Container\n            - Blob\n            - None\n          x-ms-enum:\n            name: PublicAccess\n            modelAsString: false\n          description: Specifies whether data in the container may be accessed publicly and the level of access.\n        lastModifiedTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the date and time the container was last modified.\n        leaseStatus:\n          type: string\n          readOnly: true\n          enum:\n            - Locked\n            - Unlocked\n          x-ms-enum:\n            name: LeaseStatus\n            modelAsString: true\n          description: The lease status of the container.\n        leaseState:\n          type: string\n          readOnly: true\n          enum:\n            - Available\n            - Leased\n            - Expired\n            - Breaking\n            - Broken\n          x-ms-enum:\n            name: LeaseState\n            modelAsString: true\n          description: Lease state of the container.\n        leaseDuration:\n          type: string\n          readOnly: true\n          enum:\n            - Infinite\n            - Fixed\n          x-ms-enum:\n            name: LeaseDuration\n            modelAsString: true\n          description: Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair to associate with the container as metadata.\n        immutabilityPolicy:\n          readOnly: true\n          $ref: '#/components/schemas/ImmutabilityPolicyProperties'\n          x-ms-client-name: ImmutabilityPolicy\n          description: The ImmutabilityPolicy property of the container.\n        legalHold:\n          readOnly: true\n          $ref: '#/components/schemas/LegalHoldProperties'\n          description: The LegalHold property of the container.\n        hasLegalHold:\n          type: boolean\n          readOnly: true\n          description: The hasLegalHold public property is set to true by SRP if there are at least one existing tag. The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.\n        hasImmutabilityPolicy:\n          type: boolean\n          readOnly: true\n          description: The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container. The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageWithVersioning'\n          description: The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.\n        enableNfsV3RootSquash:\n          type: boolean\n          description: Enable NFSv3 root squash on blob container.\n        enableNfsV3AllSquash:\n          type: boolean\n          description: Enable NFSv3 all squash on blob container.\n        etag:\n          type: string\n          readOnly: true\n          description: Resource Etag.\n      type: object\n    ListContainerItems:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ListContainerItem'\n          description: List of blobs containers returned.\n          readOnly: true\n        nextLink:\n          type: string\n          description: Request URL that can be used to query next page of containers. Returned when total number of requested containers exceed maximum page size.\n          readOnly: true\n      description: Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers.\n      type: object\n    BlobServiceProperties:\n      description: The properties of a storage account’s Blob service.\n      properties:\n        properties:\n          properties:\n            cors:\n              $ref: '#/components/schemas/CorsRules'\n              description: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.\n            defaultServiceVersion:\n              type: string\n              description: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.\n            deleteRetentionPolicy:\n              $ref: '#/components/schemas/DeleteRetentionPolicy'\n              description: The blob service properties for blob soft delete.\n            isVersioningEnabled:\n              type: boolean\n              description: Versioning is enabled if set to true.\n            automaticSnapshotPolicyEnabled:\n              type: boolean\n              description: Deprecated in favor of isVersioningEnabled property.\n            changeFeed:\n              $ref: '#/components/schemas/ChangeFeed'\n              description: The blob service properties for change feed events.\n            restorePolicy:\n              $ref: '#/components/schemas/RestorePolicyProperties'\n              description: The blob service properties for blob restore policy.\n            containerDeleteRetentionPolicy:\n              $ref: '#/components/schemas/DeleteRetentionPolicy'\n              description: The blob service properties for container soft delete.\n            lastAccessTimeTrackingPolicy:\n              $ref: '#/components/schemas/LastAccessTimeTrackingPolicy'\n              description: The blob service property to configure last access time based tracking policy.\n          x-ms-client-flatten: true\n          x-ms-client-name: BlobServiceProperties\n          description: The properties of a storage account’s Blob service.\n        sku:\n          $ref: '#/components/schemas/Sku'\n          readOnly: true\n          description: Sku name and tier.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    BlobServiceItems:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlobServiceProperties'\n          description: List of blob services returned.\n          readOnly: true\n      type: object\n    ChangeFeed:\n      properties:\n        enabled:\n          type: boolean\n          description: Indicates whether change feed event logging is enabled for the Blob service.\n        retentionInDays:\n          type: integer\n          minimum: 1\n          maximum: 146000\n          format: int32\n          description: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.\n      description: The blob service properties for change feed events.\n      type: object\n    RestorePolicyProperties:\n      properties:\n        enabled:\n          type: boolean\n          description: Blob restore is enabled if set to true.\n        days:\n          type: integer\n          minimum: 1\n          maximum: 365\n          description: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.\n        lastEnabledTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Deprecated in favor of minRestoreTime property.\n        minRestoreTime:\n          type: string\n          format: date-time\n          readOnly: true\n          description: Returns the minimum date and time that the restore can be started.\n      required:\n        - enabled\n      description: The blob service properties for blob restore policy\n      type: object\n    LastAccessTimeTrackingPolicy:\n      properties:\n        enable:\n          type: boolean\n          description: When set to true last access time based tracking is enabled.\n        name:\n          type: string\n          description: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only\n          enum:\n            - AccessTimeTracking\n          x-ms-enum:\n            name: name\n            modelAsString: true\n        trackingGranularityInDays:\n          type: integer\n          format: int32\n          description: The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1\n        blobType:\n          type: array\n          items:\n            type: string\n          description: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only\n      required:\n        - enable\n      description: The blob service properties for Last access time based tracking policy.\n      type: object\n    LeaseContainerRequest:\n      properties:\n        action:\n          type: string\n          enum:\n            - Acquire\n            - Renew\n            - Change\n            - Release\n            - Break\n          x-ms-enum:\n            name: LeaseContainerRequestAction\n            modelAsString: true\n          description: Specifies the lease action. Can be one of the available actions.\n        leaseId:\n          type: string\n          description: Identifies the lease. Can be specified in any valid GUID string format.\n        breakPeriod:\n          type: integer\n          description: Optional. For a break action, proposed duration the lease should continue before it is broken, in seconds, between 0 and 60.\n        leaseDuration:\n          type: integer\n          description: Required for acquire. Specifies the duration of the lease, in seconds, or negative one (-1) for a lease that never expires.\n        proposedLeaseId:\n          type: string\n          description: Optional for acquire, required for change. Proposed lease ID, in a GUID string format.\n      required:\n        - action\n      description: Lease Container request schema.\n      type: object\n    LeaseContainerResponse:\n      properties:\n        leaseId:\n          type: string\n          description: Returned unique lease ID that must be included with any request to delete the container, or to renew, change, or release the lease.\n        leaseTimeSeconds:\n          type: string\n          description: Approximate time remaining in the lease period, in seconds.\n      description: Lease Container response schema.\n      type: object\n    ListTableServices:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/TableServiceProperties'\n          description: List of table services returned.\n          readOnly: true\n      type: object\n    TableServiceProperties:\n      description: The properties of a storage account’s Table service.\n      properties:\n        properties:\n          properties:\n            cors:\n              $ref: '#/components/schemas/CorsRules'\n              description: Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service.\n          x-ms-client-flatten: true\n          x-ms-client-name: TableServiceProperties\n          description: The properties of a storage account’s Table service.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    Table:\n      description: Properties of the table, including Id, resource name, resource type.\n      properties:\n        tableName:\n          type: string\n          readOnly: true\n          description: Table name under the specified account\n        signedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TableSignedIdentifier'\n          description: List of stored access policies specified on the table.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    TableProperties:\n      properties:\n        tableName:\n          type: string\n          readOnly: true\n          description: Table name under the specified account\n        signedIdentifiers:\n          type: array\n          items:\n            $ref: '#/components/schemas/TableSignedIdentifier'\n          description: List of stored access policies specified on the table.\n      type: object\n    ListTableResource:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Table'\n          description: List of tables returned.\n          readOnly: true\n        nextLink:\n          type: string\n          description: Request URL that can be used to query next page of tables\n          readOnly: true\n      description: Response schema. Contains list of tables returned\n      type: object\n    TableSignedIdentifier:\n      properties:\n        id:\n          type: string\n          description: unique-64-character-value of the stored access policy.\n        accessPolicy:\n          $ref: '#/components/schemas/TableAccessPolicy'\n          description: Access policy\n      required:\n        - id\n      type: object\n      description: Object to set Table Access Policy.\n    TableAccessPolicy:\n      properties:\n        startTime:\n          type: string\n          format: date-time\n          description: Start time of the access policy\n        expiryTime:\n          type: string\n          format: date-time\n          description: Expiry time of the access policy\n        permission:\n          type: string\n          description: Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'\n      required:\n        - permission\n      type: object\n      description: Table Access Policy Properties Object.\n    ListQueueServices:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/QueueServiceProperties'\n          description: List of queue services returned.\n          readOnly: true\n      type: object\n    QueueServiceProperties:\n      description: The properties of a storage account’s Queue service.\n      properties:\n        properties:\n          properties:\n            cors:\n              $ref: '#/components/schemas/CorsRules'\n              description: Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.\n          x-ms-client-flatten: true\n          x-ms-client-name: QueueServiceProperties\n          description: The properties of a storage account’s Queue service.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    StorageQueue:\n      properties:\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair that represents queue metadata.\n        approximateMessageCount:\n          type: integer\n          readOnly: true\n          description: Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    QueueProperties:\n      properties:\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair that represents queue metadata.\n        approximateMessageCount:\n          type: integer\n          readOnly: true\n          description: Integer indicating an approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.\n      type: object\n    ListQueue:\n      properties:\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair that represents queue metadata.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    ListQueueProperties:\n      properties:\n        metadata:\n          type: object\n          additionalProperties:\n            type: string\n          description: A name-value pair that represents queue metadata.\n      type: object\n    ListQueueResource:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ListQueue'\n          description: List of queues returned.\n          readOnly: true\n        nextLink:\n          type: string\n          description: Request URL that can be used to list next page of queues\n          readOnly: true\n      description: Response schema. Contains list of queues returned\n      type: object\n    OperationProperties:\n      description: Properties of operation, include metric specifications.\n      properties:\n        serviceSpecification:\n          $ref: '#/components/schemas/ServiceSpecification'\n          description: One property of operation, include metric specifications.\n      type: object\n    ServiceSpecification:\n      description: One property of operation, include metric specifications.\n      properties:\n        metricSpecifications:\n          description: Metric specifications of operation.\n          type: array\n          items:\n            $ref: '#/components/schemas/MetricSpecification'\n      type: object\n    MetricSpecification:\n      description: Metric specification of operation.\n      properties:\n        name:\n          type: string\n          description: Name of metric specification.\n        displayName:\n          type: string\n          description: Display name of metric specification.\n        displayDescription:\n          type: string\n          description: Display description of metric specification.\n        unit:\n          type: string\n          description: Unit could be Bytes or Count.\n        dimensions:\n          description: Dimensions of blobs, including blob type and access tier.\n          type: array\n          items:\n            $ref: '#/components/schemas/Dimension'\n        aggregationType:\n          type: string\n          description: Aggregation type could be Average.\n        fillGapWithZero:\n          type: boolean\n          description: The property to decide fill gap with zero or not.\n        category:\n          type: string\n          description: The category this metric specification belong to, could be Capacity.\n        resourceIdDimensionNameOverride:\n          type: string\n          description: Account Resource Id.\n      type: object\n    Dimension:\n      description: Dimension of blobs, possibly be blob type or access tier.\n      properties:\n        name:\n          type: string\n          description: Display name of dimension.\n        displayName:\n          type: string\n          description: Display name of dimension.\n      type: object\n    StorageAccountCheckNameAvailabilityParameters:\n      properties:\n        name:\n          type: string\n          description: The storage account name.\n        type:\n          type: string\n          enum:\n            - Microsoft.Storage/storageAccounts\n          x-ms-enum:\n            name: Type\n            modelAsString: false\n          description: The type of resource, Microsoft.Storage/storageAccounts\n      required:\n        - name\n        - type\n      description: The parameters used to check the availability of the storage account name.\n      type: object\n    SKUCapability:\n      properties:\n        name:\n          readOnly: true\n          type: string\n          description: The name of capability, The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n        value:\n          readOnly: true\n          type: string\n          description: A string value to indicate states of given capability. Possibly 'true' or 'false'.\n      description: The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n      type: object\n    Restriction:\n      properties:\n        type:\n          readOnly: true\n          type: string\n          description: The type of restrictions. As of now only possible value for this is location.\n        values:\n          readOnly: true\n          type: array\n          items:\n            type: string\n          description: The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.\n        reasonCode:\n          type: string\n          enum:\n            - QuotaId\n            - NotAvailableForSubscription\n          x-ms-enum:\n            name: ReasonCode\n            modelAsString: true\n          description: The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC.\n      description: The restriction because of which SKU cannot be used.\n      type: object\n    StorageSkuListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/SkuInformation'\n          description: Get the list result of storage SKUs and their properties.\n      description: The response from the List Storage SKUs operation.\n      type: object\n    CheckNameAvailabilityResult:\n      properties:\n        nameAvailable:\n          readOnly: true\n          type: boolean\n          description: Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or is invalid and cannot be used.\n        reason:\n          readOnly: true\n          type: string\n          description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.\n          enum:\n            - AccountNameInvalid\n            - AlreadyExists\n          x-ms-enum:\n            name: Reason\n            modelAsString: false\n        message:\n          readOnly: true\n          type: string\n          description: Gets an error message explaining the Reason value in more detail.\n      description: The CheckNameAvailability operation response.\n      type: object\n    SkuInformation:\n      properties:\n        name:\n          $ref: '#/components/schemas/SkuName'\n        tier:\n          $ref: '#/components/schemas/Tier'\n        resourceType:\n          readOnly: true\n          type: string\n          description: The type of the resource, usually it is 'storageAccounts'.\n        kind:\n          readOnly: true\n          type: string\n          description: Indicates the type of storage account.\n          enum:\n            - Storage\n            - StorageV2\n            - BlobStorage\n            - FileStorage\n            - BlockBlobStorage\n          x-ms-enum:\n            name: Kind\n            modelAsString: true\n        locations:\n          readOnly: true\n          type: array\n          items:\n            type: string\n          description: The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).\n        capabilities:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/SKUCapability'\n          description: The capability information in the specified SKU, including file encryption, network ACLs, change notification, etc.\n        restrictions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Restriction'\n          description: The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.\n      required:\n        - name\n      description: Storage SKU and its properties\n      type: object\n    CustomDomain:\n      properties:\n        name:\n          type: string\n          description: Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.\n        useSubDomainName:\n          type: boolean\n          description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.\n      required:\n        - name\n      description: The custom domain assigned to this storage account. This can be set via Update.\n      type: object\n    SasPolicy:\n      properties:\n        sasExpirationPeriod:\n          type: string\n          example: 1.15:59:59\n          description: The SAS expiration period, DD.HH:MM:SS.\n        expirationAction:\n          type: string\n          enum:\n            - Log\n          x-ms-enum:\n            name: ExpirationAction\n            modelAsString: true\n          default: Log\n          description: The SAS expiration action. Can only be Log.\n      required:\n        - sasExpirationPeriod\n        - expirationAction\n      description: SasPolicy assigned to the storage account.\n      type: object\n    KeyPolicy:\n      properties:\n        keyExpirationPeriodInDays:\n          type: integer\n          description: The key expiration period in days.\n          format: int32\n      required:\n        - keyExpirationPeriodInDays\n      description: KeyPolicy assigned to the storage account.\n      type: object\n    KeyCreationTime:\n      properties:\n        key1:\n          type: string\n          format: date-time\n          example: '2021-02-03T05:57:30.917Z'\n        key2:\n          type: string\n          format: date-time\n          example: '2021-02-03T05:57:30.917Z'\n      description: Storage account keys creation time.\n      type: object\n    EncryptionService:\n      properties:\n        enabled:\n          type: boolean\n          description: A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled.\n        lastEnabledTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets a rough estimate of the date/time when the encryption was last enabled by the user. Data is encrypted at rest by default today and cannot be disabled.\n        keyType:\n          type: string\n          description: Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.\n          enum:\n            - Service\n            - Account\n          x-ms-enum:\n            name: KeyType\n            modelAsString: true\n          x-ms-mutability:\n            - create\n            - read\n      description: A service that allows server-side encryption to be used.\n      type: object\n    EncryptionServices:\n      properties:\n        blob:\n          $ref: '#/components/schemas/EncryptionService'\n          description: The encryption function of the blob storage service.\n        file:\n          $ref: '#/components/schemas/EncryptionService'\n          description: The encryption function of the file storage service.\n        table:\n          $ref: '#/components/schemas/EncryptionService'\n          description: The encryption function of the table storage service.\n        queue:\n          $ref: '#/components/schemas/EncryptionService'\n          description: The encryption function of the queue storage service.\n      description: A list of services that support encryption.\n      type: object\n    Encryption:\n      properties:\n        services:\n          $ref: '#/components/schemas/EncryptionServices'\n          description: List of services which support encryption.\n        keySource:\n          type: string\n          description: 'The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault'\n          enum:\n            - Microsoft.Storage\n            - Microsoft.Keyvault\n          x-ms-enum:\n            name: KeySource\n            modelAsString: true\n          default: Microsoft.Storage\n        requireInfrastructureEncryption:\n          type: boolean\n          x-ms-client-name: RequireInfrastructureEncryption\n          description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n        keyvaultproperties:\n          $ref: '#/components/schemas/KeyVaultProperties'\n          x-ms-client-name: KeyVaultProperties\n          description: Properties provided by key vault.\n        identity:\n          $ref: '#/components/schemas/EncryptionIdentity'\n          x-ms-client-name: EncryptionIdentity\n          description: The identity to be used with service-side encryption at rest.\n      description: The encryption settings on the storage account.\n      type: object\n    EncryptionIdentity:\n      properties:\n        userAssignedIdentity:\n          type: string\n          description: Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.\n          x-ms-client-name: EncryptionUserAssignedIdentity\n        federatedIdentityClientId:\n          type: string\n          description: ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account.\n          x-ms-client-name: EncryptionFederatedIdentityClientId\n      description: Encryption identity for the storage account.\n      type: object\n    UserAssignedIdentity:\n      properties:\n        principalId:\n          readOnly: true\n          type: string\n          description: The principal ID of the identity.\n        clientId:\n          readOnly: true\n          type: string\n          description: The client ID of the identity.\n      description: UserAssignedIdentity for the resource.\n      type: object\n    ResourceAccessRule:\n      properties:\n        tenantId:\n          type: string\n          description: Tenant Id\n        resourceId:\n          type: string\n          description: Resource Id\n      description: Resource Access Rule.\n      type: object\n    VirtualNetworkRule:\n      properties:\n        id:\n          type: string\n          x-ms-client-name: VirtualNetworkResourceId\n          description: 'Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.'\n        action:\n          type: string\n          enum:\n            - Allow\n          x-ms-enum:\n            name: Action\n            modelAsString: false\n          default: Allow\n          description: The action of virtual network rule.\n        state:\n          type: string\n          enum:\n            - Provisioning\n            - Deprovisioning\n            - Succeeded\n            - Failed\n            - NetworkSourceDeleted\n          x-ms-enum:\n            name: State\n            modelAsString: true\n          description: Gets the state of virtual network rule.\n      required:\n        - id\n      description: Virtual Network rule.\n      type: object\n    IPRule:\n      properties:\n        value:\n          type: string\n          x-ms-client-name: IPAddressOrRange\n          description: Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.\n        action:\n          type: string\n          enum:\n            - Allow\n          x-ms-enum:\n            name: Action\n            modelAsString: false\n          default: Allow\n          description: The action of IP ACL rule.\n      required:\n        - value\n      description: IP rule with specific IP or IP range in CIDR format.\n      type: object\n    NetworkRuleSet:\n      properties:\n        bypass:\n          type: string\n          enum:\n            - None\n            - Logging\n            - Metrics\n            - AzureServices\n          x-ms-enum:\n            name: Bypass\n            modelAsString: true\n          x-ms-client-name: Bypass\n          default: AzureServices\n          description: Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.\n        resourceAccessRules:\n          type: array\n          items:\n            description: Resource Access Rules.\n            $ref: '#/components/schemas/ResourceAccessRule'\n          description: Sets the resource access rules\n        virtualNetworkRules:\n          type: array\n          items:\n            description: Virtual Network rule.\n            $ref: '#/components/schemas/VirtualNetworkRule'\n          description: Sets the virtual network rules\n        ipRules:\n          type: array\n          items:\n            description: IP rule with specific IP or IP range in CIDR format.\n            $ref: '#/components/schemas/IPRule'\n          description: Sets the IP ACL rules\n        defaultAction:\n          type: string\n          enum:\n            - Allow\n            - Deny\n          x-ms-enum:\n            name: DefaultAction\n            modelAsString: false\n          default: Allow\n          description: Specifies the default action of allow or deny when no other rules match.\n      required:\n        - defaultAction\n      description: Network rule set\n      type: object\n    AzureFilesIdentityBasedAuthentication:\n      properties:\n        directoryServiceOptions:\n          type: string\n          description: Indicates the directory service used. Note that this enum may be extended in the future.\n          enum:\n            - None\n            - AADDS\n            - AD\n            - AADKERB\n          x-ms-enum:\n            name: DirectoryServiceOptions\n            modelAsString: true\n        activeDirectoryProperties:\n          $ref: '#/components/schemas/ActiveDirectoryProperties'\n          description: Required if directoryServiceOptions are AD, optional if they are AADKERB.\n        defaultSharePermission:\n          type: string\n          description: Default share permission for users using Kerberos authentication if RBAC role is not assigned.\n          enum:\n            - None\n            - StorageFileDataSmbShareReader\n            - StorageFileDataSmbShareContributor\n            - StorageFileDataSmbShareElevatedContributor\n          x-ms-enum:\n            name: DefaultSharePermission\n            modelAsString: true\n      required:\n        - directoryServiceOptions\n      description: Settings for Azure Files identity based authentication.\n      type: object\n    ActiveDirectoryProperties:\n      properties:\n        domainName:\n          type: string\n          description: Specifies the primary domain that the AD DNS server is authoritative for.\n        netBiosDomainName:\n          type: string\n          description: Specifies the NetBIOS domain name.\n        forestName:\n          type: string\n          description: Specifies the Active Directory forest to get.\n        domainGuid:\n          type: string\n          description: Specifies the domain GUID.\n        domainSid:\n          type: string\n          description: Specifies the security identifier (SID).\n        azureStorageSid:\n          type: string\n          description: Specifies the security identifier (SID) for Azure Storage.\n        samAccountName:\n          type: string\n          description: Specifies the Active Directory SAMAccountName for Azure Storage.\n        accountType:\n          type: string\n          description: Specifies the Active Directory account type for Azure Storage.\n          enum:\n            - User\n            - Computer\n          x-ms-enum:\n            name: AccountType\n            modelAsString: true\n      required:\n        - domainName\n        - domainGuid\n      description: Settings properties for Active Directory (AD).\n      type: object\n    StorageAccountPropertiesCreateParameters:\n      properties:\n        allowedCopyScope:\n          type: string\n          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.\n          enum:\n            - PrivateLink\n            - AAD\n          x-ms-enum:\n            name: AllowedCopyScope\n            modelAsString: true\n        publicNetworkAccess:\n          type: string\n          description: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: PublicNetworkAccess\n            modelAsString: true\n        sasPolicy:\n          $ref: '#/components/schemas/SasPolicy'\n          description: SasPolicy assigned to the storage account.\n        keyPolicy:\n          $ref: '#/components/schemas/KeyPolicy'\n          description: KeyPolicy assigned to the storage account.\n        customDomain:\n          $ref: '#/components/schemas/CustomDomain'\n          description: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.\n        encryption:\n          $ref: '#/components/schemas/Encryption'\n          description: Encryption settings to be used for server-side encryption for the storage account.\n        networkAcls:\n          $ref: '#/components/schemas/NetworkRuleSet'\n          x-ms-client-name: NetworkRuleSet\n          description: Network rule set\n        accessTier:\n          type: string\n          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n          enum:\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: AccessTier\n            modelAsString: false\n        azureFilesIdentityBasedAuthentication:\n          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'\n          description: Provides the identity based authentication settings for Azure Files.\n        supportsHttpsTrafficOnly:\n          type: boolean\n          x-ms-client-name: EnableHttpsTrafficOnly\n          description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.\n        isSftpEnabled:\n          type: boolean\n          x-ms-client-name: IsSftpEnabled\n          description: Enables Secure File Transfer Protocol, if set to true\n        isLocalUserEnabled:\n          type: boolean\n          x-ms-client-name: IsLocalUserEnabled\n          description: Enables local users feature, if set to true\n        isHnsEnabled:\n          type: boolean\n          x-ms-client-name: IsHnsEnabled\n          description: Account HierarchicalNamespace enabled if sets to true.\n        largeFileSharesState:\n          type: string\n          enum:\n            - Disabled\n            - Enabled\n          x-ms-enum:\n            name: LargeFileSharesState\n            modelAsString: true\n          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n        routingPreference:\n          $ref: '#/components/schemas/RoutingPreference'\n          x-ms-client-name: RoutingPreference\n          description: Maintains information about the network routing choice opted by the user for data transfer\n        allowBlobPublicAccess:\n          type: boolean\n          x-ms-client-name: AllowBlobPublicAccess\n          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n        minimumTlsVersion:\n          type: string\n          enum:\n            - TLS1_0\n            - TLS1_1\n            - TLS1_2\n          x-ms-enum:\n            name: MinimumTlsVersion\n            modelAsString: true\n          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n        allowSharedKeyAccess:\n          type: boolean\n          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n        isNfsV3Enabled:\n          type: boolean\n          x-ms-client-name: EnableNfsV3\n          description: NFS 3.0 protocol support enabled if set to true.\n        allowCrossTenantReplication:\n          type: boolean\n          description: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n        defaultToOAuthAuthentication:\n          type: boolean\n          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageAccount'\n          x-ms-client-name: ImmutableStorageWithVersioning\n          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default.\n        dnsEndpointType:\n          type: string\n          enum:\n            - Standard\n            - AzureDnsZone\n          x-ms-enum:\n            name: DnsEndpointType\n            modelAsString: true\n          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.\n      description: The parameters used to create the storage account.\n      type: object\n    ExtendedLocationType:\n      type: string\n      description: The type of extendedLocation.\n      enum:\n        - EdgeZone\n      x-ms-enum:\n        name: ExtendedLocationTypes\n        modelAsString: true\n    ExtendedLocation:\n      description: The complex type of the extended location.\n      properties:\n        name:\n          type: string\n          description: The name of the extended location.\n        type:\n          $ref: '#/components/schemas/ExtendedLocationType'\n          description: The type of the extended location.\n      type: object\n    StorageAccountCreateParameters:\n      required:\n        - sku\n        - kind\n        - location\n      description: The parameters used when creating a storage account.\n      properties:\n        allowedCopyScope:\n          type: string\n          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.\n          enum:\n            - PrivateLink\n            - AAD\n          x-ms-enum:\n            name: AllowedCopyScope\n            modelAsString: true\n        publicNetworkAccess:\n          type: string\n          description: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: PublicNetworkAccess\n            modelAsString: true\n        sasPolicy:\n          $ref: '#/components/schemas/SasPolicy'\n          description: SasPolicy assigned to the storage account.\n        keyPolicy:\n          $ref: '#/components/schemas/KeyPolicy'\n          description: KeyPolicy assigned to the storage account.\n        customDomain:\n          $ref: '#/components/schemas/CustomDomain'\n          description: User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.\n        encryption:\n          $ref: '#/components/schemas/Encryption'\n          description: Encryption settings to be used for server-side encryption for the storage account.\n        networkAcls:\n          $ref: '#/components/schemas/NetworkRuleSet'\n          x-ms-client-name: NetworkRuleSet\n          description: Network rule set\n        accessTier:\n          type: string\n          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n          enum:\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: AccessTier\n            modelAsString: false\n        azureFilesIdentityBasedAuthentication:\n          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'\n          description: Provides the identity based authentication settings for Azure Files.\n        supportsHttpsTrafficOnly:\n          type: boolean\n          x-ms-client-name: EnableHttpsTrafficOnly\n          description: Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.\n        isSftpEnabled:\n          type: boolean\n          x-ms-client-name: IsSftpEnabled\n          description: Enables Secure File Transfer Protocol, if set to true\n        isLocalUserEnabled:\n          type: boolean\n          x-ms-client-name: IsLocalUserEnabled\n          description: Enables local users feature, if set to true\n        isHnsEnabled:\n          type: boolean\n          x-ms-client-name: IsHnsEnabled\n          description: Account HierarchicalNamespace enabled if sets to true.\n        largeFileSharesState:\n          type: string\n          enum:\n            - Disabled\n            - Enabled\n          x-ms-enum:\n            name: LargeFileSharesState\n            modelAsString: true\n          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n        routingPreference:\n          $ref: '#/components/schemas/RoutingPreference'\n          x-ms-client-name: RoutingPreference\n          description: Maintains information about the network routing choice opted by the user for data transfer\n        allowBlobPublicAccess:\n          type: boolean\n          x-ms-client-name: AllowBlobPublicAccess\n          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n        minimumTlsVersion:\n          type: string\n          enum:\n            - TLS1_0\n            - TLS1_1\n            - TLS1_2\n          x-ms-enum:\n            name: MinimumTlsVersion\n            modelAsString: true\n          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n        allowSharedKeyAccess:\n          type: boolean\n          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n        isNfsV3Enabled:\n          type: boolean\n          x-ms-client-name: EnableNfsV3\n          description: NFS 3.0 protocol support enabled if set to true.\n        allowCrossTenantReplication:\n          type: boolean\n          description: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n        defaultToOAuthAuthentication:\n          type: boolean\n          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageAccount'\n          x-ms-client-name: ImmutableStorageWithVersioning\n          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default.\n        dnsEndpointType:\n          type: string\n          enum:\n            - Standard\n            - AzureDnsZone\n          x-ms-enum:\n            name: DnsEndpointType\n            modelAsString: true\n          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.\n        sku:\n          $ref: '#/components/schemas/Sku'\n          description: Required. Gets or sets the SKU name.\n        kind:\n          type: string\n          description: Required. Indicates the type of storage account.\n          enum:\n            - Storage\n            - StorageV2\n            - BlobStorage\n            - FileStorage\n            - BlockBlobStorage\n          x-ms-enum:\n            name: Kind\n            modelAsString: true\n        location:\n          type: string\n          description: Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.\n        extendedLocation:\n          $ref: '#/components/schemas/ExtendedLocation'\n          description: Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.\n        identity:\n          $ref: '#/components/schemas/Identity'\n          description: The identity of the resource.\n      type: object\n    Endpoints:\n      properties:\n        blob:\n          readOnly: true\n          type: string\n          description: Gets the blob endpoint.\n        queue:\n          readOnly: true\n          type: string\n          description: Gets the queue endpoint.\n        table:\n          readOnly: true\n          type: string\n          description: Gets the table endpoint.\n        file:\n          readOnly: true\n          type: string\n          description: Gets the file endpoint.\n        web:\n          readOnly: true\n          type: string\n          description: Gets the web endpoint.\n        dfs:\n          readOnly: true\n          type: string\n          description: Gets the dfs endpoint.\n        microsoftEndpoints:\n          x-ms-client-flatten: false\n          $ref: '#/components/schemas/StorageAccountMicrosoftEndpoints'\n          description: Gets the microsoft routing storage endpoints.\n        internetEndpoints:\n          x-ms-client-flatten: false\n          $ref: '#/components/schemas/StorageAccountInternetEndpoints'\n          description: Gets the internet routing storage endpoints\n      description: The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object.\n      type: object\n    StorageAccountMicrosoftEndpoints:\n      properties:\n        blob:\n          readOnly: true\n          type: string\n          description: Gets the blob endpoint.\n        queue:\n          readOnly: true\n          type: string\n          description: Gets the queue endpoint.\n        table:\n          readOnly: true\n          type: string\n          description: Gets the table endpoint.\n        file:\n          readOnly: true\n          type: string\n          description: Gets the file endpoint.\n        web:\n          readOnly: true\n          type: string\n          description: Gets the web endpoint.\n        dfs:\n          readOnly: true\n          type: string\n          description: Gets the dfs endpoint.\n      description: The URIs that are used to perform a retrieval of a public blob, queue, table, web or dfs object via a microsoft routing endpoint.\n      type: object\n    StorageAccountInternetEndpoints:\n      properties:\n        blob:\n          readOnly: true\n          type: string\n          description: Gets the blob endpoint.\n        file:\n          readOnly: true\n          type: string\n          description: Gets the file endpoint.\n        web:\n          readOnly: true\n          type: string\n          description: Gets the web endpoint.\n        dfs:\n          readOnly: true\n          type: string\n          description: Gets the dfs endpoint.\n      description: The URIs that are used to perform a retrieval of a public blob, file, web or dfs object via a internet routing endpoint.\n      type: object\n    GeoReplicationStats:\n      properties:\n        status:\n          readOnly: true\n          type: string\n          description: 'The status of the secondary location. Possible values are: - Live: Indicates that the secondary location is active and operational. - Bootstrap: Indicates initial synchronization from the primary location to the secondary location is in progress.This typically occurs when replication is first enabled. - Unavailable: Indicates that the secondary location is temporarily unavailable.'\n          enum:\n            - Live\n            - Bootstrap\n            - Unavailable\n          x-ms-enum:\n            name: GeoReplicationStatus\n            modelAsString: true\n        lastSyncTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: All primary writes preceding this UTC date/time value are guaranteed to be available for read operations. Primary writes following this point in time may or may not be available for reads. Element may be default value if value of LastSyncTime is not available, this can happen if secondary is offline or we are in bootstrap.\n        canFailover:\n          readOnly: true\n          type: boolean\n          description: A boolean flag which indicates whether or not account failover is supported for the account.\n      description: Statistics related to replication for storage account's Blob, Table, Queue and File services. It is only available when geo-redundant replication is enabled for the storage account.\n      type: object\n    RoutingPreference:\n      properties:\n        routingChoice:\n          type: string\n          description: Routing Choice defines the kind of network routing opted by the user.\n          enum:\n            - MicrosoftRouting\n            - InternetRouting\n          x-ms-enum:\n            name: RoutingChoice\n            modelAsString: true\n        publishMicrosoftEndpoints:\n          type: boolean\n          description: A boolean flag which indicates whether microsoft routing storage endpoints are to be published\n        publishInternetEndpoints:\n          type: boolean\n          description: A boolean flag which indicates whether internet routing storage endpoints are to be published\n      description: Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing\n      type: object\n    ImmutableStorageAccount:\n      type: object\n      properties:\n        enabled:\n          type: boolean\n          description: A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.\n        immutabilityPolicy:\n          x-ms-client-flatten: false\n          $ref: '#/components/schemas/AccountImmutabilityPolicyProperties'\n          description: Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy.\n      description: This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.\n    AccountImmutabilityPolicyProperties:\n      type: object\n      properties:\n        immutabilityPeriodSinceCreationInDays:\n          type: integer\n          minimum: 1\n          maximum: 146000\n          format: int32\n          description: The immutability period for the blobs in the container since the policy creation, in days.\n        state:\n          type: string\n          description: The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.\n          enum:\n            - Unlocked\n            - Locked\n            - Disabled\n          x-ms-enum:\n            name: AccountImmutabilityPolicyState\n            modelAsString: true\n        allowProtectedAppendWrites:\n          type: boolean\n          description: This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.\n      description: This defines account-level immutability policy properties.\n    StorageAccountSkuConversionStatus:\n      type: object\n      properties:\n        skuConversionStatus:\n          readOnly: true\n          type: string\n          description: This property indicates the current sku conversion status.\n          enum:\n            - InProgress\n            - Succeeded\n            - Failed\n          x-ms-enum:\n            name: SkuConversionStatus\n            modelAsString: true\n        targetSkuName:\n          $ref: '#/components/schemas/SkuName'\n          description: This property represents the target sku name to which the account sku is being converted asynchronously.\n        startTime:\n          readOnly: true\n          type: string\n          description: This property represents the sku conversion start time.\n        endTime:\n          readOnly: true\n          type: string\n          description: This property represents the sku conversion end time.\n      description: This defines the sku conversion status object for asynchronous sku conversions.\n    BlobRestoreStatus:\n      properties:\n        status:\n          readOnly: true\n          type: string\n          description: 'The status of blob restore progress. Possible values are: - InProgress: Indicates that blob restore is ongoing. - Complete: Indicates that blob restore has been completed successfully. - Failed: Indicates that blob restore is failed.'\n          enum:\n            - InProgress\n            - Complete\n            - Failed\n          x-ms-enum:\n            name: BlobRestoreProgressStatus\n            modelAsString: true\n        failureReason:\n          readOnly: true\n          type: string\n          description: Failure reason when blob restore is failed.\n        restoreId:\n          readOnly: true\n          type: string\n          description: Id for tracking blob restore request.\n        parameters:\n          readOnly: true\n          $ref: '#/components/schemas/BlobRestoreParameters'\n          description: Blob restore request parameters.\n      description: Blob restore status.\n      type: object\n    DeletedAccountProperties:\n      properties:\n        storageAccountResourceId:\n          readOnly: true\n          type: string\n          description: Full resource id of the original storage account.\n        location:\n          readOnly: true\n          type: string\n          description: Location of the deleted account.\n        restoreReference:\n          readOnly: true\n          type: string\n          description: Can be used to attempt recovering this deleted account via PutStorageAccount API.\n        creationTime:\n          readOnly: true\n          type: string\n          description: Creation time of the deleted account.\n        deletionTime:\n          readOnly: true\n          type: string\n          description: Deletion time of the deleted account.\n      description: Attributes of a deleted storage account.\n      type: object\n    StorageAccountProperties:\n      properties:\n        provisioningState:\n          readOnly: true\n          type: string\n          description: Gets the status of the storage account at the time the operation was called.\n          enum:\n            - Creating\n            - ResolvingDNS\n            - Succeeded\n          x-ms-enum:\n            name: ProvisioningState\n            modelAsString: false\n        primaryEndpoints:\n          $ref: '#/components/schemas/Endpoints'\n          readOnly: true\n          description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.\n        primaryLocation:\n          readOnly: true\n          type: string\n          description: Gets the location of the primary data center for the storage account.\n        statusOfPrimary:\n          readOnly: true\n          type: string\n          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.\n          enum:\n            - available\n            - unavailable\n          x-ms-enum:\n            name: AccountStatus\n            modelAsString: false\n        lastGeoFailoverTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n        secondaryLocation:\n          readOnly: true\n          type: string\n          description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n        statusOfSecondary:\n          readOnly: true\n          type: string\n          description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.\n          enum:\n            - available\n            - unavailable\n          x-ms-enum:\n            name: AccountStatus\n            modelAsString: false\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the creation date and time of the storage account in UTC.\n        customDomain:\n          $ref: '#/components/schemas/CustomDomain'\n          readOnly: true\n          description: Gets the custom domain the user assigned to this storage account.\n        sasPolicy:\n          $ref: '#/components/schemas/SasPolicy'\n          readOnly: true\n          description: SasPolicy assigned to the storage account.\n        keyPolicy:\n          $ref: '#/components/schemas/KeyPolicy'\n          readOnly: true\n          description: KeyPolicy assigned to the storage account.\n        keyCreationTime:\n          readOnly: true\n          $ref: '#/components/schemas/KeyCreationTime'\n          description: Storage account keys creation time.\n        secondaryEndpoints:\n          $ref: '#/components/schemas/Endpoints'\n          readOnly: true\n          description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.\n        encryption:\n          $ref: '#/components/schemas/Encryption'\n          readOnly: true\n          description: Encryption settings to be used for server-side encryption for the storage account.\n        accessTier:\n          readOnly: true\n          type: string\n          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n          enum:\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: AccessTier\n            modelAsString: false\n        azureFilesIdentityBasedAuthentication:\n          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'\n          description: Provides the identity based authentication settings for Azure Files.\n        supportsHttpsTrafficOnly:\n          type: boolean\n          x-ms-client-name: EnableHttpsTrafficOnly\n          description: Allows https traffic only to storage service if sets to true.\n        networkAcls:\n          $ref: '#/components/schemas/NetworkRuleSet'\n          x-ms-client-name: NetworkRuleSet\n          description: Network rule set\n          readOnly: true\n        isSftpEnabled:\n          type: boolean\n          x-ms-client-name: IsSftpEnabled\n          description: Enables Secure File Transfer Protocol, if set to true\n        isLocalUserEnabled:\n          type: boolean\n          x-ms-client-name: IsLocalUserEnabled\n          description: Enables local users feature, if set to true\n        isHnsEnabled:\n          type: boolean\n          x-ms-client-name: IsHnsEnabled\n          description: Account HierarchicalNamespace enabled if sets to true.\n        geoReplicationStats:\n          $ref: '#/components/schemas/GeoReplicationStats'\n          x-ms-client-name: GeoReplicationStats\n          description: Geo Replication Stats\n          readOnly: true\n        failoverInProgress:\n          type: boolean\n          x-ms-client-name: FailoverInProgress\n          description: If the failover is in progress, the value will be true, otherwise, it will be null.\n          readOnly: true\n        largeFileSharesState:\n          type: string\n          enum:\n            - Disabled\n            - Enabled\n          x-ms-enum:\n            name: LargeFileSharesState\n            modelAsString: true\n          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n        privateEndpointConnections:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/PrivateEndpointConnection'\n          description: List of private endpoint connection associated with the specified storage account\n        routingPreference:\n          $ref: '#/components/schemas/RoutingPreference'\n          x-ms-client-name: RoutingPreference\n          description: Maintains information about the network routing choice opted by the user for data transfer\n        blobRestoreStatus:\n          $ref: '#/components/schemas/BlobRestoreStatus'\n          x-ms-client-name: BlobRestoreStatus\n          description: Blob restore status\n          readOnly: true\n        allowBlobPublicAccess:\n          type: boolean\n          x-ms-client-name: AllowBlobPublicAccess\n          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n        minimumTlsVersion:\n          type: string\n          enum:\n            - TLS1_0\n            - TLS1_1\n            - TLS1_2\n          x-ms-enum:\n            name: MinimumTlsVersion\n            modelAsString: true\n          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n        allowSharedKeyAccess:\n          type: boolean\n          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n        isNfsV3Enabled:\n          type: boolean\n          x-ms-client-name: EnableNfsV3\n          description: NFS 3.0 protocol support enabled if set to true.\n        allowCrossTenantReplication:\n          type: boolean\n          description: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n        defaultToOAuthAuthentication:\n          type: boolean\n          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.\n        publicNetworkAccess:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: PublicNetworkAccess\n            modelAsString: true\n          description: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageAccount'\n          x-ms-client-name: ImmutableStorageWithVersioning\n          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default.\n        allowedCopyScope:\n          type: string\n          enum:\n            - PrivateLink\n            - AAD\n          x-ms-enum:\n            name: AllowedCopyScope\n            modelAsString: true\n          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.\n        storageAccountSkuConversionStatus:\n          $ref: '#/components/schemas/StorageAccountSkuConversionStatus'\n          x-ms-client-name: StorageAccountSkuConversionStatus\n          description: This property is readOnly and is set by server during asynchronous storage account sku conversion operations.\n        dnsEndpointType:\n          type: string\n          enum:\n            - Standard\n            - AzureDnsZone\n          x-ms-enum:\n            name: DnsEndpointType\n            modelAsString: true\n          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.\n      description: Properties of the storage account.\n      type: object\n    DeletedAccount:\n      description: Deleted storage account\n      properties:\n        storageAccountResourceId:\n          readOnly: true\n          type: string\n          description: Full resource id of the original storage account.\n        location:\n          readOnly: true\n          type: string\n          description: Location of the deleted account.\n        restoreReference:\n          readOnly: true\n          type: string\n          description: Can be used to attempt recovering this deleted account via PutStorageAccount API.\n        creationTime:\n          readOnly: true\n          type: string\n          description: Creation time of the deleted account.\n        deletionTime:\n          readOnly: true\n          type: string\n          description: Deletion time of the deleted account.\n      type: object\n    StorageAccount:\n      description: The storage account.\n      properties:\n        provisioningState:\n          readOnly: true\n          type: string\n          description: Gets the status of the storage account at the time the operation was called.\n          enum:\n            - Creating\n            - ResolvingDNS\n            - Succeeded\n          x-ms-enum:\n            name: ProvisioningState\n            modelAsString: false\n        primaryEndpoints:\n          $ref: '#/components/schemas/Endpoints'\n          readOnly: true\n          description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object. Note that Standard_ZRS and Premium_LRS accounts only return the blob endpoint.\n        primaryLocation:\n          readOnly: true\n          type: string\n          description: Gets the location of the primary data center for the storage account.\n        statusOfPrimary:\n          readOnly: true\n          type: string\n          description: Gets the status indicating whether the primary location of the storage account is available or unavailable.\n          enum:\n            - available\n            - unavailable\n          x-ms-enum:\n            name: AccountStatus\n            modelAsString: false\n        lastGeoFailoverTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n        secondaryLocation:\n          readOnly: true\n          type: string\n          description: Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.\n        statusOfSecondary:\n          readOnly: true\n          type: string\n          description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.\n          enum:\n            - available\n            - unavailable\n          x-ms-enum:\n            name: AccountStatus\n            modelAsString: false\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the creation date and time of the storage account in UTC.\n        customDomain:\n          $ref: '#/components/schemas/CustomDomain'\n          readOnly: true\n          description: Gets the custom domain the user assigned to this storage account.\n        sasPolicy:\n          $ref: '#/components/schemas/SasPolicy'\n          readOnly: true\n          description: SasPolicy assigned to the storage account.\n        keyPolicy:\n          $ref: '#/components/schemas/KeyPolicy'\n          readOnly: true\n          description: KeyPolicy assigned to the storage account.\n        keyCreationTime:\n          readOnly: true\n          $ref: '#/components/schemas/KeyCreationTime'\n          description: Storage account keys creation time.\n        secondaryEndpoints:\n          $ref: '#/components/schemas/Endpoints'\n          readOnly: true\n          description: Gets the URLs that are used to perform a retrieval of a public blob, queue, or table object from the secondary location of the storage account. Only available if the SKU name is Standard_RAGRS.\n        encryption:\n          $ref: '#/components/schemas/Encryption'\n          readOnly: true\n          description: Encryption settings to be used for server-side encryption for the storage account.\n        accessTier:\n          readOnly: true\n          type: string\n          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n          enum:\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: AccessTier\n            modelAsString: false\n        azureFilesIdentityBasedAuthentication:\n          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'\n          description: Provides the identity based authentication settings for Azure Files.\n        supportsHttpsTrafficOnly:\n          type: boolean\n          x-ms-client-name: EnableHttpsTrafficOnly\n          description: Allows https traffic only to storage service if sets to true.\n        networkAcls:\n          $ref: '#/components/schemas/NetworkRuleSet'\n          x-ms-client-name: NetworkRuleSet\n          description: Network rule set\n          readOnly: true\n        isSftpEnabled:\n          type: boolean\n          x-ms-client-name: IsSftpEnabled\n          description: Enables Secure File Transfer Protocol, if set to true\n        isLocalUserEnabled:\n          type: boolean\n          x-ms-client-name: IsLocalUserEnabled\n          description: Enables local users feature, if set to true\n        isHnsEnabled:\n          type: boolean\n          x-ms-client-name: IsHnsEnabled\n          description: Account HierarchicalNamespace enabled if sets to true.\n        geoReplicationStats:\n          $ref: '#/components/schemas/GeoReplicationStats'\n          x-ms-client-name: GeoReplicationStats\n          description: Geo Replication Stats\n          readOnly: true\n        failoverInProgress:\n          type: boolean\n          x-ms-client-name: FailoverInProgress\n          description: If the failover is in progress, the value will be true, otherwise, it will be null.\n          readOnly: true\n        largeFileSharesState:\n          type: string\n          enum:\n            - Disabled\n            - Enabled\n          x-ms-enum:\n            name: LargeFileSharesState\n            modelAsString: true\n          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n        privateEndpointConnections:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/PrivateEndpointConnection'\n          description: List of private endpoint connection associated with the specified storage account\n        routingPreference:\n          $ref: '#/components/schemas/RoutingPreference'\n          x-ms-client-name: RoutingPreference\n          description: Maintains information about the network routing choice opted by the user for data transfer\n        blobRestoreStatus:\n          $ref: '#/components/schemas/BlobRestoreStatus'\n          x-ms-client-name: BlobRestoreStatus\n          description: Blob restore status\n          readOnly: true\n        allowBlobPublicAccess:\n          type: boolean\n          x-ms-client-name: AllowBlobPublicAccess\n          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n        minimumTlsVersion:\n          type: string\n          enum:\n            - TLS1_0\n            - TLS1_1\n            - TLS1_2\n          x-ms-enum:\n            name: MinimumTlsVersion\n            modelAsString: true\n          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n        allowSharedKeyAccess:\n          type: boolean\n          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n        isNfsV3Enabled:\n          type: boolean\n          x-ms-client-name: EnableNfsV3\n          description: NFS 3.0 protocol support enabled if set to true.\n        allowCrossTenantReplication:\n          type: boolean\n          description: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n        defaultToOAuthAuthentication:\n          type: boolean\n          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.\n        publicNetworkAccess:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: PublicNetworkAccess\n            modelAsString: true\n          description: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageAccount'\n          x-ms-client-name: ImmutableStorageWithVersioning\n          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default.\n        allowedCopyScope:\n          type: string\n          enum:\n            - PrivateLink\n            - AAD\n          x-ms-enum:\n            name: AllowedCopyScope\n            modelAsString: true\n          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.\n        storageAccountSkuConversionStatus:\n          $ref: '#/components/schemas/StorageAccountSkuConversionStatus'\n          x-ms-client-name: StorageAccountSkuConversionStatus\n          description: This property is readOnly and is set by server during asynchronous storage account sku conversion operations.\n        dnsEndpointType:\n          type: string\n          enum:\n            - Standard\n            - AzureDnsZone\n          x-ms-enum:\n            name: DnsEndpointType\n            modelAsString: true\n          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.\n        sku:\n          $ref: '#/components/schemas/Sku'\n          readOnly: true\n          description: Gets the SKU.\n        kind:\n          readOnly: true\n          type: string\n          description: Gets the Kind.\n          enum:\n            - Storage\n            - StorageV2\n            - BlobStorage\n            - FileStorage\n            - BlockBlobStorage\n          x-ms-enum:\n            name: Kind\n            modelAsString: true\n        identity:\n          $ref: '#/components/schemas/Identity'\n          description: The identity of the resource.\n        extendedLocation:\n          $ref: '#/components/schemas/ExtendedLocation'\n          description: The extendedLocation of the resource.\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          x-ms-mutability:\n            - read\n            - create\n            - update\n          description: Resource tags.\n        location:\n          type: string\n          x-ms-mutability:\n            - read\n            - create\n          description: The geo-location where the resource lives\n      type: object\n    StorageAccountKey:\n      properties:\n        keyName:\n          readOnly: true\n          type: string\n          description: Name of the key.\n        value:\n          readOnly: true\n          type: string\n          description: Base 64-encoded value of the key.\n        permissions:\n          readOnly: true\n          type: string\n          description: Permissions for the key -- read-only or full permissions.\n          enum:\n            - Read\n            - Full\n          x-ms-enum:\n            name: KeyPermission\n            modelAsString: false\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Creation time of the key, in round trip date format.\n      description: An access key for the storage account.\n      type: object\n    StorageAccountListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageAccount'\n          description: Gets the list of storage accounts and their properties.\n        nextLink:\n          type: string\n          description: Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.\n          readOnly: true\n      description: The response from the List Storage Accounts operation.\n      type: object\n    DeletedAccountListResult:\n      properties:\n        value:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/DeletedAccount'\n          description: Gets the list of deleted accounts and their properties.\n        nextLink:\n          type: string\n          description: Request URL that can be used to query next page of deleted accounts. Returned when total number of requested deleted accounts exceed maximum page size.\n          readOnly: true\n      description: The response from the List Deleted Accounts operation.\n      type: object\n    StorageAccountListKeysResult:\n      properties:\n        keys:\n          readOnly: true\n          type: array\n          items:\n            $ref: '#/components/schemas/StorageAccountKey'\n          description: Gets the list of storage account keys and their properties for the specified storage account.\n      description: The response from the ListKeys operation.\n      type: object\n    StorageAccountRegenerateKeyParameters:\n      properties:\n        keyName:\n          type: string\n          description: The name of storage keys that want to be regenerated, possible values are key1, key2, kerb1, kerb2.\n      required:\n        - keyName\n      description: The parameters used to regenerate the storage account key.\n      type: object\n    StorageAccountPropertiesUpdateParameters:\n      properties:\n        customDomain:\n          $ref: '#/components/schemas/CustomDomain'\n          description: Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.\n        encryption:\n          $ref: '#/components/schemas/Encryption'\n          description: Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled.\n        sasPolicy:\n          $ref: '#/components/schemas/SasPolicy'\n          description: SasPolicy assigned to the storage account.\n        keyPolicy:\n          $ref: '#/components/schemas/KeyPolicy'\n          description: KeyPolicy assigned to the storage account.\n        accessTier:\n          type: string\n          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n          enum:\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: AccessTier\n            modelAsString: false\n        azureFilesIdentityBasedAuthentication:\n          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'\n          description: Provides the identity based authentication settings for Azure Files.\n        supportsHttpsTrafficOnly:\n          type: boolean\n          x-ms-client-name: EnableHttpsTrafficOnly\n          description: Allows https traffic only to storage service if sets to true.\n        isSftpEnabled:\n          type: boolean\n          x-ms-client-name: IsSftpEnabled\n          description: Enables Secure File Transfer Protocol, if set to true\n        isLocalUserEnabled:\n          type: boolean\n          x-ms-client-name: IsLocalUserEnabled\n          description: Enables local users feature, if set to true\n        networkAcls:\n          description: Network rule set\n          x-ms-client-name: NetworkRuleSet\n          $ref: '#/components/schemas/NetworkRuleSet'\n        largeFileSharesState:\n          type: string\n          enum:\n            - Disabled\n            - Enabled\n          x-ms-enum:\n            name: LargeFileSharesState\n            modelAsString: true\n          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n        routingPreference:\n          $ref: '#/components/schemas/RoutingPreference'\n          x-ms-client-name: RoutingPreference\n          description: Maintains information about the network routing choice opted by the user for data transfer\n        allowBlobPublicAccess:\n          type: boolean\n          x-ms-client-name: AllowBlobPublicAccess\n          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n        minimumTlsVersion:\n          type: string\n          enum:\n            - TLS1_0\n            - TLS1_1\n            - TLS1_2\n          x-ms-enum:\n            name: MinimumTlsVersion\n            modelAsString: true\n          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n        allowSharedKeyAccess:\n          type: boolean\n          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n        allowCrossTenantReplication:\n          type: boolean\n          description: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n        defaultToOAuthAuthentication:\n          type: boolean\n          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.\n        publicNetworkAccess:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: PublicNetworkAccess\n            modelAsString: true\n          description: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageAccount'\n          x-ms-client-name: ImmutableStorageWithVersioning\n          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default.\n        allowedCopyScope:\n          type: string\n          enum:\n            - PrivateLink\n            - AAD\n          x-ms-enum:\n            name: AllowedCopyScope\n            modelAsString: true\n          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.\n        dnsEndpointType:\n          type: string\n          enum:\n            - Standard\n            - AzureDnsZone\n          x-ms-enum:\n            name: DnsEndpointType\n            modelAsString: true\n          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.\n      description: The parameters used when updating a storage account.\n      type: object\n    StorageAccountUpdateParameters:\n      description: The parameters that can be provided when updating the storage account properties.\n      properties:\n        customDomain:\n          $ref: '#/components/schemas/CustomDomain'\n          description: Custom domain assigned to the storage account by the user. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.\n        encryption:\n          $ref: '#/components/schemas/Encryption'\n          description: Not applicable. Azure Storage encryption at rest is enabled by default for all storage accounts and cannot be disabled.\n        sasPolicy:\n          $ref: '#/components/schemas/SasPolicy'\n          description: SasPolicy assigned to the storage account.\n        keyPolicy:\n          $ref: '#/components/schemas/KeyPolicy'\n          description: KeyPolicy assigned to the storage account.\n        accessTier:\n          type: string\n          description: Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.\n          enum:\n            - Hot\n            - Cool\n            - Premium\n          x-ms-enum:\n            name: AccessTier\n            modelAsString: false\n        azureFilesIdentityBasedAuthentication:\n          $ref: '#/components/schemas/AzureFilesIdentityBasedAuthentication'\n          description: Provides the identity based authentication settings for Azure Files.\n        supportsHttpsTrafficOnly:\n          type: boolean\n          x-ms-client-name: EnableHttpsTrafficOnly\n          description: Allows https traffic only to storage service if sets to true.\n        isSftpEnabled:\n          type: boolean\n          x-ms-client-name: IsSftpEnabled\n          description: Enables Secure File Transfer Protocol, if set to true\n        isLocalUserEnabled:\n          type: boolean\n          x-ms-client-name: IsLocalUserEnabled\n          description: Enables local users feature, if set to true\n        networkAcls:\n          description: Network rule set\n          x-ms-client-name: NetworkRuleSet\n          $ref: '#/components/schemas/NetworkRuleSet'\n        largeFileSharesState:\n          type: string\n          enum:\n            - Disabled\n            - Enabled\n          x-ms-enum:\n            name: LargeFileSharesState\n            modelAsString: true\n          description: Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.\n        routingPreference:\n          $ref: '#/components/schemas/RoutingPreference'\n          x-ms-client-name: RoutingPreference\n          description: Maintains information about the network routing choice opted by the user for data transfer\n        allowBlobPublicAccess:\n          type: boolean\n          x-ms-client-name: AllowBlobPublicAccess\n          description: Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.\n        minimumTlsVersion:\n          type: string\n          enum:\n            - TLS1_0\n            - TLS1_1\n            - TLS1_2\n          x-ms-enum:\n            name: MinimumTlsVersion\n            modelAsString: true\n          description: Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.\n        allowSharedKeyAccess:\n          type: boolean\n          description: Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.\n        allowCrossTenantReplication:\n          type: boolean\n          description: Allow or disallow cross AAD tenant object replication. The default interpretation is true for this property.\n        defaultToOAuthAuthentication:\n          type: boolean\n          description: A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.\n        publicNetworkAccess:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: PublicNetworkAccess\n            modelAsString: true\n          description: Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.\n        immutableStorageWithVersioning:\n          $ref: '#/components/schemas/ImmutableStorageAccount'\n          x-ms-client-name: ImmutableStorageWithVersioning\n          description: The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the containers in the account by default.\n        allowedCopyScope:\n          type: string\n          enum:\n            - PrivateLink\n            - AAD\n          x-ms-enum:\n            name: AllowedCopyScope\n            modelAsString: true\n          description: Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.\n        dnsEndpointType:\n          type: string\n          enum:\n            - Standard\n            - AzureDnsZone\n          x-ms-enum:\n            name: DnsEndpointType\n            modelAsString: true\n          description: Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.\n        sku:\n          $ref: '#/components/schemas/Sku'\n          description: Gets or sets the SKU name. Note that the SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of those SKU names be updated to any other value.\n        tags:\n          type: object\n          additionalProperties:\n            type: string\n          description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters.\n        identity:\n          $ref: '#/components/schemas/Identity'\n          description: The identity of the resource.\n        kind:\n          type: string\n          description: Optional. Indicates the type of storage account. Currently only StorageV2 value supported by server.\n          enum:\n            - Storage\n            - StorageV2\n            - BlobStorage\n            - FileStorage\n            - BlockBlobStorage\n          x-ms-enum:\n            name: Kind\n            modelAsString: true\n      type: object\n    BlobRestoreParameters:\n      properties:\n        timeToRestore:\n          type: string\n          format: date-time\n          description: Restore blob to the specified time.\n        blobRanges:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlobRestoreRange'\n          description: Blob ranges to restore.\n      required:\n        - timeToRestore\n        - blobRanges\n      description: Blob restore parameters\n      type: object\n    BlobRestoreRange:\n      properties:\n        startRange:\n          type: string\n          description: Blob start range. This is inclusive. Empty means account start.\n        endRange:\n          type: string\n          description: Blob end range. This is exclusive. Empty means account end.\n      required:\n        - startRange\n        - endRange\n      description: Blob range\n      type: object\n    UsageName:\n      properties:\n        value:\n          readOnly: true\n          type: string\n          description: Gets a string describing the resource name.\n        localizedValue:\n          readOnly: true\n          type: string\n          description: Gets a localized string describing the resource name.\n      description: The usage names that can be used; currently limited to StorageAccount.\n      type: object\n    Usage:\n      properties:\n        unit:\n          readOnly: true\n          type: string\n          description: Gets the unit of measurement.\n          enum:\n            - Count\n            - Bytes\n            - Seconds\n            - Percent\n            - CountsPerSecond\n            - BytesPerSecond\n          x-ms-enum:\n            name: UsageUnit\n            modelAsString: false\n        currentValue:\n          readOnly: true\n          type: integer\n          format: int32\n          description: Gets the current count of the allocated resources in the subscription.\n        limit:\n          readOnly: true\n          type: integer\n          format: int32\n          description: Gets the maximum count of the resources that can be allocated in the subscription.\n        name:\n          $ref: '#/components/schemas/UsageName'\n          readOnly: true\n          description: Gets the name of the type of usage.\n      description: Describes Storage Resource Usage.\n      type: object\n    UsageListResult:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/Usage'\n          description: Gets or sets the list of Storage Resource Usages.\n      description: The response from the List Usages operation.\n      type: object\n    AccountSasParameters:\n      properties:\n        signedServices:\n          type: string\n          enum:\n            - b\n            - q\n            - t\n            - f\n          x-ms-enum:\n            name: Services\n            modelAsString: true\n          x-ms-client-name: Services\n          description: 'The signed services accessible with the account SAS. Possible values include: Blob (b), Queue (q), Table (t), File (f).'\n        signedResourceTypes:\n          type: string\n          enum:\n            - s\n            - c\n            - o\n          x-ms-enum:\n            name: SignedResourceTypes\n            modelAsString: true\n          x-ms-client-name: ResourceTypes\n          description: 'The signed resource types that are accessible with the account SAS. Service (s): Access to service-level APIs; Container (c): Access to container-level APIs; Object (o): Access to object-level APIs for blobs, queue messages, table entities, and files.'\n        signedPermission:\n          type: string\n          enum:\n            - r\n            - d\n            - w\n            - l\n            - a\n            - c\n            - u\n            - p\n          x-ms-enum:\n            name: Permissions\n            modelAsString: true\n          x-ms-client-name: Permissions\n          description: 'The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'\n        signedIp:\n          type: string\n          x-ms-client-name: IPAddressOrRange\n          description: An IP address or a range of IP addresses from which to accept requests.\n        signedProtocol:\n          type: string\n          enum:\n            - https,http\n            - https\n          x-ms-enum:\n            name: HttpProtocol\n            modelAsString: false\n          x-ms-client-name: Protocols\n          description: The protocol permitted for a request made with the account SAS.\n        signedStart:\n          type: string\n          format: date-time\n          x-ms-client-name: SharedAccessStartTime\n          description: The time at which the SAS becomes valid.\n        signedExpiry:\n          type: string\n          format: date-time\n          x-ms-client-name: SharedAccessExpiryTime\n          description: The time at which the shared access signature becomes invalid.\n        keyToSign:\n          type: string\n          description: The key to sign the account SAS token with.\n      required:\n        - signedServices\n        - signedResourceTypes\n        - signedPermission\n        - signedExpiry\n      description: The parameters to list SAS credentials of a storage account.\n      type: object\n    ListAccountSasResponse:\n      properties:\n        accountSasToken:\n          readOnly: true\n          type: string\n          description: List SAS credentials of storage account.\n      description: The List SAS credentials operation response.\n      type: object\n    ServiceSasParameters:\n      properties:\n        canonicalizedResource:\n          type: string\n          description: The canonical path to the signed resource.\n        signedResource:\n          type: string\n          enum:\n            - b\n            - c\n            - f\n            - s\n          x-ms-enum:\n            name: signedResource\n            modelAsString: true\n          x-ms-client-name: Resource\n          description: 'The signed services accessible with the service SAS. Possible values include: Blob (b), Container (c), File (f), Share (s).'\n        signedPermission:\n          type: string\n          enum:\n            - r\n            - d\n            - w\n            - l\n            - a\n            - c\n            - u\n            - p\n          x-ms-enum:\n            name: Permissions\n            modelAsString: true\n          x-ms-client-name: Permissions\n          description: 'The signed permissions for the service SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p).'\n        signedIp:\n          type: string\n          x-ms-client-name: IPAddressOrRange\n          description: An IP address or a range of IP addresses from which to accept requests.\n        signedProtocol:\n          type: string\n          enum:\n            - https,http\n            - https\n          x-ms-enum:\n            name: HttpProtocol\n            modelAsString: false\n          x-ms-client-name: Protocols\n          description: The protocol permitted for a request made with the account SAS.\n        signedStart:\n          type: string\n          format: date-time\n          x-ms-client-name: SharedAccessStartTime\n          description: The time at which the SAS becomes valid.\n        signedExpiry:\n          type: string\n          format: date-time\n          x-ms-client-name: SharedAccessExpiryTime\n          description: The time at which the shared access signature becomes invalid.\n        signedIdentifier:\n          type: string\n          maxLength: 64\n          x-ms-client-name: Identifier\n          description: A unique value up to 64 characters in length that correlates to an access policy specified for the container, queue, or table.\n        startPk:\n          type: string\n          x-ms-client-name: PartitionKeyStart\n          description: The start of partition key.\n        endPk:\n          type: string\n          x-ms-client-name: PartitionKeyEnd\n          description: The end of partition key.\n        startRk:\n          type: string\n          x-ms-client-name: RowKeyStart\n          description: The start of row key.\n        endRk:\n          type: string\n          x-ms-client-name: RowKeyEnd\n          description: The end of row key.\n        keyToSign:\n          type: string\n          description: The key to sign the account SAS token with.\n        rscc:\n          type: string\n          x-ms-client-name: CacheControl\n          description: The response header override for cache control.\n        rscd:\n          type: string\n          x-ms-client-name: ContentDisposition\n          description: The response header override for content disposition.\n        rsce:\n          type: string\n          x-ms-client-name: ContentEncoding\n          description: The response header override for content encoding.\n        rscl:\n          type: string\n          x-ms-client-name: ContentLanguage\n          description: The response header override for content language.\n        rsct:\n          type: string\n          x-ms-client-name: ContentType\n          description: The response header override for content type.\n      required:\n        - canonicalizedResource\n      description: The parameters to list service SAS credentials of a specific resource.\n      type: object\n    ListServiceSasResponse:\n      properties:\n        serviceSasToken:\n          readOnly: true\n          type: string\n          description: List service SAS credentials of specific resource.\n      description: The List service SAS credentials operation response.\n      type: object\n    ManagementPolicy:\n      description: The Get Storage Account ManagementPolicies operation response.\n      properties:\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Returns the date and time the ManagementPolicies was last modified.\n        policy:\n          $ref: '#/components/schemas/ManagementPolicySchema'\n          description: 'The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    ManagementPolicyProperties:\n      properties:\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Returns the date and time the ManagementPolicies was last modified.\n        policy:\n          $ref: '#/components/schemas/ManagementPolicySchema'\n          description: 'The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'\n      required:\n        - policy\n      description: The Storage Account ManagementPolicy properties.\n      type: object\n    ManagementPolicySchema:\n      properties:\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/ManagementPolicyRule'\n          description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'\n      required:\n        - rules\n      description: 'The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.'\n      type: object\n    ManagementPolicyRule:\n      properties:\n        enabled:\n          type: boolean\n          description: Rule is enabled if set to true.\n        name:\n          type: string\n          description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.\n        type:\n          type: string\n          description: The valid value is Lifecycle\n          enum:\n            - Lifecycle\n          x-ms-enum:\n            name: RuleType\n            modelAsString: true\n        definition:\n          $ref: '#/components/schemas/ManagementPolicyDefinition'\n          description: An object that defines the Lifecycle rule.\n      required:\n        - name\n        - type\n        - definition\n      description: An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.\n      type: object\n    ManagementPolicyDefinition:\n      properties:\n        actions:\n          $ref: '#/components/schemas/ManagementPolicyAction'\n          description: An object that defines the action set.\n        filters:\n          $ref: '#/components/schemas/ManagementPolicyFilter'\n          description: An object that defines the filter set.\n      required:\n        - actions\n      description: An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.\n      type: object\n    ManagementPolicyFilter:\n      properties:\n        prefixMatch:\n          type: array\n          items:\n            type: string\n          description: An array of strings for prefixes to be match.\n        blobTypes:\n          type: array\n          items:\n            type: string\n          description: An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.\n        blobIndexMatch:\n          type: array\n          items:\n            $ref: '#/components/schemas/TagFilter'\n          description: An array of blob index tag based filters, there can be at most 10 tag filters\n      required:\n        - blobTypes\n      description: 'Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. '\n      type: object\n    TagFilter:\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 128\n          description: This is the filter tag name, it can have 1 - 128 characters\n        op:\n          type: string\n          description: This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported\n        value:\n          type: string\n          minLength: 0\n          maxLength: 256\n          description: This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters\n      required:\n        - name\n        - op\n        - value\n      description: Blob index tag based filtering for blob objects\n      type: object\n    ManagementPolicyAction:\n      properties:\n        baseBlob:\n          $ref: '#/components/schemas/ManagementPolicyBaseBlob'\n          description: The management policy action for base blob\n        snapshot:\n          $ref: '#/components/schemas/ManagementPolicySnapShot'\n          description: The management policy action for snapshot\n        version:\n          $ref: '#/components/schemas/ManagementPolicyVersion'\n          description: The management policy action for version\n      description: Actions are applied to the filtered blobs when the execution condition is met.\n      type: object\n    ManagementPolicyBaseBlob:\n      properties:\n        tierToCool:\n          $ref: '#/components/schemas/DateAfterModification'\n          description: The function to tier blobs to cool storage. Support blobs currently at Hot tier\n        tierToArchive:\n          $ref: '#/components/schemas/DateAfterModification'\n          description: The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier\n        delete:\n          $ref: '#/components/schemas/DateAfterModification'\n          description: The function to delete the blob\n        enableAutoTierToHotFromCool:\n          type: boolean\n          description: This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.\n      description: Management policy action for base blob.\n      type: object\n    ManagementPolicySnapShot:\n      properties:\n        tierToCool:\n          $ref: '#/components/schemas/DateAfterCreation'\n          description: The function to tier blob snapshot to cool storage. Support blob snapshot currently at Hot tier\n        tierToArchive:\n          $ref: '#/components/schemas/DateAfterCreation'\n          description: The function to tier blob snapshot to archive storage. Support blob snapshot currently at Hot or Cool tier\n        delete:\n          $ref: '#/components/schemas/DateAfterCreation'\n          description: The function to delete the blob snapshot\n      description: Management policy action for snapshot.\n      type: object\n    ManagementPolicyVersion:\n      properties:\n        tierToCool:\n          $ref: '#/components/schemas/DateAfterCreation'\n          description: The function to tier blob version to cool storage. Support blob version currently at Hot tier\n        tierToArchive:\n          $ref: '#/components/schemas/DateAfterCreation'\n          description: The function to tier blob version to archive storage. Support blob version currently at Hot or Cool tier\n        delete:\n          $ref: '#/components/schemas/DateAfterCreation'\n          description: The function to delete the blob version\n      description: Management policy action for blob version.\n      type: object\n    DateAfterModification:\n      properties:\n        daysAfterModificationGreaterThan:\n          type: number\n          multipleOf: 1\n          minimum: 0\n          description: Value indicating the age in days after last modification\n        daysAfterLastAccessTimeGreaterThan:\n          type: number\n          multipleOf: 1\n          minimum: 0\n          description: Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy\n        daysAfterLastTierChangeGreaterThan:\n          type: number\n          multipleOf: 1\n          minimum: 0\n          description: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.\n        daysAfterCreationGreaterThan:\n          type: number\n          multipleOf: 1\n          minimum: 0\n          description: Value indicating the age in days after blob creation.\n      description: Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan.\n      type: object\n    DateAfterCreation:\n      properties:\n        daysAfterCreationGreaterThan:\n          type: number\n          multipleOf: 1\n          minimum: 0\n          description: Value indicating the age in days after creation\n        daysAfterLastTierChangeGreaterThan:\n          type: number\n          multipleOf: 1\n          minimum: 0\n          description: Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.\n      required:\n        - daysAfterCreationGreaterThan\n      description: Object to define snapshot and version action conditions.\n      type: object\n    EncryptionScope:\n      description: The Encryption Scope resource.\n      properties:\n        source:\n          type: string\n          enum:\n            - Microsoft.Storage\n            - Microsoft.KeyVault\n          x-ms-enum:\n            name: EncryptionScopeSource\n            modelAsString: true\n          description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'\n        state:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: EncryptionScopeState\n            modelAsString: true\n          description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the creation date and time of the encryption scope in UTC.\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the last modification date and time of the encryption scope in UTC.\n        keyVaultProperties:\n          $ref: '#/components/schemas/EncryptionScopeKeyVaultProperties'\n          description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.\n        requireInfrastructureEncryption:\n          type: boolean\n          description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    EncryptionScopeProperties:\n      properties:\n        source:\n          type: string\n          enum:\n            - Microsoft.Storage\n            - Microsoft.KeyVault\n          x-ms-enum:\n            name: EncryptionScopeSource\n            modelAsString: true\n          description: 'The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.'\n        state:\n          type: string\n          enum:\n            - Enabled\n            - Disabled\n          x-ms-enum:\n            name: EncryptionScopeState\n            modelAsString: true\n          description: 'The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.'\n        creationTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the creation date and time of the encryption scope in UTC.\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Gets the last modification date and time of the encryption scope in UTC.\n        keyVaultProperties:\n          $ref: '#/components/schemas/EncryptionScopeKeyVaultProperties'\n          description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.\n        requireInfrastructureEncryption:\n          type: boolean\n          description: A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.\n      description: Properties of the encryption scope.\n      type: object\n    EncryptionScopeKeyVaultProperties:\n      properties:\n        keyUri:\n          type: string\n          description: The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.\n        currentVersionedKeyIdentifier:\n          type: string\n          readOnly: true\n          description: The object identifier of the current versioned Key Vault Key in use.\n        lastKeyRotationTimestamp:\n          type: string\n          readOnly: true\n          format: date-time\n          description: Timestamp of last rotation of the Key Vault Key.\n      description: The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.\n      type: object\n    EncryptionScopeListResult:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/EncryptionScope'\n          description: List of encryption scopes requested.\n          readOnly: true\n        nextLink:\n          type: string\n          description: Request URL that can be used to query next page of encryption scopes. Returned when total number of requested encryption scopes exceeds the maximum page size.\n          readOnly: true\n      description: List of encryption scopes requested, and if paging is required, a URL to the next page of encryption scopes.\n      type: object\n    ObjectReplicationPolicies:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/ObjectReplicationPolicy'\n          description: The replication policy between two storage accounts.\n      description: List storage account object replication policies.\n      type: object\n    ObjectReplicationPolicy:\n      description: The replication policy between two storage accounts. Multiple rules can be defined in one policy.\n      properties:\n        policyId:\n          readOnly: true\n          type: string\n          description: A unique id for object replication policy.\n        enabledTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Indicates when the policy is enabled on the source account.\n        sourceAccount:\n          type: string\n          description: Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.\n        destinationAccount:\n          type: string\n          description: Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/ObjectReplicationPolicyRule'\n          description: The storage account object replication rules.\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    ObjectReplicationPolicyProperties:\n      properties:\n        policyId:\n          readOnly: true\n          type: string\n          description: A unique id for object replication policy.\n        enabledTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Indicates when the policy is enabled on the source account.\n        sourceAccount:\n          type: string\n          description: Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.\n        destinationAccount:\n          type: string\n          description: Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/ObjectReplicationPolicyRule'\n          description: The storage account object replication rules.\n      required:\n        - sourceAccount\n        - destinationAccount\n      description: The Storage Account ObjectReplicationPolicy properties.\n      type: object\n    ObjectReplicationPolicyRule:\n      properties:\n        ruleId:\n          type: string\n          description: Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.\n        sourceContainer:\n          type: string\n          description: Required. Source container name.\n        destinationContainer:\n          type: string\n          description: Required. Destination container name.\n        filters:\n          $ref: '#/components/schemas/ObjectReplicationPolicyFilter'\n          description: Optional. An object that defines the filter set.\n      required:\n        - sourceContainer\n        - destinationContainer\n      description: The replication policy rule between two containers.\n      type: object\n    ObjectReplicationPolicyFilter:\n      properties:\n        prefixMatch:\n          type: array\n          items:\n            type: string\n          description: Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.\n        minCreationTime:\n          type: string\n          description: 'Blobs created after the time will be replicated to the destination. It must be in datetime format ''yyyy-MM-ddTHH:mm:ssZ''. Example: 2020-02-19T16:05:00Z'\n      description: Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.\n      type: object\n    LocalUsers:\n      type: object\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/LocalUser'\n          description: The local users associated with the storage account.\n      description: List storage account local users.\n    LocalUser:\n      description: The local user associated with the storage accounts.\n      properties:\n        permissionScopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermissionScope'\n          description: The permission scopes of the local user.\n        homeDirectory:\n          type: string\n          description: Optional, local user home directory.\n        sshAuthorizedKeys:\n          $ref: '#/components/schemas/SshAuthorizedKeys'\n        sid:\n          readOnly: true\n          type: string\n          description: A unique Security Identifier that is generated by the server.\n        hasSharedKey:\n          type: boolean\n          description: Indicates whether shared key exists. Set it to false to remove existing shared key.\n        hasSshKey:\n          type: boolean\n          description: Indicates whether ssh key exists. Set it to false to remove existing SSH key.\n        hasSshPassword:\n          type: boolean\n          description: Indicates whether ssh password exists. Set it to false to remove existing SSH password.\n        systemData:\n          $ref: '#/components/schemas/systemData'\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    LocalUserProperties:\n      type: object\n      properties:\n        permissionScopes:\n          type: array\n          items:\n            $ref: '#/components/schemas/PermissionScope'\n          description: The permission scopes of the local user.\n        homeDirectory:\n          type: string\n          description: Optional, local user home directory.\n        sshAuthorizedKeys:\n          $ref: '#/components/schemas/SshAuthorizedKeys'\n        sid:\n          readOnly: true\n          type: string\n          description: A unique Security Identifier that is generated by the server.\n        hasSharedKey:\n          type: boolean\n          description: Indicates whether shared key exists. Set it to false to remove existing shared key.\n        hasSshKey:\n          type: boolean\n          description: Indicates whether ssh key exists. Set it to false to remove existing SSH key.\n        hasSshPassword:\n          type: boolean\n          description: Indicates whether ssh password exists. Set it to false to remove existing SSH password.\n      description: The Storage Account Local User properties.\n    LocalUserKeys:\n      type: object\n      properties:\n        sshAuthorizedKeys:\n          $ref: '#/components/schemas/SshAuthorizedKeys'\n        sharedKey:\n          x-ms-secret: true\n          $ref: '#/components/schemas/SharedKey'\n      description: The Storage Account Local User keys.\n    LocalUserRegeneratePasswordResult:\n      type: object\n      properties:\n        sshPassword:\n          x-ms-secret: true\n          readOnly: true\n          type: string\n          description: Auto generated password by the server for SSH authentication if hasSshPassword is set to true on the creation of local user.\n      description: The secrets of Storage Account Local User.\n    PermissionScope:\n      type: object\n      properties:\n        permissions:\n          type: string\n          description: 'The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).'\n        service:\n          type: string\n          description: The service used by the local user, e.g. blob, file.\n        resourceName:\n          type: string\n          description: The name of resource, normally the container name or the file share name, used by the local user.\n      required:\n        - permissions\n        - service\n        - resourceName\n    SshAuthorizedKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/SshPublicKey'\n      description: Optional, local user ssh authorized keys for SFTP.\n    SshPublicKey:\n      type: object\n      properties:\n        description:\n          type: string\n          description: Optional. It is used to store the function/usage of the key\n        key:\n          type: string\n          description: 'Ssh public key base64 encoded. The format should be: ''\u003ckeyType\u003e \u003ckeyData\u003e'', e.g. ssh-rsa AAAABBBB'\n    SharedKey:\n      readOnly: true\n      type: string\n      description: Auto generated by the server for SMB authentication.\n    ListBlobInventoryPolicy:\n      properties:\n        value:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlobInventoryPolicy'\n          description: List of blob inventory policies.\n          readOnly: true\n      description: List of blob inventory policies returned.\n      type: object\n    BlobInventoryPolicy:\n      description: The storage account blob inventory policy.\n      properties:\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Returns the last modified date and time of the blob inventory policy.\n        policy:\n          $ref: '#/components/schemas/BlobInventoryPolicySchema'\n          description: The storage account blob inventory policy object. It is composed of policy rules.\n        systemData:\n          $ref: '#/components/schemas/systemData'\n        id:\n          readOnly: true\n          type: string\n          description: Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n        name:\n          readOnly: true\n          type: string\n          description: The name of the resource\n        type:\n          readOnly: true\n          type: string\n          description: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n      type: object\n    BlobInventoryPolicyProperties:\n      properties:\n        lastModifiedTime:\n          readOnly: true\n          type: string\n          format: date-time\n          description: Returns the last modified date and time of the blob inventory policy.\n        policy:\n          $ref: '#/components/schemas/BlobInventoryPolicySchema'\n          description: The storage account blob inventory policy object. It is composed of policy rules.\n      required:\n        - policy\n      description: The storage account blob inventory policy properties.\n      type: object\n    BlobInventoryPolicySchema:\n      properties:\n        enabled:\n          type: boolean\n          description: Policy is enabled if set to true.\n        destination:\n          readOnly: true\n          type: string\n          description: Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level 'policy.rule.destination'\n        type:\n          type: string\n          description: The valid value is Inventory\n          enum:\n            - Inventory\n          x-ms-enum:\n            name: InventoryRuleType\n            modelAsString: true\n        rules:\n          type: array\n          items:\n            $ref: '#/components/schemas/BlobInventoryPolicyRule'\n          description: The storage account blob inventory policy rules. The rule is applied when it is enabled.\n      required:\n        - enabled\n        - type\n        - rules\n      description: The storage account blob inventory policy rules.\n      type: object\n    BlobInventoryPolicyRule:\n      properties:\n        enabled:\n          type: boolean\n          description: Rule is enabled when set to true.\n        name:\n          type: string\n          description: A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.\n        destination:\n          type: string\n          description: Container name where blob inventory files are stored. Must be pre-created.\n        definition:\n          $ref: '#/components/schemas/BlobInventoryPolicyDefinition'\n          description: An object that defines the blob inventory policy rule.\n      required:\n        - name\n        - enabled\n        - destination\n        - definition\n      description: An object that wraps the blob inventory rule. Each rule is uniquely defined by name.\n      type: object\n    BlobInventoryPolicyDefinition:\n      properties:\n        filters:\n          $ref: '#/components/schemas/BlobInventoryPolicyFilter'\n          description: An object that defines the filter set.\n        format:\n          type: string\n          description: This is a required field, it specifies the format for the inventory files.\n          enum:\n            - Csv\n            - Parquet\n          x-ms-enum:\n            name: format\n            modelAsString: true\n        schedule:\n          type: string\n          description: This is a required field. This field is used to schedule an inventory formation.\n          enum:\n            - Daily\n            - Weekly\n          x-ms-enum:\n            name: schedule\n            modelAsString: true\n        objectType:\n          type: string\n          description: This is a required field. This field specifies the scope of the inventory created either at the blob or container level.\n          enum:\n            - Blob\n            - Container\n          x-ms-enum:\n            name: objectType\n            modelAsString: true\n        schemaFields:\n          type: array\n          items:\n            type: string\n          description: This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts.\n      required:\n        - format\n        - schedule\n        - objectType\n        - schemaFields\n      description: An object that defines the blob inventory rule.\n      type: object\n    BlobInventoryPolicyFilter:\n      properties:\n        prefixMatch:\n          type: array\n          items:\n            type: string\n          description: An array of strings with maximum 10 blob prefixes to be included in the inventory.\n        excludePrefix:\n          type: array\n          items:\n            type: string\n          description: An array of strings with maximum 10 blob prefixes to be excluded from the inventory.\n        blobTypes:\n          type: array\n          items:\n            type: string\n          description: An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.\n        includeBlobVersions:\n          type: boolean\n          description: Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded.\n        includeSnapshots:\n          type: boolean\n          description: Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded.\n        includeDeleted:\n          type: boolean\n          description: For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded.\n      description: An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional.\n      type: object\n    ErrorResponseBody:\n      properties:\n        code:\n          type: string\n          description: An identifier for the error. Codes are invariant and are intended to be consumed programmatically.\n        message:\n          type: string\n          description: A message describing the error, intended to be suitable for display in a user interface.\n      description: Error response body contract.\n      type: object\n  x-stackQL-resources:\n    file_services:\n      id: azure.storage.file_services\n      name: file_services\n      title: File_services\n      methods:\n        FileServices_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        FileServices_SetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        FileServices_GetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1{FileServicesName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/file_services/methods/FileServices_List'\n        insert: []\n        update: []\n        delete: []\n    file_shares:\n      id: azure.storage.file_shares\n      name: file_shares\n      title: File_shares\n      methods:\n        FileShares_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        FileShares_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        FileShares_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1?api-version=2022-05-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        FileShares_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        FileShares_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        FileShares_Restore:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1restore~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        FileShares_Lease:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1fileServices~1default~1shares~1{shareName}~1lease~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/file_shares/methods/FileShares_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/file_shares/methods/FileShares_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/file_shares/methods/FileShares_Delete'\n    blob_services:\n      id: azure.storage.blob_services\n      name: blob_services\n      title: Blob_services\n      methods:\n        BlobServices_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        BlobServices_SetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobServices_GetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1{BlobServicesName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/blob_services/methods/BlobServices_List'\n        insert: []\n        update: []\n        delete: []\n    blob_containers:\n      id: azure.storage.blob_containers\n      name: blob_containers\n      title: Blob_containers\n      methods:\n        BlobContainers_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        BlobContainers_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        BlobContainers_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1?api-version=2022-05-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        BlobContainers_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        BlobContainers_SetLegalHold:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1setLegalHold~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_ClearLegalHold:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1clearLegalHold~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_CreateOrUpdateImmutabilityPolicy:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_GetImmutabilityPolicy:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        BlobContainers_DeleteImmutabilityPolicy:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1{immutabilityPolicyName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_LockImmutabilityPolicy:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1lock~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_ExtendImmutabilityPolicy:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1immutabilityPolicies~1default~1extend~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_Lease:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1lease~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobContainers_ObjectLevelWorm:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1blobServices~1default~1containers~1{containerName}~1migrate~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/BlobContainers_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/BlobContainers_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/blob_containers/methods/BlobContainers_Delete'\n    table_services:\n      id: azure.storage.table_services\n      name: table_services\n      title: Table_services\n      methods:\n        TableServices_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        TableServices_SetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1{tableServiceName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        TableServices_GetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1{tableServiceName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/table_services/methods/TableServices_List'\n        insert: []\n        update: []\n        delete: []\n    table:\n      id: azure.storage.table\n      name: table\n      title: Table\n      methods:\n        Table_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Table_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}~1?api-version=2022-05-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Table_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Table_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1{tableName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Table_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1tableServices~1default~1tables~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/table/methods/Table_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/table/methods/Table_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/table/methods/Table_Delete'\n    queue_services:\n      id: azure.storage.queue_services\n      name: queue_services\n      title: Queue_services\n      methods:\n        QueueServices_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        QueueServices_SetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1{queueServiceName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        QueueServices_GetServiceProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1{queueServiceName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/queue_services/methods/QueueServices_List'\n        insert: []\n        update: []\n        delete: []\n    queue:\n      id: azure.storage.queue\n      name: queue\n      title: Queue\n      methods:\n        Queue_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Queue_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}~1?api-version=2022-05-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        Queue_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        Queue_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1{queueName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        Queue_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1queueServices~1default~1queues~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/queue/methods/Queue_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/queue/methods/Queue_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/queue/methods/Queue_Delete'\n    operations:\n      id: azure.storage.operations\n      name: operations\n      title: Operations\n      methods:\n        Operations_List:\n          operation:\n            $ref: '#/paths/~1providers~1Microsoft.Storage~1operations~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/operations/methods/Operations_List'\n        insert: []\n        update: []\n        delete: []\n    skus:\n      id: azure.storage.skus\n      name: skus\n      title: Skus\n      methods:\n        Skus_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1skus~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/skus/methods/Skus_List'\n        insert: []\n        update: []\n        delete: []\n    accounts:\n      id: azure.storage.accounts\n      name: accounts\n      title: Accounts\n      methods:\n        StorageAccounts_CheckNameAvailability:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1checkNameAvailability~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StorageAccounts_Create:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StorageAccounts_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        StorageAccounts_GetProperties:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        StorageAccounts_Update:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1?api-version=2022-05-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StorageAccounts_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1storageAccounts~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        StorageAccounts_ListByResourceGroup:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        StorageAccounts_ListKeys:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1listKeys~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StorageAccounts_RegenerateKey:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1regenerateKey~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StorageAccounts_ListAccountSAS:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListAccountSas~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StorageAccounts_ListServiceSAS:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1ListServiceSas~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        StorageAccounts_Failover:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1failover~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StorageAccounts_HierarchicalNamespaceMigration:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1hnsonmigration~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StorageAccounts_AbortHierarchicalNamespaceMigration:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourcegroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1aborthnsonmigration~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StorageAccounts_RestoreBlobRanges:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1restoreBlobRanges~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '202'\n        StorageAccounts_RevokeUserDelegationKeys:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1revokeUserDelegationKeys~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/StorageAccounts_ListByResourceGroup'\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/StorageAccounts_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/StorageAccounts_Create'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/accounts/methods/StorageAccounts_Delete'\n    deleted_accounts:\n      id: azure.storage.deleted_accounts\n      name: deleted_accounts\n      title: Deleted_accounts\n      methods:\n        DeletedAccounts_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1deletedAccounts~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        DeletedAccounts_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1deletedAccounts~1{deletedAccountName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/deleted_accounts/methods/DeletedAccounts_List'\n        insert: []\n        update: []\n        delete: []\n    usages:\n      id: azure.storage.usages\n      name: usages\n      title: Usages\n      methods:\n        Usages_ListByLocation:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1providers~1Microsoft.Storage~1locations~1{location}~1usages~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/usages/methods/Usages_ListByLocation'\n        insert: []\n        update: []\n        delete: []\n    management_policies:\n      id: azure.storage.management_policies\n      name: management_policies\n      title: Management_policies\n      methods:\n        ManagementPolicies_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        ManagementPolicies_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        ManagementPolicies_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1managementPolicies~1{managementPolicyName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select: []\n        insert:\n          - $ref: '#/components/x-stackQL-resources/management_policies/methods/ManagementPolicies_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/management_policies/methods/ManagementPolicies_Delete'\n    blob_inventory_policies:\n      id: azure.storage.blob_inventory_policies\n      name: blob_inventory_policies\n      title: Blob_inventory_policies\n      methods:\n        BlobInventoryPolicies_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        BlobInventoryPolicies_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        BlobInventoryPolicies_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1{blobInventoryPolicyName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        BlobInventoryPolicies_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1inventoryPolicies~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/BlobInventoryPolicies_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/BlobInventoryPolicies_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/blob_inventory_policies/methods/BlobInventoryPolicies_Delete'\n    private_endpoint_connections:\n      id: azure.storage.private_endpoint_connections\n      name: private_endpoint_connections\n      title: Private_endpoint_connections\n      methods:\n        PrivateEndpointConnections_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        PrivateEndpointConnections_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        PrivateEndpointConnections_Put:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        PrivateEndpointConnections_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateEndpointConnections~1{privateEndpointConnectionName}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_List'\n        insert: []\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/private_endpoint_connections/methods/PrivateEndpointConnections_Delete'\n    private_link_resources:\n      id: azure.storage.private_link_resources\n      name: private_link_resources\n      title: Private_link_resources\n      methods:\n        PrivateLinkResources_ListByStorageAccount:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1privateLinkResources~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/private_link_resources/methods/PrivateLinkResources_ListByStorageAccount'\n        insert: []\n        update: []\n        delete: []\n    object_replication_policies:\n      id: azure.storage.object_replication_policies\n      name: object_replication_policies\n      title: Object_replication_policies\n      methods:\n        ObjectReplicationPolicies_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        ObjectReplicationPolicies_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        ObjectReplicationPolicies_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        ObjectReplicationPolicies_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1objectReplicationPolicies~1{objectReplicationPolicyId}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/ObjectReplicationPolicies_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/ObjectReplicationPolicies_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/object_replication_policies/methods/ObjectReplicationPolicies_Delete'\n    local_users:\n      id: azure.storage.local_users\n      name: local_users\n      title: Local_users\n      methods:\n        LocalUsers_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        LocalUsers_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        LocalUsers_CreateOrUpdate:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        LocalUsers_Delete:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1?api-version=2022-05-01/delete'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '204'\n        LocalUsers_ListKeys:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1listKeys~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        LocalUsers_RegeneratePassword:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1localUsers~1{username}~1regeneratePassword~1?api-version=2022-05-01/post'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/local_users/methods/LocalUsers_List'\n        insert:\n          - $ref: '#/components/x-stackQL-resources/local_users/methods/LocalUsers_CreateOrUpdate'\n        update: []\n        delete:\n          - $ref: '#/components/x-stackQL-resources/local_users/methods/LocalUsers_Delete'\n    encryption_scopes:\n      id: azure.storage.encryption_scopes\n      name: encryption_scopes\n      title: Encryption_scopes\n      methods:\n        EncryptionScopes_Put:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}~1?api-version=2022-05-01/put'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '201'\n        EncryptionScopes_Patch:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}~1?api-version=2022-05-01/patch'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n        EncryptionScopes_Get:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1{encryptionScopeName}~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n        EncryptionScopes_List:\n          operation:\n            $ref: '#/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.Storage~1storageAccounts~1{accountName}~1encryptionScopes~1?api-version=2022-05-01/get'\n          response:\n            mediaType: application/json\n            openAPIDocKey: '200'\n            objectKey: $.value\n      sqlVerbs:\n        select:\n          - $ref: '#/components/x-stackQL-resources/encryption_scopes/methods/EncryptionScopes_List'\n        insert: []\n        update: []\n        delete: []\npaths:\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/?api-version=2022-05-01:\n    get:\n      tags:\n        - FileService\n      operationId: FileServices_List\n      description: List all file services in storage accounts\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List file services operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileServiceItems'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_services\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/{FileServicesName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - FileService\n      operationId: FileServices_SetServiceProperties\n      description: 'Sets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/FileServicesName'\n      requestBody:\n        description: The properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileServiceProperties'\n      responses:\n        '200':\n          description: OK -- Sets The properties of a storage account’s File service successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileServiceProperties'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_services\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - FileService\n      operationId: FileServices_GetServiceProperties\n      description: Gets the properties of file services in storage accounts, including CORS (Cross-Origin Resource Sharing) rules.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/FileServicesName'\n      responses:\n        '200':\n          description: OK -- returned the properties of a storage account’s File service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileServiceProperties'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_services\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/?api-version=2022-05-01:\n    get:\n      tags:\n        - FileShares\n      operationId: FileShares_List\n      description: Lists all shares.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $maxpagesize\n          in: query\n          description: Optional. Specified maximum number of shares that can be included in the list.\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: Optional. When specified, only share names starting with the filter will be listed.\n          schema:\n            type: string\n        - name: $expand\n          in: query\n          description: 'Optional, used to expand the properties within share''s properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter '','''\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- List Shares operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShareItems'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - FileShares\n      operationId: FileShares_Create\n      description: 'Creates a new share under the specified account as described by request body. The share resource includes metadata and properties for that share. It does not include a list of the files contained by the share. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ShareName'\n        - name: $expand\n          in: query\n          description: 'Optional, used to expand the properties within share''s properties. Valid values are: snapshots. Should be passed as a string with delimiter '','''\n          required: false\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: Properties of the file share to create.\n        required: true\n        x-ms-requestBody-name: fileShare\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileShare'\n      responses:\n        '200':\n          description: OK -- The Share is already created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShare'\n        '201':\n          description: Created -- Create Share operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShare'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - FileShares\n      operationId: FileShares_Update\n      description: 'Updates share properties as specified in request body. Properties not mentioned in the request will not be changed. Update fails if the specified share does not already exist. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ShareName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: Properties to update for the file share.\n        required: true\n        x-ms-requestBody-name: fileShare\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FileShare'\n      responses:\n        '200':\n          description: OK -- Update Share operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShare'\n                description: Properties of the updated file share.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - FileShares\n      operationId: FileShares_Get\n      description: Gets properties of a specified share.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ShareName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $expand\n          in: query\n          description: 'Optional, used to expand the properties within share''s properties. Valid values are: stats. Should be passed as a string with delimiter '',''.'\n          required: false\n          schema:\n            type: string\n        - name: x-ms-snapshot\n          in: header\n          description: Optional, used to retrieve properties of a snapshot.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- Get Share operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileShare'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - FileShares\n      operationId: FileShares_Delete\n      description: Deletes specified share under its account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ShareName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: x-ms-snapshot\n          in: header\n          description: Optional, used to delete a snapshot.\n          required: false\n          schema:\n            type: string\n        - name: $include\n          in: query\n          description: 'Optional. Valid values are: snapshots, leased-snapshots, none. The default value is snapshots. For ''snapshots'', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For ''leased-snapshots'', the file share is deleted included all of its file share snapshots (leased/unleased). For ''none'', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails.'\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- Delete Share operation completed successfully.\n        '204':\n          description: No Content -- The Share not exist.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/restore/?api-version=2022-05-01:\n    post:\n      tags:\n        - FileShares\n      operationId: FileShares_Restore\n      description: Restore a file share within a valid retention days if share soft delete is enabled\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ShareName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        required: true\n        x-ms-requestBody-name: deletedShare\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeletedShare'\n      responses:\n        '200':\n          description: OK -- The Share is successfully restored.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}/lease/?api-version=2022-05-01:\n    post:\n      tags:\n        - FileShares\n      operationId: FileShares_Lease\n      description: The Lease Share operation establishes and manages a lock on a share for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ShareName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: x-ms-snapshot\n          in: header\n          description: Optional. Specify the snapshot time to lease a snapshot.\n          required: false\n          schema:\n            type: string\n      requestBody:\n        description: Lease Share request body.\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeaseShareRequest'\n      responses:\n        '200':\n          description: OK -- Lease Share operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaseShareResponse'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: file_shares\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/?api-version=2022-05-01:\n    get:\n      tags:\n        - BlobService\n      operationId: BlobServices_List\n      description: List blob services of storage account. It returns a collection of one object named default.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List blob services operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobServiceItems'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: blob_services\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - BlobService\n      operationId: BlobServices_SetServiceProperties\n      description: 'Sets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/BlobServicesName'\n      requestBody:\n        description: The properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlobServiceProperties'\n      responses:\n        '200':\n          description: OK -- Sets The properties of a storage account’s Blob service successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobServiceProperties'\n      x-stackQL-resource: blob_services\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - BlobService\n      operationId: BlobServices_GetServiceProperties\n      description: Gets the properties of a storage account’s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/BlobServicesName'\n      responses:\n        '200':\n          description: OK -- returned the properties of a storage account’s Blob service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobServiceProperties'\n      x-stackQL-resource: blob_services\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/?api-version=2022-05-01:\n    get:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_List\n      description: Lists all containers and does not support a prefix like data plane. Also SRP today does not return continuation token.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $maxpagesize\n          in: query\n          description: Optional. Specified maximum number of containers that can be included in the list.\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: Optional. When specified, only container names starting with the filter will be listed.\n          schema:\n            type: string\n        - name: $include\n          in: query\n          description: Optional, used to include the properties for soft deleted blob containers.\n          required: false\n          schema:\n            enum:\n              - deleted\n            x-ms-enum:\n              name: ListContainersInclude\n              modelAsString: true\n            type: string\n      responses:\n        '200':\n          description: OK -- List Container operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContainerItems'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_Create\n      description: 'Creates a new container under the specified account as described by request body. The container resource includes metadata and properties for that container. It does not include a list of the blobs contained by the container. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: Properties of the blob container to create.\n        required: true\n        x-ms-requestBody-name: blobContainer\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlobContainer'\n      responses:\n        '200':\n          description: OK -- The Container is already created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobContainer'\n        '201':\n          description: Created -- Create Container operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobContainer'\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_Update\n      description: 'Updates container properties as specified in request body. Properties not mentioned in the request will be unchanged. Update fails if the specified container doesn''t already exist. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: Properties to update for the blob container.\n        required: true\n        x-ms-requestBody-name: blobContainer\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlobContainer'\n      responses:\n        '200':\n          description: OK -- Update Container operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobContainer'\n                description: Properties of the updated blob container.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_Get\n      description: 'Gets properties of a specified container. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Get Container operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobContainer'\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_Delete\n      description: Deletes specified container under its account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Delete Container operation completed successfully.\n        '204':\n          description: No Content -- The Container not exist.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold/?api-version=2022-05-01:\n    post:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_SetLegalHold\n      description: Sets legal hold tags. Setting the same tag results in an idempotent operation. SetLegalHold follows an append pattern and does not clear out the existing tags that are not specified in the request.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The LegalHold property that will be set to a blob container.\n        required: true\n        x-ms-requestBody-name: LegalHold\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LegalHold'\n      responses:\n        '200':\n          description: OK -- Set legal hold tags for Container completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LegalHold'\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold/?api-version=2022-05-01:\n    post:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_ClearLegalHold\n      description: Clears legal hold tags. Clearing the same or non-existent tag results in an idempotent operation. ClearLegalHold clears out only the specified tags in the request.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The LegalHold property that will be clear from a blob container.\n        required: true\n        x-ms-requestBody-name: LegalHold\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LegalHold'\n      responses:\n        '200':\n          description: OK -- Clear legal hold tags for Container completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LegalHold'\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_CreateOrUpdateImmutabilityPolicy\n      description: Creates or updates an unlocked immutability policy. ETag in If-Match is honored if given but not required for this operation.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/ImmutabilityPolicyName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: If-Match\n          in: header\n          description: The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.\n          required: false\n          schema:\n            type: string\n      requestBody:\n        description: The ImmutabilityPolicy Properties that will be created or updated to a blob container.\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImmutabilityPolicy'\n      responses:\n        '200':\n          description: OK -- Creates or updates container ImmutabilityPolicy operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImmutabilityPolicy'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_GetImmutabilityPolicy\n      description: Gets the existing immutability policy along with the corresponding ETag in response headers and body.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/ImmutabilityPolicyName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: If-Match\n          in: header\n          description: The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- Gets container ImmutabilityPolicy operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImmutabilityPolicy'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_DeleteImmutabilityPolicy\n      description: Aborts an unlocked immutability policy. The response of delete has immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required for this operation. Deleting a locked immutability policy is not allowed, the only way is to delete the container after deleting all expired blobs inside the policy locked container.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/ImmutabilityPolicyName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: If-Match\n          in: header\n          description: The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- Deletes container ImmutabilityPolicy operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImmutabilityPolicy'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock/?api-version=2022-05-01:\n    post:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_LockImmutabilityPolicy\n      description: Sets the ImmutabilityPolicy to Locked state. The only action allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is required for this operation.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: If-Match\n          in: header\n          description: The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- Locks container ImmutabilityPolicy operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImmutabilityPolicy'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend/?api-version=2022-05-01:\n    post:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_ExtendImmutabilityPolicy\n      description: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy. The only action allowed on a Locked policy will be this action. ETag in If-Match is required for this operation.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: If-Match\n          in: header\n          description: The entity state (ETag) version of the immutability policy to update. A value of \"*\" can be used to apply the operation only if the immutability policy already exists. If omitted, this operation will always be applied.\n          required: true\n          schema:\n            type: string\n      requestBody:\n        description: The ImmutabilityPolicy Properties that will be extended for a blob container.\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImmutabilityPolicy'\n      responses:\n        '200':\n          description: OK -- Extends container ImmutabilityPolicy operation completed successfully..\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ImmutabilityPolicy'\n          headers:\n            ETag:\n              schema:\n                type: string\n              description: The ETag HTTP response header. This is an opaque string. You can use it to detect whether the resource has changed between requests. In particular, you can pass the ETag to one of the If-Match or If-None-Match headers.\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/lease/?api-version=2022-05-01:\n    post:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_Lease\n      description: The Lease Container operation establishes and manages a lock on a container for delete operations. The lock duration can be 15 to 60 seconds, or can be infinite.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: Lease Container request body.\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LeaseContainerRequest'\n      responses:\n        '200':\n          description: OK -- Lease Container operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LeaseContainerResponse'\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/migrate/?api-version=2022-05-01:\n    post:\n      tags:\n        - BlobContainers\n      operationId: BlobContainers_ObjectLevelWorm\n      description: This operation migrates a blob container from container level WORM to object level immutability enabled container. Prerequisites require a container level immutability policy either in locked or unlocked state, Account level versioning must be enabled and there should be no Legal hold on the container.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/ContainerName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- returned when the blob container migration to support object level immutability completes.\n        '202':\n          description: Accepted -- Blob Container migration to support object level immutability is accepted; operation will complete asynchronously.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: location\n      x-stackQL-resource: blob_containers\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/?api-version=2022-05-01:\n    get:\n      tags:\n        - TableServiceProperties\n      operationId: TableServices_List\n      description: List all table services for the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- returned the properties of a storage account’s Table service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTableServices'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table_services\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/{tableServiceName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - TableServiceProperties\n      operationId: TableServices_SetServiceProperties\n      description: 'Sets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/TableServiceName'\n      requestBody:\n        description: The properties of a storage account’s Table service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TableServiceProperties'\n      responses:\n        '200':\n          description: OK -- Sets The properties of a storage account’s Table service successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableServiceProperties'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table_services\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - TableServiceProperties\n      operationId: TableServices_GetServiceProperties\n      description: Gets the properties of a storage account’s Table service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/TableServiceName'\n      responses:\n        '200':\n          description: OK -- returned the properties of a storage account’s Table service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableServiceProperties'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table_services\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/{tableName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - TableService\n      operationId: Table_Create\n      description: Creates a new table with the specified table name, under the specified account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/TableName'\n      requestBody:\n        description: The parameters to provide to create a table.\n        required: false\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Table'\n      responses:\n        '200':\n          description: OK -- Creates a table with the given table name successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Table'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - TableService\n      operationId: Table_Update\n      description: Creates a new table with the specified table name, under the specified account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/TableName'\n      requestBody:\n        description: The parameters to provide to create a table.\n        required: false\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Table'\n      responses:\n        '200':\n          description: OK -- Creates a table with the given table name successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Table'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - TableService\n      operationId: Table_Get\n      description: Gets the table with the specified table name, under the specified account if it exists.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/TableName'\n      responses:\n        '200':\n          description: OK -- returned table with the specified table name successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Table'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - TableService\n      operationId: Table_Delete\n      description: Deletes the table with the specified table name, under the specified account if it exists.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/TableName'\n      responses:\n        '204':\n          description: No Content - Successfully deleted the table with the specified table name\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: table\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/tableServices/default/tables/?api-version=2022-05-01:\n    get:\n      tags:\n        - TableService\n      operationId: Table_List\n      description: Gets a list of all the tables under the specified storage account\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- returned a list of tables successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTableResource'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: table\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/?api-version=2022-05-01:\n    get:\n      tags:\n        - QueueServiceProperties\n      operationId: QueueServices_List\n      description: List all queue services for the storage account\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- returned the properties of a storage account’s Queue service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueueServices'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue_services\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/{queueServiceName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - QueueServiceProperties\n      operationId: QueueServices_SetServiceProperties\n      description: 'Sets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules. '\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/QueueServiceName'\n      requestBody:\n        description: The properties of a storage account’s Queue service, only properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules can be specified.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueueServiceProperties'\n      responses:\n        '200':\n          description: OK -- Sets The properties of a storage account’s Queue service successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueueServiceProperties'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue_services\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - QueueServiceProperties\n      operationId: QueueServices_GetServiceProperties\n      description: Gets the properties of a storage account’s Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/QueueServiceName'\n      responses:\n        '200':\n          description: OK -- returned the properties of a storage account’s Queue service.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueueServiceProperties'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue_services\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/{queueName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - QueueService\n      operationId: Queue_Create\n      description: Creates a new queue with the specified queue name, under the specified account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/QueueName'\n      requestBody:\n        description: Queue properties and metadata to be created with\n        required: true\n        x-ms-requestBody-name: queue\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageQueue'\n      responses:\n        '200':\n          description: OK -- Creates a queue with the given queue name successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageQueue'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue\n      x-stackQL-verb: insert\n    patch:\n      tags:\n        - QueueService\n      operationId: Queue_Update\n      description: Creates a new queue with the specified queue name, under the specified account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/QueueName'\n      requestBody:\n        description: Queue properties and metadata to be created with\n        required: true\n        x-ms-requestBody-name: queue\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageQueue'\n      responses:\n        '200':\n          description: OK -- Creates a queue with the given queue name successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageQueue'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - QueueService\n      operationId: Queue_Get\n      description: Gets the queue with the specified queue name, under the specified account if it exists.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/QueueName'\n      responses:\n        '200':\n          description: OK -- returned table with the specified table name successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageQueue'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - QueueService\n      operationId: Queue_Delete\n      description: Deletes the queue with the specified queue name, under the specified account if it exists.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/QueueName'\n      responses:\n        '204':\n          description: No Content - Successfully deleted the queue with the specified queue name\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: queue\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/queueServices/default/queues/?api-version=2022-05-01:\n    get:\n      tags:\n        - QueueService\n      operationId: Queue_List\n      description: Gets a list of all the queues under the specified storage account\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $maxpagesize\n          in: query\n          description: Optional, a maximum number of queues that should be included in a list queue response\n          schema:\n            type: string\n        - name: $filter\n          in: query\n          description: Optional, When specified, only the queues with a name starting with the given filter will be listed.\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- returned a list of queues successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListQueueResource'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: queue\n      x-stackQL-verb: select\n  /providers/Microsoft.Storage/operations/?api-version=2022-05-01:\n    get:\n      tags:\n        - Operations\n      description: Lists all of the available Storage Rest API operations.\n      operationId: Operations_List\n      parameters: []\n      responses:\n        '200':\n          description: OK. The request has succeeded.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OperationListResult'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: operations\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/skus/?api-version=2022-05-01:\n    get:\n      tags:\n        - Skus\n      operationId: Skus_List\n      description: Lists the available SKUs supported by Microsoft.Storage for given subscription.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List of storage SKUs in the given subscription retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageSkuListResult'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: skus\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_CheckNameAvailability\n      description: Checks that the storage account name is valid and is not already in use.\n      requestBody:\n        description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n        required: true\n        x-ms-requestBody-name: accountName\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageAccountCheckNameAvailabilityParameters'\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Operation to check the storage account name availability was successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckNameAvailabilityResult'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_Create\n      description: Asynchronously creates a new storage account with the specified parameters. If an account is already created and a subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and a subsequent create or update request is issued with the exact same set of properties, the request will succeed.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The parameters to provide for the created account.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageAccountCreateParameters'\n      responses:\n        '200':\n          description: OK -- returned when the storage account was already created from a previous request with the same properties specified in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccount'\n        '202':\n          description: Accepted -- Create or update request accepted; operation will complete asynchronously.\n      x-ms-long-running-operation: true\n      x-stackQL-resource: accounts\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_Delete\n      description: Deletes a storage account in Microsoft Azure.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- storage account deleted successfully.\n        '204':\n          description: NoContent -- account does not exist in the subscription.\n      x-stackQL-resource: accounts\n      x-stackQL-verb: delete\n    get:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_GetProperties\n      description: Returns the properties for the specified storage account including but not limited to name, SKU name, location, and account status. The ListKeys operation should be used to retrieve storage keys.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $expand\n          in: query\n          description: May be used to expand the properties within account's properties. By default, data is not included when fetching properties. Currently we only support geoReplicationStats and blobRestoreStatus.\n          required: false\n          schema:\n            enum:\n              - geoReplicationStats\n              - blobRestoreStatus\n            x-ms-enum:\n              name: StorageAccountExpand\n              modelAsString: false\n            type: string\n      responses:\n        '200':\n          description: OK -- properties retrieved successfully for the storage account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccount'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n    patch:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_Update\n      description: The update operation can be used to update the SKU, encryption, access tier, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account; the replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value can be set. The update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change the storage account keys, use the regenerate keys operation. The location and name of the storage account cannot be changed after creation.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The parameters to provide for the updated account.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageAccountUpdateParameters'\n      responses:\n        '200':\n          description: OK -- storage account properties updated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccount'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/deletedAccounts/?api-version=2022-05-01:\n    get:\n      tags:\n        - DeletedAccounts\n      operationId: DeletedAccounts_List\n      description: Lists deleted accounts under the subscription.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List of deleted accounts was retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeletedAccountListResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: deleted_accounts\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/deletedAccounts/{deletedAccountName}/?api-version=2022-05-01:\n    get:\n      tags:\n        - DeletedAccounts\n      operationId: DeletedAccounts_Get\n      description: Get properties of specified deleted account resource.\n      parameters:\n        - $ref: '#/components/parameters/DeletedAccountName'\n        - name: location\n          in: path\n          description: The location of the deleted storage account.\n          required: true\n          schema:\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- properties retrieved and returned successfully for the deleted account.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeletedAccount'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: deleted_accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts/?api-version=2022-05-01:\n    get:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_List\n      description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List of storage accounts was retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccountListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: accounts\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/?api-version=2022-05-01:\n    get:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_ListByResourceGroup\n      description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List of storage accounts in the given resource group retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccountListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: accounts\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_ListKeys\n      description: Lists the access keys or Kerberos keys (if active directory enabled) for the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: $expand\n          in: query\n          description: Specifies type of the key to be listed. Possible value is kerb.\n          required: false\n          schema:\n            enum:\n              - kerb\n            x-ms-enum:\n              name: ListKeyExpand\n            type: string\n      responses:\n        '200':\n          description: OK -- list of keys retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccountListKeysResult'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_RegenerateKey\n      description: Regenerates one of the access keys or Kerberos keys for the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: Specifies name of the key which should be regenerated -- key1, key2, kerb1, kerb2.\n        required: true\n        x-ms-requestBody-name: regenerateKey\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StorageAccountRegenerateKeyParameters'\n      responses:\n        '200':\n          description: OK -- specified key regenerated successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StorageAccountListKeysResult'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages/?api-version=2022-05-01:\n    get:\n      tags:\n        - LocationUsage\n      operationId: Usages_ListByLocation\n      description: Gets the current usage count and the limit for the resources of the location under the subscription.\n      parameters:\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: location\n          in: path\n          description: The location of the Azure Storage resource.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- current usage count and limit retrieved and returned successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsageListResult'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: usages\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListAccountSas/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_ListAccountSAS\n      description: List SAS credentials of a storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The parameters to provide to list SAS credentials for the storage account.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccountSasParameters'\n      responses:\n        '200':\n          description: OK -- returned the account SAS created for the storage account requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAccountSasResponse'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/ListServiceSas/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_ListServiceSAS\n      description: List service SAS credentials of a specific resource.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The parameters to provide to list service SAS credentials.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ServiceSasParameters'\n      responses:\n        '200':\n          description: OK -- returned the service SAS created for the storage service requested.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListServiceSasResponse'\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/failover/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_Failover\n      description: Failover request can be triggered for a storage account in case of availability issues. The failover occurs from the storage account's primary cluster to secondary cluster for RA-GRS accounts. The secondary cluster will become primary after failover.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Returned when the storage account failover is completed, and the secondary cluster has become primary.\n        '202':\n          description: Accepted -- Failover request accepted; operation will complete asynchronously.\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: location\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/hnsonmigration/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_HierarchicalNamespaceMigration\n      description: Live Migration of storage account to enable Hns\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - name: requestType\n          in: query\n          description: Required. Hierarchical namespace migration type can either be a hierarchical namespace validation request 'HnsOnValidationRequest' or a hydration request 'HnsOnHydrationRequest'. The validation request will validate the migration whereas the hydration request will migrate the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK -- Returned when the storage account migration to hierarchical namespace is completed.\n        '202':\n          description: Accepted -- Hierarchical namespace migration request accepted; operation will complete asynchronously.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: location\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/aborthnsonmigration/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_AbortHierarchicalNamespaceMigration\n      description: Abort live Migration of storage account to enable Hns\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Returned when the storage account migration to hierarchical namespace is aborted.\n        '202':\n          description: Accepted -- Abort hierarchical namespace migration request accepted; operation will complete asynchronously.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: location\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/restoreBlobRanges/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_RestoreBlobRanges\n      description: Restore blobs in the specified blob ranges\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      requestBody:\n        description: The parameters to provide for restore blob ranges.\n        required: true\n        x-ms-requestBody-name: parameters\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlobRestoreParameters'\n      responses:\n        '200':\n          description: OK -- returned when blob ranges are restored completely with the same properties specified in the request body.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobRestoreStatus'\n        '202':\n          description: Accepted -- Blob restore request accepted; operation will complete asynchronously.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobRestoreStatus'\n      x-ms-long-running-operation: true\n      x-ms-long-running-operation-options:\n        final-state-via: location\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/managementPolicies/{managementPolicyName}/?api-version=2022-05-01:\n    get:\n      tags:\n        - ManagementPolicies\n      operationId: ManagementPolicies_Get\n      description: Gets the managementpolicy associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ManagementPolicyName'\n      responses:\n        '200':\n          description: OK -- Get the managementpolicy successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementPolicy'\n      x-stackQL-resource: management_policies\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - ManagementPolicies\n      operationId: ManagementPolicies_CreateOrUpdate\n      description: Sets the managementpolicy to the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ManagementPolicyName'\n      requestBody:\n        description: The ManagementPolicy set to a storage account.\n        required: true\n        x-ms-requestBody-name: properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ManagementPolicy'\n      responses:\n        '200':\n          description: OK -- Put managementpolicy successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ManagementPolicy'\n      x-stackQL-resource: management_policies\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - ManagementPolicies\n      operationId: ManagementPolicies_Delete\n      description: Deletes the managementpolicy associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ManagementPolicyName'\n      responses:\n        '200':\n          description: OK -- Delete the managementpolicy successfully.\n        '204':\n          description: No Content -- The managementpolicy does not exist.\n      x-stackQL-resource: management_policies\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/{blobInventoryPolicyName}/?api-version=2022-05-01:\n    get:\n      tags:\n        - BlobInventoryPolicies\n      operationId: BlobInventoryPolicies_Get\n      description: Gets the blob inventory policy associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/BlobInventoryPolicyName'\n      responses:\n        '200':\n          description: OK -- Get the blob inventory policy successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobInventoryPolicy'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: blob_inventory_policies\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - BlobInventoryPolicies\n      operationId: BlobInventoryPolicies_CreateOrUpdate\n      description: Sets the blob inventory policy to the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/BlobInventoryPolicyName'\n      requestBody:\n        description: The blob inventory policy set to a storage account.\n        required: true\n        x-ms-requestBody-name: properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BlobInventoryPolicy'\n      responses:\n        '200':\n          description: OK -- Put blob inventory policy successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlobInventoryPolicy'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: blob_inventory_policies\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - BlobInventoryPolicies\n      operationId: BlobInventoryPolicies_Delete\n      description: Deletes the blob inventory policy associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/BlobInventoryPolicyName'\n      responses:\n        '200':\n          description: OK -- Delete the blob inventory policy successfully.\n        '204':\n          description: No Content -- The blob inventory policy does not exist.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CloudError'\n      x-stackQL-resource: blob_inventory_policies\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/inventoryPolicies/?api-version=2022-05-01:\n    get:\n      tags:\n        - BlobInventoryPolicies\n      operationId: BlobInventoryPolicies_List\n      description: Gets the blob inventory policy associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Get the blob inventory policies successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBlobInventoryPolicy'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: blob_inventory_policies\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/?api-version=2022-05-01:\n    get:\n      tags:\n        - PrivateEndpointConnections\n      operationId: PrivateEndpointConnections_List\n      description: List all the private endpoint connections associated with the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- Successfully retrieved private endpoint connections.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: private_endpoint_connections\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}/?api-version=2022-05-01:\n    get:\n      tags:\n        - PrivateEndpointConnections\n      operationId: PrivateEndpointConnections_Get\n      description: Gets the specified private endpoint connection associated with the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/PrivateEndpointConnectionName'\n      responses:\n        '200':\n          description: OK -- Get the private endpoint connection properties successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpointConnection'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: private_endpoint_connections\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - PrivateEndpointConnections\n      operationId: PrivateEndpointConnections_Put\n      description: Update the state of specified private endpoint connection associated with the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/PrivateEndpointConnectionName'\n      requestBody:\n        description: The private endpoint connection properties.\n        required: true\n        x-ms-requestBody-name: properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrivateEndpointConnection'\n      responses:\n        '200':\n          description: OK -- Update the private endpoint connection properties successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpointConnection'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: private_endpoint_connections\n      x-stackQL-verb: exec\n    delete:\n      tags:\n        - PrivateEndpointConnections\n      operationId: PrivateEndpointConnections_Delete\n      description: Deletes the specified private endpoint connection associated with the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/PrivateEndpointConnectionName'\n      responses:\n        '200':\n          description: OK -- Delete the private endpoint connection successfully.\n        '204':\n          description: No Content -- The private endpoint connection does not exist.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: private_endpoint_connections\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateLinkResources/?api-version=2022-05-01:\n    get:\n      tags:\n        - PrivateLinkResources\n      operationId: PrivateLinkResources_ListByStorageAccount\n      description: Gets the private link resources that need to be created for a storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: Successfully retrieved private link resources.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateLinkResourceListResult'\n      x-stackQL-resource: private_link_resources\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/?api-version=2022-05-01:\n    get:\n      tags:\n        - ObjectReplicationPolicies\n      operationId: ObjectReplicationPolicies_List\n      description: List the object replication policies associated with the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List object replication policies successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectReplicationPolicies'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: object_replication_policies\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}/?api-version=2022-05-01:\n    get:\n      tags:\n        - ObjectReplicationPolicies\n      operationId: ObjectReplicationPolicies_Get\n      description: Get the object replication policy of the storage account by policy ID.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ObjectReplicationPolicyId'\n      responses:\n        '200':\n          description: OK -- Get the object replication policy successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectReplicationPolicy'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: object_replication_policies\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - ObjectReplicationPolicies\n      operationId: ObjectReplicationPolicies_CreateOrUpdate\n      description: Create or update the object replication policy of the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ObjectReplicationPolicyId'\n      requestBody:\n        description: The object replication policy set to a storage account. A unique policy ID will be created if absent.\n        required: true\n        x-ms-requestBody-name: properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectReplicationPolicy'\n      responses:\n        '200':\n          description: OK -- Put object replication policy successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectReplicationPolicy'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: object_replication_policies\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - ObjectReplicationPolicies\n      operationId: ObjectReplicationPolicies_Delete\n      description: Deletes the object replication policy associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/ObjectReplicationPolicyId'\n      responses:\n        '200':\n          description: OK -- Delete the object replication policy successfully.\n        '204':\n          description: No Content -- The object replication policy does not exist.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: object_replication_policies\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/revokeUserDelegationKeys/?api-version=2022-05-01:\n    post:\n      tags:\n        - StorageAccounts\n      operationId: StorageAccounts_RevokeUserDelegationKeys\n      description: Revoke user delegation keys.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - name: accountName\n          in: path\n          description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\n          required: true\n          schema:\n            maxLength: 24\n            minLength: 3\n            type: string\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- revoke user delegation keys succeeded.\n      x-stackQL-resource: accounts\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/?api-version=2022-05-01:\n    get:\n      tags:\n        - LocalUsers\n      operationId: LocalUsers_List\n      description: List the local users associated with the storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List local users successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LocalUsers'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-ms-pageable:\n        nextLinkName: null\n      x-stackQL-resource: local_users\n      x-stackQL-verb: select\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/?api-version=2022-05-01:\n    get:\n      tags:\n        - LocalUsers\n      operationId: LocalUsers_Get\n      description: Get the local user of the storage account by username.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/Username'\n      responses:\n        '200':\n          description: OK -- Get the local user properties successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LocalUser'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: local_users\n      x-stackQL-verb: exec\n    put:\n      tags:\n        - LocalUsers\n      operationId: LocalUsers_CreateOrUpdate\n      description: Create or update the properties of a local user associated with the storage account\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/Username'\n      requestBody:\n        description: The local user associated with a storage account.\n        required: true\n        x-ms-requestBody-name: properties\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LocalUser'\n      responses:\n        '200':\n          description: OK -- Put local user successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LocalUser'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: local_users\n      x-stackQL-verb: insert\n    delete:\n      tags:\n        - LocalUsers\n      operationId: LocalUsers_Delete\n      description: Deletes the local user associated with the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/Username'\n      responses:\n        '200':\n          description: OK -- Delete the local user successfully.\n        '204':\n          description: No content -- Delete the local user successfully.\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: local_users\n      x-stackQL-verb: delete\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/listKeys/?api-version=2022-05-01:\n    post:\n      tags:\n        - LocalUsers\n      operationId: LocalUsers_ListKeys\n      description: List SSH authorized keys and shared key of the local user.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/Username'\n      responses:\n        '200':\n          description: OK -- Get the local user keys successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LocalUserKeys'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: local_users\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/localUsers/{username}/regeneratePassword/?api-version=2022-05-01:\n    post:\n      tags:\n        - LocalUsers\n      operationId: LocalUsers_RegeneratePassword\n      description: Regenerate the local user SSH password.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/Username'\n      responses:\n        '200':\n          description: OK -- Regenerate local user password successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LocalUserRegeneratePasswordResult'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: local_users\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/{encryptionScopeName}/?api-version=2022-05-01:\n    put:\n      tags:\n        - EncryptionScopes\n      operationId: EncryptionScopes_Put\n      description: Synchronously creates or updates an encryption scope under the specified storage account. If an encryption scope is already created and a subsequent request is issued with different properties, the encryption scope properties will be updated per the specified request.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/EncryptionScopeName'\n      requestBody:\n        description: Encryption scope properties to be used for the create or update.\n        required: true\n        x-ms-requestBody-name: encryptionScope\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EncryptionScope'\n      responses:\n        '200':\n          description: OK -- Update encryption scope operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EncryptionScope'\n        '201':\n          description: Created -- Create encryption scope operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EncryptionScope'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: encryption_scopes\n      x-stackQL-verb: exec\n    patch:\n      tags:\n        - EncryptionScopes\n      operationId: EncryptionScopes_Patch\n      description: Update encryption scope properties as specified in the request body. Update fails if the specified encryption scope does not already exist.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/EncryptionScopeName'\n      requestBody:\n        description: Encryption scope properties to be used for the update.\n        required: true\n        x-ms-requestBody-name: encryptionScope\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EncryptionScope'\n      responses:\n        '200':\n          description: OK -- Update encryption scope operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EncryptionScope'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: encryption_scopes\n      x-stackQL-verb: exec\n    get:\n      tags:\n        - EncryptionScopes\n      operationId: EncryptionScopes_Get\n      description: Returns the properties for the specified encryption scope.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n        - $ref: '#/components/parameters/EncryptionScopeName'\n      responses:\n        '200':\n          description: OK -- Get encryption scope operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EncryptionScope'\n        default:\n          description: Error response describing why the operation failed.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorResponse'\n      x-stackQL-resource: encryption_scopes\n      x-stackQL-verb: exec\n  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/encryptionScopes/?api-version=2022-05-01:\n    get:\n      tags:\n        - EncryptionScopes\n      operationId: EncryptionScopes_List\n      description: Lists all the encryption scopes available under the specified storage account.\n      parameters:\n        - $ref: '#/components/parameters/ResourceGroupName'\n        - $ref: '#/components/parameters/StorageAccountName'\n        - $ref: '#/components/parameters/SubscriptionIdParameter'\n      responses:\n        '200':\n          description: OK -- List encryption scopes operation completed successfully.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EncryptionScopeListResult'\n      x-ms-pageable:\n        nextLinkName: nextLink\n      x-stackQL-resource: encryption_scopes\n      x-stackQL-verb: select\n",
			"canonicalURL": "/github.com/stackql/stackql-provider-registry@fdd3b1cbf58f01c98633c24ea0e690a47550090d/-/blob/providers/src/azure/v0.2.0/services/storage.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/stackql/stackql-provider-registry/blob/fdd3b1cbf58f01c98633c24ea0e690a47550090d/providers/src/azure/v0.2.0/services/storage.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/providers/Microsoft.Storage/operations/?api-version=2022-05-01\": get: operation \"Operations_List\": at 1:228602: parse path \"/providers/Microsoft.Storage/operations/?api-version=2022-05-01\": path MUST NOT contain a query string"
}