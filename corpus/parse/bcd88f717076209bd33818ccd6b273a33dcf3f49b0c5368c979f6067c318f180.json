{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/LucyBot-Inc/api-spec-converter"
		},
		"file": {
			"name": "petstore_from_oas3.json",
			"size": 0,
			"path": "test/output/openapi_3/petstore_from_oas3.json",
			"byteSize": 28103,
			"content": "{\n  \"components\": {\n    \"requestBodies\": {\n      \"UserArray\": {\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/components/schemas/User\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        },\n        \"description\": \"List of user object\",\n        \"required\": true\n      }\n    },\n    \"schemas\": {\n      \"Animal\": {\n        \"discriminator\": {\n          \"propertyName\": \"type\"\n        },\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"type\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Cat\": {\n        \"allOf\": [\n          {\n            \"properties\": {\n              \"likesMilk\": {\n                \"type\": \"boolean\"\n              }\n            },\n            \"required\": [\n              \"likesMilk\"\n            ],\n            \"type\": \"object\"\n          },\n          {\n            \"$ref\": \"#/components/schemas/Animal\"\n          }\n        ]\n      },\n      \"Category\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Order\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"petId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"quantity\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"shipDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"description\": \"Order Status\",\n            \"enum\": [\n              \"placed\",\n              \" approved\",\n              \" delivered\"\n            ],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"Pet\": {\n        \"properties\": {\n          \"category\": {\n            \"$ref\": \"#/components/schemas/Category\"\n          },\n          \"id\": {\n            \"default\": 1,\n            \"description\": \"unique identifier for the pet\",\n            \"format\": \"int64\",\n            \"maximum\": 100,\n            \"minimum\": 0,\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"photoUrls\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\"\n          },\n          \"status\": {\n            \"description\": \"pet status in the store\",\n            \"enum\": [\n              \"available\",\n              \"pending\",\n              \"sold\"\n            ],\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/Tag\"\n            },\n            \"type\": \"array\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"name\"\n        ],\n        \"type\": \"object\"\n      },\n      \"Tag\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      },\n      \"User\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"description\": \"User Status\",\n            \"enum\": [\n              \"1-registered\",\n              \"2-active\",\n              \"3-closed\"\n            ],\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    },\n    \"securitySchemes\": {\n      \"oauth2_accessCode\": {\n        \"flows\": {\n          \"authorizationCode\": {\n            \"authorizationUrl\": \"http://petstore.swagger.wordnik.com/api/oauth/requestToken\",\n            \"scopes\": {\n              \"read:pets\": \"Read your pets\",\n              \"write:pets\": \"Modify pets in your account\"\n            },\n            \"tokenUrl\": \"http://petstore.swagger.wordnik.com/api/oauth/token\"\n          }\n        },\n        \"type\": \"oauth2\"\n      },\n      \"oauth2_implicit\": {\n        \"flows\": {\n          \"implicit\": {\n            \"authorizationUrl\": \"http://petstore.swagger.wordnik.com/api/oauth/dialog\",\n            \"scopes\": {\n              \"read:pets\": \"Read your pets\",\n              \"write:pets\": \"Modify pets in your account\"\n            }\n          }\n        },\n        \"type\": \"oauth2\"\n      }\n    }\n  },\n  \"info\": {\n    \"contact\": {\n      \"email\": \"apiteam@wordnik.com\"\n    },\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger \\n    at \u003ca href=\\\"http://swagger.wordnik.com\\\"\u003ehttp://swagger.wordnik.com\u003c/a\u003e or on irc.freenode.net, #swagger.  For this sample,\\n    you can use the api key \\\"special-key\\\" to test the authorization filters\",\n    \"license\": {\n      \"name\": \"Apache 2.0\",\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n    },\n    \"termsOfService\": \"http://helloreverb.com/terms/\",\n    \"title\": \"Swagger Sample App\",\n    \"version\": \"1.0.0\"\n  },\n  \"openapi\": \"3.0.0\",\n  \"paths\": {\n    \"/pet\": {\n      \"put\": {\n        \"operationId\": \"updatePet\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/vnd.api+json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"description\": \"Pet object that needs to be updated in the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          },\n          \"405\": {\n            \"description\": \"Validation exception\"\n          }\n        },\n        \"summary\": \"Update an existing pet\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/findByStatus\": {\n      \"get\": {\n        \"description\": \"Multiple status values can be provided with comma seperated strings\",\n        \"operationId\": \"findPetsByStatus\",\n        \"parameters\": [\n          {\n            \"description\": \"Status values that need to be considered for filter\",\n            \"in\": \"query\",\n            \"name\": \"status\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"enum\": [\n                  \"available\",\n                  \"pending\",\n                  \"sold\"\n                ],\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid status value\"\n          }\n        },\n        \"summary\": \"Finds Pets by status\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/findByTags\": {\n      \"get\": {\n        \"deprecated\": true,\n        \"description\": \"Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.\",\n        \"operationId\": \"findPetsByTags\",\n        \"parameters\": [\n          {\n            \"description\": \"Tags to filter by\",\n            \"in\": \"query\",\n            \"name\": \"tags\",\n            \"required\": true,\n            \"schema\": {\n              \"items\": {\n                \"type\": \"string\"\n              },\n              \"type\": \"array\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"summary\": \"Finds Pets by tags\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/uploadFile\": {\n      \"post\": {\n        \"operationId\": \"uploadFile\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/octet-stream\": {\n              \"schema\": {\n                \"format\": \"binary\",\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"uploads a file\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/uploadImage\": {\n      \"post\": {\n        \"operationId\": \"uploadImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"image/jpeg\": {\n              \"schema\": {\n                \"format\": \"binary\",\n                \"type\": \"string\"\n              }\n            },\n            \"image/png\": {\n              \"schema\": {\n                \"format\": \"binary\",\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\",\n              \"read:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"uploads an image\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/pet/{petId}\": {\n      \"delete\": {\n        \"operationId\": \"deletePet\",\n        \"parameters\": [\n          {\n            \"description\": \"Pet id to delete\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid pet value\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Deletes a pet\",\n        \"tags\": [\n          \"pet\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"Returns a pet based on ID\",\n        \"operationId\": \"getPetById\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"default\": 1,\n              \"format\": \"int64\",\n              \"maximum\": 100000,\n              \"minimum\": 1,\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              },\n              \"text/plain\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Pet\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Pet not found\"\n          }\n        },\n        \"summary\": \"Find pet by ID\",\n        \"tags\": [\n          \"pet\"\n        ]\n      },\n      \"patch\": {\n        \"operationId\": \"partialUpdate\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            },\n            \"application/xml\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Pet\"\n              }\n            }\n          },\n          \"description\": \"Pet object that needs to be added to the store\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Pet\"\n                  },\n                  \"type\": \"array\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid tag value\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"partial updates to a pet\",\n        \"tags\": [\n          \"pet\"\n        ]\n      },\n      \"post\": {\n        \"operationId\": \"updatePetWithForm\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be updated\",\n            \"in\": \"path\",\n            \"name\": \"petId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/x-www-form-urlencoded\": {\n              \"schema\": {\n                \"properties\": {\n                  \"name\": {\n                    \"description\": \"Updated name of the pet\",\n                    \"type\": \"string\"\n                  },\n                  \"status\": {\n                    \"description\": \"Updated status of the pet\",\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"405\": {\n            \"description\": \"Invalid input\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Updates a pet in the store with form data\",\n        \"tags\": [\n          \"pet\"\n        ]\n      }\n    },\n    \"/store/order\": {\n      \"post\": {\n        \"operationId\": \"placeOrder\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Order\"\n              }\n            }\n          },\n          \"description\": \"order placed for purchasing the pet\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid order\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Place an order for a pet\",\n        \"tags\": [\n          \"store\"\n        ]\n      }\n    },\n    \"/store/order/{orderId}\": {\n      \"delete\": {\n        \"description\": \"For valid response try integer IDs with value \u003c 1000.  Anything above 1000 or nonintegers will generate API errors\",\n        \"operationId\": \"deleteOrder\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"orderId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"write:pets\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"write:pets\"\n            ]\n          }\n        ],\n        \"summary\": \"Delete purchase order by ID\",\n        \"tags\": [\n          \"store\"\n        ]\n      },\n      \"get\": {\n        \"description\": \"For valid response try integer IDs with value \u003c= 5. Anything above 5 or nonintegers will generate API errors\",\n        \"operationId\": \"getOrderById\",\n        \"parameters\": [\n          {\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"in\": \"path\",\n            \"name\": \"orderId\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Order\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid ID supplied\"\n          },\n          \"404\": {\n            \"description\": \"Order not found\"\n          }\n        },\n        \"summary\": \"Find purchase order by ID\",\n        \"tags\": [\n          \"store\"\n        ]\n      }\n    },\n    \"/user\": {\n      \"post\": {\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Created user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"test:anything\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"test:anything\"\n            ]\n          }\n        ],\n        \"summary\": \"Create user\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/createWithArray\": {\n      \"post\": {\n        \"operationId\": \"createUsersWithArrayInput\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"test:anything\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"test:anything\"\n            ]\n          }\n        ],\n        \"summary\": \"Creates list of users with given input array\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/createWithList\": {\n      \"post\": {\n        \"operationId\": \"createUsersWithListInput\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UserArray\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"test:anything\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"test:anything\"\n            ]\n          }\n        ],\n        \"summary\": \"Creates list of users with given list input\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/login\": {\n      \"get\": {\n        \"operationId\": \"loginUser\",\n        \"parameters\": [\n          {\n            \"description\": \"The user name for login\",\n            \"in\": \"query\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"description\": \"The password for login in clear text\",\n            \"in\": \"query\",\n            \"name\": \"password\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid username and password combination\"\n          }\n        },\n        \"summary\": \"Logs user into the system\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/logout\": {\n      \"get\": {\n        \"operationId\": \"logoutUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          }\n        },\n        \"summary\": \"Logs out current logged in user session\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    },\n    \"/user/{username}\": {\n      \"delete\": {\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"deleteUser\",\n        \"parameters\": [\n          {\n            \"description\": \"The name that needs to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"test:anything\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"test:anything\"\n            ]\n          }\n        ],\n        \"summary\": \"Delete user\",\n        \"tags\": [\n          \"user\"\n        ]\n      },\n      \"get\": {\n        \"operationId\": \"getUserByName\",\n        \"parameters\": [\n          {\n            \"description\": \"The name that needs to be fetched. Use user1 for testing.\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/User\"\n                }\n              }\n            },\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"summary\": \"Get user by user name\",\n        \"tags\": [\n          \"user\"\n        ]\n      },\n      \"put\": {\n        \"description\": \"This can only be done by the logged in user.\",\n        \"operationId\": \"updateUser\",\n        \"parameters\": [\n          {\n            \"description\": \"name that need to be deleted\",\n            \"in\": \"path\",\n            \"name\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/User\"\n              }\n            }\n          },\n          \"description\": \"Updated user object\",\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"No response was specified\"\n          },\n          \"400\": {\n            \"description\": \"Invalid username supplied\"\n          },\n          \"404\": {\n            \"description\": \"User not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"oauth2_accessCode\": [\n              \"test:anything\"\n            ]\n          },\n          {\n            \"oauth2_implicit\": [\n              \"test:anything\"\n            ]\n          }\n        ],\n        \"summary\": \"Updated user\",\n        \"tags\": [\n          \"user\"\n        ]\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://petstore.swagger.wordnik.com/api\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"description\": \"Operations about pets\",\n      \"name\": \"pet\"\n    },\n    {\n      \"description\": \"Operations about store\",\n      \"name\": \"store\"\n    },\n    {\n      \"description\": \"Operations about user\",\n      \"name\": \"user\"\n    }\n  ]\n}\n"
		}
	},
	"Error": "parse: parse spec: paths: /user/{username}: get: operation \"getUserByName\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/User\": parse schema: userStatus: parse enum values: parse value \"\\\"1-registered\\\"\": expected type \"integer\", got \"string\""
}