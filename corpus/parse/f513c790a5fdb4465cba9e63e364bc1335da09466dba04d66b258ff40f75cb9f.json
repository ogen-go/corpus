{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/ballerina-platform/openapi-connectors"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "openapi/hubspot.crm.deal/openapi.yaml",
			"byteSize": 34286,
			"content": "openapi: 3.0.1\ninfo:\n  x-ballerina-display:\n    label: HubSpot CRM  Deal\n    iconPath: \"icon.png\"\n  title: Deals\n  version: v3\n  description: This is a generated connector from [HubSpot](https://www.hubspot.com/) OpenAPI specification.\n    \n    This API provides access to collections of CRM objects, which return a map of property names to values. Each object type has its own set of default properties, which can be found by exploring the [CRM Object Properties API](https://developers.hubspot.com/docs/methods/crm-properties/crm-properties-overview).\n  x-ballerina-init-description: \u003e\n    The connector initialization requires setting the API credentials.\n  \n    Create a [HubSpot account](https://www.hubspot.com/) and obtain OAuth tokens following [this guide](https://developers.hubspot.com/docs/api/working-with-oauth4).\nservers:\n  - url: 'https://api.hubapi.com'\ntags:\n  - name: Basic\n  - name: Search\n  - name: Associations\n  - name: Batch\npaths:\n  /crm/v3/objects/deals:\n    get:\n      tags:\n        - Basic\n      summary: List\n      description: Read a page of deals. Control what is returned via the `properties` query param.\n      operationId: get Page\n      parameters:\n        - name: limit\n          in: query\n          description: The maximum number of results to display per page.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            default: 10\n        - name: after\n          in: query\n          description: The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n        - name: properties\n          in: query\n          description: 'A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: associations\n          in: query\n          description: 'A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: archived\n          in: query\n          description: Whether to return only results that have been archived.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: boolean\n            default: false\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectWithAssociationsArray'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n    post:\n      tags:\n        - Basic\n      summary: Create\n      description: 'Create a deal with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard deals is provided.'\n      operationId: create\n      parameters: []\n      requestBody:\n        description: Deal data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimplePublicObjectInput'\n        required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObject'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  /crm/v3/objects/deals/batch/archive:\n    post:\n      tags:\n        - Batch\n      summary: Archive a batch of deals by ID\n      description: 'Archive a list of deals given a collection of IDs. This method will return a `204 No Content` response on success regardless of the initial state of the object (e.g. active, already archived, non-existent).'\n      operationId: batch/archive\n      parameters: []\n      requestBody:\n        description: Record containing an array of deal IDs\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimplePublicObjectIdArray'\n        required: true\n      responses:\n        '204':\n          description: No content\n          content: {}\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  /crm/v3/objects/deals/batch/create:\n    post:\n      tags:\n        - Batch\n      summary: Create a batch of deals\n      description: Create a batch of deals. This follows the same rules as creating an individual object.\n      operationId: batch/create\n      parameters: []\n      requestBody:\n        description: Record with an array of deal data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimplePublicObjectInputArray'\n        required: true\n      responses:\n        '201':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectBatch'\n        '207':\n          description: multiple statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectBatchWithErrors'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  /crm/v3/objects/deals/batch/read:\n    post:\n      tags:\n        - Batch\n      summary: 'Read a batch of deals by internal ID, or unique property values'\n      description: Read a list of deals given a collection of IDs. Use the `properties` request body property to control which properties are returned.\n      operationId: batch/read\n      parameters:\n        - name: archived\n          in: query\n          description: Whether to return only results that have been archived.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: boolean\n            default: false\n      requestBody:\n        description: Object which contains array of internal IDs of deals\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimplePublicObjectIdReadArray'\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectBatch'\n        '207':\n          description: multiple statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectBatchWithErrors'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  /crm/v3/objects/deals/batch/update:\n    post:\n      tags:\n        - Batch\n      summary: Update a batch of deals\n      description: Perform a partial upate on a batch of deals. This follows the same rules as performing partial updates on an individual object.\n      operationId: batch/update\n      parameters: []\n      requestBody:\n        description: Record with array of updated deal data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimplePublicObjectArray'\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectBatch'\n        '207':\n          description: multiple statuses\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectBatchWithErrors'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  /crm/v3/objects/deals/search:\n    post:\n      tags:\n        - Search\n      summary: 'Filter, Sort, and Search CRM Objects'\n      description: 'Filter, Sort, and Search CRM Objects'\n      operationId: do Search\n      parameters: []\n      requestBody:\n        description: Deal search request\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicObjectSearchRequest'\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectWithForwardPaging'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n      x-hubspot-rate-limit-exemptions:\n        - ten-secondly\n  '/crm/v3/objects/deals/{dealId}':\n    get:\n      tags:\n        - Basic\n      summary: Read\n      description: 'Read an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.'\n      operationId: 'get Object By Id'\n      parameters:\n        - name: dealId\n          in: path\n          description: Deal ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: properties\n          in: query\n          description: 'A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: associations\n          in: query\n          description: 'A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.'\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n        - name: archived\n          in: query\n          description: Whether to return only results that have been archived.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: boolean\n            default: false\n        - name: idProperty\n          in: query\n          description: The name of a property whose values are unique for this object type\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectWithAssociations'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n    delete:\n      tags:\n        - Basic\n      summary: Archive\n      description: 'Move an Object identified by `{dealId}` to the recycling bin.'\n      operationId: 'archive'\n      parameters:\n        - name: dealId\n          in: path\n          description: Deal ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No content\n          content: {}\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n    patch:\n      tags:\n        - Basic\n      summary: Update\n      description: 'Perform a partial update of an Object identified by `{dealId}`. `{dealId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.'\n      operationId: 'update'\n      parameters:\n        - name: dealId\n          in: path\n          description: Deal ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: idProperty\n          in: query\n          description: The name of a property whose values are unique for this object type\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n      requestBody:\n        description: Attributes to update in deal\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SimplePublicObjectInput'\n        required: true\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObject'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  '/crm/v3/objects/deals/{dealId}/associations/{toObjectType}':\n    get:\n      tags:\n        - Associations\n      summary: List associations of a deal by type\n      operationId: 'associations get All'\n      parameters:\n        - name: dealId\n          in: path\n          description: Deal ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: toObjectType\n          in: path\n          description: Object type to associate with\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: after\n          in: query\n          description: The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: string\n        - name: limit\n          in: query\n          description: The maximum number of results to display per page.\n          required: false\n          style: form\n          explode: true\n          schema:\n            type: integer\n            format: int32\n            default: 500\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociatedIdArrayWithForwardPaging'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n  '/crm/v3/objects/deals/{dealId}/associations/{toObjectType}/{toObjectId}/{associationType}':\n    put:\n      tags:\n        - Associations\n      summary: Associate a deal with another object\n      operationId: 'associations create'\n      parameters:\n        - name: dealId\n          in: path\n          description: Deal ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: toObjectType\n          in: path\n          description: Object type to associate with\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: toObjectId\n          in: path\n          description: Object ID to associate\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: associationType\n          in: path\n          description: Type of the association\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SimplePublicObjectWithAssociations'\n              example:\n                associations:\n                  contacts:\n                    results:\n                      - id: '354229'\n                        type: contact_to_company\n                createdAt: '2019-10-30T03:30:17.883Z'\n                archived: false\n                id: '574148'\n                properties: {}\n                updatedAt: '2019-12-07T16:50:06.678Z'\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\n    delete:\n      tags:\n        - Associations\n      summary: Remove an association between two deals\n      operationId: 'associations archive'\n      parameters:\n        - name: dealId\n          in: path\n          description: Deal ID\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: toObjectType\n          in: path\n          description: Object type to associate with\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: toObjectId\n          in: path\n          description: Object ID to associate\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n        - name: associationType\n          in: path\n          description: Type of the association\n          required: true\n          style: simple\n          explode: false\n          schema:\n            type: string\n      responses:\n        '204':\n          description: No content\n          content: {}\n        default:\n          $ref: '#/components/responses/Error'\n      security:\n        - hapikey: []\n        - oauth2:\n            - contacts\ncomponents:\n  schemas:\n    AssociatedId:\n      required:\n        - id\n        - type\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n    SimplePublicObjectArray:\n      required:\n        - inputs\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObjectBatchInput'\n    SimplePublicObjectIdArray:\n      required:\n        - inputs\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObjectId'\n    SimplePublicObjectInputArray:\n      required:\n        - inputs\n      type: object\n      properties:\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObjectInput'\n    SimplePublicObjectIdReadArray:\n      required:\n        - inputs\n        - properties\n      type: object\n      properties:\n        properties:\n          type: array\n          items:\n            type: string\n        idProperty:\n          type: string\n        inputs:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObjectId'\n    SimplePublicObjectBatch:\n      required:\n        - completedAt\n        - results\n        - startedAt\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n          # enum:\n          #   - PENDING\n          #   - PROCESSING\n          #   - CANCELED\n          #   - COMPLETE\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObject'\n        requestedAt:\n          type: string\n          format: date-time\n        startedAt:\n          type: string\n          format: date-time\n        completedAt:\n          type: string\n          format: date-time\n        links:\n          type: object\n          additionalProperties:\n            type: string\n    SimplePublicObjectBatchWithErrors:\n      required:\n        - completedAt\n        - results\n        - startedAt\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n          # enum:\n          #   - PENDING\n          #   - PROCESSING\n          #   - CANCELED\n          #   - COMPLETE\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObject'\n        numErrors:\n          type: integer\n          format: int32\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/StandardError'\n        requestedAt:\n          type: string\n          format: date-time\n        startedAt:\n          type: string\n          format: date-time\n        completedAt:\n          type: string\n          format: date-time\n        links:\n          type: object\n          additionalProperties:\n            type: string\n    AssociatedIdArray:\n      required:\n        - results\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssociatedId'\n        paging:\n          $ref: '#/components/schemas/Paging'\n    AssociatedIdArrayWithForwardPaging:\n      required:\n        - results\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/AssociatedId'\n        paging:\n          $ref: '#/components/schemas/ForwardPaging'\n    SimplePublicObjectWithAssociationsArray:\n      required:\n        - results\n      type: object\n      properties:\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObjectWithAssociations'\n        paging:\n          $ref: '#/components/schemas/ForwardPaging'\n    SimplePublicObjectWithForwardPaging:\n      required:\n        - results\n        - total\n      type: object\n      properties:\n        total:\n          type: integer\n          format: int32\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SimplePublicObject'\n        paging:\n          $ref: '#/components/schemas/ForwardPaging'\n    Error:\n      required:\n        - category\n        - correlationId\n        - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: A human readable message describing the error along with remediation steps where appropriate\n          example: An error occurred\n        correlationId:\n          type: string\n          description: A unique identifier for the request. Include this value with any error reports or support tickets\n          format: uuid\n          example: aeb5f871-7f07-4993-9211-075dc63e7cbf\n        category:\n          type: string\n          description: The error category\n        subCategory:\n          type: string\n          description: A specific category that contains more specific detail about the error\n        errors:\n          type: array\n          description: further information about the error\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n        context:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: Context about the error condition\n          example:\n            invalidPropertyName:\n              - propertyValue\n            missingScopes:\n              - scope1\n              - scope2\n        links:\n          type: object\n          additionalProperties:\n            type: string\n          description: A map of link names to associated URIs containing documentation about the error or recommended remediation steps\n      example:\n        message: Invalid input (details will vary based on the error)\n        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf\n        category: VALIDATION_ERROR\n        links:\n          knowledge-base: 'https://www.hubspot.com/products/service/knowledge-base'\n    ErrorCategory:\n      required:\n        - httpStatus\n        - name\n      type: object\n      properties:\n        httpStatus:\n          type: string\n          # enum:\n          #   - CONTINUE\n          #   - SWITCHING_PROTOCOLS\n          #   - PROCESSING\n          #   - OK\n          #   - CREATED\n          #   - ACCEPTED\n          #   - NON_AUTHORITATIVE_INFORMATION\n          #   - NO_CONTENT\n          #   - RESET_CONTENT\n          #   - PARTIAL_CONTENT\n          #   - MULTI_STATUS\n          #   - ALREADY_REPORTED\n          #   - IM_USED\n          #   - MULTIPLE_CHOICES\n          #   - MOVED_PERMANENTLY\n          #   - FOUND\n          #   - SEE_OTHER\n          #   - NOT_MODIFIED\n          #   - USE_PROXY\n          #   - TEMPORARY_REDIRECT\n          #   - PERMANENT_REDIRECT\n          #   - BAD_REQUEST\n          #   - UNAUTHORIZED\n          #   - PAYMENT_REQUIRED\n          #   - FORBIDDEN\n          #   - NOT_FOUND\n          #   - METHOD_NOT_ALLOWED\n          #   - NOT_ACCEPTABLE\n          #   - PROXY_AUTHENTICATION_REQUIRED\n          #   - REQUEST_TIMEOUT\n          #   - CONFLICT\n          #   - GONE\n          #   - LENGTH_REQUIRED\n          #   - PRECONDITION_FAILED\n          #   - REQUEST_ENTITY_TOO_LARGE\n          #   - REQUEST_URI_TOO_LONG\n          #   - UNSUPPORTED_MEDIA_TYPE\n          #   - REQUESTED_RANGE_NOT_SATISFIABLE\n          #   - EXPECTATION_FAILED\n          #   - IM_A_TEAPOT\n          #   - MISDIRECTED_REQUEST\n          #   - UNPROCESSABLE_ENTITY\n          #   - LOCKED\n          #   - FAILED_DEPENDENCY\n          #   - UPGRADE_REQUIRED\n          #   - PRECONDITION_REQUIRED\n          #   - TOO_MANY_REQUESTS\n          #   - REQUEST_HEADERS_FIELDS_TOO_LARGE\n          #   - INTERNAL_STALE_SERVICE_DISCOVERY\n          #   - UNAVAILABLE_FOR_LEGAL_REASONS\n          #   - INTERNAL_SERVER_ERROR\n          #   - NOT_IMPLEMENTED\n          #   - BAD_GATEWAY\n          #   - SERVICE_UNAVAILABLE\n          #   - GATEWAY_TIMEOUT\n          #   - HTTP_VERSION_NOT_SUPPORTED\n          #   - VARIANT_ALSO_NEGOTIATES\n          #   - INSUFFICIENT_STORAGE\n          #   - LOOP_DETECTED\n          #   - NOT_EXTENDED\n          #   - NETWORK_AUTHENTICATION_REQUIRED\n        name:\n          type: string\n    ErrorDetail:\n      required:\n        - message\n      type: object\n      properties:\n        message:\n          type: string\n          description: A human readable message describing the error along with remediation steps where appropriate\n        in:\n          type: string\n          description: The name of the field or parameter in which the error was found.\n        code:\n          type: string\n          description: The status code associated with the error detail\n        subCategory:\n          type: string\n          description: A specific category that contains more specific detail about the error\n        context:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n          description: Context about the error condition\n          example:\n            missingScopes:\n              - scope1\n              - scope2\n    Filter:\n      required:\n        - operator\n        - propertyName\n      type: object\n      properties:\n        value:\n          type: string\n        propertyName:\n          type: string\n        operator:\n          type: string\n          # enum:\n          #   - EQ\n          #   - NEQ\n          #   - LT\n          #   - LTE\n          #   - GT\n          #   - GTE\n          #   - HAS_PROPERTY\n          #   - NOT_HAS_PROPERTY\n          #   - CONTAINS_TOKEN\n          #   - NOT_CONTAINS_TOKEN\n    FilterGroup:\n      required:\n        - filters\n      type: object\n      properties:\n        filters:\n          type: array\n          items:\n            $ref: '#/components/schemas/Filter'\n    ForwardPaging:\n      type: object\n      properties:\n        next:\n          $ref: '#/components/schemas/NextPage'\n    NextPage:\n      required:\n        - after\n      type: object\n      properties:\n        after:\n          type: string\n        link:\n          type: string\n      example:\n        link: '?after=NTI1Cg%3D%3D'\n        after: NTI1Cg%3D%3D\n    Paging:\n      type: object\n      properties:\n        next:\n          $ref: '#/components/schemas/NextPage'\n        prev:\n          $ref: '#/components/schemas/PreviousPage'\n    PreviousPage:\n      required:\n        - before\n      type: object\n      properties:\n        before:\n          type: string\n        link:\n          type: string\n    PublicObjectSearchRequest:\n      required:\n        - after\n        - filterGroups\n        - limit\n        - properties\n        - sorts\n      type: object\n      properties:\n        filterGroups:\n          type: array\n          items:\n            $ref: '#/components/schemas/FilterGroup'\n        sorts:\n          type: array\n          items:\n            type: string\n        query:\n          type: string\n        properties:\n          type: array\n          items:\n            type: string\n        limit:\n          type: integer\n          format: int32\n        after:\n          type: integer\n          format: int32\n    SimplePublicObject:\n      required:\n        - createdAt\n        - id\n        - properties\n        - updatedAt\n      type: object\n      properties:\n        id:\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        archived:\n          type: boolean\n        archivedAt:\n          type: string\n          format: date-time\n      example:\n        createdAt: '2019-10-30T03:30:17.883Z'\n        archived: false\n        id: '512'\n        properties:\n          amount: '1500.00'\n          closedate: '2019-12-07T16:50:06.678Z'\n          createdate: '2019-10-30T03:30:17.883Z'\n          dealname: Custom data integrations\n          dealstage: presentation scheduled\n          hs_lastmodifieddate: '2019-12-07T16:50:06.678Z'\n          hubspot_owner_id: '910901'\n          pipeline: default\n        updatedAt: '2019-12-07T16:50:06.678Z'\n    SimplePublicObjectBatchInput:\n      required:\n        - id\n        - properties\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        id:\n          type: string\n      example:\n        id: '1'\n        properties:\n          amount: '1500.00'\n          closedate: '2019-12-07T16:50:06.678Z'\n          dealname: Custom data integrations\n          dealstage: presentation scheduled\n          hubspot_owner_id: '910901'\n          pipeline: default\n    SimplePublicObjectId:\n      required:\n        - id\n      type: object\n      properties:\n        id:\n          type: string\n    SimplePublicObjectInput:\n      required:\n        - properties\n      type: object\n      properties:\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n      example:\n        properties:\n          amount: '1500.00'\n          closedate: '2019-12-07T16:50:06.678Z'\n          dealname: Custom data integrations\n          dealstage: presentation scheduled\n          hubspot_owner_id: '910901'\n          pipeline: default\n    SimplePublicObjectWithAssociations:\n      required:\n        - createdAt\n        - id\n        - properties\n        - updatedAt\n      type: object\n      properties:\n        id:\n          type: string\n        properties:\n          type: object\n          additionalProperties:\n            type: string\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n        archived:\n          type: boolean\n        archivedAt:\n          type: string\n          format: date-time\n        associations:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/AssociatedIdArray'\n      example:\n        properties:\n          amount: '1500.00'\n          closedate: '2019-12-07T16:50:06.678Z'\n          createdate: '2019-10-30T03:30:17.883Z'\n          dealname: Custom data integrations\n          dealstage: presentation scheduled\n          hs_lastmodifieddate: '2019-12-07T16:50:06.678Z'\n          hubspot_owner_id: '910901'\n          pipeline: default\n    StandardError:\n      required:\n        - category\n        - context\n        - errors\n        - links\n        - message\n        - status\n      type: object\n      properties:\n        status:\n          type: string\n        id:\n          type: string\n        category:\n          $ref: '#/components/schemas/ErrorCategory'\n        subCategory:\n          type: object\n          properties: {}\n        message:\n          type: string\n        errors:\n          type: array\n          items:\n            $ref: '#/components/schemas/ErrorDetail'\n        context:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        links:\n          type: object\n          additionalProperties:\n            type: string\n  responses:\n    Error:\n      description: An error occurred.\n      content:\n        '*/*':\n          schema:\n            $ref: '#/components/schemas/Error'\n  securitySchemes:\n    # hapikey:\n    #   type: apiKey\n    #   name: hapikey\n    #   in: query\n    oauth2:\n      type: oauth2\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://app.hubspot.com/oauth/authorize'\n          tokenUrl: 'https://api.hubapi.com/oauth/v1/token'\n          scopes:\n            contacts: Read from and write to my Contacts\nx-hubspot-available-client-libraries:\n  - PHP\n  - Node\n  - Python\n  - Ruby\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /crm/v3/objects/deals/batch/archive: post: operation \"batch/archive\": security: unknown security schema \"hapikey\""
}