{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "box.com-2.0-openapi.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/box.com-2.0-openapi.yaml",
			"byteSize": 459042,
			"content": "openapi: 3.0.2\nservers:\n  - description: Box Platform API server\n    url: https://api.box.com/2.0\ninfo:\n  contact:\n    email: devrel@box.com\n    name: Box Developer Relations\n    url: https://developer.box.com\n    x-twitter: BoxHQ\n  description: The Box Content API gives you access to secure content management and\n    content experience features for use in your own app. It strives to be\n    RESTful and is organized around the main resources you’re familiar with from\n    the Box web interface.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0\n  termsOfService: https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9\n  title: Box Platform 2.0 APIs\n  version: \"2.0\"\n  x-apisguru-categories:\n    - cloud\n  x-logo:\n    url: https://twitter.com/BoxHQ/profile_image?size=original\n  x-origin:\n    - converter:\n        url: https://github.com/lucybot/api-spec-converter\n        version: 2.7.31\n      format: openapi\n      url: https://opensource.box.com/box-openapi/openapi.json\n      version: \"3.0\"\n  x-providerName: box.com\nsecurity:\n  - OAuth2Security: []\ntags:\n  - name: Folders\n    x-box-reference-category: folders\n  - name: Files\n    x-box-reference-category: files\n  - name: Authorization\n    x-box-reference-category: authorization\n  - name: File Uploads\n    x-box-reference-category: file_uploads\n  - name: Chunked Uploads\n    x-box-reference-category: chunked_uploads\n  - name: File Versions\n    x-box-reference-category: file_versions\n  - name: File \u0026 Folder Metadata\n    x-box-reference-category: metadata\n  - name: Metadata Templates\n    x-box-reference-category: metadata_templates\n  - name: Metadata Cascade (Beta)\n    x-box-reference-category: metadata_cascade_policies\n  - name: Collaborations\n    x-box-reference-category: collaborations\n  - name: Collaboration Whitelist\n    x-box-reference-category: collaboration_whitelist\n  - name: Collections\n    x-box-reference-category: collections\n  - name: Comments\n    x-box-reference-category: comments\n  - name: Device Pins\n    x-box-reference-category: device_pins\n  - name: Events\n    x-box-reference-category: events\n  - name: Groups\n    x-box-reference-category: groups\n  - name: Legal Hold Policies\n    x-box-reference-category: legal_hold_policies\n  - name: Multi Zones\n    x-box-reference-category: multizones\n  - name: Recent Items\n    x-box-reference-category: recent_items\n  - name: Retention Policies\n    x-box-reference-category: retention_policies\n  - name: Search\n    x-box-reference-category: search\n  - name: Shared Links\n    x-box-reference-category: shared_links\n  - name: Skills\n    x-box-reference-category: skills\n  - name: Tasks\n    x-box-reference-category: tasks\n  - name: Terms of Service\n    x-box-reference-category: terms_of_services\n  - name: Trash\n    x-box-reference-category: trash\n  - name: Users\n    x-box-reference-category: users\n  - name: Watermarks\n    x-box-reference-category: watermarks\n  - name: Web Links\n    x-box-reference-category: web_links\n  - name: Webhooks\n    x-box-reference-category: webhooks\npaths:\n  /authorize:\n    get:\n      description: |-\n        Authorize a user by sending them through the [Box](https://box.com)\n        website and request their permission to act on their behalf.\n\n        This is the first step when authenticating a user using\n        OAuth 2.0. To request a user's authorization to use the Box APIs\n        on their behalf you will need to send a user to the URL with this\n        format.\n      operationId: get_authorize\n      parameters:\n        - description: |-\n            The string value `\"code\"` is the only current value we support\n            for the OAuth2 grant type.\n          example: 5idyGSFuf54zrvKm\n          in: query\n          name: response_type\n          required: true\n          schema:\n            enum:\n              - code\n            format: token\n            type: string\n        - description: \u003e-\n            The Client ID of the application that is requesting to authenticate\n\n            the user. To get the Client ID for your application, log in to your\n\n            Box developer console and click the **Edit Application** link for\n\n            the application you're working with. In the OAuth2 Parameters section\n\n            of the configuration page, find the item labeled **client_id**. The\n\n            text of that item is your application's Client ID.\n          example: ly1nj6n11vionaie65emwzk575hnnmrk\n          in: query\n          name: client_id\n          required: true\n          schema:\n            type: string\n        - description: \u003e-\n            The URL to which Box redirects the browser after the user has\n            granted\n\n            or rejected the application permission. This URL must match the\n\n            redirect URL in the configuration of your application. It must be a\n\n            valid HTTPS URL and it needs to be able to handle the redirection to\n\n            complete the next step in the OAuth2 flow.\n          example: http://example.com/auth/callback\n          in: query\n          name: redirect_uri\n          required: true\n          schema:\n            format: url\n            type: string\n        - description: |-\n            A custom string of your choice. Box will pass the same string to\n            the redirect URL when authentication is complete. This parameter\n            can be used to identify a user on redirect, as well as protect\n            against hijacked sessions and other attacks.\n          example: my_state\n          in: query\n          name: state\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            A comma-separated list of application scopes you'd like to\n\n            authenticate the user for. This defaults to all the scopes configured\n\n            for the application in its configuration page.\n          example: admin_readwrite\n          in: query\n          name: scope\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            text/html:\n              schema:\n                format: html\n                type: string\n          description: Does not return any data, but rather should be used in the browser.\n      security: []\n      servers:\n        - description: Server for client-side authentication\n          url: https://account.box.com/api/oauth2\n      summary: Authorize a user\n      tags:\n        - Authorization\n      x-box-reference-category: authorization\n  /collaboration_whitelist_entries:\n    get:\n      description: |-\n        Returns the list of whitelist entries which specify what domains can\n        collaborate with the current enterprise.\n      operationId: get_collaboration_whitelist_entries\n      parameters:\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaborationWhitelistEntries\"\n          description: Returns a collection of collaboration whitelist entries.\n      summary: List whitelist entries\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n    post:\n      description: |-\n        Creates a collaboration whitelist entry, specifying a domain\n        and direction to allow collaboration for.\n      operationId: post_collaboration_whitelist_entries\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                direction:\n                  description: The direction in which to allow collaborations.\n                  enum:\n                    - inbound\n                    - outbound\n                    - both\n                  example: inboud\n                  type: string\n                domain:\n                  description: The domain to add to the whitelist.\n                  example: example.com\n                  type: string\n              required:\n                - domain\n                - direction\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaborationWhitelistEntry\"\n          description: Returns a new collaboration whitelist entry.\n      summary: Create whitelist entry\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n  \"/collaboration_whitelist_entries/{collaboration_whitelist_entry_id}\":\n    delete:\n      description: Deletes a specific collaboration whitelist entry.\n      operationId: delete_collaboration_whitelist_entries_id\n      parameters:\n        - description: The ID of the collaboration whitelist item\n          example: \"213123\"\n          in: path\n          name: collaboration_whitelist_entry_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            A blank response is returned if the entry was\n            successfully deleted.\n      summary: Delete whitelist entry\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n    get:\n      description: Returns a specific collaboration whitelist entry.\n      operationId: get_collaboration_whitelist_entries_id\n      parameters:\n        - description: The ID of the collaboration whitelist item\n          example: \"213123\"\n          in: path\n          name: collaboration_whitelist_entry_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaborationWhitelistEntry\"\n          description: Returns a collaboration whitelist entry.\n      summary: Get whitelist entry\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n  /collaboration_whitelist_exempt_targets:\n    get:\n      description: |-\n        Returns a list of users who have been exempt from the collaboration\n        whitelist.\n      operationId: get_collaboration_whitelist_exempt_targets\n      parameters:\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaborationWhitelistExemptTargets\"\n          description: Returns a collection of collaboration whitelist exemptions.\n      summary: List whitelist excemptions\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n    post:\n      description: |-\n        Creates a collaboration whitelist entry exemption, specifying a user\n        that is exempted from the whitelist.\n      operationId: post_collaboration_whitelist_exempt_targets\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                user:\n                  description: The user to exempt.\n                  properties:\n                    id:\n                      description: The ID of the user to exempt.\n                      example: \"23522323\"\n                      type: string\n                  required:\n                    - id\n                  type: object\n              required:\n                - user\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaborationWhitelistExemptTarget\"\n          description: Returns a new collaboration whitelist entry.\n      summary: Create whitelist exemption\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n  \"/collaboration_whitelist_exempt_targets/{collaboration_whitelist_exempt_target_id}\":\n    delete:\n      description: Deletes a specific collaboration whitelist exemption.\n      operationId: delete_collaboration_whitelist_exempt_targets_id\n      parameters:\n        - description: The ID of the collaboration whitelist exemption\n          example: \"984923\"\n          in: path\n          name: collaboration_whitelist_exempt_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            A blank response is returned if the exemption was\n            successfully deleted.\n      summary: Remove whitelist exemption\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n    get:\n      description: |-\n        Returns a users who has been exempt from the collaboration\n        whitelist.\n      operationId: get_collaboration_whitelist_exempt_targets_id\n      parameters:\n        - description: The ID of the collaboration whitelist exemption\n          example: \"984923\"\n          in: path\n          name: collaboration_whitelist_exempt_target_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CollaborationWhitelistExemptTarget\"\n          description: Returns a collaboration whitelist exemption.\n      summary: Get whitelist excemption\n      tags:\n        - Collaboration Whitelist\n      x-box-reference-category: collaboration_whitelist\n  /collaborations:\n    get:\n      description: Retrieves all pending collaboration invites for this user.\n      operationId: get_collaborations\n      parameters:\n        - description: The status of the collaborations to retrieve\n          example: pending\n          in: query\n          name: status\n          required: true\n          schema:\n            enum:\n              - pending\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborations\"\n          description: |-\n            Returns a collection of pending collaboration objects.\n\n            If the user has no pending collaborations, the collection\n            will be empty.\n      summary: List pending collaborations\n      tags:\n        - Collaborations\n      x-box-reference-category: collaborations\n    post:\n      description: |-\n        Adds a collaboration for a single user or a single group to a file\n        or folder.\n\n        Collaborations can be created using email address, user IDs, or a\n        group IDs.\n\n        If a collaboration is being created with a group, access to\n        this endpoint is dependent on the group's ability to be invited.\n      operationId: post_collaborations\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Determines if users should receive email notification\n            for the action performed.\n          example: true\n          in: query\n          name: notify\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                accessible_by:\n                  description: The user or group to give access to the item.\n                  properties:\n                    id:\n                      description: |-\n                        The ID of the user or group.\n\n                        Alternatively, use `login` to specify a user by email\n                        address.\n                      example: \"23522323\"\n                      type: string\n                    login:\n                      description: \u003e-\n                        The email address of the user to grant access to the\n                        item.\n\n\n                        Alternatively, use `id` to specify a user by user ID.\n                      example: john@example.com\n                      type: string\n                    type:\n                      description: The type of collaborator to invite.\n                      enum:\n                        - user\n                        - group\n                      example: user\n                      type: string\n                  required:\n                    - type\n                  type: object\n                can_view_path:\n                  description: \u003e-\n                    Determines if the invited users can see the entire parent\n                    path to\n\n                    the associated folder. The user will not gain privileges in any\n\n                    parent folder and therefore can not see content the user is not\n\n                    collaborated on.\n                  example: true\n                  type: boolean\n                item:\n                  description: The item to attach the comment to.\n                  properties:\n                    id:\n                      description: The ID of the item that will be granted access to\n                      example: \"11446498\"\n                      type: string\n                    type:\n                      description: |-\n                        The type of the item that this collaboration will be\n                        granted access to\n                      enum:\n                        - file\n                        - folder\n                      example: file\n                      type: string\n                  required:\n                    - id\n                    - type\n                  type: object\n                role:\n                  description: The level of access granted.\n                  enum:\n                    - editor\n                    - viewer\n                    - previewer\n                    - uploader\n                    - previewer uploader\n                    - viewer uploader\n                    - co-owner\n                  example: editor\n                  type: string\n              required:\n                - item\n                - accessible_by\n                - role\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaboration\"\n          description: Returns a new collaboration object.\n      summary: Create collaboration\n      tags:\n        - Collaborations\n      x-box-reference-category: collaborations\n  \"/collaborations/{collaboration_id}\":\n    delete:\n      description: Deletes a single collaboration.\n      operationId: delete_collaborations_id\n      parameters:\n        - description: The ID of the collaboration\n          example: \"1234\"\n          in: path\n          name: collaboration_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            A blank response is returned if the collaboration was\n            successfully deleted.\n      summary: Delete collaboration\n      tags:\n        - Collaborations\n      x-box-reference-category: collaborations\n    get:\n      description: Retrieves a single collaboration.\n      operationId: get_collaborations_id\n      parameters:\n        - description: The ID of the collaboration\n          example: \"1234\"\n          in: path\n          name: collaboration_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaboration\"\n          description: Returns a collaboration object.\n      summary: Get collaboration\n      tags:\n        - Collaborations\n      x-box-reference-category: collaborations\n    put:\n      description: |-\n        Updates a collaboration.\n\n        Can be used to change the owner of an item, or to\n        accept collaboration invites.\n      operationId: put_collaborations_id\n      parameters:\n        - description: The ID of the collaboration\n          example: \"1234\"\n          in: path\n          name: collaboration_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                can_view_path:\n                  description: \u003e-\n                    Determines if the invited users can see the entire parent\n                    path to\n\n                    the associated folder. The user will not gain privileges in any\n\n                    parent folder and therefore can not see content the user is not\n\n                    collaborated on.\n                  example: true\n                  type: boolean\n                role:\n                  description: The level of access granted.\n                  enum:\n                    - editor\n                    - viewer\n                    - previewer\n                    - uploader\n                    - previewer uploader\n                    - viewer uploader\n                    - co-owner\n                  example: editor\n                  type: string\n                status:\n                  description: |-\n                    Set the status of a `pending` collaboration invitation,\n                    effectively accepting, or rejecting the invite.\n                  enum:\n                    - pending\n                    - accepted\n                    - rejected\n                  example: accepted\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaboration\"\n          description: Returns an updated collaboration object unless the owner has changed.\n        \"204\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaboration\"\n          description: |-\n            If the role is changed to `owner`, the collaboration is deleted\n            and a new collaboration is created. The previous `owner` of\n            the old collaboration will be a `co-owner` on the new collaboration.\n      summary: Update collaboration\n      tags:\n        - Collaborations\n      x-box-reference-category: collaborations\n  /collections:\n    get:\n      description: |-\n        Retrieves all collections for a given user.\n\n        Currently, only the `favorites` collection\n        is supported.\n      operationId: get_collections\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collections\"\n          description: Returns all collections for the given user\n      summary: List all collections\n      tags:\n        - Collections\n      x-box-reference-category: collections\n  \"/collections/{collection_id}/items\":\n    get:\n      description: |-\n        Retrieves the files and/or folders contained within\n        this collection.\n      operationId: get_collections_id_items\n      parameters:\n        - description: The ID of the collection.\n          example: \"926489\"\n          in: path\n          name: collection_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Returns an array of items in the collection.\n      summary: List collection items\n      tags:\n        - Collections\n      x-box-reference-category: collections\n  /comments:\n    post:\n      description: |-\n        Adds a comment comment by the user to a specific file, or\n        as a reply to an other comment.\n      operationId: post_comments\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                item:\n                  description: The item to attach the comment to.\n                  properties:\n                    id:\n                      description: The ID of the item\n                      example: \"11446498\"\n                      type: string\n                    type:\n                      description: The type of the item that this comment will be placed on.\n                      enum:\n                        - file\n                        - comment\n                      example: file\n                      type: string\n                  required:\n                    - id\n                    - type\n                  type: object\n                message:\n                  description: |-\n                    The text of the comment.\n\n                    To mention a user, user the `tagged_message`\n                    parameter instead.\n                  example: Review completed!\n                  type: string\n                tagged_message:\n                  description: |-\n                    The text of the comment, including `@[user_id:name]`\n                    somewhere in the message to mention another user, which\n                    will send them an email notification, letting them know\n                    they have been mentioned.\n\n                    The `user_id` is the target user's ID, where the `name`\n                    can be any custom phrase. In the Box UI this name will\n                    link to the user's profile.\n\n                    If you are not mentioning another user, use`message`\n                    instead.\n                  example: \"@[1234:John] Review completed!\"\n                  type: string\n              required:\n                - message\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n          description: \u003e-\n            Returns the newly created comment object.\n\n\n            [Some fields are optional](#comment) and need to be explicitly\n\n            requested using the [fields](#post-comments--request--fields) parameter.\n      summary: Create comment\n      tags:\n        - Comments\n      x-box-reference-category: comments\n  \"/comments/{comment_id}\":\n    delete:\n      description: Permanently deletes a comment.\n      operationId: delete_comments_id\n      parameters:\n        - description: The ID of the comment.\n          example: \"12345\"\n          in: path\n          name: comment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returns an empty response when the comment has been deleted.\n      summary: Delete comment\n      tags:\n        - Comments\n      x-box-reference-category: comments\n    get:\n      description: |-\n        Retrieves the message and metadata for a specific comment, as well\n        as information on the user who created the comment.\n      operationId: get_comments_id\n      parameters:\n        - description: The ID of the comment.\n          example: \"12345\"\n          in: path\n          name: comment_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n          description: Returns a full comment object.\n      summary: Get comment\n      tags:\n        - Comments\n      x-box-reference-category: comments\n    put:\n      description: Update the message of a comment.\n      operationId: put_comments_id\n      parameters:\n        - description: The ID of the comment.\n          example: \"12345\"\n          in: path\n          name: comment_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  description: The text of the comment to update\n                  example: Review completed!\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n          description: Returns the updated comment object.\n      summary: Update comment\n      tags:\n        - Comments\n      x-box-reference-category: comments\n  \"/device_pinners/{device_pinner_id}\":\n    delete:\n      description: Deletes an individual device pin.\n      operationId: delete_device_pinners_id\n      parameters:\n        - description: The ID of the device pin\n          example: \"2324234\"\n          in: path\n          name: device_pinner_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Returns an empty response when the pin has been deleted.\n      summary: Delete device pin\n      tags:\n        - Device Pins\n      x-box-reference-category: device_pins\n    get:\n      description: Retrieves information about an individual device pin.\n      operationId: get_device_pinners_id\n      parameters:\n        - description: The ID of the device pin\n          example: \"2324234\"\n          in: path\n          name: device_pinner_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DevicePinner\"\n          description: Returns information about a single device pin.\n      summary: Get device pin\n      tags:\n        - Device Pins\n      x-box-reference-category: device_pins\n  \"/enterprises/{enterprise_id}/device_pinners\":\n    get:\n      description: |-\n        Retrieves all the device pins within an enterprise.\n\n        The user must have admin privileges, and the application\n        needs the `manage enterprise` scope to make this call.\n      operationId: get_enterprises_id_device_pinners\n      parameters:\n        - description: The ID of the enterprise\n          example: \"3442311\"\n          in: path\n          name: enterprise_id\n          required: true\n          schema:\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The sorting direction\n          example: ASC\n          in: query\n          name: direction\n          required: false\n          schema:\n            enum:\n              - ASC\n              - DESC\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DevicePinners\"\n          description: Returns a list of device pins for a given enterprise.\n      summary: List enterprise device pins\n      tags:\n        - Device Pins\n      x-box-reference-category: device_pins\n  /events:\n    get:\n      description: \u003e-\n        Returns up to a year of past events for a given user\n\n        or for the entire enterprise.\n\n\n        By default this returns events for the authenticated user. To retrieve\n\n        events for the entire enterprise, set the `stream_type` to `admin_logs`.\n\n        The user making the API call will need to have admin privileges, and\n\n        the application will need to have the permission to access the event feed\n\n        to get the enterprise event feed.\n      operationId: get_events\n      parameters:\n        - description: |-\n            Defines the type of events that are returned\n\n            * `all` returns everything for a user and is the default\n            * `changes` returns events that may cause file tree changes\n              such as file updates or collaborations.\n            * `sync` is similar to `changes` but only applies to synced folders\n            * `admin_logs` returns all events for an entire enterprise and\n              requires the user making the API call to have admin permissions.\n          example: all\n          in: query\n          name: stream_type\n          schema:\n            default: all\n            enum:\n              - all\n              - changes\n              - sync\n              - admin_logs\n            type: string\n        - description: |-\n            The location in the event stream to start receiving events from.\n\n            * `now` will return an empty list events and\n            the latest stream position for initialization.\n            * `0` or `null` will return all events.\n          example: \"1348790499819\"\n          in: query\n          name: stream_position\n          schema:\n            type: string\n        - description: Limits the number of events returned\n          example: 50\n          in: query\n          name: limit\n          schema:\n            default: 100\n            format: int64\n            maximum: 500\n            type: integer\n        - description: A comma-separated list of events to filter by.\n          example: ADD_LOGIN_ACTIVITY_DEVICE\n          in: query\n          name: event_type\n          schema:\n            items:\n              $ref: \"#/components/schemas/EventType\"\n            type: array\n        - description: The lower bound date and time to return events for.\n          example: 2012-12-12T10:53:43-08:00\n          in: query\n          name: created_after\n          schema:\n            format: date-time\n            type: string\n        - description: The upper bound date and time to return events for.\n          example: 2013-12-12T10:53:43-08:00\n          in: query\n          name: created_before\n          required: false\n          schema:\n            format: date-time\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Events\"\n          description: |-\n            Returns a list of event objects.\n\n            Events objects are returned in pages, with each page (chunk)\n            including a list of event objects. The response also includes a\n            `chunk_size` parameter indicating how many\n            chunks are left, as well as the next `stream_position` that can be\n            queried.\n      summary: Get user and enterprise events\n      tags:\n        - Events\n      x-box-reference-category: events\n    options:\n      description: \u003e-\n        Returns a list of real-time servers that can be used for long-polling\n        updates\n\n        to the [event stream](#get-events).\n\n\n        Long polling is the concept where a HTTP request is kept open until the\n\n        server sends a response, then repeating the process over and over to receive\n\n        updated responses.\n\n\n        Long polling the event stream can only be used for user events, not for\n\n        enterprise events.\n\n\n        To use long polling, first use this endpoint to retrieve a list of long poll\n\n        URLs. Next, make a long poll request to any of the provided URLs.\n\n\n        When an event occurs in monitored account a response with the value\n\n        `new_change` will be sent. The response contains no other details as\n\n        it simply serves as a prompt to take further action such as sending a\n\n        request to the [events endpoint](#get-events) with the last known\n\n        `stream_position`.\n\n\n        After the server sends this response it closes the connection. You must now\n\n        repeat the long poll process to begin listening for events again.\n\n\n        If no events occur for a while and the connection times out you will\n\n        receive a response with the value `reconnect`. When you receive this response\n\n        you’ll make another call to this endpoint to restart the process.\n\n\n        If you receive no events in `retry_timeout` seconds then you will need to\n\n        make another request to the real-time server (one of the URLs in the response\n\n        for this endpoint). This might be necessary due to network errors.\n\n\n        Finally, if you receive a `max_retries` error when making a request to the\n\n        real-time server, you should start over by making a call to this endpoint\n\n        first.\n      operationId: options_events\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RealtimeServers\"\n          description: |-\n            Returns a paginated array of servers that can be used\n            instead of the regular endpoints for long-polling events.\n      summary: Get a long poll endpoint\n      tags:\n        - Events\n      x-box-reference-category: events\n  /file_version_legal_holds:\n    get:\n      description: |-\n        Get list of non-deleted legal holds for a single legal\n        hold policy.\n      operationId: get_file_version_legal_holds\n      parameters:\n        - description: |-\n            The ID of the legal hold policy to get the file version legal\n            holds for.\n          example: \"133870\"\n          in: query\n          name: policy_id\n          required: true\n          schema:\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileVersionLegalHolds\"\n          description: |-\n            Returns the list of file version legal holds for a specific legal\n            hold policy.\n      summary: List legal holds for policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n  \"/file_version_legal_holds/{file_version_legal_hold_id}\":\n    get:\n      description: |-\n        Retrieves information about the legal hold policies\n        assigned to a file version.\n      operationId: get_file_version_legal_holds_id\n      parameters:\n        - description: The ID of the file version legal hold\n          example: \"2348213\"\n          in: path\n          name: file_version_legal_hold_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileVersionLegalHold\"\n          description: Returns the legal hold policy assignments for the file version.\n      summary: Inspect legal hold on file\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n  /file_version_retentions:\n    get:\n      description: Retrieves all file version retentions for the given enterprise.\n      operationId: get_file_version_retentions\n      parameters:\n        - description: Filters results by files with this ID.\n          example: \"43123123\"\n          in: query\n          name: file_id\n          required: false\n          schema:\n            type: string\n        - description: Filters results by file versions with this ID.\n          example: \"1\"\n          in: query\n          name: file_version_id\n          required: false\n          schema:\n            type: string\n        - description: Filters results by the retention policy with this ID.\n          example: \"982312\"\n          in: query\n          name: policy_id\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Filters results by the retention policy with this disposition\n            action.\n          example: permanently_delete\n          in: query\n          name: disposition_action\n          required: false\n          schema:\n            enum:\n              - permanently_delete\n              - remove_retention\n            type: string\n        - description: |-\n            Filters results by files that will have their disposition\n            come into effect before this date.\n          example: 2012-12-12T10:53:43-08:00\n          in: query\n          name: disposition_before\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Filters results by files that will have their disposition\n            come into effect after this date.\n          example: 2012-12-19T10:34:23-08:00\n          in: query\n          name: disposition_after\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileVersionRetentions\"\n          description: Returns a list of all file version retentions for the enterprise.\n      summary: List retentions on files\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  \"/file_version_retentions/{file_version_retention_id}\":\n    get:\n      description: Returns information about a file version retention.\n      operationId: get_file_version_retentions_id\n      parameters:\n        - description: The ID of the file version retention\n          example: \"3424234\"\n          in: path\n          name: file_version_retention_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileVersionRetention\"\n          description: Returns a file version retention object.\n      summary: Get retention for file\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  /files/content:\n    options:\n      description: |-\n        Performs a check to verify that a file will be accepted by Box\n        before you upload the entire file.\n      operationId: options_files_content\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: The name for the file\n                  example: File.mp4\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: The parent folder to upload the file to\n                size:\n                  description: The size of the file in bytes\n                  example: 1024\n                  format: int32\n                  type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadUrl\"\n          description: |-\n            If the check passed, the response will include a session URL that\n            can be used to upload the file to.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConflictError\"\n          description: |-\n            If the check did not pass, the response will include some details on\n            why it did not pass.\n      summary: Preflight check\n      tags:\n        - Files\n      x-box-reference-category: files\n    post:\n      description: |-\n        Uploads a small file to Box. For file sizes over 50MB we recommend\n        using the Chunk Upload APIs.\n      operationId: post_files_content\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: |-\n            An optional header containing the SHA-1 hash of the file to\n            ensure that the file was not corrupted in transit.\n          example: 134b65991ed521fcfe4724b7d814ab8ded5185dc\n          in: header\n          name: Content-MD5\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                attributes:\n                  description: The JSON attributes of this request.\n                  properties:\n                    content_created_at:\n                      description: |-\n                        Defines the time the file was originally created at.\n\n                        If not set, the upload time will be used.\n                      example: 2012-12-12T10:53:43-08:00\n                      format: date-time\n                      type: string\n                    content_modified_at:\n                      description: |-\n                        Defines the time the file was last modified at.\n\n                        If not set, the upload time will be used.\n                      example: 2012-12-12T10:53:43-08:00\n                      format: date-time\n                      type: string\n                    name:\n                      description: The name of the file\n                      example: Photo.png\n                      type: string\n                    parent:\n                      description: The parent folder to upload the file to\n                      properties:\n                        id:\n                          description: |-\n                            The id of the parent folder. Use\n                            `0` for the user's root folder.\n                          example: \"124132\"\n                          type: string\n                      required:\n                        - id\n                      type: object\n                  required:\n                    - name\n                    - parent\n                  type: object\n                file:\n                  description: The content of the file to upload to Box.\n                  format: binary\n                  type: string\n              required:\n                - attributes\n                - files\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Files\"\n          description: Returns the new file object in a list.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the file already exists,\n            or the account has run out of disk space.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Upload a file\n      tags:\n        - File Uploads\n      x-box-reference-category: file_uploads\n  /files/upload_sessions:\n    post:\n      description: Creates an upload session for a new file.\n      operationId: post_files_upload_sessions\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                file_name:\n                  description: The name of new file\n                  example: Project.mov\n                  type: string\n                file_size:\n                  description: The total number of bytes of the file to be uploaded\n                  example: 104857600\n                  format: int64\n                  type: integer\n                folder_id:\n                  description: The ID of the folder to upload the new file to.\n                  example: \"0\"\n                  type: string\n              required:\n                - folder_id\n                - file_size\n                - file_name\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadSession\"\n          description: Returns a new upload session.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the file already exists,\n            or the account has run out of disk space.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Create upload session\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n  \"/files/upload_sessions/{upload_session_id}\":\n    delete:\n      description: |-\n        Abort an upload session and discard all data uploaded.\n\n        This cannot be reversed.\n      operationId: delete_files_upload_sessions_id\n      parameters:\n        - description: The ID of the upload session.\n          example: D5E3F7A\n          in: path\n          name: upload_session_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            A blank response is returned if the session was\n            successfully aborted.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Abort upload session\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n    get:\n      description: Return information about an upload session.\n      operationId: get_files_upload_sessions_id\n      parameters:\n        - description: The ID of the upload session.\n          example: D5E3F7A\n          in: path\n          name: upload_session_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadSession\"\n          description: Returns an upload session object.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Get upload session\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n    put:\n      description: Updates a chunk of an upload session for a file.\n      operationId: put_files_upload_sessions_id\n      parameters:\n        - description: The ID of the upload session.\n          example: D5E3F7A\n          in: path\n          name: upload_session_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The [RFC3230][1] message digest of the chunk uploaded.\n\n            Only SHA-1 is supported. The SHA-1 digest must be Base64\n            encoded. The format of this header is as\n            `sha=BASE64_ENCODED_DIGEST`.\n\n            [1]: https://tools.ietf.org/html/rfc3230\n          example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=\n          in: header\n          name: Digest\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The byte range of the chunk.\n\n            Must not overlap with the range of a part already\n            uploaded this session.\n          example: 8388608-16777215/445856194\n          in: header\n          name: Content-Range\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              format: binary\n              type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadPart\"\n          description: Chunk has been uploaded successfully.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the chunk conflicts with another\n            chunk previously uploaded.\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if a precondition failed.\n        \"416\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            Returns an error if the content range does not match a specified\n            range\n\n            for the session.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Upload a part\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n  \"/files/upload_sessions/{upload_session_id}/commit\":\n    post:\n      description: |-\n        Close an upload session and create a file from the\n        uploaded chunks.\n      operationId: post_files_upload_sessions_id_commit\n      parameters:\n        - description: The ID of the upload session.\n          example: D5E3F7A\n          in: path\n          name: upload_session_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The [RFC3230][1] message digest of the whole file.\n\n            Only SHA-1 is supported. The SHA-1 digest must be Base64\n            encoded. The format of this header is as\n            `sha=BASE64_ENCODED_DIGEST`.\n\n            [1]: https://tools.ietf.org/html/rfc3230\n          example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=\n          in: header\n          name: Digest\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Ensures the changes are only applied if the\n            item's `etag` does not match the provided\n            `etag`, ensuring that the item is only updated\n            if the content has changed.\n          example: 1\n          in: header\n          name: If-None-Match\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                parts:\n                  items:\n                    $ref: \"#/components/schemas/UploadPart--Mini\"\n                  type: array\n              required:\n                - parts\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Files\"\n          description: Returns the file object in a list.\n        \"202\":\n          description: |-\n            Returns when all chunks have been uploaded but not yet processed.\n\n            Inspect the upload session to get more information about the\n            progress of processing the chunks, then retry committing the file\n            when all chunks have processed.\n          headers:\n            Retry-After:\n              description: |-\n                Indicates the number of seconds the client should wait before\n                attempting their commit request again.\n              schema:\n                type: integer\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if there is already a file with the same name\n            in the target folder.\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the `If-Match` or `If-None-Match` conditions\n            fail.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Commit upload session\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n  \"/files/upload_sessions/{upload_session_id}/parts\":\n    get:\n      description: |-\n        Return a list of the chunks uploaded to the upload\n        session so far.\n      operationId: get_files_upload_sessions_id_parts\n      parameters:\n        - description: The ID of the upload session.\n          example: D5E3F7A\n          in: path\n          name: upload_session_id\n          required: true\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadParts\"\n          description: Returns a list of parts that have been uploaded.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: List parts\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n  \"/files/{file_id}\":\n    delete:\n      description: |-\n        Deletes a file, either permanently or by moving it to\n        the trash.\n\n        The the enterprise settings determine whether the item will\n        be permanently deleted from Box or moved to the trash.\n      operationId: delete_files_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the file has been successfully\n            deleted.\n        \"412\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            If the `If-Match` header was sent and the file has since changed,\n            the\n\n            API will return a `412 Precondition Failed` error.\n      summary: Delete a file\n      tags:\n        - Files\n      x-box-reference-category: files\n    get:\n      description: Retrieves the details about a file.\n      operationId: get_files_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: |-\n            Returns a file object.\n\n            [Some fields are optional](#file) and need to be explicitly\n            requested using the [fields](#get-files-id--request--fields)\n            parameter.\n      summary: Get a file\n      tags:\n        - Files\n      x-box-reference-category: files\n    post:\n      description: Restores an file that has been moved to the trash.\n      operationId: post_files_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: An optional new name for the file.\n                  example: Restored.docx\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: |-\n                        The optional parent folder that the item will\n                        be restored to.\n\n                        Use this if the original parent folder no longer\n                        exists, or the user no longer has access to the\n                        original parent folder.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: Returns a file object when the file has been restored.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the user does not have access to the folder\n            the file is being restored to, or the user does not have permission\n            to restore files from the trash.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the file is not in the trash.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if there is an file with the same name\n            in the folder the file is being restored to.\n      summary: Restore file\n      tags:\n        - Trash\n        - Files\n      x-box-reference-category: trash\n    put:\n      description: |-\n        Updates a file. This can be used to rename or move a file,\n        create a shared link, or lock a file.\n      operationId: put_files_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: The description for a file\n                  example: Amazing Photo\n                  maxLength: 256\n                  type: string\n                lock:\n                  allOf:\n                    - $ref: \"#/components/schemas/Lock--Writable\"\n                    - description: Creates a lock on a file. Set to `null` to unlock a file\n                name:\n                  description: The new name for the file\n                  example: NewFile.txt\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: \u003e-\n                        The parent folder for this file. Use this to move the\n                        file\n\n                        or to restore it out of the trash.\n                permissions:\n                  allOf:\n                    - $ref: \"#/components/schemas/Permissions--Writable\"\n                    - description: Describes if a file can be downloaded and by who.\n                shared_link:\n                  allOf:\n                    - $ref: \"#/components/schemas/SharedLink--Writable\"\n                    - description: Enables the creation of a shared link for this file\n                tags:\n                  description: |-\n                    The tags for this item.\n\n                    To add or remove a tag, retrieve the item's current tags,\n                    modify them, and then update them using this field.\n                  example:\n                    - approved\n                  items:\n                    type: string\n                  type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: |-\n            Returns a file object.\n\n            [Some fields are optional](#file) and need to be explicitly\n            requested using the [fields](#get-files-id--request--fields)\n            parameter.\n      summary: Update a file\n      tags:\n        - Files\n      x-box-reference-category: files\n  \"/files/{file_id}/collaborations\":\n    get:\n      description: |-\n        Retrieves a list of collaborations for a file. This\n        returns all the users that have access to the file.\n      operationId: get_files_id_collaborations\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborations\"\n          description: |-\n            Returns a collection of collaboration objects. If there are no\n            collaborations on this file an empty collection will be returned.\n      summary: Get file collaborations\n      tags:\n        - Collaborations\n        - Files\n      x-box-reference-category: collaborations\n  \"/files/{file_id}/comments\":\n    get:\n      description: Retrieves a list of comments for a file.\n      operationId: get_files_id_comments\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comments\"\n          description: |-\n            Returns a collection of comment objects. If there are no\n            comments on this file an empty collection will be returned.\n      summary: Get file comments\n      tags:\n        - Comments\n        - Files\n      x-box-reference-category: comments\n  \"/files/{file_id}/content\":\n    get:\n      description: Returns the contents of a file in binary format.\n      operationId: get_files_id_content\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The byte range of the content to download.\n\n            The format `{start_byte}-{end_byte}` can be used to specify\n            what section of the file to download.\n          example: 0-1024\n          in: header\n          name: Range\n          required: false\n          schema:\n            type: string\n        - description: \u003e-\n            The URL and password for a file that has\n\n            been shared using a shared link, as this file would otherwise\n\n            not be accessible to the user.\n\n\n            Use the format `shared_link=SHARED_LINK_URL` or if a password was set\n\n            use `shared_link=[link]\u0026shared_link_password=[password]`\n          example: shared_link=[link]\n          in: header\n          name: BoxApi\n          required: false\n          schema:\n            type: string\n        - description: The file version to download\n          example: 4\n          in: query\n          name: version\n          required: false\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: \u003e-\n            If the file is not ready to be downloaded yet `Retry-After` header\n            will\n\n            be returned indicating the time in seconds after which the file will\n\n            be available for the client to download.\n\n\n            This response can occur when the file was uploaded immediately before the\n\n            download request.\n          headers:\n            Retry-After:\n              description: The time in seconds after which to retry the download\n              schema:\n                type: integer\n        \"302\":\n          description: \u003e-\n            If the file is available to be downloaded the response will include\n            a\n\n            `Location` header for the file on `dl.boxcloud.com`.\n\n\n            The `dl.boxcloud.com` URL is not persistent and clients will need\n\n            to follow the redirect in order to actually download the file.\n          headers:\n            Location:\n              description: A pointer to the download URL\n              schema:\n                format: url\n                type: string\n      summary: Download a file\n      tags:\n        - Files\n      x-box-reference-category: files\n    post:\n      description: |-\n        Update a file's content. For file sizes over 50MB we recommend\n        using the Chunk Upload APIs.\n      operationId: post_files_id_content\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: |-\n            An optional header containing the SHA-1 hash of the file to\n            ensure that the file was not corrupted in transit.\n          example: 134b65991ed521fcfe4724b7d814ab8ded5185dc\n          in: header\n          name: Content-MD5\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                attributes:\n                  description: The JSON attributes of this request.\n                  properties:\n                    content_modified_at:\n                      description: |-\n                        Defines the time the file was last modified at.\n\n                        If not set, the upload time will be used.\n                      example: 2012-12-12T10:53:43-08:00\n                      format: date-time\n                      type: string\n                    name:\n                      description: \u003e-\n                        An optional new name for the file. If specified, the\n                        file\n\n                        will be renamed when the new version is uploaded.\n                      example: Photo 2.0.png\n                      type: string\n                  required:\n                    - name\n                  type: object\n                file:\n                  description: The content of the file to upload to Box.\n                  format: binary\n                  type: string\n              required:\n                - attributes\n                - files\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Files\"\n          description: Returns the new file object in a list.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Upload a file version\n      tags:\n        - File Uploads\n      x-box-reference-category: file_uploads\n  \"/files/{file_id}/copy\":\n    post:\n      description: Creates a copy of a file.\n      operationId: post_files_id_copy\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: |-\n                    An optional different name for the new file.\n\n                    Names can only contain basic, printable\n                    ASCII characters, without any slashes or\n                    trailing spaces.\n\n                    Bot `.` and `..` are protected names.\n                  example: FileCopy.txt\n                  maxLength: 255\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: The parent folder\n                version:\n                  description: An optional ID of the specific file version you want to copy\n                  example: \"0\"\n                  type: string\n              required:\n                - parent\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: |-\n            Returns a new file object representing the copied file.\n\n            [Some fields are optional](#file) and need to be explicitly\n            requested using the [fields](#post-files-id-copy--request--fields)\n            parameter.\n      summary: Copy a file\n      tags:\n        - Files\n      x-box-reference-category: files\n  \"/files/{file_id}/metadata\":\n    get:\n      description: Retrieves all metadata for a given file.\n      operationId: get_files_id_metadata\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadatas\"\n          description: \u003e-\n            Returns all the metadata associated with a file.\n\n\n            This API does not support pagination and will therefore always return\n\n            all of the metadata associated to the file.\n      summary: List file's metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n  \"/files/{file_id}/metadata/{scope}/{template_key}\":\n    delete:\n      description: Deletes a piece of file metadata.\n      operationId: delete_files_id_metadata_id_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the metadata is\n            successfully deleted.\n      summary: Delete file metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n    get:\n      description: Retrieve a specific metadata template instance for a file\n      operationId: get_files_id_metadata_id_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n          description: |-\n            An instance of the metadata template that includes\n            additional `key:value` pairs defined by the user or\n            an application.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returned if the metadata template specified\n            was not applied to this file.\n      summary: Get specific file metadata\n      tags:\n        - Files \u0026 Folder Metadata\n      x-box-reference-category: metadata\n    post:\n      description: |-\n        Creates a piece of metadata on a file based on the specified template.\n\n        Only values that are present in the metadata template\n        will be accepted.\n      operationId: post_files_id_metadata_id_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties:\n                example: Example Value\n                type: string\n              example:\n                example_key: Example Value\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n          description: |-\n            Returns an instance of the template that was specified, with the\n            custom template data included.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            If the piece of metadata already exists, a conflict error\n            will be returned. The metadata can then instead be updated with the\n            `put` method.\n      summary: Create metadata on file\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n    put:\n      description: |-\n        Updates a piece of metadata on a file.\n\n        The metadata instance can only be updated if the instance\n        already exists. When editing metadata, only values that adhere to the\n        metadata template schema will be accepted.\n\n        The update is applied atomically. If any errors occur during the\n        application of the operations, the metadata instance remains unchanged.\n      operationId: put_files_id_metadata_id_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: |-\n                A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\n                specification for the changes to make to the metadata.\n                The changes are represented as a JSON array of\n                operation objects.\n              items:\n                $ref: \"#/components/schemas/MetadataPatchItem\"\n              type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n          description: |-\n            Returns the updated metadata template instance, with the\n            custom template data included.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            If the piece of metadata already exists, a conflict error\n            will be returned. The metadata can then instead be updated with the\n            `put` method.\n      summary: Update file metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n  \"/files/{file_id}/tasks\":\n    get:\n      description: |-\n        Retrieves a list of all the tasks for a file. This\n        endpoint does not support paging.\n      operationId: get_files_id_tasks\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tasks\"\n          description: |-\n            Returns a collection of task objects. If there are no\n            tasks on this file an empty collection will be returned.\n      summary: Get file tasks\n      tags:\n        - Tasks\n        - Files\n      x-box-reference-category: tasks\n  \"/files/{file_id}/thumbnail.{extension}\":\n    get:\n      description: \u003e-\n        Retrieves a thumbnail, or smaller image representation, of a file.\n\n\n        Sizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in\n\n        the `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320`\n\n        can be returned in the `.jpg` format.\n\n\n        Thumbnails can be generated for the image and video file formats listed\n\n        [found on our community site](http://community.box.com/t5/Managing-\\\n\n        Your-Content/What-file-types-are-supported-by-Box-s-Content-Preview/\\\n\n        ta-p/327).\n      operationId: get_files_id_thumbnail_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: The file format for the thumbnail\n          example: png\n          in: path\n          name: extension\n          required: true\n          schema:\n            enum:\n              - png\n              - jpg\n            type: string\n        - description: The minimum height of the thumbnail\n          example: 32\n          in: query\n          name: min_height\n          schema:\n            format: int64\n            type: integer\n        - description: The minimum width of the thumbnail\n          example: 32\n          in: query\n          name: min_width\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum height of the thumbnail\n          example: 32\n          in: query\n          name: max_height\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum width of the thumbnail\n          example: 32\n          in: query\n          name: max_width\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            image/jpg:\n              schema:\n                description: The thumbnail\n                format: binary\n                type: string\n            image/png:\n              schema:\n                description: The thumbnail\n                format: binary\n                type: string\n          description: |-\n            When a thumbnail can be created the thumbnail data will be\n            returned in the body of the response.\n        \"202\":\n          description: |-\n            If the thumbnail is not available yet, a `Location` header\n            pointing to a placeholder graphic will be returned.\n          headers:\n            Location:\n              description: |-\n                A pointer to a placeholder graphic that can be used until the\n                thumbnail has been generated.\n              schema:\n                format: url\n                type: string\n            Retry-After:\n              description: |-\n                The time in seconds after which the thumbnail will be available.\n\n                Your application  only attempt to get the thumbnail again after\n                this time.\n              schema:\n                format: int64\n                type: integer\n        \"302\":\n          description: \u003e-\n            If Box is unable to generate a thumbnail for this file type, a\n            `Location`\n\n            header pointing to a placeholder graphic for this file type will be\n\n            returned.\n          headers:\n            Location:\n              description: |-\n                A pointer to a placeholder graphic that can be used for this\n                file type.\n              schema:\n                format: url\n                type: string\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            If Box is unable to generate a thumbnail for this particular file,\n            `404`\n\n            will be returned with a code of `preview_cannot_be_generated`.\n      summary: Get a file thumbnail\n      tags:\n        - Files\n        - Thumbnails\n      x-box-reference-category: files\n  \"/files/{file_id}/trash\":\n    delete:\n      description: |-\n        Permanently deletes a file that is in the trash.\n        This action cannot be undone.\n      operationId: delete_files_id_trash\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the file was\n            permanently deleted.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the file is not in the trash.\n      summary: Permanently delete file\n      tags:\n        - Files\n        - Trash\n      x-box-reference-category: trash\n    get:\n      description: Retrieves a file that has been moved to the trash.\n      operationId: get_files_id_trash\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: |-\n            Returns the file that was trashed,\n            including information about when the it\n            was moved to the trash.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the file is not in the trash.\n      summary: Get trashed file\n      tags:\n        - Files\n        - Trash\n      x-box-reference-category: trash\n  \"/files/{file_id}/upload_sessions\":\n    post:\n      description: Creates an upload session for an existing file.\n      operationId: post_files_id_upload_sessions\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                file_name:\n                  description: The optional new name of new file\n                  example: Project.mov\n                  type: string\n                file_size:\n                  description: The total number of bytes of the file to be uploaded\n                  example: 104857600\n                  format: int64\n                  type: integer\n              required:\n                - file_size\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UploadSession\"\n          description: Returns a new upload session.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the file already exists,\n            or the account has run out of disk space.\n      servers:\n        - description: Server for file uploads\n          url: https://upload.box.com/api/2.0\n      summary: Create upload session for existing file\n      tags:\n        - Chunked Uploads\n      x-box-reference-category: chunked_uploads\n  \"/files/{file_id}/versions\":\n    get:\n      description: \u003e-\n        Retrieve information on all version of a file. This endpoint can be used\n        to\n\n        retrieve information about older versions of a file.\n\n\n        Versions are only tracked for Box users with premium accounts.\n      operationId: get_files_id_versions\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileVersions\"\n          description: |-\n            Returns an array of file versions.\n\n            If there are no previous versions of this file an empty\n            array will be returned.\n      summary: List all file versions\n      tags:\n        - Files\n        - File Versions\n      x-box-reference-category: file_versions\n  \"/files/{file_id}/versions/current\":\n    post:\n      description: |-\n        Revert to a previous version of a file.\n\n\n        If previous versions exist, this method can be used to\n        promote one of the older versions to the top of the version history.\n\n        This actually creates a new copy of the old version and puts it at the\n        top of the versions history. The file will have the exact same contents\n        as the older version, with the the same SHA1/etag, and the same name\n        as the original.\n\n        Other properties such as comments do not get updated to their\n        former values.\n      operationId: post_files_id_versions_current\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: The file version to revert to\n              properties:\n                id:\n                  description: The file version ID\n                  example: \"11446498\"\n                  type: string\n                type:\n                  description: The type to revert to\n                  enum:\n                    - file_version\n                  example: file\n                  type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/FileVersion\"\n          description: Returns a newly created file version object.\n      summary: Revert file version\n      tags:\n        - Files\n        - File Versions\n      x-box-reference-category: file_versions\n  \"/files/{file_id}/versions/{file_version_id}\":\n    delete:\n      description: |-\n        Move a file version to the trash.\n\n        Versions are only tracked for Box users with premium accounts.\n      operationId: delete_files_id_versions_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the file version\n          example: \"1234\"\n          in: path\n          name: file_version_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the file has been successfully\n            deleted.\n      summary: Delete file version\n      tags:\n        - Files\n        - File Versions\n      x-box-reference-category: file_versions\n    get:\n      description: |-\n        Retrieve a specific older version of a file.\n\n        Versions are only tracked for Box users with premium accounts.\n      operationId: get_files_id_versions_id\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The ID of the file version\n          example: \"1234\"\n          in: path\n          name: file_version_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/File\"\n          description: \u003e-\n            Returns a file object.\n\n\n            [Some fields are optional](#file) and need to be explicitly\n\n            requested using the [fields](#get-files-id-versions--request--fields)\n\n            parameter.\n      summary: Get a file version\n      tags:\n        - Files\n        - File Versions\n      x-box-reference-category: file_versions\n  \"/files/{file_id}/watermark\":\n    delete:\n      description: Removes the watermark from a file.\n      operationId: delete_files_id_watermark\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            An empty response will be returned when the watermark\n            was successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the file did not have\n            a watermark applied to it\n      summary: Remove file watermark\n      tags:\n        - Watermark\n      x-box-reference-category: watermarks\n    get:\n      description: Retrieve the watermark for a file.\n      operationId: get_files_id_watermark\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Watermark\"\n          description: |-\n            Returns an object containing information about the\n            watermark associated for to this file.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the file does not have a watermark applied.\n      summary: Get file watermark\n      tags:\n        - Watermarks\n      x-box-reference-category: watermarks\n    put:\n      description: Applies or update a watermark on a file.\n      operationId: put_files_id_watermark\n      parameters:\n        - description: The ID of the file.\n          example: \"12345\"\n          in: path\n          name: file_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                watermark:\n                  description: The watermark to imprint on the file\n                  properties:\n                    imprint:\n                      description: |-\n                        The type of watermark to apply.\n\n                        Currently only supports one option.\n                      enum:\n                        - default\n                      example: default\n                      type: string\n                  required:\n                    - imprint\n                  type: object\n              required:\n                - watermark\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Watermark\"\n          description: |-\n            Returns an updated watermark if a watermark already\n            existed on this file.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Watermark\"\n          description: |-\n            Returns a new watermark if no watermark existed on\n            this file yet.\n      summary: Apply watermark to file\n      tags:\n        - Watermarks\n      x-box-reference-category: watermarks\n  /folders:\n    post:\n      description: Creates a new empty folder within the specified parent folder.\n      operationId: post_folders\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: The name for the new folder\n                  example: New Folder\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: The parent folder\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: \u003e-\n            Returns a folder object.\n\n\n            [Some fields are optional](#folder) and need to be explicitly\n\n            requested using the [fields](#post-folders--request--fields) parameter.\n      summary: Create a folder\n      tags:\n        - Folders\n      x-box-reference-category: folders\n  /folders/trash/items:\n    get:\n      description: |-\n        Retrieves the files and folders that have been moved\n        to the trash.\n\n        Any attribute in the full files or folders objects can be passed\n        in with the `fields` parameter to retrieve those specific\n        attributes that are not returned by default.\n      operationId: get_folders_trash_items\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: Returns a list of items that have been deleted\n      summary: List trashed items\n      tags:\n        - Folders\n        - Trash\n      x-box-reference-category: trash\n  \"/folders/{folder_id}\":\n    delete:\n      description: |-\n        Deletes a folder, either permanently or by moving it to\n        the trash.\n\n        The the enterprise settings determine whether the item will\n        be permanently deleted from Box or moved to the trash.\n      operationId: delete_folders_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Delete a folder that is not empty by recursively deleting the\n            folder and all of its content.\n          example: true\n          in: query\n          name: recursive\n          required: false\n          schema:\n            type: boolean\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the folder is successfully deleted\n            or moved to the trash.\n      summary: Delete a folder\n      tags:\n        - Folders\n      x-box-reference-category: folders\n    get:\n      description: |-\n        Retrieves the details about a folder, including the first 100 entries\n        in the folder.\n      operationId: get_folders_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: \u003e-\n            Returns a folder object, including the first 100 entries in the\n            folder.\n\n\n            [Some fields are optional](#folder) and need to be explicitly\n\n            requested using the [fields](#get-folders-id--request--fields)\n\n            parameter.\n      summary: Get a folder\n      tags:\n        - Folders\n      x-box-reference-category: folders\n    post:\n      description: Restores an folder that has been moved to the trash.\n      operationId: post_folders_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: An optional new name for the folder.\n                  example: Restored Photos\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: |-\n                        The optional parent folder that the folder will\n                        be restored to.\n\n                        Use this if the original parent folder no longer\n                        exists, or the user no longer has access to the\n                        original parent folder.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: Returns a folder object when the folder has been restored.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            Returns an error if the user does not have access to the folder\n\n            the folder is being restored to, or the user does not have permission\n\n            to restore folders from the trash.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the folder is not in the trash.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if there is an folder with the same name\n            in the folder the folder is being restored to.\n      summary: Restore folder\n      tags:\n        - Trash\n        - Folders\n      x-box-reference-category: trash\n    put:\n      description: |-\n        Updates a folder. This can be also be used to move the folder,\n        create shared links, update collaborations, and more.\n      operationId: put_folders_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Ensure this item hasn't recently changed\n            by ensuring the item's current `etag` matches the\n            `etag` passed into this header.\n          example: 1\n          in: header\n          name: If-Match\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                can_non_owners_invite:\n                  description: |-\n                    If collaborators who are not\n                    folder owners can invite new collaborators\n                  example: true\n                  type: boolean\n                collections:\n                  description: The collections this folder belongs to.\n                  items:\n                    $ref: \"#/components/schemas/Parent\"\n                  type: array\n                description:\n                  description: The description of the folder\n                  example: Some pictures I took\n                  maxLength: 256\n                  type: string\n                folder_upload_email:\n                  allOf:\n                    - $ref: \"#/components/schemas/FolderUploadEmail\"\n                    - description: |-\n                        Enables an email address for users to upload\n                        files directly to the folder\n                is_collaboration_restricted_to_enterprise:\n                  description: |-\n                    If future invites to this folder are restricted to users\n                    within the enterprise. This does not affect existing\n                    collaborations.\n                  example: true\n                  type: boolean\n                name:\n                  description: The new name for the folder\n                  example: New Folder\n                  type: string\n                owned_by:\n                  allOf:\n                    - $ref: \"#/components/schemas/Owner\"\n                    - description: The user that owns this folder\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: \u003e-\n                        The parent folder for this folder. Use this to move the\n                        folder\n\n                        or to restore it out of the trash.\n                shared_link:\n                  allOf:\n                    - $ref: \"#/components/schemas/SharedLink--Writable\"\n                    - description: Enables the creation of a shared link for this folder\n                sync_state:\n                  description: If Box Sync or Box Drive is allowed to sync this folder.\n                  enum:\n                    - synced\n                    - not_synced\n                  example: synced\n                  type: string\n                tags:\n                  description: |-\n                    The tags for this item.\n\n                    To add or remove a tag, retrieve the item's current tags,\n                    modify them, and then update them using this field.\n                  example:\n                    - approved\n                  items:\n                    type: string\n                  type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: |-\n            Returns a folder object for the updated folder\n\n            [Some fields are optional](#folder) and need to be explicitly\n            requested using the [fields](#put-folders-id--request--fields)\n            parameter.\n      summary: Update a folder\n      tags:\n        - Folders\n      x-box-reference-category: folders\n  \"/folders/{folder_id}/collaborations\":\n    get:\n      description: |-\n        Retrieves a list of collaborations for a folder. This\n        returns all the users that have access to the folder.\n      operationId: get_folders_id_collaborations\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborations\"\n          description: |-\n            Returns a collection of collaboration objects. If there are no\n            collaborations on this folder an empty collection will be returned.\n      summary: Get folder collaborations\n      tags:\n        - Collaborations\n        - Folders\n      x-box-reference-category: collaborations\n  \"/folders/{folder_id}/copy\":\n    post:\n      description: |-\n        Creates a copy of a folder in another folder. The original folder will\n        not be changed.\n      operationId: post_folders_id_copy\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: An optional different name for the new folder\n                  example: New Folder\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: The parent folder\n              required:\n                - parent\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: |-\n            Returns a new folder object representing the copied folder.\n\n            [Some fields are optional](#folder) and need to be explicitly\n            requested using the [fields](#post-folders-id-copy--request--fields)\n            parameter.\n      summary: Copy a folder\n      tags:\n        - Folders\n      x-box-reference-category: folders\n  \"/folders/{folder_id}/items\":\n    get:\n      description: |-\n        Retrieves a page of files, folders, web links, and other items contained\n        within the specified folder.\n\n        To request more information about the folder, use the\n        [Retrieve a folder](#get-folders-id-items) endpoint.\n      operationId: get_folders_id_items\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: A collection of items contained in the folder.\n      summary: Get items in folder\n      tags:\n        - Folders\n        - Files\n      x-box-reference-category: folders\n  \"/folders/{folder_id}/metadata\":\n    get:\n      description: Retrieves all metadata for a given folder.\n      operationId: get_folders_id_metadata\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadatas\"\n          description: \u003e-\n            Returns all the metadata associated with a folder.\n\n\n            This API does not support pagination and will therefore always return\n\n            all of the metadata associated to the folder.\n      summary: List folder's metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n  \"/folders/{folder_id}/metadata/{scope}/{template_key}\":\n    delete:\n      description: Deletes a piece of folder metadata.\n      operationId: delete_folders_id_metadata_id_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the metadata is\n            successfully deleted.\n      summary: Delete folder metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n    get:\n      description: Retrieve a specific metadata template instance for a folder\n      operationId: get_folders_id_metadata_id_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n          description: |-\n            An instance of the metadata template that includes\n            additional `key:value` pairs defined by the user or\n            an application.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returned if the metadata template specified\n            was not applied to this folder.\n      summary: Get specific folder metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n    post:\n      description: |-\n        Creates a piece of metadata on a folder based on the specified template.\n\n        Only values that are present in the metadata template\n        will be accepted.\n      operationId: post_folders_id_metadata_id_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties:\n                example: Example Value\n                type: string\n              example:\n                example_key: Example Value\n              type: object\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n          description: |-\n            Returns an instance of the template that was specified, with the\n            custom template data included.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            If the piece of metadata already exists, a conflict error\n            will be returned. The metadata can then instead be updated with the\n            `put` method.\n      summary: Create metadata on folder\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n    put:\n      description: |-\n        Updates a piece of metadata on a folder based.\n\n        The metadata instance can only be updated if the instance\n        already exists. When editing metadata, only values that adhere to the\n        metadata template schema will be accepted.\n\n        The update is applied atomically. If any errors occur during the\n        application of the operations, the metadata instance remains unchanged.\n      operationId: put_folders_id_metadata_id_id\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: |-\n                A [JSON-Patch](https://tools.ietf.org/html/rfc6902)\n                specification for the changes to make to the metadata.\n                The changes are represented as a JSON array of\n                operation objects.\n              items:\n                $ref: \"#/components/schemas/MetadataPatchItem\"\n              type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Metadata\"\n          description: |-\n            Returns the updated metadata template instance, with the\n            custom template data included.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            If the piece of metadata already exists, a conflict error\n            will be returned. The metadata can then instead be updated with the\n            `put` method.\n      summary: Update folder metadata\n      tags:\n        - File \u0026 Folder Metadata\n      x-box-reference-category: metadata\n  \"/folders/{folder_id}/trash\":\n    delete:\n      description: |-\n        Permanently deletes a folder that is in the trash.\n        This action cannot be undone.\n      operationId: delete_folders_id_trash\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the folder was\n            permanently deleted.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the folder is not in the trash.\n      summary: Permanently delete folder\n      tags:\n        - Folders\n        - Trash\n      x-box-reference-category: trash\n    get:\n      description: Retrieves a folder that has been moved to the trash.\n      operationId: get_folders_id_trash\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: |-\n            Returns the folder that was trashed,\n            including information about when the it\n            was moved to the trash.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the folder is not in the trash.\n      summary: Get trashed folder\n      tags:\n        - Folders\n        - Trash\n      x-box-reference-category: trash\n  \"/folders/{folder_id}/watermark\":\n    delete:\n      description: Removes the watermark from a folder.\n      operationId: delete_folders_id_watermark\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            An empty response will be returned when the watermark\n            was successfully deleted.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the folder did not have\n            a watermark applied to it\n      summary: Remove folder watermark\n      tags:\n        - Watermark\n      x-box-reference-category: watermarks\n    get:\n      description: Retrieve the watermark for a folder.\n      operationId: get_folders_id_watermark\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Watermark\"\n          description: |-\n            Returns an object containing information about the\n            watermark associated for to this folder.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the folder does not have a watermark applied.\n      summary: Get folder watermark\n      tags:\n        - Watermarks\n      x-box-reference-category: watermarks\n    put:\n      description: Applies or update a watermark on a folder.\n      operationId: put_folders_id_watermark\n      parameters:\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                watermark:\n                  description: The watermark to imprint on the folder\n                  properties:\n                    imprint:\n                      description: |-\n                        The type of watermark to apply.\n\n                        Currently only supports one option.\n                      enum:\n                        - default\n                      example: default\n                      type: string\n                  required:\n                    - imprint\n                  type: object\n              required:\n                - watermark\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Watermark\"\n          description: |-\n            Returns an updated watermark if a watermark already\n            existed on this folder.\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Watermark\"\n          description: |-\n            Returns a new watermark if no watermark existed on\n            this folder yet.\n      summary: Apply watermark to folder\n      tags:\n        - Watermarks\n      x-box-reference-category: watermarks\n  /group_memberships:\n    post:\n      description: Creates a group membership\n      operationId: post_group_memberships\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                configurable_permissions:\n                  additionalProperties:\n                    description: A key value pair of custom permissions.\n                    example: true\n                    type: boolean\n                  description: \u003e-\n                    Custom configuration for the permissions an admin\n\n                    if a group will receive. This option has no effect\n\n                    on members with a role of `member`.\n\n\n                    Setting these permissions overwrites the default\n\n                    access levels of an admin.\n\n\n                    Specifying a value of \"null\" for this object will disable\n\n                    all configurable permissions. Specifying permissions will set\n\n                    them accordingly, omitted permissions will be enabled by default.\n                  example:\n                    can_run_reports: false\n                  type: object\n                group:\n                  description: The group to add the user to.\n                  properties:\n                    id:\n                      description: The ID of the group to add the user to\n                      example: \"4545523\"\n                      type: string\n                  required:\n                    - id\n                  type: object\n                role:\n                  description: The role of the user in the group.\n                  enum:\n                    - member\n                    - admin\n                  example: member\n                  type: string\n                user:\n                  description: The user to add to the group.\n                  properties:\n                    id:\n                      description: The ID of the user to add to the group\n                      example: \"1434325\"\n                      type: string\n                  required:\n                    - id\n                  type: object\n              required:\n                - user\n                - group\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupMembership\"\n          description: Returns a new group membership object.\n      summary: Add user to group\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  \"/group_memberships/{group_membership_id}\":\n    delete:\n      description: Deletes a specific group membership.\n      operationId: delete_group_memberships_id\n      parameters:\n        - description: The ID of the group membership.\n          example: \"434534\"\n          in: path\n          name: group_membership_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            A blank response is returned if the membership was\n            successfully deleted.\n      summary: Remove user from group\n      tags:\n        - Groups\n      x-box-reference-category: groups\n    get:\n      description: Retrieves a specific group membership.\n      operationId: get_group_memberships_id\n      parameters:\n        - description: The ID of the group membership.\n          example: \"434534\"\n          in: path\n          name: group_membership_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupMembership\"\n          description: Returns the group membership object.\n      summary: Get group membership\n      tags:\n        - Groups\n      x-box-reference-category: groups\n    put:\n      description: Updates a user's group membership.\n      operationId: put_group_memberships_id\n      parameters:\n        - description: The ID of the group membership.\n          example: \"434534\"\n          in: path\n          name: group_membership_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                configurable_permissions:\n                  additionalProperties:\n                    description: A key value pair of custom permissions.\n                    example: true\n                    type: boolean\n                  description: \u003e-\n                    Custom configuration for the permissions an admin\n\n                    if a group will receive. This option has no effect\n\n                    on members with a role of `member`.\n\n\n                    Setting these permissions overwrites the default\n\n                    access levels of an admin.\n\n\n                    Specifying a value of \"null\" for this object will disable\n\n                    all configurable permissions. Specifying permissions will set\n\n                    them accordingly, omitted permissions will be enabled by default.\n                  example:\n                    can_run_reports: false\n                  type: object\n                role:\n                  description: The role of the user in the group.\n                  enum:\n                    - member\n                    - admin\n                  example: member\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupMembership\"\n          description: Returns a new group membership object.\n      summary: Update user's membership\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  /groups:\n    get:\n      description: |-\n        Retrieves all of the groups for a given enterprise. The user\n        must have admin permissions to inspect enterprise's groups.\n      operationId: get_groups\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Groups\"\n          description: |-\n            Returns a collection of group objects. If there are no groups, an\n            empty collection will be returned.\n      summary: List enterprise groups\n      tags:\n        - Groups\n      x-box-reference-category: groups\n    post:\n      description: |-\n        Creates a new group of users in an enterprise. Only users with admin\n        permissions can create new groups.\n      operationId: post_groups\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: A human readable description of the group.\n                  example: '\"Customer Support Group - as imported from Active\n                    Directory\"'\n                  maxLength: 255\n                  type: string\n                external_sync_identifier:\n                  description: |-\n                    An arbitrary identifier that can be used by\n                    external group sync tools to link this Box Group to\n                    an external group.\n\n                    Example values of this field\n                    could be an **Active Directory Object ID** or a **Google\n                    Group ID**.\n\n                    We recommend you use of this field in\n                    order to avoid issues when group names are updated in\n                    either Box or external systems.\n                  example: AD:123456\n                  type: string\n                invitability_level:\n                  description: |-\n                    Specifies who can invite the group to collaborate\n                    on folders.\n\n                    When set to `admins_only` the enterprise admin, co-admins,\n                    and the group's admin can invite the group.\n\n                    When set to `admins_and_members` all the admins listed\n                    above and group members can invite the group.\n\n                    When set to `all_managed_users` all managed users in the\n                    enterprise can invite the group.\n                  enum:\n                    - admins_only\n                    - admins_and_members\n                    - all_managed_users\n                  example: admins_only\n                  type: string\n                member_viewability_level:\n                  description: |-\n                    Specifies who can see the members of the group.\n\n                    * `admins_only - the enterprise admin, co-admins, group's\n                      group admin\n                    * `admins_and_members` - all admins and group members\n                    * `all_managed_users` - all managed users in the\n                      enterprise\n                  enum:\n                    - admins_only\n                    - admins_and_members\n                    - all_managed_users\n                  example: admins_only\n                  type: string\n                name:\n                  description: The name of the new group to be created\n                  example: Customer Support\n                  type: string\n                provenance:\n                  description: |-\n                    Keeps track of which external source this group is\n                    coming, for example `Active Directory`, or `Okta`.\n\n                    Setting this will also prevent Box admins from editing\n                    the group name and its members directly via the Box\n                    web application.\n\n                    This is desirable for one-way syncing of groups.\n                  example: Active Directory\n                  maxLength: 255\n                  type: string\n              required:\n                - name\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n          description: Returns the new group object.\n      summary: Create group\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  \"/groups/{group_id}\":\n    delete:\n      description: Permanently deletes a group.\n      operationId: delete_groups_id\n      parameters:\n        - description: The ID of the group.\n          example: \"57645\"\n          in: path\n          name: group_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            A blank response is returned if the group was\n            successfully deleted.\n      summary: Delete group\n      tags:\n        - Groups\n      x-box-reference-category: groups\n    get:\n      description: Retrieves information about a group.\n      operationId: get_groups_id\n      parameters:\n        - description: The ID of the group.\n          example: \"57645\"\n          in: path\n          name: group_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n          description: Returns the group object\n      summary: Get group\n      tags:\n        - Groups\n      x-box-reference-category: groups\n    put:\n      description: Updates a specific group.\n      operationId: put_groups_id\n      parameters:\n        - description: The ID of the group.\n          example: \"57645\"\n          in: path\n          name: group_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: A human readable description of the group.\n                  example: '\"Customer Support Group - as imported from Active\n                    Directory\"'\n                  maxLength: 255\n                  type: string\n                external_sync_identifier:\n                  description: |-\n                    An arbitrary identifier that can be used by\n                    external group sync tools to link this Box Group to\n                    an external group.\n\n                    Example values of this field\n                    could be an **Active Directory Object ID** or a **Google\n                    Group ID**.\n\n                    We recommend you use of this field in\n                    order to avoid issues when group names are updated in\n                    either Box or external systems.\n                  example: AD:123456\n                  type: string\n                invitability_level:\n                  description: |-\n                    Specifies who can invite the group to collaborate\n                    on folders.\n\n                    When set to `admins_only` the enterprise admin, co-admins,\n                    and the group's admin can invite the group.\n\n                    When set to `admins_and_members` all the admins listed\n                    above and group members can invite the group.\n\n                    When set to `all_managed_users` all managed users in the\n                    enterprise can invite the group.\n                  enum:\n                    - admins_only\n                    - admins_and_members\n                    - all_managed_users\n                  example: admins_only\n                  type: string\n                member_viewability_level:\n                  description: |-\n                    Specifies who can see the members of the group.\n\n                    * `admins_only - the enterprise admin, co-admins, group's\n                      group admin\n                    * `admins_and_members` - all admins and group members\n                    * `all_managed_users` - all managed users in the\n                      enterprise\n                  enum:\n                    - admins_only\n                    - admins_and_members\n                    - all_managed_users\n                  example: admins_only\n                  type: string\n                name:\n                  description: The name of the new group to be created\n                  example: Customer Support\n                  type: string\n                provenance:\n                  description: |-\n                    Keeps track of which external source this group is\n                    coming, for example `Active Directory`, or `Okta`.\n\n                    Setting this will also prevent Box admins from editing\n                    the group name and its members directly via the Box\n                    web application.\n\n                    This is desirable for one-way syncing of groups.\n                  example: Active Directory\n                  maxLength: 255\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Group\"\n          description: Returns the updated group object.\n      summary: Update group\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  \"/groups/{group_id}/collaborations\":\n    get:\n      description: |-\n        Retrieves all the collaborations for a group. The user\n        must have admin permissions to inspect enterprise's groups.\n\n        Each collaboration object has details on which files or\n        folders the group has access to and with what role.\n      operationId: get_groups_id_collaborations\n      parameters:\n        - description: The ID of the group.\n          example: \"57645\"\n          in: path\n          name: group_id\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Collaborations\"\n          description: |-\n            Returns a collection of collaboration objects. If there are no\n            collaborations, an empty collection will be returned.\n      summary: List group's collaborations\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  \"/groups/{group_id}/memberships\":\n    get:\n      description: |-\n        Retrieves all the members for a group. The user\n        must have admin permissions to inspect enterprise's groups.\n      operationId: get_groups_id_memberships\n      parameters:\n        - description: The ID of the group.\n          example: \"57645\"\n          in: path\n          name: group_id\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupMemberships\"\n          description: |-\n            Returns a collection of membership objects. If there are no\n            memberships, an empty collection will be returned.\n      summary: Lis group's members\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  /invites:\n    post:\n      description: |-\n        Invites an existing external user to join an enterprise.\n\n        The existing user can not be part of another enterprise and\n        must already have a Box account. Once invited, the user will receive an\n        email and are prompted to accept the invitation within the\n        Box web application.\n\n        This method requires the `\"Manage An Enterprise\"` scope enabled for\n        the application, which can be enabled within the developer console.\n      operationId: post_invites\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                actionable_by:\n                  description: The user to invite\n                  properties:\n                    login:\n                      description: The login of the invited user\n                      example: john@example.com\n                      type: string\n                  required:\n                    - id\n                  type: object\n                enterprise:\n                  description: The enterprise to invite the user to\n                  properties:\n                    id:\n                      description: The ID of the enterprise\n                      example: \"1232234\"\n                      type: string\n                  required:\n                    - id\n                  type: object\n              required:\n                - enterprise\n                - actionable_by\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invite\"\n          description: Returns a new invite object.\n      summary: Invite user\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/invites/{invite_id}\":\n    get:\n      description: Returns the status of a user invite.\n      operationId: get_invites_id\n      parameters:\n        - description: The ID of an invite.\n          example: \"213723\"\n          in: path\n          name: invite_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Invite\"\n          description: Returns an invite object\n      summary: Get user invite status\n      tags:\n        - Users\n      x-box-reference-category: users\n  /legal_hold_policies:\n    get:\n      description: |-\n        Retrieves a list of legal hold policies that belong to\n        an enterprise.\n      operationId: get_legal_hold_policies\n      parameters:\n        - description: |-\n            Limits results to policies for which the names start with\n            this search term. This is a case-insensitive prefix.\n          example: Sales Policy\n          in: query\n          name: policy_name\n          required: false\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicies\"\n          description: Returns a list of legal hold policies.\n      summary: List all legal hold policies\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n    post:\n      description: Create a new legal hold policy.\n      operationId: post_legal_hold_policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: A description for the policy.\n                  example: A custom policy for the sales team\n                  maxLength: 500\n                  type: string\n                filter_ended_at:\n                  description: |-\n                    The filter end date.\n\n                    When this policy is applied using a `custodian` legal\n                    hold assignments, it will only apply to file versions\n                    created or uploaded inside of the\n                    date range. Other assignment types, such as folders and\n                    files, will ignore the date filter.\n\n                    Required if `is_ongoing` is set to `false`.\n                  example: 2012-12-18T10:53:43-08:00\n                  format: date-time\n                  maxLength: 500\n                  type: string\n                filter_started_at:\n                  description: |-\n                    The filter start date.\n\n                    When this policy is applied using a `custodian` legal\n                    hold assignments, it will only apply to file versions\n                    created or uploaded inside of the\n                    date range. Other assignment types, such as folders and\n                    files, will ignore the date filter.\n\n                    Required if `is_ongoing` is set to `false`.\n                  example: 2012-12-12T10:53:43-08:00\n                  format: date-time\n                  maxLength: 500\n                  type: string\n                is_ongoing:\n                  description: \u003e-\n                    Whether new assignments under this policy should\n\n                    continue applying to files even after initialization.\n\n\n                    When this policy is applied using a legal hold assignment,\n\n                    it will continue applying the policy to any new file versions\n\n                    even after it has been applied.\n\n\n                    For example, if a legal hold assignment is placed on a user\n\n                    today, and that user uploads a file tomorrow, that file will\n\n                    get held. This will continue until the policy is retired.\n\n\n                    Required if no filter dates are set.\n                  example: true\n                  type: boolean\n                policy_name:\n                  description: The name of the policy.\n                  example: Sales Policy\n                  maxLength: 254\n                  type: string\n              required:\n                - policy_name\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicy\"\n          description: Returns a new legal hold policy object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicy\"\n          description: |-\n            Returns an error if required parameters are missing,\n            or neither `is_ongoing` or filter dates are specified.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if a policy with this name already exists.\n      summary: Create legal hold policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n  \"/legal_hold_policies/{legal_hold_policy_id}\":\n    delete:\n      description: |-\n        Delete an existing legal hold policy.\n\n        This is an asynchronous process. The policy will not be\n        fully deleted yet when the response returns.\n      operationId: delete_legal_hold_policies_id\n      parameters:\n        - description: The ID of the legal hold policy\n          example: \"324432\"\n          in: path\n          name: legal_hold_policy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: |-\n            A blank response is returned if the policy was\n            successfully deleted.\n      summary: Delete legal hold policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n    get:\n      description: Retrieve a legal hold policy.\n      operationId: get_legal_hold_policies_id\n      parameters:\n        - description: The ID of the legal hold policy\n          example: \"324432\"\n          in: path\n          name: legal_hold_policy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicy\"\n          description: Returns a legal hold policy object.\n      summary: Get legal hold policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n    put:\n      description: Update legal hold policy.\n      operationId: put_legal_hold_policies_id\n      parameters:\n        - description: The ID of the legal hold policy\n          example: \"324432\"\n          in: path\n          name: legal_hold_policy_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: A description for the policy.\n                  example: A custom policy for the sales team\n                  maxLength: 500\n                  type: string\n                policy_name:\n                  description: The name of the policy.\n                  example: Sales Policy\n                  maxLength: 254\n                  type: string\n                release_notes:\n                  description: Notes around why the policy was released.\n                  example: Required for GDPR\n                  maxLength: 500\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicy\"\n          description: Returns a new legal hold policy object.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if a policy with this name already exists.\n      summary: Update legal hold policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n  /legal_hold_policy_assignments:\n    get:\n      description: Retrieves a list of items a legal hold policy has been assigned to.\n      operationId: get_legal_hold_policy_assignments\n      parameters:\n        - description: The ID of the legal hold policy\n          example: \"324432\"\n          in: query\n          name: policy_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Filters the results by the type of item the\n            policy was applied to.\n          example: file\n          in: query\n          name: assign_to_type\n          schema:\n            enum:\n              - file\n              - file_version\n              - folder\n              - user\n            type: string\n        - description: |-\n            Filters the results by the ID of item the\n            policy was applied to.\n          example: \"1234323\"\n          in: query\n          name: assign_to_id\n          schema:\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicyAssignments\"\n          description: Returns a list of legal hold policy assignments.\n      summary: List policy's assignments\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n    post:\n      description: Assign a legal hold to a file, file version, folder, or user.\n      operationId: post_legal_hold_policy_assignments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                assign_to:\n                  description: The item to assign the policy to\n                  properties:\n                    id:\n                      description: The ID of item to assign the policy to\n                      example: \"6564564\"\n                      type: string\n                    type:\n                      description: The type of item to assign the policy to\n                      enum:\n                        - file\n                        - file_version\n                        - folder\n                        - user\n                      example: folder\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                policy_id:\n                  description: The ID of the policy to assign.\n                  example: \"123244\"\n                  type: string\n              required:\n                - policy_id\n                - assign_to\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicyAssignment\"\n          description: Returns a new legal hold policy assignment.\n      summary: Assign legal hold policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n  \"/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}\":\n    delete:\n      description: |-\n        Remove a legal hold from an item.\n\n        This is an asynchronous process. The policy will not be\n        fully removed yet when the response returns.\n      operationId: delete_legal_hold_policy_assignments_id\n      parameters:\n        - description: The ID of the legal hold policy assignment\n          example: \"753465\"\n          in: path\n          name: legal_hold_policy_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"202\":\n          description: |-\n            A blank response is returned if the assignment was\n            successfully deleted.\n      summary: Unassign legal hold policy\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n    get:\n      description: Retrieve a legal hold policy assignment.\n      operationId: get_legal_hold_policy_assignments_id\n      parameters:\n        - description: The ID of the legal hold policy assignment\n          example: \"753465\"\n          in: path\n          name: legal_hold_policy_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LegalHoldPolicyAssignment\"\n          description: Returns a legal hold policy object.\n      summary: Get policy assignment\n      tags:\n        - Legal Hold Policies\n      x-box-reference-category: legal_hold_policies\n  /metadata_cascade_policies:\n    get:\n      description: |-\n        Retrieve a collection of metadata cascade policies\n        within a given folder for the current enterprise.\n      operationId: get_metadata_cascade_policies\n      parameters:\n        - description: |-\n            Specifies which folder to return policies for.\n\n            This is not required if the user making the API call\n            has admin permissions. In that case, this endpoints\n            returns all cascade policies in the enterprise.\n          example: \"31232\"\n          in: query\n          name: folder_id\n          schema:\n            type: string\n        - description: |-\n            The ID of the enterprise ID for which to find metadata\n            cascade policies. If not specified, it defaults to the\n            current enterprise.\n          example: \"31232\"\n          in: query\n          name: owner_enterprise_id\n          schema:\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataCascadePolicies\"\n          description: Returns a list of metadata cascade policies\n      summary: List cascade policies\n      tags:\n        - Metadata Cascade (Beta)\n      x-box-reference-category: metadata_cascade_policies\n    post:\n      description: |-\n        Creates a new metadata cascade policy that applies a given\n        metadata template to a given folder and automatically\n        cascades it down to its children.\n\n        In order for the policy to work, a metadata instance must first\n        be applied to the folder.\n      operationId: post_metadata_cascade_policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                folder_id:\n                  description: The ID of the folder to assign the template to.\n                  example: \"12321\"\n                  type: string\n                scope:\n                  description: The scope of the metadata template\n                  enum:\n                    - global\n                    - enterprise_\u003cid\u003e\n                  example: enterprise_27335\n                  type: string\n                templateKey:\n                  description: The identifier of the metadata template.\n                  example: productInfo\n                  type: string\n              required:\n                - folder_id\n                - scope\n                - template_key\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataCascadePolicy\"\n          description: Returns a new of metadata cascade policy\n      summary: Create cascade policy\n      tags:\n        - Metadata Cascade (Beta)\n      x-box-reference-category: metadata_cascade_policies\n  \"/metadata_cascade_policies/{metadata_cascade_policy_id}\":\n    delete:\n      description: Deletes a metadata cascade policy.\n      operationId: delete_metadata_cascade_policies_id\n      parameters:\n        - description: The ID of the metadata cascade policy.\n          example: \"324324\"\n          in: path\n          name: metadata_cascade_policy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the policy\n            is successfully deleted.\n      summary: Delete cascade policy\n      tags:\n        - Metadata Cascade (Beta)\n      x-box-reference-category: metadata_cascade_policies\n    get:\n      description: Retrieve a metadata cascade policy.\n      operationId: get_metadata_cascade_policies_id\n      parameters:\n        - description: The ID of the metadata cascade policy.\n          example: \"324324\"\n          in: path\n          name: metadata_cascade_policy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataCascadePolicy\"\n          description: Returns a list of metadata cascade policies\n      summary: Get cascade policy\n      tags:\n        - Metadata Cascade (Beta)\n      x-box-reference-category: metadata_cascade_policies\n  \"/metadata_cascade_policies/{metadata_cascade_policy_id}/apply\":\n    post:\n      description: |-\n        If a policy already exists on a folder, this will apply that policy\n        to all existing files and sub-folders within the target folder.\n      operationId: post_metadata_cascade_policies_id_apply\n      parameters:\n        - description: The ID of the cascade policy.\n          example: \"21312\"\n          in: path\n          name: metadata_cascade_policy_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                conflict_resolution:\n                  description: \u003e-\n                    The desired behavior for conflict-resolution if a template\n                    already\n\n                    exists on a given file or folder.\n\n\n                    * `none` will preserve the existing value on the file\n\n                    * `overwrite` will force-apply the templates values over\n                      any existing values.\n                  enum:\n                    - none\n                    - overwrite\n                  example: overwrite\n                  type: string\n              required:\n                - conflict_resolution\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataCascadePolicy\"\n          description: |-\n            Returns the metadata cascade policy when the policy has been\n            applied.\n\n            The metadata cascade operation will be kicked off asynchronously.\n            The API call will return right away but before the cascade operation\n            is complete. There is currently no way to check for when this\n            operation has finished.\n      summary: Force apply cascade policy\n      tags:\n        - Metadata Cascade (Beta)\n      x-box-reference-category: metadata_cascade_policies\n  /metadata_templates/enterprise:\n    get:\n      description: Used to retrieve all metadata templates within a user's enterprise\n      operationId: get_metadata_templates_enterprise\n      parameters:\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataTemplates\"\n          description: |-\n            Returns all of the metadata templates within an enterprise\n            and their corresponding schema.\n      summary: List enterprise templates\n      tags:\n        - Metadata Templates\n      x-box-reference-category: metadata_templates\n  /metadata_templates/schema:\n    post:\n      description: Creates a new metadata template that can be applied to files and folders.\n      operationId: post_metadata_templates_schema\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MetadataTemplate--Writable\"\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataTemplate\"\n          description: The schema representing the metadata template created.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Request body contains an invalid metadata schema.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Request body contains a scope that the user is not allowed to\n            create a template for.\n      summary: Create metadata template\n      tags:\n        - Metadata Templates\n      x-box-reference-category: metadata_templates\n  \"/metadata_templates/{scope}/{template_key}/schema\":\n    delete:\n      description: |-\n        Delete a metadata template and its instances.\n        This deletion is permanent and can not be reversed.\n      operationId: delete_metadata_templates_id_id_schema\n      parameters:\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the metadata\n            template is successfully deleted.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Request body contains an invalid metadata schema.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Request body contains a scope that the user is not allowed to\n            create a template for.\n      summary: Delete metadata template\n      tags:\n        - Metadata Templates\n      x-box-reference-category: metadata_templates\n    get:\n      description: Retrieves a metadata template by its scope and template name.\n      operationId: get_metadata_templates_id_id_schema\n      parameters:\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataTemplate\"\n          description: |-\n            Returns the metadata template matching the `scope`\n            and `template` name.\n      summary: Get template by name\n      tags:\n        - Metadata Templates\n      x-box-reference-category: metadata_templates\n    put:\n      description: |-\n        Updates a metadata template.\n\n        The metadata template can only be updated if the template\n        already exists.\n\n        The update is applied atomically. If any errors occur during the\n        application of the operations, the metadata template remains unchanged.\n      operationId: put_metadata_templates_id_id_schema\n      parameters:\n        - description: The scope of the metadata template\n          example: enterprise_27335\n          in: path\n          name: scope\n          required: true\n          schema:\n            enum:\n              - global\n              - enterprise_\u003cid\u003e\n            type: string\n        - description: The name of the metadata template\n          example: blueprintTemplate\n          in: path\n          name: template_key\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/MetadataTemplatePatch\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataTemplate\"\n          description: |-\n            Returns the updated metadata template, with the\n            custom template data included.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: The request body contains an invalid metadata schema.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            The request body contains a scope that the user is not\n            allowed to create templates for.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: The requested template could not be found\n      summary: Update metadata template\n      tags:\n        - Metadata Templates\n      x-box-reference-category: metadata_templates\n  \"/metadata_templates/{template_id}\":\n    get:\n      description: Retrieves a metadata template by its ID.\n      operationId: get_metadata_templates_id\n      parameters:\n        - description: The ID of the template\n          example: f7a9891f\n          in: path\n          name: template_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MetadataTemplate\"\n          description: |-\n            Returns the metadata template matching the `scope`\n            and `template` name.\n      summary: Get a template by ID\n      tags:\n        - Metadata Templates\n      x-box-reference-category: metadata_templates\n  /oauth2/revoke:\n    post:\n      description: |-\n        Revoke an active Access Token, effectively logging a user out\n        that has been previously authenticated.\n      operationId: post_oauth2_revoke\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/TokenRevocationRequest\"\n      responses:\n        \"200\":\n          description: Returns an empty response when the token was successfully revoked.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OAuth2Error\"\n          description: An authentication error.\n      security: []\n      summary: Revoke an access token\n      tags:\n        - Authorization\n      x-box-reference-category: authorization\n  /oauth2/token:\n    post:\n      description: |-\n        Request an Access Token using either a client-side obtained OAuth2\n        authorization code or a server-side JWT assertion.\n\n        An Access Token is a string that enables Box to verify that a\n        request belongs to an authorized session. In the normal order of\n        operations you will begin by requesting authentication from the\n        [authorize](#get-authorize) endpoint and Box will send you an\n        authorization code.\n\n        You will then send this code to this endpoint to exchange it for\n        an Access Token. The returned Access Token can then be used to to make\n        Box API calls.\n      operationId: post_oauth2_token\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: \"#/components/schemas/TokenRequest\"\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessToken\"\n          description: |-\n            Returns a new Access Token that can be used to make authenticated\n            API calls by passing along the token in a authorization header as\n            follows `Authorization: Bearer \u003cToken\u003e`.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/OAuth2Error\"\n          description: An authentication error.\n      security: []\n      summary: Request an access token\n      tags:\n        - Authorization\n      x-box-reference-category: authorization\n  /recent_items:\n    get:\n      description: |-\n        Returns information about the recent items accessed\n        by a user, either in the last 90 days or up to the last\n        1000 items accessed.\n      operationId: get_recent_items\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RecentItems\"\n          description: Returns a list recent items access by a user.\n      summary: List recent items\n      tags:\n        - Recent Items\n      x-box-reference-category: recent_items\n  /retention_policies:\n    get:\n      description: Retrieves all of the retention policies for an enterprise.\n      operationId: get_retention_policies\n      parameters:\n        - description: |-\n            Filters results by a case sensitive prefix of the name of\n            retention policies.\n          example: Sales Policy\n          in: query\n          name: policy_name\n          required: false\n          schema:\n            type: string\n        - description: Filters results by the type of retention policy.\n          example: finite\n          in: query\n          name: policy_type\n          required: false\n          schema:\n            enum:\n              - finite\n              - indefinite\n            type: string\n        - description: Filters results by the ID of the user who created policy.\n          example: \"21312321\"\n          in: query\n          name: created_by_user_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicies\"\n          description: Returns a list retention policies in the enterprise.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns a `bad_request` if a non existent `policy_type` was\n            specified.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            Returns a `not_found` error if the user specified in\n            `created_by_user_id`\n\n            does not exist.\n      summary: List retention policies\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n    post:\n      description: Creates a retention policy.\n      operationId: post_retention_policies\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                are_owners_notified:\n                  description: |-\n                    Whether owner and co-owners of a file are notified\n                    when the policy nears expiration.\n                  example: true\n                  type: boolean\n                can_owner_extend_retention:\n                  description: |-\n                    Whether the owner of a file will be allowed to\n                    extend the retention.\n                  example: true\n                  type: boolean\n                custom_notification_recipients:\n                  items:\n                    $ref: \"#/components/schemas/NotifiedUser\"\n                  type: array\n                disposition_action:\n                  description: |-\n                    The disposition action of the retention policy.\n                    This action can be `permanently_delete`, which\n                    will cause the content retained by the policy\n                    to be permanently deleted, or `remove_retention`,\n                    which will lift the retention policy from the content,\n                    allowing it to be deleted by users,\n                    once the retention policy time period has passed.\n                  enum:\n                    - permanently_delete\n                    - remove_retention\n                  example: permanently_delete\n                  type: string\n                policy_name:\n                  description: The name for the retention policy\n                  example: Some Policy Name\n                  type: string\n                policy_type:\n                  description: |-\n                    The type of the retention policy. A retention\n                    policy type can either be `finite`, where a\n                    specific amount of time to retain the content is known\n                    upfront, or `indefinite`, where the amount of time\n                    to retain the content is still unknown.\n                  enum:\n                    - finite\n                    - indefinite\n                  example: finite\n                  type: string\n                retention_length:\n                  description: |-\n                    The length of the retention policy. This length\n                    specifies the duration in days that the retention\n                    policy will be active for after being assigned to\n                    content.  If the policy has A `policy_type` of\n                    `indefinite`, the `retention_length` will also be\n                    `indefinite`.\n                  example: \"0\"\n                  format: int32\n                  type: string\n              required:\n                - policy_name\n                - policy_type\n                - disposition_action\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicy\"\n          description: Returns a new retention policy object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns a `bad_request` error with the `retention_length` was\n            specified for a `infinite` retention policy, or an incorrect\n            `disposition_action` was set.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if a retention policy with the given name already\n            exists\n      summary: Create retention policy\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  \"/retention_policies/{retention_policy_id}\":\n    get:\n      description: Retrieves a retention policy.\n      operationId: get_retention_policies_id\n      parameters:\n        - description: The ID of the retention policy.\n          example: \"982312\"\n          in: path\n          name: retention_policy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicy\"\n          description: Returns the retention policy object.\n      summary: Get retention policy\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n    put:\n      description: Updates a retention policy.\n      operationId: put_retention_policies_id\n      parameters:\n        - description: The ID of the retention policy.\n          example: \"982312\"\n          in: path\n          name: retention_policy_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                disposition_action:\n                  description: |-\n                    The disposition action of the retention policy.\n                    This action can be `permanently_delete`, which\n                    will cause the content retained by the policy\n                    to be permanently deleted, or `remove_retention`,\n                    which will lift the retention policy from the content,\n                    allowing it to be deleted by users,\n                    once the retention policy time period has passed.\n                  enum:\n                    - permanently_delete\n                    - remove_retention\n                  example: permanently_delete\n                  type: string\n                policy_name:\n                  description: The name for the retention policy\n                  example: Some Policy Name\n                  type: string\n                status:\n                  description: |-\n                    Used to retire a retention policy.\n\n                    If not retiring a policy, do not include this parameter\n                    or set it to `null`.\n                  enum:\n                    - retired\n                  example: retired\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicy\"\n          description: Returns the updated retention policy object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns a `bad_request` if an incorrect\n            `disposition_action` was set.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if a retention policy with the given name already\n            exists\n      summary: Update retention policy\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  \"/retention_policies/{retention_policy_id}/assignments\":\n    get:\n      description: \u003e-\n        Returns a list of all retention policy assignments associated with a\n        specified\n\n        retention policy.\n      operationId: get_retention_policies_id_assignments\n      parameters:\n        - description: The ID of the retention policy.\n          example: \"982312\"\n          in: path\n          name: retention_policy_id\n          required: true\n          schema:\n            type: string\n        - description: The type of the retention policy assignment to retrieve.\n          example: folder\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - folder\n              - enterprise\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicyAssignments\"\n          description: \u003e-\n            Returns a list of the retention policy assignments associated with\n            the\n\n            specified retention policy.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if an unknown `type` is specified.\n      summary: List policy's assignments\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  /retention_policy_assignments:\n    post:\n      description: Assigns a retention policy to an item.\n      operationId: post_retention_policy_assignments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                assign_to:\n                  description: The item to assign the policy to\n                  properties:\n                    id:\n                      description: |-\n                        The ID of item to assign the policy to.\n\n                        Set to `null` or omit when `type` is set to\n                        `enterprise`.\n                      example: \"6564564\"\n                      type: string\n                    type:\n                      description: The type of item to assign the policy to.\n                      enum:\n                        - enterprise\n                        - folder\n                        - metadata_template\n                      example: folder\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                policy_id:\n                  description: The ID of the retention policy to assign\n                  example: \"173463\"\n                  type: string\n              required:\n                - policy_id\n                - assign_to\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicyAssignment\"\n          description: Returns a new retention policy assignment object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if an `id` is specified while assigning a the\n            retention policy to an enterprise.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if no retention policy with the given `policy_id`\n            exists.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            Returns an error if a retention policy of equal or greater length\n            has\n\n            already been assigned to this item.\n      summary: Assign retention policy\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  \"/retention_policy_assignments/{retention_policy_assignment_id}\":\n    get:\n      description: Retrieves a retention policy assignment\n      operationId: get_retention_policy_assignments_id\n      parameters:\n        - description: The ID of the retention policy assignment.\n          example: \"1233123\"\n          in: path\n          name: retention_policy_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/RetentionPolicyAssignment\"\n          description: Returns the retention policy assignment object.\n      summary: Get policy assignment\n      tags:\n        - Retention Policies\n      x-box-reference-category: retention_policies\n  /search:\n    get:\n      description: Searches for items that are available to the user or an entire\n        enterprise.\n      operationId: get_search\n      parameters:\n        - description: |-\n            The string to search for. This query is matched against item names,\n            descriptions, text content of files, and various other fields of\n            the different item types.\n          example: sales\n          in: query\n          name: query\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Limits search results to a user scope.\n\n            Defaults to `user_content` which limits the search to content\n            available to the current user\n\n            Setting this to `enterprise_content` widens the search to content\n            available to the entire enterprise. To enable this scope for an\n            administrator, please reach out to support.\n          example: user_content\n          in: query\n          name: scope\n          required: false\n          schema:\n            enum:\n              - user_content\n              - enterprise_content\n            type: string\n        - description: |-\n            Limits search results to a comma-separated list of\n            file extensions.\n          example: pdf,png,gif\n          in: query\n          name: file_extensions\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Limits search results to items created within\n            a given date range.\n\n            Date ranges are defined as comma separated RFC3339\n            timestamps.\n\n            If the she start date is omitted (`\",[end_date]\"`) the\n            earliest known date will be used as the start date instead.\n\n            If the end date is omitted (`\"[start_date],\"`) the current\n            date will be used as the end date instead.\n          example: 2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00\n          in: query\n          name: created_at_range\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Limits search results to items updated within\n            a given date range.\n\n            Date ranges are defined as comma separated RFC3339\n            timestamps.\n\n            If the she start date is omitted (`\",[end_date]\"`) the\n            earliest known date will be used as the start date instead.\n\n            If the end date is omitted (`\"[start_date],\"`) the current\n            date will be used as the end date instead.\n          example: 2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00\n          in: query\n          name: updated_at_range\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Limits search results to items within a given file size\n            range.\n\n            File size ranges are defined as comma separated byte sizes.\n\n            The upper and lower bound can be omitted to create open ranges.\n          example: 1000000,5000000\n          in: query\n          name: size_range\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Limits search results to items owned\n            by the given list of owners.\n\n            Owners are defined as a comma separated list of user IDs.\n          example: 123422,23532,3241212\n          in: query\n          name: owner_user_ids\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Limits search results to items within the given\n            list of folders.\n\n            Folders are defined as a comma separated lists\n            of folder IDs.\n\n            Search results will also include items within subfolders.\n          example: 4535234,234123235,2654345\n          in: query\n          name: ancestor_folder_ids\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Limits search results to items with the given\n            content types.\n\n            Content types are defined as a comma separated lists\n            of Box recognized content types.\n\n            Available content types are:\n\n            * `name`\n            * `description`\n            * `file_content`\n            * `comments`\n            * `tags\n          example: name,description\n          in: query\n          name: content_types\n          required: false\n          schema:\n            type: string\n        - description: Limits search results to items of this type.\n          example: file\n          in: query\n          name: type\n          required: false\n          schema:\n            enum:\n              - file\n              - folder\n              - web_link\n            type: string\n        - description: |-\n            Controls if search results include the trash.\n\n            Defaults to `non_trashed_only`\n          example: non_trashed_only\n          in: query\n          name: trash_content\n          required: false\n          schema:\n            enum:\n              - non_trashed_only\n              - trashed_only\n            type: string\n        - description: |-\n            Limits search results to items that match the\n            metadata template name and content.\n          example:\n            - filters:\n                documentType: datasheet\n              scope: enterprise\n              templateKey: marketingCollateral\n          in: query\n          name: mdfilters\n          required: false\n          schema:\n            items:\n              $ref: \"#/components/schemas/MetadataFilter\"\n            type: array\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Items\"\n          description: |-\n            Returns a collection of search results. If there are no matching\n            search results, the `entries` array will be empty.\n      summary: Search for content\n      tags:\n        - Search\n      x-box-reference-category: search\n  /shared_items:\n    get:\n      description: \u003e-\n        Return the file or folder represented by a shared link.\n\n\n        Shared items are any files or folders that are represented by a shared link,\n\n        which can originate within the current enterprise or within another one.\n\n\n        This endpoint allows an application to retrieve information about a\n\n        shared item when only given a shared link.\n      operationId: get_shared_items\n      parameters:\n        - description: |-\n            A header containing the shared link and optional password for the\n            shared link.\n\n            The format for this header is as follows.\n\n            `shared_link=[link]\u0026shared_link_password=[password]`\n          example: |-\n            shared_link=https://cloud.box.com/shared/static/gjasdasjhasd\u0026\\\n            shared_link_password=letmein\n          in: header\n          name: BoxApi\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Item\"\n          description: |-\n            Returns a full file or folder object if the shared link is valid and\n            the user has access to it.\n      summary: Find item for shared link\n      tags:\n        - Shared Links\n      x-box-reference-category: shared_links\n  \"/skill_invocations/{skill_invocation_id}\":\n    put:\n      description: |-\n        Updates the status, usage and response metadata of a\n        skill invocation.\n      operationId: put_skill_invocations_id\n      parameters:\n        - description: The ID of the skill invocation.\n          example: \"33243242\"\n          in: path\n          name: skill_invocation_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                file:\n                  description: The file to assign this metadata to\n                  properties:\n                    id:\n                      description: The ID of the file\n                      example: \"3243244\"\n                      type: string\n                    type:\n                      description: \"`file`\"\n                      enum:\n                        - file\n                      example: file\n                      type: string\n                  type: object\n                file_version:\n                  description: The file version to assign this metadata to\n                  properties:\n                    id:\n                      description: The ID of the file version\n                      example: \"3\"\n                      type: string\n                    type:\n                      description: \"`file_version`\"\n                      enum:\n                        - file_version\n                      example: file_version\n                      type: string\n                  type: object\n                metadata:\n                  description: The metadata to set for this skill\n                  properties:\n                    cards:\n                      description: The metadata cards to set on the file.\n                      items:\n                        $ref: \"#/components/schemas/MetadataCard\"\n                      type: array\n                  type: object\n                status:\n                  description: Sets the status of the skill invocation.\n                  enum:\n                    - invoked\n                    - processing\n                    - success\n                    - transient_failure\n                    - permanent_failure\n                  example: success\n                  type: string\n              required:\n                - status\n                - metadata\n                - file\n      responses:\n        \"200\":\n          description: Returns an empty response.\n      summary: Update skill invocation\n      tags:\n        - Skills\n      x-box-reference-category: skills\n  /storage_policies:\n    get:\n      description: Fetches all the storage policies in the enterprise.\n      operationId: get_storage_policies\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StoragePolicies\"\n          description: Returns a collection of storage policies.\n      summary: List storage policies\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n  \"/storage_policies/{storage_policy_id}\":\n    get:\n      description: Fetches a specific storage policy.\n      operationId: get_storage_policies_id\n      parameters:\n        - description: The ID of the storage policy.\n          example: \"34342\"\n          in: path\n          name: storage_policy_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StoragePolicy\"\n          description: Returns a storage policy object.\n      summary: Get storage policy\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n  /storage_policy_assignments:\n    get:\n      description: Fetches all the storage policy assignment for an enterprise or user.\n      operationId: get_storage_policy_assignments\n      parameters:\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The target type to return assignments for\n          example: user\n          in: query\n          name: resolved_for_type\n          required: true\n          schema:\n            enum:\n              - user\n              - enterprise\n            type: string\n        - description: The ID of the user or enterprise to return assignments for\n          example: \"984322\"\n          in: query\n          name: resolved_for_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StoragePolicyAssignments\"\n          description: |-\n            Returns a collection of storage policies for\n            the enterprise or user.\n      summary: List policy assignments\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n    post:\n      description: Creates a storage policy assignment for an enterprise or user.\n      operationId: post_storage_policy_assignments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                assigned_to:\n                  description: |-\n                    The user or enterprise to assign the storage\n                    policy to.\n                  properties:\n                    id:\n                      description: The ID of the user or enterprise\n                      example: \"9987987\"\n                      type: string\n                    type:\n                      description: The type to assign the policy to.\n                      enum:\n                        - user\n                        - enterprise\n                      example: user\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n                storage_policy:\n                  description: |-\n                    The storage policy to assign to the user or\n                    enterprise\n                  properties:\n                    id:\n                      description: The ID of the storage policy to assign.\n                      example: \"1434325\"\n                      type: string\n                    type:\n                      description: The type to assign.\n                      enum:\n                        - storage_policy\n                      example: storage_policy\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n              required:\n                - storage_policy\n                - assigned_to\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StoragePolicyAssignment\"\n          description: Returns the new storage policy assignment created.\n      summary: Assign storage policy\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n  \"/storage_policy_assignments/{storage_policy_assignment_id}\":\n    delete:\n      description: |-\n        Delete a storage policy assignment.\n\n        Deleting a storage policy assignment on a user\n        will have the user inherit the enterprise's default\n        storage policy.\n\n        There is a rate limit for calling this endpoint of only\n        twice per user in a 24 hour period.\n      operationId: delete_storage_policy_assignments_id\n      parameters:\n        - description: The ID of the storage policy assignment.\n          example: \"932483\"\n          in: path\n          name: storage_policy_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the storage policy\n            assignment is successfully deleted.\n      summary: Unassign storage policy\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n    get:\n      description: Fetches a specific storage policy assignment.\n      operationId: get_storage_policy_assignments_id\n      parameters:\n        - description: The ID of the storage policy assignment.\n          example: \"932483\"\n          in: path\n          name: storage_policy_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StoragePolicyAssignment\"\n          description: Returns a storage policy assignment object.\n      summary: Get policy assignment\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n    put:\n      description: Updates a specific storage policy assignment.\n      operationId: put_storage_policy_assignments_id\n      parameters:\n        - description: The ID of the storage policy assignment.\n          example: \"932483\"\n          in: path\n          name: storage_policy_assignment_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                storage_policy:\n                  description: |-\n                    The storage policy to assign to the user or\n                    enterprise\n                  properties:\n                    id:\n                      description: The ID of the storage policy to assign.\n                      example: \"1434325\"\n                      type: string\n                    type:\n                      description: The type to assign.\n                      enum:\n                        - storage_policy\n                      example: storage_policy\n                      type: string\n                  required:\n                    - type\n                    - id\n                  type: object\n              required:\n                - storage_policy\n                - assigned_to\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StoragePolicyAssignment\"\n          description: Returns an updated storage policy assignment object.\n      summary: Update policy assignment\n      tags:\n        - Multi Zones\n      x-box-reference-category: multizones\n  /task_assignments:\n    post:\n      description: |-\n        Assigns a task to a user.\n\n        Multiple assignments to different users\n        are allowed per task.\n      operationId: post_task_assignments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                assign_to:\n                  description: The user to assign the task to.\n                  properties:\n                    id:\n                      description: |-\n                        The ID of the user to assign to the\n                        task.\n\n                        To specify a user by their email\n                        address use the `login` parameter.\n                      example: \"3242343\"\n                      type: string\n                    login:\n                      description: \u003e-\n                        The email address of the user to assign to the task.\n\n                        To specify a user by their user ID please use the `id` parameter.\n                      example: john@example.com\n                      type: string\n                  type: object\n                task:\n                  description: The task to assign to a user.\n                  properties:\n                    id:\n                      description: The ID of the task\n                      example: \"11446498\"\n                      type: string\n                    type:\n                      description: The type of the item to assign.\n                      enum:\n                        - task\n                      example: task\n                      type: string\n                  required:\n                    - id\n                    - type\n                  type: object\n              required:\n                - task\n                - assign_to\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskAssignment\"\n          description: Returns a new task assignment object.\n      summary: Assign task\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n  \"/task_assignments/{task_assignment_id}\":\n    delete:\n      description: Deletes a specific task assignment.\n      operationId: delete_task_assignments_id\n      parameters:\n        - description: The ID of the task assignment.\n          example: \"12345\"\n          in: path\n          name: task_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            An empty response will be returned when the task\n            assignment was successfully deleted.\n      summary: Unassign task\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n    get:\n      description: Fetches a specific task assignment.\n      operationId: get_task_assignments_id\n      parameters:\n        - description: The ID of the task assignment.\n          example: \"12345\"\n          in: path\n          name: task_assignment_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskAssignment\"\n          description: |-\n            Returns the requested task assignment, specifying who\n            the task has been assigned to and by whom.\n      summary: Get task assignment\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n    put:\n      description: |-\n        Updates a task assignment. This endpoint can be\n        used to update the state of a task.\n      operationId: put_task_assignments_id\n      parameters:\n        - description: The ID of the task assignment.\n          example: \"12345\"\n          in: path\n          name: task_assignment_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  description: A message from the assignee about this task\n                  example: Please review\n                  type: string\n                resolution_state:\n                  description: |-\n                    The state of the task. This can be used to\n                    mark the task as completed.\n                  enum:\n                    - completed\n                    - incomplete\n                    - approved\n                    - rejected\n                  example: completed\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskAssignment\"\n          description: Returns the updated task assignment object.\n      summary: Update task assignment\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n  /tasks:\n    post:\n      description: Creates a single task on a file.\n      operationId: post_tasks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: |-\n                    The action the task assignee will be prompted to complete.\n\n                    Currently only `review` is supported. This will provide the\n                    assigned user the ability to approve or reject the\n                    associated request.\n                  enum:\n                    - review\n                  example: review\n                  type: string\n                due_at:\n                  description: When the task is due\n                  example: 2012-12-12T10:53:43-08:00\n                  format: date-time\n                  type: string\n                item:\n                  description: The file to attach the task to.\n                  properties:\n                    id:\n                      description: The ID of the file\n                      example: \"11446498\"\n                      type: string\n                    type:\n                      description: The type of the item to attach this task to.\n                      enum:\n                        - file\n                      example: file\n                      type: string\n                  required:\n                    - id\n                    - type\n                  type: object\n                message:\n                  description: An optional message to include with the task\n                  example: Please review\n                  type: string\n              required:\n                - item\n                - action\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Returns a new task object\n      summary: Create task\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n  \"/tasks/{task_id}\":\n    delete:\n      description: Deletes a specific task.\n      operationId: delete_tasks_id\n      parameters:\n        - description: The ID of the task.\n          example: \"12345\"\n          in: path\n          name: task_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: An empty response will be returned when the task was successfully\n            deleted.\n      summary: Delete task\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n    get:\n      description: Fetches a specific task.\n      operationId: get_tasks_id\n      parameters:\n        - description: The ID of the task.\n          example: \"12345\"\n          in: path\n          name: task_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Returns a task object.\n      summary: Get task\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n    put:\n      description: Updates a specific task.\n      operationId: put_tasks_id\n      parameters:\n        - description: The ID of the task.\n          example: \"12345\"\n          in: path\n          name: task_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                action:\n                  description: |-\n                    The action the task assignee will be prompted to complete.\n\n                    Currently only `review` is supported. This will provide the\n                    assigned user the ability to approve or reject the\n                    associated request.\n                  enum:\n                    - review\n                  example: review\n                  type: string\n                due_at:\n                  description: When the task is due\n                  example: 2012-12-12T10:53:43-08:00\n                  format: date-time\n                  type: string\n                message:\n                  description: The message included with the task\n                  example: Please review\n                  type: string\n              required:\n                - item\n                - action\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Returns the updated task object\n      summary: Update task\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n  \"/tasks/{task_id}/assignments\":\n    get:\n      description: Retrieves all of the assignments for a given task.\n      operationId: get_tasks_id_assignments\n      parameters:\n        - description: The ID of the task.\n          example: \"12345\"\n          in: path\n          name: task_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TaskAssignments\"\n          description: |-\n            Returns a collection of task assignment specifying what task on\n            a file has been assigned to which users and by who.\n      summary: List task's assignments\n      tags:\n        - Tasks\n      x-box-reference-category: tasks\n  /terms_of_service_user_statuses:\n    get:\n      description: |-\n        Retrieves an overview of users and their status for a\n        terms of service, including Whether they have accepted\n        the terms and when.\n      operationId: get_terms_of_service_user_statuses\n      parameters:\n        - description: The ID of the terms of service.\n          example: \"324234\"\n          in: query\n          name: tos_id\n          required: true\n          schema:\n            type: string\n        - description: Limits results to the given user ID.\n          example: \"123334\"\n          in: query\n          name: user_id\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermsOfServiceUserStatuses\"\n          description: Returns a list of terms of service statuses.\n      summary: List ToS user statuses\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n    post:\n      description: Sets the status for a terms of service for a user.\n      operationId: post_terms_of_service_user_statuses\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                is_accepted:\n                  description: Whether the user has accepted the terms.\n                  example: true\n                  type: boolean\n                tos:\n                  description: The terms of service to set the status for.\n                  properties:\n                    id:\n                      description: The ID of terms of service\n                      example: \"1232132\"\n                      type: string\n                    type:\n                      description: The type of object.\n                      enum:\n                        - terms_of_service\n                      example: terms_of_service\n                      type: string\n                  required:\n                    - id\n                    - type\n                  type: object\n                user:\n                  description: The user to set the status for.\n                  properties:\n                    id:\n                      description: The ID of user\n                      example: \"3423423\"\n                      type: string\n                    type:\n                      description: The type of object.\n                      enum:\n                        - user\n                      example: user\n                      type: string\n                  required:\n                    - id\n                    - type\n                  type: object\n              required:\n                - tos\n                - user\n                - is_accepted\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermsOfServiceUserStatus\"\n          description: Returns a terms of service status object.\n      summary: Set status for new user\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n  \"/terms_of_service_user_statuses/{terms_of_service_user_status_id}\":\n    put:\n      description: Updates the status for a terms of service for a user.\n      operationId: put_terms_of_service_user_statuses_id\n      parameters:\n        - description: The ID of the terms of service status.\n          example: \"324234\"\n          in: path\n          name: terms_of_service_user_status_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                is_accepted:\n                  description: Whether the user has accepted the terms.\n                  example: true\n                  type: boolean\n              required:\n                - is_accepted\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermsOfServiceUserStatus\"\n          description: Returns the updated terms of service status object.\n      summary: Set status for existing user\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n  /terms_of_services:\n    get:\n      description: |-\n        Returns the current terms of service text and settings\n        for the enterprise.\n      operationId: get_terms_of_services\n      parameters:\n        - description: Limits the results to the terms of service of the given type.\n          example: managed\n          in: query\n          name: tos_type\n          required: false\n          schema:\n            enum:\n              - external\n              - managed\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermsOfServices\"\n          description: |-\n            Returns a collection of terms of service text and settings for the\n            enterprise.\n      summary: List terms of services\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n    post:\n      description: |-\n        Creates a terms of service for a given enterprise\n        and type of user.\n      operationId: post_terms_of_services\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                status:\n                  description: Whether this terms of service is active.\n                  enum:\n                    - enabled\n                    - disabled\n                  example: enabled\n                  type: string\n                text:\n                  description: \u003e-\n                    The terms of service text to display to users.\n\n\n                    The text can be set to empty if the `status` is set to `disabled`.\n                  example: By collaborating on this file you are accepting...\n                  type: string\n                tos_type:\n                  description: |-\n                    The type of user to set the terms of\n                    service for.\n                  enum:\n                    - external\n                    - managed\n                  example: managed\n                  type: string\n              required:\n                - status\n                - action\n                - text\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Task\"\n          description: Returns a new task object\n      summary: Create terms of service\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n  \"/terms_of_services/{terms_of_service_id}\":\n    get:\n      description: Fetches a specific terms of service.\n      operationId: get_terms_of_services_id\n      parameters:\n        - description: The ID of the terms of service.\n          example: \"324234\"\n          in: path\n          name: terms_of_service_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermsOfService\"\n          description: Returns a terms of service object.\n      summary: Get terms of service\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n    put:\n      description: Updates a specific terms of service.\n      operationId: put_terms_of_services_id\n      parameters:\n        - description: The ID of the terms of service.\n          example: \"324234\"\n          in: path\n          name: terms_of_service_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                status:\n                  description: Whether this terms of service is active.\n                  enum:\n                    - enabled\n                    - disabled\n                  example: enabled\n                  type: string\n                text:\n                  description: \u003e-\n                    The terms of service text to display to users.\n\n\n                    The text can be set to empty if the `status` is set to `disabled`.\n                  example: By collaborating on this file you are accepting...\n                  type: string\n              required:\n                - status\n                - action\n                - text\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TermsOfService\"\n          description: Returns an updated terms of service object.\n      summary: Update terms of service\n      tags:\n        - Terms of Service\n      x-box-reference-category: terms_of_services\n  /users:\n    get:\n      description: |-\n        Returns a list of all users for the Enterprise along with their user_id,\n        public_name, and login.\n\n        The application and the authenticated user need to\n        have the permission to look up users in the entire\n        enterprise.\n      operationId: get_users\n      parameters:\n        - description: |-\n            Limits the results to only users who's `name` or\n            `login` start with the search term.\n\n            For externally managed users, the search term needs\n            to completely match in order to find the user.\n          example: john\n          in: query\n          name: filter_term\n          required: false\n          schema:\n            type: string\n        - description: Limits the results to the kind  of user specified.\n          example: managed\n          in: query\n          name: user_type\n          required: false\n          schema:\n            enum:\n              - all\n              - external\n              - managed\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Users\"\n          description: Returns all of the users in the enterprise.\n      summary: List enterprise users\n      tags:\n        - Users\n      x-box-reference-category: users\n    post:\n      description: |-\n        Creates a new managed user in an enterprise. This endpoint\n        is only available to users and applications with the right\n        admin permissions.\n      operationId: post_users\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: The user’s address\n                  example: 900 Jefferson Ave, Redwood City, CA 94063\n                  maxLength: 255\n                  type: string\n                can_see_managed_users:\n                  description: |-\n                    Whether the user can see other enterprise users in their\n                    contact list\n                  example: true\n                  type: boolean\n                is_exempt_from_device_limits:\n                  description: Whether to exempt the user from enterprise device limits\n                  example: true\n                  type: boolean\n                is_exempt_from_login_verification:\n                  description: Whether the user must use two-factor authentication\n                  example: true\n                  type: boolean\n                is_external_collab_restricted:\n                  description: \u003e-\n                    Whether the user is allowed to collaborate with users\n                    outside her\n\n                    enterprise\n                  example: true\n                  type: boolean\n                is_platform_access_only:\n                  description: Specifies that the user is an app user.\n                  example: true\n                  type: boolean\n                is_sync_enabled:\n                  description: Whether the user can use Box Sync\n                  example: true\n                  type: boolean\n                job_title:\n                  description: The user’s job title\n                  example: CEO\n                  maxLength: 100\n                  type: string\n                language:\n                  description: \u003e-\n                    The language of the user, formatted in modified version of\n                    the\n\n                    [ISO 639-1][1] format.\n\n\n                    [1]: https://developer.box.com/docs/api-language-codes\n                  example: en\n                  format: ISO639-1-BOX\n                  type: string\n                login:\n                  description: |-\n                    The email address the user uses to log in\n\n                    Required, unless `is_platform_access_only`\n                    is set to `true`.\n                  example: boss@box.com\n                  type: string\n                name:\n                  description: The name of the user\n                  example: Aaron Levie\n                  maxLength: 50\n                  type: string\n                phone:\n                  description: The user’s phone number\n                  example: \"6509241374\"\n                  maxLength: 100\n                  type: string\n                role:\n                  description: The user’s enterprise role\n                  enum:\n                    - coadmin\n                    - user\n                  example: user\n                  type: string\n                space_amount:\n                  description: The user’s total available space in bytes\n                  example: 11345156112\n                  type: integer\n                status:\n                  description: The user's account status\n                  enum:\n                    - active\n                    - inactive\n                    - cannot_delete_edit\n                    - cannot_delete_edit_upload\n                  example: active\n                  type: string\n                timezone:\n                  description: The user's timezone\n                  example: Africa/Bujumbura\n                  format: timezone\n                  type: string\n                tracking_codes:\n                  description: An array of key/value pairs set by the user’s admin\n                  example:\n                    - \"code1: 12345\"\n                  items:\n                    type: string\n                  type: array\n              required:\n                - name\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Returns a user object for the newly created user.\n      summary: Create user\n      tags:\n        - Users\n      x-box-reference-category: users\n  /users/me:\n    get:\n      description: \u003e-\n        Retrieves information about the user who is currently authenticated.\n\n\n        In the case of a 3-legged OAuth2, client-side authenticated application\n\n        this will be the user who authorized the app.\n\n\n        In the case of a JWT, server-side authenticated application\n\n        this will be the service account that belongs to the application\n\n        by default.\n\n\n        Use the `As-User` header to change who this API call is made on behalf of.\n      operationId: get_users_me\n      parameters:\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Returns a single user object.\n      summary: Get authenticated user\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/users/{user_id}\":\n    delete:\n      description: |-\n        Deletes a user. By default this will fail if the user\n        still owns any content. Move their owned content first\n        before proceeding, or use the `force` field to delete\n        the user and their files.\n      operationId: delete_users_id\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            Whether the user will receive email notification of\n            the deletion\n          example: true\n          in: query\n          name: notify\n          schema:\n            type: boolean\n        - description: |-\n            Whether the user should be deleted even if this user\n            still own files\n          example: true\n          in: query\n          name: force\n          schema:\n            type: boolean\n      responses:\n        \"204\":\n          description: Removes the user and returns an empty response.\n      summary: Delete user\n      tags:\n        - Users\n      x-box-reference-category: users\n    get:\n      description: |-\n        Retrieves information about a user in the enterprise.\n\n        The application and the authenticated user need to\n        have the permission to look up users in the entire\n        enterprise.\n\n        This endpoint also returns a limited set of information\n        for external users who are collaborated on content\n        owned by the enterprise for authenticated users with the\n        right scopes. In this case, disallowed fields will return\n        null instead.\n      operationId: get_users_id\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: |-\n            Returns a single user object.\n\n            [Some fields are optional](#user) and need to be explicitly\n            requested using the [fields](#get-users-id--request--fields)\n            parameter.\n      summary: Get user\n      tags:\n        - Users\n      x-box-reference-category: users\n    put:\n      description: |-\n        Updates a managed user in an enterprise. This endpoint\n        is only available to users and applications with the right\n        admin permissions.\n      operationId: put_users_id\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: The user’s address\n                  example: 900 Jefferson Ave, Redwood City, CA 94063\n                  maxLength: 255\n                  type: string\n                can_see_managed_users:\n                  description: |-\n                    Whether the user can see other enterprise users in their\n                    contact list\n                  example: true\n                  type: boolean\n                enterprise:\n                  description: |-\n                    Set this to `null` to roll the user out of the enterprise\n                    and make them a free user\n                  example: null\n                  type: string\n                is_exempt_from_device_limits:\n                  description: Whether to exempt the user from enterprise device limits\n                  example: true\n                  type: boolean\n                is_exempt_from_login_verification:\n                  description: Whether the user must use two-factor authentication\n                  example: true\n                  type: boolean\n                is_external_collab_restricted:\n                  description: \u003e-\n                    Whether the user is allowed to collaborate with users\n                    outside her\n\n                    enterprise\n                  example: true\n                  type: boolean\n                is_password_reset_required:\n                  description: Whether the user is required to reset their password\n                  example: true\n                  type: boolean\n                is_sync_enabled:\n                  description: Whether the user can use Box Sync\n                  example: true\n                  type: boolean\n                job_title:\n                  description: The user’s job title\n                  example: CEO\n                  maxLength: 100\n                  type: string\n                language:\n                  description: \u003e-\n                    The language of the user, formatted in modified version of\n                    the\n\n                    [ISO 639-1][1] format.\n\n\n                    [1]: https://developer.box.com/docs/api-language-codes\n                  example: en\n                  format: ISO639-1-BOX\n                  type: string\n                login:\n                  description: The email address the user uses to log in\n                  example: boss@box.com\n                  type: string\n                name:\n                  description: The name of the user\n                  example: Aaron Levie\n                  maxLength: 50\n                  type: string\n                notify:\n                  description: |-\n                    Whether the user should receive an email when they\n                    are rolled out of an enterprise\n                  example: true\n                  type: boolean\n                phone:\n                  description: The user’s phone number\n                  example: \"6509241374\"\n                  maxLength: 100\n                  type: string\n                role:\n                  description: The user’s enterprise role\n                  enum:\n                    - coadmin\n                    - user\n                  example: user\n                  type: string\n                status:\n                  description: The user's account status\n                  enum:\n                    - active\n                    - inactive\n                    - cannot_delete_edit\n                    - cannot_delete_edit_upload\n                  example: active\n                  type: string\n                timezone:\n                  description: The user's timezone\n                  example: Africa/Bujumbura\n                  format: timezone\n                  type: string\n                tracking_codes:\n                  description: An array of key/value pairs set by the user’s admin\n                  example:\n                    - \"code1: 12345\"\n                  items:\n                    type: string\n                  type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n          description: Returns the updated user object.\n      summary: Update user\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/users/{user_id}/avatar\":\n    get:\n      description: Retrieves an image of a the user's avatar.\n      operationId: get_users_id_avatar\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            image/jpg:\n              schema:\n                description: The avatar\n                format: binary\n                type: string\n          description: |-\n            When an avatar can be found for the user the\n            image data will be returned in the body of the\n            response.\n      summary: Get user avatar\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/users/{user_id}/email_aliases\":\n    get:\n      description: |-\n        Retrieves all email aliases for a user. The collection\n        does not include the primary login for the user.\n      operationId: get_users_id_email_aliases\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmailAliases\"\n          description: Returns a collection of email aliases.\n      summary: List user's email aliases\n      tags:\n        - Users\n      x-box-reference-category: users\n    post:\n      description: Adds a new email alias to a user account..\n      operationId: post_users_id_email_aliases\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                email:\n                  description: The email address to add to the account as an alias.\n                  example: alias@example.com\n                  type: string\n              required:\n                - email\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/EmailAlias\"\n          description: Returns the newly created email alias object.\n      summary: Create email alias\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/users/{user_id}/email_aliases/{email_alias_id}\":\n    delete:\n      description: Removes an email alias from a user.\n      operationId: delete_users_id_email_aliases_id\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: The ID of the email alias.\n          example: \"23432\"\n          in: path\n          name: email_alias_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: Removes the alias and returns an empty response.\n      summary: Remove email alias\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/users/{user_id}/folders/{folder_id}\":\n    put:\n      description: \u003e-\n        Move all of the items owned by a user into a\n\n        new folder in another user’s account.\n\n\n        Only the root folder (`0`) can be transferred.\n\n\n        Folders can only be moved across users by users with administrative\n\n        permissions.\n\n\n        This call will be performed synchronously which might lead to a slow response\n\n        when the source user has a large number of items in all of its folders.\n\n\n        If the destination path has a metadata cascade policy attached to any of\n\n        the parent folders, a metadata cascade operation will be kicked off\n\n        asynchronously.\n\n\n        There is currently no way to check for when this operation is finished.\n      operationId: put_users_id_folders_id\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            The ID of the folder.\n\n            The root folder of a Box account is\n            always represented by the id `\"0\"`.\n          example: \"12345\"\n          in: path\n          name: folder_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n        - description: |-\n            Determines if users should receive email notification\n            for the action performed.\n          example: true\n          in: query\n          name: notify\n          required: false\n          schema:\n            type: boolean\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                enterprise:\n                  description: The user who the folder will be transferred to\n                  properties:\n                    id:\n                      description: |-\n                        The ID of the user who the folder will be\n                        transferred to\n                      example: \"1232234\"\n                      type: string\n                  required:\n                    - id\n                  type: object\n              required:\n                - owned_by\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: |-\n            Returns the information for the newly created\n            destination folder.\n      summary: Transfer owned folders\n      tags:\n        - Users\n      x-box-reference-category: users\n  \"/users/{user_id}/memberships\":\n    get:\n      description: |-\n        Retrieves all the groups for a user. The user making\n        an API call must have admin permissions to inspect the\n        enterprise's groups.\n      operationId: get_users_id_memberships\n      parameters:\n        - description: The ID of the user.\n          example: \"12345\"\n          in: path\n          name: user_id\n          required: true\n          schema:\n            type: string\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n        - description: The offset of the item at which to begin the response.\n          example: 1000\n          in: query\n          name: offset\n          required: false\n          schema:\n            default: 0\n            format: int64\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GroupMemberships\"\n          description: |-\n            Returns a collection of membership objects. If there are no\n            memberships, an empty collection will be returned.\n      summary: List user's groups\n      tags:\n        - Groups\n      x-box-reference-category: groups\n  /web_links:\n    post:\n      description: Creates a web link object within a folder.\n      operationId: post_web_links\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: Description of the web link.\n                  example: Cloud Content Management\n                  type: string\n                name:\n                  description: Name of the web link. Defaults to the URL if not set.\n                  example: Box Website\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: The parent folder to put the web link in\n                url:\n                  description: |-\n                    The URL that this web link links to. Must start with\n                    `\"http://\"` or `\"https://\"`.\n                  example: https://box.com\n                  type: string\n              required:\n                - parent\n                - url\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebLink\"\n          description: Returns the newly created web link object.\n      summary: Create web link\n      tags:\n        - Web Links\n      x-box-reference-category: web_links\n  \"/web_links/{web_link_id}\":\n    delete:\n      description: Deletes a web link.\n      operationId: delete_web_links_id\n      parameters:\n        - description: The ID of the web link.\n          example: \"12345\"\n          in: path\n          name: web_link_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            An empty response will be returned when the web link\n            was successfully deleted.\n      summary: Delete web link\n      tags:\n        - Web Links\n      x-box-reference-category: web_links\n    get:\n      description: Retrieve information about a web link.\n      operationId: get_web_links_id\n      parameters:\n        - description: The ID of the web link.\n          example: \"12345\"\n          in: path\n          name: web_link_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebLink\"\n          description: Returns the web link object.\n      summary: Get web link\n      tags:\n        - Web Links\n      x-box-reference-category: web_links\n    post:\n      description: Restores an web link that has been moved to the trash.\n      operationId: post_web_links_id\n      parameters:\n        - description: The ID of the web link.\n          example: \"12345\"\n          in: path\n          name: web_link_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                name:\n                  description: An optional new name for the web link.\n                  example: Restored.docx\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: |-\n                        The optional parent folder that the web link will\n                        be restored to.\n\n                        Use this if the original parent folder no longer\n                        exists, or the user no longer has access to the\n                        original parent folder.\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebLink\"\n          description: Returns a web link object when it has been restored.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: \u003e-\n            Returns an error if the user does not have access to the folder\n\n            the web link is being restored to, or the user does not have permission\n\n            to restore web link from the trash.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the web link is not in the trash.\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if there is an web link with the same name\n            in the folder the web link is being restored to.\n      summary: Restore web link\n      tags:\n        - Trash\n        - Web Links\n      x-box-reference-category: trash\n    put:\n      description: Updates a web link object.\n      operationId: put_web_links_id\n      parameters:\n        - description: The ID of the web link.\n          example: \"12345\"\n          in: path\n          name: web_link_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                description:\n                  description: A new description of the web link.\n                  example: Cloud Content Management\n                  type: string\n                name:\n                  description: A new name for the web link. Defaults to the URL if not set.\n                  example: Box Website\n                  type: string\n                parent:\n                  allOf:\n                    - $ref: \"#/components/schemas/Parent\"\n                    - description: |-\n                        The new parent folder to put the web link in.\n                        Use this to move the web link to a different folder.\n                url:\n                  description: |-\n                    The new URL that the web link links to. Must start with\n                    `\"http://\"` or `\"https://\"`.\n                  example: https://box.com\n                  type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/WebLink\"\n          description: Returns the updated web link object.\n      summary: Update web link\n      tags:\n        - Web Links\n      x-box-reference-category: web_links\n  \"/web_links/{web_link_id}/trash\":\n    delete:\n      description: |-\n        Permanently deletes a web link that is in the trash.\n        This action cannot be undone.\n      operationId: delete_web_links_id_trash\n      parameters:\n        - description: The ID of the web link.\n          example: \"12345\"\n          in: path\n          name: web_link_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            Returns an empty response when the web link was\n            permanently deleted.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the web link is not in the trash.\n      summary: Permanently delete web link\n      tags:\n        - Folders\n        - Trash\n      x-box-reference-category: trash\n    get:\n      description: Retrieves a web link that has been moved to the trash.\n      operationId: get_web_links_id_trash\n      parameters:\n        - description: The ID of the web link.\n          example: \"12345\"\n          in: path\n          name: web_link_id\n          required: true\n          schema:\n            type: string\n        - description: |-\n            A comma-separated list of attributes to include in the\n            response. This can be used to request fields that are\n            not normally returned in a standard response.\n          example: id,type,name\n          in: query\n          name: fields\n          required: false\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Folder\"\n          description: |-\n            Returns the web link that was trashed,\n            including information about when the it\n            was moved to the trash.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the web link is not in the trash.\n      summary: Get trashed web link\n      tags:\n        - Web Links\n        - Trash\n      x-box-reference-category: trash\n  /webhooks:\n    get:\n      description: Returns all defined webhooks for the requesting application.\n      operationId: get_webhooks\n      parameters:\n        - description: The position marker at which to begin the response.\n          example: 1234\n          in: query\n          name: marker\n          required: false\n          schema:\n            format: int64\n            type: integer\n        - description: The maximum number of items to return per page.\n          example: 1000\n          in: query\n          name: limit\n          required: false\n          schema:\n            default: 100\n            format: int64\n            maximum: 1000\n            type: integer\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Webhooks\"\n          description: Returns a list of webhooks.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the application does not\n            have the permission to manage webhooks.\n      summary: List all webhooks\n      tags:\n        - Webhooks\n      x-box-reference-category: webhooks\n    post:\n      description: Creates a webhook.\n      operationId: post_webhooks\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: The URL that is notified by this webhook\n                  example: https://example.com/webhooks\n                  type: string\n                target:\n                  description: The item that will trigger the webhook\n                  properties:\n                    id:\n                      description: The ID of the item to trigger a webhook\n                      example: \"1231232\"\n                      type: string\n                    type:\n                      description: The type of item to trigger a webhook\n                      enum:\n                        - file\n                        - folder\n                      example: file\n                      type: string\n                  type: object\n                triggers:\n                  description: |-\n                    An array of event names that this webhook is\n                    to be triggered for\n                  example:\n                    - FILE.UPLOADED\n                  items:\n                    $ref: \"#/components/schemas/WebhookTrigger\"\n                  type: array\n              required:\n                - target\n                - triggers\n                - address\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Webhook\"\n          description: Returns the new webhook object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the parameters were\n            incorrect.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the application does not\n            have the permission to manage webhooks.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the target item could\n            not be found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the a webhook for this\n            combination of target, application, and user\n            already exists.\n      summary: Create webhook\n      tags:\n        - Webhooks\n      x-box-reference-category: webhooks\n  \"/webhooks/{webhook_id}\":\n    delete:\n      description: Deletes a webhook.\n      operationId: delete_webhooks_id\n      parameters:\n        - description: The ID of the webhook.\n          example: \"3321123\"\n          in: path\n          name: webhook_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: |-\n            An empty response will be returned when the webhook\n            was successfully deleted.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the application does not\n            have the permission to manage webhooks.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the webhook could not be found\n      summary: Delete webhook\n      tags:\n        - Webhooks\n      x-box-reference-category: webhooks\n    get:\n      description: Retrieves a specific webhook\n      operationId: get_webhooks_id\n      parameters:\n        - description: The ID of the webhook.\n          example: \"3321123\"\n          in: path\n          name: webhook_id\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Webhook\"\n          description: Returns a webhook object\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the application does not\n            have the permission to manage webhooks.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: Returns an error if the webhook could not be found\n      summary: Get webhook\n      tags:\n        - Webhooks\n      x-box-reference-category: webhooks\n    put:\n      description: Updates a webhook.\n      operationId: put_webhooks_id\n      parameters:\n        - description: The ID of the webhook.\n          example: \"3321123\"\n          in: path\n          name: webhook_id\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              properties:\n                address:\n                  description: The URL that is notified by this webhook\n                  example: https://example.com/webhooks\n                  type: string\n                target:\n                  description: The item that will trigger the webhook\n                  properties:\n                    id:\n                      description: The ID of the item to trigger a webhook\n                      example: \"1231232\"\n                      type: string\n                    type:\n                      description: The type of item to trigger a webhook\n                      enum:\n                        - file\n                        - folder\n                      example: file\n                      type: string\n                  type: object\n                triggers:\n                  description: |-\n                    An array of event names that this webhook is\n                    to be triggered for\n                  example:\n                    - FILE.UPLOADED\n                  items:\n                    $ref: \"#/components/schemas/WebhookTrigger\"\n                  type: array\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Webhook\"\n          description: Returns the new webhook object.\n        \"400\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the parameters were\n            incorrect.\n        \"403\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the application does not\n            have the permission to manage webhooks.\n        \"404\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the target item or webhook\n            could not be found\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ClientError\"\n          description: |-\n            Returns an error if the a webhook for this\n            combination of target, application, and user\n            already exists.\n      summary: Update webhook\n      tags:\n        - Webhooks\n      x-box-reference-category: webhooks\ncomponents:\n  schemas:\n    AccessToken:\n      allOf:\n        - $ref: \"#/components/schemas/AccessToken--Mini\"\n        - properties:\n            issued_token_type:\n              description: |-\n                The type of downscoped access token returned. This is only\n                returned if an access token has been downscoped.\n              enum:\n                - urn:ietf:params:oauth:token-type:access_token\n              example: urn:ietf:params:oauth:token-type:access_token\n              format: urn\n              type: string\n            refresh_token:\n              description: |-\n                The refresh token for this access token, which can be used\n                to request a new access token when the current one expires.\n              example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\n              format: token\n              type: string\n      description: A token that can be used to make authenticated API calls.\n      x-box-reference-category: authorization\n      x-box-resource-display-name: Access Token\n      x-box-resource-id: access_token\n    AccessToken--Mini:\n      description: The basics of an access token\n      properties:\n        access_token:\n          description: The requested access token.\n          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\n          format: token\n          type: string\n        expires_in:\n          description: The time in seconds in seconds by which this token will expire.\n          example: 3600\n          format: int64\n          type: integer\n        restricted_to:\n          description: |-\n            The permissions that this access token permits,\n            providing a list of resources (files, folders, etc)\n            and the scopes permitted for each of those resources.\n          items:\n            $ref: \"#/components/schemas/FileScope\"\n          type: array\n        token_type:\n          description: The type of access token returned.\n          enum:\n            - bearer\n          example: bearer\n          type: string\n      x-box-reference-hide: true\n      x-box-resource-display-name: Access Token Mini\n      x-box-resource-id: access_token--mini\n    AssignmentCounts:\n      description: Counts of assignments within this a legal hold policy by item type\n      properties:\n        file:\n          description: The number of files this policy is applied to\n          example: 3\n          format: int64\n          type: integer\n        file_version:\n          description: The number of file versions this policy is applied to\n          example: 4\n          format: int64\n          type: integer\n        folder:\n          description: The number of folders this policy is applied to\n          example: 2\n          format: int64\n          type: integer\n        user:\n          description: The number of users this policy is applied to\n          example: 1\n          format: int64\n          type: integer\n      x-box-resource-display-name: Assignment Counts\n      x-box-resource-id: assignment_counts\n    ClientError:\n      description: A generic error\n      properties:\n        code:\n          description: A Box-specific error code\n          example: item_name_invalid\n          type: string\n        help_url:\n          description: A URL that links to more information about why the error occurred.\n          example: http://developers.box.com/docs/#errors\n          type: string\n        message:\n          description: A human-readable message describing the error.\n          example: Item name invalid\n          type: string\n        request_id:\n          description: |-\n            The unique ID for this request as can be used when contacting\n            Box support.\n          example: abcdef123456\n          type: string\n        status:\n          description: The HTTP status of the response.\n          example: 400\n          format: int32\n          type: integer\n        type:\n          description: Always `error`\n          enum:\n            - error\n          example: error\n          type: string\n      x-box-resource-display-name: Client Error\n      x-box-resource-id: client_error\n    Collaboration:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            acceptance_requirements:\n              allOf:\n                - $ref: \"#/components/schemas/TermsOfService--Mini\"\n                - description: The terms of service for the collaboration\n            accessible_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user or group that is granted access\n            acknowledged_at:\n              description: |-\n                When the `status` of the collaboration object changed to\n                `accepted` or `rejected`\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            can_view_path:\n              description: \u003e-\n                Whether the \"view path collaboration\" feature is enabled or not.\n                View\n\n                path collaborations allow the invitee to see the entire parent path to\n\n                the item. View path collaboration does not grant privileges in any\n\n                parent folder (e.g. cannot see content the user is not collaborated\n\n                on), other than the permission to view the parent path.\n              example: true\n              type: boolean\n            created_at:\n              description: When the collaboration object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created the collaboration object\n            expires_at:\n              description: When the collaboration will expire\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            invite_email:\n              description: \u003e-\n                The email address used to invite an unregistered collaborator,\n                if\n\n                they are not a registered user.\n              example: john@example.com\n              type: string\n            item:\n              allOf:\n                - $ref: \"#/components/schemas/Item\"\n                - description: The file or folder that access is granted to\n            modified_at:\n              description: When the collaboration object was last modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            role:\n              description: The level of access granted.\n              enum:\n                - editor\n                - viewer\n                - previewer\n                - uploader\n                - preview uploader\n                - viewer uploader\n                - co-owner\n                - owner\n              example: editor\n              type: string\n            status:\n              description: The status of the collaboration invitation.\n              enum:\n                - accepted\n                - pending\n                - rejected\n              example: accepted\n              type: string\n            type:\n              description: \"`collaboration`\"\n              enum:\n                - collaboration\n              example: collaboration\n              type: string\n      description: \u003e-\n        Collaborations define access permissions for users and groups to files\n        and\n\n        folders, similar to access control lists. A collaboration object grants a\n\n        user or group access to a file or folder with permissions defined by a\n\n        specific role.\n      x-box-reference-category: collaborations\n      x-box-resource-display-name: Collaboration\n      x-box-resource-id: collaboration\n    CollaborationWhitelistEntries:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/CollaborationWhitelistEntry\"\n              type: array\n      description: A list of collaboration whitelist entries.\n      x-box-resource-display-name: Collaboration Whitelist Entries\n      x-box-resource-id: collaboration_whitelist_entries\n    CollaborationWhitelistEntry:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time the whitelist entry was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            direction:\n              description: The direction of the collaborations to whitelist\n              enum:\n                - inbound\n                - outbound\n                - both\n              example: both\n              type: string\n            domain:\n              description: The whitelisted domain\n              example: example.com\n              type: string\n            enterprise:\n              allOf:\n                - $ref: \"#/components/schemas/Enterprise\"\n                - description: The enterprise this whitelist is applied to\n            type:\n              description: \"`collaboration_whitelist_entry`\"\n              enum:\n                - collaboration_whitelist_entry\n              example: collaboration_whitelist_entry\n              type: string\n      description: |-\n        A Collaboration Whitelist entry describes an\n        approved domains that can collaborate with your enterprise\n      x-box-reference-category: collaboration_whitelist\n      x-box-resource-display-name: Collaboration Whitelist Entry\n      x-box-resource-id: collaboration_whitelist_entry\n    CollaborationWhitelistExemptTarget:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time the entry was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            enterprise:\n              allOf:\n                - $ref: \"#/components/schemas/Enterprise\"\n                - description: The enterprise this entry belongs to\n            modified_at:\n              description: The time the entry was modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            type:\n              description: \"`collaboration_whitelist`\"\n              enum:\n                - collaboration_whitelist\n              example: collaboration_whitelist\n              type: string\n            user:\n              allOf:\n                - $ref: \"#/components/schemas/Enterprise\"\n                - description: The user that has been exempt\n      description: |-\n        The record that represents a target user that is exempt from the\n        collaboration whitelist.\n      x-box-reference-category: collaboration_whitelist\n      x-box-resource-display-name: Whitelist Exempt Target\n      x-box-resource-id: collaboration_whitelist_exempt_target\n    CollaborationWhitelistExemptTargets:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/CollaborationWhitelistExemptTarget\"\n              type: array\n      description: A list of collaboration whitelist exemptions.\n      x-box-resource-display-name: Whitelist Exempt Targets\n      x-box-resource-id: collaboration_whitelist_exempt_targets\n    Collaborations:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/Collaboration\"\n              type: array\n      description: A list of collaborations\n      x-box-resource-display-name: Collaborations\n      x-box-resource-id: collaborations\n    Collection:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            collection_type:\n              description: |-\n                The type of the collection. This is used to\n                determine the proper visual treatment for\n                collections. The only collection  type is `favorites`.\n              enum:\n                - favorites\n              example: favorites\n              type: string\n            name:\n              description: |-\n                The name of the collection. The only collection\n                available is named `Favorites`.\n              enum:\n                - Favorites\n              example: Favorites\n              type: string\n            type:\n              description: \"`collection`\"\n              enum:\n                - collection\n              example: collection\n              type: string\n      description: |-\n        A collection of items, including files and folders.\n\n        Currently, the only collection available\n        is the `favorites` collection.\n\n        The contents of a collection can be explored in a\n        similar way to which the contents of a folder is\n        explored.\n      x-box-reference-category: collections\n      x-box-resource-display-name: Collection\n      x-box-resource-id: collection\n    Collections:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/Collection\"\n              type: array\n      description: A list of collections\n      x-box-resource-display-name: Collections\n      x-box-resource-id: collections\n    Comment:\n      allOf:\n        - $ref: \"#/components/schemas/Comment--Standard\"\n        - properties:\n            tagged_message:\n              description: |-\n                The string representing the comment text with\n                @mentions included. @mention format is @[id:username]\n                where `id` is user's Box ID an username is\n                their display name.\n              example: \"@[1234567:Aaron Levie] these tigers are cool!\"\n              type: string\n      description: |-\n        Comments are messages created on files. Comments\n        can be made independently or created as responses to other\n        comments\n      type: object\n      x-box-reference-category: comments\n      x-box-resource-display-name: Comment\n      x-box-resource-id: comment\n    Comment--Standard:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time this comment was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: |-\n                    A mini user object representing the author of the\n                    comment\n            is_reply_comment:\n              description: |-\n                Whether or not this comment is a reply to another\n                comment\n              example: true\n              type: boolean\n            item:\n              allOf:\n                - $ref: \"#/components/schemas/Item\"\n                - description: The object this comment was placed on\n            message:\n              description: The text of the comment, as provided by the user\n              example: \"@Aaron Levie these tigers are cool!\"\n              type: string\n            modified_at:\n              description: The time this comment was last modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            type:\n              description: \"`comment`\"\n              enum:\n                - comment\n              example: comment\n              type: string\n      description: |-\n        Standard representation of a comment, as returned by the\n        comment API endpoints and when nested within other resources.\n      type: object\n      x-box-reference-hide: true\n      x-box-resource-display-name: Comment (Standard)\n      x-box-resource-id: comment--standard\n    Comments:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/Comment\"\n              type: array\n      description: A list of comments\n      x-box-resource-display-name: Comments\n      x-box-resource-id: comments\n    ConflictError:\n      allOf:\n        - $ref: \"#/components/schemas/ClientError\"\n        - properties:\n            context_info:\n              properties:\n                conflicts:\n                  allOf:\n                    - $ref: \"#/components/schemas/File--Mini\"\n                    - properties:\n                        file_version:\n                          $ref: \"#/components/schemas/FileVersion--Mini\"\n                        sha1:\n                          description: The SHA1 hash of the file.\n                          example: 85136C79CBF9FE36BB9D05D0639C70C265C18D37\n                          type: string\n              type: object\n      description: |-\n        The error that occurs when a file can not be created due\n        to a conflict.\n      x-box-resource-display-name: Conflict Error\n      x-box-resource-id: conflict_error\n    DevicePinner:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time the device pin was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_at:\n              description: The time the device pin was modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            owned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user that the device pin belongs to\n            product_name:\n              description: The type of device being pinned\n              example: iPad\n              type: string\n            type:\n              description: \"`device_pinner`\"\n              enum:\n                - device_pinner\n              example: device_pinner\n              type: string\n      description: |-\n        Device pins allow enterprises to control what devices can\n        use native Box applications.\n      x-box-reference-category: device_pins\n      x-box-resource-display-name: Device Pinner\n      x-box-resource-id: device_pinner\n    DevicePinners:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/DevicePinner\"\n              type: array\n      description: A list of device pins\n      x-box-resource-display-name: Device Pinners\n      x-box-resource-id: device_pinners\n    EmailAlias:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            email:\n              description: The email address\n              example: alias@example.com\n              type: string\n            is_confirmed:\n              description: Whether the email address has been confirmed\n              example: true\n              type: boolean\n            type:\n              description: \"`email_alias`\"\n              enum:\n                - email_alias\n              example: email_alias\n              type: string\n      description: An email alias for a user.\n      type: object\n      x-box-reference-category: users\n      x-box-resource-display-name: Email Alias\n      x-box-resource-id: email_alias\n    EmailAliases:\n      description: A list of email aliases\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/EmailAlias\"\n          type: array\n        total_count:\n          description: The number of email aliases.\n          example: 5000\n          format: int64\n          type: integer\n      x-box-resource-display-name: Email Aliases\n      x-box-resource-id: email_aliases\n    Enterprise:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            name:\n              description: The name of the enterprise\n              example: Acme Inc.\n              type: string\n            type:\n              description: \"`enterprise`\"\n              enum:\n                - enterprise\n              example: enterprise\n              type: string\n      description: A representation of a Box enterprise\n      x-box-resource-display-name: Enterprise\n      x-box-resource-id: enterprise\n    Event:\n      description: The description of an event that happened within Box\n      properties:\n        additional_details:\n          description: \u003e-\n            This object provides additional information about the event if\n            available.\n\n\n            This can include how a user performed an event as well as additional\n\n            information to correlate an event to external Keysafe logs. Not all events\n\n            have an additional_details object.  This object is only available in the\n\n            Enterprise Events.\n          example: \"\"\n          type: object\n        created_by:\n          allOf:\n            - $ref: \"#/components/schemas/User--Mini\"\n            - description: \u003e-\n                The user that performed the action represented by the event.\n\n                Some events may be performed by users not logged into Box.\n\n                In that case, not all attributes of the object are populated and the\n\n                event is attributed to a unknown user (`user_id = 2`)\n        event_id:\n          description: The ID of the event object. You can use this to detect duplicate\n            events\n          example: f82c3ba03e41f7e8a7608363cc6c0390183c3f83\n          type: string\n        event_type:\n          allOf:\n            - $ref: \"#/components/schemas/EventType\"\n            - description: The event type that triggered this event\n        session_id:\n          description: \u003e-\n            The session of the user that performed the action. Not all events\n            will\n\n            populate this attribute.\n          example: 70090280850c8d2a1933c1\n          type: string\n        source:\n          allOf:\n            - oneOf:\n                - $ref: \"#/components/schemas/File--Standard\"\n                - $ref: \"#/components/schemas/Folder--Standard\"\n                - $ref: \"#/components/schemas/Comment\"\n          description: The object that triggered this event\n          type: object\n        type:\n          description: \"`event`\"\n          example: event\n          type: string\n      x-box-reference-category: events\n      x-box-resource-display-name: Event\n      x-box-resource-id: event\n    EventType:\n      description: An event type that can trigger an event\n      enum:\n        - ACCESS_GRANTED\n        - ACCESS_REVOKED\n        - ADD_DEVICE_ASSOCIATION\n        - ADD_LOGIN_ACTIVITY_DEVICE\n        - ADMIN_LOGIN\n        - APPLICATION_CREATED\n        - APPLICATION_PUBLIC_KEY_ADDED\n        - APPLICATION_PUBLIC_KEY_DELETED\n        - CHANGE_ADMIN_ROLE\n        - CHANGE_FOLDER_PERMISSION\n        - COLLABORATION_ACCEPT\n        - COLLABORATION_EXPIRATION\n        - COLLABORATION_INVITE\n        - COLLABORATION_REMOVE\n        - COLLABORATION_ROLE_CHANGE\n        - COLLAB_ADD_COLLABORATOR\n        - COLLAB_INVITE_COLLABORATOR\n        - COLLAB_REMOVE_COLLABORATOR\n        - COLLAB_ROLE_CHANGE\n        - COMMENT_CREATE\n        - COMMENT_DELETE\n        - CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY\n        - CONTENT_WORKFLOW_AUTOMATION_ADD\n        - CONTENT_WORKFLOW_AUTOMATION_DELETE\n        - CONTENT_WORKFLOW_POLICY_ADD\n        - CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION\n        - CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION\n        - COPY\n        - DATA_RETENTION_CREATE_RETENTION\n        - DATA_RETENTION_REMOVE_RETENTION\n        - DELETE\n        - DELETE_USER\n        - DEVICE_TRUST_CHECK_FAILED\n        - DOWNLOAD\n        - EDIT\n        - EDIT_USER\n        - EMAIL_ALIAS_CONFIRM\n        - EMAIL_ALIAS_REMOVE\n        - ENABLE_TWO_FACTOR_AUTH\n        - FAILED_LOGIN\n        - FILE_MARKED_MALICIOUS\n        - FILE_WATERMARKED_DOWNLOAD\n        - GROUP_ADD_ITEM\n        - GROUP_ADD_USER\n        - GROUP_CREATION\n        - GROUP_DELETION\n        - GROUP_EDITED\n        - GROUP_REMOVE_ITEM\n        - GROUP_REMOVE_USER\n        - ITEM_COPY\n        - ITEM_CREATE\n        - ITEM_DOWNLOAD\n        - ITEM_MAKE_CURRENT_VERSION\n        - ITEM_MODIFY\n        - ITEM_MOVE\n        - ITEM_OPEN\n        - ITEM_PREVIEW\n        - ITEM_RENAME\n        - ITEM_SHARED\n        - ITEM_SHARED_CREATE\n        - ITEM_SHARED_UNSHARE\n        - ITEM_SHARED_UPDATE\n        - ITEM_SYNC\n        - ITEM_TRASH\n        - ITEM_UNDELETE_VIA_TRASH\n        - ITEM_UNSYNC\n        - ITEM_UPLOAD\n        - LEGAL_HOLD_ASSIGNMENT_CREATE\n        - LEGAL_HOLD_ASSIGNMENT_DELETE\n        - LEGAL_HOLD_POLICY_CREATE\n        - LEGAL_HOLD_POLICY_DELETE\n        - LEGAL_HOLD_POLICY_UPDATE\n        - LOCK\n        - LOCK_CREATE\n        - LOCK_DESTROY\n        - LOGIN\n        - MASTER_INVITE_ACCEPT\n        - MASTER_INVITE_REJECT\n        - METADATA_INSTANCE_CREATE\n        - METADATA_INSTANCE_DELETE\n        - METADATA_INSTANCE_UPDATE\n        - METADATA_TEMPLATE_CREATE\n        - METADATA_TEMPLATE_DELETE\n        - METADATA_TEMPLATE_UPDATE\n        - MOVE\n        - NEW_USER\n        - PREVIEW\n        - REMOVE_DEVICE_ASSOCIATION\n        - REMOVE_LOGIN_ACTIVITY_DEVICE\n        - RENAME\n        - RETENTION_POLICY_ASSIGNMENT_ADD\n        - SHARE\n        - SHARE_EXPIRATION\n        - STORAGE_EXPIRATION\n        - TAG_ITEM_CREATE\n        - TASK_ASSIGNMENT_CREATE\n        - TASK_ASSIGNMENT_DELETE\n        - TASK_ASSIGNMENT_UPDATE\n        - TASK_CREATE\n        - TASK_UPDATE\n        - TERMS_OF_SERVICE_ACCEPT\n        - TERMS_OF_SERVICE_REJECT\n        - UNDELETE\n        - UNLOCK\n        - UNSHARE\n        - UPDATE_COLLABORATION_EXPIRATION\n        - UPDATE_SHARE_EXPIRATION\n        - UPLOAD\n        - USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE\n        - WATERMARK_LABEL_CREATE\n        - WATERMARK_LABEL_DELETE\n      example: FILE_MARKED_MALICIOUS\n      type: string\n      x-box-resource-display-name: Event Type\n      x-box-resource-id: event_type\n    Events:\n      description: A list of event objects\n      properties:\n        chunk_size:\n          description: The number of pages of events remaining.\n          example: 2\n          format: int64\n          type: integer\n        entries:\n          items:\n            $ref: \"#/components/schemas/Event\"\n          type: array\n        next_stream_position:\n          description: |-\n            The stream position of the start of the next page\n            of events.\n          example: \"1152922976252290886\"\n          type: string\n      x-box-reference-category: events\n      x-box-resource-display-name: Events\n      x-box-resource-id: events\n    File:\n      allOf:\n        - $ref: \"#/components/schemas/File--Standard\"\n        - properties:\n            allowed_invitee_roles:\n              description: \u003e-\n                Folder [collaboration](#collaboration-object) roles allowed by\n                the\n\n                enterprise administrator.\n              enum:\n                - open\n                - company\n                - collaborators\n              example:\n                - open\n              items:\n                type: string\n              type: array\n            comment_count:\n              description: The number of comments on this file\n              example: 10\n              type: integer\n            expiring_embed_link:\n              description: |-\n                Requesting this field creates an expiring URL for an\n                embedded preview session in an iframe.\n\n                This URL will expire after 60 seconds and the session will\n                expire after 60 minutes.\n              example: https://app.box.com/preview/expiring_embed/gvoct6FE!\n              type: string\n            extension:\n              description: \u003e-\n                Indicates the suffix, when available, on the file. By default,\n\n                set to an empty string. The suffix usually indicates the encoding\n\n                (file format) of the file contents or usage.\n              example: png\n              type: string\n            has_collaborations:\n              description: Whether this file has any collaborators.\n              example: true\n              type: boolean\n            is_externally_owned:\n              description: Whether this file is owned by a user outside of the enterprise.\n              example: true\n              type: boolean\n            is_package:\n              description: Whether the file is a package. Used for Mac Packages used by\n                iWorks.\n              example: true\n              type: boolean\n            lock:\n              allOf:\n                - $ref: \"#/components/schemas/Lock\"\n                - description: \u003e-\n                    The lock held on this file. If there is no lock, this can\n                    either\n\n                    be `null` or have a timestamp in the past.\n            metadata:\n              additionalProperties:\n                additionalProperties:\n                  $ref: \"#/components/schemas/Metadata\"\n                description: The name of the metadata template\n                example:\n                  marketingCollateral:\n                    $canEdit: true\n                    $id: 01234500-12f1-1234-aa12-b1d234cb567e\n                    $parent: folder_59449484661\n                    $scope: enterprise_27335\n                    $template: blueprintTemplate\n                    $type: blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0\n                    $typeVersion: 2\n                    $version: 1\n                type: object\n              description: |-\n                A list of key-value pairs of metadata objects within their\n                scopes.\n\n                To access the metadata for a file, first use the\n                [Metadata](#metadata) endpoints to determine\n                the metadata templates available to your enterprise.\n\n                The use the [Retrieve File](#get-file-id) endpoint with\n                the `fields` query parameter to get the metadata by ID. The\n                ID for the metadata template will be in the format\n                `metadata.\u003cscope\u003e.\u003ctemplatename\u003e`, for example\n                `fields=metadata.global.properties`.\n              enum:\n                - global\n                - enteprise_\u003c:enterprise_id\u003e\n              example:\n                global:\n                  marketingCollateral:\n                    $canEdit: true\n                    $id: 01234500-12f1-1234-aa12-b1d234cb567e\n                    $parent: folder_59449484661\n                    $scope: enterprise_27335\n                    $template: blueprintTemplate\n                    $type: blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0\n                    $typeVersion: 2\n                    $version: 1\n              type: object\n            permissions:\n              allOf:\n                - $ref: \"#/components/schemas/Permissions\"\n                - description: \u003e-\n                    An object containing the permissions that the current user\n                    has\n\n                    for this item\n            tags:\n              description: All tags applied to this folder.\n              example:\n                - draft\n                - needs_review\n              items:\n                type: string\n              type: array\n            version_number:\n              description: The version number of this file\n              example: \"1\"\n              type: string\n            watermark_info:\n              allOf:\n                - $ref: \"#/components/schemas/WatermarkInfo\"\n                - description: Information about the watermarking on this file\n      description: |-\n        A full representation of a file, as can be returned from any\n        file API endpoints by default\n      x-box-reference-category: files\n      x-box-resource-display-name: File\n      x-box-resource-id: file\n    File--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Item\"\n        - properties:\n            etag:\n              description: |-\n                The entity tag of this file object. Used with `If-Match`\n                headers.\n              example: \"1\"\n              type: string\n            name:\n              description: The name of the file\n              example: Pictures\n              type: string\n            sequence_id:\n              description: A unique ID for use with the /events endpoint\n              example: \"1\"\n              type: string\n            type:\n              description: \"`file`\"\n              enum:\n                - file\n              example: file\n              type: string\n      description: |-\n        A mini representation of a file, used when\n        nested under another resource.\n      x-box-reference-hide: true\n      x-box-resource-display-name: File (Mini)\n      x-box-resource-id: file--mini\n    File--Standard:\n      allOf:\n        - $ref: \"#/components/schemas/File--Mini\"\n        - properties:\n            content_created_at:\n              description: When this file was created originally\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            content_modified_at:\n              description: When this file was last updated\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_at:\n              description: When this file was upload to Box’s servers\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created this file\n            description:\n              description: The description of the file\n              example: Some pictures I took\n              maxLength: 256\n              type: string\n            expires_at:\n              description: When the file will automatically be deleted\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            item_status:\n              description: \u003e-\n                Whether this item is deleted or not. Values include `active`,\n\n                `trashed` if the file has been moved to the trash, and `deleted` if\n\n                the file has been permanently deleted\n              enum:\n                - active\n                - trashed\n                - deleted\n              example: active\n              type: string\n            modified_at:\n              description: When this file was last updated on the Box servers\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who last modified this file\n            owned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who owns this file\n            parent:\n              allOf:\n                - $ref: \"#/components/schemas/Folder--Mini\"\n                - description: The folder that contains this file.\n            path_collection:\n              description: The path of folders to this file, starting at the root\n              items:\n                $ref: \"#/components/schemas/Folder--Mini\"\n              type: array\n            purged_at:\n              description: When this file will be permanently deleted\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            sha1:\n              description: The SHA1 hash of the file.\n              example: 85136C79CBF9FE36BB9D05D0639C70C265C18D37\n              format: digest\n              type: string\n            shared_link:\n              allOf:\n                - $ref: \"#/components/schemas/SharedLink\"\n                - description: |-\n                    The shared link object for this file. Will be\n                    `null` if no shared link has been created.\n            size:\n              description: \u003e-\n                The file size in bytes. Be careful parsing this integer, it can\n\n                easily go into [exponent notation](http://en.wikipedia.org/wiki/\\\n\n                Double-precision_floating-point_format).\n              example: 629644\n              type: integer\n            trashed_at:\n              description: When this file was last moved to the trash\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n      description: |-\n        A standard representation of a file, as returned from any\n        file API endpoints by default\n      x-box-reference-hide: true\n      x-box-resource-display-name: File (Standard)\n      x-box-resource-id: file--standard\n    FileScope:\n      description: A relation between a file and the scopes for which the file can be\n        accessed\n      properties:\n        object:\n          allOf:\n            - $ref: \"#/components/schemas/File--Mini\"\n            - description: The file for which the file can be accessed\n        scope:\n          description: The file scopes for the file access\n          enum:\n            - annotation_edit\n            - annotation_view_all\n            - annotation_view_self\n            - base_explorer\n            - base_picker\n            - base_preview\n            - base_upload\n            - item_delete\n            - item_download\n            - item_preview\n            - item_rename\n            - item_share\n            - null\n          example: item_download\n          type: string\n      x-box-resource-display-name: File Scope\n      x-box-resource-id: file_scope\n    FileVersion:\n      allOf:\n        - $ref: \"#/components/schemas/FileVersion--Mini\"\n        - properties:\n            created_at:\n              description: When the file version object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_at:\n              description: When the file version object was last updated\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who last updated the file version\n            name:\n              description: The name of the file version\n              example: tigers.jpeg\n              type: string\n            purged_at:\n              description: When the file version object was purged.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            size:\n              description: Size of the file version in bytes\n              example: 629644\n              format: int64\n              type: integer\n            trashed_at:\n              description: When the file version object was trashed.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n      description: A full representation of a file version\n      x-box-reference-category: file_versions\n      x-box-resource-display-name: File Version\n      x-box-resource-id: file_version\n    FileVersion--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            sha1:\n              description: The SHA1 hash of this file.\n              example: 134b65991ed521fcfe4724b7d814ab8ded5185dc\n              type: string\n            type:\n              description: \"`file_version`\"\n              enum:\n                - file_version\n              example: file_version\n              type: string\n      description: |-\n        A mini representation of a file version, used when\n        nested under another resource.\n      x-box-reference-hide: true\n      x-box-resource-display-name: File Version (Mini)\n      x-box-resource-id: file_version--mini\n    FileVersionLegalHold:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            deleted_at:\n              description: |-\n                Time that this File-Version-Legal-Hold was\n                deleted.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            file:\n              allOf:\n                - $ref: \"#/components/schemas/File--Mini\"\n                - description: |-\n                    The file for the file version held.\n                    Note that there is no guarantee that the current\n                    version of this file is held.\n            file_version:\n              allOf:\n                - $ref: \"#/components/schemas/FileVersion--Mini\"\n                - description: The file version that is held\n            legal_hold_policy_assignments:\n              description: List of assignments contributing to this Hold.\n              items:\n                $ref: \"#/components/schemas/LegalHoldPolicyAssignment\"\n              type: array\n            type:\n              description: \"`file_version_legal_hold`\"\n              enum:\n                - file_version_legal_hold\n              example: file_version_legal_hold\n              type: string\n      description: |-\n        File-Version-Legal-Hold is an entity representing all\n        holds on a File Version.\n      x-box-reference-category: legal_hold_policies\n      x-box-resource-display-name: Legal Hold\n      x-box-resource-id: file_version_legal_hold\n    FileVersionLegalHolds:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/FileVersionLegalHold\"\n              type: array\n      description: A list of file version legal holds.\n      x-box-resource-display-name: Legal Holds\n      x-box-resource-id: file_version_legal_holds\n    FileVersionRetention:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            applied_at:\n              description: |-\n                When this file version retention object was\n                created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            disposition_at:\n              description: |-\n                When the retention period expires on this file\n                version retention\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            file:\n              allOf:\n                - $ref: \"#/components/schemas/File--Mini\"\n                - description: The file this file version retention was applied to\n            file_version:\n              allOf:\n                - $ref: \"#/components/schemas/FileVersion--Mini\"\n                - description: |-\n                    The file version this file version retention was\n                    applied to\n            type:\n              description: \"`file_version_retention`\"\n              enum:\n                - file_version_retention\n              example: file_version_retention\n              type: string\n            winning_retention_policy:\n              allOf:\n                - $ref: \"#/components/schemas/RetentionPolicy--Mini\"\n                - description: |-\n                    The winning retention policy applied to this file\n                    version retention. A file version can have multiple\n                    retention policies applied.\n      description: |-\n        A retention policy blocks permanent deletion of content\n        for a specified amount of time. Admins can apply policies to\n        specified folders, or an entire enterprise. A file version retention\n        is a  record for a retained file version. To use this feature,\n        you must  have the manage retention policies scope enabled for your\n        API key via  your application management console. For more information\n        about retention policies, please visit our help documentation\n      x-box-reference-category: retention_policies\n      x-box-resource-display-name: Retention\n      x-box-resource-id: file_version_retention\n    FileVersionRetentions:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/FileVersionRetention\"\n              type: array\n      description: A list of file version retentions.\n      x-box-resource-display-name: Retentions\n      x-box-resource-id: file_version_retentions\n    FileVersions:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/FileVersion\"\n              type: array\n      description: A list of file versions\n      x-box-resource-display-name: File Versions\n      x-box-resource-id: file_versions\n    Files:\n      description: A list of files\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/File\"\n          type: array\n        total_count:\n          description: The number of files.\n          example: 1\n          format: int64\n          type: integer\n      x-box-resource-display-name: Files\n      x-box-resource-id: files\n    Folder:\n      allOf:\n        - $ref: \"#/components/schemas/Folder--Standard\"\n        - properties:\n            allowed_invitee_roles:\n              description: |-\n                The types of collaborations that have been allowed by the\n                enterprise administrator.\n              enum:\n                - open\n                - company\n                - collaborators\n              example:\n                - open\n              items:\n                type: string\n              type: array\n            allowed_shared_link_access_levels:\n              description: |-\n                The default access level settings for shared links as set\n                by the administrator.\n              enum:\n                - open\n                - company\n                - collaborators\n              example:\n                - open\n              items:\n                type: string\n              type: array\n            can_non_owners_invite:\n              description: |-\n                If collaborators who are not\n                folder owners can invite new collaborators\n              example: true\n              type: boolean\n            has_collaborations:\n              description: If this folder has any collaborators.\n              example: true\n              type: boolean\n            is_collaboration_restricted_to_enterprise:\n              description: |-\n                If future invites to this folder are restricted to users\n                within the enterprise. This does not affect existing\n                collaborations.\n              example: true\n              type: boolean\n            is_externally_owned:\n              description: If this folder is owned by a user outside of the enterprise.\n              example: true\n              type: boolean\n            permissions:\n              allOf:\n                - $ref: \"#/components/schemas/Permissions\"\n                - description: |-\n                    The permissions that the current user has\n                    for this item\n            sync_state:\n              description: If Box Sync or Box Drive is allowed to sync this folder.\n              enum:\n                - synced\n                - not_synced\n              example: synced\n              type: string\n            tags:\n              description: |-\n                The tags for this item.\n\n                To add or remove a tag, retrieve the item's current tags,\n                modify them, and then update them using this field.\n              example:\n                - approved\n              items:\n                type: string\n              type: array\n            watermark_info:\n              allOf:\n                - $ref: \"#/components/schemas/WatermarkInfo\"\n                - description: Information about the watermarking on this folder\n      description: |-\n        A full representation of a folder, as can be returned from any\n        folder API endpoints by default\n      x-box-reference-category: folders\n      x-box-resource-display-name: Folder\n      x-box-resource-id: folder\n    Folder--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Item\"\n        - properties:\n            etag:\n              description: |-\n                The entity tag of this folder object. Used with `If-Match`\n                headers.\n              example: \"1\"\n              type: string\n            name:\n              description: The name of the folder.\n              example: Pictures\n              type: string\n            sequence_id:\n              description: \u003e-\n                A unique ID for use with the `/events` endpoint. May be `null`\n                for\n\n                some folders, such as root or trash.\n              example: \"1\"\n              type: string\n            type:\n              description: \"`folder`\"\n              enum:\n                - folder\n              example: folder\n              type: string\n      description: |-\n        A mini representation of a file version, used when\n        nested under another resource.\n      x-box-reference-hide: true\n      x-box-resource-display-name: Folder (Mini)\n      x-box-resource-id: folder--mini\n    Folder--Standard:\n      allOf:\n        - $ref: \"#/components/schemas/Folder--Mini\"\n        - properties:\n            content_created_at:\n              description: |-\n                The time at which this folder was originally created according\n                to the uploader.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            content_modified_at:\n              description: \u003e-\n                The time the folder or its contents were last modified according\n                to\n\n                the uploader.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_at:\n              description: \u003e-\n                The time the folder was created.  May be `null` for some folders\n                such\n\n                as root or trash.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created this folder\n            description:\n              description: The description of the folder\n              example: Some pictures I took\n              maxLength: 256\n              type: string\n            expires_at:\n              description: The time and which the folder will be automatically be deleted.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            folder_upload_email:\n              properties:\n                access:\n                  description: \u003e-\n                    If set, users can email files to the automatically\n\n                    created email address to upload files to the\n\n                    folder. To get the email address, request the\n\n                    `folder_upload_email` field for the folder after setting\n\n                    this field.\n\n\n                    When set to `collaborators`, only emails from registered email\n\n                    addresses for collaborators will be accepted.\n                  enum:\n                    - open\n                    - collaborators\n                  example: open\n                  type: string\n                email:\n                  description: |-\n                    The upload email address for this folder. This will be\n                    `null` if not enabled.\n                  example: upload.Picture.k13sdz1@u.box.com\n                  format: email\n                  type: string\n              type: object\n            item_collection:\n              description: A collection of mini file and folder objects contained in this\n                folder.\n              items:\n                $ref: \"#/components/schemas/Item\"\n              type: array\n            item_status:\n              description: |-\n                Whether this item is deleted or not.\n\n                Values include `active` if the item has not been trashed,\n                `trashed` if the item has been moved to the trash, and\n                `deleted` if the item has been permanently deleted.\n              enum:\n                - active\n                - trashed\n                - deleted\n              example: active\n              type: string\n            modified_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who last modified this folder.\n            owned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who owns this folder.\n            parent:\n              allOf:\n                - $ref: \"#/components/schemas/Folder--Mini\"\n                - description: \u003e-\n                    The direct parent folder that this folder is located within.\n\n\n                    May be `null` for folders such as root, trash and child folders\n\n                    whose parent is inaccessible.\n            path_collection:\n              description: |-\n                The tree of folders that this folder is contained in,\n                starting at the root.\n              items:\n                $ref: \"#/components/schemas/Folder--Mini\"\n              type: array\n            purged_at:\n              description: The time at which this folder will be purged from the trash.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            shared_link:\n              allOf:\n                - $ref: \"#/components/schemas/SharedLink\"\n                - description: |-\n                    The shared link object for this folder. Will be\n                    `null` if no shared link has been created.\n            size:\n              description: |-\n                The folder size in bytes.\n\n                Be careful parsing this integer as it can easily\n                go into exponent notation.\n              example: 629644\n              format: int64\n              type: integer\n            trashed_at:\n              description: The time at which this folder was put in the trash.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n      description: |-\n        A standard representation of a folder, as returned from any\n        folder API endpoints by default\n      x-box-reference-hide: true\n      x-box-resource-display-name: Folder (Standard)\n      x-box-resource-id: folder--standard\n    FolderUploadEmail:\n      description: The writable Folder Upload Email object\n      properties:\n        access:\n          description: |-\n            If set, users can email files to the automatically\n            created email address to upload files to the\n            folder. To get the email address, request the\n            `folder_upload_email` field for the folder after setting\n            this field.\n\n            When set to `collaborators`, only emails from registered email\n            addresses for collaborators will be accepted.\n          enum:\n            - open\n            - collaborators\n          example: open\n          type: string\n      type: object\n      x-box-resource-display-name: Folder Upload Email\n      x-box-resource-id: folder_upload_email\n    Group:\n      allOf:\n        - $ref: \"#/components/schemas/Group--Standard\"\n        - properties:\n            description:\n              description: Human readable description of the group.\n              example: Support Group - as imported from Active Directory\n              maxLength: 255\n              type: string\n            external_sync_identifier:\n              description: |-\n                An arbitrary identifier that can be used by\n                external group sync tools to link this Box Group to\n                an external group. Example values of this field\n                could be an Active Directory Object ID or a Google\n                Group ID.  We recommend you use of this field in\n                order to avoid issues when group names are updated in\n                either Box or external systems.\n              example: AD:123456\n              type: string\n            invitability_level:\n              description: |-\n                Specifies who can invite the group to collaborate\n                on folders (Create Collaboration).\n\n                When set to `admins_only` the enterprise admin, co-admins,\n                and the group's admin can invite the group.\n\n                When set to `admins_and_members` all the admins listed\n                above and group members can invite the group.\n\n                When set to `all_managed_users` all managed users in the\n                enterprise can invite the group.\n              enum:\n                - admins_only\n                - admins_and_members\n                - all_managed_users\n              example: admins_only\n              type: string\n            member_viewability_level:\n              description: |-\n                Specifies who can view the members of the group\n                (Get Memberships for Group).\n\n                * `admins_only - the enterprise admin, co-admins, group's\n                  group admin\n                * `admins_and_members` - all admins and group members\n                * `all_managed_users` - all managed users in the\n                  enterprise\n              enum:\n                - admins_only\n                - admins_and_members\n                - all_managed_users\n              example: admins_only\n              type: string\n            provenance:\n              description: |-\n                Keeps track of which external source this group is\n                coming from (e.g. \"Active Directory\", \"Google Groups\",\n                \"Facebook Groups\").  Setting this will\n                also prevent Box users from editing the group name\n                and its members directly via the Box web application.\n                This is desirable for one-way  syncing of groups.\n              example: Active Directory\n              maxLength: 255\n              type: string\n      description: |-\n        Groups contain a set of users, and can be used in place of\n        users in some operations, such as collaborations.\n      x-box-reference-category: groups\n      x-box-resource-display-name: Group\n      x-box-resource-id: group\n    Group--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            name:\n              description: The name of the group\n              example: Support\n              type: string\n            type:\n              description: \"`group`\"\n              enum:\n                - group\n              example: group\n              type: string\n      description: |-\n        Mini representation of a group, including id and name of\n        group.\n      type: object\n      x-box-reference-hide: true\n      x-box-resource-display-name: Group (Mini)\n      x-box-resource-id: group--mini\n    Group--Standard:\n      allOf:\n        - $ref: \"#/components/schemas/Group--Mini\"\n        - properties:\n            created_at:\n              description: When the group object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_at:\n              description: When the group object was last modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n      description: |-\n        A standard representation of a group, as returned from any\n        group API endpoints by default\n      x-box-reference-hide: true\n      x-box-resource-display-name: Group (Standard)\n      x-box-resource-id: group--standard\n    GroupMembership:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time this membership was created.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            group:\n              allOf:\n                - $ref: \"#/components/schemas/Group--Mini\"\n                - description: The group that the membership applies to\n            modified_at:\n              description: The time this membership was last modified.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            role:\n              description: The role of the user in the group.\n              enum:\n                - member\n                - admin\n              example: member\n              type: string\n            type:\n              description: \"`group_membership`\"\n              enum:\n                - group_membership\n              example: group_membership\n              type: string\n            user:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user that the membership applies to\n      description: |-\n        Membership is used to signify that a user is part of a\n        group.\n      x-box-reference-category: groups\n      x-box-resource-display-name: Membership\n      x-box-resource-id: group_membership\n    GroupMemberships:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/GroupMembership\"\n              type: array\n      description: A list of group memberships.\n      x-box-resource-display-name: Memberships\n      x-box-resource-id: group_memberships\n    Groups:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/Group\"\n              type: array\n      description: A list of groups.\n      x-box-resource-display-name: Groups\n      x-box-resource-id: groups\n    Invite:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            actionable_by:\n              $ref: \"#/components/schemas/User--Mini\"\n            created_at:\n              description: When the invite was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            invited_by:\n              $ref: \"#/components/schemas/User--Mini\"\n            invited_to:\n              $ref: \"#/components/schemas/Enterprise\"\n            modified_at:\n              description: When the invite was modified.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            status:\n              description: The status of the invite\n              example: pending\n              type: string\n            type:\n              description: \"`invite`\"\n              enum:\n                - invite\n              example: invite\n              type: string\n      description: An invite for a user to an enterprise.\n      x-box-resource-display-name: Invite\n      x-box-resource-id: invite\n    Item:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            etag:\n              description: |-\n                The entity tag of this item. Used with If-Match headers.\n                May be `null` for some folders such as root or trash.\n              example: \"1\"\n              type: string\n            name:\n              description: The name of the item.\n              example: Pictures\n              type: string\n            sequence_id:\n              description: \u003e-\n                A unique ID for use with the `/events` endpoint. May be `null`\n                for\n\n                some items, such as root or trash.\n              example: \"1\"\n              type: string\n            type:\n              description: The type of this item\n              example: file\n              type: string\n      description: A generic mini representation of a file, folder, user or enterprise\n      x-box-resource-display-name: Item\n      x-box-resource-id: item_reference\n    Items:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/Item\"\n              type: array\n      description: A list of generic mini representations of a file, folder, user or\n        enterprise\n      x-box-resource-display-name: Items\n      x-box-resource-id: item_references\n    LegalHoldPolicies:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/LegalHoldPolicy\"\n              type: array\n      description: A list of legal hold policies.\n      x-box-resource-display-name: Legal Hold Policies\n      x-box-resource-id: legal_hold_policies\n    LegalHoldPolicy:\n      allOf:\n        - $ref: \"#/components/schemas/LegalHoldPolicy--Mini\"\n        - properties:\n            assignment_counts:\n              allOf:\n                - $ref: \"#/components/schemas/AssignmentCounts\"\n                - description: Counts of assignments within this policy by apply-to type\n            created_at:\n              description: When the legal hold policy object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created the legal hold policy object\n            deleted_at:\n              description: |-\n                When the policy release request was sent. (Because\n                it can take time for a policy to fully delete, this\n                isn't quite the same time that the policy is fully deleted).\n\n                If `null`, the policy was not deleted.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            description:\n              description: |-\n                Description of the legal hold policy. Optional\n                property with a 500 character limit.\n              example: Postman created policy\n              maxLength: 500\n              type: string\n            filter_ended_at:\n              description: |-\n                User-specified, optional date filter applies to\n                Custodian assignments only\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            filter_started_at:\n              description: |-\n                User-specified, optional date filter applies to\n                Custodian assignments only\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_at:\n              description: |-\n                When the legal hold policy object was modified.\n                Does not update when assignments are added or removed.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            policy_name:\n              description: Name of the legal hold policy.\n              example: Policy 4\n              maxLength: 254\n              type: string\n            release_notes:\n              description: Optional notes about why the policy was created.\n              example: Example\n              maxLength: 500\n              type: string\n            status:\n              description: |-\n                * 'active' - the policy is not in a transition state\n                * 'applying' - that the policy is in the process of\n                  being applied\n                * 'releasing' - that the process is in the process\n                  of being released\n                * 'released' - the policy is no longer active\n              enum:\n                - active\n                - applying\n                - releasing\n                - released\n              example: active\n              type: string\n      description: |-\n        Legal Hold Policy information describes the basic\n        characteristics of the Policy, such as name, description,\n        and filter dates.\n      x-box-reference-category: legal_hold_policies\n      x-box-resource-display-name: Legal Hold Policy\n      x-box-resource-id: legal_hold_policy\n    LegalHoldPolicy--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            type:\n              description: \"`legal_hold_policy`\"\n              enum:\n                - legal_hold_policy\n              example: legal_hold_policy\n              type: string\n      description: A mini legal hold policy\n      x-box-reference-hide: true\n      x-box-resource-display-name: Legal Hold Policy (Mini)\n      x-box-resource-id: legal_hold_policy--mini\n    LegalHoldPolicyAssignment:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            assigned_at:\n              description: |-\n                When the legal hold policy assignment object was\n                created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            assigned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: |-\n                    The user who created the legal hold policy\n                    assignment\n            assigned_to:\n              allOf:\n                - $ref: \"#/components/schemas/Item\"\n                - description: |-\n                    The item that the the legal hold policy\n                    is assigned to. Includes type and ID.\n            deleted_at:\n              description: |-\n                When the assignment release request was sent.\n                (Because it can take time for an assignment to fully\n                delete, this isn't quite the same time that the\n                assignment is fully deleted). If null, Assignment\n                was not deleted.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            legal_hold_policy:\n              allOf:\n                - $ref: \"#/components/schemas/LegalHoldPolicy--Mini\"\n                - description: |-\n                    The policy that the legal hold policy assignment\n                    is part of\n            type:\n              description: \"`legal_hold_policy_assignment`\"\n              enum:\n                - legal_hold_policy_assignment\n              example: legal_hold_policy_assignment\n              type: string\n      description: |-\n        Legal Hold Assignments are used to assign Legal Hold\n        Policies to Users, Folders, Files, or File Versions.\n\n        Creating a Legal Hold Assignment puts a hold\n        on the File-Versions that belong to the Assignment's\n        'apply-to' entity.\n      x-box-reference-category: legal_hold_policies\n      x-box-resource-display-name: Legal Hold Policy Assignment\n      x-box-resource-id: legal_hold_policy_assignment\n    LegalHoldPolicyAssignments:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/LegalHoldPolicyAssignment\"\n              type: array\n      description: A list of legal hold policies assignments.\n      x-box-resource-display-name: Legal Hold Policy Assignments\n      x-box-resource-id: legal_hold_policy_assignments\n    Lock:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time this lock was created at\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The use who created the lock\n            expired_at:\n              description: The time this lock is to expire at, which might be in the past\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            is_download_prevented:\n              description: Whether or not the file can be downloaded while locked\n              example: true\n              type: boolean\n            type:\n              description: \"`lock`\"\n              enum:\n                - lock\n              example: lock\n              type: string\n      description: The lock held on a file.\n      x-box-resource-display-name: Lock\n      x-box-resource-id: lock\n    Lock--Writable:\n      description: Defines a lock on an item\n      properties:\n        access:\n          description: The type of this item, should be `lock`.\n          enum:\n            - lock\n          example: lock\n          type: string\n        expires_at:\n          description: The time at which the lock expires\n          example: 2012-12-12T10:53:43-08:00\n          format: date-time\n          type: string\n        is_download_prevented:\n          description: Whether the file can be downloaded while locked\n          example: true\n          type: boolean\n      required:\n        - access\n      type: object\n      x-box-reference-hide: true\n      x-box-resource-display-name: Lock Writable\n      x-box-resource-id: lock--writable\n    MarkerPagination:\n      description: |-\n        The part of an API response that describes marker\n        based pagination\n      properties:\n        limit:\n          description: \u003e-\n            The limit that was used for these entries. This will be the same as\n            the\n\n            `limit` query parameter unless that value exceeded the maximum value\n\n            allowed. The maximum value varies by API.\n          example: 1000\n          format: int64\n          type: integer\n        next_marker:\n          description: The marker for the start of the next page of results.\n          example: 3000\n          format: int64\n          type: integer\n        prev_marker:\n          description: The marker for the start of the previous page of results.\n          example: 1000\n          format: int64\n          type: integer\n      x-box-resource-display-name: Marker Pagination\n      x-box-resource-id: marker_pagination\n    Metadata:\n      description: |-\n        A piece of metadata as specified by a metadata template and\n        applied to a file or folder.\n      properties:\n        $canEdit:\n          description: Whether the user can edit this metadata\n          example: true\n          type: boolean\n        $id:\n          description: 36-character UUID to identify the metadata object\n          example: 01234500-12f1-1234-aa12-b1d234cb567e\n          format: uuid\n          type: string\n        $parent:\n          description: An ID for the parent folder\n          example: folder_59449484661,\n          type: string\n        $scope:\n          description: |-\n            An ID for the scope in which this template\n            has been applied\n          example: enterprise_27335\n          type: string\n        $template:\n          description: The name of the template\n          example: blueprintTemplate\n          type: string\n        $type:\n          description: \u003e-\n            A unique identifier for the \"type\" of this instance. This is an\n            internal\n\n            system property and should not be used by a client application.\n          example: blueprintTemplate-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0\n          type: string\n        $typeVersion:\n          description: \u003e-\n            The last-known version of the template of the object. This is an\n            internal\n\n            system property and should not be used by a client application.\n          example: 2\n          type: integer\n        $version:\n          description: \u003e-\n            The version of the metadata object. Starts at 0 and increases every\n            time\n\n            a user-defined property is modified.\n          example: 1\n          type: integer\n      x-box-reference-category: metadata\n      x-box-resource-display-name: Metadata\n      x-box-resource-id: metadata\n    MetadataCard:\n      description: |-\n        A Box Skills card that is applied to the metadata\n        of a file.\n      properties:\n        created_at:\n          description: The time the card was created at\n          example: 2012-12-12T10:53:43-08:00\n          format: date-time\n          type: string\n        duration:\n          description: |-\n            An optional duration.\n\n            Used with a `card_type` of`transcript`, or\n            `timeline`.\n          example: 1000\n          type: integer\n        entries:\n          description: |-\n            An optional list of entries.\n\n            Used with a `card_type` of`transcript`, `keyword` or\n            `timeline`.\n          items:\n            $ref: \"#/components/schemas/MetadataCardEntry\"\n          type: array\n        invocation:\n          description: The current invocation of the skill\n          properties:\n            id:\n              description: The ID of the skill invocation.\n              example: \"33243242\"\n              type: string\n            type:\n              description: \"`skill_invocation`\"\n              enum:\n                - skill_invocation\n              example: \"`skill_invocation`\"\n              type: string\n          required:\n            - type\n            - id\n          type: object\n        skill:\n          description: The skill that is updating the cards\n          properties:\n            id:\n              description: The ID of the skill.\n              example: \"43342423234\"\n              type: string\n            type:\n              description: \"`service`\"\n              enum:\n                - service\n              example: \"`service`\"\n              type: string\n          required:\n            - type\n            - id\n          type: object\n        skill_card_title:\n          description: The title of the card\n          properties:\n            code:\n              description: An identifier for your title\n              example: my_transcripts\n              type: string\n            message:\n              description: The actual title to show in the UI\n              example: My Transcripts\n              type: string\n          required:\n            - code\n            - message\n          type: object\n        skill_card_type:\n          description: The type of card to create\n          enum:\n            - transcript\n            - keyword\n            - timeline\n            - status\n            - error\n          example: status\n          type: string\n        status:\n          description: Optional status. Used with a `card_type` of `status`.\n          properties:\n            code:\n              description: The type of status being set\n              enum:\n                - skills_pending_status\n                - custom_error\n              example: skills_pending_status\n              type: string\n            message:\n              description: The message for the status to show in the UI\n              example: We're preparing to process your file. Please hold on!\n              type: string\n          type: object\n        type:\n          description: \"`skill_card`\"\n          enum:\n            - skills_card\n          example: \"`skill_card`\"\n          type: string\n      required:\n        - type\n        - created_at\n        - skill\n        - skill_card_title\n      x-box-reference-category: skills\n      x-box-resource-display-name: Metadata Card\n      x-box-resource-id: metadata_card\n    MetadataCardEntry:\n      description: An entry in the `entries` attribute of a metadata card\n      properties:\n        text:\n          description: The text of the entry\n          example: keyword1\n          type: string\n        type:\n          description: \"`text`\"\n          enum:\n            - text\n          example: \"`text`\"\n          type: string\n      required:\n        - type\n        - text\n      x-box-reference-category: skills\n      x-box-resource-display-name: Metadata Card Entry\n      x-box-resource-id: metadata_cards_entry\n    MetadataCascadePolicies:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/MetadataCascadePolicy\"\n              type: array\n      description: A list of metadata cascade policies.\n      x-box-resource-display-name: Metadata Cascade Policies\n      x-box-resource-id: metadata_cascade_policies\n    MetadataCascadePolicy:\n      description: |-\n        A cascade policy that applies to metadata policy template\n        to a folder\n      properties:\n        id:\n          description: The ID of the metadata cascade policy object\n          example: 6fd4ff89-8fc1-42cf-8b29-1890dedd26d7\n          type: string\n        owner_enterprise:\n          description: The enterprise that owns the policy.\n          properties:\n            id:\n              description: The ID of the enterprise that owns the policy.\n              example: \"690678\"\n              type: string\n            type:\n              description: \"`enterprise`\"\n              example: \"`enterprise`\"\n              type: string\n          type: object\n        parent:\n          description: Represent the folder the policy is applied to\n          properties:\n            id:\n              description: The ID of the folder the policy is applied to\n              example: \"690678\"\n              type: string\n            type:\n              description: \"`folder`\"\n              example: \"`folder`\"\n              type: string\n          type: object\n        scope:\n          description: \u003e-\n            The scope of the target instance that will be cascaded down. The\n            `scope`\n\n            and `templateKey` together identify the metadata on the folder that is\n\n            to be cascaded down. Today, only `global` and `enterprise_*` scopes are\n\n            supported.\n          example: global\n          type: string\n        templateKey:\n          description: |-\n            The template key of the target metadata template to cascade down.\n            The `scope` \u0026 `templateKey` together identify the metadata on the f\n            older that is to be cascaded down.\n          example: demo\n          type: string\n      x-box-reference-category: metadata_cascade_policies\n      x-box-resource-display-name: Metadata Cascade Policy\n      x-box-resource-id: metadata_cascade_policy\n    MetadataFilter:\n      description: |-\n        A metadata filter used for searching by metadata\n        template\n      properties:\n        filters:\n          additionalProperties:\n            description: The value for the custom field\n            example: datasheet\n            type: string\n          description: |-\n            Additional key/value pairs for the template to search for.\n\n            For floats and dates, you can include an (inclusive) upper\n            bound parameter `lt` or (inclusive) lower bound parameter\n            `gt`, or both.\n\n            An example filter for a `“contractExpiration”` on or before\n            `08-01-16 UTC` would be listed as follow.\n\n            `{\"contractExpiration\":{\"lt\":\"2016-08-01T00:00:00Z\"}}`\n          example:\n            documentType: datasheet\n          type: object\n        scope:\n          description: Specifies the scope of the template to search for.\n          enum:\n            - global\n            - enterprise\n          example: global\n          type: string\n        templateKey:\n          description: |-\n            The key name of the template to search for. Only\n            one template name can be specified per filter.\n          example: marketingCollateral\n          type: string\n      type: object\n      x-box-resource-display-name: Metadata Filter\n      x-box-resource-id: metadata_filter\n    MetadataPatchItem:\n      description: |-\n        A [JSON-Patch](https://tools.ietf.org/html/rfc6902) operation for a\n        change to make to the metadata.\n      properties:\n        from:\n          description: |-\n            Required for `move` or `copy`.\n\n            The location in the metadata JSON object to move or copy from,\n            in the format of a\n            [JSON-Pointer](https://tools.ietf.org/html/rfc6901).\n          example: /nextState\n          type: string\n        op:\n          description: The operation type\n          enum:\n            - add\n            - replace\n            - remove\n            - test\n            - move\n            - copy\n          example: add\n          type: string\n        path:\n          description: |-\n            The location in the metadata JSON object\n            to apply the changes to, in the format of a\n            [JSON-Pointer](https://tools.ietf.org/html/rfc6901).\n\n            The path must always be prefixed with a `/`.\n\n            Special characters `~` and `/` in the key must be escaped\n            to ensure the operation can be executed as intended.\n          example: /currentState\n          type: string\n        value:\n          description: |-\n            The value to be set or tested.\n\n            Required for `add`, `replace`, and `test` operations.\n\n            For `add`, if the value exists already the previous value will be\n            overwritten by the new value.\n\n            For `replace`, the value must exist before replacing.\n\n            For `test`, the existing value at the `path` location must match\n            the specified value.\n          example: reviewed\n          type: string\n      type: object\n      x-box-resource-display-name: Metadata Patch Item\n      x-box-resource-id: metadata-patch-item\n    MetadataTemplate:\n      allOf:\n        - $ref: \"#/components/schemas/MetadataTemplate--Writable\"\n        - properties:\n            id:\n              description: The ID of the template\n              example: f7a9891f\n              type: string\n      description: A template for metadata that can be applied to files and folders\n      x-box-reference-category: metadata_templates\n      x-box-resource-display-name: Metadata Template\n      x-box-resource-id: metadata_template\n    MetadataTemplate--Writable:\n      description: |-\n        The writable parts of a metadata template that can be\n        applied to files and folders\n      properties:\n        displayName:\n          description: The display name of the template\n          example: Product Info\n          maxLength: 4096\n          type: string\n        fields:\n          description: The ordered set of key:value pairs for the template.\n          items:\n            $ref: \"#/components/schemas/MetadataTemplateField\"\n          type: array\n        hidden:\n          default: false\n          description: Whether this template is hidden in the UI\n          example: true\n          type: boolean\n        scope:\n          description: \u003e-\n            The scope of the object. `global` and `enterprise_*` scopes are\n            supported.\n\n\n            The `global` scope contains the template with a key of `properties`,\n\n            while the enterprise scope pertains to custom templates created within\n\n            the enterprise.\n\n             The ID of the enterprise will be appended to the enterprise scope.\n          example: enterprise_123456\n          type: string\n        templateKey:\n          description: \u003e-\n            A unique identifier for the template. The identifier must be unique\n            across\n\n            the scope of the enterprise to which the metadata template is being\n\n            applied.\n          example: productInfo\n          maxLength: 64\n          pattern: ^[a-zA-Z_][-a-zA-Z0-9_]*$\n          type: string\n      x-box-resource-display-name: Metadata Template (Writable)\n      x-box-resource-id: metadata_template--writable\n    MetadataTemplateField:\n      description: |-\n        An ordered set of key-value pairs that are part of a\n        metadata template\n      properties:\n        description:\n          description: A description of the field.\n          example: The category\n          maxLength: 4096\n          type: string\n        displayName:\n          description: The display name of the field.\n          example: Category\n          maxLength: 4096\n          type: string\n        hidden:\n          description: Whether this template is hidden in the UI\n          example: true\n          type: boolean\n        key:\n          description: |-\n            A unique identifier for the field. The identifier must\n            be unique within the template to which it belongs.\n          example: category\n          maxLength: 256\n          type: string\n        options:\n          items:\n            $ref: \"#/components/schemas/MetadataTemplateFieldOption\"\n          type: array\n        type:\n          description: The data type of the field's value\n          enum:\n            - string\n            - enum\n            - float\n            - date\n          example: string\n          type: string\n      x-box-resource-display-name: Metadata Template Field\n      x-box-resource-id: metadata_template_field\n    MetadataTemplateFieldOption:\n      description: |-\n        For type `enum` and `multiSelect`, one of the potential values\n        that can be selected\n      properties:\n        id:\n          description: The ID of the option\n          example: f7a9895f\n          type: string\n        key:\n          description: The text value of the option\n          example: category1\n          type: string\n      x-box-resource-display-name: Metadata Template Field Option\n      x-box-resource-id: metadata_template_field_option\n    MetadataTemplatePatch:\n      description: |-\n        A patch specification for the changes to make to the metadata template.\n        The changes are represented as a JSON array of operation objects.\n      items:\n        $ref: \"#/components/schemas/MetadataTemplatePatchItem\"\n      type: array\n      x-box-resource-display-name: Metadata Template Patch\n      x-box-resource-id: metadata-template-patch\n    MetadataTemplatePatchItem:\n      description: \u003e-\n        A patch operation for the\n\n        changes to make to the metadata template.\n\n\n        The possible operations are as follows.\n\n\n        * `addEnumOption` Adds an enum option at the\n          end of the enum option list for the specified ``fieldKey`.\n\n          Example `{\"op\":\"addEnumOption\",\"fieldKey\":\"category\",\n          \"data\":{\"key\":\"New Option\"}}`\n\n        * `addField` Adds a field at the end of the field list\n          for the template.\n\n          Example `{\"op\":\"addField\",\"data\":{\"displayName\":\"Category\",\n          \"key\":\"category\",\"hidden\":false,\"type\":\"string\"}}`.\n\n        * `editTemplate` Allows for editing the base properties\n          of a template, mainly the `displayName` and `hidden`\n          properties.\n\n          Example `{\"op\":\"editTemplate\",\"data\":{\"displayName\":\"Client\"}}`.\n\n        * `reorderEnumOptions` Reorders the enum option list to\n          match the requested enum option list.\n\n          Example `{\"op\":\"reorderEnumOptions\",\"fieldKey\":\"category\",\n          \"enumOptionKeys\":[\"option2\",\"option1\",\"option3\"]}`\n\n        * `reorderFields`  Reorders the field list to match the requested\n          field list\n\n          Example `{\"op\":\"reorderFields\",\"fieldKeys\":[\"field2\",\"field1\",\"field3\"]}`\n\n        The following changes can affect existing instances of this template.\n\n\n        * `editField` Edits any number of the base properties of a field, mainly\n          the `displayName`, `hidden`, `description`, and `key` properties.\n\n          If the key is changed, existing values of the specified field are\n          migrated to the new key. Search indexes are updated, which can take\n          time depending on how many files are affected by the change.\n\n          Example `{\"op\":\"editField\",\"fieldKey\":\"category\",\n          \"data\":{\"displayName\":\"Customer Group\"}}`\n\n        * `editEnumOption` Edits one of the options of an enum field.\n\n          Example `{\"op\":\"editEnumOption\",\"fieldKey\":\"years\",\"enumOptionKey\":\"2011\",\n          \"data\":{\"key\":\"2020\"}}`\n\n        * `removeEnumOption` Removes the specified enum option from the\n          specified enum field.\n\n          Example `{\"op\":\"removeEnumOption\",\"fieldKey\":\"years\",\n          \"enumOptionKey\":\"2011\"}`\n\n        * `removeField` Removes the specified field from the template.\n\n          Example `{\"op\":\"removeField\",\"fieldKey\":\"brand\"}`\n      properties:\n        data:\n          additionalProperties:\n            example: New name\n            type: string\n          description: The data for the operation. Can vary depending on the operation.\n          example:\n            displayName: New name\n        enumOptionKeys:\n          description: |-\n            For operations that affect multiple enum options,\n            the keys of the enum options to be affected.\n          example:\n            - option1\n            - option2\n            - option3\n          items:\n            type: string\n          type: array\n        fieldKeys:\n          description: |-\n            For operations that affect multiple fields, the keys of the\n            fields to be affected.\n          example:\n            - category\n            - name\n          items:\n            type: string\n          type: array\n        op:\n          description: The operation type to perform on the template.\n          enum:\n            - addEnumOption\n            - addField\n            - editTemplate\n            - reorderEnumOptions\n            - reorderFields\n            - editField\n            - editEnumOption\n            - removeEnumOption\n            - removeField\n          example: addEnumOption\n          type: string\n      type: object\n      x-box-resource-display-name: Metadata Template Patch Item\n      x-box-resource-id: metadata-template-patch-item\n    MetadataTemplates:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/MetadataTemplate\"\n              type: array\n      description: A list of metadata templates\n      x-box-resource-display-name: Metadata Templates\n      x-box-resource-id: metadata_templates\n    Metadatas:\n      description: A list of metadata\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/Metadata\"\n          type: array\n      x-box-resource-display-name: Metadatas\n      x-box-resource-id: metadatas\n    NotifiedUser:\n      description: A user that is notified of an event.\n      properties:\n        id:\n          description: The id of the user to notify\n          example: \"12312312\"\n          type: string\n        login:\n          description: The email address the user uses to notify\n          example: apple@example.com\n          type: string\n        name:\n          description: The name of the user to notify\n          example: Tim Apple\n          type: string\n        type:\n          description: The type of item to notify\n          enum:\n            - user\n          example: user\n          type: string\n      type: object\n      x-box-resource-display-name: Notified User\n      x-box-resource-id: notified_user\n    OAuth2Error:\n      description: An OAuth2 error\n      properties:\n        error:\n          description: The type of the error returned.\n          example: invalid_client\n          type: string\n        error_description:\n          description: The type of the error returned.\n          example: The client credentials are invalid\n          type: string\n      x-box-resource-display-name: OAuth2 Error\n      x-box-resource-id: oauth2_error\n    Owner:\n      description: The owner of this item\n      properties:\n        id:\n          description: The ID of user that owns this item.\n          example: \"123456\"\n          type: string\n      type: object\n      x-box-resource-display-name: Owner\n      x-box-resource-id: owner\n    Pagination:\n      description: The part of an API response that describes pagination\n      properties:\n        limit:\n          description: \u003e-\n            The limit that was used for these entries. This will be the same as\n            the\n\n            `limit` query parameter unless that value exceeded the maximum value\n\n            allowed. The maximum value varies by API.\n          example: 1000\n          format: int64\n          type: integer\n        offset:\n          description: \u003e-\n            The 0-based offset of the first entry in this set. This will be the\n            same\n\n            as the `offset` query parameter.\n          example: 2000\n          format: int64\n          type: integer\n        order:\n          description: The order by which items are returned\n          items:\n            $ref: \"#/components/schemas/PaginationOrder\"\n          type: array\n        total_count:\n          description: \u003e-\n            One greater than the offset of the last entry in the entire\n            collection.\n\n            The total number of entries in the collection may be less than\n\n            `total_count`.\n          example: 5000\n          format: int64\n          type: integer\n      x-box-resource-display-name: Pagination\n      x-box-resource-id: pagination\n    PaginationOrder:\n      description: The order in which a pagination is ordered\n      properties:\n        by:\n          description: The field to order by\n          example: type\n          type: string\n        direction:\n          description: The direction to order by, either ascending or descending\n          enum:\n            - ASC\n            - DESC\n          example: ASC\n          type: string\n      x-box-resource-display-name: Pagination Order\n      x-box-resource-id: pagination_order\n    Parent:\n      description: The parent for this item\n      properties:\n        id:\n          description: The ID of parent item\n          example: \"123\"\n          type: string\n      x-box-resource-display-name: Parent\n      x-box-resource-id: parent\n    Permissions:\n      description: The part of an API response that describes permissions\n      properties:\n        can_access:\n          description: Whether the current user can access the item\n          example: true\n          type: boolean\n        can_delete:\n          description: Whether the current user can delete the item\n          example: true\n          type: boolean\n        can_invite_collaborator:\n          description: Whether the current user can invite collaborators to the item\n          example: true\n          type: boolean\n        can_rename:\n          description: Whether the current user can rename the item\n          example: true\n          type: boolean\n        can_set_share_access:\n          description: Whether the current user can set share permissions for the item\n          example: true\n          type: boolean\n        can_share:\n          description: Whether the current user can share the item\n          example: true\n          type: boolean\n        can_upload:\n          description: Whether the current user can upload to the item\n          example: true\n          type: boolean\n      x-box-resource-display-name: Permissions\n      x-box-resource-id: permissions\n    Permissions--Writable:\n      description: An object defining if a file can be downloaded.\n      properties:\n        can_download:\n          description: Describes who is allowed to download this file\n          enum:\n            - open\n            - company\n          example: open\n          type: string\n      type: object\n      x-box-resource-display-name: Permissions (Writable)\n      x-box-resource-id: permissions--writable\n    RealtimeServer:\n      description: |-\n        A real-time server that can be used for\n        long polling user events\n      properties:\n        max_retries:\n          description: |-\n            The maximum number of retries this server will\n            allow before a new long poll should be started by\n            getting a [new list of server](#options-events).\n          example: 10\n          type: integer\n        retry_timeout:\n          description: |-\n            The maximum number of seconds without a response\n            after which you should retry the long poll connection.\n\n            This helps to overcome network issues where the long\n            poll looks to be working but no packages are coming\n            through.\n          example: 610\n          type: integer\n        ttl:\n          description: he time in minutes for which this server is available\n          example: 10\n          type: integer\n        type:\n          description: \"`realtime_server`\"\n          example: realtime_server\n          type: string\n        url:\n          description: The URL for the server.\n          example: |-\n            http://2.realtime.services.box.net/\\\n            subscribe\\?channel=cc807c9c4869ffb1c81a\u0026stream_type=all\n          type: string\n      x-box-resource-display-name: Realtime Server\n      x-box-resource-id: realtime_server\n    RealtimeServers:\n      description: |-\n        A list of real-time servers that can\n        be used for long-polling.\n      properties:\n        chunk_size:\n          description: The number of pages of servers remaining.\n          example: 1\n          format: int64\n          type: integer\n        entries:\n          items:\n            $ref: \"#/components/schemas/RealtimeServer\"\n          type: array\n      x-box-reference-category: events\n      x-box-resource-display-name: Realtime Servers\n      x-box-resource-id: realtime_servers\n    RecentItem:\n      description: A recent item accessed by a user.\n      properties:\n        interacted_at:\n          description: The time of the most recent interaction.\n          example: 2018-04-13T13:53:23-07:00\n          format: date-time\n          type: string\n        interaction_shared_link:\n          description: |-\n            If the item was accessed through a shared link it will appear here,\n            otherwise this will be null.\n          example: https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\n          type: string\n        interaction_type:\n          description: |-\n            The most recent type of access the user performed on\n            the item.\n          enum:\n            - item_preview\n            - item_upload\n            - item_comment\n            - item_open\n            - item_modify\n          example: item_preview\n          type: string\n        item:\n          allOf:\n            - $ref: \"#/components/schemas/Item\"\n            - description: The item that was recently accessed.\n        type:\n          description: \"`recent_item`\"\n          example: recent_item\n          type: string\n      x-box-reference-category: recent_items\n      x-box-resource-display-name: Recent Item\n      x-box-resource-id: recent_item\n    RecentItems:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/RecentItem\"\n              type: array\n      description: A list of recent items.\n      x-box-resource-display-name: Recent Items\n      x-box-resource-id: recent_items\n    Reference:\n      description: The bare basic reference for an object\n      properties:\n        id:\n          description: The ID of the object\n          example: \"11446498\"\n          type: string\n      x-box-resource-display-name: Reference\n      x-box-resource-id: reference\n    RetentionPolicies:\n      description: A list of retention policies\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/RetentionPolicy\"\n          type: array\n        total_count:\n          description: The number of retention policies.\n          example: 156\n          format: int64\n          type: integer\n      x-box-resource-display-name: Retention Policies\n      x-box-resource-id: retention_policies\n    RetentionPolicy:\n      allOf:\n        - $ref: \"#/components/schemas/RetentionPolicy--Mini\"\n        - properties:\n            created_at:\n              description: When the retention policy object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: |-\n                    A mini user object representing the user that\n                    created the retention policy\n            disposition_action:\n              description: |-\n                The disposition action of the retention policy.\n                This action can be `permanently_delete`, which\n                will cause the content retained by the policy\n                to be permanently deleted, or `remove_retention`,\n                which will lift the retention policy from the content,\n                allowing it to be deleted by users,\n                once the retention policy time period has passed.\n              enum:\n                - permanently_delete\n                - remove_retention\n              example: permanently_delete\n              type: string\n            modified_at:\n              description: When the retention policy object was last modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            policy_type:\n              description: |-\n                The type of the retention policy. A retention\n                policy type can either be `finite`, where a\n                specific amount of time to retain the content is known\n                upfront, or `indefinite`, where the amount of time\n                to retain the content is still unknown.\n              enum:\n                - finite\n                - indefinite\n              example: finite\n              type: string\n            retention_length:\n              description: |-\n                The length of the retention policy. This length\n                specifies the duration in days that the retention\n                policy will be active for after being assigned to\n                content.  If the policy has A `policy_type` of\n                `indefinite`, the `retention_length` will also be\n                `indefinite`.\n              example: \"0\"\n              format: int32\n              type: string\n            status:\n              description: |-\n                The status of the retention policy. The status of\n                a policy will be `active`, unless explicitly retired by an\n                administrator, in which case the status will be `retired`.\n                Once a policy has been retired, it cannot become\n                active again.\n              enum:\n                - active\n                - retired\n              example: active\n              type: string\n      description: |-\n        A retention policy blocks permanent deletion of content\n        for a specified amount of time. Admins can create retention\n        policies and then later assign them to specific folders\n        or their entire enterprise.  To use this feature, you must\n        have the manage retention policies scope enabled\n        for your API key via your application management console.\n      title: Retention Policy Object\n      x-box-reference-category: retention_policies\n      x-box-resource-display-name: Retention Policy\n      x-box-resource-id: retention_policy\n    RetentionPolicy--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            policy_name:\n              description: The name given to the retention policy\n              example: Some Policy Name\n              type: string\n            type:\n              description: \"`retention_policy`\"\n              enum:\n                - retention_policy\n              example: retention_policy\n              type: string\n      description: Mini representation of the retention policy\n      x-box-reference-hide: true\n      x-box-resource-display-name: Retention Policy (Mini)\n      x-box-resource-id: retention_policy--mini\n    RetentionPolicyAssignment:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            assigned_at:\n              description: |-\n                When the retention policy assignment object was\n                created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            assigned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: |-\n                    A mini user object representing the user that\n                    created the retention policy assignment object\n            assigned_to:\n              allOf:\n                - $ref: \"#/components/schemas/Reference\"\n                - description: |-\n                    The `type` and `id` of the content that is under\n                    retention. The `type` can either be `folder` or `\n                    enterprise`.\n            retention_policy:\n              allOf:\n                - $ref: \"#/components/schemas/RetentionPolicy--Mini\"\n                - description: |-\n                    A mini retention policy object representing the\n                    retention policy that has been assigned to this content\n            type:\n              description: \"`retention_policy_assignment`\"\n              enum:\n                - retention_policy_assignment\n              example: retention_policy_assignment\n              type: string\n      description: |-\n        The retention policy assignment endpoint provides a way\n        for admins to apply a retention policy on a per-folder\n        basis, or place a blanket policy over the entire\n        enterprise.\n      x-box-reference-category: retention_policies\n      x-box-resource-display-name: Retention Policy Assignment\n      x-box-resource-id: retention_policy_assignment\n    RetentionPolicyAssignments:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/RetentionPolicyAssignment\"\n              type: array\n      description: A list of retention policy assignments\n      x-box-resource-display-name: Retention Policy Assignments\n      x-box-resource-id: retention_policy_assignments\n    SessionEndpoints:\n      description: A list of endpoints for a chunked upload session.\n      properties:\n        abort:\n          description: The URL for used to abort the session.\n          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A\n          type: string\n        commit:\n          description: The URL used to commit the file\n          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/commit\n          type: string\n        list_parts:\n          description: The URL users to list all parts.\n          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/parts\n          type: string\n        log_event:\n          description: The URL used to get the upload log from.\n          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A/log\n          type: string\n        status:\n          description: The URL used to get the status of the upload.\n          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A\n          type: string\n        upload_part:\n          description: The URL to upload parts to\n          example: https://upload.box.com/api/2.0/files/upload_sessions/D5E3F7A\n          type: string\n      x-box-reference-category: chunked_uploads\n      x-box-resource-display-name: Session Endpoints\n      x-box-resource-id: session_endpoints\n    SharedLink:\n      description: \u003e-\n        Shared links provide direct, read-only access to files or folder on Box\n\n        using a URL. Shared links with open access level allow anyone with the URL\n\n        to access the item, while shared links with company or collaborators access\n\n        levels can only be accessed by appropriate authenticated Box users.\n      properties:\n        access:\n          description: \u003e-\n            The access level specified when the shared link was created. Can be\n            `open`\n\n            (\"People with the link\"), `company` (\"People in your company\"), or\n\n            `collaborators` (\"People in this folder\").  When creating a shared link,\n\n            if you omit this field then the access level will be set to the default\n\n            access level specified by the enterprise admin.\n          enum:\n            - open\n            - company\n            - collaborators\n          example: open\n          type: string\n        download_count:\n          description: The number of times the item has been downloaded\n          example: 3\n          type: integer\n        download_url:\n          description: |-\n            The \"direct Link\" URL to download the item. This URL can be used in\n            a browser to download the file. This URL includes the file\n            extension so that the file will be saved with the right file type.\n          example: https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg\n          type: string\n        effective_access:\n          description: \u003e-\n            The effective access level for the shared link.  This can be lower\n            than\n\n            the value in the `access` field if the enterprise settings restrict the\n\n            allowed access levels.\n          enum:\n            - open\n            - company\n            - collaborators\n          example: company\n          type: string\n        is_password_enabled:\n          description: Whether the shared link has a password set\n          example: true\n          type: boolean\n        permissions:\n          properties:\n            can_download:\n              description: \u003e-\n                Whether the shared link allows downloads.  For shared links on\n\n                folders, this also applies to any items in the folder. Can only be set\n\n                with access levels `open` and `company` (not `collaborators`).\n              example: true\n              type: boolean\n            can_preview:\n              description: \u003e-\n                Whether the shared link allows previewing.  Always `true`.  For\n                shared\n\n                links on folders, this also applies to any items in the folder.\n              example: true\n              type: boolean\n          type: object\n        preview_count:\n          description: The number of times the item has been previewed\n          example: 3\n          type: integer\n        unshared_at:\n          description: \u003e-\n            The date-time that this link will become disabled. This field can\n            only be\n\n            set by users with paid accounts.\n          example: 2018-04-13T13:53:23-07:00\n          format: date-time\n          type: string\n        url:\n          description: \u003e-\n            The URL to access the item on Box.  If entered in a browser, this\n            URL will\n\n            display the item in Box's preview UI.  If a custom URL is set this field\n\n            will return the custom URL, but the original URL will also continue to\n\n            work.\n          example: https://www.box.com/s/vspke7y05sb214wjokpk\n          type: string\n        vanity_url:\n          description: \u003e-\n            The \"Custom URL\" that can also be used to preview the item on\n            Box.  Custom\n\n            URLs can only be created or modified in the Box Web application.\n          example: https://acme.app.box.com/v/my_url/\n          type: string\n      x-box-resource-display-name: Shared Link\n      x-box-resource-id: shared_link\n    SharedLink--Writable:\n      description: The writable attributes for a Shared Link.\n      properties:\n        access:\n          description: |-\n            The level of access for the shared link. This can be\n            restricted to anyone with the link (`open`), only people\n            within the company (`company`) and only those who\n            have been invited to the folder (`collaborators`).\n\n            This field defaults to default access level\n            specified by the enterprise admin.\n          enum:\n            - open\n            - company\n            - collaborators\n          example: open\n          type: string\n        password:\n          description: |-\n            The password required to access the shared link. Set this to\n            `null` to remove the password.\n          example: do-not-use-this-password\n          type: string\n        permissions:\n          properties:\n            can_download:\n              description: |-\n                If the shared link allows for downloading of files.\n                This can only be set when `access` is set to\n                `open` or `company`.\n              example: true\n              type: boolean\n          type: object\n        unshared_at:\n          description: |-\n            The timestamp at which this shared link will\n            be disabled. This field can only be set by\n            users with paid accounts.\n          example: 2012-12-12T10:53:43-08:00\n          format: date-time\n          type: string\n      type: object\n      x-box-reference-hide: true\n      x-box-resource-display-name: Shared Link (Writable)\n      x-box-resource-id: shared_link--writable\n    Skill:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            api_key:\n              description: The client ID of the application\n              example: hxel2s12wd2h9r8ne103c4gjbqefofih\n              type: string\n            name:\n              description: The name of the skill\n              example: Hello World Skill\n              type: string\n            type:\n              description: \"`skill`\"\n              enum:\n                - skill\n              example: skill\n              type: string\n      description: An object representing a skill\n      x-box-resource-display-name: Skill\n      x-box-resource-id: skill\n    SkillInvocation:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: The time this invocation was created.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            enterprise:\n              allOf:\n                - $ref: \"#/components/schemas/Enterprise\"\n                - description: The enterprise that this invocation was triggered for\n            event:\n              allOf:\n                - $ref: \"#/components/schemas/Event\"\n                - description: The event that triggered this invocation\n            id:\n              description: Unique identifier for the invocation request.\n              example: fd1d2e53-35f5-41fb-9c25-4ba326daf2f9_341016304\n              type: string\n            skill:\n              allOf:\n                - $ref: \"#/components/schemas/Skill\"\n                - description: The skill that triggered this invocation\n            source:\n              allOf:\n                - oneOf:\n                    - $ref: \"#/components/schemas/File--Standard\"\n                    - $ref: \"#/components/schemas/Folder--Standard\"\n                - description: The item that caused the invocation to trigger\n            status:\n              properties:\n                additional_info:\n                  description: Additional status information.\n                  example: Example\n                  type: string\n                error_code:\n                  description: Error code information, if error occurred.\n                  example: \"400\"\n                  type: string\n                message:\n                  description: Status information\n                  example: Example\n                  type: string\n                state:\n                  description: \u003e-\n                    The state of this event.\n\n\n                    * `invoked` - Triggered the skill with event details to start\n                      applying skill on the file.\n                    * `processing` - Currently processing.\n\n                    * `success` - Completed processing with a success.\n\n                    * `transient_failure` - Encountered a failure which can be\n                      retried.\n                    * `permanent_failure` -  Encountered a permanent failure and\n                      retry would not help.\n                  enum:\n                    - invoked\n                    - processing\n                    - success\n                    - transient_failure\n                    - permanent_failure\n                  example: invoked\n                  type: string\n              type: object\n            token:\n              description: The read-only and read-write access tokens for this item\n              properties:\n                read:\n                  $ref: \"#/components/schemas/AccessToken--Mini\"\n                write:\n                  $ref: \"#/components/schemas/AccessToken--Mini\"\n              type: object\n            trigger:\n              description: Action that triggered the invocation\n              example: FILE_CONTENT\n              type: string\n            type:\n              description: \"`skill_invocation`\"\n              enum:\n                - skill_invocation\n              example: skill_invocation\n              type: string\n      description: |-\n        The payload of a Box skill as sent to a Custom Skill's\n        `invocation_url`.\n      x-box-resource-display-name: Skill Invocation\n      x-box-resource-id: skill_invocation\n    StoragePolicies:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/StoragePolicy\"\n              type: array\n      description: A list of storage policies.\n      x-box-resource-display-name: Storage Policies\n      x-box-resource-id: storage_policies\n    StoragePolicy:\n      allOf:\n        - $ref: \"#/components/schemas/StoragePolicy--Mini\"\n        - properties:\n            name:\n              description: A descriptive name of the region\n              example: Montreal / Dublin\n              type: string\n      description: The Storage Policy object describes the storage zone.\n      x-box-reference-category: multizones\n      x-box-resource-display-name: Storage Policy\n      x-box-resource-id: storage_policy\n    StoragePolicy--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            type:\n              description: \"`storage_policy`\"\n              enum:\n                - storage_policy\n              example: storage_policy\n              type: string\n      description: A mini description of a Storage Policy object\n      x-box-reference-hide: true\n      x-box-resource-display-name: Storage Policy (Mini)\n      x-box-resource-id: storage_policy--mini\n    StoragePolicyAssignment:\n      description: The assignment of a storage policy to a user or enterprise\n      properties:\n        assigned_to:\n          allOf:\n            - $ref: \"#/components/schemas/Reference\"\n            - description: The enterprise or use the policy is assigned to\n        storage_policy:\n          allOf:\n            - $ref: \"#/components/schemas/StoragePolicy--Mini\"\n            - description: The assigned storage policy\n      x-box-reference-category: multizones\n      x-box-resource-display-name: Storage Policy Assignment\n      x-box-resource-id: storage_policy_assignment\n    StoragePolicyAssignments:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/StoragePolicyAssignment\"\n              type: array\n      description: A list of storage policy assignments.\n      x-box-resource-display-name: Storage Policy Assignments\n      x-box-resource-id: storage_policy_assignments\n    Task:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            action:\n              description: |-\n                The action the task assignee will be prompted to\n                do.\n              enum:\n                - review\n              example: review\n              type: string\n            created_at:\n              description: When the task object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created the task\n            due_at:\n              description: When the task is due\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            is_completed:\n              description: Whether the task has been completed\n              example: true\n              type: boolean\n            item:\n              allOf:\n                - $ref: \"#/components/schemas/File--Mini\"\n                - description: The file associated with the task\n            message:\n              description: A message that will be included with the task\n              example: Legal review\n              type: string\n            task_assignment_collection:\n              allOf:\n                - $ref: \"#/components/schemas/TaskAssignments\"\n                - description: |-\n                    A collection of task assignment objects\n                    associated with the task\n            type:\n              description: \"`task`\"\n              enum:\n                - task\n              example: task\n              type: string\n      description: |-\n        Tasks allow for file-centric workflows in Box. Users can\n        create tasks on files and assign them to collaborators on\n        Box.\n      x-box-reference-category: tasks\n      x-box-resource-display-name: Task\n      x-box-resource-id: task\n    TaskAssignment:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            assigned_at:\n              description: |-\n                The date at which this task assignment was\n                assigned\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            assigned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who assigned this task\n            assigned_to:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user the task has been assigned to\n            completed_at:\n              description: |-\n                The date at which this task assignment was\n                completed\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            item:\n              allOf:\n                - $ref: \"#/components/schemas/File--Mini\"\n                - description: The file the task has been assigned to\n            message:\n              description: |-\n                A message that will be included with this task\n                assignment\n              example: Please review\n              type: string\n            reminded_at:\n              description: |-\n                The date at which this task assignment was\n                reminded\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            resolution_state:\n              description: State of this assignment\n              enum:\n                - completed\n                - incomplete\n                - approved\n                - rejected\n              example: incomplete\n              type: string\n            type:\n              description: \"`task_assignment`\"\n              enum:\n                - task_assignment\n              example: task_assignment\n              type: string\n      description: An assignment of a task to a file and user\n      x-box-reference-category: tasks\n      x-box-resource-display-name: Task Assignment\n      x-box-resource-id: task_assignment\n    TaskAssignments:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/TaskAssignment\"\n              type: array\n      description: A list of task assignments\n      type: object\n      x-box-resource-display-name: Task Assignments\n      x-box-resource-id: task_assignments\n    Tasks:\n      description: A list of tasks\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/Task\"\n          type: array\n        total_count:\n          description: \u003e-\n            One greater than the offset of the last entry in the entire\n            collection.\n\n            The total number of entries in the collection may be less than\n\n            `total_count`.\n          example: 5000\n          format: int64\n          type: integer\n      x-box-resource-display-name: Tasks\n      x-box-resource-id: tasks\n    TermsOfService:\n      allOf:\n        - $ref: \"#/components/schemas/TermsOfService--Mini\"\n        - properties:\n            created_at:\n              description: When the legal item was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            enterprise:\n              allOf:\n                - $ref: \"#/components/schemas/Enterprise\"\n                - description: The enterprise these terms apply to\n            modified_at:\n              description: When the legal item was modified.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            status:\n              description: Whether these terms are enabled or not\n              enum:\n                - enabled\n                - disabled\n              example: enabled\n              type: string\n            text:\n              description: |-\n                The text for your terms and conditions. This text could be\n                empty if the status is disabled\n              example: By using this service, you agree to ...\n              type: string\n            tos_type:\n              description: Whether to apply these terms to managed users or external users\n              enum:\n                - managed\n                - external\n              example: managed\n              type: string\n      description: |-\n        The root-level record that is supposed to represent a\n        single Terms of Service.\n      x-box-resource-display-name: Terms Of Service\n      x-box-resource-id: terms_of_service\n    TermsOfService--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            type:\n              description: \"`terms_of_service`\"\n              enum:\n                - terms_of_service\n              example: terms_of_service\n              type: string\n      description: |-\n        The root-level record that is supposed to represent a\n        single Terms of Service.\n      x-box-reference-hide: true\n      x-box-resource-display-name: Terms Of Service (Mini)\n      x-box-resource-id: terms_of_service--mini\n    TermsOfServiceUserStatus:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: When the legal item was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            is_accepted:\n              description: If the user has accepted the terms of services\n              example: true\n              type: boolean\n            modified_at:\n              description: When the legal item was modified.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            tos:\n              allOf:\n                - $ref: \"#/components/schemas/TermsOfService--Mini\"\n                - description: The terms of service\n            type:\n              description: \"`terms_of_service_user_status`\"\n              enum:\n                - terms_of_service_user_status\n              example: terms_of_service_user_status\n              type: string\n            user:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user\n      description: The association between a Terms of Service and a user\n      x-box-reference-category: terms_of_services\n      x-box-resource-display-name: ToS User Status\n      x-box-resource-id: terms_of_service_user_status\n    TermsOfServiceUserStatuses:\n      description: A list of terms of service user statuses\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/TermsOfServiceUserStatus\"\n          type: array\n        total_count:\n          description: The total number of objects.\n          example: 2\n          format: int64\n          type: integer\n      x-box-resource-display-name: ToS User Statuses\n      x-box-resource-id: terms_of_services_user_statuses\n    TermsOfServices:\n      description: A list of terms of services\n      properties:\n        entries:\n          items:\n            $ref: \"#/components/schemas/TermsOfService\"\n          type: array\n        total_count:\n          description: The total number of objects.\n          example: 2\n          format: int64\n          type: integer\n      x-box-reference-category: terms_of_services\n      x-box-resource-display-name: Terms Of Services\n      x-box-resource-id: terms_of_services\n    TokenRequest:\n      description: A request for a new OAuth2 token\n      properties:\n        actor_token:\n          description: \u003e-\n            The actor token used to create an annotator token.\n\n            This is a JWT assertion.\n\n\n            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\n\n            as the `grant_type`.\n          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\n          format: token\n          type: string\n        actor_token_type:\n          description: \u003e-\n            The type of `actor_token` passed in.\n\n\n            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\n\n            as the `grant_type`.\n          enum:\n            - urn:ietf:params:oauth:token-type:id_token\n          example: urn:ietf:params:oauth:token-type:id_token\n          format: urn\n          type: string\n        assertion:\n          description: \u003e-\n            A JWT assertion for which to request a new access token.\n\n\n            Used in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer`\n\n            as the `grant_type`.\n          example: xxxxx.yyyyy.zzzzz\n          format: jwt\n          type: string\n        client_id:\n          description: |-\n            The Client ID of the application requesting an access token.\n\n            Used in combination with `authorization_code` or\n            `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.\n          example: ly1nj6n11vionaie65emwzk575hnnmrk\n          type: string\n        client_secret:\n          description: |-\n            The client secret of the application requesting an access token.\n\n            Used in combination with `authorization_code` or\n            `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.\n          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1\n          type: string\n        code:\n          description: |-\n            The client-side authorization code passed to your application by\n            Box in the browser redirect after the user has successfully\n            granted your application permission to make API calls on their\n            behalf.\n\n            Used in combination with `authorization_code` as the `grant_type`.\n          example: n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW\n          format: token\n          type: string\n        grant_type:\n          description: \u003e-\n            The type of request being made, either using a client-side obtained\n\n            authorization code, a refresh token, a JWT assertion, or another access\n\n            token for the purpose of downscoping a token.\n          enum:\n            - authorization_code\n            - refresh_token\n            - urn:ietf:params:oauth:grant-type:jwt-bearer\n            - urn:ietf:params:oauth:grant-type:token-exchange\n          example: authorization_code\n          format: urn\n          type: string\n        refresh_token:\n          description: |-\n            A refresh token used to get a new access token with.\n\n            Used in combination with `refresh_token` as the `grant_type`.\n          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\n          format: token\n          type: string\n        resource:\n          description: Full URL for the file that the token should be generated for.\n          example: https://api.box.com/2.0/files/123456\n          format: url\n          type: string\n        scope:\n          description: |-\n            The space-delimited list of scopes that you want apply to the\n            new access token.\n\n            The `subject_token` will need to have all of these scopes or\n            the call will error with **401 Unauthorized**.\n          example: item_upload item_preview base_explorer\n          format: space_delimited_list\n          type: string\n        subject_token:\n          description: \u003e-\n            The token to exchange for a downscoped token. This can be a regular\n\n            access token, a JWT assertion, or an app token.\n\n\n            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\n\n            as the `grant_type`.\n          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ\n          format: token\n          type: string\n        subject_token_type:\n          description: \u003e-\n            The type of `subject_token` passed in.\n\n\n            Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange`\n\n            as the `grant_type`.\n          enum:\n            - urn:ietf:params:oauth:token-type:access_token\n          example: urn:ietf:params:oauth:token-type:access_token\n          type: string\n      required:\n        - grant_type\n      x-box-resource-display-name: Token Request\n      x-box-resource-id: token_request\n    TokenRevocationRequest:\n      description: A request to revoke an OAuth2 token\n      properties:\n        client_id:\n          description: |-\n            The Client ID of the application requesting to revoke the\n            access token.\n          example: ly1nj6n11vionaie65emwzk575hnnmrk\n          type: string\n        client_secret:\n          description: |-\n            The client secret of the application requesting to revoke\n            an access token.\n          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1\n          type: string\n        token:\n          description: The access token to revoke.\n          example: n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW\n          format: token\n          type: string\n      required:\n        - grant_type\n      x-box-resource-display-name: Token Revocation Request\n      x-box-resource-id: token_revocation_request\n    UploadPart:\n      allOf:\n        - $ref: \"#/components/schemas/UploadPart--Mini\"\n        - properties:\n            sha1:\n              description: The SHA1 hash of the chunk.\n              example: 134b65991ed521fcfe4724b7d814ab8ded5185dc\n              type: string\n      description: |-\n        A chunk of a file uploaded as part of\n        an upload session.\n      x-box-reference-category: chunked_uploads\n      x-box-resource-display-name: Upload Part\n      x-box-resource-id: upload_part\n    UploadPart--Mini:\n      description: |-\n        The basic representation of an upload\n        session chunk.\n      properties:\n        offset:\n          description: |-\n            The offset of the chunk within the file\n            in bytes. The lower bound of the position\n            of the chunk within the file.\n          example: 16777216\n          format: int64\n          type: integer\n        part_id:\n          description: The unique ID of the chunk.\n          example: 6F2D3486\n          type: string\n        size:\n          description: The size of the chunk in bytes.\n          example: 3222784\n          format: int64\n          type: integer\n      x-box-resource-display-name: Upload Part (Mini)\n      x-box-resource-id: upload_part--mini\n    UploadParts:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/UploadPart\"\n              type: array\n      description: |-\n        A list of uploaded chunks for an upload\n        session.\n      x-box-resource-display-name: Upload Parts\n      x-box-resource-id: upload_parts\n    UploadSession:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            num_parts_processed:\n              description: |-\n                The number of parts that have been uploaded and processed\n                by the server. This starts at `0`.\n\n                When committing a file files, inspecting this property can\n                provide insight if all parts have been uploaded correctly.\n              example: 455\n              format: int32\n              type: integer\n            part_size:\n              description: |-\n                The  size in bytes that must be used for all parts of of the\n                upload.\n\n                Only the last part is allowed to be of a smaller size.\n              example: 1024\n              format: int64\n              type: integer\n            session_endpoints:\n              allOf:\n                - $ref: \"#/components/schemas/SessionEndpoints\"\n                - description: A list of endpoints for this session.\n            session_expires_at:\n              description: The date and time when this session expires.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            total_parts:\n              description: |-\n                The total number of parts expected in this upload session,\n                as determined by the file size and part size.\n              example: 1000\n              format: int32\n              type: integer\n            type:\n              description: \"`upload_session`\"\n              enum:\n                - upload_session\n              example: upload_session\n              type: string\n      description: An upload session for chunk uploading a file.\n      x-box-reference-category: chunked_uploads\n      x-box-resource-display-name: Upload Session\n      x-box-resource-id: upload_session\n    UploadUrl:\n      description: The details for the upload session for the file.\n      properties:\n        upload_token:\n          description: An optional access token to use to upload the file\n          example: Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP\n          type: string\n        upload_url:\n          description: |-\n            A URL for an upload session that can be used to upload\n            the file.\n          example: https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234\n          type: string\n      x-box-reference-category: file_uploads\n      x-box-resource-display-name: Upload Url\n      x-box-resource-id: upload_url\n    User:\n      allOf:\n        - $ref: \"#/components/schemas/User--Standard\"\n        - properties:\n            can_see_managed_users:\n              description: Whether the user can see other enterprise users in her contact\n                list\n              example: true\n              type: boolean\n            enterprise:\n              allOf:\n                - $ref: \"#/components/schemas/Enterprise\"\n                - description: Representation of the user’s enterprise\n            hostname:\n              description: \u003e-\n                The root (protocol, subdomain, domain) of any links that need to\n                be\n\n                generated for the user\n              example: https://example.com/\n              type: string\n            is_exempt_from_device_limits:\n              description: Whether to exempt the user from Enterprise device limits\n              example: true\n              type: boolean\n            is_exempt_from_login_verification:\n              description: Whether the user must use two-factor authentication\n              example: true\n              type: boolean\n            is_external_collab_restricted:\n              description: \u003e-\n                Whether the user is allowed to collaborate with users outside\n                her\n\n                enterprise\n              example: true\n              type: boolean\n            is_platform_access_only:\n              description: Whether the user is an App User\n              example: true\n              type: boolean\n            is_sync_enabled:\n              description: Whether the user can use Box Sync\n              example: true\n              type: boolean\n            my_tags:\n              description: \u003e-\n                Tags for all files and folders owned by the user. Values\n                returned\n\n                will  only contain tags that were set by the requester.\n              example:\n                - important\n              items:\n                type: string\n              type: array\n            role:\n              description: The user’s enterprise role\n              enum:\n                - admin\n                - coadmin\n                - user\n              example: admin\n              type: string\n            tracking_codes:\n              description: An array of key/value pairs set by the user’s admin\n              example:\n                - \"code1: 12345\"\n              items:\n                type: string\n              type: array\n      description: |-\n        A full representation of a user, as can be returned from any\n        user API endpoint.\n      x-box-reference-category: users\n      x-box-resource-display-name: User\n      x-box-resource-id: user\n    User--Mini:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            login:\n              description: The email address the user uses to log in\n              example: ceo@box.com\n              type: string\n            name:\n              description: The name of the user\n              example: Aaron Levie\n              maxLength: 50\n              type: string\n            type:\n              description: \"`user`\"\n              enum:\n                - user\n              example: user\n              type: string\n      description: |-\n        A mini representation of a user, used when\n        nested under another resource.\n      x-box-reference-hide: true\n      x-box-resource-display-name: User (Mini)\n      x-box-resource-id: user--mini\n    User--Standard:\n      allOf:\n        - $ref: \"#/components/schemas/User--Mini\"\n        - properties:\n            address:\n              description: The user’s address\n              example: 900 Jefferson Ave, Redwood City, CA 94063\n              maxLength: 255\n              type: string\n            avatar_url:\n              description: URL of the user’s avatar image\n              example: https://www.box.com/api/avatar/large/181216415\n              type: string\n            created_at:\n              description: When the user object was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            job_title:\n              description: The user’s job title\n              example: CEO\n              maxLength: 100\n              type: string\n            language:\n              description: The user's preferred language\n              example: en\n              format: ISO639-1-BOX\n              type: string\n            max_upload_size:\n              description: The maximum individual file size in bytes the user can have\n              example: 2147483648\n              type: integer\n            modified_at:\n              description: When the user object was last modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            phone:\n              description: The user’s phone number\n              example: \"6509241374\"\n              maxLength: 100\n              type: string\n            space_amount:\n              description: The user’s total available space amount in bytes\n              example: 11345156112\n              type: integer\n            space_used:\n              description: The amount of space in use by the user\n              example: 1237009912\n              type: integer\n            status:\n              description: The user's account status\n              enum:\n                - active\n                - inactive\n                - cannot_delete_edit\n                - cannot_delete_edit_upload\n              example: active\n              type: string\n            timezone:\n              description: The user's timezone\n              example: Africa/Bujumbura\n              format: timezone\n              type: string\n      description: |-\n        A standard representation of a user, as returned from any\n        user API endpoints by default\n      x-box-reference-hide: true\n      x-box-resource-display-name: User (Standard)\n      x-box-resource-id: user--standard\n    Users:\n      allOf:\n        - $ref: \"#/components/schemas/Pagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/User\"\n              type: array\n      description: A list of users.\n      x-box-resource-display-name: Users\n      x-box-resource-id: users\n    Watermark:\n      description: |-\n        A watermark is a semi-transparent overlay on an embedded file\n        preview that displays a viewer's email address or user ID\n        and the time of access over a file's content\n      properties:\n        watermark:\n          properties:\n            created_at:\n              description: When this watermark was created\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_at:\n              description: When this task was modified\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n          type: object\n      x-box-reference-category: watermarks\n      x-box-resource-display-name: Watermark\n      x-box-resource-id: watermark\n    WatermarkInfo:\n      description: The watermark information about this item\n      properties:\n        is_watermarked:\n          description: Whether the item is watermarked or not.\n          example: true\n          type: boolean\n      x-box-resource-display-name: Watermark Info\n      x-box-resource-id: watermark_info\n    WebLink:\n      allOf:\n        - $ref: \"#/components/schemas/Item\"\n        - properties:\n            created_at:\n              description: When this file was created on Box’s servers.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created this web link\n            description:\n              description: |-\n                The description accompanying the web link. This is\n                visible within the Box web application.\n              example: Example page\n              type: string\n            item_status:\n              description: \u003e-\n                Whether this item is deleted or not. Values include `active`,\n\n                `trashed` if the file has been moved to the trash, and `deleted` if\n\n                the file has been permanently deleted\n              enum:\n                - active\n                - trashed\n                - deleted\n              example: active\n              type: string\n            modified_at:\n              description: |-\n                When this file was last updated on the Box\n                servers.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            modified_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who last modified this web link\n            owned_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who owns this web link\n            parent:\n              allOf:\n                - $ref: \"#/components/schemas/Item\"\n                - description: The parent object the web link belongs to\n            path_collection:\n              description: The path of folders to this link, starting at the root\n              items:\n                $ref: \"#/components/schemas/Folder--Mini\"\n              type: array\n            purged_at:\n              description: When this file will be permanently deleted.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            shared_link:\n              allOf:\n                - $ref: \"#/components/schemas/SharedLink\"\n                - description: |-\n                    The shared link object for this item. Will be\n                    `null` if no shared link has been created.\n            trashed_at:\n              description: When this file was last moved to the trash.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            type:\n              description: \"`web_link`\"\n              enum:\n                - web_link\n              example: web_link\n              type: string\n            url:\n              description: The URL this web link points to\n              example: https://www.example.com/example/1234\n              type: string\n      description: |-\n        Web links are objects that point to URLs. These objects\n        are also known as bookmarks within the Box web application.\n\n        Web link objects are treated similarly to file objects,\n        they will also support most actions that apply to regular files.\n      x-box-reference-category: web_links\n      x-box-resource-display-name: Web Link\n      x-box-resource-id: web_link\n    Webhook:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            address:\n              description: The URL that is notified by this webhook\n              example: https://example.com/webhooks\n              type: string\n            created_at:\n              description: |-\n                A timestamp identifying the time that\n                the webhook was created.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user who created the webhook\n            target:\n              description: The item that will trigger the webhook\n              properties:\n                id:\n                  description: The ID of the item to trigger a webhook\n                  example: \"1231232\"\n                  type: string\n                type:\n                  description: The type of item to trigger a webhook\n                  enum:\n                    - file\n                    - folder\n                  example: file\n                  type: string\n              type: object\n            triggers:\n              description: |-\n                An array of event names that this webhook is\n                to be triggered for\n              example:\n                - FILE.UPLOADED\n              items:\n                $ref: \"#/components/schemas/WebhookTrigger\"\n              type: array\n            type:\n              description: \"`webhook`\"\n              enum:\n                - webhook\n              example: webhook\n              type: string\n      description: Represents a configured webhook.\n      x-box-reference-category: webhooks\n      x-box-resource-display-name: Webhook\n      x-box-resource-id: webhook\n    WebhookEvent:\n      allOf:\n        - $ref: \"#/components/schemas/Reference\"\n        - properties:\n            created_at:\n              description: |-\n                A timestamp identifying the time that\n                the webhook event was triggered.\n              example: 2012-12-12T10:53:43-08:00\n              format: date-time\n              type: string\n            created_by:\n              allOf:\n                - $ref: \"#/components/schemas/User--Mini\"\n                - description: The user that triggered this event\n            source:\n              allOf:\n                - oneOf:\n                    - $ref: \"#/components/schemas/File--Standard\"\n                    - $ref: \"#/components/schemas/Folder--Standard\"\n                - description: The item that caused the event to trigger\n            trigger:\n              allOf:\n                - $ref: \"#/components/schemas/WebhookTrigger\"\n                - description: The event name that triggered this webhook\n            type:\n              description: \"`webhook_event`\"\n              enum:\n                - webhook_event\n              example: webhook_event\n              type: string\n            webhook:\n              allOf:\n                - $ref: \"#/components/schemas/Webhook\"\n                - description: The webhook object that triggered this event\n      description: The event that is sent to a webhook address when an event happens\n      x-box-resource-display-name: Webhook Event\n      x-box-resource-id: webhook_event\n    WebhookTrigger:\n      description: The event name that triggered this webhook\n      enum:\n        - FILE.UPLOADED\n        - FILE.PREVIEWED\n        - FILE.DOWNLOADED\n        - FILE.TRASHED\n        - FILE.DELETED\n        - FILE.RESTORED\n        - FILE.COPIED\n        - FILE.MOVED\n        - FILE.LOCKED\n        - FILE.UNLOCKED\n        - FILE.RENAMED\n        - COMMENT.CREATED\n        - COMMENT.UPDATED\n        - COMMENT.DELETED\n        - TASK_ASSIGNMENT.CREATED\n        - TASK_ASSIGNMENT.UPDATED\n        - METADATA_INSTANCE.CREATED\n        - METADATA_INSTANCE.UPDATED\n        - METADATA_INSTANCE.DELETED\n        - FOLDER.CREATED\n        - FOLDER.RENAMED\n        - FOLDER.DOWNLOADED\n        - FOLDER.RESTORED\n        - FOLDER.DELETED\n        - FOLDER.COPIED\n        - FOLDER.MOVED\n        - FOLDER.TRASHED\n        - WEBHOOK.DELETED\n        - COLLABORATION.CREATED\n        - COLLABORATION.ACCEPTED\n        - COLLABORATION.REJECTED\n        - COLLABORATION.REMOVED\n        - COLLABORATION.UPDATED\n        - SHARED_LINK.DELETED\n        - SHARED_LINK.CREATED\n        - SHARED_LINK.UPDATED\n      example: FILE.UPLOADED\n      type: string\n      x-box-resource-display-name: Webhook Trigger\n      x-box-resource-id: webhook_trigger\n    Webhooks:\n      allOf:\n        - $ref: \"#/components/schemas/MarkerPagination\"\n        - properties:\n            entries:\n              items:\n                $ref: \"#/components/schemas/Webhook\"\n              type: array\n      description: A list of webhooks.\n      x-box-resource-display-name: Webhooks\n      x-box-resource-id: webhooks\n  securitySchemes:\n    OAuth2Security:\n      flows:\n        authorizationCode:\n          authorizationUrl: https://account.box.com/api/oauth2/authorize\n          scopes:\n            manage_app_users: Provision and manage app users\n            manage_data_retention: Manage data retention polices\n            manage_enterprise_properties: Manage enterprise properties\n            manage_groups: Manage an enterprise's groups\n            manage_legal_hold: Manage Legal Holds\n            manage_managed_users: Provision and manage managed users\n            manage_webhook: Create webhooks programmatically through the API\n            root_readonly: Read all files and folders stored in Box\n            root_readwrite: Read and write all files and folders stored in Box\n          tokenUrl: https://api.box.com/oauth2/token\n      type: oauth2\n"
		}
	},
	"Error": "parse: parse spec: paths: /files/{file_id}/trash: get: operation \"get_files_id_trash\": responses: 200: content: \"application/json\": schema: parse schema: resolve \"#/components/schemas/File\": parse schema: allOf: [1]: parse schema: property \"allowed_invitee_roles\": parse enum values: parse value \"\\\"open\\\"\": expected type \"array\", got \"string\""
}