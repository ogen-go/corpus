{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/anz-bank/sysl"
		},
		"file": {
			"name": "examples.yaml",
			"size": 0,
			"path": "pkg/importer/tests/openapi3/examples.yaml",
			"byteSize": 3127,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: Examples\n  version: 1.2.3\npaths:\n  /example:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PropertyLevelExample\"\n      responses:\n        \"200\":\n          description: OK\n          headers:\n            Location:\n              description: Location description\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ObjectLevelExample\"\n              example:\n                id: 12\n                name: Paul Smith\n        \"500\":\n          description: ERROR\n          content:\n            application/json:\n              schema:\n                type: string\n                example: Internal Server Error\n\n  /examples:\n    post:\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ObjectLevelExample\"\n            examples:\n              Jessica:\n                value:\n                  id: 10\n                  name: Jessica Smith\n              Ron:\n                value:\n                  id: 11\n                  name: Ron Stewart\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ReusedExample\"\n              examples:\n                unregistered:\n                  $ref: \"#/components/examples/resp_create_prospect\"\n                registered:\n                  $ref: \"#/components/examples/resp_verify_pin\"\n\ncomponents:\n  schemas:\n    PropertyLevelExample:\n      type: object\n      properties:\n        response:\n          type: string\n          example: '[{\"assertions\":[{\"assertionScheme\":\"test\"}]}]'\n        responseCode:\n          type: integer\n          example: 1200\n        responseMsg:\n          type: string\n          example: Completed\n        registered:\n          type: boolean\n          example: true\n        responseDetail:\n          type: array\n          items:\n            type: number\n            format: float\n          example:\n            - 11.220000\n            - 7.800000\n            - 8.900000\n    ReusedExample:\n      properties:\n        authId:\n          type: string\n        nextStages:\n          type: array\n          items:\n            type: string\n            enum: [create_prospect, verify_pin]\n    ObjectLevelExample:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n    ComplexExample:\n      type: string\n      example:\n        - test1:\n            test1:\n              test1: some string\n        - test2:\n            test2: another string\n    ExampleWithCRLFCharacters:\n      type: string\n      example: \"for the windows users out there \\r\\nhello there\"\n\n  examples:\n    resp_create_prospect:\n      value:\n        authId: string\n        nextStages:\n          - create_prospect\n    resp_verify_pin:\n      value:\n        authId: string\n        nextStages:\n          - verify_pin\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /example: post: responses: 200: headers: Location: parameter MUST contain either a schema property, or a content property"
}