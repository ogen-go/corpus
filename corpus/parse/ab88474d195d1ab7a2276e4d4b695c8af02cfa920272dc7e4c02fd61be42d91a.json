{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/oasis-tcs/odata-openapi"
		},
		"file": {
			"name": "authorization.openapi3.json",
			"size": 0,
			"path": "examples/authorization.openapi3.json",
			"byteSize": 20151,
			"content": "{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"Service for namespace auth.example\",\n        \"description\": \"This service is located at [https://localhost/service-root/](https://localhost/service-root/)\\n\\n## Entity Data Model\\n![ER Diagram](https://yuml.me/diagram/class/[Person{bg:lightslategray}],[People%20{bg:lawngreen}]++-*\u003e[Person])\\n\\n### Legend\\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:lightslategray}],[EntitySet/Singleton/Operation{bg:lawngreen}])\",\n        \"version\": \"\"\n    },\n    \"servers\": [\n        {\n            \"url\": \"https://localhost/service-root\"\n        }\n    ],\n    \"tags\": [\n        {\n            \"name\": \"People\"\n        }\n    ],\n    \"paths\": {\n        \"/People\": {\n            \"get\": {\n                \"summary\": \"Get entities from People\",\n                \"tags\": [\n                    \"People\"\n                ],\n                \"parameters\": [\n                    {\n                        \"$ref\": \"#/components/parameters/top\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/skip\"\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/search\"\n                    },\n                    {\n                        \"name\": \"$filter\",\n                        \"description\": \"Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)\",\n                        \"in\": \"query\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    },\n                    {\n                        \"$ref\": \"#/components/parameters/count\"\n                    },\n                    {\n                        \"name\": \"$orderby\",\n                        \"description\": \"Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)\",\n                        \"in\": \"query\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"uniqueItems\": true,\n                            \"items\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"ID\",\n                                    \"ID desc\",\n                                    \"Name\",\n                                    \"Name desc\"\n                                ]\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"$select\",\n                        \"description\": \"Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)\",\n                        \"in\": \"query\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"uniqueItems\": true,\n                            \"items\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"ID\",\n                                    \"Name\"\n                                ]\n                            }\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Retrieved entities\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"type\": \"object\",\n                                    \"title\": \"Collection of Person\",\n                                    \"properties\": {\n                                        \"@odata.count\": {\n                                            \"$ref\": \"#/components/schemas/count\"\n                                        },\n                                        \"value\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/components/schemas/auth.example.Person\"\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"4XX\": {\n                        \"$ref\": \"#/components/responses/error\"\n                    }\n                }\n            },\n            \"post\": {\n                \"summary\": \"Add new entity to People\",\n                \"tags\": [\n                    \"People\"\n                ],\n                \"requestBody\": {\n                    \"description\": \"New entity\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/auth.example.Person-create\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created entity\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/auth.example.Person\"\n                                }\n                            }\n                        }\n                    },\n                    \"4XX\": {\n                        \"$ref\": \"#/components/responses/error\"\n                    }\n                }\n            }\n        },\n        \"/People('{ID}')\": {\n            \"parameters\": [\n                {\n                    \"description\": \"key: ID\",\n                    \"in\": \"path\",\n                    \"name\": \"ID\",\n                    \"required\": true,\n                    \"schema\": {\n                        \"type\": \"string\"\n                    }\n                }\n            ],\n            \"get\": {\n                \"summary\": \"Get entity from People by key\",\n                \"tags\": [\n                    \"People\"\n                ],\n                \"parameters\": [\n                    {\n                        \"name\": \"$select\",\n                        \"description\": \"Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)\",\n                        \"in\": \"query\",\n                        \"explode\": false,\n                        \"schema\": {\n                            \"type\": \"array\",\n                            \"uniqueItems\": true,\n                            \"items\": {\n                                \"type\": \"string\",\n                                \"enum\": [\n                                    \"ID\",\n                                    \"Name\"\n                                ]\n                            }\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Retrieved entity\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/auth.example.Person\"\n                                }\n                            }\n                        }\n                    },\n                    \"4XX\": {\n                        \"$ref\": \"#/components/responses/error\"\n                    }\n                }\n            },\n            \"patch\": {\n                \"summary\": \"Update entity in People\",\n                \"tags\": [\n                    \"People\"\n                ],\n                \"requestBody\": {\n                    \"description\": \"New property values\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/auth.example.Person-update\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success\"\n                    },\n                    \"4XX\": {\n                        \"$ref\": \"#/components/responses/error\"\n                    }\n                }\n            },\n            \"delete\": {\n                \"summary\": \"Delete entity from People\",\n                \"tags\": [\n                    \"People\"\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success\"\n                    },\n                    \"4XX\": {\n                        \"$ref\": \"#/components/responses/error\"\n                    }\n                }\n            }\n        },\n        \"/$batch\": {\n            \"post\": {\n                \"summary\": \"Send a group of requests\",\n                \"description\": \"Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\\n\\n*Please note that \\\"Try it out\\\" is not supported for this request.*\",\n                \"tags\": [\n                    \"Batch Requests\"\n                ],\n                \"requestBody\": {\n                    \"required\": true,\n                    \"description\": \"Batch request\",\n                    \"content\": {\n                        \"multipart/mixed;boundary=request-separator\": {\n                            \"schema\": {\n                                \"type\": \"string\"\n                            },\n                            \"example\": \"--request-separator\\nContent-Type: application/http\\nContent-Transfer-Encoding: binary\\n\\nGET People HTTP/1.1\\nAccept: application/json\\n\\n\\n--request-separator--\"\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Batch response\",\n                        \"content\": {\n                            \"multipart/mixed\": {\n                                \"schema\": {\n                                    \"type\": \"string\"\n                                },\n                                \"example\": \"--response-separator\\nContent-Type: application/http\\n\\nHTTP/1.1 200 OK\\nContent-Type: application/json\\n\\n{...}\\n--response-separator--\"\n                            }\n                        }\n                    },\n                    \"4XX\": {\n                        \"$ref\": \"#/components/responses/error\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"auth.example.Person\": {\n                \"title\": \"Person\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Name\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    }\n                }\n            },\n            \"auth.example.Person-create\": {\n                \"title\": \"Person (for create)\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"ID\": {\n                        \"type\": \"string\"\n                    },\n                    \"Name\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    }\n                },\n                \"required\": [\n                    \"ID\"\n                ]\n            },\n            \"auth.example.Person-update\": {\n                \"title\": \"Person (for update)\",\n                \"type\": \"object\",\n                \"properties\": {\n                    \"Name\": {\n                        \"type\": \"string\",\n                        \"nullable\": true\n                    }\n                }\n            },\n            \"count\": {\n                \"anyOf\": [\n                    {\n                        \"type\": \"integer\",\n                        \"minimum\": 0\n                    },\n                    {\n                        \"type\": \"string\"\n                    }\n                ],\n                \"description\": \"The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option.\"\n            },\n            \"error\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"error\"\n                ],\n                \"properties\": {\n                    \"error\": {\n                        \"type\": \"object\",\n                        \"required\": [\n                            \"code\",\n                            \"message\"\n                        ],\n                        \"properties\": {\n                            \"code\": {\n                                \"type\": \"string\"\n                            },\n                            \"message\": {\n                                \"type\": \"string\"\n                            },\n                            \"target\": {\n                                \"type\": \"string\"\n                            },\n                            \"details\": {\n                                \"type\": \"array\",\n                                \"items\": {\n                                    \"type\": \"object\",\n                                    \"required\": [\n                                        \"code\",\n                                        \"message\"\n                                    ],\n                                    \"properties\": {\n                                        \"code\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"message\": {\n                                            \"type\": \"string\"\n                                        },\n                                        \"target\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            },\n                            \"innererror\": {\n                                \"type\": \"object\",\n                                \"description\": \"The structure of this object is service-specific\"\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"parameters\": {\n            \"top\": {\n                \"name\": \"$top\",\n                \"in\": \"query\",\n                \"description\": \"Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)\",\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0\n                },\n                \"example\": 50\n            },\n            \"skip\": {\n                \"name\": \"$skip\",\n                \"in\": \"query\",\n                \"description\": \"Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)\",\n                \"schema\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 0\n                }\n            },\n            \"count\": {\n                \"name\": \"$count\",\n                \"in\": \"query\",\n                \"description\": \"Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)\",\n                \"schema\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"search\": {\n                \"name\": \"$search\",\n                \"in\": \"query\",\n                \"description\": \"Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)\",\n                \"schema\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"responses\": {\n            \"error\": {\n                \"description\": \"Error\",\n                \"content\": {\n                    \"application/json\": {\n                        \"schema\": {\n                            \"$ref\": \"#/components/schemas/error\"\n                        }\n                    }\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"api_key\": {\n                \"description\": \"Authentication via API key\",\n                \"type\": \"apiKey\",\n                \"name\": \"x-api-key\",\n                \"in\": \"header\"\n            },\n            \"http_bearer\": {\n                \"description\": \"HTTP authentication with bearer token\",\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            },\n            \"oauth_authcode\": {\n                \"description\": \"Authentication via OAuth2 with authorization code flow\",\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"authorizationCode\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"refreshUrl\": \"https://example.com/api/oauth/refresh\",\n                        \"scopes\": {\n                            \"do:something\": \"do something\"\n                        }\n                    }\n                }\n            },\n            \"oauth_clientcredentials\": {\n                \"description\": \"Authentication via OAuth2 with client credentials flow\",\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"clientCredentials\": {\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"refreshUrl\": \"https://example.com/api/oauth/refresh\",\n                        \"scopes\": {\n                            \"do:something\": \"do something\"\n                        }\n                    }\n                }\n            },\n            \"oauth_implicit\": {\n                \"description\": \"Authentication via OAuth2 with implicit flow\",\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"implicit\": {\n                        \"authorizationUrl\": \"https://example.com/api/oauth/dialog\",\n                        \"refreshUrl\": \"https://example.com/api/oauth/refresh\",\n                        \"scopes\": {\n                            \"write:foo\": \"modify foo\",\n                            \"read:foo\": \"read foo\"\n                        }\n                    }\n                }\n            },\n            \"oauth_password\": {\n                \"description\": \"Authentication via OAuth2 with resource owner password flow\",\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"password\": {\n                        \"tokenUrl\": \"https://example.com/api/oauth/token\",\n                        \"refreshUrl\": \"https://example.com/api/oauth/refresh\",\n                        \"scopes\": {\n                            \"do:something\": \"do something\"\n                        }\n                    }\n                }\n            },\n            \"open_id\": {\n                \"description\": \"Authentication via OpenID Connect\",\n                \"type\": \"openIdConnect\",\n                \"openIdConnectUrl\": \"https://example.com/openid/issuer/location\"\n            }\n        }\n    },\n    \"security\": [\n        {\n            \"api_key\": []\n        },\n        {\n            \"petstore_auth\": [\n                \"write:pets\",\n                \"read:pets\"\n            ]\n        }\n    ]\n}",
			"canonicalURL": "/github.com/oasis-tcs/odata-openapi@40f07ded78dd522d3af71cd2372323be2788b43d/-/blob/examples/authorization.openapi3.json",
			"externalURLs": [
				{
					"url": "https://github.com/oasis-tcs/odata-openapi/blob/40f07ded78dd522d3af71cd2372323be2788b43d/examples/authorization.openapi3.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/People\": get: security: at 507:13: unknown security schema \"petstore_auth\""
}