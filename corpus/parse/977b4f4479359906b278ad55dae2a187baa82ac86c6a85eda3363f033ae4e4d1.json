{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/aspida/openapi2aspida"
		},
		"file": {
			"name": "simple.yaml",
			"size": 0,
			"path": "samples/simple.yaml",
			"byteSize": 7235,
			"content": "openapi: \"3.0.0\"\ninfo:\n  title: \"simple\"\n  version: \"1.0\"\npaths:\n  /file/{id}/upload:\n    post:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: ID\n        - in: query\n          name: path\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              type: string\n              format: binary\n      responses:\n        '204':\n          description: No Content\n  /user/{id}:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n        description: The user ID\n    get:\n      responses:\n        202:\n          description: \"accept\"\n    patch:\n      summary: Updates an existing user with the specified ID\n      responses:\n        202:\n          description: \"accept\"\n    delete:\n      summary: Deletes the user with the specified ID\n      responses:\n        202:\n          description: \"accept\"\n  /user/{id}/abc:\n    get:\n      parameters:\n        - in: path\n          name: id\n          schema:\n            type: integer\n          required: true\n          description: The user ID\n        - in: query\n          name: q\n          schema:\n            type: string\n      responses:\n        202:\n          description: \"accept\"\n  /user/{id}/xyz:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n        description: The user ID\n    get:\n      responses:\n        202:\n          description: \"accept\"\n    put:\n      responses:\n        202:\n          description: \"accept\"\n  /user/{id}/2:\n    parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        required: true\n        description: The user ID\n      - in: query\n        name: path\n        required: true\n        schema:\n          type: string\n      - in: query\n        name: '123456789123456789123456789123456789'\n        schema:\n          type: string\n    get:\n      responses:\n        200:\n          description: \"accept\"\n          content:\n            application/json:\n              schema:\n                required: [\"id\", \"name\"]\n                properties:\n                  id:\n                    description: ID\n                    type: integer\n                  name:\n                    description: NAME\n                    type: string\n    post:\n      responses:\n        200:\n          description: \"accept\"\n          content:\n            application/json:\n              schema:\n                required: [\"id\"]\n                properties:\n                  id:\n                    description: ID\n                    type: integer\n                  name:\n                    description: NAME\n                    type: string\n  # /patho/{throw}/{var.const.let.for.if.package.while}/123456789123456789123456789123456789:\n  #   parameters:\n  #     - in: path\n  #       name: throw\n  #       schema:\n  #         type: string\n  #       required: true\n  #       description: |\n  #         multiple line\n  #         description\n  #     - in: path\n  #       name: var.const.let.for.if.package.while\n  #       schema:\n  #         type: integer\n  #       required: true\n  #       description: |\n  #         // usage: \"/* */\"\n  #     - in: query\n  #       name: path\n  #       required: true\n  #       schema:\n  #         type: string\n  #     - in: query\n  #       name: 'a  b'\n  #       schema:\n  #         type: string\n  #   post:\n  #     responses:\n  #       200:\n  #         description: |\n  #           This post method is\n  #           described in\n  #           multiple lines.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               required: [\"id\"]\n  #               properties:\n  #                 id:\n  #                   description: |\n  #                     hello\n  #                     multline\n  #                   type: integer\n  #                 name:\n  #                   description: |\n  #                     usage:\n  #                       /* declare value */\n  #                       const foo = api.....();\n  #                       console.log(\"foo\");\n  #                   type: string\n  /dummy/2:\n    put:\n      summary: \"simple\"\n      responses:\n        202:\n          description: \"accept\"\n  # /dummy/$2:\n  #   put:\n  #     summary: \"simple\"\n  #     responses:\n  #       202:\n  #         description: \"accept\"\n  # /dummy/{a.1}/simple:\n  #   put:\n  #     summary: \"simple\"\n  #     parameters:\n  #       - name: \"a.1\"\n  #         in: \"path\"\n  #         description: \"id\"\n  #         required: true\n  #         schema:\n  #           type: \"integer\"\n  #     responses:\n  #       202:\n  #         description: \"accept\"\n  /dummy/{a_1}/simple:\n    put:\n      summary: \"simple\"\n      parameters:\n        - name: \"a_1\"\n          in: \"path\"\n          description: \"id\"\n          required: true\n          schema:\n            type: \"integer\"\n      responses:\n        202:\n          description: \"accept\"\n  /dummy/{id}/simple:\n    put:\n      summary: \"simple\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"id\"\n          required: true\n          schema:\n            type: \"integer\"\n      responses:\n        202:\n          description: \"accept\"\n  /dummy/{id}/query:\n    put:\n      summary: \"query\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"id\"\n          required: true\n          schema:\n            type: \"integer\"\n        - name: \"q\"\n          in: \"query\"\n          description: \"query\"\n          schema:\n            type: \"string\"\n      responses:\n        202:\n          description: \"accept\"\n  /dummy/{id}/content:\n    put:\n      summary: \"ng\"\n      parameters:\n        - name: \"id\"\n          in: \"path\"\n          description: \"id\"\n          required: true\n          schema:\n            type: \"integer\"\n      responses:\n        202:\n          description: \"accept\"\n          content:\n            application/json:\n              schema:\n                type: \"string\"\ncomponents:\n  schemas:\n    Customer:\n      description: Customer\n      properties:\n        id:\n          description: ID\n          type: integer\n        name:\n          description: NAME\n          type: string\n        pet:\n          description: 'Type of pet 1:dog 2:cat 3:other'\n          type: number\n          enum:\n            - 1\n            - 2\n            - 3\n    Customer2:\n      description: Customer\n      required: [\"id\", \"name\"]\n      properties:\n        id:\n          description: ID\n          type: integer\n        name:\n          description: NAME\n          type: string\n        pet:\n          description: 'Type of pet 1:dog 2:cat 3:other'\n          type: number\n          enum:\n            - 1\n            - 2\n            - 3\n    Customer3:\n      description: Customer\n      required: [\"id\", \"name\", \"pet\"]\n      properties:\n        id:\n          description: ID\n          type: integer\n        name:\n          description: NAME\n          type: string\n        pet:\n          description: 'Type of pet 1:dog 2:cat 3:other'\n          type: number\n          enum:\n            - 1\n            - 2\n            - 3\n",
			"canonicalURL": "/github.com/aspida/openapi2aspida@0f8c519b45ddd73353b22a59efe1737ddca720c0/-/blob/samples/simple.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/aspida/openapi2aspida/blob/0f8c519b45ddd73353b22a59efe1737ddca720c0/samples/simple.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/dummy/{a_1}/simple\": at 1:928: duplicate path: \"/dummy/{a_1}/simple\""
}