{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/tatumio/tatum-blockchain-connector"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "ada-connector/module/openapi.yaml",
			"byteSize": 24621,
			"content": "openapi: 3.0.0\nservers:\n  - url: 'https://api-eu1.tatum.io'\ninfo:\n  version: 1.1.0\n  title: Tatum Cardano API\ntags:\n  - description: |\n      Cardano connection APIs\n    name: Blockchain / Cardano\npaths:\n  /v3/cardano/info:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Get current Cardano block\n      description: \u003cp\u003eGet current Cardano block.\u003c/p\u003e\n      operationId: CardanoGetBlockChainInfo\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  tip:\n                    type: object\n                    properties:\n                      number:\n                        description: a number of block\n                        type: number\n                        example: 26585295\n                      slotNo:\n                        description: Slot number.\n                        type: number\n                        example: 10094640\n                      epoch:\n                        type: object\n                        properties:\n                          number:\n                            description: Epoch number.\n                            type: number\n                            example: 123\n                  testnet:\n                    description: The block is from mainnet or testnet\n                    type: boolean\n                    example: false\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/wallet:\n    post:\n      tags:\n        - Blockchain / Cardano\n      summary: Generate Cardano Wallet\n      description: \u003cp\u003eGenerate Cardano Wallet.\u003c/p\u003e\n      operationId: CardanoGenerateWallet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                mnemonic:\n                  $ref: \"#/components/schemas/mnemonic\"\n        required: false\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  mnemonic:\n                    $ref: \"#/components/schemas/mnemonic\"\n                  xpub:\n                    type: string\n                    description: \"Extended public key of wallet.\"\n                    example: \"8d5dc5dd9a87e8377c49e9fae732ab4ee58a929bd5e8a00519d73eba24d74ba6ffd24adbc8d7f85f5dd940c6e2a7e0329d92b9380a9e94ba8ef6d4ba44ba17af\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/block/{hash}:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Get Cardano block\n      description: \u003cbr/\u003e\u003cp\u003eGet Cardano block by its hash.\u003c/p\u003e\n      operationId: CardanoGetBlock\n      parameters:\n        - in: path\n          name: hash\n          required: true\n          description: The hash code of the block.\n          schema:\n            $ref: \"#/components/schemas/hash\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardanoBlock\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/transaction/{hash}:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Get transaction by its hash\n      description: \u003cp\u003eGet Cardano Transaction\u003c/p\u003e\n      operationId: CardanoGetTransaction\n      parameters:\n        - in: path\n          name: hash\n          required: true\n          description: The hash code of transaction.\n          schema:\n            $ref: \"#/components/schemas/hash\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardanoTx\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/account/{address}:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Get account by its address\n      description: \u003cp\u003eGet Cardano account\u003c/p\u003e\n      operationId: CardanoGetAccount\n      parameters:\n        - in: path\n          name: address\n          required: true\n          description: The address of an account.\n          schema:\n            $ref: \"#/components/schemas/address\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardanoAccount\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/account/{address}/transactions:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Get Transactions by Account\n      description: \u003cp\u003eGet Cardano Transactions by Account\u003c/p\u003e\n      operationId: CardanoGetTransactionsByAccount\n      parameters:\n        - in: path\n          name: address\n          required: true\n          description: The address of an account.\n          schema:\n            $ref: \"#/components/schemas/address\"\n        - in: query\n          name: pageSize\n          required: true\n          description: The number of items to return.\n          schema:\n            type: number\n            example: 10\n        - in: query\n          name: offset\n          required: true\n          description: Offset to obtain the next page of data.\n          schema:\n            type: number\n            example: 0\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CardanoTx\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/address/{xpub}/{index}:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Genarate address from xpub and derivation path\n      description: \u003cp\u003eGenerate Cardano deposit address from Extended public key. Deposit address is generated for the specific index - each extended public key can generate\n        up to 2^32 addresses starting from index 0 until 2^31\u003c/p\u003e\n      operationId: CardanoGenerateAddress\n      parameters:\n        - description: \"Extended public key of wallet.\"\n          in: path\n          name: xpub\n          required: true\n          example: 0244b3f40c6e570ae0032f6d7be87737a6c4e5314a4a1a82e22d0460a0d0cd794936c61f0c80dc74ace4cd04690d4eeb1aa6555883be006e1748306faa7ed3a26a\n          schema:\n            type: string\n        - description: \"Derivation index of desired address to be generated.\"\n          in: path\n          name: index\n          required: true\n          example: 1\n          schema:\n            type: number\n            minimum: 0\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  address:\n                    type: string\n                    description: Cardano Address generated by a xpub and a desired derivation index\n                    example: \"addr_test1qr4akxm5a2m26qy39z5zy0hzs9p82l2y7tjqq83mvmctnll3gslfvqt4u3exh04cwm5y0jm6z05tkdaxpkcfldpdtntsnlzve7\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/wallet/priv:\n    post:\n      tags:\n        - Blockchain / Cardano\n      summary: Genarate private key from mnemonic and a desired derivation index\n      description: |\n        \u003cp\u003eGenerate private key from mnemonic and a desired derivation index.\u003c/p\u003e\n      operationId: CardanoGeneratePrivateKeyFromMnemonic\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                mnemonic:\n                  $ref: \"#/components/schemas/mnemonic\"\n                index:\n                  type: number\n                  description: Derivation index of desired address to be generated.\n                  example: 1\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  key:\n                    type: string\n                    description: private key generated by mnemonic and a desired erivation index\n                    example: \"00743d174f1009aa9bdec25da77609b3e3f58084473ede452a640cd6f05ccc513f04bb50db037ab623d6ff63222ae1f7e447df95fceabb9e1c1f47a5a4d94495030e3a3b2f20bcb134f626cdadf56b589e047a3d484baefdc9520bf4b1289e66641633ae6fdaad819890d5415079968250aa428a548255005ffea4ad66080b92\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/broadcast:\n    post:\n      tags:\n        - Blockchain / Cardano\n      summary: Broadcast Cardano transaction\n      description: |\n        \u003ch4\u003e5 credits per API call.\u003c/h4\u003e\u003cbr/\u003e\n        \u003cp\u003eBroadcast Cardano transaction. This method is used internally from Tatum Middleware or Tatum client libraries.\n        It is possible to create custom signing mechanism and use this method only for broadcasting data to the blockchain.\u003c/p\u003e\n      operationId: CardanoBroadcast\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                txData:\n                  type: string\n                  description: Transaction data.\n                  example: \"83a400818258207aa56587eefe3bf7597a0cf5bcfbb9294f8d8ce69017b25198de74c585abef720101828258390094adf2d6d52d868d96714c9730d71b883f9666dd690ffe76e1ea144a9c6b98821de0360d005ffc073487bca8fd3e64338e462e7f13547bb81a01312d00825839001f34a1cb96d54a43d199ec2446f051d72adbd6576eb92206bc23fd005cd7064e0630c119aca1da1ba09526c24c5b128d328f349fda8371551a3598126b021a00029151031a0162c456a100818258201415a4576baa24dee656996aed13501dff465e1924f1d5df4a20951a4a65e254584035c87febca0b147b68b70a44c15f0b4a7bd5aeab38d32e7531b02545515dbc3e1420f26dab185bc814296a9fde20aabb4d2934b9cde892c01438f1f54f902309f6\"\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardanoSendTxSuccessfully\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/{address}/utxos:\n    get:\n      tags:\n        - Blockchain / Cardano\n      summary: Get utxos by their address\n      description: \u003cp\u003eGet Cardano UTxos\u003c/p\u003e\n      operationId: CardanoGetUTxos\n      parameters:\n        - in: path\n          name: address\n          required: true\n          description: The address of an account.\n          schema:\n            $ref: \"#/components/schemas/address\"\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardanoUTxos\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\n  /v3/cardano/transaction:\n    post:\n      tags:\n        - Blockchain / Cardano\n      summary: Send Cardano transaction\n      description: |\n        \u003cp\u003eSend Cardano transaction from address to address.\u003cbr/\u003e\u003cbr/\u003e\n        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.\n        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey.\n        PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,\n        it is possible to use the Tatum client library for supported languages or Tatum Middleware with a custom key management system.\n        \u003c/p\u003e\n      operationId: CardanoTransfer\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                from:\n                  type: string\n                  description: the sender's address\n                  example: \"addr_test1qr4akxm5a2m26qy39z5zy0hzs9p82l2y7tjqq83mvmctnll3gslfvqt4u3exh04cwm5y0jm6z05tkdaxpkcfldpdtntsnlzve7\"\n                privateKey:\n                  type: string\n                  description: 128-bit extended private key.\n                  example: \"00743d174f1009aa9bdec25da77609b3e3f58084473ede452a640cd6f05ccc513f04bb50db037ab623d6ff63222ae1f7e447df95fceabb9e1c1f47a5a4d94495030e3a3b2f20bcb134f626cdadf56b589e047a3d484baefdc9520bf4b1289e66641633ae6fdaad819890d5415079968250aa428a548255005ffea4ad66080b92\"\n                to:\n                  type: string\n                  description: the reciever's address\n                  example: \"addr_test1qz22mukk65kcdrvkw9xfwvxhrwyrl9nxm45sllnku84pgj5udwvgy80qxcxsqhluqu6g009gl5lxgvuwgch87y650wuqtq5n9u\"\n                amount:\n                  type: number\n                  description: the lovelace amount to be sent\n                  example: 22000000\n        required: true\n      responses:\n        200:\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CardanoSendTxSuccessfully\"\n          description: OK\n        403:\n          $ref: \"#/components/schemas/error403\"\n        500:\n          $ref: \"#/components/schemas/error500\"\ncomponents:\n  schemas:\n    error403:\n      type: object\n      description: Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions\n      properties:\n        message:\n          type: string\n          example: \"Forbidden\"\n        statusCode:\n          type: number\n          example: 403\n    error500:\n      type: object\n      description: Error caused by the server\n      properties:\n        message:\n          type: string\n          example: \"Internal server error\"\n        statusCode:\n          type: number\n          example: 500\n    hash:\n      type: string\n      example: \"000000000195a8cfe2ea4ca60ce921b30e95980a96c6bb1da4a35aa03da9c5a8\"\n    number:\n      type: number\n      example: 8\n    fee:\n      type: number\n      example: 167569\n    index:\n      type: number\n      example: 0\n    timestamp:\n      type: string\n      example: \"2019-07-24T20:20:16Z\"\n    count:\n      type: string\n      example: \"1\"\n    address:\n      type: string\n      example: \"37btjrVyb4KCXcXAQN1QNphHShuuD2VpUPqogWVU3YpuabnoiVixQnJrFyDjgf7PaCAVKYTcBV6RnaaQ2Vetbg1Tqf9MozMVxMne3NPYTTRoogjGPB\"\n    size:\n      type: number\n      example: 1950\n    mnemonic:\n      type: string\n      description: Mnemonic string\n      example: \"reward erosion ripple critic legend leader zero start open stem spend ritual faint home vocal\"\n    CardanoBlock:\n      type: object\n      properties:\n        fees:\n          description: Block fees\n          $ref: \"#/components/schemas/fee\"\n        slotLeader:\n          type: object\n          properties:\n            description:\n              type: string\n              description: SlotLeader description\n              example: \"ByronGenesis-853b49c9ab5fc52d\"\n            hash:\n              description: SlotLeader hash\n              $ref: \"#/components/schemas/hash\"\n        forgedAt:\n          description: Sign time\n          $ref: \"#/components/schemas/timestamp\"\n        merkleRoot:\n          type: string\n          description: Block merkelRoot\n          example: \"0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8\"\n        number:\n          description: a number of block\n          $ref: \"#/components/schemas/number\"\n        opCert:\n          type: string\n          description: Block opCert\n          example: \"0e5751c026e543b2e8ab2eb06099daa1d1e5df47778f7787faab45cdf12fe3a8\"\n        slotInEpoch:\n          type: number\n          description: Slot in Epoch\n          example: 1031\n        slotNo:\n          type: number\n          description: Number of slots\n          example: 1031\n        protocolVersion:\n          type: object\n          properties:\n            major:\n              type: number\n              description: protocol version major\n              example: 0\n            minor:\n              type: number\n              description: protocol version minor\n              example: 0\n        size:\n          description: Size of the block\n          $ref: \"#/components/schemas/size\"\n        transactionsCount:\n          description: Count transactions of the block\n          $ref: \"#/components/schemas/count\"\n        transactions:\n          type: array\n          description: transactions of the blocks\n          items:\n            type: object\n            properties:\n              hash:\n                description: The hash of the transaction\n                $ref: \"#/components/schemas/hash\"\n        nextBlock:\n          type: object\n          description: Next Block\n          properties:\n            hash:\n              description: The hash of the next block\n              $ref: \"#/components/schemas/hash\"\n            number:\n              description: The next block number\n              $ref: \"#/components/schemas/number\"\n        previousBlock:\n          type: object\n          description: Next Block\n          properties:\n            hash:\n              description: The hash of the previous block\n              $ref: \"#/components/schemas/hash\"\n            number:\n              description: number of the next block\n              $ref: \"#/components/schemas/number\"\n        vrfKey:\n          type: string\n          description: Verification key of the block\n          example: \"vrf_vk1ex02ql6j98agcepmrxpqrkkhmvehpwjv90n50m0d7xgfuqpxn6sq8y9jsf\"\n    CardanoTx:\n      type: object\n      properties:\n        block:\n          type: object\n          description: The block of transaction.\n          properties:\n            hash:\n              description: The hash of the block.\n              $ref: \"#/components/schemas/hash\"\n            number:\n              description: The number of the block.\n              $ref: \"#/components/schemas/number\"\n        blockIndex:\n          description: Index of block\n          $ref: \"#/components/schemas/index\"\n        deposit:\n          type: number\n          description: The deposit of transaction\n          example: 0\n        fee:\n          description: The fee of transaction\n          $ref: \"#/components/schemas/fee\"\n        inputs:\n          type: array\n          items:\n            type: object\n            properties:\n              address:\n                description: The address of the transaction input.\n                $ref: \"#/components/schemas/address\"\n              sourceTxHash:\n                description: The hash of the transaction.\n                $ref: \"#/components/schemas/hash\"\n              sourceTxIndex:\n                description: Index of source Transaction\n                $ref: \"#/components/schemas/index\"\n        inputs_aggregate:\n          type: object\n          properties:\n            aggregate:\n              type: object\n              properties:\n                count:\n                  description: A number of the aggregate.\n                  $ref: \"#/components/schemas/count\"\n        outputs:\n          type: array\n          items:\n            type: object\n            properties:\n              address:\n                description: Address of transaction output.\n                $ref: \"#/components/schemas/address\"\n              index:\n                description: Index of transaction output.\n                $ref: \"#/components/schemas/index\"\n              txHash:\n                description: Hash of transaction output.\n                $ref: \"#/components/schemas/hash\"\n              value:\n                type: string\n                description: Value of transaction output.\n                example: \"385509000000\"\n        outputs_aggregate:\n          type: object\n          items:\n            properties:\n              aggregate:\n                type: object\n                properties:\n                  count:\n                    description: The number of the outputs aggregate.\n                    $ref: \"#/components/schemas/count\"\n        invalidBefore:\n          type: string\n          example: null\n        invalidHereafter:\n          type: string\n          example: 22743263\n        size:\n          description: The size of the transaction.\n          $ref: \"#/components/schemas/size\"\n        totalOutput:\n          type: string\n          description: Total output\n          example: \"20000000000000\"\n        includedAt:\n          type: string\n          $ref: \"#/components/schemas/timestamp\"\n        withdrawals:\n          type: array\n          items:\n            properties:\n              address:\n                description: the address of withdrawal\n                $ref: \"#/components/schemas/address\"\n              amount:\n                description: the amount of withdrawal.\n                type: string\n                example: \"30000000\"\n              transaction:\n                type: object\n                properties:\n                  hash:\n                    description: the hash of the withdrawal transaction\n                    $ref: \"#/components/schemas/hash\"\n        withdrawals_aggregate:\n          type: object\n          properties:\n            aggregate:\n              type: object\n              properties:\n                count:\n                  description: A number of withdrawals aggregate\n                  $ref: \"#/components/schemas/count\"\n    CardanoAccount:\n      type: object\n      properties:\n        summary:\n          type: object\n          properties:\n            assetBalances:\n              type: array\n              items:\n                type: object\n                properties:\n                  asset:\n                    type: object\n                    description: the information of an asset\n                    properties:\n                      assetId:\n                        type: string\n                        description: the ID of asset\n                        example: \"ada\"\n                      assetName:\n                        type: string\n                        description: the name of asset\n                        example: \"ada\"\n                      name:\n                        type: string\n                        description: the name of asset\n                        example: \"ada\"\n                      description:\n                        type: string\n                        description: the description of asset\n                        example: null\n                      logo:\n                        type: string\n                        description: the logo of asset\n                        example: null\n                      metadataHash:\n                        type: string\n                        description: the hash code of metadata for the asset\n                        example: null\n                      url:\n                        type: string\n                        description: the url of asset\n                        example: null\n                  quantity:\n                    type: string\n                    description: the quantity of asset\n                    example: \"20000000000000\"\n            utxosCount:\n              type: number\n              description: a number of unspent transaction outputs\n              example: 1\n    CardanoSendTxSuccessfully:\n      type: object\n      properties:\n        txId:\n          type: string\n          description: The ID of transaction\n          example: \"0b813ae97d0b7512e92ed3e5bfeafefb9d08e4bcd5ecf9c6729b97aaf2cb0e7c\"\n    CardanoUTxos:\n      type: array\n      items:\n        type: object\n        properties:\n          txHash:\n            description: Hash of transaction output.\n            $ref: \"#/components/schemas/hash\"\n          index:\n            description: Index of the utxo.\n            $ref: \"#/components/schemas/index\"\n          value:\n            type: string\n            description: The value of the utxo\n            example: \"940326908\"\n"
		}
	},
	"Error": "parse: parse spec: paths: /v3/cardano/wallet: post: operation \"CardanoGenerateWallet\": responses: 500: resolve \"#/components/schemas/error500\" reference: invalid response reference: \"#/components/schemas/error500\""
}