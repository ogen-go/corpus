{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/proximax-storage/java-xpx-chain-sdk"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "schemas/swagger/swagger.yaml",
			"byteSize": 183385,
			"content": "openapi: 3.0.0\ninfo:\n  version: 0.7.15\n  title: Catapult REST API Reference\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  description: \"\"\ntags:\n  - name: Account routes\n    description: |\n      Account related\n      endpoints.\n  - name: Block routes\n    description: |\n      Block related endpoints.\n  - name: Config routes\n    description: |\n      Config related endpoints.\n  - name: Chain routes\n    description: |\n      Chain related endpoints.\n  - name: Diagnostic routes\n    description: |\n      Diagnostic related endpoints.\n  - name: Metadata V2 routes\n    description: |\n      Metadata V2 related endpoints.\n  - name: Mosaic routes\n    description: |\n      Mosaic related endpoints.\n  - name: Namespace routes\n    description: |\n      Namespace related endpoints.\n  - name: Transaction routes\n    description: |\n      Transaction related endpoints.\n  - name: Network routes\n    description: |\n      Network related endpoints.\n  - name: Node routes\n    description: |\n      Node related endpoints.\n  - name: Upgrade routes\n    description: |\n      Upgrade related endpoints.\n  - name: Lock routes\n    description: |\n      Lock related endpoints.\n  - name: Exchange routes\n    description: |\n      Exchange related endpoints.\n\npaths:\n  \"/account/{accountId}\":\n    get:\n      tags:\n        - Account routes\n      summary: Get account information\n      description: Returns the account information.\n      operationId: getAccountInfo\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  /account:\n    post:\n      tags:\n        - Account routes\n      summary: Get accounts information\n      description: Returns the account information for an array of accounts.\n      operationId: getAccountsInfo\n      requestBody:\n        $ref: \"#/components/requestBodies/accountIds\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of accounts information.\n                items:\n                  $ref: \"#/components/schemas/AccountInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/account/{accountId}/properties\":\n    get:\n      tags:\n        - Account routes\n      summary: Get account configurable properties information\n      description: |\n        Returns the [configurable\n        properties](https://nemtech.github.io/concepts/account-filter.html) for\n        a given account.\n      operationId: getAccountProperties\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccountPropertiesInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  /account/properties:\n    post:\n      tags:\n        - Account routes\n      summary: Get account properties for given array of addresses\n      description: |\n        Returns the [configurable\n        properties](https://nemtech.github.io/concepts/account-filter.html) for\n        a given array of addresses.\n      operationId: getAccountPropertiesFromAccounts\n      requestBody:\n        $ref: \"#/components/requestBodies/accountIds\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of account properties information.\n                items:\n                  $ref: \"#/components/schemas/AccountPropertiesInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/account/{accountId}/multisig\":\n    get:\n      tags:\n        - Account routes\n      summary: Get multisig account information\n      description: Returns the [multisig\n        account](https://nemtech.github.io/concepts/multisig-account.html)\n        information.\n      operationId: getAccountMultisig\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MultisigAccountInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/account/{accountId}/multisig/graph\":\n    get:\n      tags:\n        - Account routes\n      summary: Get multisig account graph information\n      description: Returns the [multisig\n        account](https://nemtech.github.io/concepts/multisig-account.html)\n        graph.\n      operationId: getAccountMultisigGraph\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MultisigAccountGraphInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/blocks/{height}/limit/{limit}\":\n    get:\n      tags:\n        - Block routes\n      summary: Get blocks information\n      description: Gets up to limit number of blocks after given block height.\n      operationId: getBlocksByHeightWithLimit\n      parameters:\n        - name: height\n          in: path\n          description: The height of the block. If height -1 is not a multiple of the limit\n            provided, the inferior closest multiple + 1 is used instead.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - name: limit\n          in: path\n          description: The number of blocks to be returned.\n          required: true\n          schema:\n            type: integer\n            enum:\n              - 25\n              - 50\n              - 75\n              - 100\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of blocks information.\n                items:\n                  $ref: \"#/components/schemas/BlockInfoDTO\"\n        \"409\":\n          description: invalid argument\n  \"/block/{height}\":\n    get:\n      tags:\n        - Block routes\n      summary: Get block information\n      description: Gets a block from the chain that has the given height.\n      operationId: getBlockByHeight\n      parameters:\n        - name: height\n          in: path\n          description: The height of the block.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/block/{height}/transaction/{hash}/merkle\":\n    get:\n      tags:\n        - Block routes\n      summary: Get the merkle path for a given a transaction and block\n      description: Returns the merkle path for a\n        [transaction](https://nemtech.github.io/concepts/transaction.html)\n        included in a block. The path is the complementary data needed to\n        calculate the merkle root. A client can compare if the calculated root\n        equals the one recorded in the block header, verifying that the\n        transaction was included in the block.\n      operationId: getMerkleTransaction\n      parameters:\n        - name: height\n          in: path\n          description: The height of the block.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - name: hash\n          in: path\n          description: The hash of the transaction.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MerkleProofInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/block/{height}/receipts\":\n    get:\n      tags:\n        - Block routes\n      summary: Get receipts from a block\n      description: Returns the [receipts](https://nemtech.github.io/concepts/receipt.html)\n        linked to a block.\n      operationId: getBlockReceipts\n      parameters:\n        - name: height\n          in: path\n          description: The height of the block.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StatementsDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/block/{height}/receipt/{hash}/merkle\":\n    get:\n      tags:\n        - Block routes\n      summary: Get the merkle path for a given a receipt statement hash and block\n      description: Returns the merkle path for a [receipt statement or\n        resolution](https://nemtech.github.io/concepts/receipt.html) linked to a\n        block. The path is the complementary data needed to calculate the merkle\n        root. A client can compare if the calculated root equals the one\n        recorded in the block header, verifying that the receipt was linked with\n        the block.\n      operationId: getMerkleReceipts\n      parameters:\n        - name: height\n          in: path\n          description: The height of the block.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n        - name: hash\n          in: path\n          description: The hash of the receipt statement or resolution.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MerkleProofInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  /chain/height:\n    get:\n      tags:\n        - Chain routes\n      summary: Get the current height of the chain\n      description: Returns the current height of the blockchain.\n      operationId: getBlockchainHeight\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HeightInfoDTO\"\n  /chain/score:\n    get:\n      tags:\n        - Chain routes\n      summary: Get the current score of the chain\n      description: |\n        Gets the current score of the blockchain. The higher the score, the\n        better the chain. During synchronization, nodes try to get the best\n        blockchain in the network.\n\n        The score for a block is derived from its difficulty and the time (in seconds) that has elapsed since the last block:\n\n            block score = difficulty − time elapsed since last block\n      operationId: getBlockchainScore\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BlockchainScoreDTO\"\n  /diagnostic/storage:\n    get:\n      tags:\n        - Diagnostic routes\n      summary: Get the storage information of the node\n      description: Returns diagnostic information about the node storage.\n      operationId: getDiagnosticStorage\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StorageInfoDTO\"\n  /diagnostic/server:\n    get:\n      tags:\n        - Diagnostic routes\n      summary: Get the version of the running rest component\n      description: Returns the version of the running rest component.\n      operationId: getServerInfo\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ServerDTO\"\n  '/config/{height}':\n    get:\n      tags:\n        - Config routes\n      summary: Get config of network\n      description: Gets config of network at height.\n      operationId: getConfig\n      parameters:\n        - name: height\n          in: path\n          description: The height of the blockchain to get config.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkConfigDTO'\n        '404':\n          description: resource not found\n        '409':\n          description: invalid argument\n  '/metadata_v2/{compositeHash}':\n    get:\n      tags:\n        - Metadata V2 routes\n      summary: Get metadata (namespace/mosaic/account) for an compositeHashes\n      description: Gets an V2 metadata.\n      operationId: getNemMetadata\n      parameters:\n        - name: compositeHash\n          in: path\n          description: The composited hash.\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNemInfoDTO'\n        '400':\n          description: invalid content\n        '409':\n          description: invalid argument\n  '/metadata_v2':\n    get:\n      tags:\n        - Metadata V2 routes\n      summary: Search metadata entries\n      description: Returns an array of metadata.\n      operationId: searchMetadataEntries\n      parameters:\n        - $ref: '#/components/parameters/sourceAddressQuery'\n        - $ref: '#/components/parameters/targetKeyQuery'\n        - $ref: '#/components/parameters/scopedMetadataKeyQuery'\n        - $ref: '#/components/parameters/targetIdQuery'\n        - $ref: '#/components/parameters/metadataType'\n        - $ref: '#/components/parameters/pageSizeQuery'\n        - $ref: '#/components/parameters/pageNumberQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/orderQuery'\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetadataNemPage'\n        '409':\n          description: invalid argument\n    post:\n      tags:\n        - Metadata V2 routes\n      summary: Get metadatas (namespace/mosaic/account) for compositeHashes\n      description: Gets v2 metadatas.\n      operationId: getNemMetadatas\n      requestBody:\n        $ref: \"#/components/requestBodies/compositeHashes\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of mosaic names.\n                items:\n                  $ref: '#/components/schemas/MetadataNemInfoDTO'\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/mosaic/{mosaicId}\":\n    get:\n      tags:\n        - Mosaic routes\n      summary: Get mosaic information\n      description: Gets the mosaic definition for a given mosaicId.\n      operationId: getMosaic\n      parameters:\n        - name: mosaicId\n          in: path\n          description: The mosaic identifier.\n          required: true\n          schema:\n            type: string\n            format: hex\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MosaicInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/mosaic/{mosaicId}/levy\":\n    get:\n      tags:\n        - Mosaic routes\n      summary: Get mosaic levy information\n      description: Gets the mosaic levy definition for a given mosaicId.\n      operationId: getMosaicLevy\n      parameters:\n        - name: mosaicId\n          in: path\n          description: The mosaic identifier.\n          required: true\n          schema:\n            type: string\n            format: hex\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/MosaicLevyInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/mosaic/{mosaicId}/richlist\":\n    get:\n      tags:\n        - Mosaic routes\n      summary: Get mosaic information\n      description: Retrieve owners of a given mosaic sorted on descending order based on amount. (REST only)\n      operationId: getMosaicRichList\n      parameters:\n        - name: mosaicId\n          in: path\n          description: The mosaic identifier.\n          required: true\n          schema:\n            type: string\n            format: hex\n        - name: page\n          in: query\n          description: The page of list (starts at 0).\n          required: false\n          schema:\n            type: integer\n        - name: pageSize\n          in: query\n          description: The count of items on a page (max 100, default 25).\n          required: false\n          schema:\n            type: integer\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/MosaicRichListDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  /mosaic:\n    post:\n      tags:\n        - Mosaic routes\n      summary: Get mosaics information for an array of mosaics\n      description: Gets an array of mosaic definition.\n      operationId: getMosaics\n      requestBody:\n        $ref: \"#/components/requestBodies/mosaicIds\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of mosaics information.\n                items:\n                  $ref: \"#/components/schemas/MosaicInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  /mosaic/names:\n    post:\n      tags:\n        - Mosaic routes\n      summary: Get readable names for a set of mosaics\n      description: Returns friendly names for mosaics.\n      operationId: getMosaicsNames\n      requestBody:\n        $ref: \"#/components/requestBodies/mosaicIds\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of mosaic names.\n                items:\n                  $ref: \"#/components/schemas/MosaicNamesDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/namespace/{namespaceId}\":\n    get:\n      tags:\n        - Namespace routes\n      summary: Get namespace information\n      description: Gets the namespace for a given namespaceId.\n      operationId: getNamespace\n      parameters:\n        - name: namespaceId\n          in: path\n          description: The namespace identifier.\n          required: true\n          schema:\n            type: string\n            format: hex\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NamespaceInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/account/{accountId}/namespaces\":\n    get:\n      tags:\n        - Namespace routes\n      summary: Get namespaces owned by an account\n      description: Gets an array of namespaces for a given account address.\n      operationId: getNamespacesFromAccount\n      parameters:\n        - name: accountId\n          in: path\n          description: The address or public key of the account.\n          required: true\n          schema:\n            type: string\n        - name: pageSize\n          in: query\n          description: The number of namespaces to return.\n          schema:\n            type: integer\n        - name: id\n          in: query\n          description: The namespace id up to which namespace objects are returned.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of namespaces information.\n                items:\n                  $ref: \"#/components/schemas/NamespaceInfoDTO\"\n        \"409\":\n          description: invalid argument\n  /account/namespaces:\n    post:\n      tags:\n        - Namespace routes\n      summary: Get namespaces for given array of addresses\n      description: Gets namespaces for a given array of addresses.\n      operationId: getNamespacesFromAccounts\n      parameters:\n        - name: pageSize\n          in: query\n          description: The number of namespaces to return.\n          schema:\n            type: integer\n        - name: id\n          in: query\n          description: The namespace id up to which namespace objects are returned.\n          schema:\n            type: string\n      requestBody:\n        $ref: \"#/components/requestBodies/accountIds\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of namespaces information.\n                items:\n                  $ref: \"#/components/schemas/NamespaceInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  /account/names:\n    post:\n      tags:\n        - Account routes\n      summary:  Get readable names for a set of accountIds.\n      description: Returns friendly names for accounts.\n      operationId: getAccountsNames\n      requestBody:\n        $ref: \"#/components/requestBodies/accountIds\"\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of account names.\n                items:\n                  $ref: \"#/components/schemas/AccountNamesDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  /namespace/names:\n    post:\n      tags:\n        - Namespace routes\n      summary: Get readable names for a set of namespaces\n      description: Returns friendly names for namespaces.\n      operationId: getNamespacesNames\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/namespaceIds\"\n        required: true\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of namespace names.\n                items:\n                  $ref: \"#/components/schemas/NamespaceNameDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/transactions\":\n    put:\n      tags:\n        - Transaction routes\n      summary: Announce a new transaction\n      description: Announces a transaction to the network. It is recommended to use the\n        SDK to announce transactions as they should be.\n      operationId: announceTransaction\n      requestBody:\n        $ref: \"#/components/requestBodies/transactionPayload\"\n      responses:\n        \"202\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnnounceTransactionInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/transactions/{group}\":\n    get:\n      tags:\n        - Transaction routes\n      summary: Get transactions information\n      description: Returns transactions information by given group.\n      operationId: getTransactionsByGroup\n      parameters:\n        - name: group\n          in: path\n          description: The group of the transaction.\n          required: true\n          schema:\n            type: string\n            enum: [confirmed, unconfirmed, partial]\n        - $ref: '#/components/parameters/heightQuery'\n        - $ref: '#/components/parameters/fromHeightQuery'\n        - $ref: '#/components/parameters/toHeightQuery'\n        - $ref: '#/components/parameters/addressQuery'\n        - $ref: '#/components/parameters/signerPublicKeyQuery'\n        - $ref: '#/components/parameters/recipientAddressQuery'\n        - $ref: '#/components/parameters/transactionTypeQuery'\n        - $ref: '#/components/parameters/embeddedQuery'\n        - $ref: '#/components/parameters/pageSizeQuery'\n        - $ref: '#/components/parameters/pageNumberQuery'\n        - $ref: '#/components/parameters/offsetQuery'\n        - $ref: '#/components/parameters/orderQuery'\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of transactions information.\n                items:\n                  $ref: \"#/components/schemas/TransactionInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n    post:\n      tags:\n        - Transaction routes\n      summary: Get transactions information\n      description: Return transactions information of given array of transactionsId or transactionsHashes by given transactions group.\n      operationId: getTransactionsByGroupAndId\n      parameters:\n        - name: group\n          in: path\n          description: The group of the transaction\n          required: true\n          schema:\n            type: string\n            enum: [confirmed, unconfirmed, partial]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/getTransactionsByGroupAndIdSchema'\n        required: true\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/transactions/{group}/{transactionId}\":\n    get:\n      tags:\n        - Transaction routes\n      summary: Get transactions information\n      description: Returns transaction information by a given transactionId and group.\n      operationId: getTransactionByGroupAndID\n      parameters:\n        - name: group\n          in: path\n          description: The group of the transaction.\n          required: true\n          schema:\n            type: string\n            enum: [confirmed, unconfirmed, partial]\n        - name: transactionId\n          in: path\n          description: The transactionId or transactionsHash.\n          required: true\n          schema:\n            $ref: '#/components/schemas/getTransactionByGroupAndIDSchema'\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of transactions information.\n                items:\n                  $ref: \"#/components/schemas/TransactionInfoDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/transactions/count\":\n    post:\n      tags:\n        - Transaction routes\n      summary: Get count of Transaction Type\n      description: Returns the number of transactions based on the transaction types.\n      operationId: getTransactionsCount\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                transactionTypes:\n                  type: array\n                  description: The array of transaction types.\n                  items:\n                    $ref: '#/components/schemas/getTransactionsCountItems'\n        required: true\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: array of count of a transaction type.\n                items:\n                  type: object\n                  required:\n                    - count\n                    - type\n                  properties:\n                    count:\n                      type: integer\n                      example: 34\n                    type:\n                      $ref: '#/components/schemas/getTransactionsCountItems'\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/transactions/partial\":\n    put:\n      tags:\n        - Transaction routes\n      summary: Announce an aggregate bonded transaction\n      description: Announces an [aggregate bonded\n        transaction](https://nemtech.github.io/concepts/aggregate-transaction.html#aggregate-bonded)\n        to the network.\n      operationId: announcePartialTransaction\n      requestBody:\n        $ref: \"#/components/requestBodies/transactionPayload\"\n      responses:\n        \"202\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnnounceTransactionInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/transactions/cosignature\":\n    put:\n      tags:\n        - Transaction routes\n      summary: Announce a cosignature transaction\n      description: Announces a [cosignature\n        transaction](https://nemtech.github.io/concepts/aggregate-transaction.html#cosignature-transaction)\n        to the network.\n      operationId: announceCosignatureTransaction\n      requestBody:\n        $ref: \"#/components/requestBodies/cosignature\"\n      responses:\n        \"202\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AnnounceTransactionInfoDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  \"/transactionStatus/{hash}\":\n    get:\n      tags:\n        - Transaction routes\n      summary: Get transaction status\n      description: Returns the transaction status for a given hash.\n      operationId: getTransactionStatus\n      parameters:\n        - name: hash\n          in: path\n          description: The transaction hash.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TransactionStatusDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  \"/transactionStatus\":\n    post:\n      tags:\n        - Transaction routes\n      summary: Get transactions status.\n      description: Returns an array of transaction statuses for a given array of transaction hashes.\n      operationId: getTransactionsStatuses\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/transactionHashes\"\n        required: true\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                description: The array of transactions status.\n                items:\n                  $ref: \"#/components/schemas/TransactionStatusDTO\"\n        \"400\":\n          description: invalid content\n        \"409\":\n          description: invalid argument\n  /network:\n    get:\n      tags:\n        - Network routes\n      summary: Get the current network type of the chain\n      description: Returns the current network type.\n      operationId: getNetworkType\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NetworkTypeDTO\"\n  /node/info:\n    get:\n      tags:\n        - Node routes\n      summary: Get the node information\n      description: |\n        Supplies additional information about the application running on a node.\n      operationId: getNodeInfo\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NodeInfoDTO\"\n  /node/time:\n    get:\n      tags:\n        - Node routes\n      summary: Get the node time\n      description: Gets the node time at the moment the reply was sent and received.\n      operationId: getNodeTime\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NodeTimeDTO\"\n  '/upgrade/{height}':\n    get:\n      tags:\n        - Upgrade routes\n      summary: Get software info of network\n      description:  Get software info of network at height.\n      operationId: getUpgrade\n      parameters:\n        - name: height\n          in: path\n          description: The height of the blockchain to get software info.\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        '200':\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BlockchainUpgradeDTO'\n        '404':\n          description: resource not found\n        '409':\n          description: invalid argument\n\n  '/account/{accountId}/exchange':\n    get:\n      tags:\n        - Exchange routes\n      summary: Get exchange offers by account id\n      description: Return exchange offer by account id.\n      operationId: getAccountExchangeOffers\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of an account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  exchange:\n                    $ref: \"#/components/schemas/AccountExchangeDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  '/exchange/{offerType}/{mosaicId}':\n    get:\n      tags:\n        - Exchange routes\n      summary: Get exchange offer by type and mosaic id\n      description: Get exchange offer by type and mosaic id.\n      operationId: getExchangeOffers\n      parameters:\n        - name: offerType\n          in: path\n          description: The type of exchange offer.\n          required: true\n          schema:\n            type: string\n        - name: mosaicId\n          in: path\n          description: The mosaic identifier.\n          required: true\n          schema:\n            type: string\n            format: hex\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/ExchangesDTO\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  '/exchange/mosaics':\n    get:\n      tags:\n        - Exchange routes\n      summary: Get a list of mosaics id with exchange offers\n      description: Get a list of mosaics id with exchange offer\n      operationId: getExchangeMosaics\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    mosaicId:\n                      type: string\n                      example: \"0DE5F42A0A3B4200\"\n  '/account/{accountId}/lock/hash':\n    get:\n      tags:\n        - Lock routes\n      summary: Get account lock hash\n      description: Get account lock hash.\n      operationId: getAccountLockHash\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/HashLockWithMeta\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  '/account/{accountId}/lock/secret':\n    get:\n      tags:\n        - Lock routes\n      summary: Get account lock secret\n      description: Get account lock secret.\n      operationId: getAccountLocksecret\n      parameters:\n        - name: accountId\n          in: path\n          description: The public key or address of the account.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/SecretLockWithMeta\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  '/lock/secret/{secret}':\n    get:\n      tags:\n        - Lock routes\n      summary: Get secret hash\n      description: Get secret hash.\n      operationId: getSecretHash\n      parameters:\n        - name: secret\n          in: path\n          description: The proof hashed.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretLockWithMeta\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  '/lock/hash/{hash}':\n    get:\n      tags:\n        - Lock routes\n      summary: Get lock hash\n      description: Get lock hash.\n      operationId: getLockHash\n      parameters:\n        - name: hash\n          in: path\n          description: The hash.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HashLockWithMeta\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n  '/lock/compositeHash/{compositeHash}':\n    get:\n      tags:\n        - Lock routes\n      summary: Get composite hash\n      description: Get composite hash.\n      operationId: getCompositeHash\n      parameters:\n        - name: compositeHash\n          in: path\n          description: The composite hash of account addres and secret.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/SecretLockWithMeta\"\n        \"404\":\n          description: resource not found\n        \"409\":\n          description: invalid argument\n\nexternalDocs:\n  description: ProximaX Developer Center\n  url: 'https://proximax.io/'\nservers:\n  - url: http://bctestnet1.brimstone.xpxsirius.io:3000\ncomponents:\n  parameters:\n    metadataType:\n      name: metadataType\n      in: query\n      description: Filter by metadata type.\n      schema:\n        $ref: '#/components/schemas/MetadataTypeEnum'\n    offsetQuery:\n      name: offset\n      in: query\n      description: |\n        Entry id at which to start pagination.\n        If the ordering parameter is set to -id, the elements returned precede the identifier.\n        Otherwise, newer elements with respect to the id are returned.\n      schema:\n        type: string\n    orderQuery:\n      name: order\n      in: query\n      description: |\n        Sort responses in ascending or descending order based on the collection property set on the param ``orderBy``.\n        If the request does not specify ``orderBy``, REST returns the collection ordered by id.\n      schema:\n        type: string\n        description: |\n          Indicates how to sort the results: \n          * ``asc`` - ascending\n          * ``desc`` - descending\n        enum:\n          - asc\n          - desc\n        default: desc\n    pageNumberQuery:\n      name: pageNumber\n      in: query\n      description: Filter by page number.\n      schema:\n        type: integer\n        minimum: 1\n        default: 1\n    pageSizeQuery:\n      name: pageSize\n      in: query\n      description: Select the number of entries to return.\n      schema:\n        type: integer\n        minimum: 10\n        maximum: 100\n        default: 10\n\n    sourceAddressQuery:\n      name: sourceAddress\n      in: query\n      description: Filter by address sending the metadata entry.\n      schema:\n        type: string\n        description: Address of the account.\n        example: VCAWORKQTHTWOZ2YWOF5QKBLF7WAAQLMD5FKNEDK\n    scopedMetadataKeyQuery:\n      name: scopedMetadataKey\n      in: query\n      description: Filter by metadata key.\n      schema:\n        $ref: '#/components/schemas/metadataKey'\n    targetIdQuery:\n      name: targetId\n      in: query\n      description: Filter by namespace or mosaic id.\n      schema:\n        type: string\n        format: hex\n        example: 0DC67FBE1CAD29E3\n    targetKeyQuery:\n      name: targetPublicKey\n      in: query\n      description: Filter by target public key.\n      schema:\n        $ref: '#/components/schemas/publicKeys'\n\n    addressQuery:\n      name: address\n      in: query\n      description: Address of the account.\n      schema:\n        type: string\n        example: VCAWORKQTHTWOZ2YWOF5QKBLF7WAAQLMD5FKNEDK\n    embeddedQuery:\n      name: embedded\n      in: query\n      description: If transaction is embedded.\n      schema:\n        type: boolean\n    fromHeightQuery:\n      name: fromHeight\n      in: query\n      description: The start of height to get transactions information.\n      schema:\n        type: integer\n        format: uint64\n        minimum: 1\n    heightQuery:\n      name: height\n      in: query\n      description: The height of the block to get transactions information.\n      schema:\n        type: integer\n        format: uint64\n        minimum: 1\n    recipientAddressQuery:\n      name: recipientAddress\n      in: query\n      description: Address of transaction's recipient.\n      schema:\n        type: string\n        description: Address of the account.\n        example: VCAWORKQTHTWOZ2YWOF5QKBLF7WAAQLMD5FKNEDK\n    signerPublicKeyQuery:\n      name: signerPublicKey\n      in: query\n      description: Public key of signer.\n      schema:\n        type: string\n    toHeightQuery:\n      name: toHeight\n      in: query\n      description: The end of height to get transactions information.\n      schema:\n        type: integer\n        format: uint64\n        minimum: 1\n    transactionTypeQuery:\n      name: type[]\n      in: query\n      description: The type of transaction\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/transactionTypeQueryItems'\n\n\n\n  requestBodies:\n    metadataIds:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/metadataIds\"\n    publicKeys:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/publicKeys\"\n    accountIds:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/accountIds\"\n      required: true\n    transactionPayload:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/transactionPayload\"\n      required: true\n    cosignature:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/cosignature\"\n      required: true\n    mosaicIds:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/mosaicIds\"\n    compositeHashes:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/compositeHashes\"\n      required: true\n  schemas:\n    # Enumerations\n    TransactionStatusTypeEnum:\n      type: string\n      enum:\n        - Success\n        - Neutral\n        - Failure\n        - Failure_Core_Past_Deadline\n        - Failure_Core_Future_Deadline\n        - Failure_Core_Insufficient_Balance\n        - Failure_Core_Too_Many_Transactions\n        - Failure_Core_Nemesis_Account_Signed_After_Nemesis_Block\n        - Failure_Core_Wrong_Network\n        - Failure_Core_Invalid_Address\n        - Failure_Core_Invalid_Version\n        - Failure_Core_Invalid_Transaction_Fee\n        - Failure_Core_Block_Harvester_Ineligible\n        - Failure_Core_Invalid_FeeInterest\n        - Failure_Core_Invalid_FeeInterestDenominator\n        - Failure_Hash_Exists\n        - Failure_Signature_Not_Verifiable\n        - Failure_AccountLink_Invalid_Action\n        - Failure_AccountLink_Link_Already_Exists\n        - Failure_AccountLink_Link_Does_Not_Exist\n        - Failure_AccountLink_Unlink_Data_Inconsistency\n        - Failure_AccountLink_Remote_Account_Ineligible\n        - Failure_AccountLink_Remote_Account_Signer_Not_Allowed\n        - Failure_AccountLink_Remote_Account_Participant_Not_Allowed\n        - Failure_Aggregate_Too_Many_Transactions\n        - Failure_Aggregate_No_Transactions\n        - Failure_Aggregate_Too_Many_Cosignatures\n        - Failure_Aggregate_Redundant_Cosignatures\n        - Failure_Aggregate_Ineligible_Cosigners\n        - Failure_Aggregate_Missing_Cosigners\n        - Failure_Aggregate_Plugin_Config_Malformed\n        - Failure_Aggregate_Bonded_Not_Enabled\n        - Failure_LockHash_Invalid_Mosaic_Id\n        - Failure_LockHash_Invalid_Mosaic_Amount\n        - Failure_LockHash_Hash_Exists\n        - Failure_LockHash_Hash_Does_Not_Exist\n        - Failure_LockHash_Inactive_Hash\n        - Failure_LockHash_Invalid_Duration\n        - Failure_LockHash_Plugin_Config_Malformed\n        - Failure_LockSecret_Invalid_Hash_Algorithm\n        - Failure_LockSecret_Hash_Exists\n        - Failure_LockSecret_Hash_Not_Implemented\n        - Failure_LockSecret_Proof_Size_Out_Of_Bounds\n        - Failure_LockSecret_Secret_Mismatch\n        - Failure_LockSecret_Unknown_Composite_Key\n        - Failure_LockSecret_Inactive_Secret\n        - Failure_LockSecret_Hash_Algorithm_Mismatch\n        - Failure_LockSecret_Invalid_Duration\n        - Failure_LockSecret_Plugin_Config_Malformed\n        - Failure_Mosaic_Invalid_Duration\n        - Failure_Mosaic_Invalid_Name\n        - Failure_Mosaic_Name_Id_Mismatch\n        - Failure_Mosaic_Expired\n        - Failure_Mosaic_Owner_Conflict\n        - Failure_Mosaic_Id_Mismatch\n        - Failure_Mosaic_Parent_Id_Conflict\n        - Failure_Mosaic_Invalid_Property\n        - Failure_Mosaic_Invalid_Flags\n        - Failure_Mosaic_Invalid_Divisibility\n        - Failure_Mosaic_Invalid_Supply_Change_Direction\n        - Failure_Mosaic_Invalid_Supply_Change_Amount\n        - Failure_Mosaic_Invalid_Id\n        - Failure_Mosaic_Modification_Disallowed\n        - Failure_Mosaic_Modification_No_Changes\n        - Failure_Mosaic_Supply_Immutable\n        - Failure_Mosaic_Supply_Negative\n        - Failure_Mosaic_Supply_Exceeded\n        - Failure_Mosaic_Non_Transferable\n        - Failure_Mosaic_Max_Mosaics_Exceeded\n        - Failure_Mosaic_Plugin_Config_Malformed\n        - Failure_Multisig_Modify_Account_In_Both_Sets\n        - Failure_Multisig_Modify_Multiple_Deletes\n        - Failure_Multisig_Modify_Redundant_Modifications\n        - Failure_Multisig_Modify_Unknown_Multisig_Account\n        - Failure_Multisig_Modify_Not_A_Cosigner\n        - Failure_Multisig_Modify_Already_A_Cosigner\n        - Failure_Multisig_Modify_Min_Setting_Out_Of_Range\n        - Failure_Multisig_Modify_Min_Setting_Larger_Than_Num_Cosignatories\n        - Failure_Multisig_Modify_Unsupported_Modification_Type\n        - Failure_Multisig_Modify_Max_Cosigned_Accounts\n        - Failure_Multisig_Modify_Max_Cosigners\n        - Failure_Multisig_Modify_Loop\n        - Failure_Multisig_Modify_Max_Multisig_Depth\n        - Failure_Multisig_Operation_Not_Permitted_By_Account\n        - Failure_Multisig_Plugin_Config_Malformed\n        - Failure_Namespace_Invalid_Duration\n        - Failure_Namespace_Invalid_Name\n        - Failure_Namespace_Name_Id_Mismatch\n        - Failure_Namespace_Expired\n        - Failure_Namespace_Owner_Conflict\n        - Failure_Namespace_Id_Mismatch\n        - Failure_Namespace_Plugin_Config_Malformed\n        - Failure_Namespace_Invalid_Namespace_Type\n        - Failure_Namespace_Root_Name_Reserved\n        - Failure_Namespace_Too_Deep\n        - Failure_Namespace_Parent_Unknown\n        - Failure_Namespace_Already_Exists\n        - Failure_Namespace_Already_Active\n        - Failure_Namespace_Eternal_After_Nemesis_Block\n        - Failure_Namespace_Max_Children_Exceeded\n        - Failure_Namespace_Alias_Invalid_Action\n        - Failure_Namespace_Alias_Namespace_Unknown\n        - Failure_Namespace_Alias_Already_Exists\n        - Failure_Namespace_Alias_Does_Not_Exist\n        - Failure_Namespace_Alias_Owner_Conflict\n        - Failure_Namespace_Alias_Unlink_Type_Inconsistency\n        - Failure_Namespace_Alias_Unlink_Data_Inconsistency\n        - Failure_Namespace_Alias_Invalid_Address\n        - Failure_Property_Invalid_Property_Type\n        - Failure_Property_Modification_Type_Invalid\n        - Failure_Property_Modification_Address_Invalid\n        - Failure_Property_Modification_Operation_Type_Incompatible\n        - Failure_Property_Modify_Unsupported_Modification_Type\n        - Failure_Property_Modification_Redundant\n        - Failure_Property_Modification_Not_Allowed\n        - Failure_Property_Modification_Count_Exceeded\n        - Failure_Property_Values_Count_Exceeded\n        - Failure_Property_Value_Invalid\n        - Failure_Property_Signer_Address_Interaction_Not_Allowed\n        - Failure_Property_Mosaic_Transfer_Not_Allowed\n        - Failure_Property_Transaction_Type_Not_Allowed\n        - Failure_Property_Plugin_Config_Malformed\n        - Failure_Transfer_Message_Too_Large\n        - Failure_Transfer_Out_Of_Order_Mosaics\n        - Failure_Transfer_Plugin_Config_Malformed\n        - Failure_Transfer_Too_Many_Mosaics\n        - Failure_Transfer_Zero_Amount\n        - Failure_NetworkConfig_Invalid_Signer\n        - Failure_NetworkConfig_BlockChain_Config_Too_Large\n        - Failure_NetworkConfig_Config_Redundant\n        - Failure_NetworkConfig_BlockChain_Config_Malformed\n        - Failure_NetworkConfig_Plugin_Config_Malformed\n        - Failure_NetworkConfig_SupportedEntityVersions_Config_Too_Large\n        - Failure_NetworkConfig_SupportedEntityVersions_Config_Malformed\n        - Failure_NetworkConfig_Network_Config_Trx_Cannot_Be_Unsupported\n        - Failure_NetworkConfig_Plugin_Config_Missing\n        - Failure_NetworkConfig_ImportanceGrouping_Less_Or_Equal_Half_MaxRollbackBlocks\n        - Failure_NetworkConfig_HarvestBeneficiaryPercentage_Exceeds_One_Hundred\n        - Failure_NetworkConfig_MaxMosaicAtomicUnits_Invalid\n        - Failure_NetworkConfig_ApplyHeightDelta_Zero\n        - Failure_BlockchainUpgrade_Invalid_Signer\n        - Failure_BlockchainUpgrade_Upgrade_Period_Too_Low\n        - Failure_BlockchainUpgrade_Redundant\n        - Failure_BlockchainUpgrade_Invalid_Current_Version\n        - Failure_BlockchainUpgrade_Plugin_Config_Malformed\n        - Failure_Metadata_Invalid_Metadata_Type\n        - Failure_Metadata_Modification_Type_Invalid\n        - Failure_Metadata_Modification_Key_Invalid\n        - Failure_Metadata_Modification_Value_Invalid\n        - Failure_Metadata_Modification_Key_Redundant\n        - Failure_Metadata_Modification_Value_Redundant\n        - Failure_Metadata_Remove_Not_Existing_Key\n        - Failure_Metadata_Address_Modification_Not_Permitted\n        - Failure_Metadata_Mosaic_Modification_Not_Permitted\n        - Failure_Metadata_Namespace_Modification_Not_Permitted\n        - Failure_Metadata_Address_Not_Found\n        - Failure_Metadata_Mosaic_Not_Found\n        - Failure_Metadata_Namespace_Not_Found\n        - Failure_Metadata_Too_Much_Keys\n        - Failure_Metadata_Plugin_Config_Malformed\n        - Failure_Metadata_MosaicId_Malformed\n        - Failure_Metadata_NamespaceId_Malformed\n        - Failure_Exchange_Offer_Doesnt_Exist\n        - Failure_Exchange_Zero_Amount\n        - Failure_Exchange_Zero_Price\n        - Failure_Exchange_No_Offers\n        - Failure_Exchange_Mosaic_Not_Allowed\n        - Failure_Exchange_Buying_Own_Units_Is_Not_Allowed\n        - Failure_Exchange_Not_Enough_Units_In_Offer\n        - Failure_Exchange_Invalid_Price\n        - Failure_Exchange_Account_Doesnt_Have_Any_Offer\n        - Failure_Exchange_Offer_Duration_Too_Large\n        - Failure_Exchange_Plugin_Config_Malformed\n        - Failure_Exchange_No_Offered_Mosaics_To_Remove\n        - Failure_Exchange_Duplicated_Offer_In_Request\n        - Failure_Exchange_Offer_Exists\n        - Failure_Exchange_Zero_Offer_Duration\n        - Failure_Service_Drive_Duration_Is_Not_Multiple_Of_BillingPeriod\n        - Failure_Service_Wrong_Percent_Approvers\n        - Failure_Service_Min_Replicators_More_Than_Replicas\n        - Failure_Service_Drive_Invalid_Duration\n        - Failure_Service_Drive_Invalid_Billing_Period\n        - Failure_Service_Drive_Invalid_Billing_Price\n        - Failure_Service_Drive_Invalid_Size\n        - Failure_Service_Drive_Invalid_Replicas\n        - Failure_Service_Drive_Invalid_Min_Replicators\n        - Failure_Service_Drive_Already_Exists\n        - Failure_Service_Plugin_Config_Malformed\n        - Failure_Service_Operation_Is_Not_Permitted\n        - Failure_Service_Drive_Does_Not_Exist\n        - Failure_Service_Replicator_Already_Connected_To_Drive\n        - Failure_Service_Root_Hash_Is_Not_Equal\n        - Failure_Service_File_Hash_Redundant\n        - Failure_Service_File_Doesnt_Exist\n        - Failure_Service_Too_Many_Files_On_Drive\n        - Failure_Service_Drive_Replicator_Not_Registered\n        - Failure_Service_Drive_Root_No_Changes\n        - Failure_Service_Drive_Has_Ended\n        - Failure_Service_Drive_Cant_Find_Default_Exchange_Offer\n        - Failure_Service_Exchange_Of_This_Mosaic_Is_Not_Allowed\n        - Failure_Service_Drive_Not_In_Pending_State\n        - Failure_Service_Exchange_More_Than_Required\n        - Failure_Service_Exchange_Cost_Is_Worse_Than_Default\n        - Failure_Service_Drive_Processed_Full_Duration\n        - Failure_Service_Zero_Upload_Info\n        - Failure_Service_Participant_Redundant\n        - Failure_Service_Participant_Is_Not_Registered_To_Drive\n        - Failure_Service_No_Files_To_Download\n        - Failure_Service_Zero_Infos\n        - Failure_Service_File_Deposit_Is_Zero\n        - Failure_Service_Verification_Already_In_Progress\n        - Failure_Service_Verification_Has_Not_Started\n        - Failure_Service_Verification_Is_Not_Active\n        - Failure_Service_Verification_Has_Not_Timed_Out\n        - Failure_Service_Drive_Is_Not_In_Progress\n        - Failure_Service_Replicator_Has_Active_File_Without_Deposit\n        - Failure_Service_File_Size_Invalid\n        - Failure_Service_Doesnt_Contain_Streaming_Tokens\n        - Failure_Service_Drive_Size_Exceeded\n        - Failure_Service_Failed_Block_Hashes_Missing\n        - Failure_Service_Duplicate_Failed_Block_Hashes\n        - Failure_Service_Max_Replicators_Reached\n        - Failure_Service_Invalid_File_Recipient\n        - Failure_Service_File_Download_Not_In_Progress\n        - Failure_Operation_Plugin_Config_Malformed\n        - Failure_Operation_Token_Invalid\n        - Failure_Operation_Expired\n        - Failure_Operation_Invalid_Duration\n        - Failure_Operation_Executor_Redundant\n        - Failure_Operation_Mosaic_Redundant\n        - Failure_Operation_Mosaic_Invalid\n        - Failure_Operation_Zero_Mosaic_Amount\n        - Failure_Operation_Invalid_Mosaic_Amount\n        - Failure_Operation_Invalid_Executor\n        - Failure_Operation_Identify_Transaction_Misplaced\n        - Failure_Operation_End_Transaction_Misplaced\n        - Failure_Operation_Identify_Transaction_Aggregated_With_End_Operation\n        - Failure_SuperContract_Super_Contract_Already_Exists\n        - Failure_SuperContract_Operation_Is_Not_Permitted\n        - Failure_SuperContract_File_Is_Not_Exist\n        - Failure_SuperContract_Remove_Super_Contract_File\n        - Failure_SuperContract_Drive_Has_Ended\n        - Failure_SuperContract_SuperContract_Is_Not_Exist\n        - Failure_Chain_Unlinked\n        - Failure_Chain_Block_Not_Hit\n        - Failure_Chain_Block_Inconsistent_State_Hash\n        - Failure_Chain_Block_Inconsistent_Receipts_Hash\n        - Failure_Chain_Unconfirmed_Cache_Too_Full\n        - Failure_Consumer_Empty_Input\n        - Failure_Consumer_Block_Transactions_Hash_Mismatch\n        - Neutral_Consumer_Hash_In_Recency_Cache\n        - Failure_Consumer_Remote_Chain_Too_Many_Blocks\n        - Failure_Consumer_Remote_Chain_Improper_Link\n        - Failure_Consumer_Remote_Chain_Duplicate_Transactions\n        - Failure_Consumer_Remote_Chain_Unlinked\n        - Failure_Consumer_Remote_Chain_Mismatched_Difficulties\n        - Failure_Consumer_Remote_Chain_Score_Not_Better\n        - Failure_Consumer_Remote_Chain_Too_Far_Behind\n        - Failure_Consumer_Remote_Chain_Too_Far_In_Future\n        - Failure_Extension_Partial_Transaction_Cache_Prune\n        - Failure_Extension_Partial_Transaction_Dependency_Removed\n      description: |\n        * Success - Validation result is success.\n        * Neutral - Validation result is neither success nor failure.\n        * Failure - Validation result is failure.\n        * Failure_Core_Past_Deadline - Validation failed because the deadline passed.\n        * Failure_Core_Future_Deadline - Validation failed because the deadline is too far in the future. Deadlines are only allowed to lie up to `24` hours ahead.\n        * Failure_Core_Insufficient_Balance - Validation failed because the account has an insufficient balance.\n        * Failure_Core_Too_Many_Transactions - Validation failed because there are too many transactions in a block.\n        * Failure_Core_Nemesis_Account_Signed_After_Nemesis_Block - Validation failed because an entity originated from the nemesis account after the nemesis block.\n        * Failure_Core_Wrong_Network - Validation failed because the entity has the wrong network specified.\n        * Failure_Core_Invalid_Address - Validation failed because an address is invalid.\n        * Failure_Core_Invalid_Version - Validation failed because the version of a block or a tranaction is invalid.\n        * Failure_Core_Invalid_Transaction_Fee - Validation failed because the transaction fee is invalid.\n        * Failure_Core_Block_Harvester_Ineligible - Validation failed because a block was validated by an ineligible validator.\n        * Failure_Core_Invalid_FeeInterest - Validation failed because the fee interest coefficient is invalid.\n        * Failure_Core_Invalid_FeeInterestDenominator - Validation failed because the denominator of fee interest coefficient is invalid.\n        * Failure_Hash_Exists - Validation failed because the entity hash is already known.\n        * Failure_Signature_Not_Verifiable - Validation failed because the verification of the signature failed.\n        * Failure_AccountLink_Invalid_Action -  Validation failed because the account link action is invalid: link (0) and unlink (1).\n        * Failure_AccountLink_Link_Already_Exists - Validation failed because the main account is already linked to another account.\n        * Failure_AccountLink_Link_Does_Not_Exist - Validation failed because the unlink data is not consistent with existing account link.\n        * Failure_AccountLink_Unlink_Data_Inconsistency - Validation failed because the unlink data is not consistent with existing account link.\n        * Failure_AccountLink_Remote_Account_Ineligible - Validation failed because the link is attempting to convert ineligible account to remote.\n        * Failure_AccountLink_Remote_Account_Signer_Not_Allowed - Validation failed because the remote is not allowed to sign a transaction.\n        * Failure_AccountLink_Remote_Account_Participant_Not_Allowed - Validation failed because the remote is not allowed to participate in the transaction.\n        * Failure_Aggregate_Too_Many_Transactions - Validation failed because an aggregate has too many transactions. An aggregate transaction can contain up to `1000` inner transactions.\n        * Failure_Aggregate_No_Transactions - Validation failed because an aggregate does not have any transactions.\n        * Failure_Aggregate_Too_Many_Cosignatures - Validation failed because an aggregate has too many cosignatures. The maximum number of cosignatories allowed is `15`.\n        * Failure_Aggregate_Redundant_Cosignatures - Validation failed because there are redundant cosignatures.\n        * Failure_Aggregate_Ineligible_Cosigners - Validation failed because at least one cosigner is ineligible.\n        * Failure_Aggregate_Missing_Cosigners - Validation failed because at least one required cosigner is missing. The tranaction was announced as complete but had missing cosignatures.\n        * Failure_Aggregate_Plugin_Config_Malformed - Validation failed because the aggregate transaction plugin configuration is malformed.\n        * Failure_Aggregate_Bonded_Not_Enabled - Validation failed because aggregate bonded tranaction is not enabled.\n        * Failure_LockHash_Invalid_Mosaic_Id - Validation failed because the lock does not allow the specified mosaic. The only mosaic allowed is `xpx`.\n        * Failure_LockHash_Invalid_Mosaic_Amount - Validation failed because the lock does not allow the specified amount. The minimum amount is `10`.\n        * Failure_LockHash_Hash_Exists - Validation failed because the hash is already present in cache.\n        * Failure_LockHash_Hash_Does_Not_Exist - Validation failed because the hash is not present in cache. Remember to lock before announcing aggregate bonded transactions.\n        * Failure_LockHash_Inactive_Hash - Validation failed because the hash is inactive.\n        * Failure_LockHash_Invalid_Duration - Validation failed because the duration is too long. Duration is allowed to lie up to `2` days.\n        * Failure_LockHash_Plugin_Config_Malformed - Validation failed because the lockhash plugin configuration is malformed.\n        * Failure_LockSecret_Invalid_Hash_Algorithm - Validation failed because the hash algorithm for lock type secret is invalid. See the [available algorithms](../built-in-features/cross-chain-swaps.md) list.\n        * Failure_LockSecret_Hash_Exists - Validation failed because the hash is already present in cache.\n        * Failure_LockSecret_Hash_Not_Implemented - Validation failed because the hash is not implemented yet.\n        * Failure_LockSecret_Proof_Size_Out_Of_Bounds - Validation failed because the proof is too small or too large. It should be between `10` and `1000` bytes.\n        * Failure_LockSecret_Secret_Mismatch - Validation failed because the secret does not match proof.\n        * Failure_LockSecret_Unknown_Composite_Key - Validation failed because the secret is unknown.\n        * Failure_LockSecret_Inactive_Secret - Validation failed because the secret is inactive.\n        * Failure_LockSecret_Hash_Algorithm_Mismatch - Validation failed because the hash algorithm does not match.\n        * Failure_LockSecret_Invalid_Duration - Validation failed because the duration is too long. Duration is allowed to lie up to `30` days.\n        * Failure_LockSecret_Plugin_Config_Malformed - Validation failed because the locksecret plugin configuration is malformed.\n        * Failure_Mosaic_Invalid_Duration - Validation failed because the duration has an invalid value. Duration is allowed to lie up to `365` days.\n        * Failure_Mosaic_Invalid_Name - Validation failed because the name is invalid. The mosaic name may have a maximum length of `64` characters. Allowed characters are a-to-z; 0-to-9 and the following special characters: `_-\n        * Failure_Mosaic_Name_Id_Mismatch - Validation failed because the name and id don’t match.\n        * Failure_Mosaic_Expired - Validation failed because the parent is expired.\n        * Failure_Mosaic_Owner_Conflict - Validation failed because the parent owner conflicts with the child owner.\n        * Failure_Mosaic_Id_Mismatch - Validation failed because the id is not the expected id generated from signer and nonce.\n        * Failure_Mosaic_Parent_Id_Conflict - Validation failed because the existing parent id does not match the supplied parent id.\n        * Failure_Mosaic_Invalid_Property - Validation failed because a mosaic property is invalid.\n        * Failure_Mosaic_Invalid_Flags - Validation failed because the mosaic flags are invalid.\n        * Failure_Mosaic_Invalid_Divisibility - Validation failed because the mosaic divisibility is invalid. The specified divisibility is greater than `6` or negative.\n        * Failure_Mosaic_Invalid_Supply_Change_Direction - Validation failed because the mosaic supply change direction is invalid: decrease (0) and increase (1).\n        * Failure_Mosaic_Invalid_Supply_Change_Amount - Validation failed because the mosaic supply change amount is invalid.\n        * Failure_Mosaic_Invalid_Id - Validation failed because the mosaic id is invalid.\n        * Failure_Mosaic_Modification_Disallowed - Validation failed because mosaic modification is not allowed.\n        * Failure_Mosaic_Modification_No_Changes - Validation failed because mosaic modification would not result in any changes.\n        * Failure_Mosaic_Supply_Immutable - Validation failed because the mosaic supply is immutable.\n        * Failure_Mosaic_Supply_Negative - Validation failed because the resulting mosaic supply is negative.\n        * Failure_Mosaic_Supply_Exceeded - Validation failed because the resulting mosaic supply exceeds the maximum allowed value. The range should be between 0 and `9.000.000.000`.\n        * Failure_Mosaic_Non_Transferable - Validation failed because the mosaic is not transferable. Only the creator of the mosaic is eligible to be the recipient of a non-transferable mosaic once transferred.\n        * Failure_Mosaic_Max_Mosaics_Exceeded - Validation failed because the credit of the mosaic would exceed the maximum different mosaics an account is allowed to own. Set by default to `10.000` different mosaics per account.\n        * Failure_Mosaic_Plugin_Config_Malformed - Validation failed because the mosaic plugin configuration is malformed.\n        * Failure_Multisig_Modify_Account_In_Both_Sets - Validation failed because an account is specified to be both added and removed.\n        * Failure_Multisig_Modify_Multiple_Deletes - Validation failed because there are multiple removals.\n        * Failure_Multisig_Modify_Redundant_Modifications - Validation failed because tehre are redundant modifications.\n        * Failure_Multisig_Modify_Unknown_Multisig_Account - Validation failed because account is not in multisig cache.\n        * Failure_Multisig_Modify_Not_A_Cosigner - Validation failed because there is not account to be removed.\n        * Failure_Multisig_Modify_Already_A_Cosigner - Validation failed because the account to be added is already a cosignatory.\n        * Failure_Multisig_Modify_Min_Setting_Out_Of_Range - Validation failed because thenew minimum settings are out of range.\n        * Failure_Multisig_Modify_Min_Setting_Larger_Than_Num_Cosignatories - Validation failed because min settings are larger than number of cosignatories.\n        * Failure_Multisig_Modify_Unsupported_Modification_Type - Validation failed because the modification type is unsupported: add (0) and remove (1).\n        * Failure_Multisig_Modify_Max_Cosigned_Accounts - Validation failed because the cosignatory already cosigns the maximum number of accounts. An account cannot be cosignatory of more than `5` multisig accounts.\n        * Failure_Multisig_Modify_Max_Cosigners - Validation failed because the multisig account already has the maximum number of cosignatories. A multisig account cannot have more than `10` cosignatories.\n        * Failure_Multisig_Modify_Loop - Validation failed because a multisig loop is created. A multisig account cannot be cosignatory of itself. Neither an account can be turned into multisig having as cosignatory another multisig where the account is cosignatory.\n        * Failure_Multisig_Modify_Max_Multisig_Depth - Validation failed because the max multisig depth is exceeded. The maximum depth of a multilevel multisig account is `3`.\n        * Failure_Multisig_Operation_Not_Permitted_By_Account - Validation failed because an operation is not permitted by a multisig account. A multisig account cannot be converted into a multisig account again.\n        * Failure_Multisig_Plugin_Config_Malformed - Validation failed because the multisig plugin configuration is malformed.\n        * Failure_Namespace_Invalid_Duration - Validation failed because the duration has an invalid value. Duration is allowed to lie up to `365` days.\n        * Failure_Namespace_Invalid_Name - Validation failed because the namespace has an invalid name. The namespace name may have a maximum length of `64` characters. Allowed characters are a-to-z; 0-to-9 and the following special characters: `_-\n        * Failure_Namespace_Name_Id_Mismatch - Validation failed because the name and id don’t match.\n        * Failure_Namespace_Expired - Validation failed because the namespace has expired.\n        * Failure_Namespace_Owner_Conflict - Validation failed because the parent owner conflicts with the child owner.\n        * Failure_Namespace_Id_Mismatch - Validation failed because the id is not the expected id generated from signer and nonce.\n        * Failure_Namespace_Plugin_Config_Malformed - Validation failed because the namespace plugin configuration is malformed.\n        * Failure_Namespace_Invalid_Namespace_Type - Validation failed because the namespace type is invalid: rootnamespace (0) and subnamesapce (1).\n        * Failure_Namespace_Root_Name_Reserved - Validation failed because the root namespace has a [reserved name](https://github.com/proximax-storage/cpp-xpx-chain/blob/master/resources/config-network.properties#L60).\n        * Failure_Namespace_Too_Deep - Validation failed because the resulting namespace would exceed the maximum allowed namespace depth. Namespaces can have up to `3` nested levels.\n        * Failure_Namespace_Parent_Unknown - Validation failed because the namespace parent is unknown.\n        * Failure_Namespace_Already_Exists - Validation failed because the namespace already exists.\n        * Failure_Namespace_Already_Active - Validation failed because the namespace is already active.\n        * Failure_Namespace_Eternal_After_Nemesis_Block - Validation failed because an eternal namespace was received after the nemesis block.\n        * Failure_Namespace_Max_Children_Exceeded - Validation failed because the maximum number of children for a root namespace was exceeded.\n        * Failure_Namespace_Alias_Invalid_Action - Validation failed because alias action is invalid: link (0) and unlink (1).\n        * Failure_Namespace_Alias_Namespace_Unknown - Validation failed because the namespace does not exist.\n        * Failure_Namespace_Alias_Already_Exists - Validation failed because the namespace is already linked to an alias.\n        * Failure_Namespace_Alias_Does_Not_Exist - Validation failed because the namespace is not linked to an alias.\n        * Failure_Namespace_Alias_Owner_Conflict - Validation failed because the namespace has different owner.\n        * Failure_Namespace_Alias_Unlink_Type_Inconsistency - Validation failed because unlink type is not consistent with the existing alias.\n        * Failure_Namespace_Alias_Unlink_Data_Inconsistency - Validation failed because unlink data is not consistent with the existing alias.\n        * Failure_Namespace_Alias_Invalid_Address - Validation failed because the aliased address is invalid.\n        * Failure_Property_Invalid_Property_Type - Validation failed because the property type is invalid.\n        * Failure_Property_Modification_Type_Invalid - Validation failed because a modification type is invalid.\n        * Failure_Property_Modification_Address_Invalid - Validation failed because a modification address is invalid.\n        * Failure_Property_Modification_Operation_Type_Incompatible - Validation failed because the operation type is incompatible.\n        * Failure_Property_Modify_Unsupported_Modification_Type - Validation failed because the modification type is unsupported: add (0) and delete (1).\n        * Failure_Property_Modification_Redundant - Validation failed because a modification is redundant.\n        * Failure_Property_Modification_Not_Allowed - Validation failed because there is not a value in the container.\n        * Failure_Property_Modification_Count_Exceeded - Validation failed because the transaction has too many modifications.\n        * Failure_Property_Values_Count_Exceeded - Validation failed because the resulting property has too many values. The maximum number of values a property can have is `512`.\n        * Failure_Property_Value_Invalid - Validation failed because the property value is invalid.\n        * Failure_Property_Signer_Address_Interaction_Not_Allowed - Validation failed because the signer is not allowed to interact with an address involved in the transaction.\n        * Failure_Property_Mosaic_Transfer_Not_Allowed - Validation failed because the mosaic transfer is prohibited by the recipient.\n        * Failure_Property_Transaction_Type_Not_Allowed - Validation failed because the transaction type is not allowed to be initiated by the signer.\n        * Failure_Property_Plugin_Config_Malformed - Validation failed because the property plugin configuration is malformed.\n        * Failure_Transfer_Message_Too_Large - Validation failed because the message is too large. It exceeds the limit of `1024` bytes.\n        * Failure_Transfer_Out_Of_Order_Mosaics - Validation failed because the mosaics are out of order. Mosaics on a transfer transaction should be ordered by id value.\n        * Failure_Transfer_Plugin_Config_Malformed - Validation failed because the transfer plugin configuration is malformed.\n        * Failure_Transfer_Too_Many_Mosaics - Validation failed because there are too many mosaics.\n        * Failure_Transfer_Zero_Amount - Validation failed because there is zero amount of mosaics.\n        * Failure_NetworkConfig_Invalid_Signer - Validation failed because the transaction signer is not nemesis account.\n        * Failure_NetworkConfig_BlockChain_Config_Too_Large - Validation failed because the network configuration size exceeded the limit.\n        * Failure_NetworkConfig_Config_Redundant - Validation failed because a network configuration has already been set up at the height.\n        * Failure_NetworkConfig_BlockChain_Config_Malformed - Validation failed because the network configuration is malformed.\n        * Failure_NetworkConfig_Plugin_Config_Malformed - Validation failed because the configuration of network configuration plugin is malformed.\n        * Failure_NetworkConfig_SupportedEntityVersions_Config_Too_Large - Validation failed because the supported entity configuration exceeded the limit.\n        * Failure_NetworkConfig_SupportedEntityVersions_Config_Malformed - Validation failed because the supported entity configuration is malformed.\n        * Failure_NetworkConfig_Network_Config_Trx_Cannot_Be_Unsupported - Validation failed because the supported entity versions configuration has no version of the network config transaction.\n        * Failure_NetworkConfig_Plugin_Config_Missing - Validation failed because some plugin config missing.\n        * Failure_NetworkConfig_ImportanceGrouping_Less_Or_Equal_Half_MaxRollbackBlocks - Validation failed because of the importance grouping (block) less or equal half max rollback blocks.\n        * Failure_NetworkConfig_HarvestBeneficiaryPercentage_Exceeds_One_Hundred - Validation failed because of harvest beneficiary more than 100%.\n        * Failure_NetworkConfig_MaxMosaicAtomicUnits_Invalid - Validation failed because the max mosaic amount units is invelid.\n        * Failure_NetworkConfig_ApplyHeightDelta_Zero - Validation failed because the height delta is zero.\n        * Failure_BlockchainUpgrade_Invalid_Signer - Validation failed because the blockchain upgrade transaction signer is not nemesis account.\n        * Failure_BlockchainUpgrade_Upgrade_Period_Too_Low - Validation failed because the blockchain upgrade period is too low.\n        * Failure_BlockchainUpgrade_Redundant - Validation failed because a blockchain upgrade has already been set up at the height.\n        * Failure_BlockchainUpgrade_Invalid_Current_Version - Validation failed because the current blockchain version is invalid.\n        * Failure_BlockchainUpgrade_Plugin_Config_Malformed - Validation failed because the blockchain upgrade plugin configuration is malformed.\n        * Failure_Metadata_Invalid_Metadata_Type - Validation failed because the metadata type is invalid.\n        * Failure_Metadata_Modification_Type_Invalid - Validation failed because a modification type is invalid.\n        * Failure_Metadata_Modification_Key_Invalid - Validation failed because a key has wrong size.\n        * Failure_Metadata_Modification_Value_Invalid - Validation failed because a modification value is invalid.\n        * Failure_Metadata_Modification_Key_Redundant - Validation failed because a key already exists.\n        * Failure_Metadata_Modification_Value_Redundant - Validation failed because there is already modification with the same key and value.\n        * Failure_Metadata_Remove_Not_Existing_Key - Validation failed because of an attempt to remove not existing key.\n        * Failure_Metadata_Address_Modification_Not_Permitted - Validation failed because a modification of address is not permitted.\n        * Failure_Metadata_Mosaic_Modification_Not_Permitted - Validation failed because a modification of mosaic is not permitted.\n        * Failure_Metadata_Namespace_Modification_Not_Permitted - Validation failed because a modification of namespace is not permitted.\n        * Failure_Metadata_Address_Not_Found - Validation failed because address is not found.\n        * Failure_Metadata_Mosaic_Not_Found - Validation failed because mosaic is not found.\n        * Failure_Metadata_Namespace_Not_Found - Validation failed because namespace is not found.\n        * Failure_Metadata_Too_Much_Keys - Validation failed because the number of keys exceeded the limit.\n        * Failure_Metadata_Plugin_Config_Malformed - Validation failed because the metadata plugin configuration is malformed.\n        * Failure_Metadata_MosaicId_Malformed - Validation failed because the mosaic id is malformed.\n        * Failure_Metadata_NamespaceId_Malformed - Validation failed because the namespace id is malformed.\n        * Failure_Exchange_Offer_Doesnt_Exist - Validation failed because the offer does not exist.\n        * Failure_Exchange_Zero_Amount - Validation failed because the amount is zero.\n        * Failure_Exchange_Zero_Price - Validation failed because the price is zero.\n        * Failure_Exchange_No_Offers - Validation failed because there are no offers.\n        * Failure_Exchange_Mosaic_Not_Allowed - Validation failed because mosaic is not allowed.\n        * Failure_Exchange_Buying_Own_Units_Is_Not_Allowed - Validation failed because there is no possibility of buying own units.\n        * Failure_Exchange_Not_Enough_Units_In_Offer - Validation failed because of not enough units in the offer.\n        * Failure_Exchange_Invalid_Price - Validation failed because of the price is invalid.\n        * Failure_Exchange_Account_Doesnt_Have_Any_Offer - Validation failed because the account does not have any offers.\n        * Failure_Exchange_Offer_Duration_Too_Large - Validation failed because the offer duration is too large.\n        * Failure_Exchange_Plugin_Config_Malformed - Validation failed because the exchange plugin configuration is malformed.\n        * Failure_Exchange_No_Offered_Mosaics_To_Remove - Validation failed because there are no offered mosaics to remove.\n        * Failure_Exchange_Duplicated_Offer_In_Request - Validation failed because the offer is duplicated in the request.\n        * Failure_Exchange_Offer_Exists - Validation failed because the offer already exists.\n        * Failure_Exchange_Zero_Offer_Duration - Validation failed because the offer duration is zero.\n        * Failure_Service_Drive_Duration_Is_Not_Multiple_Of_BillingPeriod - Validation failed because the duration multiple of is not billing period.\n        * Failure_Service_Wrong_Percent_Approvers - Validation failed because the percentage of approvers is wrong.\n        * Failure_Service_Min_Replicators_More_Than_Replicas - Validation failed because the minimum number of replicates more than the number of replicas.\n        * Failure_Service_Drive_Invalid_Duration - Validation failed because the duration is invalid.\n        * Failure_Service_Drive_Invalid_Billing_Period - Validation failed because the billing period is invalid.\n        * Failure_Service_Drive_Invalid_Billing_Price - Validation failed because the billing price is invalid.\n        * Failure_Service_Drive_Invalid_Size - Validation failed because the size is invalid.\n        * Failure_Service_Drive_Invalid_Replicas - Validation failed because the number of replicas is invalid.\n        * Failure_Service_Drive_Invalid_Min_Replicators - Validation failed because the minimum number of replicas is invalid.\n        * Failure_Service_Drive_Already_Exists - Validation failed because the drive with this id already exists.\n        * Failure_Service_Plugin_Config_Malformed - Validation failed because the service plugin configuration is malformed.\n        * Failure_Service_Operation_Is_Not_Permitted - Validation failed because the operation is not permitted.\n        * Failure_Service_Drive_Does_Not_Exist - Validation failed because the drive with this id does not exists.\n        * Failure_Service_Replicator_Already_Connected_To_Drive - Validation failed because the replicator already connected to this drive.\n        * Failure_Service_Root_Hash_Is_Not_Equal - Validation failed because the root hash is not equal.\n        * Failure_Service_File_Hash_Redundant - Validation failed because the file hash is redundant.\n        * Failure_Service_File_Doesnt_Exist - Validation failed because the file does not exist.\n        * Failure_Service_Too_Many_Files_On_Drive - Validation failed because the drive is full.\n        * Failure_Service_Drive_Replicator_Not_Registered - Validation failed because the replicator is not registered.\n        * Failure_Service_Drive_Root_No_Changes - Validation failed because the root hash has not changed.\n        * Failure_Service_Drive_Has_Ended - Validation failed because the drive duration is expired.\n        * Failure_Service_Drive_Cant_Find_Default_Exchange_Offer - Validation failed because default exchange offer not found.\n        * Failure_Service_Exchange_Of_This_Mosaic_Is_Not_Allowed - Validation failed because the exchange of this mosaic is not allowed.\n        * Failure_Service_Drive_Not_In_Pending_State - Validation failed because the drive is not in the pending state.\n        * Failure_Service_Exchange_More_Than_Required - Validation failed because the sum of the exchange more than is required.\n        * Failure_Service_Exchange_Cost_Is_Worse_Than_Default - Validation failed because the exchange cost is worse than the default offer one.\n        * Failure_Service_Drive_Processed_Full_Duration - Validation failed because the drive duration is expired.\n        * Failure_Service_Zero_Upload_Info - Validation failed because there is no upload info.\n        * Failure_Service_Participant_Redundant - Validation failed because the participant is redundant.\n        * Failure_Service_Participant_Is_Not_Registered_To_Drive - Validation failed because the participant is not registered to the drive.\n        * Failure_Service_No_Files_To_Download - Validation failed because there are zero files to download.\n        * Failure_Service_Zero_Infos - Validation failed because there is no info.\n        * Failure_Service_File_Deposit_Is_Zero - Validation failed because no deposit is zero.\n        * Failure_Service_Verification_Already_In_Progress - Validation failed because of the verification already in progress..\n        * Failure_Service_Verification_Has_Not_Started - Validation failed because of the verification has not started.\n        * Failure_Service_Verification_Is_Not_Active - Validation failed because of the verification is not active.\n        * Failure_Service_Verification_Has_Not_Timed_Out - Validation failed because of the verification has not timed out.\n        * Failure_Service_Drive_Is_Not_In_Progress - Validation failed because the drive is not in the progress state.\n        * Failure_Service_Replicator_Has_Active_File_Without_Deposit - Validation failed because the replicator has an active file without deposit.\n        * Failure_Service_File_Size_Invalid - Validation failed because the removing files have a different file size.\n        * Failure_Service_Doesnt_Contain_Streaming_Tokens - Validation failed because it does not contain streaming tokens.\n        * Failure_Service_Drive_Size_Exceeded - Validation failed because the drive size is exceeded.\n        * Failure_Service_Failed_Block_Hashes_Missing - Validation failed because block hashes are missing.\n        * Failure_Service_Duplicate_Failed_Block_Hashes - Validation failed because block hashes are duplicated.\n        * Failure_Service_Max_Replicators_Reached - Validation failed because the max count of replicators is reached.\n        * Failure_Service_Invalid_File_Recipient - Validation failed because the recipient of the file is invalid.\n        * Failure_Service_File_Download_Not_In_Progress - Validation failed because the file download not in progress.\n        * Failure_Operation_Plugin_Config_Malformed - Validation failed because the operation plugin configuration is malformed.\n        * Failure_Operation_Token_Invalid - Validation failed because the token is invalid.\n        * Failure_Operation_Expired - Validation failed because the operation is expired.\n        * Failure_Operation_Invalid_Duration - Validation failed because the duration is invalid.\n        * Failure_Operation_Executor_Redundant - Validation failed because the operation plugin configuration is malformed.\n        * Failure_Operation_Mosaic_Redundant - Validation failed because the mosaic is redundant.\n        * Failure_Operation_Mosaic_Invalid - Validation failed because the mosaic is invalid.\n        * Failure_Operation_Zero_Mosaic_Amount - Validation failed because the amount of mosaic is zero.\n        * Failure_Operation_Invalid_Mosaic_Amount - Validation failed because the amount of mosaic is invalid.\n        * Failure_Operation_Invalid_Executor - Validation failed because the executor is invalid.\n        * Failure_Operation_Identify_Transaction_Misplaced - Validation failed because the identify transaction is misplaced.\n        * Failure_Operation_End_Transaction_Misplaced - Validation failed because the end transaction is misplaced.\n        * Failure_Operation_Identify_Transaction_Aggregated_With_End_Operation - Validation failed because the identify transaction aggregated with the end operation.\n        * Failure_SuperContract_Super_Contract_Already_Exists - Validation failed because the super contract already exists.\n        * Failure_SuperContract_Operation_Is_Not_Permitted - Validation failed because the operation is not permited.\n        * Failure_SuperContract_File_Is_Not_Exist - Validation failed because the file is not exist.\n        * Failure_SuperContract_Remove_Super_Contract_File - Validation failed because the super contract executing and there is no possibility to remove the file.\n        * Failure_SuperContract_Drive_Has_Ended - Validation failed because the drive has ended (finished or terminated).\n        * Failure_SuperContract_SuperContract_Is_Not_Exist - Validation failed because the super contract is not exist.\n        * Failure_Chain_Unlinked - Validation failed because a block was received that did not link with the existing chain.\n        * Failure_Chain_Block_Not_Hit - Validation failed because a block was received that is not a hit.\n        * Failure_Chain_Block_Inconsistent_State_Hash - Validation failed because a block was received that has an inconsistent state hash.\n        * Failure_Chain_Block_Inconsistent_Receipts_Hash - Validation failed because a block was received that has an inconsistent receipts hash.\n        * Failure_Chain_Unconfirmed_Cache_Too_Full - Validation failed because the unconfirmed cache is too full.\n        * Failure_Consumer_Empty_Input - Validation failed because the consumer input is empty.\n        * Failure_Consumer_Block_Transactions_Hash_Mismatch - Validation failed because the block transactions hash does not match the calculated value.\n        * Neutral_Consumer_Hash_In_Recency_Cache - Validation failed because the entity hash is present in the recency cache.\n        * Failure_Consumer_Remote_Chain_Too_Many_Blocks - Validation failed because the chain part has too many blocks.\n        * Failure_Consumer_Remote_Chain_Improper_Link - Validation failed because the chain is internally improperly linked.\n        * Failure_Consumer_Remote_Chain_Duplicate_Transactions - Validation failed because the chain part contains duplicate transactions.\n        * Failure_Consumer_Remote_Chain_Unlinked - Validation failed because the chain part does not link to the current chain.\n        * Failure_Consumer_Remote_Chain_Mismatched_Difficulties - Validation failed because the remote chain difficulties do not match the calculated difficulties.\n        * Failure_Consumer_Remote_Chain_Score_Not_Better - Validation failed because the remote chain score is not better.\n        * Failure_Consumer_Remote_Chain_Too_Far_Behind - Validation failed because the remote chain is too far behind.\n        * Failure_Consumer_Remote_Chain_Too_Far_In_Future - Validation failed because the remote chain timestamp is too far in the future.\n        * Failure_Extension_Partial_Transaction_Cache_Prune - Validation failed because the partial transaction was pruned from the temporal cache.\n        * Failure_Extension_Partial_Transaction_Dependency_Removed - Validation failed because the partial transaction was pruned from the temporal cache due to its dependency being removed.\n    AccountLinkTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n      description: |\n        The account link types:\n        * 0 -  Unlinked. Account is not linked to another account.\n        * 1 -  Main. Account is a balance-holding account that is linked to a remote harvester account.\n        * 2 -  Remote. Account is a remote harvester account that is linked to a balance-holding account.\n        * 3 -  Remote_Unlinked. Account is a remote harvester eligible account that is unlinked.\n      example: 0\n    AliasActionEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The alias action:\n        * 0 -  Link alias.\n        * 1 -  Unlink alias.\n      example: 0\n    AliasTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n      description: |\n        The alias type:\n        * 0 -  No alias.\n        * 1 -  Mosaic id alias.\n        * 2 -  Addres alias.\n      example: 0\n    AccountPropertyTypeEnum:\n      type: integer\n      example: 1\n      enum:\n        - 1\n        - 2\n        - 4\n        - 5\n        - 129\n        - 130\n        - 132\n      description: |\n        The account properties type:\n        * 0x01 (1 decimal) - The property type only allows receiving transactions from an address.\n        * 0x02 (2 decimal) - The property type only allows receiving transactions containing a mosaic id.\n        * 0x04 (4 decimal) - The property type only allows sending transactions with a given transaction type.\n        * 0x05 (5 decimal) - Property type sentinel.\n        * 0x81 (129 decimal) - The property type blocks receiving transactions from an address.\n        * 0x82 (130 decimal) - The property type blocks receiving transactions containing a mosaic id.\n        * 0x84 (132 decimal) -  The property type blocks sending transactions with a given transaction type.\n    AccountPropertiesModificationTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The account properties modification type:\n        * 0 - Add property.\n        * 1 - Remove property.\n      example: 0\n    EntityTypeEnum:\n      type: integer\n      enum:\n        - 16728\n        - 16729\n        - 16701\n        - 16957\n        - 17213\n        - 16717\n        - 16973\n        - 16718\n        - 16974\n        - 17230\n        - 16724\n        - 16725\n        - 16705\n        - 16961\n        - 16712\n        - 16720\n        - 16976\n        - 17232\n        - 16722\n        - 16978\n        - 16716\n        - 32835\n        - 33091\n        - 16737\n        - 16993\n        - 16703\n        - 16959\n        - 17215\n        - 17229\n        - 17485\n        - 18778\n        - 19034\n        - 16735\n        - 16991\n        - 17247\n        - 16736\n        - 16992\n        - 17248\n        - 17504\n        - 17760\n        - 16738\n        - 16994\n        - 17250\n        - 17506\n        - 17762\n        - 18018\n        - 20066\n\n      description: |\n        The entity type:\n        * 0x4158 (16728 decimal) - Blockchain Upgrade Transaction.\n        * 0x4159 (16729 decimal) - Network Config Transaction.\n        * 0x413D (16701 decimal) - Address Metadata Transaction.\n        * 0x423D (16957 decimal) - Mosaic Metadata Transaction.\n        * 0x433D (17213 decimal) - Namespace Metadata Transaction.\n        * 0x414D (16717 decimal) - Mosaic Definition Transaction.\n        * 0x424D (16973 decimal) - Mosaic Supply Change Transaction.\n        * 0x414E (16718 decimal) - Register Namespace Transaction.\n        * 0x424E (16974 decimal) - Address Alias Transaction.\n        * 0x434E (17230 decimal) - Mosaic Alias Transaction.\n        * 0x4154 (16724 decimal) - Transfer Transaction.\n        * 0x4155 (16725 decimal) - Modify Multisig Account Transaction.\n        * 0x4141 (16705 decimal) - Aggregate Complete Transaction.\n        * 0x4241 (16961 decimal) - Aggregate Bonded Transaction.\n        * 0x4148 (16712 decimal) - Hash Lock Transaction.\n        * 0x4150 (16720 decimal) - Account Properties Address Transaction.\n        * 0x4250 (16976 decimal) - Account Properties Mosaic Transaction.\n        * 0x4350 (17232 decimal) - Account Properties Entity Type Transaction.\n        * 0x4152 (16722 decimal) - Secret Lock Transaction.\n        * 0x4252 (16978 decimal) - Secret Proof Transaction.\n        * 0x414C (16716 decimal) - Account Link Transaction.\n        * 0x8043 (32835 decimal) - Nemesis block.\n        * 0x8143 (33091 decimal) - Regular block.\n        * 0x415D (16733 decimal) - Add Exchange Offer Transaction.\n        * 0x425D (16989 decimal) - Exchange Offer Transaction.\n        * 0x435D (17245 decimal) - Remove Exchange Offer Transaction.\n        * 0x4157 (16727 decimal) - Modify Contract Transaction.\n        * 0x415A (16730 decimal) - Prepare Drive Transaction.\n        * 0x425A (16986 decimal) - Join To Drive Transaction.\n        * 0x435A (17242 decimal) - Drive File System Transaction.\n        * 0x445A (17498 decimal) - Files Deposit Transaction.\n        * 0x455A (17754 decimal) - End Drive Transaction.\n        * 0x465A (18010 decimal) - Drive Files Reward Transaction.\n        * 0x475A (18266 decimal) - Start Drive Verification Transaction.\n        * 0x485A (18522 decimal) - End Drive Verification Transaction.\n        * 0x4161 (16737 decimal) - Add Harvester Entity Type.\n        * 0x4261 (16993 decimal) - Remove Harvester Entity Type.\n        * 0x413f (16703 decimal) - Account Metadata.\n        * 0x423f (16959 decimal) - Mosaic Metadata.\n        * 0x433f (17215 decimal) - Namespace Metadata.\n        * 0x434d (17229 decimal) - Mosaic Modify Levy.\n        * 0x444d (17485 decimal) - Mosaic Remove Levy.\n        * 0x495A (18778 decimal) - Start File Download.\n        * 0x4A5A (19034 decimal) - End File Download.\n        * 0x415F (16735 decimal) - Operation Identify.\n        * 0x425F (16991 decimal) - Start Operation.\n        * 0x435F (17247 decimal) - End Operation.\n        * 0x4160 (16736 decimal) - Deploy.\n        * 0x4260 (16992 decimal) - Start Execute.\n        * 0x4360 (17248 decimal) - End Execute.\n        * 0x4460 (17504 decimal) - Super Contract File System.\n        * 0x4560 (17760 decimal) - Deactivate.\n        * 0x4162 (16738 decimal) - Prepare Bc Drive.\n        * 0x4262 (16994 decimal) - Data Modification.\n        * 0x4362 (17250 decimal) - Download.\n        * 0x4462 (17506 decimal) - Data Modification Approval.\n        * 0x4562 (17762 decimal) - Data Modification Cancel.\n        * 0x4662 (18018 decimal) - Replicator Onboarding.\n        * 0x4E62 (20066 decimal) - Drive Closure.\n\n    HashAlgorithmEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n        - 3\n      description: |\n        The hash algorithm used to hash te proof:\n        * 0 (Op_Sha3_256)  - The proof is hashed using sha3 256.\n        * 1 (Op_Keccak_256)  - The proof is hashed using Keccak (ETH compatibility).\n        * 2 (Op_Hash_160)  - The proof is hashed twice: first with Sha-256 and then with RIPEMD-160 (bitcoin’s OP_HASH160).\n        * 3 (Op_Hash_256)  - The proof is hashed twice with Sha-256 (bitcoin’s OP_HASH256).\n    LinkActionEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The type of the action:\n        * 0 - Link.\n        * 1 - Unlink.\n    MetadataTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n      description: |\n        The type of the metadata:\n        * 1 - Address metadata.\n        * 2 - Mosaic metadata.\n        * 3 - Namespace metadata.\n      example: 3\n    MetadataModificationTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The type of the metadata modification:\n        * 0 - Add metadata.\n        * 1 - Remove metadata.\n      example: 0\n    MessageTypeEnum:\n      type: integer\n      enum:\n        - 0\n      description: |\n        The type of the message:\n        * 0 - Regular message.\n      example: 0\n    MosaicPropertyIdEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n      description: |\n        The mosaic propery id means:\n        * 0 - MosaicFlags\n        * 1 - Divisibility\n        * 2 - Duration\n      example: 0\n    MosaicDirectionEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The supply modification direction:\n        * 0  - Decrease.\n        * 1  - Increase.\n      example: 0\n    MultisigModificationTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The type of the modification:\n        * 0 - Add cosignatory.\n        * 1 - Remove cosignatory.\n      example: 0\n    NamespaceTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n      description: |\n        The namespace type:\n        * 0 -  Root namespace.\n        * 1 -  Subnamespace.\n      example: 0\n    ReceiptTypeEnum:\n      type: integer\n      enum:\n        - 4685\n        - 4941\n        - 4686\n        - 8515\n        - 8776\n        - 9042\n        - 12616\n        - 12626\n        - 16717\n        - 16718\n        - 20803\n        - 57652\n        - 61763\n        - 62019\n      description: |\n        The type of the receipt:\n        * 0x134D (4941 decimal) - Mosaic_Rental_Fee.\n        * 0x124E (4686 decimal) - Namespace_Rental_Fee.\n        * 0x2143 (8515 decimal) - Harvest_Fee.\n        * 0x2248 (8776 decimal) - LockHash_Completed.\n        * 0x2348 (9032 decimal) - LockHash_Expired.\n        * 0x2252 (8786 decimal) - LockSecret_Completed.\n        * 0x2352 (9042 decimal) - LockSecret_Expired.\n        * 0x3148 (12616 decimal) - LockHash_Created.\n        * 0x3152 (12626 decimal) - LockSecret_Created.\n        * 0x414D (16717 decimal) - Mosaic_Expired.\n        * 0x414E (16718 decimal) - Namespace_Expired.\n        * 0x5143 (20803 decimal) - Inflation.\n        * 0xE134 (57652 decimal) - Transaction_Group.\n        * 0xF143 (61763 decimal) - Address_Alias_Resolution.\n        * 0xF243 (62019 decimal) - Mosaic_Alias_Resolution.\n    NetworkTypeEnum:\n      type: integer\n      description: |\n        The entity version. The higher byte represents the network\n        identifier:\n        * 0x68 (MAIN_NET) - Public main network.\n        * 0x98 (TEST_NET) - Public test network.\n        * 0x60 (MIJIN) - Private network.\n        * 0x90 (MIJIN_TEST) - Private test network.\n      example: 36867\n    RolesTypeEnum:\n      type: string\n      enum:\n        - owner\n        - replicator\n      description: |\n        The role of the node:\n        * owner - show drives where an account is a participant as owner\n        * replicator - show drives where an account is a participant as replicators\n      example: owner\n    OfferTypeEnum:\n      type: integer\n      enum:\n        - 0\n        - 1\n        - 2\n      description: |\n        The role of the node:\n        * 0 - A sell offer.\n        * 1 - A buy offer.\n        * 2 - Unknown type.\n      example: 2\n    # Type\n    UInt64DTO:\n      type: array\n      items:\n        type: integer\n        format: int32\n      example:\n        - lower\n        - higher\n    HashDTO:\n      type: string\n      example: \"C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\"\n    TransactionId:\n      type: string\n      example:\n        - 59B8DA0F0CB2720001103922\n        - 59B8D8E60CB2720001103904\n    # Account endpoints\n    AccountInfoDTO:\n      type: object\n      required:\n        - meta\n        - account\n      properties:\n        meta:\n          $ref: \"#/components/schemas/AccountMetaDTO\"\n        account:\n          $ref: \"#/components/schemas/AccountDTO\"\n    AccountMetaDTO:\n      type: object\n      required:\n        - height\n        - hash\n        - merkleComponentHash\n        - index\n        - id\n      properties:\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        hash:\n          type: string\n        merkleComponentHash:\n          type: string\n        index:\n          type: integer\n        id:\n          type: string\n    AccountDTO:\n      type: object\n      required:\n        - address\n        - addressHeight\n        - publicKey\n        - publicKeyHeight\n        - mosaics\n        - accountType\n        - linkedAccountKey\n      properties:\n        address:\n          type: string\n          description: |\n            The account unique address in hexadecimal.\n          example: 9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\n        addressHeight:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        publicKey:\n          type: string\n          description: |\n            The public key of an account can be used to verify signatures of the\n            account. Only accounts that have already published a transaction\n            have a public key assigned to the account. Otherwise, the field is\n            null.\n          example: AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\n        publicKeyHeight:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        mosaics:\n          type: array\n          description: |\n            The list of mosaics the account owns. The amount is represented in\n            absolute amount. Thus a balance of 123456789 for a mosaic with\n            divisibility 6 (absolute) means the account owns 123.456789 instead.\n          items:\n            $ref: \"#/components/schemas/MosaicDTO\"\n        accountType:\n          $ref: \"#/components/schemas/AccountLinkTypeEnum\"\n        linkedAccountKey:\n          description: |\n            The public key of a linked account. The linked account can use|provide balance for delegated harvesting.\n          type: string\n          example: AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\n    AccountNamesDTO:\n      type: object\n      required:\n        - address\n        - names\n      properties:\n        address:\n          type: string\n          description: The address of the account in hexadecimal.\n          example: 9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\n        names:\n          type: array\n          description: The mosaic linked namespace names.\n          example:\n            - alias1\n            - alias2\n          items:\n            type: string\n    AccountPropertiesInfoDTO:\n      type: object\n      required:\n        - accountProperties\n      properties:\n        accountProperties:\n          $ref: \"#/components/schemas/AccountPropertiesDTO\"\n    AccountPropertiesDTO:\n      type: object\n      required:\n        - address\n        - properties\n      properties:\n        address:\n          type: string\n          description: The address of the account in hexadecimal.\n          example: 9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\n        properties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountPropertyDTO\"\n    AccountPropertyDTOItems:\n      oneOf:\n        - type: string\n        - $ref: \"#/components/schemas/UInt64DTO\"\n        - type: integer\n    AccountPropertyDTO:\n      type: object\n      required:\n        - propertyType\n        - values\n      properties:\n        propertyType:\n          $ref: \"#/components/schemas/AccountPropertyTypeEnum\"\n        values:\n          type: array\n          description: The address, transaction type or mosaic id to filter.\n          items:\n            $ref: \"#/components/schemas/AccountPropertyDTOItems\"\n    AccountPropertiesModificationDTOItems:\n      oneOf:\n        - type: string\n        - $ref: \"#/components/schemas/UInt64DTO\"\n        - type: integer\n    AccountPropertiesModificationDTO:\n      type: object\n      required:\n        - type\n        - values\n      properties:\n        type:\n          $ref: \"#/components/schemas/AccountPropertiesModificationTypeEnum\"\n        values:\n          type: array\n          description: The address, transaction type or mosaic id to filter.\n          items:\n            $ref: \"#/components/schemas/AccountPropertiesModificationDTOItems\"\n    NetworkConfigDTO:\n      type: object\n      required:\n        - networkConfig\n      properties:\n        networkConfig:\n          $ref: '#/components/schemas/ConfigDTO'\n    ConfigDTO:\n      type: object\n      required:\n        - height\n        - networkConfig\n        - supportedEntityVersions\n      properties:\n        height:\n          $ref: '#/components/schemas/UInt64DTO'\n        networkConfig:\n          type: string\n          example: \"[network]\\n\\nidentifier = mijin-test\\npublicKey = B4F12E7C9F6946091E2CB8B6D3A12B50D17CCBBF646386EA27CE2946A7423DCF\\ngenerationHash = 7B631D803F912B00DC0CBED3014BBD17A302BA50B99D233B9C2D9533B842ABDF\\n\\n\"\n        supportedEntityVersions:\n          type: string\n          example: \"{\\n\\t\\\"entities\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"name\\\": \\\"Block\\\",\\n\\t\\t\\t\\\"type\\\": \\\"33091\\\",\\n\\t\\t\\t\\\"supportedVersions\\\": [3]\\n\\t\\t}]}\"\n    BlockchainUpgradeDTO:\n      type: object\n      required:\n        - blockchainUpgrade\n      properties:\n        blockchainUpgrade:\n          $ref: '#/components/schemas/UpgradeDTO'\n    UpgradeDTO:\n      type: object\n      required:\n        - height\n        - blockChainVersion\n      properties:\n        height:\n          $ref: '#/components/schemas/UInt64DTO'\n        blockChainVersion:\n          $ref: '#/components/schemas/UInt64DTO'\n    MetadataModificationDTO:\n      type: object\n      required:\n        - modificationType\n        - key\n        - value\n      properties:\n        modificationType:\n          $ref: \"#/components/schemas/MetadataModificationTypeEnum\"\n        key:\n          type: string\n          description: The key of metadata modification.\n        value:\n          type: string\n          description: The value of metadata modification.\n    MultisigAccountGraphInfoDTO:\n      type: object\n      required:\n        - level\n        - multisigEntries\n      properties:\n        level:\n          type: integer\n          description: The level of the multisig account.\n          example: 0\n        multisigEntries:\n          type: array\n          description: The array of multisig accounts for this level.\n          items:\n            $ref: \"#/components/schemas/MultisigAccountInfoDTO\"\n    MultisigAccountInfoDTO:\n      type: object\n      required:\n        - multisig\n      properties:\n        multisig:\n          $ref: \"#/components/schemas/MultisigDTO\"\n    MultisigDTO:\n      type: object\n      required:\n        - account\n        - minApproval\n        - minRemoval\n        - cosignatories\n        - multisigAccounts\n      properties:\n        account:\n          type: string\n          description: The account public key.\n          example: AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\n        accountAddress:\n          type: string\n          description: The account address in hexadecimal.\n          example: 9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\n        minApproval:\n          type: integer\n          description: The number of signatures needed to approve a transaction.\n          example: 2\n        minRemoval:\n          description: The number of signatures needed to remove a cosignatory.\n          type: integer\n          example: 1\n        cosignatories:\n          type: array\n          description: The array of public keys of the cosignatory accounts.\n          example:\n            - 5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\n            - AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\n          items:\n            type: string\n        multisigAccounts:\n          type: array\n          description: The array of multisig accounts where the account is cosignatory.\n          example:\n            - 565059F55E68F904214E8BE1D610B5BBEA4CE46CC13D246D45BC1DAE5D32A0D2\n          items:\n            type: string\n    CosignatoryModificationDTO:\n      type: object\n      required:\n        - modificationType\n        - cosignatoryPublicKey\n      properties:\n        modificationType:\n          $ref: \"#/components/schemas/MultisigModificationTypeEnum\"\n        cosignatoryPublicKey:\n          type: string\n          description: The public key of the cosignatory account.\n          example: 5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\n    # Blockchain endpoints\n    BlockInfoDTO:\n      type: object\n      required:\n        - meta\n        - block\n      properties:\n        meta:\n          $ref: \"#/components/schemas/BlockMetaDTO\"\n        block:\n          $ref: \"#/components/schemas/BlockDTO\"\n    BlockMetaDTO:\n      type: object\n      required:\n        - hash\n        - generationHash\n        - totalFee\n        - subCacheMerkleRoots\n        - numTransactions\n      properties:\n        hash:\n          type: string\n          example: C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\n        generationHash:\n          type: string\n          example: 876614A913BAA95E64451290BB3BAD476625F0EB27CA7953EC7F802CC9FBB18D\n        subCacheMerkleRoots:\n          type: array\n          items:\n            type: string\n            format: hex\n          example:\n            - 782451A35BCE10E5DCB2BBB5A1A8C067F8673DC65EB6BAAE3EE533044BF742CC\n            - 646AE657A9717BECF338279C45613C8F64FB69572E22F4CAE2A36097C2190F02\n            - 65D0CDEB6F8C29A9B164C64FFBC7AD97DF2BA407FE868E1BBC11983DBFF3FB5A\n            - 0\n            - 0\n            - 0\n            - 0\n        totalFee:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        numTransactions:\n          type: integer\n          example: 0\n        numStatements:\n          type: integer\n          example: 1\n    EntityDTO:\n      type: object\n      required:\n        - signer\n        - version\n        - type\n      properties:\n        signer:\n          type: string\n          description: The public key of the entity signer formatted as hexadecimal.\n          example: D799E559AB735A5E62187306E80C1679EE3E1170532280C968D974E351CB412F\n        version:\n          $ref: \"#/components/schemas/NetworkTypeEnum\"\n        type:\n          $ref: \"#/components/schemas/EntityTypeEnum\"\n    VerifiableEntityDTO:\n      type: object\n      required:\n        - signature\n      properties:\n        signature:\n          type: string\n          description: |\n            The signature of the entity. The signature was generated by the\n            signer and can be used to validate tha the entity data was not\n            modified by a node.\n          example: D8047EB8285077D9900EDD42F4081070DDB26E08E7F15A3E29642C80CF0C7D68340682DC9868C73EB09744D6298146D8DFC02ED47070FC81FB47D6F73B33EF0A\n    BlockDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/VerifiableEntityDTO\"\n        - $ref: \"#/components/schemas/EntityDTO\"\n        - type: object\n          required:\n            - height\n            - timestamp\n            - difficulty\n            - feeMultiplier\n            - previousBlockHash\n            - blockTransactionsHash\n            - blockReceiptsHash\n            - stateHash\n            - beneficiary\n            - feeInterest\n            - feeInterestDenominator\n          properties:\n            height:\n              $ref: \"#/components/schemas/UInt64DTO\"\n            timestamp:\n              $ref: \"#/components/schemas/UInt64DTO\"\n            difficulty:\n              $ref: \"#/components/schemas/UInt64DTO\"\n            feeMultiplier:\n              type: integer\n              description: The fee multiplier applied to transactions contained in block.\n              example: 0\n            previousBlockHash:\n              type: string\n              description: The hash of the previous block.\n              example:\n                - 0\n            blockTransactionsHash:\n              type: string\n              description: |\n                The transactions included in a block are hashed forming a merkle\n                tree. The root of the tree summarizes them.\n              example: 8F8C6EB33332F69196AD0D30D7CD90FAC1332089DF460DF0CF4A8A28C1C17AD4\n            blockReceiptsHash:\n              type: string\n              description: |\n                The collection of receipts  are hashed into a merkle tree and\n                linked\n                \n                to a block. The block header stores the root hash.\n              example: sZznHmvGSZKIy1Ney2O0tKxJ4sOgk5jYYhqsua1RCRo=\n            stateHash:\n              type: string\n              description: |\n                For each block, the state of the blockchain is stored in\n                RocksDB,\n                \n                forming a patricia tree. The root of the tree summarizes the state of the blockchain for the given block.\n              example: 011811795453FA9FBD9DAC969085F8938BBFEDE3A3FDDC0C93B8FD6C4E7B2840\n            beneficiary:\n              type: string\n              description: The public key of the optional beneficiary designated by\n                harvester.\n              example: 0\n            feeInterest:\n              type: integer\n              description: The part of the transaction fee harvester is willing to get.\n                From 0 up to FeeInterestDenominator. The customer gets\n                (FeeInterest / FeeInterestDenominator)'th part of the maximum transaction fee.\n              example: 0\n            feeInterestDenominator:\n              type: integer\n              description: Denominator of the transaction fee.\n              example: 0\n    HeightInfoDTO:\n      type: object\n      required:\n        - height\n      properties:\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    BlockchainScoreDTO:\n      type: object\n      required:\n        - scoreHigh\n        - scoreLow\n      properties:\n        scoreHigh:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        scoreLow:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MerkleProofInfoDTO:\n      type: object\n      required:\n        - payload\n        - type\n      properties:\n        payload:\n          $ref: \"#/components/schemas/merkleProofInfo\"\n        type:\n          type: string\n          example: merkleProofInfo\n    # Diagnostic endpoints\n    StorageInfoDTO:\n      type: object\n      required:\n        - numBlocks\n        - numTransactions\n        - numAccounts\n      properties:\n        numBlocks:\n          type: integer\n          description: The number of blocks stored.\n          example: 245053\n        numTransactions:\n          type: integer\n          description: The number of transactions stored.\n          example: 58590\n        numAccounts:\n          type: integer\n          description: The number of accounts created.\n          example: 177\n    StatementsDTO:\n      type: object\n      description: The collection of transaction statements and resolutions triggered for\n        the block requested.\n      required:\n        - transactionStatements\n        - addressResolutionStatements\n        - mosaicResolutionStatements\n      properties:\n        transactionStatements:\n          type: array\n          description: The array of transaction statements for the block requested.\n          items:\n            $ref: \"#/components/schemas/TransactionStatementDTO\"\n        addressResolutionStatements:\n          type: array\n          description: The array of address resolutions for the block requested.\n          items:\n            $ref: \"#/components/schemas/ResolutionStatementDTO\"\n        mosaicResolutionStatements:\n          type: array\n          description: The array of mosaic resolutions for the block requested.\n          items:\n            $ref: \"#/components/schemas/ResolutionStatementDTO\"\n    TransactionStatementDTOItems:\n      anyOf:\n        - $ref: \"#/components/schemas/BalanceTransferReceiptDTO\"\n        - $ref: \"#/components/schemas/BalanceChangeReceiptDTO\"\n        - $ref: \"#/components/schemas/ArtifactExpiryReceiptDTO\"\n        - $ref: \"#/components/schemas/InflationReceiptDTO\"\n    TransactionStatementDTO:\n      type: object\n      description: The collection of receipts related to a transaction.\n      required:\n        - height\n        - source\n        - receipts\n      properties:\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        source:\n          $ref: \"#/components/schemas/SourceDTO\"\n        receipts:\n          type: array\n          description: The array of receipts.\n          items:\n            $ref: \"#/components/schemas/TransactionStatementDTOItems\"\n    ResolutionStatementDTO:\n      type: object\n      description: A resolution statement keeps the relation between a namespace alias used\n        in a transaction and the real address or mosaicId.\n      required:\n        - height\n        - unresolved\n        - resolutionEntries\n      properties:\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        unresolved:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        resolutionEntries:\n          type: array\n          description: The array of resolution entries linked to the unresolved\n            namespaceId. It is an array instead of a single UInt64 field since\n            within one block the resolution might change for different sources\n            due to alias related transactions.\n          items:\n            $ref: \"#/components/schemas/ResolutionEntryDTO\"\n    ResolutionEntryDTO:\n      type: object\n      required:\n        - source\n        - resolved\n      properties:\n        source:\n          $ref: \"#/components/schemas/SourceDTO\"\n        resolved:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    SourceDTO:\n      type: object\n      description: The transaction that triggered the receipt.\n      required:\n        - primaryId\n        - secondaryId\n      properties:\n        primaryId:\n          type: integer\n          description: The transaction index within the block.\n          example: 1\n        secondaryId:\n          type: integer\n          description: The transaction index inside within the aggregate transaction. If\n            the transaction is not an inner transaction, then the secondary id\n            is set to 0.\n          example: 0\n    ReceiptDTO:\n      type: object\n      required:\n        - version\n        - type\n      properties:\n        version:\n          type: integer\n          description: The version of the receipt.\n        type:\n          $ref: \"#/components/schemas/ReceiptTypeEnum\"\n    BalanceTransferReceiptDTO:\n      type: object\n      description: The invisible state change triggered a mosaic transfer.\n      allOf:\n        - $ref: \"#/components/schemas/ReceiptDTO\"\n        - type: object\n          required:\n            - sender\n            - recipient\n            - mosaicId\n            - amount\n          properties:\n            sender:\n              type: string\n              description: The public key of the sender.\n              example: D799E559AB735A5E62187306E80C1679EE3E1170532280C968D974E351CB412F\n            recipient:\n              type: string\n              description: The public key of the recipient.\n              example: D799E559AB735A5E62187306E80C1679EE3E1170532280C968D974E351CB412F\n            mosaicId:\n              $ref: \"#/components/schemas/UInt64DTO\"\n            amount:\n              $ref: \"#/components/schemas/UInt64DTO\"\n    BalanceChangeReceiptDTO:\n      type: object\n      description: The invisible state change changed an account balance.\n      allOf:\n        - $ref: \"#/components/schemas/ReceiptDTO\"\n        - type: object\n          required:\n            - account\n            - mosaicId\n            - amount\n          properties:\n            account:\n              type: string\n              description: The target account public key.\n              example: D799E559AB735A5E62187306E80C1679EE3E1170532280C968D974E351CB412F\n            mosaicId:\n              $ref: \"#/components/schemas/UInt64DTO\"\n            amount:\n              $ref: \"#/components/schemas/UInt64DTO\"\n    ArtifactExpiryReceiptDTO:\n      type: object\n      description: An artifact namespace or mosaic expired.\n      allOf:\n        - $ref: \"#/components/schemas/ReceiptDTO\"\n        - type: object\n          required:\n            - artifactId\n          properties:\n            artifactId:\n              $ref: \"#/components/schemas/UInt64DTO\"\n    InflationReceiptDTO:\n      type: object\n      description: Native currency mosaics were created due to inflation.\n      allOf:\n        - $ref: \"#/components/schemas/ReceiptDTO\"\n        - type: object\n          required:\n            - mosaicId\n            - amount\n          properties:\n            mosaicId:\n              $ref: \"#/components/schemas/UInt64DTO\"\n            amount:\n              $ref: \"#/components/schemas/UInt64DTO\"\n    ServerDTO:\n      type: object\n      required:\n        - serverInfo\n      properties:\n        serverInfo:\n          $ref: \"#/components/schemas/ServerInfoDTO\"\n    ServerInfoDTO:\n      type: object\n      required:\n        - restVersion\n        - sdkVersion\n      properties:\n        restVersion:\n          type: string\n          example: 1.0.14\n          description: The catapult-rest component version.\n        sdkVersion:\n          type: string\n          example: 0.7.14\n          description: The catapult-sdk component version.\n    # Metadata endpoints\n    MosaicMetaDTO:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n    MetadataDTO:\n      type: object\n      required:\n        - metadataType\n        - fields\n      properties:\n        metadataType:\n          type: integer\n          example: 1\n        fields:\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldDTO'\n    FieldDTO:\n      type: object\n      required:\n        - key\n        - value\n      properties:\n        key:\n          type: string\n          example: \"jora\"\n        value:\n          type: string\n          example: \"I Love you\"\n    AddressMetadataInfoDTO:\n      type: object\n      required:\n        - metadata\n      properties:\n        metadata:\n          $ref: '#/components/schemas/AddressMetadataDTO'\n    AddressMetadataDTO:\n      allOf:\n        - $ref: '#/components/schemas/MetadataDTO'\n        - type: object\n          required:\n            - metadataId\n          properties:\n            metadataId:\n              type: string\n              example: \"90936FF3536858CBEA8EE0EAAB99FE9EC4EF5EF1F66366569A\"\n    MosaicMetadataInfoDTO:\n      type: object\n      required:\n        - metadata\n      properties:\n        metadata:\n          $ref: '#/components/schemas/MosaicMetadataDTO'\n    MosaicMetadataDTO:\n      allOf:\n        - $ref: '#/components/schemas/MetadataDTO'\n        - type: object\n          required:\n            - metadataId\n          properties:\n            metadataType:\n              type: integer\n              example: 2\n            metadataId:\n              $ref: '#/components/schemas/UInt64DTO'\n    NamespaceMetadataInfoDTO:\n      type: object\n      required:\n        - metadata\n      properties:\n        metadata:\n          $ref: '#/components/schemas/NamespaceMetadataDTO'\n    NamespaceMetadataDTO:\n      allOf:\n        - $ref: '#/components/schemas/MetadataDTO'\n        - type: object\n          required:\n            - metadataId\n          properties:\n            metadataType:\n              type: integer\n              example: 3\n            metadataId:\n              $ref: '#/components/schemas/UInt64DTO'\n\n    # Metadata V2 enpoints\n    MetadataNemPage:\n      type: object\n      required:\n        - data\n        - pagination\n      properties:\n        data:\n          type: array\n          description: Array of metadata entries.\n          items:\n            $ref: '#/components/schemas/MetadataNemInfoDTO'\n        pagination:\n          $ref: '#/components/schemas/Pagination'\n    Pagination:\n      type: object\n      required:\n        - pageNumber\n        - pageSize\n      properties:\n        pageNumber:\n          type: integer\n        pageSize:\n          type: integer\n    MetadataNemInfoDTO:\n      type: object\n      required:\n        - metadata\n      properties:\n        metadataEntry:\n          $ref: '#/components/schemas/MetadataNemDTO'\n        id:\n          type: string\n          example: \"610AB681D05149F167E3EE94\"\n    MetadataNemDTO:\n      allOf:\n        - type: object\n          required:\n            - metadataId\n          properties:\n            version:\n              type: integer\n              example: 1\n            compositeHash:\n              type: string\n              example: \"764B3AA022FB929CAA204670A817205DC08F2B172D501F36D4F0EC4EA50AFAE9\"\n            sourceAddress:\n              type: string\n              example: \"90FDBE9800BA25E21C440AF033A51141D8CC012C63327DE2A2\"\n            targetKey:\n              type: string\n              example: \"570BE65B22A4E52EC3E57421F2E493B32C046B8B795282ED69EA53806F44FFFF\"\n            scopedMetadataKey:\n              $ref: '#/components/schemas/UInt64DTO'\n            targetId:\n              $ref: '#/components/schemas/UInt64DTO'\n            metadataType:\n              type: integer\n              example: 0\n            valueSize:\n              type: integer\n              example: 10\n            value:\n              type: string\n              example: \"48656C6C6F2068656C6C\"\n\n    # Mosaic enpoints\n    MosaicDTO:\n      type: object\n      required:\n        - id\n        - amount\n      properties:\n        id:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        amount:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MosaicRichListDTO:\n      type: object\n      required:\n        - address\n        - amount\n      properties:\n        address:\n          type: string\n          example: 9081FCCB41F8C8409A9B99E485E0E28D23BD6304EF7215E01A\n        publicKey:\n          type: string\n          example: AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\n        amount:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MosaicInfoDTO:\n      type: object\n      required:\n        - meta\n        - mosaic\n      properties:\n        meta:\n          $ref: \"#/components/schemas/MosaicMetaDTO\"\n        mosaic:\n          $ref: \"#/components/schemas/MosaicDefinitionDTO\"\n    MosaicLevyInfoDTO:\n      type: object\n      properties:\n        type:\n          type: integer\n          description: The type of levy.\n          example: 1\n          enum: [1, 2]\n        recipient:\n          type: string\n          description: The address of the mosaic levy recipient.\n          example: 906CBD9B8EC88014F7A4181B00C1837646BD46E504E3D72C44\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        fee:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MosaicDefinitionDTO:\n      type: object\n      required:\n        - mosaicId\n        - supply\n        - height\n        - owner\n        - properties\n        - revision\n      properties:\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        supply:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        owner:\n          type: string\n          description: The public key of the mosaic owner.\n          example: EFF9BC7472263D03EF6362B1F200FD3061BCD1BABE78F82119FB88811227CE85\n        revision:\n          type: integer\n          description: The number of definitions for the same mosaic.\n          example: 1\n        properties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MosaicPropertyDTO\"\n    MosaicPropertyDTO:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/MosaicPropertyIdEnum\"\n        value:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MosaicNamesDTO:\n      type: object\n      required:\n        - mosaicId\n        - names\n      properties:\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        names:\n          type: array\n          description: The mosaic linked namespace names.\n          example:\n            - cat.currency\n          items:\n            type: string\n    # Namespace endpoints\n    NamespaceMetaDTO:\n      type: object\n      required:\n        - id\n        - active\n        - index\n      properties:\n        id:\n          type: string\n        active:\n          type: boolean\n        index:\n          type: integer\n    NamespaceInfoDTO:\n      type: object\n      required:\n        - meta\n        - namespace\n      properties:\n        meta:\n          $ref: \"#/components/schemas/NamespaceMetaDTO\"\n        namespace:\n          $ref: \"#/components/schemas/NamespaceDTO\"\n    NamespaceDTO:\n      type: object\n      required:\n        - owner\n        - ownerAddress\n        - startHeight\n        - endHeight\n        - depth\n        - level0\n        - type\n        - alias\n        - parentId\n      properties:\n        owner:\n          type: string\n          description: The public key of the owner of the namespace.\n          example: EFF9BC7472263D03EF6362B1F200FD3061BCD1BABE78F82119FB88811227CE85\n        ownerAddress:\n          type: string\n          description: The address of the owner of the namespace in hexadecimal.\n          example: 906CBD9B8EC88014F7A4181B00C1837646BD46E504E3D72C44\n        startHeight:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        endHeight:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        depth:\n          type: integer\n          description: The level of the namespace.\n          example: 1\n        level0:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        level1:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        level2:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        type:\n          $ref: \"#/components/schemas/NamespaceTypeEnum\"\n        alias:\n          $ref: \"#/components/schemas/AliasDTO\"\n        parentId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    NamespaceNameDTO:\n      type: object\n      required:\n        - namespaceId\n        - name\n      properties:\n        namespaceId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        name:\n          type: string\n          description: The full name of the namespace.\n          example: cat.currency\n    AliasDTO:\n      type: object\n      required:\n        - type\n      properties:\n        type:\n          $ref: \"#/components/schemas/AliasTypeEnum\"\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        address:\n          type: string\n          description: The aliased address in hexadecimal.\n\n    # Transaction endpoints\n    TransactionMetaDTO:\n      type: object\n      required:\n        - height\n        - hash\n        - merkleComponentHash\n        - index\n        - id\n      properties:\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        hash:\n          type: string\n        merkleComponentHash:\n          type: string\n        index:\n          type: integer\n        id:\n          type: string\n    TransactionInfoDTOTransactions:\n      anyOf:\n        - $ref: \"#/components/schemas/BlockchainUpgradeTransactionDTO\"\n        - $ref: \"#/components/schemas/NetworkConfigTransactionDTO\"\n        - $ref: \"#/components/schemas/AddressMetadataTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicMetadataTransactionDTO\"\n        - $ref: \"#/components/schemas/NamespaceMetadataTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicDefinitionTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicSupplyChangeTransactionDTO\"\n        - $ref: \"#/components/schemas/RegisterNamespaceTransactionDTO\"\n        - $ref: \"#/components/schemas/AddressAliasTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicAliasTransactionDTO\"\n        - $ref: \"#/components/schemas/TransferTransactionDTO\"\n        - $ref: \"#/components/schemas/ModifyMultisigAccountTransactionDTO\"\n        - $ref: \"#/components/schemas/AggregateTransactionDTO\"\n        - $ref: \"#/components/schemas/HashLockTransactionDTO\"\n        - $ref: \"#/components/schemas/AccountPropertiesTransactionDTO\"\n        - $ref: \"#/components/schemas/SecretLockTransactionDTO\"\n        - $ref: \"#/components/schemas/SecretProofTransactionDTO\"\n        - $ref: \"#/components/schemas/AccountLinkTransactionDTO\"\n        - $ref: \"#/components/schemas/AddExchangeOfferTransactionDTO\"\n        - $ref: \"#/components/schemas/ExchangeOfferTransactionDTO\"\n        - $ref: \"#/components/schemas/RemoveExchangeOfferTransactionDTO\"\n        - $ref: \"#/components/schemas/PrepareDriveTransactionDTO\"\n        - $ref: \"#/components/schemas/JoinToDriveTransactionDTO\"\n        - $ref: \"#/components/schemas/DriveFileSystemTransactionDTO\"\n        - $ref: \"#/components/schemas/FilesDepositTransactionDTO\"\n        - $ref: \"#/components/schemas/EndDriveTransactionDTO\"\n        - $ref: \"#/components/schemas/DriveFilesRewardTransactionDTO\"\n        - $ref: \"#/components/schemas/StartDriveVerificationTransactionDTO\"\n        - $ref: \"#/components/schemas/EndDriveVerificationTransactionDTO\"\n    TransactionInfoDTO:\n      type: object\n      required:\n        - meta\n        - transaction\n      properties:\n        meta:\n          $ref: \"#/components/schemas/TransactionMetaDTO\"\n        transaction:\n          $ref: \"#/components/schemas/TransactionInfoDTOTransactions\"\n    EmbeddedTransactionMetaDTO:\n      type: object\n      required:\n        - height\n        - hash\n        - merkleComponentHash\n        - index\n        - id\n      properties:\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        hash:\n          type: string\n        merkleComponentHash:\n          type: string\n        index:\n          type: integer\n        id:\n          type: string\n    EmbeddedTransactionInfoDTOTransactions:\n      anyOf:\n        - $ref: \"#/components/schemas/EmbeddedBlockchainUpgradeTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedNetworkConfigTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedAddressMetadataTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedMosaicMetadataTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedNamespaceMetadataTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedMosaicDefinitionTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedMosaicSupplyChangeTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedRegisterNamespaceTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedAddressAliasTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedMosaicAliasTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedTransferTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedModifyMultisigAccountTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedHashLockTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedAccountPropertiesTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedSecretLockTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedSecretProofTransactionDTO\"\n        - $ref: \"#/components/schemas/EmbeddedAccountLinkTransactionDTO\"\n    EmbeddedTransactionInfoDTO:\n      type: object\n      required:\n        - meta\n        - transaction\n      properties:\n        meta:\n          $ref: \"#/components/schemas/EmbeddedTransactionMetaDTO\"\n        transaction:\n          $ref: \"#/components/schemas/EmbeddedTransactionInfoDTOTransactions\"\n    TransactionBodyDTO:\n      type: object\n      required:\n        - max_fee\n        - deadline\n      properties:\n        max_fee:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        deadline:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    TransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/VerifiableEntityDTO\"\n        - $ref: \"#/components/schemas/EntityDTO\"\n        - $ref: \"#/components/schemas/TransactionBodyDTO\"\n    EmbeddedTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EntityDTO\"\n        - $ref: \"#/components/schemas/TransactionBodyDTO\"\n    BlockchainUpgradeBodyDTO:\n      type: object\n      required:\n        - upgradePeriod\n        - newBlockChainVersion\n      properties:\n        upgradePeriod:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        newBlockChainVersion:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    BlockchainUpgradeTransactionDTO:\n      type: object\n      description: Transaction that change version of blockchain.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/BlockchainUpgradeBodyDTO\"\n    EmbeddedBlockchainUpgradeTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/BlockchainUpgradeBodyDTO\"\n    NetworkConfigBodyDTO:\n      type: object\n      required:\n        - applyHeightDelta\n        - networkConfig\n        - supportedEntityVersions\n      properties:\n        applyHeightDelta:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        networkConfig:\n          type: string\n          description: Network config like a raw text.\n        supportedEntityVersions:\n          type: string\n          description: Allowed versions of transaction in json format.\n    NetworkConfigTransactionDTO:\n      type: object\n      description: Transaction that updates config.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/NetworkConfigBodyDTO\"\n    EmbeddedNetworkConfigTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/NetworkConfigBodyDTO\"\n    AddressMetadataBodyDTO:\n      type: object\n      required:\n        - metadataId\n        - metadataType\n        - modifications\n      properties:\n        metadataId:\n          type: string\n          description: The address in hexadecimal.\n        metadataType:\n          $ref: \"#/components/schemas/MetadataTypeEnum\"\n        modifications:\n          type: array\n          description: The array of metadata modifications.\n          items:\n            $ref: \"#/components/schemas/MetadataModificationDTO\"\n    AddressMetadataTransactionDTO:\n      type: object\n      description: Transaction that addes metadata to account.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/AddressMetadataBodyDTO\"\n    EmbeddedAddressMetadataTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/AddressMetadataBodyDTO\"\n    MosaicMetadataBodyDTO:\n      type: object\n      required:\n        - metadataId\n        - metadataType\n        - modifications\n      properties:\n        metadataId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n          description: Mosaic id.\n        metadataType:\n          $ref: \"#/components/schemas/MetadataTypeEnum\"\n        modifications:\n          type: array\n          description: The array of metadata modifications.\n          items:\n            $ref: \"#/components/schemas/MetadataModificationDTO\"\n    MosaicMetadataTransactionDTO:\n      type: object\n      description: Transaction that addes metadata to mosaic.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicMetadataBodyDTO\"\n    EmbeddedMosaicMetadataTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicMetadataBodyDTO\"\n    NamespaceMetadataBodyDTO:\n      type: object\n      required:\n        - metadataId\n        - metadataType\n        - modifications\n      properties:\n        metadataId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n          description: Namespace id.\n        metadataType:\n          $ref: \"#/components/schemas/MetadataTypeEnum\"\n        modifications:\n          type: array\n          description: The array of metadata modifications.\n          items:\n            $ref: \"#/components/schemas/MetadataModificationDTO\"\n    NamespaceMetadataTransactionDTO:\n      type: object\n      description: Transaction that addes metadata to namespace.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/NamespaceMetadataBodyDTO\"\n    EmbeddedNamespaceMetadataTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/NamespaceMetadataBodyDTO\"\n    MosaicDefinitionTransactionBodyDTO:\n      type: object\n      required:\n        - mosaicNonce\n        - mosaicId\n        - properties\n      properties:\n        mosaicNonce:\n          type: integer\n          description: Random nonce used to generate the mosaic id.\n          example: 0\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        properties:\n          type: array\n          items:\n            $ref: \"#/components/schemas/MosaicPropertyDTO\"\n    MosaicDefinitionTransactionDTO:\n      type: object\n      description: Transaction that creates a new mosaic.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicDefinitionTransactionBodyDTO\"\n    EmbeddedMosaicDefinitionTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicDefinitionTransactionBodyDTO\"\n    MosaicSupplyChangeTransactionBodyDTO:\n      type: object\n      required:\n        - mosaicId\n        - direction\n        - delta\n      properties:\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        direction:\n          $ref: \"#/components/schemas/MosaicDirectionEnum\"\n        delta:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MosaicSupplyChangeTransactionDTO:\n      type: object\n      description: Transaction to increase or decrease a mosaic’s supply.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicSupplyChangeTransactionBodyDTO\"\n    EmbeddedMosaicSupplyChangeTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicSupplyChangeTransactionBodyDTO\"\n    RegisterNamespaceTransactionBodyDTO:\n      type: object\n      required:\n        - namespaceType\n        - duration\n        - namespaceId\n        - name\n        - parentId\n      properties:\n        namespaceType:\n          $ref: \"#/components/schemas/NamespaceTypeEnum\"\n        duration:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        namespaceId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        name:\n          type: string\n          description: The unique namespace name.\n        parentId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    RegisterNamespaceTransactionDTO:\n      type: object\n      description: Transaction that creates or renew a namespace.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/RegisterNamespaceTransactionBodyDTO\"\n    EmbeddedRegisterNamespaceTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/RegisterNamespaceTransactionBodyDTO\"\n    AddressAliasTransactionBodyDTO:\n      type: object\n      required:\n        - aliasAction\n        - namespaceId\n        - address\n      properties:\n        aliasAction:\n          $ref: \"#/components/schemas/AliasActionEnum\"\n        namespaceId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        address:\n          type: string\n          description: The aliased address in hexadecimal.\n    AddressAliasTransactionDTO:\n      type: object\n      description: Transaction that attaches a namespace to an account.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/AddressAliasTransactionBodyDTO\"\n    EmbeddedAddressAliasTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/AddressAliasTransactionBodyDTO\"\n    MosaicAliasTransactionBodyDTO:\n      type: object\n      required:\n        - aliasAction\n        - namespaceId\n        - mosaicId\n      properties:\n        aliasAction:\n          $ref: \"#/components/schemas/AliasActionEnum\"\n        namespaceId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    MosaicAliasTransactionDTO:\n      type: object\n      description: Transaction that attaches a namespace to a mosaic.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicAliasTransactionBodyDTO\"\n    EmbeddedMosaicAliasTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/MosaicAliasTransactionBodyDTO\"\n    MessageDTO:\n      type: object\n      required:\n        - type\n        - payload\n      properties:\n        type:\n          $ref: \"#/components/schemas/MessageTypeEnum\"\n        payload:\n          type: string\n          description: The message content in hexadecimal.\n    TransferTransactionBodyDTO:\n      type: object\n      required:\n        - recipient\n        - mosaics\n        - message\n      properties:\n        recipient:\n          type: string\n          description: If the bit 0 of byte 0 is not set (like in 0x90), then it is a\n            regular address. Else (e.g. 0x91) it represents a namespace id which\n            starts at byte 1.\n          example: 909B5339654B16CF86F55EAEB1C8708A033286B3EBB314A792\n        mosaics:\n          type: array\n          description: The array of mosaics sent to the recipient. If the most significant\n            bit of byte 0 is set, a namespaceId (alias) is used instead of a\n            instead of a mosaicId corresponds to a mosaicId.\n          items:\n            $ref: \"#/components/schemas/MosaicDTO\"\n        message:\n          $ref: \"#/components/schemas/MessageDTO\"\n    TransferTransactionDTO:\n      type: object\n      description: Transaction that transfers mosaics and messages to another account.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/TransferTransactionBodyDTO\"\n    EmbeddedTransferTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/TransferTransactionBodyDTO\"\n    ModifyMultisigAccountTransactionBodyDTO:\n      type: object\n      required:\n        - minRemovalDelta\n        - minApprovalDelta\n        - modifications\n      properties:\n        minRemovalDelta:\n          type: integer\n          description: |\n            The number of signatures needed to remove a cosignatory. If we are\n            modifying an existing multisig account, this indicates the relative\n            change of the minimum cosignatories.\n          example: 1\n        minApprovalDelta:\n          type: integer\n          description: |\n            The number of signatures needed to approve a transaction. If we are\n            modifying an existing multisig account, this indicates the relative\n            change of the minimum cosignatories.\n          example: 1\n        modifications:\n          type: array\n          description: The array of cosignatory accounts to add or delete.\n          items:\n            $ref: \"#/components/schemas/CosignatoryModificationDTO\"\n    ModifyMultisigAccountTransactionDTO:\n      type: object\n      description: Transaction that creates or modifies a multisig account.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/ModifyMultisigAccountTransactionBodyDTO\"\n    EmbeddedModifyMultisigAccountTransactionDTO:\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/ModifyMultisigAccountTransactionBodyDTO\"\n    AggregateTransactionBodyDTO:\n      type: object\n      required:\n        - cosignatures\n        - transactions\n      properties:\n        cosignatures:\n          type: array\n          description: An array of transaction cosignatures.\n          items:\n            $ref: \"#/components/schemas/CosignatureDTO\"\n        transactions:\n          type: array\n          description: The array of transactions initiated by different accounts.\n          items:\n            $ref: \"#/components/schemas/EmbeddedTransactionInfoDTO\"\n    AggregateTransactionDTO:\n      type: object\n      description: Transaction that combines multiple transactions together.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/AggregateTransactionBodyDTO\"\n    CosignatureDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/VerifiableEntityDTO\"\n        - type: object\n          required:\n            - signer\n          properties:\n            signer:\n              type: string\n              description: The public key of the transaction signer.\n              example: D799E559AB735A5E62187306E80C1679EE3E1170532280C968D974E351CB412F\n    HashLockTransactionBodyDTO:\n      type: object\n      required:\n        - mosaic\n        - duration\n        - hash\n      properties:\n        mosaic:\n          $ref: \"#/components/schemas/MosaicDTO\"\n        duration:\n          $ref: \"#/components/schemas/MosaicDTO\"\n        hash:\n          type: string\n          description: |\n            The aggregate bonded transaction hash that has to be confirmed\n            before unlocking the mosaics.\n          example: C8FC3FB54FDDFBCE0E8C71224990124E4EEC5AD5D30E592EDFA9524669A23810\n    HashLockTransactionDTO:\n      type: object\n      description: Transaction to lock funds before sending an aggregate bonded transaction.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/HashLockTransactionBodyDTO\"\n    EmbeddedHashLockTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/HashLockTransactionDTO\"\n    AccountPropertiesTransactionBodyDTO:\n      type: object\n      required:\n        - propertyType\n        - modifications\n      properties:\n        propertyType:\n          $ref: \"#/components/schemas/AccountPropertyTypeEnum\"\n        modifications:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AccountPropertiesModificationDTO\"\n    AccountPropertiesTransactionDTO:\n      type: object\n      description: Transaction that prevents receiving transactions from undesired\n        addresses, mosaics or sending certain transaction types.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/AccountPropertiesTransactionBodyDTO\"\n    EmbeddedAccountPropertiesTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/AccountPropertiesTransactionBodyDTO\"\n    SecretLockTransactionBodyDTO:\n      type: object\n      required:\n        - duration\n        - mosaicId\n        - amount\n        - hashAlgorithm\n        - secret\n        - recipient\n      properties:\n        duration:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        amount:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        hashAlgorithm:\n          $ref: \"#/components/schemas/HashAlgorithmEnum\"\n        secret:\n          type: string\n          description: The proof hashed.\n          example: 759DE013523D2C36F54BA184611AC887C6C994412E28B35221098E084050249B\n        recipient:\n          type: string\n          description: The address in hexadecimal that will receive the funds once the\n            transaction is unlocked.\n          example: 90829855740901BAA6EF35C91CF00D0059212BF49FBAEC3277\n    SecretLockTransactionDTO:\n      type: object\n      description: Transaction that sends mosaics to a recipient if the proof used is\n        revealed. If the duration is reached, the locked funds go back to the\n        sender of the transaction.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/SecretLockTransactionBodyDTO\"\n    EmbeddedSecretLockTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/SecretLockTransactionBodyDTO\"\n    SecretProofTransactionBodyDTO:\n      type: object\n      required:\n        - hashAlgorithm\n        - secret\n        - proof\n      properties:\n        hashAlgorithm:\n          $ref: \"#/components/schemas/HashAlgorithmEnum\"\n        secret:\n          type: string\n          description: The proof hashed.\n          example: 759DE013523D2C36F54BA184611AC887C6C994412E28B35221098E084050249B\n        recipient:\n          type: string\n          description: The address in hexadecimal that received the funds.\n          example: 90829855740901BAA6EF35C91CF00D0059212BF49FBAEC3277\n        proof:\n          type: string\n          description: The original random set of bytes.\n    SecretProofTransactionDTO:\n      type: object\n      description: Transaction that revealed a proof.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/SecretProofTransactionBodyDTO\"\n    EmbeddedSecretProofTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/SecretProofTransactionBodyDTO\"\n    AccountLinkTransactionBodyDTO:\n      type: object\n      required:\n        - remoteAccountKey\n        - action\n      properties:\n        remoteAccountKey:\n          type: string\n          description: The public key of the remote account.\n        action:\n          $ref: \"#/components/schemas/LinkActionEnum\"\n    AccountLinkTransactionDTO:\n      type: object\n      description: Delegates the account importance score to a proxy account.\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/AccountLinkTransactionBodyDTO\"\n    EmbeddedAccountLinkTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/EmbeddedTransactionDTO\"\n        - $ref: \"#/components/schemas/AccountLinkTransactionBodyDTO\"\n    AnnounceTransactionInfoDTO:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n    TransactionStatusDTO:\n      type: object\n      required:\n        - status\n      properties:\n        group:\n          type: string\n        status:\n          type: string\n        hash:\n          type: string\n        deadline:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n      example: 0\n    # Network endpoints\n    NetworkTypeDTO:\n      type: object\n      required:\n        - name\n        - description\n      properties:\n        name:\n          type: string\n          description: The name of the network.\n          example: mijinTest\n        description:\n          type: string\n          description: A short text describing the network.\n          example: catapult development network\n\n    # Exchange endpoints\n    AddExchangeOfferTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - offers\n      properties:\n        offers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/AddExchangeOfferTransactionBodyDTO\"\n    ExchangeOfferTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - offers\n      properties:\n        offers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ExchangeOfferTransactionBodyDTO\"\n    RemoveExchangeOfferTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - offers\n      properties:\n        offers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/RemoveExchangeOfferTransactionBodyDTO\"\n    AddExchangeOfferTransactionBodyDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/OfferDTO\"\n      required:\n        - duration\n      properties:\n        duration:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    ExchangeOfferTransactionBodyDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/OfferDTO\"\n      required:\n        - owner\n      properties:\n        owner:\n          type: string\n          example: \"EFF9BC7472263D03EF6362B1F200FD3061BCD1BABE78F82119FB88811227CE85\"\n    RemoveExchangeOfferTransactionBodyDTO:\n      type: object\n      required:\n        - mosaicId\n        - offerType\n      properties:\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        offerType:\n          $ref: \"#/components/schemas/OfferTypeEnum\"\n    OfferDTO:\n      type: object\n      required:\n        - mosaicId\n        - mosaicAmount\n        - cost\n        - type\n      properties:\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        mosaicAmount:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        cost:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        type:\n          $ref: \"#/components/schemas/OfferTypeEnum\"\n    AccountExchangeDTO:\n      type: object\n      required:\n        - owner\n        - ownerAddress\n        - buyOffers\n        - sellOffers\n      properties:\n        owner:\n          type: string\n          description: The public key (accountId) of the owner.\n          example: \"EFF9BC7472263D03EF6362B1F200FD3061BCD1BABE78F82119FB88811227CE85\"\n        ownerAddress:\n          type: string\n          description: The address of the owner.\n          example: \"906CBD9B8EC88014F7A4181B00C1837646BD46E504E3D72C44\"\n        buyOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferInfoDTO\"\n        sellOffers:\n          type: array\n          items:\n            $ref: \"#/components/schemas/OfferInfoDTO\"\n    ExchangesDTO:\n      type: object\n      required:\n        - mosaicId\n        - amount\n        - initialAmount\n        - initialCost\n        - deadline\n        - price\n        - offer\n        - owner\n        - type\n      properties:\n        mosaicId:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        amount:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        initialAmount:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        initialCost:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        deadline:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        price:\n          type: number\n          example: 1.5\n        owner:\n          type: string\n          example: \"D9A659A3AA42FD62BE88E1D96B0F10EB91F6097F8D24EC8FD7C94EC6455735EC\"\n        type:\n          type: integer\n          example: 0\n    OfferInfoDTO:\n      type: object\n      required:\n        - mosaicId\n        - amount\n        - initialAmount\n        - initialCost\n        - deadline\n        - price\n      properties:\n        mosaicId:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        amount:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        initialAmount:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        initialCost:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        deadline:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        price:\n          type: number\n          example: 1.5\n\n    # Service endpoints\n    PrepareDriveTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/PrepareDriveTransactionBodyDTO\"\n    JoinToDriveTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - driveKey\n      properties:\n        driveKey:\n          type: string\n          example: \"5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\"\n    DriveFileSystemTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/DriveFileSystemTransactionBodyDTO\"\n    FilesDepositTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n        - $ref: \"#/components/schemas/FilesDepositTransactionBodyDTO\"\n    EndDriveTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - driveKey\n      properties:\n        driveKey:\n          type: string\n          example: \"5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\"\n    DriveFilesRewardTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - uploadInfos\n      properties:\n        uploadInfos:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UploadInfoDTO\"\n    StartDriveVerificationTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - driveKey\n      properties:\n        driveKey:\n          type: string\n          example: \"5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\"\n    EndDriveVerificationTransactionDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - verificationFailures\n      properties:\n        verificationFailures:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FailureVerificationDTO\"\n    PrepareDriveTransactionBodyDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/OfferDTO\"\n      required:\n        - owner\n        - duration\n        - billingPeriod\n        - billingPrice\n        - driveSize\n        - replicas\n        - minReplicators\n        - percentApprovers\n      properties:\n        owner:\n          type: string\n          description: The public key of the owner of the drive.\n          example: \"EFF9BC7472263D03EF6362B1F200FD3061BCD1BABE78F82119FB88811227CE85\"\n        duration:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        billingPeriod:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        billingPrice:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        driveSize:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        replicas:\n          type: integer\n          example: 3\n        minReplicators:\n          type: integer\n          example: 2\n        percentApprovers:\n          type: integer\n          example: 67\n    DriveFileSystemTransactionBodyDTO:\n      required:\n        - driveKey\n        - rootHash\n        - xorRootHash\n        - addActionsCount\n        - removeActionsCount\n        - addActions\n        - removeActions\n      properties:\n        driveKey:\n          type: string\n          example: \"5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\"\n        rootHash:\n          $ref: \"#/components/schemas/HashDTO\"\n        xorRootHash:\n          $ref: \"#/components/schemas/HashDTO\"\n        addActionsCount:\n          type: integer\n          example: 1\n        removeActionsCount:\n          type: integer\n          example: 1\n        addActions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DriveFileSystemAddActionDTO\"\n        removeActions:\n          type: array\n          items:\n            $ref: \"#/components/schemas/DriveFileSystemAddActionDTO\"\n    FilesDepositTransactionBodyDTO:\n      type: object\n      allOf:\n        - $ref: \"#/components/schemas/TransactionDTO\"\n      required:\n        - driveKey\n        - filesCount\n        - files\n      properties:\n        driveKey:\n          type: string\n          example: \"5D9513282B65A12A1B68DCB67DB64245721F7AE7822BE441FE813173803C512C\"\n        filesCount:\n          type: integer\n          example: 1\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FileDepositDTO\"\n    DriveFileSystemAddActionDTO:\n      type: object\n      required:\n        - fileHash\n        - fileSize\n      properties:\n        fileHash:\n          $ref: \"#/components/schemas/HashDTO\"\n        fileSize:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    FileDepositDTO:\n      type: object\n      required:\n        - fileHash\n      properties:\n        fileHash:\n          $ref: \"#/components/schemas/HashDTO\"\n    UploadInfoDTO:\n      type: object\n      required:\n        - participant\n        - uploaded\n      properties:\n        participant:\n          type: string\n          example: \"EB6839C7E6BD0031FDD5F8CB5137E9BC950D7EE7756C46B767E68F3F58C24390\"\n        uploaded:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    FailureVerificationDTO:\n      type: object\n      required:\n        - replicator\n        - blockHashes\n      properties:\n        replicator:\n          type: string\n          example: \"EB6839C7E6BD0031FDD5F8CB5137E9BC950D7EE7756C46B767E68F3F58C24390\"\n        blockHashes:\n          type: array\n          items:\n            $ref: \"#/components/schemas/HashDTO\"\n\n    DrivesArray:\n      type: array\n      items:\n        properties:\n          drive:\n            $ref: \"#/components/schemas/DriveDTO\"\n    DriveDTO:\n      type: object\n      required:\n        - multisig\n        - multisigAddress\n        - start\n        - end\n        - state\n        - owner\n        - rootHash\n        - duration\n        - billingPeriod\n        - billingPrice\n        - size\n        - occupiedSpace\n        - replicas\n        - minReplicators\n        - percentApprovers\n        - billingHistory\n        - files\n        - replicators\n        - removedReplicators\n        - uploadPayments\n      properties:\n        multisig:\n          type: string\n          example: \"415C7C61822B063F62A4876A6F6BA2DAAE114AB298D7AC7FC56FDBA95872C309\"\n        multisigAddress:\n          type: string\n          example: \"9048760066A50F0F65820D3008A79CF73E1034A564BF44AB3E\"\n        start:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        end:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        state:\n          type: integer\n          example: 1\n        owner:\n          type: string\n          example: \"6A98356A93F288DC198F8932C2BEAF57F7FFDC51BC9267814C6BA0FB60B9A84A\"\n        rootHash:\n          type: string\n          example: \"0100000000000000000000000000000000000000000000000000000000000000\"\n        duration:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        billingPeriod:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        billingPrice:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        size:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        occupiedSpace:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        replicas:\n          type: integer\n          example: 3\n        minReplicators:\n          type: integer\n          example: 2\n        percentApprovers:\n          type: integer\n          example: 67\n        billingHistory:\n          type: array\n          items:\n            $ref: \"#/components/schemas/BillingHistoryDTO\"\n        files:\n          type: array\n          items:\n            $ref: \"#/components/schemas/FileDTO\"\n        replicators:\n          type: array\n          items:\n            $ref: \"#/components/schemas/ReplicatorsDTO\"\n        removedReplicators:\n          type: array\n          items: {}\n          example: []\n        uploadPayments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PaymentsDTO\"\n    BillingHistoryDTO:\n      type: object\n      required:\n        - start\n        - end\n        - payments\n      properties:\n        start:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        end:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        payments:\n          type: array\n          items:\n            $ref: \"#/components/schemas/PaymentsDTO\"\n    PaymentsDTO:\n      type: object\n      required:\n        - receiver\n        - amount\n        - height\n      properties:\n        receiver:\n          type: string\n          example: \"4C8F05950159B086D67DB4394FCC627C9313A0DFD48035042F8572075843B661\"\n        amount:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n        height:\n          type: array\n          items:\n            $ref: \"#/components/schemas/UInt64DTO\"\n    ReplicatorsDTO:\n      type: object\n      required:\n        - replicator\n        - start\n        - end\n        - activeFilesWithoutDeposit\n        - inactiveFilesWithoutDeposit\n      properties:\n        replicator:\n          type: string\n          example: \"B27AA5B89DB9BC9CFC92C1F9E46A8CBB15F379C75ECF0128D475B4D5B03EC454\"\n        start:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        end:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        activeFilesWithoutDeposit:\n          type: array\n          items: {}\n          example: [\"AA2D2427E105A9B60DF634553849135DF629F1408A018D02B07A70CAFFB43093\"]\n        inactiveFilesWithoutDeposit:\n          type: array\n          items: {}\n          example: []\n    FileDTO:\n      type: object\n      required:\n        - fileHash\n        - size\n      properties:\n        fileHash:\n          type: string\n          example: \"AA2D2427E105A9B60DF634553849135DF629F1408A018D02B07A70CAFFB43093\"\n        size:\n          $ref: \"#/components/schemas/UInt64DTO\"\n\n    # Lock endpoints\n    SecretLockWithMeta:\n      type: object\n      required:\n        - meta\n        - lock\n      properties:\n        meta:\n          $ref: \"#/components/schemas/MetaLockDTO\"\n        lock:\n          $ref: \"#/components/schemas/SecretLockInfoDTO\"\n    SecretLockInfoDTO:\n      type: object\n      required:\n        - account\n        - accountAddress\n        - mosaicId\n        - amount\n        - height\n        - status\n        - hashAlgorithm\n        - secret\n        - recipient\n        - compositeHash\n      properties:\n        account:\n          type: string\n          example: \"CFC31B3080B36BC3D59DF4AB936AC72F4DC15CE3C3E1B1EC5EA41415A4C33FEE\"\n        accountAddress:\n          type: string\n          example: \"9052838D173BA9DC1822C12F8CC2EA1A3B88939772B7F26D84\"\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        amount:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        status:\n          type: integer\n          example: 0\n        hashAlgorithm:\n          type: integer\n          example: 4\n        secret:\n          type: string\n          example: \"0000000000000000000000000000000000000000000000000000000000000000\"\n        recipient:\n          type: string\n          example: \"90CFA4D204CC396ED38A1BA693CB2482B58152E175BFE8B5BB\"\n        compositeHash:\n          type: string\n          example: \"B8C1A5FBAA5AB8AB62444212CABB59E2E357DD9099001A29E81C166606810AA6\"\n    HashLockWithMeta:\n      type: object\n      required:\n        - meta\n        - lock\n      properties:\n        meta:\n          $ref: \"#/components/schemas/MetaLockDTO\"\n        lock:\n          $ref: \"#/components/schemas/HashLockInfoDTO\"\n    HashLockInfoDTO:\n      type: object\n      required:\n        - account\n        - accountAddress\n        - mosaicId\n        - amount\n        - height\n        - status\n        - hash\n      properties:\n        account:\n          type: string\n          example: \"CFC31B3080B36BC3D59DF4AB936AC72F4DC15CE3C3E1B1EC5EA41415A4C33FEE\"\n        accountAddress:\n          type: string\n          example: \"9052838D173BA9DC1822C12F8CC2EA1A3B88939772B7F26D84\"\n        mosaicId:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        amount:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        height:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        status:\n          type: string\n          example: 0\n        hash:\n          type: string\n          example: \"67829ABA183FDA679273373C9973F23F0D8611371ED31C23C6D80FCAD0AE5C87\"\n\n    MetaLockDTO:\n      type: object\n      required:\n        - id\n      properties:\n        id:\n          type: string\n          example: \"5df25d1c84631392c2973877\"\n\n    # Node endpoints\n    NodeInfoDTO:\n      type: object\n      required:\n        - publicKey\n        - port\n        - networkIdentifier\n        - version\n        - roles\n        - host\n        - friendlyName\n      properties:\n        publicKey:\n          type: string\n          description: The public key used to identify the node.\n          example: EB6839C7E6BD0031FDD5F8CB5137E9BC950D7EE7756C46B767E68F3F58C24390\n        port:\n          type: integer\n          description: The port used for the communication.\n          format: int32\n          example: 7900\n        networkIdentifier:\n          type: integer\n          format: int32\n          example: 144\n        version:\n          type: integer\n          description: The version of the application.\n          format: int32\n          example: 0\n        roles:\n          $ref: \"#/components/schemas/RolesTypeEnum\"\n        host:\n          type: string\n          description: The IP address of the endpoint.\n          example: 127.0.0.1\n        friendlyName:\n          type: string\n          description: The name of the node.\n          example: api-node-0\n    NodeTimeDTO:\n      type: object\n      required:\n        - communicationTimestamps\n      properties:\n        communicationTimestamps:\n          $ref: \"#/components/schemas/communicationTimestamps\"\n    # Request bodies\n    mosaicIds:\n      type: object\n      properties:\n        mosaicIds:\n          type: array\n          description: The array of mosaic identifiers.\n          items:\n            type: string\n            format: hex\n          example:\n            - d525ad41d95fcf29\n    namespaceIds:\n      type: object\n      properties:\n        namespaceIds:\n          type: array\n          description: The array of namespace identifiers.\n          items:\n            type: string\n            format: hex\n          example:\n            - 84b3552d375ffa4b\n    publicKeys:\n      type: object\n      properties:\n        publicKeys:\n          type: array\n          items:\n            type: string\n          example:\n            - \"8599BA6DB5B81BB69F96B88DD80A3B9EB7BBF8849CBD979100E89D69C30356E0\"\n            - \"3DCB6E5EFF4D63A38902EF948E895B01D6EA497EBF84B1460C14CA5BEDCAD9F3\"\n    metadataIds:\n      type: object\n      properties:\n        metadataIds:\n          type: array\n          items:\n            type: string\n            format: hex\n          example:\n            - d525ad41d95fcf29\n            - SCJW742TNBMMX2UO4DVKXGP6T3CO6XXR6ZRWMVU2\n            - 321DE652C4D3362FC2DDF7800F6582F4A10CFEA134B81F8AB6E4BE78BBA4D18E\n    metadataKey:\n      type: string\n      format: hex\n      description: 'Metadata key scoped to source, target and type expressed.'\n      example: 0DC67FBE1CAD29E3\n    accountIds:\n      type: object\n      properties:\n        publicKeys:\n          type: array\n          description: The array of public keys.\n          items:\n            type: string\n          example:\n            - AC1A6E1D8DE5B17D2C6B1293F1CAD3829EEACF38D09311BB3C8E5A880092DE26\n        addresses:\n          type: array\n          description: The array of addresses.\n          items:\n            type: string\n          example:\n            - SDRDGFTDLLCB67D4HPGIMIHPNSRYRJRT7DOBGWZY\n            - SBCPGZ3S2SCC3YHBBTYDCUZV4ZZEPHM2KGCP4QXX\n    transactionTypeQueryItems:\n      anyOf:\n        - $ref: '#/components/schemas/EntityTypeEnum'\n    getTransactionsCountItems:\n      anyOf:\n        - $ref: '#/components/schemas/EntityTypeEnum'\n    getTransactionsByGroupAndIdSchema:\n      anyOf:\n        - $ref: '#/components/schemas/transactionIds'\n        - $ref: '#/components/schemas/transactionHashes'\n    getTransactionByGroupAndIDSchema:\n      anyOf:\n        - $ref: '#/components/schemas/TransactionId'\n        - $ref: '#/components/schemas/HashDTO'\n    transactionIds:\n      type: object\n      properties:\n        transactionIds:\n          type: array\n          description: The array of transaction ids.\n          items:\n            type: string\n          example:\n            - 59B8DA0F0CB2720001103922\n            - 59B8D8E60CB2720001103904\n    transactionHashes:\n      type: object\n      properties:\n        hashes:\n          type: array\n          description: The array of transaction hashes.\n          items:\n            type: string\n          example:\n            - 5AF72FE39C0515E823903918A0BFE9625DD752C7BD63969C8869F25E9D155DE5\n    transactionPayload:\n      type: object\n      properties:\n        payload:\n          type: string\n          description: The transaction payload.\n    cosignature:\n      type: object\n      properties:\n        parentHash:\n          type: string\n          description: The hash of parent aggregate transaction that has been signed by a cosignatory of the transaction.\n        signature:\n          type: string\n          description: The signatures generated by signing the parent aggregate transaction hash.\n        signer:\n          type: string\n          description: The signer of the transaction.\n    merkleProofInfo:\n      type: object\n      properties:\n        merklePath:\n          type: array\n          description: The complementary data needed to calculate the merkle root.\n          items:\n            $ref: \"#/components/schemas/merklePathItem\"\n    merklePathItem:\n      type: object\n      properties:\n        position:\n          type: integer\n          example: 1\n        hash:\n          type: string\n    communicationTimestamps:\n      type: object\n      properties:\n        sendTimestamp:\n          $ref: \"#/components/schemas/UInt64DTO\"\n        receiveTimestamp:\n          $ref: \"#/components/schemas/UInt64DTO\"\n    compositeHashes:\n      type: object\n      properties:\n        compositeHashes:\n          type: array\n          description: The array of computed hashes.\n          items:\n            type: string\n          example:\n            - 764b3aa022fb929caa204670a817205dc08f2b172d501f36d4f0ec4ea50afae9"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /transactions/{group}/{transactionId}: get: operation \"getTransactionByGroupAndID\": parameters: parse parameter \"transactionId\": invalid schema:style:explode combination"
}