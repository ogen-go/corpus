{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/madeiramadeirabr/template-serverless-lambda-python"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "examples/lambda_api_restful/public/swagger/openapi.yml",
			"byteSize": 17512,
			"content": "components:\n  schemas:\n    Entry:\n      properties:\n        duration:\n          example: '0:00:00.013737'\n          type: string\n        status:\n          example: healthy\n          type: string\n        tags:\n          items:\n            example: db\n            type: string\n          type: array\n      type: object\n    EntryData:\n      properties:\n        name:\n          $ref: '#/components/schemas/Entry'\n      type: object\n    HateosProductGetResponse:\n      properties:\n        code:\n          example: 1\n          type: integer\n        data:\n          $ref: '#/components/schemas/Product'\n        label:\n          example: common.success\n          type: string\n        links:\n          items:\n            $ref: '#/components/schemas/Link'\n          type: array\n        message:\n          example: Success\n          type: string\n        meta:\n          $ref: '#/components/schemas/Meta'\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: true\n          type: boolean\n      required:\n      - code\n      type: object\n    HateosProductListResponse:\n      properties:\n        code:\n          example: 1\n          type: integer\n        control:\n          $ref: '#/components/schemas/RequestControl'\n        data:\n          items:\n            $ref: '#/components/schemas/Product'\n          type: array\n        label:\n          example: common.success\n          type: string\n        message:\n          example: Success\n          type: string\n        meta:\n          $ref: '#/components/schemas/Meta'\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: true\n          type: boolean\n      required:\n      - code\n      type: object\n    HealthCheck:\n      properties:\n        entries:\n          $ref: '#/components/schemas/EntryData'\n        status:\n          example: healthy\n          type: string\n        total_duration:\n          example: '0:00:00.013737'\n          type: string\n      type: object\n    Link:\n      properties:\n        href:\n          type: string\n        method:\n          type: string\n        rel:\n          type: string\n      type: object\n    Meta:\n      properties:\n        first:\n          format: url\n          type: string\n        href:\n          format: url\n          type: string\n        last:\n          format: url\n          type: string\n        next:\n          format: url\n          type: string\n        previous:\n          format: url\n          type: string\n      type: object\n    Product:\n      properties:\n        active:\n          enum:\n          - 0\n          - 1\n          type: integer\n        created_at:\n          format: date-time\n          type: string\n        deleted_at:\n          format: date-time\n          type: string\n        description:\n          example: \"Guarda Roupa com maior resist\\xEAncia, durabilidade e acabamento,\\\n            \\ revestimento interno e externo. Pintura em estufas modernas com UV (ultra\\\n            \\ violeta). Modelo com corredi\\xE7a met\\xE1lica em a\\xE7o, 4 gavetas espa\\xE7\\\n            osas, perfil em alum\\xEDnio, roldanas de a\\xE7o carbono com rolamento,\\\n            \\ divis\\xE3o ele/ela\"\n          type: string\n        id:\n          example: 1\n          type: integer\n        name:\n          example: \"Guarda Roupa Casal com Espelho 3 Portas de Correr Lara Espresso\\\n            \\ M\\xF3veis\"\n          type: string\n        sku:\n          example: 657705\n          type: integer\n        supplier_id:\n          example: 1\n          type: integer\n        updated_at:\n          format: date-time\n          type: string\n        uuid:\n          example: 4bcad46b-6978-488f-8153-1c49f8a45244\n          format: uuid\n          type: string\n      type: object\n    ProductCompleteUpdateRequest:\n      properties:\n        active:\n          enum:\n          - 0\n          - 1\n          type: integer\n        description:\n          example: \"Guarda Roupa com maior resist\\xEAncia, durabilidade e acabamento,\\\n            \\ revestimento interno e externo. Pintura em estufas modernas com UV (ultra\\\n            \\ violeta). Modelo com corredi\\xE7a met\\xE1lica em a\\xE7o, 4 gavetas espa\\xE7\\\n            osas, perfil em alum\\xEDnio, roldanas de a\\xE7o carbono com rolamento,\\\n            \\ divis\\xE3o ele/ela\"\n          type: string\n        name:\n          example: \"Guarda Roupa Casal com Espelho 3 Portas de Correr Lara Espresso\\\n            \\ M\\xF3veis\"\n          type: string\n        sku:\n          example: 657705\n          type: integer\n        supplier_id:\n          example: 1\n          type: integer\n      type: object\n    ProductCreateErrorResponse:\n      properties:\n        code:\n          example: 17\n          type: integer\n        details:\n          type: string\n        label:\n          example: common.error.create_error\n          type: string\n        message:\n          example: Unable to create the record\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: false\n          type: boolean\n        trace:\n          type: string\n      required:\n      - code\n      type: object\n    ProductCreateRequest:\n      properties:\n        active:\n          enum:\n          - 0\n          - 1\n          type: integer\n        description:\n          example: \"Guarda Roupa com maior resist\\xEAncia, durabilidade e acabamento,\\\n            \\ revestimento interno e externo. Pintura em estufas modernas com UV (ultra\\\n            \\ violeta). Modelo com corredi\\xE7a met\\xE1lica em a\\xE7o, 4 gavetas espa\\xE7\\\n            osas, perfil em alum\\xEDnio, roldanas de a\\xE7o carbono com rolamento,\\\n            \\ divis\\xE3o ele/ela\"\n          type: string\n        name:\n          example: \"Guarda Roupa Casal com Espelho 3 Portas de Correr Lara Espresso\\\n            \\ M\\xF3veis\"\n          type: string\n        sku:\n          example: 657705\n          type: integer\n        supplier_id:\n          example: 1\n          type: integer\n      type: object\n    ProductCreateResponse:\n      properties:\n        code:\n          example: 1\n          type: integer\n        data:\n          $ref: '#/components/schemas/Product'\n        label:\n          example: common.success\n          type: string\n        message:\n          example: Success\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: true\n          type: boolean\n      required:\n      - code\n      type: object\n    ProductGetErrorResponse:\n      properties:\n        code:\n          example: 14\n          type: integer\n        details:\n          type: string\n        label:\n          example: common.error.find_error\n          type: string\n        message:\n          example: Unable to find the record\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: false\n          type: boolean\n        trace:\n          type: string\n      required:\n      - code\n      type: object\n    ProductListErrorResponse:\n      properties:\n        code:\n          example: 11\n          type: integer\n        details:\n          type: string\n        label:\n          example: common.error.list_error\n          type: string\n        message:\n          example: Unable to return the list data, please review your request\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: false\n          type: boolean\n        trace:\n          type: string\n      required:\n      - code\n      type: object\n    ProductSoftDeleteErrorResponse:\n      properties:\n        code:\n          example: 18\n          type: integer\n        details:\n          type: string\n        label:\n          example: common.error.update_error\n          type: string\n        message:\n          example: Unable to update the record\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: false\n          type: boolean\n        trace:\n          type: string\n      required:\n      - code\n      type: object\n    ProductSoftDeleteResponse:\n      properties:\n        code:\n          example: 1\n          type: integer\n        data:\n          example:\n            deleted: true\n          type: object\n        label:\n          example: common.success\n          type: string\n        message:\n          example: Success\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: true\n          type: boolean\n      required:\n      - code\n      type: object\n    ProductSoftUpdateRequest:\n      properties:\n        field:\n          example: value\n          type: string\n      type: object\n    ProductUpdateErrorResponse:\n      properties:\n        code:\n          example: 18\n          type: integer\n        details:\n          type: string\n        label:\n          example: common.error.update_error\n          type: string\n        message:\n          example: Unable to update the record\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: false\n          type: boolean\n        trace:\n          type: string\n      required:\n      - code\n      type: object\n    ProductUpdateResponse:\n      properties:\n        code:\n          example: 1\n          type: integer\n        data:\n          $ref: '#/components/schemas/Product'\n        label:\n          example: common.success\n          type: string\n        message:\n          example: Success\n          type: string\n        params:\n          items:\n            type: string\n          type: array\n        success:\n          example: true\n          type: boolean\n      required:\n      - code\n      type: object\n    RequestControl:\n      properties:\n        count:\n          type: integer\n        limit:\n          type: integer\n        offset:\n          type: integer\n        total:\n          type: integer\n      required:\n      - limit\n      type: object\ninfo:\n  title: template-serverless-lambda-python-lambda-api-restful\n  version: 1.0.0\nopenapi: 3.0.2\npaths:\n  /alive:\n    get:\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheck'\n          description: Success response\n        '424':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheck'\n          description: Failed dependency response\n        '503':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HealthCheck'\n          description: Service unavailable response\n      summary: Service Health Method\n  /v1/product:\n    get:\n      parameters:\n      - description: List limit\n        in: query\n        name: limit\n        required: false\n        schema:\n          example: 20\n          type: int\n      - description: List offset\n        in: query\n        name: offset\n        required: false\n        schema:\n          example: 0\n          type: int\n      - description: Filter fields with comma\n        in: query\n        name: fields\n        required: false\n        schema:\n          example: null\n          type: string\n      - description: Ordination of list\n        in: query\n        name: order_by\n        required: false\n        schema:\n          enum:\n          - asc\n          - desc\n          type: string\n      - description: Sorting of the list\n        in: query\n        name: sort_by\n        required: false\n        schema:\n          example: id\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HateosProductListResponse'\n          description: Success response\n        4xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductListErrorResponse'\n          description: Error response\n        5xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductListErrorResponse'\n          description: Service fail response\n      summary: Product List\n    post:\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductCreateRequest'\n        description: Product to be created\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductCreateResponse'\n          description: Success response\n        4xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductCreateErrorResponse'\n          description: Error response\n        5xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductCreateErrorResponse'\n          description: Service fail response\n      summary: Product Create\n  /v1/product/{uuid}:\n    delete:\n      parameters:\n      - description: Product Id\n        in: path\n        name: uuid\n        required: true\n        schema:\n          example: 4bcad46b-6978-488f-8153-1c49f8a45244\n          format: uuid\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductSoftDeleteResponse'\n          description: Success response\n        4xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'\n          description: Error response\n        5xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'\n          description: Service fail response\n      summary: Soft Product Delete\n    get:\n      parameters:\n      - description: Product Id\n        in: path\n        name: uuid\n        required: true\n        schema:\n          example: 4bcad46b-6978-488f-8153-1c49f8a45244\n          format: uuid\n          type: string\n      - description: Filter fields with comma\n        in: query\n        name: fields\n        required: false\n        schema:\n          example: null\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HateosProductGetResponse'\n          description: Success response\n        4xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductGetErrorResponse'\n          description: Error response\n        5xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductGetErrorResponse'\n          description: Service fail response\n      summary: Product Get\n    patch:\n      parameters:\n      - description: Product Id\n        in: path\n        name: uuid\n        required: true\n        schema:\n          example: 4bcad46b-6978-488f-8153-1c49f8a45244\n          format: uuid\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductSoftUpdateRequest'\n        description: Product field to be updated\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductUpdateResponse'\n          description: Success response\n        4xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductUpdateErrorResponse'\n          description: Error response\n        5xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductUpdateErrorResponse'\n          description: Service fail response\n      summary: Soft Product Update\n    put:\n      parameters:\n      - description: Product Id\n        in: path\n        name: uuid\n        required: true\n        schema:\n          example: 4bcad46b-6978-488f-8153-1c49f8a45244\n          format: uuid\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ProductCompleteUpdateRequest'\n        description: Product to be updated\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductUpdateResponse'\n        4xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductUpdateErrorResponse'\n          description: Error response\n        5xx:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProductUpdateErrorResponse'\n          description: Service fail response\n      summary: Complete Product Update\nservers:\n- description: Development server\n  url: http://localhost:5000\n- description: Development server\n  url: http://localhost:5000\n",
			"canonicalURL": "/github.com/madeiramadeirabr/template-serverless-lambda-python@63c7264b5728174ec04c5fe8e6b2b196c282b053/-/blob/examples/lambda_api_restful/public/swagger/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/madeiramadeirabr/template-serverless-lambda-python/blob/63c7264b5728174ec04c5fe8e6b2b196c282b053/examples/lambda_api_restful/public/swagger/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/v1/product\": get: parameters: parse parameter \"limit\": parse schema: at examples/lambda_api_restful/public/swagger/openapi.yml:460:17: type: unexpected schema type: \"int\""
}