{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/italia/api-oas-checker"
		},
		"file": {
			"name": "errorfile.yaml",
			"size": 0,
			"path": "public/errorfile.yaml",
			"byteSize": 6311,
			"content": "x-commons:\n  ratelimit-headers: \u0026ratelimit-headers\n    X-RateLimit-Limit:\n      $ref: '#/components/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: '#/components/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: '#/components/headers/X-RateLimit-Reset'\n  common-responses: \u0026common-responses\n    '400':\n      $ref: '#/components/responses/400BadRequest'\n    '429':\n      $ref: '#/components/responses/429TooManyRequests'\n    '503':\n      $ref: '#/components/responses/503ServiceUnavailable'\n    default:\n      $ref: '#/components/responses/default'\n\nopenapi: 3.0.0\ninfo:\n  version: \"1.0.0\"\n  title: |-\n    Error file.\n  x-summary: \u003e-\n    Non compliant file for tests and showcase.\n  description: |\n    #### Documentation\n    This file is a broken file used to showcase the ability of\n    API OAS Checker to identify typical errors in OAS files.\n\n  termsOfService: 'http://swagger.io/terms/'\n  # Chi posso contattare per informazioni sul servizio e sul suo stato?\n  contact:\n    email: robipolli@gmail.com\n    name: Roberto Polli\n    url: https://twitter.com/ioggstream\n  x-audience:\n    - public\n  x-api-id: 00000000-0000-0000-0000-000000000000\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\n\n  x-lifecycle:\n    published: 1970-01-01\n    deprecated: 2050-01-01\n    retired: 2050-06-01\n    maturity: published\n\ntags:\n  - name: public\n    description: Retrieve informations\n    externalDocs:\n      url: http://docs.my-api.com/pet-operations.htm\n# Uno o piu' server di erogazione.\n#   Puo' essere utile indicare gli indirizzi di collaudo,\n#   sviluppo e test.\n#   Di seguito mostriamo come indicare se il server\n#   e' una sandbox o meno con dei tag custom.\nservers:\n  - description: Development server\n    url: https://localhost:8443/datetime/v1\n  - description: Test server\n    url: https://api.example.com/datetime/v1\n    x-sandbox: true\n    # Questo parametro indica come testare il servizio.\n    x-healthCheck:\n      url: https://api.example.com/datetime/v1/status\n      interval: 300\n      timeout: 15\npaths:\n  /echo:\n    get:\n      summary: Ritorna un timestamp in formato RFC5424.\n      description: |\n        Ritorna un timestamp in formato RFC5424\n        prendendola dal server attuale.\n      operationId: get_echo\n      tags:\n        - public\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato il timestamp.\n          # Questi header di throttling sono obbligatori e definiti\n          #   nel Nuovo modello di interoperabilità.\n          headers:\n            \u003c\u003c: *ratelimit-headers\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Timestamps'\n  /status:\n    get:\n      summary: Ritorna lo stato dell'applicazione.\n      description: |\n        Ritorna lo stato dell'applicazione. A scopo\n        di test, su base randomica puo' ritornare\n        un errore.\n      operationId: get_status\n      tags:\n        - public\n      responses:\n        \u003c\u003c: *common-responses\n        '200':\n          description: |\n            Il server ha ritornato lo status. In caso di problemi\n            ritorna sempre un problem+json.\n          # Questi header di throttling sono obbligatori e definiti\n          #   nel Nuovo modello di interoperabilità.\n          headers:\n            \u003c\u003c: *ratelimit-headers\n          content:\n            application/problem+json:\n              schema:\n                $ref: '#/components/schemas/Problem'\n\ncomponents:\n\n  headers:\n    X-RateLimit-Limit:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Limit'\n    X-RateLimit-Remaining:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Remaining'\n    X-RateLimit-Reset:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/X-RateLimit-Reset'\n    Retry-After:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/headers/Retry-After'\n\n  responses:\n    # Predefined error codes for this API\n    400BadRequest:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/400BadRequest'\n    404NotFound:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/404NotFound'\n    429TooManyRequests:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/429TooManyRequests'\n    503ServiceUnavailable:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/503ServiceUnavailable'\n    default:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/responses/default'\n\n  schemas:\n    Problem:\n      $ref: 'https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/schemas/Problem'\n    Timestamps:\n      type: object\n      description: Un Timestamp in RFC5424\n      properties:\n        timestamp:\n          type: string\n          format: date-time\n          example: '2018-12-30T12:23:32Z'\n\n  parameters:\n    InsecureParameter:\n      name: mySecret\n      in: query\n      schema:\n        type: string\n  securitySchemes:\n    BasicAuth:\n      type: http\n      scheme: basic\n    InsecureApiKey:\n      type: apiKey\n      in: query\n      name: insecure\n    MyOauth:\n      type: oauth2\n      description: |-\n          The implementation of JWT conforms RFC8725.\n      \"flows\":\n        authorizationCode:\n          authorizationUrl: \"https://petstore3.swagger.io/oauth/authorize\"\n          tokenUrl: https://foo.it\n    UndocumentedJWT:\n      type: http\n      scheme: bearer\n      bearerFormat: \"JWT\"\n    JWTBearer_ok:\n      description: |-\n        The implementation conforms RFC8725\n        and uses only `EdDSA` RFC8032.\n      type: http\n      scheme: bearer\n      bearerFormat: \"JWT\"\n    MyOauth_ko3:\n      type: oauth2\n      description: The implementation of JWT conforms RFC8725.\n      flows:\n        \"authorizationCode\":\n          \"authorizationUrl\": \"http://petstore3.swagger.io/oauth/authorize\"\n          tokenUrl: https://foo.it\n        \"implicit\":\n          \"authorizationUrl\": \"https://petstore3.swagger.io/oauth/authorize\"\n          scopes: {}\n        \"password\":\n          \"tokenUrl\": \"https://petstore3.swagger.io/oauth/authorize\"\n\n",
			"canonicalURL": "/github.com/italia/api-oas-checker@f6f4e6e360b2ce9816dcca29396571dda1c6027d/-/blob/public/errorfile.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/italia/api-oas-checker/blob/f6f4e6e360b2ce9816dcca29396571dda1c6027d/public/errorfile.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Problem\": parse schema: resolve \"https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml#/schemas/Problem\": external \"https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml\": get: https: do: Get \"https://teamdigitale.github.io/openapi/0.0.7/definitions.yaml\": host \"teamdigitale.github.io\" is not allowed"
}