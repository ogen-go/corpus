{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/island-is/island.is"
		},
		"file": {
			"name": "clientConfig.yaml",
			"size": 0,
			"path": "libs/clients/document-provider/src/clientConfig.yaml",
			"byteSize": 19642,
			"content": "openapi: 3.0.0\ninfo:\n  title: Documents backend\n  description: Backend providing documents and document-providers info\n  version: '1.0'\n  contact: {}\ntags:\n  - name: Document Provider\n    description: ''\nservers: []\ncomponents:\n  schemas:\n    Liveness:\n      type: object\n      properties:\n        ok:\n          type: boolean\n      required:\n        - ok\n    Version:\n      type: object\n      properties:\n        version:\n          type: string\n      required:\n        - version\n    Provider:\n      type: object\n      properties:\n        id:\n          type: string\n        endpoint:\n          type: string\n        endpointType:\n          type: string\n        apiScope:\n          type: string\n        modifiedBy:\n          type: string\n        xroad:\n          type: boolean\n        externalProviderId:\n          type: string\n        created:\n          format: date-time\n          type: string\n        modified:\n          format: date-time\n          type: string\n      required:\n        - id\n        - endpoint\n        - endpointType\n        - apiScope\n        - modifiedBy\n        - xroad\n        - externalProviderId\n        - created\n        - modified\n    AdministrativeContact:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n        modifiedBy:\n          type: string\n        created:\n          format: date-time\n          type: string\n        modified:\n          format: date-time\n          type: string\n      required:\n        - id\n        - name\n        - email\n        - phoneNumber\n        - modifiedBy\n        - created\n        - modified\n    TechnicalContact:\n      type: object\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n        modifiedBy:\n          type: string\n        created:\n          format: date-time\n          type: string\n        modified:\n          format: date-time\n          type: string\n      required:\n        - id\n        - name\n        - email\n        - phoneNumber\n        - modifiedBy\n        - created\n        - modified\n    Helpdesk:\n      type: object\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n        modifiedBy:\n          type: string\n        created:\n          format: date-time\n          type: string\n        modified:\n          format: date-time\n          type: string\n      required:\n        - id\n        - email\n        - phoneNumber\n        - modifiedBy\n        - created\n        - modified\n    Organisation:\n      type: object\n      properties:\n        id:\n          type: string\n        nationalId:\n          type: string\n        name:\n          type: string\n        address:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n        providers:\n          type: array\n          items:\n            $ref: '#/components/schemas/Provider'\n        administrativeContact:\n          $ref: '#/components/schemas/AdministrativeContact'\n        technicalContact:\n          $ref: '#/components/schemas/TechnicalContact'\n        helpdesk:\n          $ref: '#/components/schemas/Helpdesk'\n        modifiedBy:\n          type: string\n        created:\n          format: date-time\n          type: string\n        modified:\n          format: date-time\n          type: string\n      required:\n        - id\n        - nationalId\n        - name\n        - address\n        - email\n        - phoneNumber\n        - modifiedBy\n        - created\n        - modified\n    CreateContactDto:\n      type: object\n      properties:\n        name:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n      required:\n        - name\n        - email\n        - phoneNumber\n    CreateHelpdeskDto:\n      type: object\n      properties:\n        email:\n          type: string\n        phoneNumber:\n          type: string\n    CreateOrganisationDto:\n      type: object\n      properties:\n        nationalId:\n          type: string\n        name:\n          type: string\n        address:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n        administrativeContact:\n          $ref: '#/components/schemas/CreateContactDto'\n        technicalContact:\n          $ref: '#/components/schemas/CreateContactDto'\n        helpdesk:\n          $ref: '#/components/schemas/CreateHelpdeskDto'\n      required:\n        - nationalId\n        - name\n        - address\n        - email\n        - phoneNumber\n    UpdateOrganisationDto:\n      type: object\n      properties:\n        nationalId:\n          type: string\n        name:\n          type: string\n        address:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n    UpdateContactDto:\n      type: object\n      properties:\n        name:\n          type: string\n        email:\n          type: string\n        phoneNumber:\n          type: string\n    UpdateHelpdeskDto:\n      type: object\n      properties:\n        email:\n          type: string\n        phoneNumber:\n          type: string\n    CreateProviderDto:\n      type: object\n      properties:\n        organisationId:\n          type: string\n        endpoint:\n          type: string\n        endpointType:\n          type: string\n        apiScope:\n          type: string\n        xroad:\n          type: boolean\n        externalProviderId:\n          type: string\n      required:\n        - organisationId\n    UpdateProviderDto:\n      type: object\n      properties:\n        endpoint:\n          type: string\n        endpointType:\n          type: string\n        apiScope:\n          type: string\n        xroad:\n          type: boolean\n        externalProviderId:\n          type: string\n    Readiness:\n      type: object\n      properties:\n        ok:\n          type: boolean\n      required:\n        - ok\n    Changelog:\n      type: object\n      properties:\n        id:\n          type: string\n        entityId:\n          type: string\n        entityType:\n          type: string\n          enum:\n            - Organisation\n            - AdministrativeContact\n            - TechnicalContact\n            - Helpdesk\n            - Provider\n        data:\n          type: object\n        created:\n          format: date-time\n          type: string\n        modified:\n          format: date-time\n          type: string\n      required:\n        - id\n        - entityId\n        - entityType\n        - created\n        - modified\npaths:\n  /liveness:\n    get:\n      operationId: DocumentsInfraController_liveness\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Liveness'\n      tags:\n        - internal\n  /version:\n    get:\n      operationId: DocumentsInfraController_version\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n      tags:\n        - internal\n  /organisations:\n    get:\n      operationId: OrganisationController_getOrganisations\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Organisation'\n      tags:\n        - organisations\n    post:\n      operationId: OrganisationController_createOrganisation\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateOrganisationDto'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organisation'\n      tags:\n        - organisations\n  '/organisations/{nationalId}':\n    get:\n      operationId: OrganisationController_findByNationalId\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: nationalId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organisation'\n      tags:\n        - organisations\n  '/organisations/{id}':\n    put:\n      operationId: OrganisationController_updateOrganisation\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateOrganisationDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Organisation'\n      tags:\n        - organisations\n  '/organisations/{id}/administrativecontact':\n    post:\n      operationId: OrganisationController_createAdministrativeContact\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateContactDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdministrativeContact'\n      tags:\n        - organisations\n  '/organisations/{id}/administrativecontact/{administrativeContactId}':\n    put:\n      operationId: OrganisationController_updateAdministrativeContact\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n        - name: administrativeContactId\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AdministrativeContact'\n      tags:\n        - organisations\n  '/organisations/{id}/technicalcontact':\n    post:\n      operationId: OrganisationController_createTechnicalContact\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateContactDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TechnicalContact'\n      tags:\n        - organisations\n  '/organisations/{id}/technicalcontact/{technicalContactId}':\n    put:\n      operationId: OrganisationController_updateTechnicalContact\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n        - name: technicalContactId\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContactDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TechnicalContact'\n      tags:\n        - organisations\n  '/organisations/{id}/helpdesk':\n    post:\n      operationId: OrganisationController_createHelpdesk\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateHelpdeskDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Helpdesk'\n      tags:\n        - organisations\n  '/organisations/{id}/helpdesk/{helpdeskId}':\n    put:\n      operationId: OrganisationController_updateHelpdesk\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n        - name: helpdeskId\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateHelpdeskDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Helpdesk'\n      tags:\n        - organisations\n  /providers:\n    get:\n      operationId: ProviderController_getAllProviders\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n    post:\n      operationId: ProviderController_createProvider\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateProviderDto'\n      responses:\n        '201':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n  '/providers/{id}':\n    get:\n      operationId: ProviderController_findById\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n    put:\n      operationId: ProviderController_updateProvider\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateProviderDto'\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n  '/providers/external/{id}':\n    get:\n      operationId: ProviderController_findByExternalId\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: id\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Provider'\n      tags:\n        - providers\n  /readiness:\n    get:\n      operationId: DocumentsInfraController_readiness\n      parameters: []\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Readiness'\n      tags:\n        - internal\n  '/changelogs/organisations/{organisationId}':\n    get:\n      operationId: ChangelogController_getChangelogsByOrganisationId\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: organisationId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Changelog'\n      tags:\n        - changelogs\n  '/changelogs/organisations/{organisationId}/entities/{entityId}':\n    get:\n      operationId: ChangelogController_getChangelogsByOrganisationIdAndEntityId\n      parameters:\n        - name: authorization\n          in: header\n          description: Bearer token authorization\n          schema:\n            type: string\n        - name: organisationId\n          required: true\n          in: path\n          schema:\n            type: string\n        - name: entityId\n          required: true\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: ''\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Changelog'\n      tags:\n        - changelogs\n",
			"canonicalURL": "/github.com/island-is/island.is@de3ddf741d6499777400b304b86dd28d81b82519/-/blob/libs/clients/document-provider/src/clientConfig.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/island-is/island.is/blob/de3ddf741d6499777400b304b86dd28d81b82519/libs/clients/document-provider/src/clientConfig.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:11350: duplicate path: \"/organisations/{nationalId}\""
}