{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Arthurdw/firefly"
		},
		"file": {
			"name": "firefly-REST.yaml",
			"size": 0,
			"path": "rest/reference/firefly-REST.yaml",
			"byteSize": 4656,
			"content": "openapi: 3.1.0\nx-stoplight:\n  id: gk4z418s7jc81\ninfo:\n  title: firefly REST\n  version: '1.0'\n  description: Easily use the firefly DB over the HTTP protocol with a REST based API.\n  summary: A firefly rest implementation\n  contact:\n    name: Arthur De Witte\n    url: www.arthurdw.com\n    email: dev@arthurdw.com\nservers:\n  - url: 'http://localhost:3000'\npaths:\n  '{key}':\n    post:\n      summary: SET\n      operationId: post-new\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                x-examples:\n                  example-1:\n                    status: ok\n      description: 'Set a new value to a key, the request body will be the value.'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              x-examples:\n                example-1:\n                  value: my value\n                  ttl: 0\n              properties:\n                value:\n                  type: string\n                  example: my secret key\n                ttl:\n                  type: integer\n                  default: 0\n              required:\n                - value\n      tags:\n        - set\n    parameters:\n      - schema:\n          type: string\n        name: key\n        in: path\n        description: The key for the pair\n        required: true\n    get:\n      summary: GET\n      operationId: get-key\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples:\n                  example-1:\n                    ttl: 0\n                    value: my value\n                properties:\n                  ttl:\n                    type: integer\n                  value:\n                    type: string\n                required:\n                  - ttl\n                  - value\n        '404':\n          description: Not Found\n      description: Fetch a value and its ttl\n      tags:\n        - get\n        - ttl\n        - value\n    delete:\n      summary: DELETE\n      operationId: delete-key\n      responses:\n        '200':\n          description: OK\n        '404':\n          description: Not Found\n      description: Delete a key-value pair.\n      tags:\n        - delete\n  '/{key}/ttl':\n    parameters:\n      - schema:\n          type: string\n        name: key\n        in: path\n        required: true\n        description: The unique identifier for the value\n    get:\n      summary: GET TTL\n      tags:\n        - get\n        - ttl\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples:\n                  example-1:\n                    value: value\n                    ttl: 0\n                properties:\n                  ttl:\n                    type: integer\n                required:\n                  - ttl\n        '404':\n          description: Not Found\n      operationId: get-key-ttl\n      description: Fetch a ttl\n  '/{key}/value':\n    parameters:\n      - schema:\n          type: string\n        name: key\n        in: path\n        required: true\n        description: The unique identifier for the value\n    get:\n      summary: GET VALUE\n      tags:\n        - get\n        - value\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                x-examples:\n                  example-1:\n                    value: value\n                    ttl: 0\n                properties:\n                  value:\n                    type: string\n                required:\n                  - value\n        '404':\n          description: Not Found\n      operationId: get-key-value\n      description: Fetch a value\n  /:\n    parameters: []\n    delete:\n      summary: ''\n      operationId: delete-by-value\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  value:\n                    type: string\n                x-examples:\n                  example-1:\n                    value: ''\n      description: Delete all pairs that match a value\n      tags:\n        - delete\n        - value\ncomponents:\n  schemas: {}\n  responses: {}\ntags:\n  - name: delete\n  - name: get\n  - name: set\n  - name: ttl\n  - name: value\n",
			"canonicalURL": "/github.com/Arthurdw/firefly@57109822159a89fd871b2ecac522f3929698e776/-/blob/rest/reference/firefly-REST.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Arthurdw/firefly/blob/57109822159a89fd871b2ecac522f3929698e776/rest/reference/firefly-REST.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"{key}\": get: operation \"get-key\": at rest/reference/firefly-REST.yaml:62:7: parse path \"{key}\": path MUST begin with a forward slash"
}