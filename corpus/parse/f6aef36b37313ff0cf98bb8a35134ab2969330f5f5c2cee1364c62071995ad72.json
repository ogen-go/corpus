{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/content-manager-sdk/Community"
		},
		"file": {
			"name": "CM.swagger.yml",
			"size": 0,
			"path": "Samples/ServiceAPI/Connectors/OpenAPI/CM.swagger.yml",
			"byteSize": 7107,
			"content": "openapi: 3.0.1\ninfo:\n  title: CM\n  description: Interface to Content Manager web service to create, update and find Records.\n  version: \"0.5\"\nservers:\n- url: https://localhost/ServiceAPI\ntags: []\npaths:\n  /record/{id}/file/document?format=json:\n    get:\n      summary: download an electronic document\n      description: download an electronic document\n      operationId: DownloadDocument\n      parameters:\n      - name: id\n        in: path\n        description: Uri or Record number\n        required: true\n        schema:\n          type: string\n \n      responses:\n        '200':\n          description: OK\n          content:\n            application/octet-stream:\n              schema:\n                type: string\n                format: binary\n  /search?trimType=record:\n    post:\n      operationId: RecordPostSearch\n      requestBody:\n        content:          \n          application/x-www-form-urlencoded:      \n            schema:\n              allOf:\n                - $ref: '#/components/schemas/SearchQuery'  \n                - type: object\n                  properties:\n                    properties:\n                      type: array    \n                      items: \n                        $ref: '#/components/schemas/RecordPropertyIds'       \n      responses:\n        '200':\n          description: default\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/RecordsResponse'\n             \n  /search?trimType=location:\n    post:\n      operationId: LocationPostSearch\n      requestBody:\n        content:          \n          application/x-www-form-urlencoded:      \n            schema:\n              allOf:\n                - $ref: '#/components/schemas/SearchQuery'  \n                - type: object\n                  properties:\n                    properties:\n                      type: array    \n                      items: \n                        $ref: '#/components/schemas/LocationPropertyIds'           \n      responses:\n        '200':\n          description: default\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/LocationsResponse'                \n  /record:\n    post:\n      summary: Create or Update Record\n      description: Create or update a Record\n      operationId: CreateUpdateRecord\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Record'\n      responses:\n        default:\n          description: default\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/RecordsResponse'\n  /uploadFile:\n    post:\n      summary: Upload a file\n      description: Upload a file which may later be attached to a Record   \n      operationId: uploadFile\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n                - file\n              properties:  \n                file:\n                  type: string\n                  format: binary \n      responses:\n        '200':\n          description: 'OK'\n          content:\n            'application/json':\n              schema:     \n                $ref: '#/components/schemas/FileUploadResponse'                  \n\ncomponents:\n  schemas:\n    PropertyValueTypes:\n      type: string\n      enum: [Raw, String, Both]\n    RecordPropertyIds:\n      type: string\n      enum: [Title, Number, Uri, RecordType, IsElectronic, IsContainer, AlcoholLevel, Assignee]\n    LocationPropertyIds:\n      type: string\n      enum: [FullFormattedName, SortName]      \n    SearchQuery:\n      type: object\n      properties:\n        q:\n          type: string\n        propertyValue:\n          $ref: '#/components/schemas/PropertyValueTypes'\n    BaseProperty:\n      type: object\n      properties:\n        StringValue:   \n          type: string\n    StringProperty:\n      allOf:\n        - $ref: '#/components/schemas/BaseProperty'\n        - type: object\n          properties:\n            Value:\n              type: string\n    BooleanProperty:\n      allOf:\n        - $ref: '#/components/schemas/BaseProperty'\n        - type: object\n          properties:\n            Value:\n              type: boolean\n    Record:\n      allOf:\n      - $ref: '#/components/schemas/TrimMainObject'\n      - type: object\n        properties:\n          RecordTitle:\n            $ref: '#/components/schemas/StringProperty'\n          RecordIsElectronic:\n            $ref: '#/components/schemas/BooleanProperty'\n          RecordIsContainer:\n            $ref: '#/components/schemas/BooleanProperty'\n          RecordFilePath:\n            $ref: '#/components/schemas/StringProperty'  \n          RecordRecordType:\n            $ref: '#/components/schemas/RecordType'  \n          RecordAssignee:\n            $ref: '#/components/schemas/Location'  \n    Location:\n      allOf:\n      - $ref: '#/components/schemas/TrimMainObject'\n      - type: object\n        properties:\n          LocationFullFormattedName:\n            $ref: '#/components/schemas/StringProperty'\n          LocationSortName:\n            $ref: '#/components/schemas/StringProperty'\n    RecordType:\n      allOf:\n      - $ref: '#/components/schemas/TrimMainObject'\n      - type: object\n        properties:\n          RecordTypeName:\n            type: object\n            properties:\n              Value:\n                type: string         \n    TrimMainObject:\n      type: object\n      properties:\n        Uri:\n          type: integer\n          format: int64\n        NameString:\n          type: string\n        Fields:\n          type: object\n          additionalProperties:\n            $ref: '#/components/schemas/BaseProperty'    \n\n    BaseSearchResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object  \n          properties:\n            TotalResults:\n              type: integer\n              description: TotalResults\n              format: int32\n            Count:\n              type: integer\n              description: Count\n              format: int32\n    BaseResponse:\n      type: object\n      properties:\n         ResponseStatus:\n          type: object\n          properties: \n            message:\n              type: string\n          description: ResponseStatus           \n\n    FileUploadResponse:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            FilePath:\n              type: string\n    RecordsResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseSearchResponse'\n      - type: object\n        properties:\n          Results:\n            type: array\n            description: Results\n            items:\n              $ref: '#/components/schemas/Record'\n         \n    LocationsResponse:\n      allOf:\n      - $ref: '#/components/schemas/BaseSearchResponse'\n      type: object\n      properties:\n        Results:\n          type: array\n          description: Results\n          items:\n            $ref: '#/components/schemas/Location'\n     \n  securitySchemes:\n    undefined:\n      type: http\n      scheme: basic\n",
			"canonicalURL": "/github.com/content-manager-sdk/Community@8a12b100334b64623cca47d66df5d291470c5632/-/blob/Samples/ServiceAPI/Connectors/OpenAPI/CM.swagger.yml",
			"externalURLs": [
				{
					"url": "https://github.com/content-manager-sdk/Community/blob/8a12b100334b64623cca47d66df5d291470c5632/Samples/ServiceAPI/Connectors/OpenAPI/CM.swagger.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/search?trimType=record\": at 1:4404: post: operation \"RecordPostSearch\": at 1:4412: parse path \"/search?trimType=record\": path MUST NOT contain a query string"
}