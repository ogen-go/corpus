{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bmlt-enabled/bmlt-root-server"
		},
		"file": {
			"name": "api-docs.json",
			"size": 0,
			"path": "src/storage/api-docs/api-docs.json",
			"byteSize": 104753,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"BMLT\",\n        \"description\": \"BMLT Admin API Documentation\",\n        \"license\": {\n            \"name\": \"MIT\",\n            \"url\": \"https://github.com/bmlt-enabled/bmlt-root-server/blob/main/LICENSE\"\n        },\n        \"version\": \"1.0.0\"\n    },\n    \"paths\": {\n        \"/api/v1/errortest\": {\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Tests some errors\",\n                \"description\": \"Tests some errors.\",\n                \"operationId\": \"createErrorTest\",\n                \"requestBody\": {\n                    \"description\": \"Pass in error test object.\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ErrorTest\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns when POST is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ErrorTest\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"500\": {\n                        \"description\": \"Server error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServerError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/formats\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves formats\",\n                \"description\": \"Retrieve formats\",\n                \"operationId\": \"getFormats\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/FormatCollection\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Creates a format\",\n                \"description\": \"Creates a format.\",\n                \"operationId\": \"createFormat\",\n                \"requestBody\": {\n                    \"description\": \"Pass in format object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/FormatCreate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns when POST is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Format\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no format exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/formats/{formatId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves a format\",\n                \"description\": \"Retrieve a format\",\n                \"operationId\": \"getFormat\",\n                \"parameters\": [\n                    {\n                        \"name\": \"formatId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of format\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Format\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no format exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Updates a format\",\n                \"description\": \"Updates a format.\",\n                \"operationId\": \"updateFormat\",\n                \"parameters\": [\n                    {\n                        \"name\": \"formatId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of format\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in format object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/FormatUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no format exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Deletes a format\",\n                \"description\": \"Deletes a format by id.\",\n                \"operationId\": \"deleteFormat\",\n                \"parameters\": [\n                    {\n                        \"name\": \"formatId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of format\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when unauthorized\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no format exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Patches a format\",\n                \"description\": \"Patches a single format by id.\",\n                \"operationId\": \"patchFormat\",\n                \"parameters\": [\n                    {\n                        \"name\": \"formatId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of format\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in fields you want to update.\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/FormatPartialUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when unauthorized\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no format exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/meetings\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves meetings\",\n                \"description\": \"Retrieve meetings for authenticated user.\",\n                \"operationId\": \"getMeetings\",\n                \"parameters\": [\n                    {\n                        \"name\": \"meetingIds\",\n                        \"in\": \"query\",\n                        \"description\": \"comma delimited meeting ids\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": \"1,2\"\n                    },\n                    {\n                        \"name\": \"days\",\n                        \"in\": \"query\",\n                        \"description\": \"comma delimited day ids between 0-6\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": \"0,1\"\n                    },\n                    {\n                        \"name\": \"serviceBodyIds\",\n                        \"in\": \"query\",\n                        \"description\": \"comma delimited service body ids\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": \"3,4\"\n                    },\n                    {\n                        \"name\": \"searchString\",\n                        \"in\": \"query\",\n                        \"description\": \"string\",\n                        \"required\": false,\n                        \"schema\": {\n                            \"type\": \"string\"\n                        },\n                        \"example\": \"Just for Today\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"List of meetings.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/MeetingCollection\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Creates a meeting\",\n                \"description\": \"Creates a meeting.\",\n                \"operationId\": \"createMeeting\",\n                \"requestBody\": {\n                    \"description\": \"Pass in meeting object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/MeetingCreate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns when POST is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Meeting\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no meeting body exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/meetings/{meetingId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves a meeting\",\n                \"description\": \"Retrieve a meeting.\",\n                \"operationId\": \"getMeeting\",\n                \"parameters\": [\n                    {\n                        \"name\": \"meetingId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of meeting\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Meeting\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no meeting exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Updates a meeting\",\n                \"description\": \"Updates a meeting.\",\n                \"operationId\": \"updateMeeting\",\n                \"parameters\": [\n                    {\n                        \"name\": \"meetingId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of meeting\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in meeting object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/MeetingUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no meeting exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Deletes a meeting\",\n                \"description\": \"Deletes a meeting by id.\",\n                \"operationId\": \"deleteMeeting\",\n                \"parameters\": [\n                    {\n                        \"name\": \"meetingId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of meeting\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no meeting exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Patches a meeting\",\n                \"description\": \"Patches a meeting by id\",\n                \"operationId\": \"patchMeeting\",\n                \"parameters\": [\n                    {\n                        \"name\": \"meetingId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of meeting\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in fields you want to update.\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/MeetingPartialUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no meeting exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/rootservers\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves root servers\",\n                \"description\": \"Retrieve root servers.\",\n                \"operationId\": \"getRootServers\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RootServerCollection\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when aggregator mode is disabled.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/rootservers/{rootServerId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves a root server\",\n                \"description\": \"Retrieve a single root server id.\",\n                \"operationId\": \"getRootServer\",\n                \"parameters\": [\n                    {\n                        \"name\": \"rootServerId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of root server\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Successful response.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/RootServer\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no root server exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/servicebodies\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves service bodies\",\n                \"description\": \"Retrieve service bodies for authenticated user.\",\n                \"operationId\": \"getServiceBodies\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServiceBodyCollection\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Creates a service body\",\n                \"description\": \"Creates a service body.\",\n                \"operationId\": \"createServiceBody\",\n                \"requestBody\": {\n                    \"description\": \"Pass in service body object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ServiceBodyCreate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns when POST is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServiceBody\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no service body exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/servicebodies/{serviceBodyId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves a service body\",\n                \"description\": \"Retrieve a single service body by id.\",\n                \"operationId\": \"getServiceBody\",\n                \"parameters\": [\n                    {\n                        \"name\": \"serviceBodyId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of service body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ServiceBody\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no service body exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Updates a Service Body\",\n                \"description\": \"Updates a single service body.\",\n                \"operationId\": \"updateServiceBody\",\n                \"parameters\": [\n                    {\n                        \"name\": \"serviceBodyId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of service body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in service body object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ServiceBodyUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no service body exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Deletes a service body\",\n                \"description\": \"Deletes a service body by id.\",\n                \"operationId\": \"deleteServiceBody\",\n                \"parameters\": [\n                    {\n                        \"name\": \"serviceBodyId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of service body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no service body exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"409\": {\n                        \"description\": \"Returns when service body has children.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ConflictError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Patches a service body\",\n                \"description\": \"Patches a single service body by id.\",\n                \"operationId\": \"patchServiceBody\",\n                \"parameters\": [\n                    {\n                        \"name\": \"serviceBodyId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of service body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in fields you want to update.\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/ServiceBodyPartialUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no service body exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/auth/token\": {\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Creates a token\",\n                \"description\": \"Exchange credentials for a new token\",\n                \"operationId\": \"authToken\",\n                \"requestBody\": {\n                    \"description\": \"User credentials\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/TokenCredentials\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when POST is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Token\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when credentials are incorrect.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"/api/v1/auth/refresh\": {\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Revokes and issues a new token\",\n                \"description\": \"Refresh token.\",\n                \"operationId\": \"authRefresh\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when refresh is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/Token\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when request is unauthenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/auth/logout\": {\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Revokes a token\",\n                \"description\": \"Revoke token and logout.\",\n                \"operationId\": \"authLogout\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when token was logged out.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when request is unauthenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/users\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves users\",\n                \"description\": \"Retrieve users for authenticated user.\",\n                \"operationId\": \"getUsers\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/UserCollection\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"post\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Creates a user\",\n                \"description\": \"Creates a user.\",\n                \"operationId\": \"createUser\",\n                \"requestBody\": {\n                    \"description\": \"Pass in user object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserCreate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Returns when POST is successful.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no user exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        },\n        \"/api/v1/users/{userId}\": {\n            \"get\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Retrieves a single user\",\n                \"description\": \"Retrieve single user.\",\n                \"operationId\": \"getUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"Returns when user is authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/User\"\n                                }\n                            }\n                        }\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no user exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"put\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Update single user\",\n                \"description\": \"Updates a user.\",\n                \"operationId\": \"updateUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in user object\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when user is not authenticated.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when user is unauthorized to perform action.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no user exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"delete\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Deletes a user\",\n                \"description\": \"Deletes a user by id\",\n                \"operationId\": \"deleteUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when unauthorized\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no user exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            },\n            \"patch\": {\n                \"tags\": [\n                    \"rootServer\"\n                ],\n                \"summary\": \"Patches a user\",\n                \"description\": \"Patches a user by id.\",\n                \"operationId\": \"partialUpdateUser\",\n                \"parameters\": [\n                    {\n                        \"name\": \"userId\",\n                        \"in\": \"path\",\n                        \"description\": \"ID of user\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"type\": \"integer\",\n                            \"format\": \"int64\"\n                        },\n                        \"example\": \"1\"\n                    }\n                ],\n                \"requestBody\": {\n                    \"description\": \"Pass in fields you want to update.\",\n                    \"required\": true,\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/UserPartialUpdate\"\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"204\": {\n                        \"description\": \"Success.\"\n                    },\n                    \"401\": {\n                        \"description\": \"Returns when not authenticated\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthenticationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"403\": {\n                        \"description\": \"Returns when unauthorized\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/AuthorizationError\"\n                                }\n                            }\n                        }\n                    },\n                    \"404\": {\n                        \"description\": \"Returns when no user exists.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/NotFoundError\"\n                                }\n                            }\n                        }\n                    },\n                    \"422\": {\n                        \"description\": \"Validation error.\",\n                        \"content\": {\n                            \"application/json\": {\n                                \"schema\": {\n                                    \"$ref\": \"#/components/schemas/ValidationError\"\n                                }\n                            }\n                        }\n                    }\n                },\n                \"security\": [\n                    {\n                        \"bmltToken\": []\n                    }\n                ]\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"ErrorTest\": {\n                \"properties\": {\n                    \"arbitrary_string\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"arbitrary_int\": {\n                        \"type\": \"integer\",\n                        \"example\": \"123\"\n                    },\n                    \"force_server_error\": {\n                        \"type\": \"boolean\",\n                        \"example\": \"true\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"AuthenticationError\": {\n                \"required\": [\n                    \"message\"\n                ],\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Unauthenticated.\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"AuthorizationError\": {\n                \"required\": [\n                    \"message\"\n                ],\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"This action is unauthorized.\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"NotFoundError\": {\n                \"required\": [\n                    \"message\"\n                ],\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"The requested resource was not found.\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ConflictError\": {\n                \"required\": [\n                    \"message\"\n                ],\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Conflict Error\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ValidationError\": {\n                \"required\": [\n                    \"message\",\n                    \"errors\"\n                ],\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"The field is required. (and 1 more error)\"\n                    },\n                    \"errors\": {\n                        \"type\": \"object\",\n                        \"additionalProperties\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\",\n                                \"example\": \"error details\"\n                            }\n                        }\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ServerError\": {\n                \"required\": [\n                    \"message\"\n                ],\n                \"properties\": {\n                    \"message\": {\n                        \"type\": \"string\",\n                        \"example\": \"Server Error\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"FormatBase\": {\n                \"properties\": {\n                    \"worldId\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"translations\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FormatTranslation\"\n                        }\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"FormatTranslation\": {\n                \"required\": [\n                    \"key\",\n                    \"name\",\n                    \"description\",\n                    \"language\"\n                ],\n                \"properties\": {\n                    \"key\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"language\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Format\": {\n                \"required\": [\n                    \"id\",\n                    \"worldId\",\n                    \"type\",\n                    \"translations\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/FormatBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"example\": \"0\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"FormatCreate\": {\n                \"required\": [\n                    \"translations\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/FormatBase\"\n                    }\n                ]\n            },\n            \"FormatUpdate\": {\n                \"required\": [\n                    \"translations\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/FormatBase\"\n                    }\n                ]\n            },\n            \"FormatPartialUpdate\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/FormatBase\"\n                    }\n                ]\n            },\n            \"FormatCollection\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/Format\"\n                }\n            },\n            \"MeetingBase\": {\n                \"properties\": {\n                    \"serviceBodyId\": {\n                        \"type\": \"integer\",\n                        \"example\": \"0\"\n                    },\n                    \"formatIds\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"venueType\": {\n                        \"type\": \"integer\",\n                        \"example\": \"1\"\n                    },\n                    \"temporarilyVirtual\": {\n                        \"type\": \"boolean\",\n                        \"example\": \"false\"\n                    },\n                    \"day\": {\n                        \"type\": \"integer\",\n                        \"example\": \"0\"\n                    },\n                    \"startTime\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"duration\": {\n                        \"type\": \"string\",\n                        \"example\": \"01:00\"\n                    },\n                    \"timeZone\": {\n                        \"type\": \"string\",\n                        \"example\": \"America/New_York\"\n                    },\n                    \"latitude\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\",\n                        \"example\": \"35.698741\"\n                    },\n                    \"longitude\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\",\n                        \"example\": \"-81.26273\"\n                    },\n                    \"published\": {\n                        \"type\": \"boolean\",\n                        \"example\": \"true\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"worldId\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_text\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_info\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_street\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_neighborhood\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_city_subsection\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_municipality\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_sub_province\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_province\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_postal_code_1\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"location_nation\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"phone_meeting_number\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"virtual_meeting_link\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"virtual_meeting_additional_info\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"contact_name_1\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"contact_name_2\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"contact_phone_1\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"contact_phone_2\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"contact_email_1\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"contact_email_2\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"bus_lines\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"train_line\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"comments\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Meeting\": {\n                \"required\": [\n                    \"id\",\n                    \"serviceBodyId\",\n                    \"formatIds\",\n                    \"venueType\",\n                    \"temporarilyVirtual\",\n                    \"day\",\n                    \"startTime\",\n                    \"duration\",\n                    \"timeZone\",\n                    \"latitude\",\n                    \"longitude\",\n                    \"published\",\n                    \"email\",\n                    \"worldId\",\n                    \"name\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MeetingBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"example\": \"0\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"MeetingCreate\": {\n                \"required\": [\n                    \"serviceBodyId\",\n                    \"formatIds\",\n                    \"venueType\",\n                    \"day\",\n                    \"startTime\",\n                    \"duration\",\n                    \"latitude\",\n                    \"longitude\",\n                    \"published\",\n                    \"name\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MeetingBase\"\n                    }\n                ]\n            },\n            \"MeetingUpdate\": {\n                \"required\": [\n                    \"serviceBodyId\",\n                    \"formatIds\",\n                    \"venueType\",\n                    \"day\",\n                    \"startTime\",\n                    \"duration\",\n                    \"latitude\",\n                    \"longitude\",\n                    \"published\",\n                    \"name\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MeetingBase\"\n                    }\n                ]\n            },\n            \"MeetingPartialUpdate\": {\n                \"required\": [\n                    \"serviceBodyId\",\n                    \"formatIds\",\n                    \"venueType\",\n                    \"day\",\n                    \"startTime\",\n                    \"duration\",\n                    \"latitude\",\n                    \"longitude\",\n                    \"published\",\n                    \"name\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MeetingBase\"\n                    }\n                ]\n            },\n            \"MeetingCollection\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/Meeting\"\n                }\n            },\n            \"RootServerBase\": {\n                \"properties\": {\n                    \"sourceId\": {\n                        \"type\": \"integer\",\n                        \"example\": \"0\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"example\": \"https://example.com/main_server\"\n                    },\n                    \"statistics\": {\n                        \"required\": [\n                            \"serviceBodies\",\n                            \"meetings\"\n                        ],\n                        \"properties\": {\n                            \"serviceBodies\": {\n                                \"required\": [\n                                    \"numZones\",\n                                    \"numRegions\",\n                                    \"numAreas\",\n                                    \"numGroups\"\n                                ],\n                                \"properties\": {\n                                    \"numZones\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numRegions\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numAreas\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numGroups\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            },\n                            \"meetings\": {\n                                \"required\": [\n                                    \"numTotal\",\n                                    \"numInPerson\",\n                                    \"numVirtual\",\n                                    \"numHybrid\",\n                                    \"numUnknown\"\n                                ],\n                                \"properties\": {\n                                    \"numTotal\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numInPerson\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numVirtual\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numHybrid\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    },\n                                    \"numUnknown\": {\n                                        \"type\": \"integer\",\n                                        \"example\": \"0\"\n                                    }\n                                },\n                                \"type\": \"object\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"serverInfo\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"lastSuccessfulImport\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\",\n                        \"example\": \"2022-11-25 04:16:26\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"RootServer\": {\n                \"required\": [\n                    \"id\",\n                    \"sourceId\",\n                    \"name\",\n                    \"url\",\n                    \"lastSuccessfulImport\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/RootServerBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"example\": \"0\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"RootServerCollection\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/RootServer\"\n                }\n            },\n            \"ServiceBodyBase\": {\n                \"properties\": {\n                    \"parentId\": {\n                        \"type\": \"integer\",\n                        \"example\": \"0\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"adminUserId\": {\n                        \"type\": \"integer\",\n                        \"example\": \"0\"\n                    },\n                    \"assignedUserIds\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"integer\",\n                            \"example\": \"0\"\n                        }\n                    },\n                    \"url\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"helpline\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"worldId\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ServiceBody\": {\n                \"required\": [\n                    \"id\",\n                    \"parentId\",\n                    \"name\",\n                    \"description\",\n                    \"type\",\n                    \"adminUserId\",\n                    \"assignedUserIds\",\n                    \"url\",\n                    \"helpline\",\n                    \"email\",\n                    \"worldId\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ServiceBodyBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"example\": \"0\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"ServiceBodyCreate\": {\n                \"required\": [\n                    \"parentId\",\n                    \"name\",\n                    \"description\",\n                    \"type\",\n                    \"adminUserId\",\n                    \"assignedUserIds\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ServiceBodyBase\"\n                    }\n                ]\n            },\n            \"ServiceBodyUpdate\": {\n                \"required\": [\n                    \"parentId\",\n                    \"name\",\n                    \"description\",\n                    \"type\",\n                    \"adminUserId\",\n                    \"assignedUserIds\"\n                ],\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ServiceBodyBase\"\n                    }\n                ]\n            },\n            \"ServiceBodyPartialUpdate\": {\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/ServiceBodyBase\"\n                    }\n                ]\n            },\n            \"ServiceBodyCollection\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/ServiceBody\"\n                }\n            },\n            \"Token\": {\n                \"required\": [\n                    \"access_token\",\n                    \"expires_at\",\n                    \"token_type\",\n                    \"user_id\"\n                ],\n                \"properties\": {\n                    \"access_token\": {\n                        \"type\": \"string\",\n                        \"example\": \"2|tR6PIqa8tiBJWMu4zyb3qw4eECuERjLd7xeLKgBu\"\n                    },\n                    \"expires_at\": {\n                        \"type\": \"integer\",\n                        \"example\": \"1667342171\"\n                    },\n                    \"token_type\": {\n                        \"type\": \"string\",\n                        \"example\": \"bearer\"\n                    },\n                    \"user_id\": {\n                        \"type\": \"integer\",\n                        \"example\": \"1\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"TokenCredentials\": {\n                \"required\": [\n                    \"username\",\n                    \"password\"\n                ],\n                \"properties\": {\n                    \"password\": {\n                        \"type\": \"string\",\n                        \"format\": \"password\",\n                        \"example\": \"PassWord12345\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\",\n                        \"format\": \"username\",\n                        \"example\": \"MyUsername\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"UserBase\": {\n                \"properties\": {\n                    \"username\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"displayName\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"description\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"email\": {\n                        \"type\": \"string\",\n                        \"example\": \"string\"\n                    },\n                    \"ownerId\": {\n                        \"type\": \"string\",\n                        \"example\": \"0\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"User\": {\n                \"required\": [\n                    \"id\",\n                    \"username\",\n                    \"type\",\n                    \"displayName\",\n                    \"description\",\n                    \"email\",\n                    \"ownerId\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/UserBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"id\": {\n                                \"type\": \"integer\",\n                                \"example\": \"0\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"UserCreate\": {\n                \"required\": [\n                    \"username\",\n                    \"password\",\n                    \"type\",\n                    \"displayName\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/UserBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"password\": {\n                                \"type\": \"string\",\n                                \"example\": \"string\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"UserUpdate\": {\n                \"required\": [\n                    \"username\",\n                    \"type\",\n                    \"displayName\"\n                ],\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/UserBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"password\": {\n                                \"type\": \"string\",\n                                \"example\": \"string\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"UserPartialUpdate\": {\n                \"type\": \"object\",\n                \"allOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/UserBase\"\n                    },\n                    {\n                        \"properties\": {\n                            \"password\": {\n                                \"type\": \"string\",\n                                \"example\": \"string\"\n                            }\n                        }\n                    }\n                ]\n            },\n            \"UserCollection\": {\n                \"type\": \"array\",\n                \"items\": {\n                    \"$ref\": \"#/components/schemas/User\"\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"bmltToken\": {\n                \"type\": \"oauth2\",\n                \"flows\": {\n                    \"password\": {\n                        \"tokenUrl\": \"api/v1/auth/token\",\n                        \"refreshUrl\": \"api/v1/auth/refresh\",\n                        \"scopes\": {}\n                    }\n                }\n            }\n        }\n    }\n}",
			"canonicalURL": "/github.com/bmlt-enabled/bmlt-root-server@c419f5c645cb54f4901194419ae3e8d183ec45be/-/blob/src/storage/api-docs/api-docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/bmlt-enabled/bmlt-root-server/blob/c419f5c645cb54f4901194419ae3e8d183ec45be/src/storage/api-docs/api-docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/v1/auth/logout\": post: operation \"authLogout\": security: parse security scheme \"bmltToken\": oauth2: flow \"password\": at src/storage/api-docs/api-docs.json:2820:37: \"tokenUrl\" MUST be in the form of a URL: parse \"api/v1/auth/token\": invalid URI for request"
}