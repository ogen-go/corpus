{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cam-inc/viron"
		},
		"file": {
			"name": "medias.yaml",
			"size": 0,
			"path": "example/nodejs/src/openapi/medias.yaml",
			"byteSize": 3591,
			"content": "openapi: 3.0.2\ninfo:\n  version: 0.0.1\n  title: '@viron/example-nodejs medias'\n  description: medias api specifications\n  x-pages:\n    - id: media\n      group: 管理画面/アップロード\n      title: メディア\n      description: |\n        # メディア情報の管理\n        メディアデータの **入稿・削除** を行います。\n      contents:\n        - title: メディア\n          type: table\n          operationId: listMedias\n          pagination: true\n          resourceId: media\n\ntags:\n  - name: media\n\npaths:\n  /medias:\n    get:\n      operationId: listMedias\n      tags:\n        - media\n      summary: list medias\n      description: メディア一覧\n      parameters:\n        - $ref: './components.yaml#/components/parameters/PagerSizeQueryParam'\n        - $ref: './components.yaml#/components/parameters/PagerPageQueryParam'\n        - $ref: './components.yaml#/components/parameters/SortQueryParam'\n        - $ref: '#/components/parameters/MediaIdQueryParam'\n      responses:\n        200:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MediaListWithPager'\n      security:\n        - jwt: []\n\n    post:\n      operationId: createMedia\n      tags:\n        - media\n      summary: post media\n      description: メディアアップロード\n      requestBody:\n        required: true\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MediaPostPayload'\n      responses:\n        201:\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Media'\n      security:\n        - jwt: []\n\n  /medias/{mediaId}:\n    delete:\n      operationId: removeMedia\n      tags:\n        - media\n      summary: remove media\n      description: メディア削除\n      parameters:\n        - $ref: '#/components/parameters/MediaIdPathParam'\n      responses:\n        204:\n          description: OK\n      security:\n        - jwt: []\n\ncomponents:\n  parameters:\n    MediaIdPathParam:\n      name: mediaId\n      in: path\n      schema:\n        type: string\n      required: true\n\n    MediaIdQueryParam:\n      name: mediaId\n      in: query\n      schema:\n        type: string\n      required: false\n\n  schemas:\n    MediaListWithPager:\n      allOf:\n        - $ref: './components.yaml#/components/schemas/Pager'\n        - type: object\n          properties:\n            list:\n              $ref: '#/components/schemas/MediaList'\n          required:\n            - list\n\n    MediaList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Media'\n\n    Media:\n      type: object\n      properties:\n        id:\n          description: ID\n          type: string\n        name:\n          description: メディア名\n          type: string\n        url:\n          description: メディアURL\n          type: string\n        mimeType:\n          description: メディアタイプ\n          type: string\n        createdAt:\n          $ref: './components.yaml#/components/schemas/CreatedAt'\n        updatedAt:\n          $ref: './components.yaml#/components/schemas/UpdatedAt'\n      required:\n        - id\n        - name\n        - url\n        - mimeType\n\n    MediaPostPayload:\n      type: object\n      properties:\n        name:\n          description: メディア名\n          type: string\n        uploadData:\n          description: メディアのバイナリデータ\n          type: string\n          format: binary\n      required:\n        - name\n        - uploadData\n",
			"canonicalURL": "/github.com/cam-inc/viron@22d445d7adfcaf1eb2fd8d4c9a006bc9fb9838dd/-/blob/example/nodejs/src/openapi/medias.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cam-inc/viron/blob/22d445d7adfcaf1eb2fd8d4c9a006bc9fb9838dd/example/nodejs/src/openapi/medias.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Media\": parse schema: property \"createdAt\": at 1:266: parse schema: resolve \"./components.yaml#/components/schemas/CreatedAt\": external \"./components.yaml\": get: file: local file reference is not allowed"
}