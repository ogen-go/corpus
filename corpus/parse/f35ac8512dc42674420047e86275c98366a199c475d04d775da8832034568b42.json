{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/stackrox/acs-fleet-manager"
		},
		"file": {
			"name": "fleet-manager-private-admin.yaml",
			"size": 0,
			"path": "openapi/fleet-manager-private-admin.yaml",
			"byteSize": 9433,
			"content": "openapi: 3.0.0\ninfo:\n  title: Dinosaur Service Fleet Manager Admin APIs\n  description: The admin APIs for the fleet manager of Dinosaur service\n  version: 0.0.2\nservers:\n  - url: https://api.openshift.com\n    description: Main (production) server\n  - url: https://api.stage.openshift.com\n    description: Staging server\n  - url: http://localhost:8000\n    description: localhost\n  - url: /\n    description: current domain\ntags:\n  - name: Admin APIs\n    description: \"\"\n\npaths:\n  '/api/dinosaurs_mgmt/v1/admin/dinosaurs':\n    get:\n      summary: Returns a list of Dinosaurs\n      operationId: getDinosaurs\n      security:\n        - Bearer: []\n      responses:\n        \"200\":\n          description: Return a list of Dinosaur instances. This endpoint will return all Dinosaur instances that are stored in the database and the are not filtered based on user ids or org ids.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DinosaurList'\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n      parameters:\n        - $ref: 'fleet-manager.yaml#/components/parameters/page'\n        - $ref: 'fleet-manager.yaml#/components/parameters/size'\n        - $ref: 'fleet-manager.yaml#/components/parameters/orderBy'\n        - $ref: 'fleet-manager.yaml#/components/parameters/search'\n  '/api/dinosaurs_mgmt/v1/admin/dinosaurs/{id}':\n    get:\n      summary: Return the details of Dinosaur instance by id\n      parameters:\n        - $ref: \"fleet-manager.yaml#/components/parameters/id\"\n      security:\n        - Bearer: []\n      operationId: getDinosaurById\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dinosaur'\n          description: Dinosaur found by ID\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Dinosaur found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n    patch:\n      summary: Update a Dinosaur instance by id\n      parameters:\n        - $ref: \"fleet-manager.yaml#/components/parameters/id\"\n      security:\n        - Bearer: []\n      operationId: updateDinosaurById\n      requestBody:\n        description: Dinosaur update data\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DinosaurUpdateRequest'\n        required: true\n      responses:\n        \"200\":\n          description: Dinosaur updated by ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dinosaur'\n        \"400\":\n          description: Bad request\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Dinosaur found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n    delete:\n      summary: Delete a Dinosaur by ID\n      parameters:\n        - $ref: \"fleet-manager.yaml#/components/parameters/id\"\n        - in: query\n          name: async\n          description: Perform the action in an asynchronous manner\n          schema:\n            type: boolean\n          required: true\n      security:\n        - Bearer: [ ]\n      operationId: deleteDinosaurById\n      responses:\n        \"200\":\n          description: Dinosaur updated by ID\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dinosaur'\n        \"401\":\n          description: Auth token is invalid\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"403\":\n          description: User is not authorised to access the service\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"404\":\n          description: No Dinosaur found with the specified ID\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n        \"500\":\n          description: Unexpected error occurred\n          content:\n            application/json:\n              schema:\n                $ref: 'fleet-manager.yaml#/components/schemas/Error'\n\ncomponents:\n  schemas:\n    Dinosaur:\n      allOf:\n        - $ref: 'fleet-manager.yaml#/components/schemas/ObjectReference'\n        - required:\n          - multi_az\n          - dinosaur_operator_upgrading\n          - dinosaur_upgrading\n        - type: object\n          properties:\n            status:\n              description: \"Values: [accepted, preparing, provisioning, ready, failed, deprovision, deleting] \"\n              type: string\n            cloud_provider:\n              description: \"Name of Cloud used to deploy. For example AWS\"\n              type: string\n            multi_az:\n              type: boolean\n            region:\n              description: \"Values will be regions of specific cloud provider. For example: us-east-1 for AWS\"\n              type: string\n            owner:\n              type: string\n            name:\n              type: string\n            host:\n              type: string\n            created_at:\n              format: date-time\n              type: string\n            updated_at:\n              format: date-time\n              type: string\n            failed_reason:\n              type: string\n            actual_dinosaur_version:\n              type: string\n            actual_dinosaur_operator_version:\n              type: string\n            desired_dinosaur_version:\n              type: string\n            desired_dinosaur_operator_version:\n              type: string\n            dinosaur_upgrading:\n              type: boolean\n            dinosaur_operator_upgrading:\n              type: boolean\n            organisation_id:\n              type: string\n            subscription_id:\n              type: string\n            owner_account_id:\n              type: string\n            account_number:\n              type: string\n            instance_type:\n              type: string\n            quota_type:\n              type: string\n            routes:\n              type: array\n              items:\n                type: object\n                properties:\n                  domain:\n                    type: string\n                  router:\n                    type: string\n            routes_created:\n              type: boolean\n            cluster_id:\n              type: string\n            namespace:\n              type: string\n    DinosaurList:\n      allOf:\n        - $ref: \"fleet-manager.yaml#/components/schemas/List\"\n        - type: object\n          properties:\n            items:\n              type: array\n              items:\n                allOf:\n                  - $ref: \"#/components/schemas/Dinosaur\"\n\n    DinosaurUpdateRequest:\n      type: object\n      properties:\n        # for now only support updating the following fields. May add more when use cases arise.\n        dinosaur_operator_version:\n          type: string\n        dinosaur_version:\n          type: string\n\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      bearerFormat: JWT\n      type: http\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Dinosaur\": parse schema: allOf: [0]: parse schema: resolve \"fleet-manager.yaml#/components/schemas/ObjectReference\": find schema: external base \"fleet-manager.yaml\" is not supported"
}