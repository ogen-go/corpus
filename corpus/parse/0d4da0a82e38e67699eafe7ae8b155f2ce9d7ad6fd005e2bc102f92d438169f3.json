{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mvrabel/nifi-postgres-metabase"
		},
		"file": {
			"name": "pipedrive-api.yaml",
			"size": 0,
			"path": "api_examples/pipedrive-api.yaml",
			"byteSize": 342087,
			"content": "openapi: 3.0.1\ninfo:\n  title: Pipedrive API v1\n  version: 1.0.0\nservers:\n  - url: 'https://api.pipedrive.com/v1'\ntags:\n  - name: Activities\n    description: 'Activities are appointments/tasks/events on a calendar that can be associated with a Deal, a Person and an Organization. Activities can be of different type (such as call, meeting, lunch or a custom type - see ActivityTypes object) and can be assigned to a particular User. Note that activities can also be created without a specific date/time.'\n  - name: ActivityFields\n    description: ActivityFields represent different fields that Activity has.\n  - name: ActivityTypes\n    description: 'ActivityTypes represent different kinds of activities that can be stored. Each ActivityType is presented to the user with an icon and a name. Additionally, a color can be defined (not implemented in the Pipedrive app as of today). ActivityTypes are linked to Activities via ActivityType.key_string = Activity.type. The key_string will be generated by the API based on the given name of the ActivityType upon creation, and cannot be changed. ActivityTypes should be presented to the user in an ordered manner, using the ActivityType.order_nr value.'\n  - name: Currencies\n    description: 'Supported currencies which can be used to represent the monetary value of a Deal, or a value of any monetary type custom field. The Currency.code field must be used to point to a currency. Currency.code is the ISO-4217 format currency code for non-custom currencies. You can differentiate custom and non-custom currencies using the is_custom_flag property. For custom currencies, it is intended that the formatted sums are displayed in the UI using the following format: [sum][non-breaking space character][currency.symbol], for example: 500 users. Custom currencies cannot be added or removed via the API yet — rather the admin users of the account must configure them from the Pipedrive app.'\n  - name: DealFields\n    description: 'DealFields represent the near-complete schema for a Deal in the context of the company of the authorized user. Each company can have a different schema for their Deals, with various custom fields. In the context of using DealFiels as a schema for defining the data fields of a Deal, it must be kept in mind that some types of custom fields can have additional data fields which are not separate DealFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of DealFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Deal and list its keys.'\n  - name: Deals\n    description: 'Deals represent ongoing, lost or won sales to an Organization or to a Person. Each deal has a monetary value and must be placed in a Stage. Deals can be owned by a User, and followed by one or many Users. Each Deal consists of standard data fields but can also contain a number of custom fields. The custom fields can be recognized by long hashes as keys. These hashes can be mapped against DealField.key. The corresponding label for each such custom field can be obtained from DealField.name.'\n  - name: Files\n    description: 'Files are documents of any kind (images, spreadsheets, text files, etc.) that are uploaded to Pipedrive, and usually associated with a particular Deal, Person, Organization, Product, Note or Activity. Remote files can only be associated with a particular Deal, Person or Organization. Note that the API currently does not support downloading files although it lets you retrieve a file’s meta-info along with a URL which can be used to download the file by using a standard HTTP GET request.'\n  - name: Filters\n    description: 'Each filter is essentially a set of data validation conditions. A filter of the same kind can be applied when fetching list of Deals, Persons, Organizations, Products or Deals in the context of a Pipeline. When applied, only items matching the conditions of the filter are returned. Detailed definitions of filter conditions and additional functionality is not yet available.'\n  - name: GlobalMessages\n    description: Get or dismiss global messages\n  - name: Goals\n    description: 'Goals help your team meet your sales targets. There are three types of goals - company, team and user.'\n  - name: MailMessages\n    description: MailMessages represent mail messages that are being synced with Piperive using the 2-way sync or the Smart Email BCC feature. Messages are grouped in threads.\n  - name: MailThreads\n    description: MailThreads represent mail threads which contain individual mail messages.\n  - name: NoteFields\n    description: NoteFields represent different fields that Note has.\n  - name: Notes\n    description: 'Notes are pieces of textual (HTML-formatted) information that can be attached to Deals, Persons and Organizations. Notes are usually displayed in the UI in chronological order – newest first – and in context with other updates regarding the item they are attached to. The maximum note size is approximately 3,000,000 characters (or 3MB per note).'\n  - name: OrganizationFields\n    description: 'OrganizationFields represent the near-complete schema for an Organization in the context of the company of the authorized user. Each company can have a different schema for their Organizations, with various custom fields. In the context of using OrganizationFiels as a schema for defining the data fields of an Organization, it must be kept in mind that some types of custom fields can have additional data fields which are not separate OrganizationFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of OrganizationFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Organization and list its keys.'\n  - name: OrganizationRelationships\n  - name: Organizations\n    description: Organizations are companies and other kinds of organizations you are making Deals with. Persons can be associated with organizations so that each organization can contain one or more Persons.\n  - name: PermissionSets\n  - name: PersonFields\n    description: 'PersonFields represent the near-complete schema for a Person in the context of the company of the authorized user. Each company can have a different schema for their Persons, with various custom fields. In the context of using PersonFields as a schema for defining the data fields of a Person, it must be kept in mind that some types of custom fields can have additional data fields which are not separate PersonFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of PersonFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Person and list its keys.'\n  - name: Persons\n    description: 'Persons are your contacts, the customers you are doing Deals with. Each Person can belong to an Organization. Persons should not be confused with Users.'\n  - name: Pipelines\n    description: Pipelines are essentially ordered collections of Stages.\n  - name: ProductFields\n    description: 'ProductFields represent the near-complete schema for a Product in the context of the company of the authorized user. Each company can have a different schema for their Products, with various custom fields. In the context of using ProductFields as a schema for defining the data fields of a Product, it must be kept in mind that some types of custom fields can have additional data fields which are not separate ProductFields per se. Such is the case with monetary, daterange and timerange fields – each of these fields will have one additional data field in addition to the one presented in the context of ProductFields. For example, if there is a monetary field with the key ''ffk9s9'' stored on the account, ''ffk9s9'' would hold the numeric value of the field, and ''ffk9s9_currency'' would hold the ISO currency code that goes along with the numeric value. To find out which data fields are available, fetch one Product and list its keys.'\n  - name: Products\n    description: 'Products are the goods or services you are dealing with. Each product can have N different price points - first, each Product can have a price in N different currencies, and secondly, each Product can have N variations of itself, each having N prices different currencies. Note that only one price per variation per currency is supported. Products can be instantiated to Deals. In the context of instatiation, a custom price, quantity, duration and discount can be applied.'\n  - name: Recents\n    description: 'Recent changes across all item types in Pipedrive (deals, persons, etc).'\n  - name: Roles\n    description: Roles are a part of the Visibility groups’ feature that allow the Admin user to categorize other users and dictate what items they will be allowed access to see.\n  - name: SearchResults\n    description: 'Ordered reference objects, pointing to either Deals, Persons, Organizations, Files or Products.'\n  - name: Stages\n    description: 'Stage is a logical component of a Pipeline, and essentially a bucket that can hold a number of Deals. In the context of the Pipeline a stage belongs to, it has an order number which defines the order of stages in that Pipeline.'\n  - name: Teams\n    description: Teams allow you to form groups of users withing the organization for more efficient management.\n  - name: UserConnections\n    description: Manage user connections.\n  - name: UserSettings\n    description: User settings\n  - name: Users\n    description: 'Users are people with access to your Pipedrive account. A user may belong to one or many Pipedrive accounts, so deleting a user from one Pipedrive account will not remove the user from the data store if he/she is connected to multiple accounts. Users should not be confused with Persons.'\n  - name: Webhooks\n    description: 'See \u003ca href=\"https://pipedrive.readme.io/docs/guide-for-webhooks?utm_source=api_reference\"\u003ehttps://pipedrive.readme.io/docs/guide-for-webhooks\u003c/a\u003e for more info about webhooks.'\npaths:\n  /activities:\n    delete:\n      summary: Delete multiple activities in bulk\n      description: Marks multiple activities as deleted.\n      tags:\n        - Activities\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:full'\n      parameters:\n        - in: query\n          name: ids\n          required: true\n          description: Comma-separated IDs that will be deleted\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all activities assigned to a particular user\n      description: Returns all activities assigned to a particular user.\n      tags:\n        - Activities\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n      parameters:\n        - in: query\n          name: user_id\n          required: false\n          schema:\n            type: integer\n          description: 'ID of the user whose activities will be fetched. If omitted, the user associated with the API token will be used. If 0, activities for all company users will be fetched based on the permission sets.'\n        - in: query\n          name: filter_id\n          required: false\n          schema:\n            type: integer\n          description: ID of the filter to use (will narrow down results if used together with user_id parameter).\n        - in: query\n          name: type\n          required: false\n          schema:\n            type: string\n          description: 'Type of the activity, can be one type or multiple types separated by a comma. This is in correlation with the key_string parameter of ActivityTypes.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: start_date\n          required: false\n          schema:\n            type: string\n            format: date\n          description: Date in format of YYYY-MM-DD from which activities to fetch from.\n        - in: query\n          name: end_date\n          required: false\n          schema:\n            type: string\n            format: date\n          description: Date in format of YYYY-MM-DD until which activities to fetch to.\n        - $ref: '#/components/parameters/ActivityDone'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add an activity\n      description: 'Adds a new activity. Includes more_activities_scheduled_in_context property in response''s additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data). For more information on how to add an activity, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-an-activity\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Activities\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Activity'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/activities/{id}':\n    delete:\n      summary: Delete an activity\n      description: Deletes an activity.\n      tags:\n        - Activities\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:full'\n      parameters:\n        - $ref: '#/components/parameters/ActivityID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get details of an activity\n      description: Returns details of a specific activity.\n      tags:\n        - Activities\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n      parameters:\n        - $ref: '#/components/parameters/ActivityID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Edit an activity\n      description: 'Modifies an activity. Includes more_activities_scheduled_in_context property in response''s additional_data which indicates whether there are more undone activities scheduled with the same deal, person or organization (depending on the supplied data).'\n      tags:\n        - Activities\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:full'\n      parameters:\n        - $ref: '#/components/parameters/ActivityID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Activity'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /activityFields:\n    get:\n      summary: Get all fields for an activity\n      description: Return list of all fields for activity\n      tags:\n        - ActivityFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /activityTypes:\n    delete:\n      summary: Delete multiple activity types in bulk\n      description: Marks multiple activity types as deleted.\n      tags:\n        - ActivityTypes\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - in: query\n          name: ids\n          description: Comma-separated activity type IDs to delete\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all activity types\n      description: Returns all activity types\n      tags:\n        - ActivityTypes\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n            - admin\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add new activity type\n      description: 'Adds a new activity type, returns the ID, the key_string and the order number of the newly added activity type upon success.'\n      tags:\n        - ActivityTypes\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - name\n                - icon_key\n              properties:\n                name:\n                  type: string\n                  description: Name of the activity type\n                icon_key:\n                  $ref: '#/components/schemas/IconKey'\n                color:\n                  type: string\n                  description: 'A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/activityTypes/{id}':\n    delete:\n      summary: Delete an activity type\n      description: Marks an activity type as deleted.\n      tags:\n        - ActivityTypes\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/ActivityTypeID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Edit activity type\n      description: Updates an activity type.\n      tags:\n        - ActivityTypes\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/ActivityTypeID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Name of the activity type\n                icon_key:\n                  $ref: '#/components/schemas/IconKey'\n                color:\n                  type: string\n                  description: 'A designated color for the activity type in 6-character HEX format (e.g. FFFFFF for white, 000000 for black).'\n                order_nr:\n                  type: integer\n                  description: An order number for this activity type. Order numbers should be used to order the types in the activity type selections.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /currencies:\n    get:\n      summary: Get all supported currencies\n      description: Returns all supported currencies in given account which should be used when saving monetary values with other objects. The 'code' parameter of the returning objects is the currency code according to ISO 4217 for all non-custom currencies.\n      tags:\n        - Currencies\n      security:\n        - api_key: []\n        - oauth2:\n            - base\n      parameters:\n        - in: query\n          name: term\n          description: Optional search term that is searched for from currency's name and/or code.\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/CurrenciesGetSuccess'\n  /deals:\n    delete:\n      summary: Delete multiple deals in bulk\n      description: Marks multiple deals as deleted.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - in: query\n          name: ids\n          description: Comma-separated IDs that will be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteMultipleDealsSuccess'\n    get:\n      summary: Get all deals\n      description: 'Returns all deals. For more information on how to get all deals, see \u003ca href=\"https://pipedrive.readme.io/docs/getting-all-deals\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals matching the given user will be returned.'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: ID of the filter to use\n        - in: query\n          name: stage_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals within the given stage will be returned.'\n        - $ref: '#/components/parameters/DealStatus'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/DealSort'\n        - in: query\n          name: owned_by_you\n          description: 'When supplied, only deals owned by you are returned. However filter_id takes precedence over owned_by_you when both are supplied.'\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n      responses:\n        '200':\n          $ref: '#/components/responses/DealsGetSuccess'\n    post:\n      summary: Add a deal\n      description: 'Adds a new deal. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the dealFields and look for ''key'' values. For more information on how to add a deal, see \u003ca href=\"https://pipedrive.readme.io/docs/creating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewDeal'\n      responses:\n        '200':\n          $ref: '#/components/responses/DealAddSuccess'\n  /deals/find:\n    get:\n      summary: Find deals by name\n      description: Searches all deals by their title.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - in: query\n          name: term\n          required: true\n          schema:\n            type: string\n          description: Search term to look for\n        - in: query\n          name: person_id\n          schema:\n            type: integer\n          description: ID of the person the Deal is associated with.\n        - in: query\n          name: org_id\n          schema:\n            type: integer\n          description: ID of the organization the Deal is associated with.\n      responses:\n        '200':\n          $ref: '#/components/responses/DealsGetByNameSuccess'\n  /deals/summary:\n    get:\n      summary: Get deals summary\n      description: Returns summary of all the deals.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - in: query\n          name: status\n          schema:\n            type: string\n            enum:\n              - open\n              - won\n              - lost\n          description: 'Only fetch deals with specific status. open = Open, won = Won, lost = Lost'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: user_id will not be considered. Only deals matching the given filter will be returned.\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: Only deals matching the given user will be returned. user_id will not be considered if you use filter_id.\n        - in: query\n          name: stage_id\n          schema:\n            type: integer\n          description: Only deals within the given stage will be returned.\n      responses:\n        '200':\n          $ref: '#/components/responses/DealSummaryGetSuccess'\n  /deals/timeline:\n    get:\n      summary: Get deals timeline\n      description: 'Returns open and won deals, grouped by defined interval of time set in a date-type dealField (field_key) — e.g. when month is the chosen interval, and 3 months are asked starting from  January 1st, 2012, deals are returned grouped into 3 groups — January, February and March — based on the value of the given field_key.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - in: query\n          name: start_date\n          required: true\n          schema:\n            type: string\n            format: date\n          description: 'Date where first interval starts. Format: YYYY-MM-DD'\n        - in: query\n          name: interval\n          required: true\n          schema:\n            type: string\n            enum:\n              - day\n              - week\n              - month\n              - quarter\n          description: Type of interval.\u003cdl class=\"fields-list\"\u003e\u003cdt\u003eday\u003c/dt\u003e\u003cdd\u003eDay\u003c/dd\u003e\u003cdt\u003eweek\u003c/dt\u003e\u003cdd\u003eA full week (7 days) starting from start_date\u003c/dd\u003e\u003cdt\u003emonth\u003c/dt\u003e\u003cdd\u003eA full month (depending on the number of days in given month) starting from start_date\u003c/dd\u003e\u003cdt\u003equarter\u003c/dt\u003e\u003cdd\u003eA full quarter (3 months) starting from start_date\u003c/dd\u003e\u003c/dl\u003e\n        - in: query\n          name: amount\n          required: true\n          schema:\n            type: integer\n          description: 'Number of given intervals, starting from start_date, to fetch. E.g. 3 (months).'\n        - in: query\n          name: field_key\n          required: true\n          schema:\n            type: string\n          description: The name of the date field by which to get deals by.\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals matching the given user will be returned.'\n        - in: query\n          name: pipeline_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals matching the given pipeline will be returned.'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals matching the given filter will be returned.'\n        - in: query\n          name: exclude_deals\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'Whether to exclude deals list (1) or not (0). Note that when deals are excluded, the timeline summary (counts and values) is still returned.'\n        - in: query\n          name: totals_convert_currency\n          schema:\n            type: string\n          description: '3-letter currency code of any of the supported currencies. When supplied, totals_converted is returned per each interval which contains the currency-converted total amounts in the given currency. You may also set this parameter to ''default_currency'' in which case users default currency is used.'\n      responses:\n        '200':\n          $ref: '#/components/responses/DealsTimelineGetSuccess'\n  '/deals/{id}':\n    delete:\n      summary: Delete a deal\n      description: Marks a deal as deleted.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteDealSuccess'\n    get:\n      summary: Get details of a deal\n      description: 'Returns details of a specific deal. Note that this also returns some additional fields which are not present when asking for all deals – such as deal age and stay in pipeline stages. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the ''key'' value of dealFields. For more information on how to get all details of a deal, see \u003ca href=\"https://pipedrive.readme.io/docs/getting-details-of-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      responses:\n        '200':\n          $ref: '#/components/responses/DealGetSuccess'\n    put:\n      summary: Update a deal\n      description: 'Updates the properties of a deal. For more information on how to update a deal, see \u003ca href=\"https://pipedrive.readme.io/docs/updating-a-deal\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicDeal'\n      responses:\n        '200':\n          $ref: '#/components/responses/DealAddSuccess'\n  '/deals/{id}/activities':\n    get:\n      summary: List activities associated with a deal\n      description: Lists activities associated with a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/ActivityDone'\n        - $ref: '#/components/parameters/ActivityExclude'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/duplicate':\n    post:\n      summary: Duplicate deal\n      description: Duplicate a deal\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      responses:\n        '200':\n          $ref: '#/components/responses/DealDuplicatedSuccess'\n  '/deals/{id}/files':\n    get:\n      summary: List files attached to a deal\n      description: Lists files associated with a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/IncludeDeletedFiles'\n        - $ref: '#/components/parameters/FilesSort'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/flow':\n    get:\n      summary: List updates about a deal\n      description: Lists updates about a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'recents:read'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/followers':\n    get:\n      summary: List followers of a deal\n      description: Lists the followers of a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a follower to a deal\n      description: Adds a follower to a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - user_id\n              properties:\n                user_id:\n                  type: integer\n                  description: ID of the user\n      responses:\n        '200':\n          $ref: '#/components/responses/DealAddFollowerSuccess'\n  '/deals/{id}/followers/{follower_id}':\n    delete:\n      summary: Delete a follower from a deal\n      description: Deletes a follower from a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - in: path\n          name: follower_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the follower\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteDealFollowerSuccess'\n  '/deals/{id}/mailMessages':\n    get:\n      summary: List mail messages associated with a deal\n      description: Lists mail messages associated with a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/merge':\n    put:\n      summary: Merge two deals\n      description: 'Merges a deal with another deal. For more information on how to merge two deals, see \u003ca href=\"https://pipedrive.readme.io/docs/merging-two-deals\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - merge_with_id\n              properties:\n                merge_with_id:\n                  type: integer\n                  description: ID of the deal that the deal will be merged with\n      responses:\n        '200':\n          $ref: '#/components/responses/DealMergedSuccess'\n  '/deals/{id}/participants':\n    get:\n      summary: List participants of a deal\n      description: Lists participants associated with a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a participant to a deal\n      description: Adds a participant to a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - person_id\n              properties:\n                person_id:\n                  type: integer\n                  description: ID of the person\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/participants/{deal_participant_id}':\n    delete:\n      summary: Delete a participant from a deal\n      description: Deletes a participant from a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - in: path\n          name: deal_participant_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the deal participant\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteDealParticipantSuccess'\n  '/deals/{id}/permittedUsers':\n    get:\n      summary: List permitted users\n      description: List users permitted to access a deal\n      tags:\n        - Deals\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/persons':\n    get:\n      summary: List all persons associated with a deal\n      description: 'Lists all persons associated with a deal, regardless of whether the person is the primary contact of the deal, or added as a participant.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/deals/{id}/products':\n    get:\n      summary: List products attached to a deal\n      description: Lists products attached to a deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: include_product_data\n          description: 'Whether to fetch product data along with each attached product (1) or not (0, default).'\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: 'Add a product to the deal, eventually creating a new item called a deal-product'\n      description: Adds a product to the deal.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewDealProduct'\n      responses:\n        '200':\n          $ref: '#/components/responses/AddProductToDealSuccess'\n  '/deals/{id}/products/{product_attachment_id}':\n    put:\n      summary: Update product attachment details of the deal-product (a product already attached to a deal)\n      description: Updates product attachment details.\n      tags:\n        - Deals\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - in: path\n          name: product_attachment_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the deal-product (the ID of the product attached to the deal)\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicDealProduct'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateProductDetailsSuccess'\n    delete:\n      summary: Delete an attached product from a deal\n      description: 'Deletes a product attachment from a deal, using the product_attachment_id.'\n      tags:\n        - Deals\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/DealID'\n        - in: path\n          name: product_attachment_id\n          required: true\n          schema:\n            type: integer\n          description: Product attachment ID. This is returned as product_attachment_id after attaching a product to a deal or as id when listing the products attached to a deal.\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteDealProductSuccess'\n  /dealFields:\n    delete:\n      summary: Delete multiple deal fields in bulk\n      description: Marks multiple fields as deleted.\n      tags:\n        - DealFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - in: query\n          name: ids\n          required: true\n          schema:\n            type: string\n          description: Comma-separated field IDs to delete\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all deal fields\n      description: Returns data about all fields deals can have\n      tags:\n        - DealFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a new deal field\n      description: 'Adds a new deal field. For more information on adding a new custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - DealFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/FieldType'\n                - type: object\n                  required:\n                    - name\n                  properties:\n                    name:\n                      type: string\n                      description: Name of the field\n                    options:\n                      type: string\n                      description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/dealFields/{id}':\n    delete:\n      summary: Delete a deal field\n      description: 'Marks a field as deleted. For more information on how to delete a custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - DealFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/DealFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one deal field\n      description: Returns data about a specific deal field.\n      tags:\n        - DealFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/DealFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update a deal field\n      description: 'Updates a deal field. See an example of updating custom fields’ values in \u003ca href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - DealFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/DealFieldID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - name\n                - field_type\n              properties:\n                name:\n                  type: string\n                  description: Name of the field\n                options:\n                  type: string\n                  description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /files:\n    get:\n      summary: Get all files\n      description: Returns data about all files.\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'activities:read'\n            - 'activities:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/IncludeDeletedFiles'\n        - $ref: '#/components/parameters/FilesSort'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add file\n      description: 'Lets you upload a file and associate it with Deal, Person, Organization, Activity or Product. For more information on how to add a file, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-file\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: 'A single file, supplied in the multipart/form-data encoding and contained within the given boundaries.'\n                deal_id:\n                  type: integer\n                  description: ID of the deal to associate file(s) with\n                person_id:\n                  type: integer\n                  description: ID of the person to associate file(s) with\n                org_id:\n                  type: integer\n                  description: ID of the organization to associate file(s) with\n                product_id:\n                  type: integer\n                  description: ID of the product to associate file(s) with\n                activity_id:\n                  type: integer\n                  description: ID of the activity to associate file(s) with\n                note_id:\n                  type: integer\n                  description: ID of the note to associate file(s) with\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /files/remote:\n    post:\n      summary: Create a remote file and link it to an item\n      description: 'Creates a new empty file in the remote location (googledrive) that will be linked to the item you supply. For more information on how to add a remote file, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - file_type\n                - title\n                - item_type\n                - item_id\n                - remote_location\n              properties:\n                file_type:\n                  type: string\n                  enum:\n                    - gdoc\n                    - gslides\n                    - gsheet\n                    - gform\n                    - gdraw\n                  description: The file type\n                title:\n                  type: string\n                  description: The title of the file\n                item_type:\n                  type: string\n                  enum:\n                    - deal\n                    - organization\n                    - person\n                  description: The item type\n                item_id:\n                  type: integer\n                  description: ID of the item to associate the file with\n                remote_location:\n                  type: string\n                  enum:\n                    - googledrive\n                  description: The location type to send the file to. Only googledrive is supported at the moment.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /files/remoteLink:\n    post:\n      summary: Link a remote file to an item\n      description: 'Links an existing remote file (googledrive) to the item you supply. For more information on how to link a remote file, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-remote-file\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - item_type\n                - item_id\n                - remote_id\n                - remote_location\n              properties:\n                item_type:\n                  type: string\n                  enum:\n                    - deal\n                    - organization\n                    - person\n                  description: The item type\n                item_id:\n                  type: integer\n                  description: ID of the item to associate the file with\n                remote_id:\n                  type: string\n                  description: The remote item id\n                remote_location:\n                  type: string\n                  enum:\n                    - googledrive\n                  description: The location type to send the file to. Only googledrive is supported at the moment.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/files/{id}':\n    delete:\n      summary: Delete a file\n      description: Marks a file as deleted.\n      tags:\n        - Files\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/FileID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one file\n      description: Returns data about a specific file.\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'activities:read'\n            - 'activities:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/FileID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update file details\n      description: Updates the properties of a file.\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/FileID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                  description: Visible name of the file\n                description:\n                  type: string\n                  description: Description of the file\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/files/{id}/download':\n    get:\n      summary: Download one file\n      description: Initializes a file download.\n      tags:\n        - Files\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'activities:read'\n            - 'activities:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/FileID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /filters:\n    delete:\n      summary: Delete multiple filters in bulk\n      description: Marks multiple filters as deleted.\n      tags:\n        - Filters\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: ids\n          required: true\n          schema:\n            type: string\n          description: Comma-separated filter IDs to delete\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all filters\n      description: Returns data about all filters\n      tags:\n        - Filters\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'activities:read'\n            - 'activities:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: type\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/FilterType'\n          description: Types of filters to fetch\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a new filter\n      description: 'Adds a new filter, returns the ID upon success. Note that in the conditions json object only one first-level condition group is supported, and it must be glued with ''AND'', and only two second level condition groups are supported of which one must be glued with ''AND'' and the second with ''OR''. Other combinations do not work (yet) but the syntax supports introducing them in future. For more information on how to add a new filter, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Filters\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - name\n                - conditions\n                - type\n              properties:\n                name:\n                  type: string\n                  description: Filter name\n                conditions:\n                  type: string\n                  description: 'Filter conditions as a JSON object. It requires a minimum structure as follows: {\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}. Replace CONDITION_OBJECTS with JSON objects of the following structure: {\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"} or leave the array empty. Depending on the object type you should use another API endpoint to get field_id. There are five types of objects you can choose from: \"person\", \"deal\", \"organization\", \"product\", \"activity\" and you can use these types of operators depending on what type of a field you have: \"IS NOT NULL\", \"IS NULL\", \"\u003c=\", \"\u003e=\", \"\u003c\", \"\u003e\", \"!=\", \"=\", \"LIKE ''%$%''\", \"NOT LIKE ''%$%''\", \"LIKE ''$%''\", \"NOT LIKE ''$%''\", \"LIKE ''%$''\", \"NOT LIKE ''%$''\". To get a better understanding of how filters work try creating them directly from the Pipedrive application.'\n                type:\n                  allOf:\n                    - $ref: '#/components/schemas/FilterType'\n                  description: Type of filter to create.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /filters/helpers:\n    get:\n      summary: Get all filter helpers\n      description: 'Returns all supported filter helpers. It helps to know what conditions and helpers are available when you want to \u003ca href=\"/docs/api/v1/#!/Filters/post_filters\"\u003eadd\u003c/a\u003e or \u003ca href=\"/docs/api/v1/#!/Filters/put_filters_id\"\u003eupdate\u003c/a\u003e filters. For more information on how filter’s helpers can be used, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-filter\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Filters\n      security:\n        - api_key: []\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/filters/{id}':\n    delete:\n      summary: Delete a filter\n      description: Marks a filter as deleted.\n      tags:\n        - Filters\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/FilterID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one filter\n      description: Returns data about a specific filter. Note that this also returns the condition lines of the filter.\n      tags:\n        - Filters\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'activities:read'\n            - 'activities:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/FilterID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update filter\n      description: Updates existing filter.\n      tags:\n        - Filters\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'activities:full'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/FilterID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - conditions\n              properties:\n                name:\n                  type: string\n                  description: Filter name\n                conditions:\n                  type: string\n                  description: 'Filter conditions as a JSON object. It requires a minimum structure as follows: {\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}. Replace CONDITION_OBJECTS with JSON objects of the following structure: {\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"} or leave the array empty. Depending on the object type you should use another API endpoint to get field_id. There are five types of objects you can choose from: \"person\", \"deal\", \"organization\", \"product\", \"activity\" and you can use these types of operators depending on what type of a field you have: \"IS NOT NULL\", \"IS NULL\", \"\u003c=\", \"\u003e=\", \"\u003c\", \"\u003e\", \"!=\", \"=\", \"LIKE ''%$%''\", \"NOT LIKE ''%$%''\", \"LIKE ''$%''\", \"NOT LIKE ''$%''\", \"LIKE ''%$''\", \"NOT LIKE ''%$''\". To get a better understanding of how filters work try creating them directly from the Pipedrive application.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /globalMessages:\n    get:\n      summary: Get global messages\n      description: Returns data about global messages to display for the authorized user.\n      tags:\n        - GlobalMessages\n      security:\n        - api_key: []\n      parameters:\n        - in: query\n          name: limit\n          schema:\n            type: integer\n            default: 1\n          description: Number of messages to get from 1 to 100. The message number 1 is returned by default.\n      responses:\n        '200':\n          $ref: '#/components/responses/GlobalMessagesGetSuccess'\n  '/globalMessages/{id}':\n    delete:\n      summary: Dismiss a global message\n      description: 'Removes global message from being shown, if message is dismissible'\n      tags:\n        - GlobalMessages\n      security:\n        - api_key: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n          description: ID of global message to be dismissed.\n      responses:\n        '200':\n          $ref: '#/components/responses/GlobalMessageDeleteSuccess'\n  /goals:\n    post:\n      summary: Add a new goal\n      description: Adds a new goal.\n      tags:\n        - Goals\n      security:\n        - api_key: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewGoal'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /goals/find:\n    get:\n      summary: Find goals\n      description: 'Returns data about goals based on criteria. For searching, append `{searchField}={searchValue}` to the URL, where `searchField` can be any one of the lowest-level fields in dot-notation (e.g. `type.params.pipeline_id`; `title`). `searchValue` should be the value you are looking for on that field. Additionally, `is_active=\u003ctrue|false\u003e` can be provided to search for only active/inactive goals. When providing `period.start`, `period.end` must also be provided and vice versa.'\n      tags:\n        - Goals\n      security:\n        - api_key: []\n      parameters:\n        - in: query\n          name: type.name\n          schema:\n            type: string\n            enum:\n              - deals_won\n              - deals_progressed\n              - activities_completed\n              - activities_added\n              - deals_started\n          description: 'Type of the goal. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: title\n          schema:\n            type: string\n          description: Title of the goal.\n        - in: query\n          name: is_active\n          schema:\n            type: boolean\n            enum:\n              - true\n              - false\n            default: true\n          description: Whether goal is active or not.\n        - in: query\n          name: assignee.id\n          schema:\n            type: integer\n          description: 'ID of the user who''s goal to fetch. When omitted, only your goals will be returned.'\n        - in: query\n          name: assignee.type\n          schema:\n            type: string\n            enum:\n              - person\n              - company\n              - team\n          description: 'Type of the goal''s assignee. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: expected_outcome.target\n          schema:\n            type: number\n          description: 'Numeric value of the outcome. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: expected_outcome.tracking_metric\n          schema:\n            type: string\n            enum:\n              - quantity\n              - sum\n          description: 'Tracking metric of the expected outcome of the goal. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: expected_outcome.currency_id\n          schema:\n            type: integer\n          description: 'Numeric ID of the goal''s currency. Only applicable to goals with `expected_outcome.tracking_metric` with value `sum`. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: type.params.pipeline_id\n          schema:\n            type: integer\n          description: 'ID of the pipeline or `null` for all pipelines. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: type.params.stage_id\n          schema:\n            type: integer\n          description: 'ID of the stage. Applicable to only `deals_progressed` type of goals. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: type.params.activity_type_id\n          schema:\n            type: integer\n          description: 'ID of the activity type. Applicable to only `activities_completed` or `activities_added` types of goals. If provided, everyone''s goals will be returned.'\n        - in: query\n          name: period.start\n          schema:\n            type: string\n            format: date\n          description: 'Start date of the period for which to find goals. Date in format of YYYY-MM-DD. When `period.start` is provided, `period.end` must be provided too.'\n        - in: query\n          name: period.end\n          schema:\n            type: string\n            format: date\n          description: End date of the period for which to find goals. Date in format of YYYY-MM-DD.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/goals/{id}':\n    put:\n      summary: Update existing goal\n      description: Updates existing goal.\n      tags:\n        - Goals\n      security:\n        - api_key: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          description: ID of the goal to be updated.\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicGoal'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    delete:\n      summary: Delete existing goal\n      description: Marks goal as deleted.\n      tags:\n        - Goals\n      security:\n        - api_key: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          description: ID of the goal to be deleted.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/goals/{id}/results':\n    get:\n      summary: Get result of a goal\n      description: Gets progress of a goal for specified period.\n      tags:\n        - Goals\n      security:\n        - api_key: []\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: string\n          description: ID of the goal that the results are looked for.\n        - in: query\n          name: period.start\n          required: true\n          schema:\n            type: string\n            format: date\n          description: Start date of the period for which to find progress of a goal. Date in format of YYYY-MM-DD.\n        - in: query\n          name: period.end\n          required: true\n          schema:\n            type: string\n            format: date\n          description: End date of the period for which to find progress of a goal. Date in format of YYYY-MM-DD.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/mailbox/mailMessages/{id}':\n    get:\n      summary: Get one mail message\n      description: Returns data about specific mail message.\n      tags:\n        - MailMessages\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - in: path\n          name: id\n          required: true\n          schema:\n            type: integer\n          description: ID of the mail message to fetch.\n        - in: query\n          name: include_body\n          schema:\n            allOf:\n              - $ref: '#/components/schemas/NumberBooleanDefault0'\n          description: 'Whether to include full message body or not. 0 = Don''t include, 1 = Include'\n      responses:\n        '200':\n          $ref: '#/components/responses/MailMessageGetSuccess'\n  /mailbox/mailThreads:\n    get:\n      summary: Get mail threads\n      description: Returns mail threads in specified folder ordered by most recent message within.\n      tags:\n        - MailThreads\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - in: query\n          name: folder\n          required: true\n          schema:\n            type: string\n            enum:\n              - inbox\n              - drafts\n              - sent\n              - archive\n            default: inbox\n          description: Type of folder to fetch.\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/MailThreadGetSuccess'\n  '/mailbox/mailThreads/{id}':\n    delete:\n      summary: Delete mail thread\n      description: Marks mail thread as deleted.\n      tags:\n        - MailThreads\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/MailThreadID'\n      responses:\n        '200':\n          $ref: '#/components/responses/MailThreadDeleteSuccess'\n    get:\n      summary: Get one mail thread\n      description: Returns specific mail thread.\n      tags:\n        - MailThreads\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/MailThreadID'\n      responses:\n        '200':\n          $ref: '#/components/responses/MailThreadGetOneSuccess'\n    put:\n      summary: Update mail thread details\n      description: Updates the properties of a mail thread.\n      tags:\n        - MailThreads\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/MailThreadID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                deal_id:\n                  type: integer\n                  description: ID of the deal this thread is associated with\n                shared_flag:\n                  allOf:\n                    - $ref: '#/components/schemas/NumberBoolean'\n                    - description: Whether this thread is shared with other users in your company\n                read_flag:\n                  allOf:\n                    - $ref: '#/components/schemas/NumberBoolean'\n                    - description: Whether this thread read or unread\n                archived_flag:\n                  allOf:\n                    - $ref: '#/components/schemas/NumberBoolean'\n                    - description: Whether this thread is archived or not. You can only archive threads that belong to Inbox folder. Archived threads will disappear from Inbox.\n      responses:\n        '200':\n          $ref: '#/components/responses/MailThreadPutSuccess'\n  '/mailbox/mailThreads/{id}/mailMessages':\n    get:\n      summary: Get all mail messages of mail thread\n      description: Get mail messages inside specified mail thread.\n      tags:\n        - MailThreads\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/MailThreadID'\n      responses:\n        '200':\n          $ref: '#/components/responses/MailThreadGetMailMessagesSuccess'\n  /notes:\n    get:\n      summary: Get all notes\n      description: Returns all notes.\n      tags:\n        - Notes\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'ID of the user whose notes to fetch. If omitted, notes by all users will be returned.'\n        - in: query\n          name: deal_id\n          schema:\n            type: integer\n          description: 'ID of the deal which notes to fetch. If omitted, notes about all deals with be returned.'\n        - in: query\n          name: person_id\n          schema:\n            type: integer\n          description: 'ID of the person whose notes to fetch. If omitted, notes about all persons with be returned.'\n        - in: query\n          name: org_id\n          schema:\n            type: integer\n          description: 'ID of the organization which notes to fetch. If omitted, notes about all organizations with be returned.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, content, add_time, update_time.'\n        - in: query\n          name: start_date\n          schema:\n            type: string\n            format: date\n          description: Date in format of YYYY-MM-DD from which notes to fetch from.\n        - in: query\n          name: end_date\n          schema:\n            type: string\n            format: date\n          description: Date in format of YYYY-MM-DD until which notes to fetch to.\n        - in: query\n          name: pinned_to_deal_flag\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, then results are filtered by note to deal pinning state.'\n        - in: query\n          name: pinned_to_organization_flag\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, then results are filtered by note to organization pinning state.'\n        - in: query\n          name: pinned_to_person_flag\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, then results are filtered by note to person pinning state.'\n      responses:\n        '200':\n          $ref: '#/components/responses/NotesGetSuccess'\n    post:\n      summary: Add a note\n      description: Adds a new note.\n      tags:\n        - Notes\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Note'\n      responses:\n        '200':\n          $ref: '#/components/responses/NoteGetPostPutSuccess'\n  '/notes/{id}':\n    delete:\n      summary: Delete a note\n      description: Deletes a specific note.\n      tags:\n        - Notes\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/NoteID'\n      responses:\n        '200':\n          $ref: '#/components/responses/NoteDeleteSuccess'\n    get:\n      summary: Get one note\n      description: Returns details about a specific note.\n      tags:\n        - Notes\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/NoteID'\n      responses:\n        '200':\n          $ref: '#/components/responses/NoteGetPostPutSuccess'\n    put:\n      summary: Update a note\n      description: Updates a note.\n      tags:\n        - Notes\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:full'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/NoteID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Note'\n      responses:\n        '200':\n          $ref: '#/components/responses/NoteGetPostPutSuccess'\n  /noteFields:\n    get:\n      summary: Get all fields for a note\n      description: Return list of all fields for note\n      tags:\n        - NoteFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - 'contacts:read'\n            - 'contacts:full'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /organizationFields:\n    delete:\n      summary: Delete multiple organization fields in bulk\n      description: Marks multiple fields as deleted.\n      tags:\n        - OrganizationFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - in: query\n          name: ids\n          schema:\n            type: string\n          required: true\n          description: Comma-separated field IDs to delete\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all organization fields\n      description: Returns data about all organization fields\n      tags:\n        - OrganizationFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n            - admin\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a new organization field\n      description: 'Adds a new organization field. For more information on adding a new custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - OrganizationFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewOrganizationField'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizationFields/{id}':\n    delete:\n      summary: Delete an organization field\n      description: 'Marks a field as deleted. For more information on how to delete a custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - OrganizationFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/OrganizationFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one organization field\n      description: Returns data about a specific organization field.\n      tags:\n        - OrganizationFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/OrganizationFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update an organization field\n      description: 'Updates an organization field. See an example of updating custom fields’ values in \u003ca href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - OrganizationFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/OrganizationFieldID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicPersonField'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /organizations:\n    delete:\n      summary: Delete multiple organizations in bulk\n      description: Marks multiple organizations as deleted.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: ids\n          schema:\n            type: string\n          required: true\n          description: Comma-separated IDs that will be deleted\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all organizations\n      description: Returns all organizations\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, only organizations owned by the given user will be returned.'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: ID of the filter to use\n        - in: query\n          name: first_char\n          schema:\n            type: string\n          description: 'If supplied, only organizations whose name starts with the specified letter will be returned (case insensitive).'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add an organization\n      description: 'Adds a new organization. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the organizationFields and look for ''key'' values. For more information on how to add an organization, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-an-organization\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewOrganization'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /organizations/find:\n    get:\n      summary: Find organizations by name\n      description: Searches all organizations by their name.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n            - 'search:read'\n      parameters:\n        - in: query\n          name: term\n          schema:\n            type: string\n          required: true\n          description: Search term to look for\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}':\n    delete:\n      summary: Delete an organization\n      description: Marks an organization as deleted.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get details of an organization\n      description: Returns details of an organization. Note that this also returns some additional fields which are not present when asking for all organizations. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of organizationFields.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update an organization\n      description: Updates the properties of an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicOrganization'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/activities':\n    get:\n      summary: List activities associated with an organization\n      description: Lists activities associated with an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/ActivityDone'\n        - $ref: '#/components/parameters/ActivityExclude'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/deals':\n    get:\n      summary: List deals associated with an organization\n      description: Lists deals associated with an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/DealStatus'\n        - $ref: '#/components/parameters/DealSort'\n        - in: query\n          name: only_primary_association\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, only deals that are directly associated to the organization are fetched. If not set (default), all deals are fetched that are either directly or indirectly related to the organization. Indirect relations include relations through custom, organization-type fields and through persons of the given organization.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/files':\n    get:\n      summary: List files attached to an organization\n      description: Lists files associated with an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/IncludeDeletedFiles'\n        - $ref: '#/components/parameters/FilesSort'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/flow':\n    get:\n      summary: List updates about an organization\n      description: Lists updates about an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'recents:read'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/followers':\n    get:\n      summary: List followers of an organization\n      description: Lists the followers of an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a follower to an organization\n      description: Adds a follower to an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - user_id\n              properties:\n                user_id:\n                  type: integer\n                  description: ID of the user\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/followers/{follower_id}':\n    delete:\n      summary: Delete a follower from an organization\n      description: 'Deletes a follower from an organization. You can retrieve the follower_id from the \u003ca href=\"https://developers.pipedrive.com/docs/api/v1/#!/Organizations/get_organizations_id_followers\"\u003eList followers of an organization\u003c/a\u003e endpoint.'\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - in: path\n          name: follower_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the follower\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/mailMessages':\n    get:\n      summary: List mail messages associated with an organization\n      description: Lists mail messages associated with an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/merge':\n    put:\n      summary: Merge two organizations\n      description: 'Merges an organization with another organization. For more information on how to merge two organizations, see \u003ca href=\"https://pipedrive.readme.io/docs/merging-two-organizations\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - merge_with_id\n              properties:\n                merge_with_id:\n                  type: integer\n                  description: ID of the organization that the organization will be merged with\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/permittedUsers':\n    get:\n      summary: List permitted users\n      description: List users permitted to access an organization\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizations/{id}/persons':\n    get:\n      summary: List persons of an organization\n      description: Lists persons associated with an organization.\n      tags:\n        - Organizations\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /organizationRelationships:\n    get:\n      summary: Get all relationships for organization\n      description: Gets all of the relationships for a supplied organization id.\n      tags:\n        - OrganizationRelationships\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: org_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the organization to get relationships for\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Create an organization relationship\n      description: Creates and returns an organization relationship.\n      tags:\n        - OrganizationRelationships\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/OrganizationRelationship'\n                - type: object\n                  required:\n                    - type\n                    - rel_owner_org_id\n                    - rel_linked_org_id\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/organizationRelationships/{id}':\n    delete:\n      summary: Delete an organization relationship\n      description: Deletes an organization relationship and returns the deleted id.\n      tags:\n        - OrganizationRelationships\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationRelationshipID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one organization relationship\n      description: Finds and returns an organization relationship from its ID.\n      tags:\n        - OrganizationRelationships\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationRelationshipID'\n        - in: query\n          name: org_id\n          required: false\n          schema:\n            type: integer\n          description: ID of the base organization for the returned calculated values\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update an organization relationship\n      description: Updates and returns an organization relationship.\n      tags:\n        - OrganizationRelationships\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/OrganizationRelationshipID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/OrganizationRelationship'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /permissionSets:\n    get:\n      summary: Get all Permission Sets\n      tags:\n        - PermissionSets\n      security:\n        - api_key: []\n      responses:\n        '200':\n          $ref: '#/components/responses/PermissionSets'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  '/permissionSets/{id}':\n    get:\n      summary: Get one Permission Set\n      tags:\n        - PermissionSets\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/PermissionSetID'\n      responses:\n        '200':\n          $ref: '#/components/responses/PermissionSetID'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  '/permissionSets/{id}/assignments':\n    get:\n      summary: List Permission Set assignments\n      description: The list of assignments for a Permission Set\n      tags:\n        - PermissionSets\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/PermissionSetID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/Assignments'\n        '404':\n          $ref: '#/components/responses/NotFound'\n  /persons:\n    delete:\n      summary: Delete multiple persons in bulk\n      description: Marks multiple persons as deleted.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: ids\n          required: false\n          schema:\n            type: string\n          description: Comma-separated IDs that will be deleted\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all persons\n      description: Returns all persons\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, only persons owned by the given user will be returned.'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: ID of the filter to use.\n        - in: query\n          name: first_char\n          schema:\n            type: string\n          description: 'If supplied, only persons whose name starts with the specified letter will be returned (case insensitive).'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: sort\n          schema:\n            type: string\n          description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a person\n      description: 'Adds a new person. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys. To determine which custom fields exists, fetch the personFields and look for ''key'' values.'\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewPerson'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /persons/find:\n    get:\n      summary: Find persons by name\n      description: Searches all persons by their name.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n            - 'search:read'\n      parameters:\n        - in: query\n          name: term\n          required: true\n          schema:\n            type: string\n          description: Search term to look for\n        - in: query\n          name: org_id\n          schema:\n            type: integer\n          description: ID of the organization person is associated with.\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: search_by_email\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'When enabled, term will only be matched against email addresses of people. Default: false'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}':\n    delete:\n      summary: Delete a person\n      description: Marks a person as deleted.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get details of a person\n      description: Returns details of a person. Note that this also returns some additional fields which are not present when asking for all persons. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the 'key' value of personFields.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update a person\n      description: 'Updates the properties of a person. For more information on how to update a person, see \u003ca href=\"https://pipedrive.readme.io/docs/updating-a-person\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicPerson'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/activities':\n    get:\n      summary: List activities associated with a person\n      description: Lists activities associated with a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'activities:read'\n            - 'activities:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/ActivityDone'\n        - $ref: '#/components/parameters/ActivityExclude'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/deals':\n    get:\n      summary: List deals associated with a person\n      description: Lists deals associated with a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/DealStatus'\n        - $ref: '#/components/parameters/DealSort'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/files':\n    get:\n      summary: List files attached to a person\n      description: Lists files associated with a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/IncludeDeletedFiles'\n        - $ref: '#/components/parameters/FilesSort'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/flow':\n    get:\n      summary: List updates about a person\n      description: Lists updates about a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'recents:read'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/followers':\n    get:\n      summary: List followers of a person\n      description: Lists the followers of a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a follower to a person\n      description: Adds a follower to a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - user_id\n              properties:\n                user_id:\n                  type: integer\n                  description: ID of the user\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/followers/{follower_id}':\n    delete:\n      summary: Deletes a follower from a person.\n      description: Delete a follower from a person\n      tags:\n        - Persons\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - in: path\n          name: follower_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the follower\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/mailMessages':\n    get:\n      summary: List mail messages associated with a person\n      description: Lists mail messages associated with a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'mail:read'\n            - 'mail:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/merge':\n    put:\n      summary: Merge two persons\n      description: 'Merges a person with another person. For more information on how to merge two persons, see \u003ca href=\"https://pipedrive.readme.io/docs/merging-two-persons\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - merge_with_id\n              properties:\n                merge_with_id:\n                  type: integer\n                  description: ID of the person that the person will be merged with\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/permittedUsers':\n    get:\n      summary: List permitted users\n      description: List users permitted to access a person\n      tags:\n        - Persons\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/picture':\n    delete:\n      summary: Delete person picture\n      description: Delete person picture\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add person picture\n      description: 'Add a picture to a person. If a picture is already set, the old picture will be replaced. Added image (or the cropping parameters supplied with the request) should have an equal width and height and should be at least 128 pixels. GIF, JPG and PNG are accepted. All added images will be resized to 128 and 512 pixel wide squares.'\n      tags:\n        - Persons\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:full'\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              required:\n                - file\n              properties:\n                file:\n                  type: string\n                  format: binary\n                  description: One image supplied in the multipart/form-data encoding.\n                crop_x:\n                  type: integer\n                  description: X coordinate to where start cropping form (in pixels)\n                crop_y:\n                  type: integer\n                  description: Y coordinate to where start cropping form (in pixels)\n                crop_width:\n                  type: integer\n                  description: Width of cropping area (in pixels)\n                crop_height:\n                  type: integer\n                  description: Height of cropping area (in pixels)\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/persons/{id}/products':\n    get:\n      summary: List products associated with a person\n      description: Lists products associated with a person.\n      tags:\n        - Persons\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/PersonID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /personFields:\n    delete:\n      summary: Delete multiple person fields in bulk\n      description: Marks multiple fields as deleted.\n      tags:\n        - PersonFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - in: query\n          name: ids\n          required: true\n          schema:\n            type: string\n          description: Comma-separated field IDs to delete\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all person fields\n      description: Returns data about all person fields\n      tags:\n        - PersonFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n            - admin\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a new person field\n      description: 'Adds a new person field. For more information on adding a new custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - PersonFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewPersonField'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/personFields/{id}':\n    delete:\n      summary: Delete a person field\n      description: 'Marks a field as deleted. For more information on how to delete a custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - PersonFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PersonFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one person field\n      description: Returns data about a specific person field.\n      tags:\n        - PersonFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'contacts:read'\n            - 'contacts:full'\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PersonFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update a person field\n      description: 'Updates a person field. See an example of updating custom fields’ values in \u003ca href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - PersonFields\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PersonFieldID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicPersonField'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /pipelines:\n    get:\n      summary: Get all pipelines\n      description: Returns data about all pipelines\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - admin\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a new pipeline\n      description: Adds a new pipeline\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Pipeline'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/pipelines/{id}':\n    delete:\n      summary: Delete a pipeline\n      description: Marks a pipeline as deleted.\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PipelineID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one pipeline\n      description: Returns data about a specific pipeline. Also returns the summary of the deals in this pipeline across its stages.\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PipelineID'\n        - in: query\n          name: totals_convert_currency\n          schema:\n            type: string\n          description: '3-letter currency code of any of the supported currencies. When supplied, per_stages_converted is returned in deals_summary which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to ''default_currency'' in which case users default currency is used.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Edit a pipeline\n      description: Updates pipeline properties\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/PipelineID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Pipeline'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/pipelines/{id}/conversion_statistics':\n    get:\n      summary: Get deals conversion rates in pipeline\n      description: Returns all stage-to-stage conversion and pipeline-to-close rates for given time period.\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/PipelineID'\n        - in: query\n          name: start_date\n          required: true\n          schema:\n            type: string\n            format: date\n          description: Start of the period. Date in format of YYYY-MM-DD.\n        - in: query\n          name: end_date\n          required: true\n          schema:\n            type: string\n            format: date\n          description: End of the period. Date in format of YYYY-MM-DD.\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'ID of the user who''s pipeline metrics statistics to fetch. If omitted, the authorized user will be used.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/pipelines/{id}/deals':\n    get:\n      summary: Get deals in a pipeline\n      description: Lists deals in a specific pipeline across all its stages\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/PipelineID'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals matching the given filter will be returned.'\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.'\n        - in: query\n          name: everyone\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'If supplied, filter_id and user_id will not be considered – instead, deals owned by everyone will be returned.'\n        - in: query\n          name: stage_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals within the given stage will be returned.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: get_summary\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: Whether to include summary of the pipeline in the additional_data or not.\n        - in: query\n          name: totals_convert_currency\n          schema:\n            type: string\n          description: '3-letter currency code of any of the supported currencies. When supplied, per_stages_converted is returned inside deals_summary inside additional_data which contains the currency-converted total amounts in the given currency per each stage. You may also set this parameter to ''default_currency'' in which case users default currency is used. Only works when get_summary parameter flag is enabled.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/pipelines/{id}/movement_statistics':\n    get:\n      summary: Get deals movements in pipeline\n      description: Returns statistics for deals movements for given time period.\n      tags:\n        - Pipelines\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/PipelineID'\n        - in: query\n          name: start_date\n          required: true\n          schema:\n            type: string\n            format: date\n          description: Start of the period. Date in format of YYYY-MM-DD.\n        - in: query\n          name: end_date\n          required: true\n          schema:\n            type: string\n            format: date\n          description: End of the period. Date in format of YYYY-MM-DD.\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'ID of the user who''s pipeline statistics to fetch. If omitted, the authorized user will be used.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /products:\n    get:\n      summary: Get all products\n      description: Returns data about all products.\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, only products owned by the given user will be returned.'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: ID of the filter to use\n        - in: query\n          name: first_char\n          schema:\n            type: string\n          description: 'If supplied, only products whose name starts with the specified letter will be returned (case insensitive).'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProductsSuccess'\n    post:\n      summary: Add a product\n      description: 'Adds a new product to the products inventory. For more information on how to add a product, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-product\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Product'\n                - type: object\n                  required:\n                    - name\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /products/find:\n    get:\n      summary: Find products by name\n      description: 'Returns data about the products that were found. If currency was set in request, prices in that currency are served back.'\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'search:read'\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - in: query\n          name: term\n          required: true\n          schema:\n            type: string\n          description: 'Search term to look for, minimum 3 characters.'\n        - in: query\n          name: currency\n          schema:\n            type: string\n          description: 'Currency code in which prices should be returned in. If omitted, prices in user''s default currency will be returned.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/FindProductsByNameSuccess'\n  '/products/{id}':\n    delete:\n      summary: Delete a product\n      description: Marks a product as deleted.\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one product\n      description: Returns data about a specific product.\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update a product\n      description: Updates product data.\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Product'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateProductSuccess'\n  '/products/{id}/deals':\n    get:\n      summary: Get deals where a product is attached to\n      description: Returns data about deals that have a product attached to.\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/DealStatus'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProductDealsSuccess'\n  '/products/{id}/files':\n    get:\n      summary: List files attached to a product\n      description: Lists files associated with a product.\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - $ref: '#/components/parameters/IncludeDeletedFiles'\n        - $ref: '#/components/parameters/FilesSort'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/products/{id}/followers':\n    get:\n      summary: List followers of a product\n      description: Lists the followers of a Product\n      tags:\n        - Products\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProductFollowersSuccess'\n    post:\n      summary: Add a follower to a product\n      description: Adds a follower to a product.\n      tags:\n        - Products\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - user_id\n              properties:\n                user_id:\n                  type: integer\n                  description: ID of the user\n      responses:\n        '200':\n          $ref: '#/components/responses/NewProductFollowerSuccess'\n  '/products/{id}/followers/{follower_id}':\n    delete:\n      summary: Delete a follower from a product\n      description: Deletes a follower from a product.\n      tags:\n        - Products\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n        - in: path\n          name: follower_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the follower\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteProductFollowerSuccess'\n  '/products/{id}/permittedUsers':\n    get:\n      summary: List permitted users\n      description: Lists users permitted to access a product.\n      tags:\n        - Products\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/ProductID'\n      responses:\n        '200':\n          $ref: '#/components/responses/ProductPermittedUsersSuccess'\n  /productFields:\n    delete:\n      summary: Delete multiple product fields in bulk\n      description: Marks multiple fields as deleted.\n      tags:\n        - ProductFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      parameters:\n        - in: query\n          name: ids\n          required: true\n          schema:\n            type: string\n          description: Comma-separated field IDs to delete\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteMultipleProductFieldsSuccess'\n    get:\n      summary: Get all product fields\n      description: Returns data about all product fields\n      tags:\n        - ProductFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetAllProductFieldsSuccess'\n    post:\n      summary: Add a new product field\n      description: 'Adds a new product field. For more information on adding a new custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/adding-a-new-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - ProductFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/NewProductField'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetProductFieldSuccess'\n  '/productFields/{id}':\n    delete:\n      summary: Delete a product field\n      description: 'Marks a field as deleted. For more information on how to delete a custom field, see \u003ca href=\"https://pipedrive.readme.io/docs/deleting-a-custom-field\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - ProductFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteProductFieldSuccess'\n        '410':\n          $ref: '#/components/responses/ProductFieldNotFound'\n    get:\n      summary: Get one product field\n      description: Returns data about a specific product field.\n      tags:\n        - ProductFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:read'\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductFieldID'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetProductFieldSuccess'\n        '410':\n          $ref: '#/components/responses/ProductFieldNotFound'\n    put:\n      summary: Update a product field\n      description: 'Updates a product field. See an example of updating custom fields’ values in \u003ca href=\" https://pipedrive.readme.io/docs/updating-custom-field-value \" target=\"_blank\" rel=\"noopener noreferrer\"\u003ethis tutorial\u003c/a\u003e.'\n      tags:\n        - ProductFields\n      security:\n        - api_key: []\n        - oauth2:\n            - 'products:full'\n      parameters:\n        - $ref: '#/components/parameters/ProductFieldID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BasicProductField'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetProductFieldSuccess'\n  /recents:\n    get:\n      summary: Get recents\n      description: Returns data about all recent changes occured after given timestamp.\n      tags:\n        - Recents\n      security:\n        - api_key: []\n        - oauth2:\n            - 'recents:read'\n            - 'search:read'\n      parameters:\n        - in: query\n          name: since_timestamp\n          required: true\n          schema:\n            type: string\n          description: 'Timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS'\n        - in: query\n          name: items\n          schema:\n            type: string\n            enum:\n              - activity\n              - activityType\n              - deal\n              - delete_log\n              - file\n              - filter\n              - note\n              - person\n              - organization\n              - pipeline\n              - product\n              - stage\n              - user\n          description: Multiple selection of item types to include in query (optional)\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /roles:\n    get:\n      summary: Get all roles\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRoles'\n    post:\n      summary: Add a role\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/BaseRole'\n                - type: object\n                  required:\n                    - name\n      responses:\n        '200':\n          $ref: '#/components/responses/PostRoles'\n  '/roles/{id}':\n    delete:\n      summary: Delete a role\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteRole'\n    get:\n      summary: Get one role\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRole'\n    put:\n      summary: Update role details\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/BaseRole'\n      responses:\n        '200':\n          $ref: '#/components/responses/PutRole'\n  '/roles/{id}/assignments':\n    delete:\n      summary: Delete a role assignment\n      description: Delete assignment from a role\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n        - in: query\n          name: user_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the user\n      responses:\n        '200':\n          $ref: '#/components/responses/DeleteRoleAssignment'\n    get:\n      summary: List role assignments\n      description: List assignments for a role\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRoleAssignments'\n    post:\n      summary: Add role assignment\n      description: Add assignment for a role\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - user_id\n              properties:\n                user_id:\n                  type: integer\n                  description: ID of the user\n      responses:\n        '200':\n          $ref: '#/components/responses/PostRoleAssignment'\n  '/roles/{id}/roles':\n    get:\n      summary: List role sub-roles\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRoleSubroles'\n  '/roles/{id}/settings':\n    get:\n      summary: List role settings\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetRoleSettings'\n    post:\n      summary: Add or update role setting\n      tags:\n        - Roles\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/RoleID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - setting_key\n                - value\n              properties:\n                setting_key:\n                  type: string\n                  enum:\n                    - deal_default_visibility\n                    - org_default_visibility\n                    - person_default_visibility\n                    - product_default_visibility\n                value:\n                  allOf:\n                    - $ref: '#/components/schemas/NumberBooleanDefault0'\n                  description: 'Possible values for default_visibility settings: 0...1.'\n      responses:\n        '200':\n          $ref: '#/components/responses/PostRoleSettings'\n  /searchResults:\n    get:\n      summary: Perform a search\n      description: Performs a search across the account and returns SearchResults.\n      tags:\n        - SearchResults\n      security:\n        - api_key: []\n        - oauth2:\n            - 'search:read'\n      parameters:\n        - in: query\n          name: term\n          required: true\n          schema:\n            type: string\n          description: 'Search term to look for, minimum 2 characters.'\n        - in: query\n          name: item_type\n          schema:\n            type: string\n            enum:\n              - deal\n              - person\n              - organization\n              - product\n              - file\n          description: 'Search for items of exact type. If omitted, all types of items are searched.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n        - in: query\n          name: exact_match\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'When enabled, only full exact matches against the given term are returned. The minimum 2 character limit for the term is discarded when exact_match is enabled. It will only work if search term is 30 characters or less.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /searchResults/field:\n    get:\n      summary: Perform a search using a specific field value\n      description: 'Performs a search from a specific field''s values. Results can be either the distinct values of the field (useful for searching autocomplete field values), or actual items IDs (deals, persons, organizations or products). Works only with the following field types: varchar, varchar_auto, double, address, text, phone, date.'\n      tags:\n        - SearchResults\n      security:\n        - api_key: []\n        - oauth2:\n            - 'search:read'\n      parameters:\n        - in: query\n          name: term\n          required: true\n          schema:\n            type: string\n          description: 'Search term to look for, minimum 2 characters.'\n        - in: query\n          name: exact_match\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'When enabled, only full exact matches against the given term are returned. By default, term can be present anywhere in the resulting field values to be considered a match. The minimum 2 character limit for the term is discarded when exact_match is enabled.'\n        - in: query\n          name: field_type\n          required: true\n          schema:\n            type: string\n            enum:\n              - dealField\n              - personField\n              - organizationField\n              - productField\n          description: Type of the field to perform the search from.\n        - in: query\n          name: field_key\n          required: true\n          schema:\n            type: string\n          description: 'Key of the field to search from. Field key can be obtained by fetching the list of fields using any of fields API GET methods (dealFields, personFields, ..).'\n        - in: query\n          name: return_field_key\n          schema:\n            type: string\n          description: 'Name of the field in search results from which the search was performed. When omitted, ''value'' will be used. You may want to set this parameter to match the field_key.'\n        - in: query\n          name: return_item_ids\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'Whether to return matching items IDs in search results. When omitted or set to 0, only distinct values of the searched field are returned. When enabled, the return_field_key parameter is ignored and the results include the searched field as its own key.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /stages:\n    delete:\n      summary: Delete multiple stages in bulk\n      description: Marks multiple stages as deleted.\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - in: query\n          name: ids\n          required: true\n          schema:\n            type: string\n          description: Comma-separated stage IDs to delete\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get all stages\n      description: Returns data about all stages\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - admin\n      parameters:\n        - in: query\n          name: pipeline_id\n          schema:\n            type: integer\n          description: 'ID of the pipeline to fetch stages for. If omitted, stages for all pipelines will be fetched.'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add a new stage\n      description: 'Adds a new stage, returns the ID upon success.'\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Stage'\n                - type: object\n                  required:\n                    - name\n                    - pipeline_id\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/stages/{id}':\n    delete:\n      summary: Delete a stage\n      description: Marks a stage as deleted.\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/StageID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: Get one stage\n      description: Returns data about a specific stage\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/StageID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    put:\n      summary: Update stage details\n      description: Updates the properties of a stage.\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/StageID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              allOf:\n                - $ref: '#/components/schemas/Stage'\n                - type: object\n                  properties:\n                    order_nr:\n                      type: integer\n                      description: An order number for this stage. Order numbers should be used to order the stages in the pipeline.\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/stages/{id}/deals':\n    get:\n      summary: Get deals in a stage\n      description: Lists deals in a specific stage\n      tags:\n        - Stages\n      security:\n        - api_key: []\n        - oauth2:\n            - 'deals:read'\n            - 'deals:full'\n      parameters:\n        - $ref: '#/components/parameters/StageID'\n        - in: query\n          name: filter_id\n          schema:\n            type: integer\n          description: 'If supplied, only deals matching the given filter will be returned.'\n        - in: query\n          name: user_id\n          schema:\n            type: integer\n          description: 'If supplied, filter_id will not be considered and only deals owned by the given user will be returned. If omitted, deals owned by the authorized user will be returned.'\n        - in: query\n          name: everyone\n          schema:\n            $ref: '#/components/schemas/NumberBoolean'\n          description: 'If supplied, filter_id and user_id will not be considered – instead, deals owned by everyone will be returned.'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /teams:\n    get:\n      summary: Get all teams\n      description: Returns data about teams within the company\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/TeamsSort'\n        - $ref: '#/components/parameters/TeamsUsersExclude'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamsSuccess'\n    post:\n      summary: Add a new team\n      description: Adds a new team to the company and returns the created object\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateTeam'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  '/teams/{id}':\n    get:\n      summary: Get a single team\n      description: Returns data about a specific team\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/TeamID'\n        - $ref: '#/components/parameters/TeamsUsersExclude'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamSuccess'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n    put:\n      summary: Update a team\n      description: Updates an existing team and returns the updated object\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/TeamID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UpdateTeam'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  '/teams/{id}/users':\n    get:\n      summary: Get all users in a team\n      description: Returns list of all user IDs within a team\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/TeamID'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamsUsersSuccess'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n    post:\n      summary: Add users to a team\n      description: Adds users to an existing team\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/TeamID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - users\n              properties:\n                users:\n                  $ref: '#/components/schemas/BaseUserIDs'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamsUsersSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n    delete:\n      summary: Delete users from a team\n      description: Deletes users from an existing team\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/TeamID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - users\n              properties:\n                users:\n                  $ref: '#/components/schemas/BaseUserIDs'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamsUsersSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/TeamNotFound'\n  '/teams/user/{id}':\n    get:\n      summary: Get all teams of a user\n      description: Returns data about all teams which have specified user as a member\n      tags:\n        - Teams\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n        - $ref: '#/components/parameters/TeamsSort'\n        - $ref: '#/components/parameters/TeamsUsersExclude'\n      responses:\n        '200':\n          $ref: '#/components/responses/TeamsSuccess'\n  /users:\n    get:\n      summary: Get all users\n      description: Returns data about all users within the company\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      responses:\n        '200':\n          $ref: '#/components/responses/UsersSuccess'\n    post:\n      summary: Add a new user\n      description: 'Adds a new user to the company, returns the ID upon success.'\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - name\n                - email\n                - active_flag\n              properties:\n                name:\n                  type: string\n                  description: Name of the user\n                email:\n                  type: string\n                  description: Email of the user\n                active_flag:\n                  type: boolean\n                  default: true\n                  description: 'Whether the user is active or not. false = Not activated, true = Activated'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  /users/find:\n    get:\n      summary: Find users by name\n      description: Finds users by their name.\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - in: query\n          name: term\n          required: true\n          schema:\n            type: string\n          description: Search term to look for\n        - in: query\n          name: search_by_email\n          schema:\n            $ref: '#/components/schemas/NumberBooleanDefault0'\n          description: 'When enabled, term will only be matched against email addresses of users. Default: false'\n      responses:\n        '200':\n          $ref: '#/components/responses/UsersSuccess'\n  /users/me:\n    get:\n      summary: Get current user data\n      description: 'Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the ''locale'' property means ''Date and number format'' in the Pipedrive settings, not the chosen language.'\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - base\n      responses:\n        '200':\n          $ref: '#/components/responses/UsersMeSuccess'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  '/users/{id}':\n    get:\n      summary: Get one user\n      description: Returns data about a specific user within the company\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserSuccess'\n        '404':\n          $ref: '#/components/responses/UserNotFound'\n    put:\n      summary: Update user details\n      description: 'Updates the properties of a user. Currently, only active_flag can be updated.'\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - active_flag\n              properties:\n                active_flag:\n                  type: boolean\n                  default: true\n                  description: 'Whether the user is active or not. false = Not activated, true = Activated'\n      responses:\n        '200':\n          $ref: '#/components/responses/UserSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n        '404':\n          $ref: '#/components/responses/UserNotFound'\n  '/users/{id}/blacklistedEmails':\n    get:\n      summary: List blacklisted email addresses of a user\n      description: Lists blacklisted email addresses of a specific user. Blacklisted emails are such that will not get synced in to Pipedrive when using the built-in Mailbox.\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add blacklisted email address for a user\n      description: Add blacklisted email address for a specific user.\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - admin\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - address\n              properties:\n                address:\n                  type: string\n                  description: 'Email address to blacklist (can contain \\\\* for wildcards, e.g. \\\\*@example.com, or john\\\\*@ex\\\\*.com)'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/users/{id}/followers':\n    get:\n      summary: List followers of a user\n      description: Lists followers of a specific user.\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          $ref: '#/components/responses/UsersFollowersGetSuccess'\n        '403':\n          $ref: '#/components/responses/Forbidden'\n  '/users/{id}/permissions':\n    get:\n      summary: List user permissions\n      description: List aggregated permissions over all assigned permission sets for a user\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/users/{id}/roleAssignments':\n    delete:\n      summary: Delete a role assignment\n      description: Delete a role assignment for a user\n      tags:\n        - Users\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n        - in: query\n          name: role_id\n          required: true\n          schema:\n            type: integer\n          description: ID of the role\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    get:\n      summary: List role assignments\n      description: List role assignments for a user\n      tags:\n        - Users\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n        - $ref: '#/components/parameters/PaginationStart'\n        - $ref: '#/components/parameters/PaginationLimit'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n    post:\n      summary: Add role assignment\n      description: Add role assignment for a user\n      tags:\n        - Users\n      security:\n        - api_key: []\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              required:\n                - role_id\n              properties:\n                role_id:\n                  type: integer\n                  description: ID of the role\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  '/users/{id}/roleSettings':\n    get:\n      summary: List user role settings\n      description: List settings of user's assigned role\n      tags:\n        - Users\n      security:\n        - api_key: []\n        - oauth2:\n            - 'users:read'\n      parameters:\n        - $ref: '#/components/parameters/UserID'\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\n  /userConnections:\n    get:\n      summary: Get all user connections\n      description: Returns data about all connections for authorized user.\n      tags:\n        - UserConnections\n      security:\n        - api_key: []\n        - oauth2:\n            - base\n      responses:\n        '200':\n          $ref: '#/components/responses/UserConnectionsGetSuccess'\n        '401':\n          $ref: '#/components/responses/Unauthorized'\n  /userSettings:\n    get:\n      summary: List settings of authorized user\n      description: Lists settings of authorized user.\n      tags:\n        - UserSettings\n      security:\n        - api_key: []\n        - oauth2:\n            - base\n      responses:\n        '200':\n          $ref: '#/components/responses/EmptySuccess'\ncomponents:\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: api_token\n      in: query\n    oauth2:\n      type: oauth2\n      description: 'For more information, see https://pipedrive.readme.io/docs/marketplace-oauth-authorization'\n      flows:\n        authorizationCode:\n          authorizationUrl: 'https://oauth.pipedrive.com/oauth/authorize'\n          tokenUrl: 'https://oauth.pipedrive.com/oauth/token'\n          refreshUrl: 'https://oauth.pipedrive.com/oauth/token'\n          scopes:\n            'deals:read': Read most data about deals and related entities.\n            'deals:full': 'Create, read, update and delete deals, its participants and followers.'\n            'activities:read': 'Read activities, its fields and types; all files and filters.'\n            'activities:full': 'Create, read, update and delete activities and all files and filters.'\n            'contacts:read': 'Read data about persons and organizations, their related fields and followers.'\n            'contacts:full': 'Create, read, update and delete persons and organizations and their followers.'\n            admin: Allows to do many things that an administrator can do in a Pipedrive company account.\n            'recents:read': Read all recent changes occured in an account.\n            'search:read': 'Search across the account for deals, persons, organizations, files and products and see details about the returned results.'\n            'mail:read': Read mail threads and messages.\n            'mail:full': 'Read, update and delete mail threads. Also grants read access to mail messages.'\n            'products:read': 'Read products, its fields, files, followers and products connected to a deal.'\n            'products:full': 'Create, read, update and delete products and its fields; add products to deals'\n            'users:read': 'Read data about users (people with access to a Pipedrive account), their permissions, roles and followers, as well as about teams.'\n            base: Read settings of the authorized user and currencies in an account.\n  parameters:\n    ActivityID:\n      in: path\n      name: id\n      description: ID of the activity\n      required: true\n      schema:\n        type: integer\n    ActivityTypeID:\n      in: path\n      name: id\n      description: ID of the activity type\n      required: true\n      schema:\n        type: integer\n    DealID:\n      in: path\n      name: id\n      description: ID of the deal\n      required: true\n      schema:\n        type: integer\n    DealFieldID:\n      in: path\n      name: id\n      description: ID of the field\n      required: true\n      schema:\n        type: integer\n    FileID:\n      in: path\n      name: id\n      description: ID of the file\n      required: true\n      schema:\n        type: integer\n    FilterID:\n      in: path\n      name: id\n      description: ID of the filter\n      required: true\n      schema:\n        type: integer\n    MailThreadID:\n      in: path\n      name: id\n      description: ID of the mail thread\n      required: true\n      schema:\n        type: integer\n    NoteID:\n      in: path\n      name: id\n      description: ID of the note\n      required: true\n      schema:\n        type: integer\n    OrganizationFieldID:\n      in: path\n      name: id\n      description: ID of the field\n      required: true\n      schema:\n        type: integer\n    OrganizationID:\n      in: path\n      name: id\n      description: ID of the organization\n      required: true\n      schema:\n        type: integer\n    OrganizationRelationshipID:\n      in: path\n      name: id\n      description: ID of the organization relationship\n      required: true\n      schema:\n        type: integer\n    PermissionSetID:\n      in: path\n      name: id\n      description: ID of the permission set\n      required: true\n      schema:\n        type: integer\n    PersonID:\n      in: path\n      name: id\n      description: ID of a person\n      required: true\n      schema:\n        type: integer\n    PersonFieldID:\n      in: path\n      name: id\n      description: ID of the field\n      required: true\n      schema:\n        type: integer\n    PipelineID:\n      in: path\n      name: id\n      description: ID of the pipeline\n      required: true\n      schema:\n        type: integer\n    ProductID:\n      in: path\n      name: id\n      description: ID of the product\n      required: true\n      schema:\n        type: integer\n    ProductFieldID:\n      in: path\n      name: id\n      description: ID of the Product Field\n      required: true\n      schema:\n        type: integer\n    RoleID:\n      in: path\n      name: id\n      description: ID of the role\n      required: true\n      schema:\n        type: integer\n    StageID:\n      in: path\n      name: id\n      description: ID of the stage\n      required: true\n      schema:\n        type: integer\n    TeamID:\n      in: path\n      name: id\n      description: ID of the team\n      required: true\n      schema:\n        type: integer\n    UserID:\n      in: path\n      name: id\n      description: ID of the user\n      required: true\n      schema:\n        type: integer\n    PaginationStart:\n      in: query\n      name: start\n      description: Pagination start\n      schema:\n        type: integer\n        default: 0\n    PaginationLimit:\n      in: query\n      name: limit\n      description: Items shown per page\n      schema:\n        type: integer\n    ActivityDone:\n      in: query\n      name: done\n      schema:\n        $ref: '#/components/schemas/NumberBoolean'\n      description: 'Whether the activity is done or not. 0 = Not done, 1 = Done. If omitted returns both Done and Not done activities.'\n    DealStatus:\n      in: query\n      name: status\n      schema:\n        type: string\n        default: all_not_deleted\n        enum:\n          - open\n          - won\n          - lost\n          - deleted\n          - all_not_deleted\n      description: 'Only fetch deals with specific status. If omitted, all not deleted deals are fetched.'\n    DealSort:\n      in: query\n      name: sort\n      schema:\n        type: string\n      description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys).'\n    IncludeDeletedFiles:\n      in: query\n      name: include_deleted_files\n      description: 'When enabled, the list of files will also include deleted files. Please note that trying to download these files will not work.'\n      schema:\n        $ref: '#/components/schemas/NumberBoolean'\n    FilesSort:\n      in: query\n      name: sort\n      schema:\n        type: string\n      description: 'Field names and sorting mode separated by a comma (field_name_1 ASC, field_name_2 DESC). Only first-level field keys are supported (no nested keys). Supported fields: id, user_id, deal_id, person_id, org_id, product_id, add_time, update_time, file_name, file_type, file_size, comment.'\n    ActivityExclude:\n      in: query\n      name: exclude\n      schema:\n        type: string\n      description: A comma-separated string of activity IDs to exclude from result\n    TeamsSort:\n      in: query\n      name: order_by\n      schema:\n        type: string\n        enum:\n          - id\n          - name\n          - manager_id\n          - active_flag\n        default: id\n      description: Field name to sort returned teams by\n    TeamsUsersExclude:\n      in: query\n      name: skip_users\n      schema:\n        allOf:\n          - $ref: '#/components/schemas/NumberBooleanDefault0'\n      description: 'When enabled, the teams will not include IDs of member users'\n  responses:\n    EmptySuccess:\n      description: success\n    Unauthorized:\n      description: Unauthorized response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Unauthorized'\n          example:\n            success: false\n            error: unauthorized access\n            errorCode: 401\n    Forbidden:\n      description: Forbidden response\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FailResponse'\n          example:\n            success: false\n            error: You do not have permissions to do this.\n    GetRoles:\n      description: Get all roles\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetRoles'\n          example:\n            success: true\n            data:\n              - id: 1\n                parent_role_id: null\n                name: (Unassigned users)\n                active_flag: true\n                assignment_count: '0'\n                sub_role_count: '0'\n                level: 1\n              - id: 2\n                parent_role_id: null\n                name: Admins\n                active_flag: true\n                assignment_count: '1'\n                sub_role_count: '1'\n                level: 1\n              - id: 3\n                parent_role_id: 2\n                name: Reviewers\n                active_flag: true\n                assignment_count: '1'\n                sub_role_count: '0'\n                level: 2\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    PostRoles:\n      description: Add a role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostRoles'\n          example:\n            success: true\n            data:\n              id: 2\n    DeleteRole:\n      description: Delete a role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteRole'\n          example:\n            success: true\n            data:\n              id: 2\n    GetRole:\n      description: Get one role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetRole'\n          example:\n            success: true\n            data:\n              id: 2\n              parent_role_id: null\n              name: Admins\n              active_flag: true\n              assignment_count: '1'\n              sub_role_count: '1'\n            additional_data:\n              settings:\n                deal_default_visibility: 1\n                org_default_visibility: 1\n                person_default_visibility: 1\n                product_default_visibility: 1\n    PutRole:\n      description: Update role details\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PutRole'\n          example:\n            success: true\n            data:\n              id: 2\n    DeleteRoleAssignment:\n      description: Delete assignment from a role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteRoleAssignment'\n          example:\n            success: true\n            data:\n              id: 2\n    GetRoleAssignments:\n      description: List assignments for a role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetRoleAssignments'\n          example:\n            success: true\n            data:\n              - user_id: 1234567\n                role_id: 2\n                parent_role_id: null\n                name: Admins\n                active_flag: true\n                type: '1'\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    PostRoleAssignment:\n      description: Add assignment for a role\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostRoleAssignment'\n          example:\n            success: true\n            data:\n              user_id: 1234567\n              role_id: 2\n    GetRoleSubroles:\n      description: List role sub-roles\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetRoleSubroles'\n          example:\n            success: true\n            data:\n              - id: 3\n                parent_role_id: 2\n                name: Auditors\n                active_flag: true\n                assignment_count: '1'\n                sub_role_count: '0'\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    GetRoleSettings:\n      description: List role settings\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetRoleSettings'\n          example:\n            success: true\n            data:\n              deal_default_visibility: 1\n              org_default_visibility: 1\n              person_default_visibility: 1\n              product_default_visibility: 1\n    PostRoleSettings:\n      description: List role settings\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostRoleSettings'\n          example:\n            success: true\n            data:\n              id: 2\n              deal_default_visibility: 1\n    MailMessageGetSuccess:\n      description: The mail messages that are being synced with Pipedrive\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MailMessage'\n          example:\n            success: true\n            statusCode: 2000\n            statusText: Success\n            service: email-api\n            data:\n              id: 1\n              from:\n                - id: 1\n                  email_address: mail@example.org\n                  name: Test\n                  linked_person_id: null\n                  linked_person_name: null\n                  mail_message_party_id: 1\n              to:\n                - id: 1\n                  email_address: mail@example.org\n                  name: Test\n                  linked_person_id: null\n                  linked_person_name: null\n                  mail_message_party_id: 1\n              cc:\n                - id: 1\n                  email_address: mail@example.org\n                  name: Test\n                  linked_person_id: null\n                  linked_person_name: null\n                  mail_message_party_id: 1\n              bcc:\n                - id: 1\n                  email_address: mail@example.org\n                  name: Test\n                  linked_person_id: null\n                  linked_person_name: null\n                  mail_message_party_id: 1\n              body_url: 'https://example.org'\n              account_id: test\n              user_id: 1\n              mail_thread_id: 1\n              subject: test subject\n              snippet: test subject\n              mail_tracking_status: null\n              mail_link_tracking_enabled_flag: 0\n              read_flag: 1\n              draft: null\n              draft_flag: 0\n              synced_flag: 1\n              deleted_flag: 0\n              has_body_flag: 1\n              sent_flag: 0\n              sent_from_pipedrive_flag: 0\n              smart_bcc_flag: 0\n              message_time: '2019-11-14T06:02:06.000Z'\n              add_time: '2019-11-14T06:02:06.000Z'\n              update_time: '2019-11-14T07:15:49.000Z'\n              has_attachments_flag: 1\n              has_inline_attachments_flag: 0\n              has_real_attachments_flag: 1\n              write_flag: true\n    DealAddSuccess:\n      description: Add a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetAddedDeal'\n          example:\n            success: true\n            data:\n              id: 1\n              creator_user_id:\n                id: 9258618\n                name: Creator\n                email: creator@pipedrive.com\n                has_pic: false\n                pic_hash: null\n                active_flag: true\n                value: 9258618\n              user_id:\n                id: 9258618\n                name: Creator\n                email: creator@pipedrive.com\n                has_pic: false\n                pic_hash: null\n                active_flag: true\n                value: 9258618\n              person_id:\n                active_flag: true\n                name: Person\n                email:\n                  - label: work\n                    value: person@pipedrive.com\n                    primary: true\n                phone:\n                  - label: work\n                    value: '37244499911'\n                    primary: true\n                value: 1101\n              org_id:\n                name: Organization\n                people_count: 2\n                owner_id: 9258618\n                address: null\n                active_flag: true\n                cc_email: org@pipedrivemail.com\n                value: 5\n              stage_id: 2\n              title: Deal One\n              value: 5000\n              currency: EUR\n              add_time: '2019-05-29 04:21:51'\n              update_time: '2019-11-28 16:19:50'\n              stage_change_time: '2019-11-28 15:41:22'\n              active: true\n              deleted: false\n              status: open\n              probability: null\n              next_activity_date: '2019-11-29'\n              next_activity_time: '11:30:00'\n              next_activity_id: 128\n              last_activity_id: null\n              last_activity_date: null\n              lost_reason: null\n              visible_to: '1'\n              close_time: null\n              pipeline_id: 1\n              won_time: '2019-11-27 11:40:36'\n              first_won_time: '2019-11-27 11:40:36'\n              lost_time: null\n              products_count: 0\n              files_count: 0\n              notes_count: 2\n              followers_count: 0\n              email_messages_count: 4\n              activities_count: 1\n              done_activities_count: 0\n              undone_activities_count: 1\n              reference_activities_count: 0\n              participants_count: 1\n              expected_close_date: '2019-06-29'\n              last_incoming_mail_time: '2019-05-29 18:21:42'\n              last_outgoing_mail_time: '2019-05-30 03:45:35'\n              label: null\n              stage_order_nr: 2\n              person_name: Person\n              org_name: Organization\n              next_activity_subject: Call\n              next_activity_type: call\n              next_activity_duration: '00:30:00'\n              next_activity_note: Note content\n              formatted_value: '€5,000'\n              weighted_value: 5000\n              formatted_weighted_value: '€5,000'\n              weighted_value_currency: EUR\n              rotten_time: null\n              owner_name: Creator\n              cc_email: company+deal1@pipedrivemail.com\n              org_hidden: false\n              person_hidden: false\n            additional_data:\n              matches_filters:\n                - 1\n            related_objects:\n              user:\n                '9258618':\n                  id: 9258618\n                  name: Creator\n                  email: creator@pipedrive.com\n                  has_pic: false\n                  pic_hash: null\n                  active_flag: true\n              organization:\n                '2':\n                  id: 2\n                  name: Organization\n                  people_count: 2\n                  owner_id: 9258618\n                  address: 'Mustamäe tee 3a, 10615 Tallinn'\n                  active_flag: true\n                  cc_email: org@pipedrivemail.com\n              person:\n                '1101':\n                  active_flag: true\n                  id: 1101\n                  name: Person\n                  email:\n                    - label: work\n                      value: person@pipedrive.com\n                      primary: true\n                  phone:\n                    - label: work\n                      value: '3421787767'\n                      primary: true\n    DealDuplicatedSuccess:\n      description: Duplicate a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetDuplicatedDeal'\n          example:\n            success: true\n            data:\n              id: 1\n              creator_user_id: 123\n              user_id: 456\n              person_id: 1\n              org_id: 2\n              stage_id: 2\n              title: Deal One\n              value: 5000\n              currency: EUR\n              add_time: '2019-05-29 04:21:51'\n              update_time: '2019-05-29 04:21:51'\n              stage_change_time: '2019-11-28 15:41:22'\n              active: true\n              deleted: false\n              status: open\n              probability: null\n              next_activity_date: '2019-11-29'\n              next_activity_time: '11:30:00'\n              next_activity_id: 128\n              last_activity_id: null\n              last_activity_date: null\n              lost_reason: null\n              visible_to: '1'\n              close_time: null\n              pipeline_id: 1\n              won_time: '2019-11-27 11:40:36'\n              first_won_time: '2019-11-27 11:40:36'\n              lost_time: null\n              products_count: 0\n              files_count: 0\n              notes_count: 2\n              followers_count: 0\n              email_messages_count: 4\n              activities_count: 1\n              done_activities_count: 0\n              undone_activities_count: 1\n              reference_activities_count: 0\n              participants_count: 1\n              expected_close_date: '2019-06-29'\n              last_incoming_mail_time: '2019-05-29 18:21:42'\n              last_outgoing_mail_time: '2019-05-30 03:45:35'\n              label: null\n              stage_order_nr: 2\n              person_name: Person\n              org_name: Organization\n              next_activity_subject: Call\n              next_activity_type: call\n              next_activity_duration: '00:30:00'\n              next_activity_note: Note content\n              formatted_value: '€5,000'\n              weighted_value: 5000\n              formatted_weighted_value: '€5,000'\n              weighted_value_currency: EUR\n              rotten_time: null\n              owner_name: Creator\n              cc_email: company+deal1@pipedrivemail.com\n              org_hidden: false\n              person_hidden: false\n    DealMergedSuccess:\n      description: Merges a Deal with another Deal.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetMergedDeal'\n          example:\n            success: true\n            data:\n              id: 1\n              creator_user_id: 123\n              user_id: 456\n              person_id: 1\n              org_id: 2\n              stage_id: 2\n              title: Deal One\n              value: 5000\n              currency: EUR\n              add_time: '2019-05-29 04:21:51'\n              update_time: '2019-06-29 05:20:31'\n              stage_change_time: '2019-11-28 15:41:22'\n              active: true\n              deleted: false\n              status: open\n              probability: null\n              next_activity_date: '2019-11-29'\n              next_activity_time: '11:30:00'\n              next_activity_id: 128\n              last_activity_id: null\n              last_activity_date: null\n              lost_reason: null\n              visible_to: '1'\n              close_time: null\n              pipeline_id: 1\n              won_time: '2019-11-27 11:40:36'\n              first_won_time: '2019-11-27 11:40:36'\n              lost_time: null\n              products_count: 0\n              files_count: 0\n              notes_count: 2\n              followers_count: 0\n              email_messages_count: 4\n              activities_count: 1\n              done_activities_count: 0\n              undone_activities_count: 1\n              reference_activities_count: 0\n              participants_count: 1\n              expected_close_date: '2019-06-29'\n              last_incoming_mail_time: '2019-05-29 18:21:42'\n              last_outgoing_mail_time: '2019-05-30 03:45:35'\n              label: null\n              stage_order_nr: 2\n              person_name: Person\n              org_name: Organization\n              next_activity_subject: Call\n              next_activity_type: call\n              next_activity_duration: '00:30:00'\n              next_activity_note: Note content\n              formatted_value: '€5,000'\n              weighted_value: 5000\n              formatted_weighted_value: '€5,000'\n              weighted_value_currency: EUR\n              rotten_time: null\n              owner_name: Creator\n              cc_email: company+deal1@pipedrivemail.com\n              org_hidden: false\n              person_hidden: false\n              merge_what_id: 2\n    DealAddFollowerSuccess:\n      description: Add a Follower to a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AddedDealFollower'\n          example:\n            success: true\n            data:\n              user_id: 1\n              id: 2\n              deal_id: 3\n              add_time: '2018-04-11 12:54:43'\n    TeamsSuccess:\n      description: The list of team objects\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Teams'\n          example:\n            success: true\n            data:\n              - id: 1\n                name: Closers\n                description: Berlin office Sales Team\n                manager_id: 4\n                users:\n                  - 2\n                  - 3\n                  - 4\n                  - 5\n                active_flag: 1\n                deleted_flag: 0\n                add_time: '2019-10-07 09:06:09'\n                created_by_user_id: 2\n              - id: 2\n                name: Coffee\n                description: London office Sales Team\n                manager_id: 7\n                users:\n                  - 5\n                  - 8\n                active_flag: 0\n                deleted_flag: 0\n                add_time: '2018-04-11 12:54:43'\n                created_by_user_id: 7\n    TeamSuccess:\n      description: The team data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Teams'\n          example:\n            success: true\n            data:\n              id: 1\n              name: Closers\n              description: Berlin office Sales Team\n              manager_id: 4\n              users:\n                - 2\n                - 3\n                - 5\n              active_flag: 1\n              deleted_flag: 0\n              add_time: '2019-10-07 09:06:09'\n              created_by_user_id: 2\n    TeamsUsersSuccess:\n      description: A list of user IDs within a team\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserIDs'\n          example:\n            success: true\n            data:\n              - 2\n              - 3\n              - 4\n              - 5\n    TeamNotFound:\n      description: Team with specified ID does not exist or is inaccessible\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FailResponse'\n          example:\n            success: false\n            error: Team 1 does not exist\n    ProductsSuccess:\n      description: The list of Products\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Product'\n          example:\n            success: true\n            data:\n              - id: 1\n                name: Mechanical Pencil\n                code: MPENCIL\n                description: null\n                unit: null\n                tax: 0\n                category: null\n                active_flag: true\n                selectable: true\n                first_char: m\n                visible_to: '3'\n                owner_id:\n                  id: 10100010\n                  name: Test User\n                  email: example@test.com\n                  has_pic: true\n                  pic_hash: 5df5332929fab76702207f38b29a5d88\n                  active_flag: true\n                  value: 10100010\n                files_count: null\n                followers_count: 0\n                add_time: '2019-12-19 11:36:49'\n                update_time: '2019-12-19 11:36:49'\n                prices:\n                  - id: 1\n                    product_id: 1\n                    price: 5\n                    currency: EUR\n                    cost: 2\n                    overhead_cost: null\n            additional_data: {}\n            related_objects: null\n            user:\n              '10100010':\n                id: 10100010\n                name: Test User\n                email: example@test.com\n                has_pic: true\n                pic_hash: 5df5332929fab76702207f38b29a5d88\n                active_flag: true\n    ProductDealsSuccess:\n      description: The data of deals that have a Product attached\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BasicDeal'\n          example:\n            success: true\n            data:\n              - id: 5\n                creator_user_id:\n                  id: 10100010\n                  name: Example User\n                  email: example@test.com\n                  has_pic: true\n                  pic_hash: 5df5332929fab76702207f38b29a5d22\n                  active_flag: true\n                  value: 10100010\n                user_id:\n                  id: 10100010\n                  name: Example User\n                  email: example@test.com\n                  has_pic: true\n                  pic_hash: 5df5332929fab76702207f38b29a5d22\n                  active_flag: true\n                  value: 10100010\n                person_id:\n                  active_flag: true\n                  name: Client\n                  email:\n                    - value: client@test.com\n                      primary: true\n                  phone:\n                    - value: '000000000'\n                      primary: true\n                  value: 2\n                org_id: null\n                stage_id: 1\n                title: Example deal\n                value: 5.7\n                currency: EUR\n                add_time: '2019-12-19 14:44:52'\n                update_time: '2019-12-19 14:54:10'\n                stage_change_time: null\n                active: true\n                deleted: false\n                status: open\n                probability: null\n                next_activity_date: '2020-01-01'\n                next_activity_time: '12:00:00'\n                next_activity_id: 4\n                last_activity_id: null\n                last_activity_date: null\n                lost_reason: null\n                visible_to: '3'\n                close_time: null\n                pipeline_id: 1\n                won_time: null\n                first_won_time: null\n                lost_time: null\n                products_count: 1\n                files_count: 0\n                notes_count: 0\n                followers_count: 1\n                email_messages_count: 0\n                activities_count: 1\n                done_activities_count: 0\n                undone_activities_count: 1\n                reference_activities_count: 0\n                participants_count: 1\n                expected_close_date: null\n                last_incoming_mail_time: null\n                last_outgoing_mail_time: null\n                label: null\n                stage_order_nr: 1\n                person_name: Example\n                org_name: null\n                next_activity_subject: Lunch\n                next_activity_type: lunch\n                next_activity_duration: '01:30:00'\n                next_activity_note: null\n                formatted_value: €5.70\n                weighted_value: 5.7\n                formatted_weighted_value: €5.70\n                weighted_value_currency: EUR\n                rotten_time: null\n                owner_name: Client\n                cc_email: example+deal5@pipedrivemail.com\n                org_hidden: false\n                person_hidden: false\n    NewProductFollowerSuccess:\n      description: Adds a follower to a Product\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NewFollowerResponse'\n          example:\n            success: true\n            data:\n              user_id: 10100010\n              id: 1\n              product_id: 2\n              add_time: '2019-12-24 12:02:04'\n    DeleteProductFollowerSuccess:\n      description: Deletes a follower from a Product\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteProductFollowerResponse'\n          example:\n            success: true\n            data:\n              id: 1\n    ProductFollowersSuccess:\n      description: Lists the followers of a Product\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserIDs'\n          example:\n            success: true\n            data:\n              - 10100010\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    ProductPermittedUsersSuccess:\n      description: Lists users permitted to access a Product\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserIDs'\n          example:\n            success: true\n            data:\n              - 10100010\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    FindProductsByNameSuccess:\n      description: Returns data about the Products that were found\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FindProductsByNameResponse'\n          example:\n            success: true\n            data:\n              - id: 1\n                variation_id: '0'\n                name: Mechanical Pencil\n                title: Mechanical Pencil\n                variation_name: ''\n                price: 5\n                price_formatted: €5\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    UpdateProductSuccess:\n      description: Updates Product data\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Product'\n          example:\n            success: true\n            data:\n              id: 1\n              name: Regular Pencil\n              code: MPENCIL\n              description: null\n              unit: null\n              tax: 0\n              category: null\n              active_flag: true\n              selectable: true\n              first_char: r\n              visible_to: '3'\n              owner_id:\n                id: 10100010\n                name: Example User\n                email: example@test.com\n                has_pic: true\n                pic_hash: 5df5332929fab76702207f38b29a5d82\n                active_flag: true\n                value: 10100010\n              files_count: null\n              followers_count: 0\n              add_time: '2019-12-19 11:36:49'\n              update_time: '2019-12-26 13:35:17'\n              prices:\n                EUR:\n                  id: 1\n                  product_id: 1\n                  price: 5\n                  currency: EUR\n                  cost: 2\n                  overhead_cost: 3\n            related_objects:\n              user:\n                '10100010':\n                  id: 10100010\n                  name: Example User\n                  email: example@test.com\n                  has_pic: true\n                  pic_hash: 5df5332929fab76702207f38b29a5d82\n                  active_flag: true\n    GetAllProductFieldsSuccess:\n      description: Get data about all Product Fields\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetAllProductFieldsResponse'\n          example:\n            success: true\n            data:\n              - id: 20\n                key: name\n                name: Name\n                order_nr: 1\n                picklist_data: null\n                field_type: varchar\n                add_time: '2019-11-25 13:34:03'\n                update_time: '2019-11-25 13:34:02'\n                last_updated_by_user_id: null\n                active_flag: true\n                edit_flag: false\n                index_visible_flag: true\n                details_visible_flag: false\n                add_visible_flag: true\n                important_flag: false\n                bulk_edit_allowed: true\n                searchable_flag: false\n                filtering_allowed: true\n                sortable_flag: true\n                use_field: id\n                link: /product/details/\n                mandatory_flag: true\n              - id: 24\n                key: visible_to\n                name: Visible to\n                order_nr: 5\n                field_type: visible_to\n                add_time: '2019-11-25 13:34:03'\n                update_time: '2019-11-25 13:34:02'\n                last_updated_by_user_id: null\n                active_flag: true\n                edit_flag: false\n                index_visible_flag: true\n                details_visible_flag: true\n                add_visible_flag: false\n                important_flag: false\n                bulk_edit_allowed: true\n                searchable_flag: false\n                filtering_allowed: true\n                sortable_flag: true\n                options:\n                  - id: 1\n                    label: Owner \u0026 followers\n                  - id: 3\n                    label: Entire company\n                mandatory_flag: true\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    GetProductFieldSuccess:\n      description: Get the data for a single Product Field\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetProductFieldResponse'\n          example:\n            success: true\n            data:\n              id: 32\n              key: 397b0f545d134b479a5485041b33b0f0f3da2333\n              name: Color\n              order_nr: 13\n              field_type: enum\n              add_time: '2019-12-20 11:01:24'\n              update_time: '2019-12-20 11:01:24'\n              last_updated_by_user_id: 10999910\n              active_flag: true\n              edit_flag: true\n              index_visible_flag: true\n              details_visible_flag: true\n              add_visible_flag: true\n              important_flag: false\n              bulk_edit_allowed: true\n              searchable_flag: false\n              filtering_allowed: true\n              sortable_flag: true\n              options:\n                - id: 9\n                  label: red\n                - id: 10\n                  label: blue\n                - id: 11\n                  label: lilac\n              mandatory_flag: false\n    DeleteMultipleProductFieldsSuccess:\n      description: Mark multiple Product Fields as deleted\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteMultipleProductFieldsResponse'\n          example:\n            success: true\n            data:\n              id:\n                - 32\n                - 35\n    DeleteProductFieldSuccess:\n      description: Delete a Product Field\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteProductFieldResponse'\n          example:\n            success: true\n            data:\n              id: 32\n    ProductFieldNotFound:\n      description: The Product Field with the specified ID does not exist or is inaccessible\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FailResponse'\n          example:\n            success: false\n            error: The field is not found\n    UserSuccess:\n      description: The data of the User\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n          example:\n            success: true\n            data:\n              id: 2\n              name: Jane Doe\n              default_currency: EUR\n              locale: et_EE\n              lang: 1\n              email: jane@pipedrive.com\n              phone: 0000-0002\n              activated: true\n              last_login: '2019-09-11 11:43:54'\n              created: '2019-01-22 10:43:47'\n              modified: '2019-11-21 09:49:50'\n              signup_flow_variation: null\n              has_created_company: false\n              is_admin: 0\n              active_flag: true\n              timezone_name: Europe/Berlin\n              timezone_offset: '+03:00'\n              role_id: 1\n              icon_url: null\n              is_you: false\n    UsersSuccess:\n      description: The list of user objects\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Users'\n          example:\n            success: true\n            data:\n              - id: 1\n                name: John Doe\n                default_currency: EUR\n                locale: et_EE\n                lang: 1\n                email: john@pipedrive.com\n                phone: 0000-0001\n                activated: true\n                last_login: '2019-11-21 08:45:56'\n                created: '2018-11-13 09:16:26'\n                modified: '2019-11-21 08:45:56'\n                signup_flow_variation: google\n                has_created_company: true\n                is_admin: 1\n                active_flag: true\n                timezone_name: Europe/Berlin\n                timezone_offset: '+03:00'\n                role_id: 1\n                icon_url: 'https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png'\n                is_you: true\n              - id: 2\n                name: Jane Doe\n                default_currency: EUR\n                locale: et_EE\n                lang: 1\n                email: jane@pipedrive.com\n                phone: 0000-0002\n                activated: true\n                last_login: '2019-09-11 11:43:54'\n                created: '2019-01-22 10:43:47'\n                modified: '2019-11-21 09:49:50'\n                signup_flow_variation: null\n                has_created_company: false\n                is_admin: 0\n                active_flag: true\n                timezone_name: Europe/Berlin\n                timezone_offset: '+03:00'\n                role_id: 1\n                icon_url: null\n                is_you: false\n    UserNotFound:\n      description: User with specified ID does not exist or is inaccessible\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/FailResponse'\n          example:\n            success: false\n            error: User not found or not accessible.\n    UsersMeSuccess:\n      description: The data of the logged in user\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserMe'\n          example:\n            success: true\n            data:\n              id: 1\n              name: Me\n              default_currency: EUR\n              locale: et_EE\n              lang: 1\n              email: me@pipedrive.com\n              phone: 0000-0000\n              activated: true\n              last_login: '2019-11-21 08:45:56'\n              created: '2018-11-13 09:16:26'\n              modified: '2019-11-21 08:45:56'\n              signup_flow_variation: google\n              has_created_company: true\n              is_admin: 1\n              active_flag: true\n              timezone_name: Europe/Berlin\n              timezone_offset: '+03:00'\n              role_id: 1\n              icon_url: 'https://upload.wikimedia.org/wikipedia/en/thumb/e/e0/WPVG_icon_2016.svg/1024px-WPVG_icon_2016.svg.png'\n              is_you: true\n              company_id: 54235233\n              company_name: Pipedrive\n              company_domain: pipedrive-12g53f\n              company_country: EE\n              company_industry: IT Services\n              language:\n                language_code: en\n                country_code: US\n    UsersFollowersGetSuccess:\n      description: The list of user IDs\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserIDs'\n          example:\n            success: true\n            data:\n              - 2\n              - 5\n              - 8\n    UserConnectionsGetSuccess:\n      description: The data of user connections\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserConnections'\n          example:\n            success: true\n            data:\n              google: awesomeid-123-4567890\n    CurrenciesGetSuccess:\n      description: The list of supported currencies\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Currencies'\n          example:\n            success: true\n            data:\n              - id: 1\n                code: EUR\n                name: Euro\n                decimal_points: 2\n                symbol: €\n                active_flag: true\n                is_custom_flag: false\n              - id: 2\n                code: USD\n                name: US Dollar\n                decimal_points: 2\n                symbol: $\n                active_flag: true\n                is_custom_flag: false\n    PermissionSets:\n      description: Get all permissions\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PermissionSets'\n          example:\n            success: true\n            data:\n              - id: 1\n                name: Admin user\n                assignment_count: 1\n              - id: 2\n                name: Regular user\n                assignment_count: 3\n              - id: 3\n                name: Manager\n                assignment_count: 0\n    PermissionSetID:\n      description: The Permission Set of a specific User ID\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SinglePermissionSetsItem'\n          example:\n            success: true\n            data:\n              - id: 2\n                name: Regular user\n                assignment_count: 3\n                contents:\n                  - can_add_products\n                  - can_bulk_edit_items\n                  - can_change_visibility_of_items\n                  - can_delete_activities\n                  - can_edit_products\n                  - can_edit_shared_filters\n                  - can_export_data_from_lists\n                  - can_see_deals_list_summary\n                  - can_see_other_users\n                  - can_share_filters\n                  - can_use_api\n                  - can_use_email_tracking\n    Assignments:\n      description: The Assignments of a specific User ID\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserAssignmentsToPermissionSet'\n          example:\n            data:\n              - id: 3\n                user_id: 10\n                permission_set_id: 2\n                name: Regular user\n    NotFound:\n      description: 'If the User ID has no assignments, then it will return NotFound'\n    DealGetSuccess:\n      description: Get a Deal by its ID\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetDeal'\n          example:\n            success: true\n            data:\n              id: 1\n              creator_user_id:\n                id: 9258618\n                name: Creator\n                email: creator@pipedrive.com\n                has_pic: false\n                pic_hash: null\n                active_flag: true\n                value: 9258618\n              user_id:\n                id: 9258618\n                name: Creator\n                email: creator@pipedrive.com\n                has_pic: false\n                pic_hash: null\n                active_flag: true\n                value: 9258618\n              person_id:\n                active_flag: true\n                name: Person\n                email:\n                  - label: work\n                    value: person@pipedrive.com\n                    primary: true\n                phone:\n                  - label: work\n                    value: '37244499911'\n                    primary: true\n                value: 1101\n              org_id:\n                name: Organization\n                people_count: 2\n                owner_id: 9258618\n                address: null\n                active_flag: true\n                cc_email: org@pipedrivemail.com\n                value: 5\n              stage_id: 2\n              title: Deal One\n              value: 5000\n              currency: EUR\n              add_time: '2019-05-29 04:21:51'\n              update_time: '2019-11-28 16:19:50'\n              stage_change_time: '2019-11-28 15:41:22'\n              active: true\n              deleted: false\n              status: open\n              probability: null\n              next_activity_date: '2019-11-29'\n              next_activity_time: '11:30:00'\n              next_activity_id: 128\n              last_activity_id: null\n              last_activity_date: null\n              lost_reason: null\n              visible_to: '1'\n              close_time: null\n              pipeline_id: 1\n              won_time: '2019-11-27 11:40:36'\n              first_won_time: '2019-11-27 11:40:36'\n              lost_time: null\n              products_count: 0\n              files_count: 0\n              notes_count: 2\n              followers_count: 0\n              email_messages_count: 4\n              activities_count: 1\n              done_activities_count: 0\n              undone_activities_count: 1\n              reference_activities_count: 0\n              participants_count: 1\n              expected_close_date: '2019-06-29'\n              last_incoming_mail_time: '2019-05-29 18:21:42'\n              last_outgoing_mail_time: '2019-05-30 03:45:35'\n              label: null\n              stage_order_nr: 2\n              person_name: Person\n              org_name: Organization\n              next_activity_subject: Call\n              next_activity_type: call\n              next_activity_duration: '00:30:00'\n              next_activity_note: Note content\n              formatted_value: '€5,000'\n              weighted_value: 5000\n              formatted_weighted_value: '€5,000'\n              weighted_value_currency: EUR\n              rotten_time: null\n              owner_name: Creator\n              cc_email: company+deal1@pipedrivemail.com\n              org_hidden: false\n              person_hidden: false\n              average_time_to_won:\n                'y': 0\n                m: 0\n                d: 0\n                h: 0\n                i: 20\n                s: 49\n                total_seconds: 1249\n              average_stage_progress: 4.99\n              age:\n                'y': 0\n                m: 6\n                d: 14\n                h: 8\n                i: 57\n                s: 26\n                total_seconds: 17139446\n              stay_in_pipeline_stages:\n                times_in_stages:\n                  '1': 15721267\n                  '2': 1288449\n                  '3': 4368\n                  '4': 3315\n                  '5': 26460\n                order_of_stages:\n                  - 1\n                  - 2\n                  - 3\n                  - 4\n                  - 5\n              last_activity: null\n              next_activity: null\n            additional_data:\n              dropbox_email: company+deal1@pipedrivemail.com\n            related_objects:\n              user:\n                '9258618':\n                  id: 9258618\n                  name: Creator\n                  email: creator@pipedrive.com\n                  has_pic: false\n                  pic_hash: null\n                  active_flag: true\n              organization:\n                '2':\n                  id: 2\n                  name: Organization\n                  people_count: 2\n                  owner_id: 9258618\n                  address: 'Mustamäe tee 3a, 10615 Tallinn'\n                  active_flag: true\n                  cc_email: org@pipedrivemail.com\n              person:\n                '1101':\n                  active_flag: true\n                  id: 1101\n                  name: Person\n                  email:\n                    - label: work\n                      value: person@pipedrive.com\n                      primary: true\n                  phone:\n                    - label: work\n                      value: '3421787767'\n                      primary: true\n    DealsGetSuccess:\n      description: Get all Deals\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetDeals'\n          example:\n            success: true\n            data:\n              - id: 1\n                creator_user_id:\n                  id: 9258618\n                  name: Creator\n                  email: creator@pipedrive.com\n                  has_pic: false\n                  pic_hash: null\n                  active_flag: true\n                  value: 9258618\n                user_id:\n                  id: 9258618\n                  name: Creator\n                  email: creator@pipedrive.com\n                  has_pic: false\n                  pic_hash: null\n                  active_flag: true\n                  value: 9258618\n                person_id:\n                  active_flag: true\n                  name: Person\n                  email:\n                    - label: work\n                      value: person@pipedrive.com\n                      primary: true\n                  phone:\n                    - label: work\n                      value: '37244499911'\n                      primary: true\n                  value: 1101\n                org_id:\n                  name: Organization\n                  people_count: 2\n                  owner_id: 9258618\n                  address: 'Mustamäe tee 3a, 10615 Tallinn'\n                  active_flag: true\n                  cc_email: org@pipedrivemail.com\n                  value: 5\n                stage_id: 2\n                title: Deal One\n                value: 5000\n                currency: EUR\n                add_time: '2019-05-29 04:21:51'\n                update_time: '2019-11-28 16:19:50'\n                stage_change_time: '2019-11-28 15:41:22'\n                active: true\n                deleted: false\n                status: open\n                probability: null\n                next_activity_date: '2019-11-29'\n                next_activity_time: '11:30:00'\n                next_activity_id: 128\n                last_activity_id: null\n                last_activity_date: null\n                lost_reason: null\n                visible_to: '1'\n                close_time: null\n                pipeline_id: 1\n                won_time: '2019-11-27 11:40:36'\n                first_won_time: '2019-11-27 11:40:36'\n                lost_time: null\n                products_count: 0\n                files_count: 0\n                notes_count: 2\n                followers_count: 0\n                email_messages_count: 4\n                activities_count: 1\n                done_activities_count: 0\n                undone_activities_count: 1\n                reference_activities_count: 0\n                participants_count: 1\n                expected_close_date: '2019-06-29'\n                last_incoming_mail_time: '2019-05-29 18:21:42'\n                last_outgoing_mail_time: '2019-05-30 03:45:35'\n                label: null\n                stage_order_nr: 2\n                person_name: Person\n                org_name: Organization\n                next_activity_subject: Call\n                next_activity_type: call\n                next_activity_duration: '00:30:00'\n                next_activity_note: Note content\n                formatted_value: '€5,000'\n                weighted_value: 5000\n                formatted_weighted_value: '€5,000'\n                weighted_value_currency: EUR\n                rotten_time: null\n                owner_name: Creator\n                cc_email: company+deal1@pipedrivemail.com\n                org_hidden: false\n                person_hidden: false\n            related_objects:\n              user:\n                '9258618':\n                  id: 9258618\n                  name: Creator\n                  email: creator@pipedrive.com\n                  has_pic: false\n                  pic_hash: null\n                  active_flag: true\n              organization:\n                '5':\n                  id: 5\n                  name: Organization\n                  people_count: 2\n                  owner_id: 9258618\n                  address: 'Mustamäe tee 3a, 10615 Tallinn'\n                  active_flag: true\n                  cc_email: org@pipedrivemail.com\n              person:\n                '1101':\n                  active_flag: true\n                  id: 1101\n                  name: Person\n                  email:\n                    - label: work\n                      value: person@pipedrive.com\n                      primary: true\n                  phone:\n                    - label: work\n                      value: '3421787767'\n                      primary: true\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n                next_start: 1\n    AddProductToDealSuccess:\n      description: Add a Product to the Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetAddProductAttachementDetails'\n          example:\n            success: true\n            data:\n              id: 1\n              company_id: 123\n              deal_id: 456\n              order_nr: 1\n              product_id: 789\n              product_variation_id: 555\n              item_price: 300\n              discount_percentage: 5\n              duration: 1\n              duration_unit: null\n              sum_no_discount: 0\n              sum: 2850\n              currency: USD\n              enabled_flag: true\n              add_time: '2019-11-27 11:40:36'\n              last_edit: null\n              comments: This is a product comment\n              active_flag: true\n              tax: 10\n              name: Product name\n              quantity: 5\n              product_attachment_id: 12\n    UpdateProductDetailsSuccess:\n      description: Update Product attachment details\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetProductAttachementDetails'\n          example:\n            success: true\n            data:\n              id: 1\n              company_id: 123\n              deal_id: 456\n              order_nr: 1\n              product_id: 789\n              product_variation_id: 555\n              item_price: 300\n              discount_percentage: 5\n              duration: 1\n              duration_unit: null\n              sum_no_discount: 0\n              sum: 2850\n              currency: USD\n              enabled_flag: true\n              add_time: '2019-11-27 11:40:36'\n              last_edit: null\n              comments: This is a product comment\n              active_flag: true\n              tax: 10\n              name: Product name\n              quantity: 5\n    DeleteMultipleDealsSuccess:\n      description: Delete multiple deals in bulk\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteMultipleDeals'\n          example:\n            success: true\n            data:\n              id:\n                - 123\n                - 456\n    DeleteDealSuccess:\n      description: Delete a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteDeal'\n          example:\n            success: true\n            data:\n              id: 123\n    DeleteDealFollowerSuccess:\n      description: Delete a Follower from a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteDealFollower'\n          example:\n            success: true\n            data:\n              id: 123\n    DeleteDealParticipantSuccess:\n      description: Delete a Participant from a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteDealParticipant'\n          example:\n            success: true\n            data:\n              id: 123\n    DeleteDealProductSuccess:\n      description: Delete an attached Product from a Deal\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteDealProduct'\n          example:\n            success: true\n            data:\n              id: 123\n              product_attachment_id: 123\n    DealsGetByNameSuccess:\n      description: Get Deals by name\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetDealsByName'\n          example:\n            success: true\n            data:\n              - id: 1\n                title: Deal One\n                user_id: 9258618\n                visible_to: '3'\n                status: open\n                value: 100\n                currency: USD\n                person_name: Person\n                person_id: 10\n                organization_name: Organization\n                organization_id: 14\n                formatted_value: US$100\n                cc_email: company+deal38@pipedrivemail.com\n            additional_data:\n              pagination:\n                start: 0\n                limit: 100\n                more_items_in_collection: false\n    DealSummaryGetSuccess:\n      description: Get the summary of the Deals\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetDealsSummary'\n          example:\n            success: true\n            data:\n              values_total:\n                EUR:\n                  value: 10\n                  count: 2\n                  value_converted: 11.1\n                  value_formatted: €10\n                  value_converted_formatted: US$11.10\n                USD:\n                  value: 30\n                  count: 3\n                  value_converted: 30\n                  value_formatted: US$30\n                  value_converted_formatted: US$3\n              weighted_values_total:\n                EUR:\n                  value: 10\n                  count: 2\n                  value_formatted: €10\n                USD:\n                  value: 30\n                  count: 3\n                  value_formatted: US$30\n              total_count: 5\n              total_currency_converted_value: 41.1\n              total_weighted_currency_converted_value: 41.1\n              total_currency_converted_value_formatted: US$41.1\n              total_weighted_currency_converted_value_formatted: US$41.1\n    DealsTimelineGetSuccess:\n      description: 'Get open and won Deals, grouped by the defined interval of time'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetDealsTimeline'\n          example:\n            success: true\n            data:\n              - period_start: '2019-12-01 00:00:00'\n                period_end: '2019-12-31 23:59:59'\n                deals:\n                  - id: 1\n                    creator_user_id: 9258618\n                    user_id: 9258618\n                    person_id: 1101\n                    org_id: 5\n                    stage_id: 2\n                    title: Deal One\n                    value: 5000\n                    currency: EUR\n                    add_time: '2019-05-29 04:21:51'\n                    update_time: '2019-11-28 16:19:50'\n                    stage_change_time: '2019-11-28 15:41:22'\n                    active: true\n                    deleted: false\n                    status: open\n                    probability: null\n                    next_activity_date: '2019-11-29'\n                    next_activity_time: '11:30:00'\n                    next_activity_id: 128\n                    last_activity_id: null\n                    last_activity_date: null\n                    lost_reason: null\n                    visible_to: '1'\n                    close_time: null\n                    pipeline_id: 1\n                    won_time: '2019-11-27 11:40:36'\n                    first_won_time: '2019-11-27 11:40:36'\n                    lost_time: null\n                    products_count: 0\n                    files_count: 0\n                    notes_count: 2\n                    followers_count: 0\n                    email_messages_count: 4\n                    activities_count: 1\n                    done_activities_count: 0\n                    undone_activities_count: 1\n                    reference_activities_count: 0\n                    participants_count: 1\n                    expected_close_date: '2019-06-29'\n                    last_incoming_mail_time: '2019-05-29 18:21:42'\n                    last_outgoing_mail_time: '2019-05-30 03:45:35'\n                    label: null\n                    stage_order_nr: 2\n                    person_name: Person\n                    org_name: Organization\n                    next_activity_subject: Call\n                    next_activity_type: call\n                    next_activity_duration: '00:30:00'\n                    next_activity_note: Note content\n                    formatted_value: '€5,000'\n                    weighted_value: 5000\n                    formatted_weighted_value: '€5,000'\n                    weighted_value_currency: EUR\n                    rotten_time: null\n                    owner_name: Creator\n                    cc_email: company+deal1@pipedrivemail.com\n                    org_hidden: false\n                    person_hidden: false\n                totals:\n                  count: 2\n                  values:\n                    EUR: 100\n                    USD: 220\n                  weighted_values:\n                    EUR: 100\n                    USD: 2200\n                  open_count: 1\n                  open_values:\n                    EUR: 100\n                  weighted_open_values:\n                    EUR: 100\n                  won_count: 1\n                  won_values:\n                    USD: 2200\n    MailThreadGetSuccess:\n      description: Get mail threads\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MailThread'\n          example:\n            success: true\n            data:\n              - id: 1\n                parties:\n                  to:\n                    - id: 2\n                      name: ''\n                      latest_sent: false\n                      email_address: example@test.com\n                      message_time: 1574677850000\n                      linked_person_id: 3\n                      linked_person_name: Tester\n                      linked_organization_id: null\n                      mail_message_party_id: 5318\n                  from:\n                    - id: 3\n                      name: ''\n                      latest_sent: false\n                      email_address: example@test.com\n                      message_time: 1574677850000\n                      linked_person_id: 2\n                      linked_person_name: Tester\n                      linked_organization_id: null\n                      mail_message_party_id: 5318\n                drafts_parties: []\n                folders:\n                  - inbox\n                account_id: 123412jhfsaa221\n                user_id: 232\n                version: 9\n                subject: Example\n                snippet: Example Snippet\n                snippet_draft: null\n                snippet_sent: ''\n                has_attachments_flag: 1\n                has_inline_attachments_flag: 1\n                has_real_attachments_flag: 0\n                has_draft_flag: 0\n                has_sent_flag: 0\n                archived_flag: 0\n                deleted_flag: 0\n                shared_flag: 1\n                synced_flag: 1\n                external_deleted_flag: 0\n                smart_bcc_flag: 0\n                first_message_to_me_flag: 1\n                mail_link_tracking_enabled_flag: 0\n                last_message_timestamp: '2019-11-20T20:20:46.000Z'\n                first_message_timestamp: '2019-11-20T17:40:46.000Z'\n                last_message_sent_timestamp: null\n                last_message_received_timestamp: '2019-11-20T20:20:46.000Z'\n                add_time: '2019-11-20T17:40:59.000Z'\n                update_time: '2019-11-20T20:21:22.000Z'\n                deal_id: null\n                deal_status: null\n                write_flag: true\n                all_messages_sent_flag: 0\n    MailThreadGetOneSuccess:\n      description: Get mail threads\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MailThreadOne'\n          example:\n            success: true\n            data:\n              id: 1\n              parties:\n                - to:\n                    id: 2\n                    name: ''\n                    latest_sent: false\n                    email_address: example@test.com\n                    message_time: 1574677850000\n                    linked_person_id: 3\n                    linked_person_name: Tester\n                    linked_organization_id: null\n                    mail_message_party_id: 5318\n                - from:\n                    id: 3\n                    name: ''\n                    latest_sent: false\n                    email_address: example@test.com\n                    message_time: 1574677850000\n                    linked_person_id: 2\n                    linked_person_name: Tester\n                    linked_organization_id: null\n                    mail_message_party_id: 5318\n              drafts_parties: []\n              folders:\n                - inbox\n              account_id: 123412jhfsaa221\n              user_id: 232\n              version: 9\n              subject: Example\n              snippet: Example Snippet\n              snippet_draft: null\n              snippet_sent: ''\n              has_attachments_flag: 1\n              has_inline_attachments_flag: 1\n              has_real_attachments_flag: 0\n              has_draft_flag: 0\n              has_sent_flag: 0\n              archived_flag: 0\n              deleted_flag: 0\n              shared_flag: 1\n              synced_flag: 1\n              external_deleted_flag: 0\n              smart_bcc_flag: 0\n              first_message_to_me_flag: 1\n              mail_link_tracking_enabled_flag: 0\n              last_message_timestamp: '2019-11-20T20:20:46.000Z'\n              first_message_timestamp: '2019-11-20T17:40:46.000Z'\n              last_message_sent_timestamp: null\n              last_message_received_timestamp: '2019-11-20T20:20:46.000Z'\n              add_time: '2019-11-20T17:40:59.000Z'\n              update_time: '2019-11-20T20:21:22.000Z'\n              deal_id: null\n              deal_status: null\n              write_flag: true\n              all_messages_sent_flag: 0\n    MailThreadGetMailMessagesSuccess:\n      description: Get mail messages from thread\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MailThreadMessages'\n          example:\n            success: true\n            data:\n              - id: 1\n                from:\n                  - id: 1\n                    email_address: example@email.com\n                    name: Example Message\n                    linked_person_id: 4\n                    linked_person_name: ''\n                    mail_message_party_id: 3\n                to:\n                  - id: 4\n                    email_address: example@email.com\n                    name: Example Message\n                    linked_person_id: 1\n                    linked_person_name: ''\n                    mail_message_party_id: 3\n                cc: []\n                bcc: []\n                body_url: 'http://this_would_be_the_link.cloudfront.net/'\n                account_id: iuaousdp77asdadah\n                user_id: 777\n                mail_thread_id: 2\n                subject: The Subject\n                snippet: Snippet from the email\n                mail_tracking_status: null\n                mail_link_tracking_enabled_flag: 0\n                read_flag: 1\n                draft: null\n                draft_flag: 0\n                synced_flag: 1\n                deleted_flag: 0\n                has_body_flag: 1\n                sent_flag: 0\n                sent_from_pipedrive_flag: 0\n                smart_bcc_flag: 0\n                message_time: '2019-08-07T21:15:08.000Z'\n                add_time: '2019-08-07T21:34:35.000Z'\n                update_time: '2019-08-07T21:34:35.000Z'\n                has_attachments_flag: 0\n                has_inline_attachments_flag: 0\n                has_real_attachments_flag: 0\n                write_flag: true\n    MailThreadDeleteSuccess:\n      description: Marks mail thread as deleted.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MailThreadDelete'\n          example:\n            data: null\n            success: true\n            statusCode: 2000\n            statusText: Success\n            service: email-api\n    MailThreadPutSuccess:\n      description: Updates the properties of a mail thread.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MailThreadPut'\n          example:\n            success: true\n            data:\n              - id: 1\n                folders:\n                  - inbox\n                account_id: 12123qwaesda1\n                user_id: 9\n                version: 13\n                subject: '[EXAMPLE] Subject'\n                snippet: '[EXAMPLE] Snippet'\n                snippet_draft: null\n                snippet_sent: ''\n                message_count: 7\n                read_flag: 0\n                mail_tracking_status: null\n                has_attachments_flag: 1\n                has_inline_attachments_flag: 1\n                has_real_attachments_flag: 0\n                has_draft_flag: 0\n                has_sent_flag: 0\n                archived_flag: 0\n                deleted_flag: 0\n                shared_flag: 1\n                synced_flag: 1\n                external_deleted_flag: 0\n                smart_bcc_flag: 0\n                first_message_to_me_flag: 1\n                mail_link_tracking_enabled_flag: 0\n                last_message_timestamp: '2019-11-25T10:30:50.000Z'\n                first_message_timestamp: '2019-11-25T08:40:50.000Z'\n                last_message_sent_timestamp: null\n                last_message_received_timestamp: '2019-11-25T10:30:50.000Z'\n                add_time: '2019-11-25T08:41:10.000Z'\n                update_time: '2019-11-25T10:31:34.000Z'\n                deal_id: null\n                deal_status: null\n                write_flag: true\n                all_messages_sent_flag: 0\n    NotesGetSuccess:\n      description: Get all Notes\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetNotes'\n          example:\n            success: true\n            data:\n              - id: 1\n                active_flag: true\n                add_time: '2019-12-09 13:59:21'\n                content: abc\n                deal:\n                  title: Deal title\n                deal_id: 1\n                last_update_user_id: 1\n                org_id: 1\n                organization:\n                  name: Organization name\n                person:\n                  name: Person name\n                person_id: 1\n                pinned_to_deal_flag: true\n                pinned_to_organization_flag: false\n                pinned_to_person_flag: false\n                update_time: '2019-12-09 14:26:11'\n                user:\n                  email: user@email.com\n                  icon_url: 'https://iconurl.net/profile_120x120_123.jpg'\n                  is_you: true\n                  name: User Name\n                user_id: 1\n            additional_data:\n              limit: 100\n              more_items_in_collection: false\n              start: 0\n    NoteGetPostPutSuccess:\n      description: 'Add, update or get a Note'\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PostNote'\n          example:\n            success: true\n            data:\n              id: 1\n              active_flag: true\n              add_time: '2019-12-09 13:59:21'\n              content: abc\n              deal:\n                title: Deal title\n              deal_id: 1\n              last_update_user_id: 1\n              org_id: 1\n              organization:\n                name: Organization name\n              person:\n                name: Person name\n              person_id: 1\n              pinned_to_deal_flag: true\n              pinned_to_organization_flag: false\n              pinned_to_person_flag: false\n              update_time: '2019-12-09 14:26:11'\n              user:\n                email: user@email.com\n                icon_url: 'https://iconurl.net/profile_120x120_123.jpg'\n                is_you: true\n                name: User Name\n              user_id: 1\n    NoteDeleteSuccess:\n      description: Delete a Note\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/DeleteNote'\n          example:\n            success: true\n            data: true\n    GlobalMessagesGetSuccess:\n      description: Get all Global Messages\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GlobalMessageGet'\n          example:\n            success: true\n            data:\n              - id: 7473816\n                user_id: 10378031\n                company_id: 735263\n                type_info:\n                  message_type: trial_expiration_due\n                  dismissible_flag: 0\n                  priority: 0\n                user_data: {}\n                html: '\u003cspan\u003eYour company''s trial is about to expire. To continue using Pipedrive after 6 September 2019, please \u003ca href=\"/settings/change_billing\"\u003e enter your billing details \u003c/a\u003e\u003c/span\u003e'\n            handle_time: 0.0016720294952392578\n            _req_time_ctx_ms: {}\n    GlobalMessageDeleteSuccess:\n      description: Removes a Global Message by ID\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GlobalMessageDelete'\n          example:\n            success: true\n            data:\n              id: 7474312\n              user_id: 10378031\n              company_id: 735263\n              type_info:\n                message_type: failed_google_token\n                dismissible_flag: 1\n                priority: 6\n              user_data: {}\n              html: '\u003cspan\u003eYour Google authorization has expired.\u003c/span\u003e \u003ca href=\"https://app.pipedrive.dev/settings/personal/google\"\u003e\u003cspan\u003ePlease reconnect\u003c/span\u003e\u003c/a\u003e'\n            handle_time: 0.11787199974060059\n            _req_time_ctx_ms: {}\n  schemas:\n    FilterType:\n      type: string\n      enum:\n        - deals\n        - org\n        - people\n        - products\n        - activity\n    IconKey:\n      type: string\n      description: Icon graphic to use for representing this activity type.\n      enum:\n        - task\n        - email\n        - meeting\n        - deadline\n        - call\n        - lunch\n        - calendar\n        - downarrow\n        - document\n        - smartphone\n        - camera\n        - scissors\n        - cogs\n        - bubble\n        - uparrow\n        - checkbox\n        - signpost\n        - shuffle\n        - addressbook\n        - linegraph\n        - picture\n        - car\n        - world\n        - search\n        - clip\n        - sound\n        - brush\n        - key\n        - padlock\n        - pricetag\n        - suitcase\n        - finish\n        - plane\n        - loop\n        - wifi\n        - truck\n        - cart\n        - bulb\n        - bell\n        - presentation\n    FieldType:\n      type: object\n      required:\n        - field_type\n      properties:\n        field_type:\n          type: string\n          enum:\n            - varchar\n            - varchar_auto\n            - text\n            - double\n            - monetary\n            - date\n            - set\n            - enum\n            - user\n            - org\n            - people\n            - phone\n            - time\n            - timerange\n            - daterange\n          description: 'Type of the field.\u003cdl class=\"fields-list\"\u003e\u003cdt\u003evarchar\u003c/dt\u003e\u003cdd\u003eText (up to 255 characters)\u003c/dd\u003e\u003cdt\u003evarchar_auto\u003c/dt\u003e\u003cdd\u003eAutocomplete text (up to 255 characters)\u003c/dd\u003e\u003cdt\u003etext\u003c/dt\u003e\u003cdd\u003eLong text (up to 65k characters)\u003c/dd\u003e\u003cdt\u003edouble\u003c/dt\u003e\u003cdd\u003eNumeric value\u003c/dd\u003e\u003cdt\u003emonetary\u003c/dt\u003e\u003cdd\u003eMonetary field (has a numeric value and a currency value)\u003c/dd\u003e\u003cdt\u003edate\u003c/dt\u003e\u003cdd\u003eDate (format YYYY-MM-DD)\u003c/dd\u003e\u003cdt\u003eset\u003c/dt\u003e\u003cdd\u003eOptions field with a possibility of having multiple chosen options\u003c/dd\u003e\u003cdt\u003eenum\u003c/dt\u003e\u003cdd\u003eOptions field with a single possible chosen option\u003c/dd\u003e\u003cdt\u003euser\u003c/dt\u003e\u003cdd\u003eUser field (contains a user ID of another Pipedrive user)\u003c/dd\u003e\u003cdt\u003eorg\u003c/dt\u003e\u003cdd\u003eOrganization field (contains an organization ID which is stored on the same account)\u003c/dd\u003e\u003cdt\u003epeople\u003c/dt\u003e\u003cdd\u003ePerson field (contains a person ID which is stored on the same account)\u003c/dd\u003e\u003cdt\u003ephone\u003c/dt\u003e\u003cdd\u003ePhone field (up to 255 numbers and/or characters)\u003c/dd\u003e\u003cdt\u003etime\u003c/dt\u003e\u003cdd\u003eTime field (format HH:MM:SS)\u003c/dd\u003e\u003cdt\u003etimerange\u003c/dt\u003e\u003cdd\u003eTime-range field (has a start time and end time value, both HH:MM:SS)\u003c/dd\u003e\u003cdt\u003edaterange\u003c/dt\u003e\u003cdd\u003eDate-range field (has a start date and end date value, both YYYY-MM-DD)\u003c/dd\u003e\u003c/dl\u003e'\n    IntegerId:\n      type: integer\n    NumberBoolean:\n      type: number\n      enum:\n        - 0\n        - 1\n    NumberBooleanDefault0:\n      allOf:\n        - $ref: '#/components/schemas/NumberBoolean'\n        - type: number\n          default: 0\n    NumberBooleanDefault1:\n      allOf:\n        - $ref: '#/components/schemas/NumberBoolean'\n        - type: number\n          default: 1\n    RequestSuccessBoolean:\n      type: boolean\n      description: If the request was successful or not\n    ResponseSuccessBoolean:\n      type: boolean\n      description: If the response is successful or not\n    MailMessage:\n      allOf:\n        - $ref: '#/components/schemas/MailServiceBaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/MailMessageData'\n    MailMessageData:\n      type: object\n      properties:\n        id:\n          description: ID of the mail message.\n          type: integer\n        from:\n          type: array\n          description: The array of mail message sender (object)\n          items:\n            $ref: '#/components/schemas/MailParticipant'\n        to:\n          type: array\n          description: The array of mail message receiver (object)\n          items:\n            $ref: '#/components/schemas/MailParticipant'\n        cc:\n          type: array\n          description: The array of mail message copies (object)\n          items:\n            $ref: '#/components/schemas/MailParticipant'\n        bcc:\n          type: array\n          description: The array of mail message blind copies (object)\n          items:\n            $ref: '#/components/schemas/MailParticipant'\n        body_url:\n          type: string\n          description: The mail message body URL\n        account_id:\n          type: string\n          description: The connection account ID\n        user_id:\n          type: integer\n          description: ID of the user whom mail message will be assigned to\n        mail_thread_id:\n          type: integer\n          description: ID of the mail message thread\n        subject:\n          type: string\n          description: The subject of mail message\n        snippet:\n          type: string\n          description: The snippet of mail message. Snippet length is up to 225 characters.\n        mail_tracking_status:\n          type: string\n          nullable: true\n          description: The status of tracking mail message. Value is null if tracking is not enabled.\n          enum:\n            - opened\n            - not opened\n        mail_link_tracking_enabled_flag:\n          description: Whether the link tracking in mail message body is enabled.\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        read_flag:\n          description: Whether the mail message is read or not by the user\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        draft:\n          type: string\n          description: 'If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise null.'\n        draft_flag:\n          description: Whether the mail message is a draft or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        synced_flag:\n          description: Whether the mail message is synced with the provider or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        deleted_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n          description: Whether the mail message is deleted or not\n        has_body_flag:\n          description: Whether the mail message has a body or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        sent_flag:\n          description: Whether the mail message has been sent or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        sent_from_pipedrive_flag:\n          description: Whether the mail message has been sent from Pipedrive app or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        smart_bcc_flag:\n          description: Whether the mail message has been created by Smart Email BCC feature or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        message_time:\n          type: string\n          format: date\n          description: Creation or receival time of the mail message\n        add_time:\n          type: string\n          format: date\n          description: The insertion into the database time of the mail message\n        update_time:\n          type: string\n          format: date\n          description: The updating time in the database of the mail message\n        has_attachments_flag:\n          description: Whether the mail message has an attachment or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        has_inline_attachments_flag:\n          description: Whether the mail message has an inline attachment or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        has_real_attachments_flag:\n          description: Whether the mail message has an attachment (which is not inline) or not\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        write_flag:\n          type: boolean\n          description: We strongly advise you to avoid the use of this property. We will soon deprecate this property.\n    MailParticipant:\n      type: object\n      properties:\n        id:\n          description: ID of the mail participant\n          type: integer\n        email_address:\n          description: Mail address of the mail participant\n          type: string\n        name:\n          description: Name of the mail participant\n          type: string\n        linked_person_id:\n          description: ID of the linked person to the mail message\n          type: integer\n        linked_person_name:\n          description: Name of the linked person to the mail message\n          type: string\n        mail_message_party_id:\n          description: ID of the mail message participant\n          type: integer\n    MailServiceBaseResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        statusCode:\n          description: The email service specific status code and it is returned through the response body.\n          type: integer\n        statusText:\n          description: The status text of the response.\n          type: string\n        service:\n          description: The service name of the response.\n    Activity:\n      type: object\n      required:\n        - subject\n        - type\n      properties:\n        subject:\n          description: Subject of the activity\n          type: string\n        done:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n            - description: 'Whether the activity is done or not. 0 = Not done, 1 = Done'\n        type:\n          description: Type of the activity. This is in correlation with the key_string parameter of ActivityTypes.\n          type: string\n        due_date:\n          description: 'Due date of the activity. Format: YYYY-MM-DD'\n          type: string\n          format: date\n        due_time:\n          description: 'Due time of the activity in UTC. Format: HH:MM'\n          type: string\n        duration:\n          description: 'Duration of the activity. Format: HH:MM'\n          type: string\n        user_id:\n          description: 'ID of the user whom the activity will be assigned to. If omitted, the activity will be assigned to the authorized user.'\n          type: integer\n        deal_id:\n          description: ID of the deal this activity will be associated with\n          type: integer\n        person_id:\n          description: ID of the person this activity will be associated with\n          type: integer\n        participants:\n          description: 'List of multiple persons (participants) this activity will be associated with. If omitted, single participant from person_id field is used. It requires a structure as follows: [{\"person_id\":1,\"primary_flag\":true}]'\n          type: string\n        org_id:\n          description: ID of the organization this activity will be associated with\n          type: integer\n        note:\n          description: Note of the activity (HTML format)\n          type: string\n    BasicDeal:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Deal title\n        value:\n          type: string\n          description: 'Value of the deal. If omitted, value will be set to 0.'\n        currency:\n          type: string\n          description: 'Currency of the deal. Accepts a 3-character currency code. If omitted, currency will be set to the default currency of the authorized user.'\n        user_id:\n          type: integer\n          description: 'ID of the user who will be marked as the owner of this deal. If omitted, the authorized user ID will be used.'\n        person_id:\n          type: integer\n          description: ID of the person this deal will be associated with\n        org_id:\n          type: integer\n          description: ID of the organization this deal will be associated with\n        stage_id:\n          type: integer\n          description: 'ID of the stage this deal will be placed in a pipeline (note that you can''t supply the ID of the pipeline as this will be assigned automatically based on stage_id). If omitted, the deal will be placed in the first stage of the default pipeline.'\n        status:\n          type: string\n          enum:\n            - open\n            - won\n            - lost\n            - deleted\n          description: 'open = Open, won = Won, lost = Lost, deleted = Deleted. If omitted, status will be set to open.'\n        probability:\n          type: number\n          description: Deal success probability percentage. Used/shown only when deal_probability for the pipeline of the deal is enabled.\n        lost_reason:\n          type: string\n          description: Optional message about why the deal was lost (to be used when status=lost)\n        visible_to:\n          allOf:\n            - $ref: '#/components/schemas/VisibleTo'\n          description: 'Visibility of the deal. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.\u003cdl class=\"fields-list\"\u003e\u003cdt\u003e1\u003c/dt\u003e\u003cdd\u003eOwner \u0026amp; followers (private)\u003c/dd\u003e\u003cdt\u003e3\u003c/dt\u003e\u003cdd\u003eEntire company (shared)\u003c/dd\u003e\u003c/dl\u003e'\n    VisibleTo:\n      type: string\n      enum:\n        - '1'\n        - '3'\n    NewDeal:\n      allOf:\n        - $ref: '#/components/schemas/BasicDeal'\n        - type: object\n          required:\n            - title\n          properties:\n            add_time:\n              type: string\n              description: 'Optional creation date \u0026 time of the deal in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'\n    DeleteMultipleDeals:\n      allOf:\n        - type: object\n          properties:\n            success:\n              $ref: '#/components/schemas/RequestSuccessBoolean'\n            data:\n              type: object\n              properties:\n                id:\n                  type: array\n                  items:\n                    type: integer\n                  description: The list of deleted Deals IDs\n    GetAddedDeal:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          description: The Deal object\n          allOf:\n            - $ref: '#/components/schemas/DealNonStrictModeFields'\n            - $ref: '#/components/schemas/BaseDeal'\n        additional_data:\n          type: object\n          properties:\n            matches_filters:\n              description: The array of filter ID's with what this added Deal matches\n              type: array\n              items:\n                type: integer\n        related_objects:\n          type: object\n          properties:\n            user:\n              $ref: '#/components/schemas/DealUserData'\n            organization:\n              $ref: '#/components/schemas/DealOrganizationData'\n            person:\n              $ref: '#/components/schemas/DealPersonData'\n    GetDuplicatedDeal:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          description: The Deal object\n          allOf:\n            - $ref: '#/components/schemas/DealStrictModeFields'\n            - $ref: '#/components/schemas/BaseDeal'\n    GetMergedDeal:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          allOf:\n            - $ref: '#/components/schemas/DealStrictModeFields'\n            - $ref: '#/components/schemas/BaseDeal'\n            - type: object\n              properties:\n                merge_what_id:\n                  type: integer\n                  description: The Deal ID of the Deal which the original Deal was merged with\n    AddedDealFollower:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          properties:\n            user_id:\n              type: integer\n              description: The User ID who added the Follower\n            id:\n              type: integer\n              description: The Follower ID\n            deal_id:\n              type: integer\n              description: The ID of the Deal which the Follower was added to\n            add_time:\n              type: string\n              description: The date and time when the Deal Follower was added\n    DeleteDeal:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              allOf:\n                - $ref: '#/components/schemas/IntegerId'\n              description: The ID of the Deal that was deleted\n    DeleteDealFollower:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              allOf:\n                - $ref: '#/components/schemas/IntegerId'\n              description: The ID of the Deal Follower that was deleted\n    DeleteDealParticipant:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              allOf:\n                - $ref: '#/components/schemas/IntegerId'\n              description: The ID of the Deal Participant that was deleted\n    DeleteDealProduct:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              allOf:\n                - $ref: '#/components/schemas/IntegerId'\n              description: The ID of an attached Product that was deleted from the Deal\n            product_attachment_id:\n              type: integer\n              description: The ID of an attached Product that was deleted from the Deal\n    BasicDealProduct:\n      type: object\n      properties:\n        item_price:\n          type: number\n          description: Price at which this product will be added to the deal\n        quantity:\n          type: integer\n          description: Quantity – e.g. how many items of this product will be added to the deal\n        discount_percentage:\n          type: number\n          default: 0\n          description: 'Discount %. If omitted, will be set to 0'\n        duration:\n          type: number\n          default: 1\n          description: 'Duration of the product (when product durations are not enabled for the company or if omitted, defaults to 1)'\n        product_variation_id:\n          type: integer\n          description: 'ID of the product variation to use. When omitted, no variation will be used.'\n        comments:\n          type: string\n          description: Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.\n        enabled_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n          description: 'Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with specific price and discount criteria - but keep them disabled, which refrains them from being included in deal price calculation. When omitted, the product will be marked as enabled by default.'\n    NewDealProduct:\n      allOf:\n        - $ref: '#/components/schemas/BasicDealProduct'\n        - type: object\n          required:\n            - product_id\n            - item_price\n            - quantity\n          properties:\n            product_id:\n              type: integer\n              description: ID of the product that will be attached\n    BaseCurrency:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID of the Currency\n        code:\n          type: string\n          description: Code of the Currency\n        name:\n          type: string\n          description: Name of the Currency\n        decimal_points:\n          type: integer\n          description: The amount of decimal points of the Currency\n        symbol:\n          type: string\n          description: Symbol of the Currency\n        active_flag:\n          type: boolean\n          description: Whether the Currency is active or not\n        is_custom_flag:\n          type: boolean\n          description: Whether the Currency is a custom one or not\n    Currencies:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: array\n          description: The array of Currencies\n          items:\n            $ref: '#/components/schemas/BaseCurrency'\n    Note:\n      type: object\n      required:\n        - content\n      properties:\n        content:\n          type: string\n          description: Content of the note in HTML format. Subject to sanitization on the back-end.\n        user_id:\n          type: integer\n          description: ID of the user who will be marked as the author of this note. Only an admin can change the author.\n        deal_id:\n          type: integer\n          description: ID of the deal the note will be attached to.\n        person_id:\n          type: integer\n          description: ID of the person this note will be attached to.\n        org_id:\n          type: integer\n          description: ID of the organization this note will be attached to.\n        add_time:\n          type: string\n          description: 'Optional creation date \u0026 time of the Note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'\n        pinned_to_deal_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, then results are filtered by note to deal pinning state (deal_id is also required).'\n        pinned_to_organization_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, then results are filtered by note to organization pinning state (org_id is also required).'\n        pinned_to_person_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n          description: 'If set, then results are filtered by note to person pinning state (person_id is also required).'\n    GetNotes:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          type: array\n          description: The array of Notes\n          items:\n            $ref: '#/components/schemas/BaseNote'\n        additional_data:\n          $ref: '#/components/schemas/AdditionalData'\n    PostNote:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          $ref: '#/components/schemas/BaseNote'\n    DeleteNote:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n        data:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n    BaseNoteDealTitle:\n      type: object\n      description: The Deal this Note is attached to\n      properties:\n        title:\n          type: string\n          description: The title of the Deal this Note is attached to\n    BaseNote:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the Note\n        active_flag:\n          type: boolean\n          description: If Note is active or deleted\n        add_time:\n          type: string\n          description: The creation date and time of the Note\n        content:\n          type: string\n          description: Content of the Note in HTML format. Subject to sanitization on the back-end.\n        deal:\n          $ref: '#/components/schemas/BaseNoteDealTitle'\n        deal_id:\n          type: integer\n          description: The ID of the Deal the Note is attached to\n        last_update_user_id:\n          type: integer\n          description: The ID of the User who updated the Note last\n        org_id:\n          type: integer\n          description: The ID of the Organization this Note is attached to\n        organization:\n          type: object\n          description: The Organization this Note is attached to\n          properties:\n            name:\n              type: string\n              description: The name of the Organization this Note is attached to\n        person:\n          type: object\n          description: The Person this Note is attached to\n          properties:\n            name:\n              type: string\n              description: The name of the Person this Note is attached to\n        person_id:\n          type: integer\n          description: The ID of the Person this Note is attached to\n        pinned_to_deal_flag:\n          type: boolean\n          description: 'If true, then the results are filtered by Note to Deal pinning state.'\n        pinned_to_organization_flag:\n          type: boolean\n          description: 'If true, then the results are filtered by Note to Organization pinning state.'\n        pinned_to_person_flag:\n          type: boolean\n          description: 'If true, then the results are filtered by Note to Person pinning state.'\n        update_time:\n          type: string\n          description: The last updated date and time of the Note\n        user:\n          $ref: '#/components/schemas/NoteCreatorUser'\n        user_id:\n          type: integer\n          description: The ID of the Note creator\n    NoteCreatorUser:\n      type: object\n      description: The User who created the Note\n      properties:\n        email:\n          type: string\n          description: The Email of the Note creator\n        icon_url:\n          type: string\n          description: The URL of the Note creator avatar picture\n        is_you:\n          type: boolean\n          description: If the Note is created by you or not\n        name:\n          type: string\n          description: The name of the Note creator\n    AdditionalData:\n      description: The additional data of the list\n      type: object\n      properties:\n        start:\n          type: integer\n          description: The pagination start\n        limit:\n          type: integer\n          description: Items shown per page\n        more_items_in_collection:\n          type: boolean\n          description: If there are more list items in the collection than displayed or not\n    AdditionalDataWithPaginationDetails:\n      type: object\n      properties:\n        pagination:\n          description: Pagination details of the list\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/AdditionalData'\n            - type: object\n              properties:\n                next_start:\n                  type: integer\n                  description: Next pagination start\n    BasicGoal:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title of the goal.\n        assignee:\n          type: object\n          description: 'Who is this goal assigned to. It requires the following JSON structure: { \"id\": \"1\", \"type\": \"person\" }. `type` can be either `person`, `company` or `team`. ID of the assignee person, company or team.'\n        type:\n          type: object\n          description: 'Type of the goal. It requires the following JSON structure: { \"name\": \"deals_started\", \"params\": { \"pipeline_id\": 1 } }. Type can be one of: `deals_won`,`deals_progressed`,`activities_completed`,`activities_added` or `deals_started`. `params` can include `pipeline_id`, `stage_id` or `activity_type_id`. `stage_id` is related to only `deals_progressed` type of goals and `activity_type_id` to `activities_completed` or `activities_added` types of goals. To track goal in all pipelines set `pipeline_id` as `null`.'\n        expected_outcome:\n          type: object\n          description: 'Expected outcome of the goal. Expected outcome can be tracked either by `quantity` or by `sum`. It requires the following JSON structure: { \"target\": \"50\", \"tracking_metric\": \"quantity\" } or { \"target\": \"50\", \"tracking_metric\": \"sum\", \"currency_id\": 1 }. `currency_id` should only be added to `sum` type of goals.'\n        duration:\n          type: object\n          description: 'Date when the goal starts and ends. It requires the following JSON structure: { \"start\": \"2019-01-01\", \"end\": \"2022-12-31\" }. Date in format of YYYY-MM-DD.'\n        interval:\n          type: string\n          enum:\n            - weekly\n            - monthly\n            - quarterly\n            - yearly\n          description: 'Date when the goal starts and ends. It requires the following JSON structure: { \"start\": \"2019-01-01\", \"end\": \"2022-12-31\" }. Date in format of YYYY-MM-DD.'\n    NewGoal:\n      allOf:\n        - $ref: '#/components/schemas/BasicGoal'\n        - type: object\n          required:\n            - type\n            - assignee\n            - expected_outcome\n            - duration\n            - interval\n    BasicOrganizationField:\n      $ref: '#/components/schemas/BasicPersonField'\n    NewOrganizationField:\n      allOf:\n        - $ref: '#/components/schemas/BasicPersonField'\n        - $ref: '#/components/schemas/FieldType'\n    BasicOrganization:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Organization name\n        owner_id:\n          type: integer\n          description: 'ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.'\n        visible_to:\n          allOf:\n            - $ref: '#/components/schemas/VisibleTo'\n          description: 'Visibility of the organization. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.\u003cdl class=\\\"fields-list\\\"\u003e\u003cdt\u003e1\u003c/dt\u003e\u003cdd\u003eOwner \u0026amp; followers (private)\u003c/dd\u003e\u003cdt\u003e3\u003c/dt\u003e\u003cdd\u003eEntire company (shared)\u003c/dd\u003e\u003c/dl\u003e'\n    NewOrganization:\n      allOf:\n        - $ref: '#/components/schemas/BasicOrganization'\n        - type: object\n          required:\n            - name\n          properties:\n            add_time:\n              type: string\n              description: 'Optional creation date \u0026 time of the organization in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'\n    OrganizationRelationship:\n      type: object\n      properties:\n        org_id:\n          type: integer\n          description: ID of the base organization for the returned calculated values\n        type:\n          type: string\n          enum:\n            - parent\n            - related\n          description: The type of organization relationship.\n        rel_owner_org_id:\n          type: integer\n          description: 'The owner of this relationship. If type is ''parent'', then the owner is the parent and the linked organization is the daughter.'\n        rel_linked_org_id:\n          type: integer\n          description: 'The linked organization in this relationship. If type is ''parent'', then the linked organization is the daughter.'\n    BasicPerson:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Person name\n        owner_id:\n          type: integer\n          description: 'ID of the user who will be marked as the owner of this person. When omitted, the authorized user ID will be used.'\n        org_id:\n          type: integer\n          description: ID of the organization this person will belong to.\n        email:\n          type: array\n          items:\n            type: string\n          description: 'Email addresses (one or more) associated with the person, presented in the same manner as received by GET request of a person.'\n        phone:\n          type: array\n          items:\n            type: string\n          description: 'Phone numbers (one or more) associated with the person, presented in the same manner as received by GET request of a person.'\n        visible_to:\n          allOf:\n            - $ref: '#/components/schemas/VisibleTo'\n          description: 'Visibility of the person. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.\u003cdl class=\"fields-list\"\u003e\u003cdt\u003e1\u003c/dt\u003e\u003cdd\u003eOwner \u0026amp; followers (private)\u003c/dd\u003e\u003cdt\u003e3\u003c/dt\u003e\u003cdd\u003eEntire company (shared)\u003c/dd\u003e\u003c/dl\u003e'\n    NewPerson:\n      allOf:\n        - $ref: '#/components/schemas/BasicPerson'\n        - type: object\n          required:\n            - name\n          properties:\n            add_time:\n              type: string\n              description: 'Optional creation date \u0026 time of the person in UTC. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS'\n    BasicPersonField:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: Name of the field\n        options:\n          type: string\n          description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array of objects. All active items must be supplied and already existing items must have their ID supplied. New items only require a label. Example: [{\"id\":123,\"label\":\"Existing Item\"},{\"label\":\"New Item\"}]'\n    NewPersonField:\n      allOf:\n        - $ref: '#/components/schemas/BasicPersonField'\n        - $ref: '#/components/schemas/FieldType'\n    Pipeline:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the pipeline\n        deal_probability:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n            - description: Whether deal probability is disabled or enabled for this pipeline.\n        order_nr:\n          type: integer\n          description: Defines pipelines order. First order(order_nr=0) is the default pipeline.\n        active:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n            - description: Whether this pipeline will be made inactive (hidden) or active\n    Product:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the product.\n        code:\n          type: string\n          description: Product code.\n        unit:\n          type: string\n          description: Unit in which this product is sold\n        tax:\n          type: number\n          description: Tax percentage\n          default: 0\n        active_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault1'\n          description: Whether this product will be made active or not.\n        visible_to:\n          allOf:\n            - $ref: '#/components/schemas/VisibleTo'\n          description: 'Visibility of the product. If omitted, visibility will be set to the default visibility setting of this item type for the authorized user.\u003cdl class=\"fields-list\"\u003e\u003cdt\u003e1\u003c/dt\u003e\u003cdd\u003eOwner \u0026amp; followers (private)\u003c/dd\u003e\u003cdt\u003e3\u003c/dt\u003e\u003cdd\u003eEntire company (shared)\u003c/dd\u003e\u003c/dl\u003e'\n        owner_id:\n          type: integer\n          description: 'ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.'\n        prices:\n          type: string\n          description: 'Array of objects, each containing: currency (string), price (number), cost (number, optional), overhead_cost (number, optional). Note that there can only be one price per product per currency. When ''prices'' is omitted altogether, no prices will be set up for the product.'\n    NewFollowerResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          properties:\n            user_id:\n              type: integer\n              description: The ID of the user that was added as Follower\n            id:\n              type: integer\n              description: The ID of the Follower\n            product_id:\n              type: integer\n              description: The ID of the Product\n            add_time:\n              type: string\n              description: 'The Follower creation time. Format: YYYY-MM-DD HH:MM:SS'\n    DeleteProductFollowerResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              allOf:\n                - $ref: '#/components/schemas/IntegerId'\n              description: The ID of removed Follower\n    FindProductsByNameResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              type: integer\n              description: The ID of the Product\n            variation_id:\n              type: string\n              description: The ID of the price variation of the Product\n            name:\n              type: string\n              description: The name of the Product\n            title:\n              type: string\n              description: The title of the Product\n            variation_name:\n              type: string\n              description: The name of the price variation of the Product\n            price:\n              type: number\n              description: The value corresponding to the Product price\n            price_formatted:\n              type: string\n              description: The Product price with the currency format\n        additional_data:\n          type: object\n          description: Any additional data related to the Products\n    BasicProductField:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          description: Name of the field\n        options:\n          type: string\n          description: 'When field_type is either set or enum, possible options must be supplied as a JSON-encoded sequential array, for example: [\"red\",\"blue\",\"lilac\"]'\n    NewProductField:\n      allOf:\n        - $ref: '#/components/schemas/BasicProductField'\n        - type: object\n          required:\n            - field_type\n          properties:\n            field_type:\n              type: string\n              enum:\n                - varchar\n                - varchar_auto\n                - text\n                - double\n                - monetary\n                - date\n                - set\n                - enum\n                - user\n                - org\n                - people\n                - phone\n                - time\n                - timerange\n                - daterange\n              description: 'Type of the field.\u003cdl class=\"fields-list\"\u003e\u003cdt\u003evarchar\u003c/dt\u003e\u003cdd\u003eText (up to 255 characters)\u003c/dd\u003e\u003cdt\u003evarchar_auto\u003c/dt\u003e\u003cdd\u003eAutocomplete text (up to 255 characters)\u003c/dd\u003e\u003cdt\u003etext\u003c/dt\u003e\u003cdd\u003eLong text (up to 65k characters)\u003c/dd\u003e\u003cdt\u003edouble\u003c/dt\u003e\u003cdd\u003eNumeric value\u003c/dd\u003e\u003cdt\u003emonetary\u003c/dt\u003e\u003cdd\u003eMonetary field (has a numeric value and a currency value)\u003c/dd\u003e\u003cdt\u003edate\u003c/dt\u003e\u003cdd\u003eDate (format YYYY-MM-DD)\u003c/dd\u003e\u003cdt\u003eset\u003c/dt\u003e\u003cdd\u003eOptions field with a possibility of having multiple chosen options\u003c/dd\u003e\u003cdt\u003eenum\u003c/dt\u003e\u003cdd\u003eOptions field with a single possible chosen option\u003c/dd\u003e\u003cdt\u003euser\u003c/dt\u003e\u003cdd\u003eUser field (contains a user ID of another Pipedrive user)\u003c/dd\u003e\u003cdt\u003eorg\u003c/dt\u003e\u003cdd\u003eOrganization field (contains an organization ID which is stored on the same account)\u003c/dd\u003e\u003cdt\u003epeople\u003c/dt\u003e\u003cdd\u003ePerson field (contains a product ID which is stored on the same account)\u003c/dd\u003e\u003cdt\u003ephone\u003c/dt\u003e\u003cdd\u003ePhone field (up to 255 numbers and/or characters)\u003c/dd\u003e\u003cdt\u003etime\u003c/dt\u003e\u003cdd\u003eTime field (format HH:MM:SS)\u003c/dd\u003e\u003cdt\u003etimerange\u003c/dt\u003e\u003cdd\u003eTime-range field (has a start time and end time value, both HH:MM:SS)\u003c/dd\u003e\u003cdt\u003edaterange\u003c/dt\u003e\u003cdd\u003eDate-range field (has a start date and end date value, both YYYY-MM-DD)\u003c/dd\u003e\u003c/dl\u003e'\n    ProductField:\n      allOf:\n        - $ref: '#/components/schemas/NewProductField'\n        - type: object\n          properties:\n            id:\n              type: integer\n              description: The ID of the Product Field\n            key:\n              type: string\n              description: The key of the Product Field\n            order_nr:\n              type: integer\n              description: Position (index) of the Product Field in the detail view\n            add_time:\n              type: string\n              description: 'The Product Field creation time. Format: YYYY-MM-DD HH:MM:SS'\n            update_time:\n              type: string\n              description: 'The Product Field last update time. Format: YYYY-MM-DD HH:MM:SS'\n            last_updated_by_user_id:\n              type: integer\n              description: The ID of the last user to update the Product Field\n            active_flag:\n              type: boolean\n              description: Whether or not the Product Field is currently active\n            edit_flag:\n              type: boolean\n              description: Whether or not the Product Field Name and metadata is editable\n            add_visible_flag:\n              type: boolean\n              description: Whether or not the Product Field is visible in the Add Product Modal\n            important_flag:\n              type: boolean\n              description: Whether or not the Product Field is marked as important\n            bulk_edit_allowed:\n              type: boolean\n              description: Whether or not the Product Field data can be edited\n            searchable_flag:\n              type: boolean\n              description: Whether or not the Product Field is searchable\n            filtering_allowed:\n              type: boolean\n              description: Whether or not the Product Field value can be used when filtering searches\n            sortable_flag:\n              type: boolean\n              description: Whether or not the Product Field is sortable\n            mandatory_flag:\n              type: boolean\n              description: Whether or not the Product Field is mandatory when creating products\n    GetAllProductFieldsResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: array\n          description: Array containing data for all Product Fields\n          items:\n            $ref: '#/components/schemas/ProductField'\n        additional_data:\n          type: object\n          description: 'Additional data for the Product Field, such as pagination'\n    GetProductFieldResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          allOf:\n            - $ref: '#/components/schemas/ProductField'\n            - type: object\n              description: All data for the Product Field\n    DeleteMultipleProductFieldsResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              type: array\n              description: Array of all the IDs of the deleted Product Fields\n              items:\n                type: integer\n    DeleteProductFieldResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          properties:\n            id:\n              allOf:\n                - $ref: '#/components/schemas/IntegerId'\n              description: The ID of the deleted Product Field\n    BaseRole:\n      description: Details of the role\n      type: object\n      properties:\n        parent_role_id:\n          type: integer\n          description: The ID of the parent Role\n        name:\n          type: string\n          description: The name of the Role\n    RoleAssignment:\n      description: The assignment data of the Role\n      allOf:\n        - $ref: '#/components/schemas/BaseRole'\n        - type: object\n          properties:\n            user_id:\n              type: integer\n              description: The User ID\n            role_id:\n              type: integer\n              description: The Role ID\n            active_flag:\n              type: boolean\n              description: Whether the Role is active or not\n            type:\n              type: string\n              description: The assignment type\n    SubRole:\n      description: The details of the sub-role\n      allOf:\n        - $ref: '#/components/schemas/BaseRole'\n        - type: object\n          properties:\n            id:\n              type: integer\n              description: The ID of the Role\n            active_flag:\n              type: boolean\n              description: If the Role is active or not\n            assignment_count:\n              type: string\n              description: The number of Users assigned to this Role\n            sub_role_count:\n              type: string\n              description: The number of sub-roles\n    FullRole:\n      allOf:\n        - $ref: '#/components/schemas/SubRole'\n        - type: object\n          properties:\n            level:\n              type: integer\n              description: The level of Role in the role hierarchy\n    GetRoles:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/FullRole'\n              description: The array of Roles\n            additional_data:\n              $ref: '#/components/schemas/RolesAdditionalData'\n    RoleSettings:\n      description: The settings for the Role\n      type: object\n      properties:\n        deal_default_visibility:\n          type: number\n          description: The default visibility level of the Deals for the Role\n        org_default_visibility:\n          type: number\n          description: The default visibility level of the Organizations for the Role\n        person_default_visibility:\n          type: number\n          description: The default visibility level of the People for the Role\n        product_default_visibility:\n          type: number\n          description: The default visibility level of the Products for the Role\n        deal_access_level:\n          type: number\n          description: The access level of the Deals for the Role (only for default Role)\n        org_access_level:\n          type: number\n          description: The access level of the Organizations for the Role (only for default Role)\n        person_access_level:\n          type: number\n          description: The access level of the People for the Role (only for default Role)\n        product_access_level:\n          type: number\n          description: The access level of the Products for the Role (only for default Role)\n    RolesAdditionalData:\n      description: The additional data in the Role list\n      type: object\n      properties:\n        pagination:\n          description: The pagination details in the Role list\n          type: object\n          properties:\n            start:\n              type: integer\n              description: Pagination start\n            limit:\n              type: integer\n              description: Items shown per page\n            more_items_in_collection:\n              type: boolean\n              description: Whether there are more list items in the collection than displayed\n    PostRoles:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              properties:\n                id:\n                  allOf:\n                    - $ref: '#/components/schemas/IntegerId'\n                  description: The ID of the created Role\n              description: The response data\n    DeleteRole:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              properties:\n                id:\n                  allOf:\n                    - $ref: '#/components/schemas/IntegerId'\n                  description: The ID of the deleted Role\n              description: The response data\n    GetRole:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/SubRole'\n            additional_data:\n              type: object\n              description: The additional data in the Role\n              properties:\n                settings:\n                  $ref: '#/components/schemas/RoleSettings'\n    PutRole:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              properties:\n                id:\n                  allOf:\n                    - $ref: '#/components/schemas/IntegerId'\n                  description: The ID of the updated role\n              description: The response data\n    DeleteRoleAssignment:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              description: The response data\n              properties:\n                id:\n                  allOf:\n                    - $ref: '#/components/schemas/IntegerId'\n                  description: The ID of the Role the User was removed from\n    GetRoleAssignments:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/RoleAssignment'\n              description: The Role assignments\n            additional_data:\n              $ref: '#/components/schemas/RolesAdditionalData'\n    PostRoleAssignment:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              properties:\n                user_id:\n                  type: integer\n                  description: The ID of the User that was added to the Role\n                role_id:\n                  type: integer\n                  description: The ID of the Role the User was added to\n              description: THe response data\n    GetRoleSubroles:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/SubRole'\n              description: The array of sub-roles\n            additional_data:\n              $ref: '#/components/schemas/RolesAdditionalData'\n    GetRoleSettings:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/RoleSettings'\n    PostRoleSettings:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              properties:\n                id:\n                  type: integer\n                  description: The ID of the Role\n                deal_default_visibility:\n                  type: number\n                  enum:\n                    - deal_default_visibility\n                    - org_default_visibility\n                    - person_default_visibility\n                    - product_default_visibility\n                  description: The setting\n              description: The response data\n    Stage:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Name of the stage\n        pipeline_id:\n          type: integer\n          description: ID of the pipeline to add stage to.\n        deal_probability:\n          type: integer\n          description: Deal success probability percentage. Used/shown when deal weighted values are used\n        rotten_flag:\n          type: integer\n          enum:\n            - 0\n            - 1\n          description: Whether deals in this stage can become rotten.\n        rotten_days:\n          type: integer\n          description: Number of days the deals not updated in this stage would become rotten. Applies only if rotten_flag is set.\n    PermissionSets:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/PermissionSetsItem'\n              description: The array of Permission Set\n    PermissionSetsItem:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of User Permission Set\n        name:\n          type: string\n          description: The name of Permission Set\n        assignment_count:\n          type: integer\n          description: The number of Users assigned to this Permission Set\n    SinglePermissionSetsItem:\n      allOf:\n        - $ref: '#/components/schemas/PermissionSetsItem'\n        - type: object\n          properties:\n            contents:\n              type: array\n              description: A permission assigned to this Permission Set\n              items:\n                type: string\n    UserAssignmentsToPermissionSet:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/UserAssignmentToPermissionSet'\n              description: An array of the assignments of the User\n    UserAssignmentToPermissionSet:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the assignment of the Permission Set\n        user_id:\n          type: integer\n          description: The ID of the User in the Permission Set\n        permission_set_id:\n          type: integer\n          description: The ID of the Permission Set\n        name:\n          type: string\n          description: The name of the Permission Set\n    CreateTeam:\n      type: object\n      required:\n        - name\n        - manager_id\n      properties:\n        name:\n          type: string\n          description: The Team name\n        description:\n          type: string\n          description: The Team description\n        manager_id:\n          type: integer\n          description: The Team manager ID\n        users:\n          allOf:\n            - $ref: '#/components/schemas/BaseUserIDs'\n          description: IDs of the Users that belong to the Team\n    UpdateTeam:\n      allOf:\n        - $ref: '#/components/schemas/CreateTeam'\n        - type: object\n          properties:\n            active_flag:\n              allOf:\n                - $ref: '#/components/schemas/NumberBoolean'\n              description: Flag that indicates if the Team is activated\n            deleted_flag:\n              allOf:\n                - $ref: '#/components/schemas/NumberBoolean'\n              description: Flag that indicates if the Team is deleted\n    BaseTeam:\n      allOf:\n        - type: object\n          properties:\n            id:\n              type: integer\n              description: The Team ID\n        - $ref: '#/components/schemas/UpdateTeam'\n        - type: object\n          properties:\n            add_time:\n              type: string\n              description: 'The Team creation time. Format: YYYY-MM-DD HH:MM:SS'\n            created_by_user_id:\n              type: integer\n              description: ID of the User who created the Team\n    Teams:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/BaseTeam'\n    BaseUserIDs:\n      type: array\n      items:\n        type: integer\n      description: List of User IDs\n    UserIDs:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/BaseUserIDs'\n    BaseUser:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The User ID\n        name:\n          type: string\n          description: The User name\n        default_currency:\n          type: string\n          description: The User default currency\n        locale:\n          type: string\n          description: The User locale\n        lang:\n          type: integer\n          description: The User language ID\n        email:\n          type: string\n          description: The User email\n        phone:\n          type: string\n          description: The User phone\n        activated:\n          type: boolean\n          description: Boolean that indicates if the User is activated\n        last_login:\n          type: string\n          description: 'The User last login date and time. Format: YYYY-MM-DD HH:MM:SS'\n        created:\n          type: string\n          description: 'The User creation date and time. Format: YYYY-MM-DD HH:MM:SS'\n        modified:\n          type: string\n          description: 'The User last modification date and time. Format: YYYY-MM-DD HH:MM:SS'\n        signup_flow_variation:\n          type: string\n          nullable: true\n          description: The variation of signup flow (if exists). E.g. google\n        has_created_company:\n          type: boolean\n          description: Boolean that indicates if the User has created a Company\n        is_admin:\n          allOf:\n            - $ref: '#/components/schemas/NumberBoolean'\n          description: 'Indication if the User is admin (1 = true, 0 = false)'\n        active_flag:\n          type: boolean\n          description: Boolean that indicates if the User is activated\n        timezone_name:\n          type: string\n          description: The User timezone name\n        timezone_offset:\n          type: string\n          description: The User timezone offset\n        role_id:\n          type: integer\n          description: The ID of the User role\n        icon_url:\n          type: string\n          nullable: true\n          description: The User icon URL\n        is_you:\n          type: boolean\n          description: 'Boolean that indicates if the requested User is the same which is logged in (in this case, always true)'\n    User:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/BaseUser'\n    Users:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/BaseUser'\n    BaseUserMe:\n      allOf:\n        - $ref: '#/components/schemas/BaseUser'\n        - type: object\n          properties:\n            company_id:\n              type: integer\n              description: The User company ID\n            company_name:\n              type: string\n              description: The User company name\n            company_domain:\n              type: string\n              description: The User company domain\n            company_country:\n              type: string\n              description: The User company country\n            company_industry:\n              type: string\n              description: The User company industry\n            language:\n              type: object\n              description: The User language details\n              properties:\n                language_code:\n                  type: string\n                  description: The language code. E.g. en\n                country_code:\n                  type: string\n                  description: The country code. E.g. US\n    UserMe:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/BaseUserMe'\n    UserConnections:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: object\n              description: The object of UserConnections\n              properties:\n                google:\n                  type: string\n                  description: The third party ID or false in case the ID is not found\n    GetDeal:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          allOf:\n            - $ref: '#/components/schemas/DealNonStrictModeFields'\n            - $ref: '#/components/schemas/BaseDeal'\n            - type: object\n              properties:\n                average_time_to_won:\n                  type: object\n                  description: The average time to win the Deal\n                  properties:\n                    'y':\n                      type: integer\n                      description: Years\n                    m:\n                      type: integer\n                      description: Months\n                    d:\n                      type: integer\n                      description: Days\n                    h:\n                      type: integer\n                      description: Hours\n                    i:\n                      type: integer\n                      description: Minutes\n                    s:\n                      type: integer\n                      description: Seconds\n                    total_seconds:\n                      type: integer\n                      description: The total time in seconds\n                average_stage_progress:\n                  type: number\n                  description: The average of the Deal stage progression\n                age:\n                  type: object\n                  description: The lifetime of the Deal\n                  properties:\n                    'y':\n                      type: integer\n                      description: Years\n                    m:\n                      type: integer\n                      description: Months\n                    d:\n                      type: integer\n                      description: Days\n                    h:\n                      type: integer\n                      description: Hours\n                    i:\n                      type: integer\n                      description: Minutes\n                    s:\n                      type: integer\n                      description: Seconds\n                    total_seconds:\n                      type: integer\n                      description: The total time in seconds\n                stay_in_pipeline_stages:\n                  type: object\n                  description: The details of the duration of the Deal being in each stage of the pipeline\n                  properties:\n                    times_in_stages:\n                      type: object\n                      description: The number of seconds a Deal has been in each stage of the pipeline\n                    order_of_stages:\n                      type: array\n                      description: The order of the Deal progression through the pipeline stages\n                      items:\n                        type: integer\n                last_activity:\n                  type: object\n                  description: The details of the last activity associated with the Deal\n                next_activity:\n                  type: object\n                  description: The details of the next activity associated with the Deal\n        additional_data:\n          type: object\n          properties:\n            dropbox_email:\n              type: string\n              description: The Cc email of the Deal\n        related_objects:\n          type: object\n          properties:\n            user:\n              $ref: '#/components/schemas/DealUserData'\n            organization:\n              $ref: '#/components/schemas/DealOrganizationData'\n            person:\n              $ref: '#/components/schemas/DealPersonData'\n    GetDeals:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: array\n          items:\n            allOf:\n              - $ref: '#/components/schemas/DealNonStrictModeFields'\n              - $ref: '#/components/schemas/BaseDeal'\n          description: The array of Deals\n        additional_data:\n          $ref: '#/components/schemas/AdditionalDataWithPaginationDetails'\n        related_objects:\n          type: object\n          properties:\n            user:\n              $ref: '#/components/schemas/DealUserData'\n            organization:\n              $ref: '#/components/schemas/DealOrganizationData'\n            person:\n              $ref: '#/components/schemas/DealPersonData'\n    GetDealsByName:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: array\n          items:\n            type: object\n            description: The array of Deals filtered by name\n            properties:\n              id:\n                type: integer\n                description: The ID of the Deal\n              title:\n                type: string\n                description: The title of the Deal\n              user_id:\n                type: integer\n                description: The ID of the User who is associated with the Deal\n              visible_to:\n                type: string\n                description: The visibility of the Deal\n              status:\n                type: string\n                description: The status of the Deal\n              value:\n                type: number\n                description: The value of the Deal\n              currency:\n                type: string\n                description: The currency associated with the Deal\n              person_name:\n                type: string\n                description: The name of the Person associated with the Deal\n              person_id:\n                type: integer\n                description: The ID of the Person associated with the Deal\n              organization_name:\n                type: string\n                description: The name of the Organization associated with the Deal\n              organization_id:\n                type: integer\n                description: The ID of the Person associated with the Deal\n              formatted_value:\n                type: string\n                description: The Deal value formatted with selected currency. E.g. US$500\n              cc_email:\n                type: string\n                description: The Cc email of the Deal\n        additional_data:\n          type: object\n          properties:\n            pagination:\n              $ref: '#/components/schemas/AdditionalData'\n    GetDealsSummary:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          description: The summary of Deals\n          properties:\n            values_total:\n              type: object\n              description: The total values of the Deals grouped by Deal currency\n              properties:\n                value:\n                  type: number\n                  description: The total value of Deals in the Deal currency group\n                count:\n                  type: integer\n                  description: The number of Deals in the Deal currency group\n                value_converted:\n                  type: number\n                  description: The total value of Deals converted into the company default currency\n                value_formatted:\n                  type: string\n                  description: The total value of Deals formatted with Deal currency. E.g. €50\n                value_converted_formatted:\n                  type: string\n                  description: The value_converted formatted with Deal currency. E.g. US$50.10\n            weighted_values_total:\n              type: object\n              description: The total weighted values of the Deals grouped by Deal currency. The weighted value is calculated as probability times Deal value.\n              properties:\n                value:\n                  type: number\n                  description: The total weighted value of the Deals in the Deal currency group\n                count:\n                  type: integer\n                  description: The number of Deals in the Deal currency group\n                value_formatted:\n                  type: string\n                  description: The total weighted value of the Deals formatted with Deal currency. E.g. €50\n            total_count:\n              type: integer\n              description: The total number of Deals\n            total_currency_converted_value:\n              type: number\n              description: The total value of Deals converted into the company default currency\n            total_weighted_currency_converted_value:\n              type: number\n              description: The total weighted value of Deals converted into the company default currency\n            total_currency_converted_value_formatted:\n              type: string\n              description: 'The total converted value of Deals formatted with the company default currency. E.g. US$5,100.96'\n            total_weighted_currency_converted_value_formatted:\n              type: string\n              description: 'The total weighted value of Deals formatted with the company default currency. E.g. US$5,100.96'\n    GetDealsTimeline:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          type: object\n          description: 'Open and won Deals grouped into periods by defined interval, amount and date-type dealField (field_key)'\n          properties:\n            period_start:\n              type: string\n              description: The start date and time of the period\n            period_end:\n              type: string\n              description: The end date and time of the period\n            deals:\n              type: array\n              items:\n                allOf:\n                  - $ref: '#/components/schemas/DealStrictModeFields'\n                  - $ref: '#/components/schemas/BaseDeal'\n            totals:\n              type: object\n              description: The total values of Deals for the given period\n              properties:\n                count:\n                  type: integer\n                  description: The number of Deals for the given period\n                values:\n                  type: object\n                  description: The total values of Deals grouped by Deal currency\n                weighted_values:\n                  type: object\n                  description: The total weighted values of Deals for the given period grouped by Deal currency. The weighted value of a Deal is calculated as probability times Deal value.\n                open_count:\n                  type: integer\n                  description: The number of open Deals for the given period\n                open_values:\n                  type: object\n                  description: The total values of open Deals for the given period grouped by Deal currency\n                weighted_open_values:\n                  type: object\n                  description: The total weighted values of open Deals for the given period grouped by Deal currency. The weighted value of a Deal is calculated as probability times Deal value.\n                won_count:\n                  type: integer\n                  description: The number of won Deals for the given period\n                won_values:\n                  type: object\n                  description: The total values of won Deals for the given period grouped by Deal currency\n    DealUserData:\n      description: The User who is associated with the Deal\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the User\n        name:\n          type: string\n          description: The Name of the User\n        email:\n          type: string\n          description: The email of the User\n        has_pic:\n          type: boolean\n          description: If the User has a picture or not\n        pic_hash:\n          type: string\n          nullable: true\n          description: The User picture hash\n        active_flag:\n          type: boolean\n          description: If the User is activated or not\n    DealPersonData:\n      type: object\n      description: The Person who is associated with the Deal\n      properties:\n        active_flag:\n          type: boolean\n          description: If the associated Person is activated or not\n        name:\n          type: string\n          description: The name of the Person associated with the Deal\n        email:\n          type: array\n          description: The emails of the Person associated with the Deal\n          items:\n            type: object\n            properties:\n              label:\n                type: string\n                description: The type of the email\n              value:\n                type: string\n                description: The email of the associated Person\n              primary:\n                type: boolean\n                description: If this is the primary email or not\n        phone:\n          type: array\n          description: The phone numbers of the Person associated with the Deal\n          items:\n            type: object\n            properties:\n              label:\n                type: string\n                description: The type of the phone number\n              value:\n                type: string\n                description: The phone number of the Person associated with the Deal\n              primary:\n                type: boolean\n                description: If this is the primary phone number or not\n    DealOrganizationData:\n      type: object\n      description: The Organization which is associated with the Deal\n      properties:\n        name:\n          type: string\n          description: The name of the Organization associated with the Deal\n        people_count:\n          type: integer\n          description: The number of people connected with the Organization that is associated with the Deal\n        owner_id:\n          type: integer\n          description: The ID of the owner of the Organization that is associated with the Deal\n        address:\n          type: string\n          description: The address of the Organization that is associated with the Deal\n        active_flag:\n          type: boolean\n          description: If the associated Organization is activated or not\n        cc_email:\n          type: string\n          description: The Cc email of the Organization associated with the Deal\n    GetProductAttachementDetails:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          description: The updated Product object attached to the Deal\n          allOf:\n            - $ref: '#/components/schemas/BasicDealProduct'\n            - $ref: '#/components/schemas/ProductAttachementFields'\n    GetAddProductAttachementDetails:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        data:\n          description: The added Product object attached to the Deal\n          allOf:\n            - $ref: '#/components/schemas/BasicDealProduct'\n            - $ref: '#/components/schemas/ProductAttachementFields'\n            - type: object\n              properties:\n                product_attachment_id:\n                  type: integer\n                  description: The ID of the deal-product (the ID of the Product attached to the Deal)\n    ProductAttachementFields:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the deal-product (the ID of the Product attached to the Deal)\n        company_id:\n          type: integer\n          description: The ID of the Company\n        deal_id:\n          type: integer\n          description: The ID of the Deal\n        product_id:\n          type: integer\n          description: The ID of the Product\n        duration_unit:\n          type: string\n          description: 'The type of the duration. (For example hourly, daily, etc.)'\n        sum_no_discount:\n          type: number\n          description: The Product sum without the discount\n        sum:\n          type: number\n          description: The sum of all the Products attached to the Deal\n        currency:\n          type: string\n          description: The currency associated with the Deal Product\n        add_time:\n          type: string\n          description: The date and time when the Product was added to the Deal\n        last_edit:\n          type: string\n          description: The date and time when the Deal Product was last edited\n        active_flag:\n          type: boolean\n          description: Boolean indicates if the Product is activated or not\n        tax:\n          type: number\n          description: The Product tax\n        name:\n          type: string\n          description: The Product name\n    DealNonStrictModeFields:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the Deal\n        creator_user_id:\n          type: object\n          description: The creator of the Deal\n          properties:\n            id:\n              type: integer\n              description: The ID of the Deal creator\n            name:\n              type: string\n              description: The name of the Deal creator\n            email:\n              type: string\n              description: The email of the Deal creator\n            has_pic:\n              type: boolean\n              description: If the creator has a picture or not\n            pic_hash:\n              type: string\n              nullable: true\n              description: The creator picture hash\n            active_flag:\n              type: boolean\n              description: If the creator is activated or not\n            value:\n              type: integer\n              description: The ID of the Deal creator\n        user_id:\n          allOf:\n            - $ref: '#/components/schemas/DealUserData'\n            - type: object\n              properties:\n                value:\n                  type: integer\n                  description: The ID of the User\n        person_id:\n          allOf:\n            - $ref: '#/components/schemas/DealPersonData'\n            - type: object\n              properties:\n                value:\n                  type: integer\n                  description: The ID of the Person associated with the Deal\n        org_id:\n          allOf:\n            - $ref: '#/components/schemas/DealOrganizationData'\n            - type: object\n              properties:\n                value:\n                  type: integer\n                  description: The ID of the Organization associated with the Deal\n    DealStrictModeFields:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: The ID of the Deal\n        creator_user_id:\n          type: integer\n          description: The ID of the Deal creator\n        user_id:\n          type: integer\n          description: The ID of the User\n        person_id:\n          type: integer\n          description: The ID of the Person associated with the Deal\n        org_id:\n          type: integer\n          description: The ID of the Organization associated with the Deal\n    BaseDeal:\n      type: object\n      properties:\n        stage_id:\n          type: integer\n          description: The ID of the Deal stage\n        title:\n          type: string\n          description: The title of the Deal\n        value:\n          type: number\n          description: The value of the Deal\n        currency:\n          type: string\n          description: The currency associated with the Deal\n        add_time:\n          type: string\n          description: The creation date and time of the Deal\n        update_time:\n          type: string\n          description: The last updated date and time of the Deal\n        stage_change_time:\n          type: string\n          description: The last updated date and time of the Deal stage\n        active:\n          type: boolean\n          description: If the Deal is activated or not\n        deleted:\n          type: boolean\n          description: If the Deal is deleted or not\n        status:\n          type: string\n          description: The status of the Deal\n        probability:\n          type: number\n          nullable: true\n          description: The success probability percentage of the Deal\n        next_activity_date:\n          type: string\n          description: The date of the next activity associated with the Deal\n        next_activity_time:\n          type: string\n          description: The time of the next activity associated with the Deal\n        next_activity_id:\n          type: integer\n          nullable: true\n          description: The ID of the next activity associated with the Deal\n        last_activity_id:\n          type: integer\n          nullable: true\n          description: The ID of the last activity associated with the Deal\n        last_activity_date:\n          type: string\n          nullable: true\n          description: The date of the last activity associated with the Deal\n        lost_reason:\n          type: string\n          nullable: true\n          description: The reason for losing the Deal\n        visible_to:\n          type: string\n          description: The visibility of the Deal\n        close_time:\n          type: string\n          nullable: true\n          description: The date and time of closing the Deal\n        pipeline_id:\n          type: integer\n          description: The ID of pipeline associated with the Deal\n        won_time:\n          type: string\n          description: The date and time of changing the Deal status as won\n        first_won_time:\n          type: string\n          description: The date and time of the first time changing the Deal status as won\n        lost_time:\n          type: string\n          description: The date and time of changing the Deal status as lost\n        products_count:\n          type: integer\n          description: The number of Products associated with the Deal\n        files_count:\n          type: integer\n          description: The number of Files associated with the Deal\n        notes_count:\n          type: integer\n          description: The number of Notes associated with the Deal\n        followers_count:\n          type: integer\n          description: The number of Followers associated with the Deal\n        email_messages_count:\n          type: integer\n          description: The number of emails associated with the Deal\n        activities_count:\n          type: integer\n          description: The number of Activities associated with the Deal\n        done_activities_count:\n          type: integer\n          description: The number of completed Activities associated with the Deal\n        undone_activities_count:\n          type: integer\n          description: The number of incomplete Activities associated with the Deal\n        reference_activities_count:\n          type: integer\n          description: The number of referenced Activities associated with the Deal\n        participants_count:\n          type: integer\n          description: The number of Participants associated with the Deal\n        expected_close_date:\n          type: string\n          description: The expected close date and time of the Deal\n        last_incoming_mail_time:\n          type: string\n          description: The date and time of the last incoming email associated with the Deal\n        last_outgoing_mail_time:\n          type: string\n          description: The date and time of the last outgoing email associated with the Deal\n        label:\n          type: string\n          description: The label assigned to the Deal\n        stage_order_nr:\n          type: integer\n          description: The order number of the Deal stage associated with the Deal\n        person_name:\n          type: string\n          description: The name of the Person associated with the Deal\n        org_name:\n          type: string\n          description: The name of the Organization associated with the Deal\n        next_activity_subject:\n          type: string\n          description: The subject of the next activity associated with the Deal\n        next_activity_type:\n          type: string\n          description: The type of the next activity associated with the Deal\n        next_activity_duration:\n          type: string\n          description: The duration of the next activity associated with the Deal\n        next_activity_note:\n          type: string\n          description: The note of the next activity associated with the Deal\n        formatted_value:\n          type: string\n          description: The Deal value formatted with selected currency. E.g. US$500\n        weighted_value:\n          type: number\n          description: 'Probability times Deal value. Probability can either be Deal probability or if not set, then stage probability.'\n        formatted_weighted_value:\n          type: string\n          description: The weighted_value formatted with selected currency. E.g. US$500\n        weighted_value_currency:\n          type: string\n          description: The currency associated with the Deal\n        rotten_time:\n          type: string\n          nullable: true\n          description: The date and time of changing the Deal status as rotten\n        owner_name:\n          type: string\n          description: The name of the Deal owner\n        cc_email:\n          type: string\n          description: The Cc email of the Deal\n        org_hidden:\n          type: boolean\n          description: If the Organization that is associated with the Deal is hidden or not\n        person_hidden:\n          type: boolean\n          description: If the Person that is associated with the Deal is hidden or not\n    BaseResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n    FailResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        error:\n          type: string\n          description: The error message\n    Unauthorized:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/ResponseSuccessBoolean'\n        error:\n          type: string\n          description: The error message\n        errorCode:\n          type: integer\n          description: The response error code\n    CommonMailThread:\n      type: object\n      properties:\n        id:\n          type: integer\n          description: ID of the mail thread\n        account_id:\n          type: string\n          description: The connection account ID\n        user_id:\n          type: integer\n          description: ID of the user whom mail message will be assigned to\n        subject:\n          type: string\n          description: The subject\n        snippet:\n          type: string\n          description: A snippet\n        read_flag:\n          description: Whether the mail thread is read\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        mail_tracking_status:\n          type: string\n          nullable: true\n          description: Mail tracking status\n        has_attachments_flag:\n          description: Whether the mail thread has an attachment\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        has_inline_attachments_flag:\n          description: Whether the mail thread has inline attachments\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        has_real_attachments_flag:\n          description: Whether the mail thread has real attachments (which are not inline)\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        deleted_flag:\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n          description: Whether the mail thread is deleted\n        synced_flag:\n          description: Whether the mail thread is synced\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        smart_bcc_flag:\n          description: Whether one of the parties of the mail thread is Bcc\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        mail_link_tracking_enabled_flag:\n          description: Whether the link tracking of the mail thread is enabled\n          allOf:\n            - $ref: '#/components/schemas/NumberBooleanDefault0'\n        write_flag:\n          type: boolean\n          description: We strongly advise you to avoid the use of this property. We will soon deprecate this property\n    BaseMailThread:\n      allOf:\n        - $ref: '#/components/schemas/CommonMailThread'\n        - type: object\n          properties:\n            parties:\n              type: object\n              description: Parties of the mail thread\n              properties:\n                to:\n                  type: array\n                  description: Recipients of the mail thread\n                  items:\n                    $ref: '#/components/schemas/MailThreadParticipant'\n                from:\n                  type: array\n                  description: Senders of the mail thread\n                  items:\n                    $ref: '#/components/schemas/MailThreadParticipant'\n            drafts_parties:\n              type: array\n              description: Parties of the drafted mail thread\n              items:\n                type: object\n            folders:\n              type: array\n              description: Folders in which messages from thread are being stored\n              items:\n                type: string\n            version:\n              type: number\n              description: Version\n            snippet_draft:\n              type: string\n              nullable: true\n              description: A snippet from a draft\n            snippet_sent:\n              type: string\n              description: A snippet from a message sent\n            message_count:\n              type: integer\n              description: An amount of messages\n            has_draft_flag:\n              type: number\n              description: Whether the mail thread has any drafts\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            has_sent_flag:\n              type: number\n              description: Whether the mail thread has messages sent\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            archived_flag:\n              allOf:\n                - $ref: '#/components/schemas/NumberBoolean'\n                - description: Whether the mail thread is archived\n                - default: 0\n                  type: number\n            shared_flag:\n              type: number\n              description: Whether the mail thread is shared\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            external_deleted_flag:\n              type: number\n              description: Whether the mail thread has been deleted externally\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            first_message_to_me_flag:\n              type: number\n              description: Whether the mail thread was initialized by others\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            last_message_timestamp:\n              type: string\n              format: date-time\n              description: Last message timestamp\n            first_message_timestamp:\n              type: string\n              format: date-time\n              description: The time when the mail thread has had the first message received or created\n            last_message_sent_timestamp:\n              type: string\n              format: date-time\n              nullable: true\n              description: The last time when the mail thread has had a message sent\n            last_message_received_timestamp:\n              type: string\n              format: date-time\n              description: The last time when the mail thread has had a message received\n            add_time:\n              type: string\n              format: date-time\n              description: The time when the mail thread was inserted to database\n            update_time:\n              type: string\n              format: date-time\n              description: The time when the mail thread was updated in database received\n            deal_id:\n              type: integer\n              nullable: true\n              description: ID of the deal\n            deal_status:\n              type: string\n              nullable: true\n              description: Status of the deal\n            all_messages_sent_flag:\n              type: number\n              description: Whether all the mail thread messages have been sent\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n    MailThread:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              description: The array of mail threads\n              items:\n                $ref: '#/components/schemas/BaseMailThread'\n    MailThreadOne:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              description: The array of mail threads\n              allOf:\n                - $ref: '#/components/schemas/BaseMailThread'\n    MailThreadParticipant:\n      type: object\n      description: Member of a thread\n      properties:\n        id:\n          type: integer\n          description: ID of the mail thread participant\n        name:\n          type: string\n          description: Name of the mail thread participant\n        latest_sent:\n          type: boolean\n          description: Whether the mail thread participant was last to send an email\n        email_address:\n          type: string\n          description: Email address of the mail thread participant\n        message_time:\n          type: number\n          description: Message time\n        linked_person_id:\n          type: integer\n          description: ID of the linked person\n        linked_person_name:\n          type: string\n          description: Email of the linked person\n        mail_message_party_id:\n          type: integer\n          description: ID of the mail message party\n        linked_organization_id:\n          type: integer\n          nullable: true\n          description: Linked Organization ID\n    BaseMailThreadMessages:\n      allOf:\n        - $ref: '#/components/schemas/CommonMailThread'\n        - type: object\n          properties:\n            from:\n              type: array\n              description: Senders of the mail thread\n              items:\n                $ref: '#/components/schemas/MailThreadParticipant'\n            to:\n              type: array\n              description: Recipients of the mail thread\n              items:\n                $ref: '#/components/schemas/MailThreadParticipant'\n            cc:\n              type: array\n              description: Participants of the Cc\n              items:\n                $ref: '#/components/schemas/MailThreadParticipant'\n            bcc:\n              type: array\n              description: Participants of the Bcc\n              items:\n                $ref: '#/components/schemas/MailThreadParticipant'\n            body_url:\n              type: string\n              description: A link to the mail thread message\n            mail_thread_id:\n              type: integer\n              description: ID of the mail thread\n            draft:\n              type: string\n              nullable: true\n              description: 'If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise null.'\n            has_body_flag:\n              type: number\n              description: Whether the mail thread message has a body\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            sent_flag:\n              type: number\n              description: Whether the mail thread message is sent\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            sent_from_pipedrive_flag:\n              type: number\n              description: Whether the mail thread message is sent from Pipedrive\n              allOf:\n                - $ref: '#/components/schemas/NumberBooleanDefault0'\n            message_time:\n              type: string\n              format: date-time\n              description: The time when the mail message was received or created\n            add_time:\n              type: string\n              format: date-time\n              description: The time when the mail message was inserted to database\n            update_time:\n              type: string\n              format: date-time\n              description: The time when the mail message was updated in database received\n    MailThreadMessages:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/BaseMailThreadMessages'\n              description: The array of the mail messages of the mail thread\n    MailThreadDelete:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/BaseMailThread'\n              description: An array of mail threads\n    MailThreadPut:\n      allOf:\n        - $ref: '#/components/schemas/BaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/BaseMailThread'\n              description: An array of mail threads\n    GlobalMessageGet:\n      allOf:\n        - $ref: '#/components/schemas/GlobalMessageBaseResponse'\n        - type: object\n          properties:\n            data:\n              type: array\n              items:\n                $ref: '#/components/schemas/GlobalMessageData'\n              description: The array of Global Messages\n            handle_time:\n              type: number\n              description: The total time of the controller processing\n            _req_time_ctx_ms:\n              type: object\n              description: 'The list of timers formatted by name and elapsed time in ms (such as app, app_xss_clean, app_sanitizer_xss)'\n    GlobalMessageBaseResponse:\n      type: object\n      properties:\n        success:\n          $ref: '#/components/schemas/RequestSuccessBoolean'\n    GlobalMessageData:\n      type: object\n      description: The Global Message data\n      properties:\n        id:\n          type: integer\n          description: The ID of the Global Message\n        user_id:\n          type: integer\n          description: The ID of the User related to the Global Message\n        company_id:\n          type: integer\n          description: The ID of the Company related to the Global Message\n        type_info:\n          $ref: '#/components/schemas/GlobalMessageUserData'\n        user_data:\n          type: object\n          description: 'The User data for the Global Message (such as user_id, name, email, phone)'\n        html:\n          type: string\n          description: HTML for each returned Global Message to render views\n    GlobalMessageUserData:\n      type: object\n      description: The Global Message type info\n      properties:\n        message_type:\n          type: string\n          description: The Global Message type for validation checks\n        dismissible_flag:\n          type: boolean\n          description: Whether a User can dismiss the Global Message or not\n        priority:\n          type: integer\n          description: Sorts messages by priority DESC (from 0 to 10)\n    GlobalMessageDelete:\n      allOf:\n        - $ref: '#/components/schemas/GlobalMessageBaseResponse'\n        - type: object\n          properties:\n            data:\n              $ref: '#/components/schemas/GlobalMessageData'\n            handle_time:\n              type: number\n              description: The total time of the controller processing\n            _req_time_ctx_ms:\n              type: object\n              description: 'The list of timers formatted by name and elapsed time in ms (such as app, app_xss_clean, db_connect)'\n",
			"canonicalURL": "/github.com/mvrabel/nifi-postgres-metabase@85f842d1dc140a3b1703469115911923772538ca/-/blob/api_examples/pipedrive-api.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mvrabel/nifi-postgres-metabase/blob/85f842d1dc140a3b1703469115911923772538ca/api_examples/pipedrive-api.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"PostRoleSettings\": parse schema: parse schema: property \"data\": parse schema: property \"deal_default_visibility\": at 1:121028: parse enum values: parse value \"\\\"deal_default_visibility\\\"\": expected type \"number\", got \"string\""
}