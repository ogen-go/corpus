{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/bigpanther/trober"
		},
		"file": {
			"name": "trober.yaml",
			"size": 0,
			"path": "sdk/trober.yaml",
			"byteSize": 40270,
			"content": "openapi: 3.0.3\nservers:\n  - description: The trober test API\n    url: https://trober-test.herokuapp.com\n  - description: The trober production API\n    url: https://trober.herokuapp.com\ninfo:\n  version: \"0.1.9\"\n  title: Trober API\n  description: \u003e-\n    The trober API\n\nsecurity:\n  - ApiKeyAuth: []\npaths:\n  /tenants:\n    get:\n      summary: List all tenants\n      description: \u003e-\n        List all tenants\n\n      parameters:\n        - name: name\n          in: query\n          required: false\n          description: The name of the tenant. Matches names that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n        - name: type\n          in: query\n          required: false\n          description: The type of the tenant.\n          schema:\n            $ref: \"#/components/schemas/TenantType\"\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tenants\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new tenant\n      description: \u003e-\n        Create a new tenant\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Tenant\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tenant\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/tenants/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing tenant\n      description: \u003e-\n        Update an existing tenant\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Tenant\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tenant\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get tenant details\n      description: \u003e-\n        Get tenant details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tenant\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /shipments:\n    get:\n      summary: List all Shipments\n      description: \u003e-\n        List all Shipments\n\n      parameters:\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n        - name: order_id\n          in: query\n          required: false\n          description: The id of the order\n          schema:\n            type: string\n            format: uuid\n        - name: carrier_id\n          in: query\n          required: false\n          description: The id of the carrier\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n        - name: driver_id\n          in: query\n          required: false\n          description: The id of the driver\n          schema:\n            type: string\n            format: uuid\n        - name: serial_number\n          in: query\n          required: false\n          description: The serialNumber of the shipment. Matches serialNumber that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: type\n          in: query\n          required: false\n          description: The type of the shipment.\n          schema:\n            $ref: \"#/components/schemas/ShipmentType\"\n        - name: status\n          in: query\n          required: false\n          description: The status of the shipment.\n          schema:\n            $ref: \"#/components/schemas/ShipmentStatus\"\n        - name: size\n          in: query\n          required: false\n          description: The size of the shipment.\n          schema:\n            $ref: \"#/components/schemas/ShipmentSize\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Shipments\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new Shipment\n      description: \u003e-\n        Create a new Shipment\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Shipment\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Shipment\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/shipments/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the shipment\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing shipment\n      description: \u003e-\n        Update an existing shipment\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Shipment\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Shipment\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the shipment\n          schema:\n            type: string\n            format: uuid\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get shipment details\n      description: \u003e-\n        Get shipment details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Shipment\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /terminals:\n    get:\n      summary: List all Terminals\n      description: \u003e-\n        List all Terminals\n\n      parameters:\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n        - name: name\n          in: query\n          required: false\n          description: The name of the terminal. Matches names that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: type\n          in: query\n          required: false\n          description: The type of the terminal.\n          schema:\n            $ref: \"#/components/schemas/TerminalType\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Terminals\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new Terminal\n      description: \u003e-\n        Create a new Terminal\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Terminal\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Terminal\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/terminals/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the terminal\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing terminal\n      description: \u003e-\n        Update an existing terminal\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Terminal\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Terminal\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the terminal\n          schema:\n            type: string\n            format: uuid\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get terminal details\n      description: \u003e-\n        Get terminal details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Terminal\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /orders:\n    get:\n      summary: List all Orders\n      description: \u003e-\n        List all Orders\n\n      parameters:\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n        - name: customer_id\n          in: query\n          required: false\n          description: The id of the customer\n          schema:\n            type: string\n            format: uuid\n        - name: serial_number\n          in: query\n          required: false\n          description: The serialNumber of the order. Matches serialNumber that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: status\n          in: query\n          required: false\n          description: The status of the order.\n          schema:\n            $ref: \"#/components/schemas/OrderStatus\"\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Orders\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new Order\n      description: \u003e-\n        Create a new Order\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/orders/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the order\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing order\n      description: \u003e-\n        Update an existing order\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the order\n          schema:\n            type: string\n            format: uuid\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get order details\n      description: \u003e-\n        Get order details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /carriers:\n    get:\n      summary: List all Carriers\n      description: \u003e-\n        List all Carriers\n\n      parameters:\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n        - name: name\n          in: query\n          required: false\n          description: The name of the carrier. Matches names that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n        - name: type\n          in: query\n          required: false\n          description: The type of the carrier.\n          schema:\n            $ref: \"#/components/schemas/CarrierType\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Carriers\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new Carrier\n      description: \u003e-\n        Create a new Carrier\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Carrier\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Carrier\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/carriers/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the carrier\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing carrier\n      description: \u003e-\n        Update an existing carrier\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Carrier\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Carrier\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the carrier\n          schema:\n            type: string\n            format: uuid\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get carrier details\n      description: \u003e-\n        Get carrier details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Carrier\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /customers:\n    get:\n      summary: List all Customers\n      description: \u003e-\n        List all Customers\n\n      parameters:\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n        - name: name\n          in: query\n          required: false\n          description: The name of the customer. Matches names that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customers\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new Customer\n      description: \u003e-\n        Create a new Customer\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/customers/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the customer\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing customer\n      description: \u003e-\n        Update an existing customer\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Customer\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the customer\n          schema:\n            type: string\n            format: uuid\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get customer details\n      description: \u003e-\n        Get customer details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Customer\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /users:\n    get:\n      summary: List all users\n      description: \u003e-\n        List all users\n\n      parameters:\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n        - name: page\n          in: query\n          required: false\n          description: The page number\n          schema:\n            type: string\n            format: int\n        - name: name\n          in: query\n          description: The name of the customer. Matches names that begin with the values\n          schema:\n            type: string\n            minLength: 2\n        - name: role\n          in: query\n          description: The role of the user\n          schema:\n            $ref: \"#/components/schemas/UserRole\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Users\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      summary: Create a new user\n      description: \u003e-\n        Create a new user\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n      responses:\n        \"201\":\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  \"/users/{id}\":\n    put:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the user\n          schema:\n            type: string\n            format: uuid\n      summary: Update an existing user\n      description: \u003e-\n        Update an existing user\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    get:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the user\n          schema:\n            type: string\n            format: uuid\n        - name: tenant_id\n          in: query\n          required: false\n          description: The id of the tenant\n          schema:\n            type: string\n            format: uuid\n      summary: Get user details\n      description: \u003e-\n        Get user details\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      parameters:\n        - name: id\n          in: path\n          required: true\n          description: The id of the user\n          schema:\n            type: string\n            format: uuid\n      summary: Delete the user\n      description: \u003e-\n        Delete the user\n\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /appinfo:\n    get:\n      summary: Get supported App info\n      description: \u003e-\n        Get supported App info\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AppInfo\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /self:\n    get:\n      summary: Get details of the logged in user\n      description: \u003e-\n        Get details of the logged in user\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /self/device-register:\n    post:\n      summary: Register the device for the user\n      description: \u003e-\n        Register the device for the user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceId\"\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /self/device-remove:\n    post:\n      summary: Remove the device for the user\n      description: \u003e-\n        Remove the device for the user\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/DeviceId\"\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /self/tenant:\n    get:\n      summary: Get tenant details of the logged in user\n      description: \u003e-\n        Get tenant details of the logged in user\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Tenant\"\n        default:\n          description: error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /health:\n    get:\n      summary: Get server health\n      description: \u003e-\n        Get server health status\n\n      security: []\n      responses:\n        \"200\":\n          description: OK\ncomponents:\n  schemas:\n    Tenants:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Tenant\"\n      description: A list of Tenants\n    Tenant:\n      type: object\n      required:\n        - id\n        - name\n        - code\n        - type\n        - created_at\n        - updated_at\n      properties:\n        id:\n          type: string\n          format: uuid\n          nullable: false\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          nullable: false\n          minLength: 3\n          maxLength: 50\n        code:\n          nullable: false\n          type: string\n          minLength: 6\n          maxLength: 20\n        type:\n          $ref: \"#/components/schemas/TenantType\"\n      description: A Tenant in the system\n    Users:\n      type: array\n      items:\n        $ref: \"#/components/schemas/User\"\n      description: A list of Users\n    AppInfo:\n      type: object\n      required:\n        - minVersion\n      properties:\n        minVersion:\n          type: string\n          readOnly: true\n          nullable: false\n    DeviceId:\n      type: object\n      properties:\n        token:\n          type: string\n          nullable: false\n      required:\n        - token\n    User:\n      type: object\n      required:\n        - id\n        - name\n        - code\n        - role\n        - tenant_id\n        - email\n        - username\n        - created_at\n        - updated_at\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n          nullable: false\n          default: '00000000-0000-0000-0000-000000000000'\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          readOnly: true\n        tenant_id:\n          type: string\n          format: uuid\n          nullable: false\n        customer_id:\n          type: string\n          format: uuid\n        name:\n          type: string\n          minLength: 3\n          maxLength: 50\n          nullable: false\n        username:\n          type: string\n          minLength: 3\n          maxLength: 50\n          nullable: false\n        email:\n          type: string\n          minLength: 3\n          maxLength: 50\n          nullable: false\n        role:\n          nullable: false\n          $ref: \"#/components/schemas/UserRole\"\n      description: A user in the system\n    Customers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Customer\"\n      description: A list of Customers for the tenants\n    Customer:\n      type: object\n      required:\n        - id\n        - name\n        - tenant_id\n        - created_at\n        - updated_at\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n          nullable: false\n          default: '00000000-0000-0000-0000-000000000000'\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          readOnly: true\n        tenant_id:\n          type: string\n          format: uuid\n          nullable: false\n        name:\n          type: string\n          minLength: 3\n          maxLength: 50\n          nullable: false\n    Terminals:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Terminal\"\n      description: A list of Terminals\n    Terminal:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n          nullable: false\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          readOnly: true\n        tenant_id:\n          type: string\n          format: uuid\n          nullable: false\n        name:\n          nullable: false\n          type: string\n          minLength: 3\n          maxLength: 50\n        type:\n          nullable: false\n          $ref: \"#/components/schemas/TerminalType\"\n      description: A terminal that used for logistics\n    Carriers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Carrier\"\n      description: A list of Carriers\n    Carrier:\n      type: object\n      required:\n        - id\n        - name\n        - tenant_id\n        - type\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n          nullable: false\n          default: '00000000-0000-0000-0000-000000000000'\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          readOnly: true\n        tenant_id:\n          nullable: false\n          type: string\n          format: uuid\n        name:\n          nullable: false\n          type: string\n          minLength: 3\n          maxLength: 50\n        eta:\n          type: string\n          format: date-time\n          readOnly: true\n        type:\n          nullable: false\n          $ref: \"#/components/schemas/CarrierType\"\n      description: A carrier that ships the shipments\n    Shipments:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Shipment\"\n      description: A list of Shipments\n    Shipment:\n      type: object\n      required:\n        - id\n        - serial_number\n        - tenant_id\n        - type\n        - created_at\n        - updated_at\n        - status\n      properties:\n        id:\n          nullable: false\n          type: string\n          format: uuid\n          readOnly: true\n          default: '00000000-0000-0000-0000-000000000000'\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          nullable: false\n          type: string\n          format: uuid\n          readOnly: true\n        tenant_id:\n          nullable: false\n          type: string\n          format: uuid\n        carrier_id:\n          type: string\n          format: uuid\n        order_id:\n          type: string\n          format: uuid\n        customer_id:\n          type: string\n          format: uuid\n        serial_number:\n          nullable: false\n          type: string\n          minLength: 5\n          maxLength: 11\n        origin:\n          type: string\n          minLength: 7\n          maxLength: 20\n        destination:\n          type: string\n          minLength: 7\n          maxLength: 20\n        reservation_time:\n          type: string\n          format: date-time\n        size:\n          $ref: \"#/components/schemas/ShipmentSize\"\n        type:\n          $ref: \"#/components/schemas/ShipmentType\"\n        status:\n          nullable: false\n          $ref: \"#/components/schemas/ShipmentStatus\"\n        driver_id:\n          type: string\n          format: uuid\n        driver:\n          $ref: \"#/components/schemas/User\"\n        order:\n          $ref: \"#/components/schemas/Order\"\n        customer:\n          $ref: \"#/components/schemas/Customer\"\n        carrier:\n          $ref: \"#/components/schemas/Carrier\"\n      description: A shipment that is being shipped\n    Orders:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Order\"\n      description: A list of Orders\n    Order:\n      type: object\n      required:\n        - id\n        - serial_number\n        - tenant_id\n        - status\n        - created_at\n        - updated_at\n      properties:\n        id:\n          nullable: false\n          type: string\n          format: uuid\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          nullable: false\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          readOnly: true\n        tenant_id:\n          nullable: false\n          type: string\n          format: uuid\n        customer_id:\n          type: string\n          format: uuid\n        carrier_id:\n          type: string\n          format: uuid\n        terminal_id:\n          type: string\n          format: uuid\n        serial_number:\n          nullable: false\n          type: string\n          minLength: 7\n          maxLength: 25\n        eta:\n          type: string\n          format: date-time\n        so_number:\n          type: string\n        shipline:\n          type: string\n        pickup_charges:\n          type: int\n        pickup_cost:\n          type: int\n        dropoff_charges:\n          type: int\n        dropoff_cost:\n          type: int\n        rld:\n          type: string\n        erd:\n          type: string\n          format: date-time\n        docco:\n          type: string\n          format: date-time\n        lfd:\n          type: string\n          format: date-time\n        container_status:\n          type: string\n        shipment_count:\n          type: int\n          readOnly: true\n        status:\n          nullable: false\n          $ref: \"#/components/schemas/OrderStatus\"\n        type:\n          $ref: \"#/components/schemas/ShipmentType\"\n        customer:\n          nullable: false\n          $ref: \"#/components/schemas/Customer\"\n        carrier:\n          nullable: true\n          $ref: \"#/components/schemas/Carrier\"\n        terminal:\n          nullable: true\n          $ref: \"#/components/schemas/Terminal\"\n        shipments:\n          $ref: \"#/components/schemas/Shipments\"\n      description: A customer order that is being processed\n    TenantType:\n      type: string\n      enum:\n        - System\n        - Test\n        - Production\n    TerminalType:\n      type: string\n      enum:\n        - Rail\n        - Port\n        - Airport\n        - Warehouse\n        - Yard\n        - Custom\n    CarrierType:\n      type: string\n      enum:\n        - Air\n        - Rail\n        - Vessel\n        - Road\n    UserRole:\n      type: string\n      enum:\n        - SuperAdmin\n        - Admin\n        - BackOffice\n        - Driver\n        - Customer\n        - None\n    ShipmentStatus:\n      type: string\n      enum:\n        - Unassigned\n        - InTransit\n        - Arrived\n        - Assigned\n        - Accepted\n        - Rejected\n        - Loaded\n        - Delivered\n    ShipmentSize:\n      type: string\n      enum:\n        - 40ST\n        - 20ST\n        - 40HC\n        - 40HW\n        - Custom\n    OrderStatus:\n      type: string\n      enum:\n        - Open\n        - Accepted\n        - Cancelled\n        - InProgress\n        - Delivered\n        - Invoiced\n        - PaymentReceived\n    ShipmentType:\n      type: string\n      enum:\n        - Inbound\n        - Outbound\n    Error:\n      type: object\n      required:\n        - code\n        - message\n        - id\n      properties:\n        code:\n          type: string\n          nullable: false\n        message:\n          type: string\n          nullable: false\n        id:\n          type: string\n          format: uuid\n          nullable: false\n\n  securitySchemes:\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-TOKEN\n",
			"canonicalURL": "/github.com/bigpanther/trober@3273120dd621eb9a2bc250104760b992bae40803/-/blob/sdk/trober.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/bigpanther/trober/blob/3273120dd621eb9a2bc250104760b992bae40803/sdk/trober.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"Order\": parse schema: property \"dropoff_charges\": at 1:2708: parse schema: unexpected schema type: \"int\""
}