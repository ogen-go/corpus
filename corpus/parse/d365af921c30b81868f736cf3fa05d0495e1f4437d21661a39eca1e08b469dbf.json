{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/servicecatalog-appregistry/2020-06-24/openapi.yaml",
			"byteSize": 75778,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2020-06-24'\n  x-release: v4\n  title: AWS Service Catalog App Registry\n  description: ' Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: servicecatalog-appregistry\n  x-aws-signingName: servicecatalog\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/servicecatalog-appregistry-2020-06-24.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/servicecatalog-appregistry/'\nservers:\n  - url: 'http://servicecatalog-appregistry.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AppRegistry multi-region endpoint\n  - url: 'https://servicecatalog-appregistry.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The AppRegistry multi-region endpoint\n  - url: 'http://servicecatalog-appregistry.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AppRegistry endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://servicecatalog-appregistry.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AppRegistry endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  '/applications/{application}/attribute-groups/{attributeGroup}':\n    put:\n      operationId: AssociateAttributeGroup\n      description: 'Associates an attribute group with an application to augment the application''s metadata with the group''s attributes. This feature enables applications to be described with user-defined details that are machine-readable, such as third-party integrations.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateAttributeGroupResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '483':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: attributeGroup\n          in: path\n          required: true\n          description: The name or ID of the attribute group that holds the attributes to describe the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateAttributeGroup\n      description: Disassociates an attribute group from an application to remove the extra attributes contained in the attribute group from the application's metadata. This operation reverts \u003ccode\u003eAssociateAttributeGroup\u003c/code\u003e.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateAttributeGroupResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: attributeGroup\n          in: path\n          required: true\n          description: The name or ID of the attribute group that holds the attributes to describe the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n  '/applications/{application}/resources/{resourceType}/{resource}':\n    put:\n      operationId: AssociateResource\n      description: Associates a resource with an application. Both the resource and the application can be specified either by ID or name.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AssociateResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '483':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: resourceType\n          in: path\n          required: true\n          description: The type of resource of which the application will be associated.\n          schema:\n            type: string\n            enum:\n              - CFN_STACK\n        - name: resource\n          in: path\n          required: true\n          description: The name or ID of the resource of which the application will be associated.\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    delete:\n      operationId: DisassociateResource\n      description: Disassociates a resource from application. Both the resource and the application can be specified either by ID or name.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisassociateResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: resourceType\n          in: path\n          required: true\n          description: The type of the resource that is being disassociated.\n          schema:\n            type: string\n            enum:\n              - CFN_STACK\n        - name: resource\n          in: path\n          required: true\n          description: The name or ID of the resource.\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 256\n    get:\n      operationId: GetAssociatedResource\n      description: Gets the resource associated with the application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAssociatedResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: resourceType\n          in: path\n          required: true\n          description: The type of resource associated with the application.\n          schema:\n            type: string\n            enum:\n              - CFN_STACK\n        - name: resource\n          in: path\n          required: true\n          description: The name or ID of the resource associated with the application.\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 256\n  /applications:\n    post:\n      operationId: CreateApplication\n      description: Creates a new application that is the top-level node in a hierarchy of related cloud resource abstractions.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateApplicationResponse'\n        '480':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - clientToken\n              properties:\n                name:\n                  description: The name of the application. The name must be unique in the region in which you are creating the application.\n                  type: string\n                  pattern: '[-.\\w]+'\n                  minLength: 1\n                  maxLength: 256\n                description:\n                  description: The description of the application.\n                  type: string\n                  maxLength: 1024\n                tags:\n                  description: Key-value pairs you can use to associate with the application.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: 'A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.'\n                  type: string\n                  pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListApplications\n      description: Retrieves a list of all of your applications. Results are paginated.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListApplicationsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token to use to get the next page of results after a previous API call. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9+/=]+'\n            minLength: 1\n            maxLength: 2024\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n  /attribute-groups:\n    post:\n      operationId: CreateAttributeGroup\n      description: Creates a new attribute group as a container for user-defined attributes. This feature enables users to have full control over their cloud application's metadata in a rich machine-readable format to facilitate integration with automated workflows and third-party tools.\n      responses:\n        '201':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateAttributeGroupResponse'\n        '480':\n          description: ServiceQuotaExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ServiceQuotaExceededException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - attributes\n                - clientToken\n              properties:\n                name:\n                  description: The name of the attribute group.\n                  type: string\n                  pattern: '[-.\\w]+'\n                  minLength: 1\n                  maxLength: 256\n                description:\n                  description: The description of the attribute group that the user provides.\n                  type: string\n                  maxLength: 1024\n                attributes:\n                  description: A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.\n                  type: string\n                  pattern: '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+'\n                  minLength: 1\n                  maxLength: 8000\n                tags:\n                  description: Key-value pairs you can use to associate with the attribute group.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n                clientToken:\n                  description: 'A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.'\n                  type: string\n                  pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'\n                  minLength: 1\n                  maxLength: 128\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: ListAttributeGroups\n      description: Lists all attribute groups which you have access to. Results are paginated.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAttributeGroupsResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token to use to get the next page of results after a previous API call. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9+/=]+'\n            minLength: 1\n            maxLength: 2024\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n  '/applications/{application}':\n    delete:\n      operationId: DeleteApplication\n      description: Deletes an application that is specified either by its application ID or name. All associated attribute groups and resources must be disassociated from it before deleting an application.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteApplicationResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetApplication\n      description: 'Retrieves metadata information about one of your applications. The application can be specified either by its unique ID or by its name (which is unique within one account in one region at a given point in time). Specify by ID in automated workflows if you want to make sure that the exact same application is returned or a \u003ccode\u003eResourceNotFoundException\u003c/code\u003e is thrown, avoiding the ABA addressing problem.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetApplicationResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n    patch:\n      operationId: UpdateApplication\n      description: Updates an existing application with new attributes.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateApplicationResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application that will be updated.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: The new name of the application. The name must be unique in the region in which you are updating the application.\n                  type: string\n                  pattern: '[-.\\w]+'\n                  minLength: 1\n                  maxLength: 256\n                description:\n                  description: The new description of the application.\n                  type: string\n                  maxLength: 1024\n  '/attribute-groups/{attributeGroup}':\n    delete:\n      operationId: DeleteAttributeGroup\n      description: 'Deletes an attribute group, specified either by its attribute group ID or name.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteAttributeGroupResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: attributeGroup\n          in: path\n          required: true\n          description: The name or ID of the attribute group that holds the attributes to describe the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    get:\n      operationId: GetAttributeGroup\n      description: 'Retrieves an attribute group, either by its name or its ID. The attribute group can be specified either by its unique ID or by its name.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetAttributeGroupResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: attributeGroup\n          in: path\n          required: true\n          description: The name or ID of the attribute group that holds the attributes to describe the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n    patch:\n      operationId: UpdateAttributeGroup\n      description: 'Updates an existing attribute group with new details. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateAttributeGroupResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n        '483':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: attributeGroup\n          in: path\n          required: true\n          description: The name or ID of the attribute group that holds the attributes to describe the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group.\n                  type: string\n                  pattern: '[-.\\w]+'\n                  minLength: 1\n                  maxLength: 256\n                description:\n                  description: The description of the attribute group that the user provides.\n                  type: string\n                  maxLength: 1024\n                attributes:\n                  description: A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.\n                  type: string\n                  pattern: '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+'\n                  minLength: 1\n                  maxLength: 8000\n  '/applications/{application}/attribute-groups':\n    get:\n      operationId: ListAssociatedAttributeGroups\n      description: Lists all attribute groups that are associated with specified application. Results are paginated.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAssociatedAttributeGroupsResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token to use to get the next page of results after a previous API call. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9+/=]+'\n            minLength: 1\n            maxLength: 2024\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/applications/{application}/resources':\n    get:\n      operationId: ListAssociatedResources\n      description: Lists all resources that are associated with specified application. Results are paginated.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAssociatedResourcesResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: application\n          in: path\n          required: true\n          description: The name or ID of the application.\n          schema:\n            type: string\n            pattern: '[-.\\w]+'\n            minLength: 1\n            maxLength: 256\n        - name: nextToken\n          in: query\n          required: false\n          description: 'The token to use to get the next page of results after a previous API call. '\n          schema:\n            type: string\n            pattern: '[A-Za-z0-9+/=]+'\n            minLength: 1\n            maxLength: 2024\n        - name: maxResults\n          in: query\n          required: false\n          description: 'The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.'\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 25\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}':\n    get:\n      operationId: ListTagsForResource\n      description: Lists all of the tags on the resource.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsForResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon resource name (ARN) that specifies the resource.\n          schema:\n            type: string\n            pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)'\n            minLength: 1\n            maxLength: 1600\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n    post:\n      operationId: TagResource\n      description: '\u003cp\u003eAssigns one or more tags (key-value pairs) to the specified resource.\u003c/p\u003e \u003cp\u003eEach tag consists of a key and an optional value. If a tag with the same key is already associated with the resource, this action updates its value.\u003c/p\u003e \u003cp\u003eThis operation returns an empty response if the call was successful.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon resource name (ARN) that specifies the resource.\n          schema:\n            type: string\n            pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)'\n            minLength: 1\n            maxLength: 1600\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: The new or modified tags for the resource.\n                  type: object\n                  minProperties: 0\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: '#/components/schemas/TagValue'\n  '/sync/{resourceType}/{resource}':\n    post:\n      operationId: SyncResource\n      description: '\u003cp\u003eSyncs the resource with current AppRegistry records.\u003c/p\u003e \u003cp\u003eSpecifically, the resource’s AppRegistry system tags sync with its associated application. We remove the resource''s AppRegistry system tags if it does not associate with the application. The caller must have permissions to read and update the resource.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SyncResourceResponse'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n        '482':\n          description: ConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConflictException'\n      parameters:\n        - name: resourceType\n          in: path\n          required: true\n          description: The type of resource of which the application will be associated.\n          schema:\n            type: string\n            enum:\n              - CFN_STACK\n        - name: resource\n          in: path\n          required: true\n          description: 'An entity you can work with and specify with a name or ID. Examples include an Amazon EC2 instance, an Amazon Web Services CloudFormation stack, or an Amazon S3 bucket.'\n          schema:\n            type: string\n            pattern: \\S+\n            minLength: 1\n            maxLength: 256\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  '/tags/{resourceArn}#tagKeys':\n    delete:\n      operationId: UntagResource\n      description: \u003cp\u003eRemoves tags from a resource.\u003c/p\u003e \u003cp\u003eThis operation returns an empty response if the call was successful.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UntagResourceResponse'\n        '480':\n          description: ValidationException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidationException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerException'\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The Amazon resource name (ARN) that specifies the resource.\n          schema:\n            type: string\n            pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)'\n            minLength: 1\n            maxLength: 1600\n        - name: tagKeys\n          in: query\n          required: true\n          description: A list of the tag keys to remove from the specified resource.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/TagKey'\n            minItems: 0\n            maxItems: 50\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    AssociateAttributeGroupResponse:\n      type: object\n      properties:\n        applicationArn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) of the application that was augmented with attributes.\n        attributeGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupArn'\n            - description: The Amazon resource name (ARN) of the attribute group that contains the application's new attributes.\n    ResourceNotFoundException: {}\n    ValidationException: {}\n    InternalServerException: {}\n    ServiceQuotaExceededException: {}\n    AssociateResourceResponse:\n      type: object\n      properties:\n        applicationArn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) of the application that was augmented with attributes.\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon resource name (ARN) that specifies the resource.\n    ConflictException: {}\n    CreateApplicationResponse:\n      type: object\n      properties:\n        application:\n          allOf:\n            - $ref: '#/components/schemas/Application'\n            - description: Information about the application.\n    TagValue:\n      type: string\n      pattern: '[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*'\n      maxLength: 256\n    CreateAttributeGroupResponse:\n      type: object\n      properties:\n        attributeGroup:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroup'\n            - description: Information about the attribute group.\n    DeleteApplicationResponse:\n      type: object\n      properties:\n        application:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationSummary'\n            - description: Information about the deleted application.\n    DeleteAttributeGroupResponse:\n      type: object\n      properties:\n        attributeGroup:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupSummary'\n            - description: Information about the deleted attribute group.\n    DisassociateAttributeGroupResponse:\n      type: object\n      properties:\n        applicationArn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) that specifies the application.\n        attributeGroupArn:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupArn'\n            - description: The Amazon resource name (ARN) that specifies the attribute group.\n    DisassociateResourceResponse:\n      type: object\n      properties:\n        applicationArn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) that specifies the application.\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon resource name (ARN) that specifies the resource.\n    GetApplicationResponse:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationId'\n            - description: The identifier of the application.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) that specifies the application across services.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the application. The name must be unique in the region in which you are creating the application.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the application.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment when the application was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment when the application was last updated.\n        associatedResourceCount:\n          allOf:\n            - $ref: '#/components/schemas/AssociationCount'\n            - description: The number of top-level resources that were registered as part of this application.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs associated with the application.\n        integrations:\n          allOf:\n            - $ref: '#/components/schemas/Integrations'\n            - description: 'The information about the integration of the application with other services, such as Resource Groups.'\n    GetAssociatedResourceResponse:\n      type: object\n      properties:\n        resource:\n          allOf:\n            - $ref: '#/components/schemas/Resource'\n            - description: The resource associated with the application.\n    GetAttributeGroupResponse:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupId'\n            - description: The identifier of the attribute group.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupArn'\n            - description: The Amazon resource name (ARN) that specifies the attribute group across services.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the attribute group.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the attribute group that the user provides.\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment the attribute group was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs associated with the attribute group.\n    ListApplicationsResponse:\n      type: object\n      properties:\n        applications:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationSummaries'\n            - description: This list of applications.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next page of results after a previous API call. '\n    ListAssociatedAttributeGroupsResponse:\n      type: object\n      properties:\n        attributeGroups:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupIds'\n            - description: A list of attribute group IDs.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next page of results after a previous API call. '\n    ListAssociatedResourcesResponse:\n      type: object\n      properties:\n        resources:\n          allOf:\n            - $ref: '#/components/schemas/Resources'\n            - description: Information about the resources.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next page of results after a previous API call. '\n    ListAttributeGroupsResponse:\n      type: object\n      properties:\n        attributeGroups:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupSummaries'\n            - description: This list of attribute groups.\n        nextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextToken'\n            - description: 'The token to use to get the next page of results after a previous API call. '\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The tags on the resource.\n    SyncResourceResponse:\n      type: object\n      properties:\n        applicationArn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) that specifies the application.\n        resourceArn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon resource name (ARN) that specifies the resource.\n        actionTaken:\n          allOf:\n            - $ref: '#/components/schemas/SyncAction'\n            - description: 'The results of the output if an application is associated with an ARN value, which could be \u003ccode\u003esyncStarted\u003c/code\u003e or None.'\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: '(?!aws:)[a-zA-Z+-=._:/]+'\n      minLength: 1\n      maxLength: 128\n    UpdateApplicationResponse:\n      type: object\n      properties:\n        application:\n          allOf:\n            - $ref: '#/components/schemas/Application'\n            - description: The updated information of the application.\n    UpdateAttributeGroupResponse:\n      type: object\n      properties:\n        attributeGroup:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroup'\n            - description: The updated information of the attribute group.\n    ApplicationId:\n      type: string\n      pattern: '[a-z0-9]+'\n      minLength: 26\n      maxLength: 26\n    ApplicationArn:\n      type: string\n      pattern: 'arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/applications/[a-z0-9]+'\n    Name:\n      type: string\n      pattern: '[-.\\w]+'\n      minLength: 1\n      maxLength: 256\n    Description:\n      type: string\n      maxLength: 1024\n    Timestamp:\n      type: string\n      format: date-time\n    Tags:\n      type: object\n      minProperties: 0\n      maxProperties: 50\n      additionalProperties:\n        $ref: '#/components/schemas/TagValue'\n    Application:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationId'\n            - description: The identifier of the application.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) that specifies the application across services.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the application. The name must be unique in the region in which you are creating the application.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the application.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment when the application was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: ' The ISO-8601 formatted timestamp of the moment when the application was last updated.'\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs you can use to associate with the application.\n      description: Represents a Amazon Web Services Service Catalog AppRegistry application that is the top-level node in a hierarchy of related cloud resource abstractions.\n    ApplicationSpecifier:\n      type: string\n      pattern: '[-.\\w]+'\n      minLength: 1\n      maxLength: 256\n    ApplicationSummary:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationId'\n            - description: The identifier of the application.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/ApplicationArn'\n            - description: The Amazon resource name (ARN) that specifies the application across services.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the application. The name must be unique in the region in which you are creating the application.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the application.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment when the application was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: ' The ISO-8601 formatted timestamp of the moment when the application was last updated.'\n      description: Summary of a Amazon Web Services Service Catalog AppRegistry application.\n    ApplicationSummaries:\n      type: array\n      items:\n        $ref: '#/components/schemas/ApplicationSummary'\n    Arn:\n      type: string\n      pattern: 'arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)'\n      minLength: 1\n      maxLength: 1600\n    AttributeGroupSpecifier:\n      type: string\n      pattern: '[-.\\w]+'\n      minLength: 1\n      maxLength: 256\n    AssociateAttributeGroupRequest:\n      type: object\n      title: AssociateAttributeGroupRequest\n      properties: {}\n    AttributeGroupArn:\n      type: string\n      pattern: 'arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/attribute-groups/[a-z0-9]+'\n    ResourceType:\n      type: string\n      enum:\n        - CFN_STACK\n    ResourceSpecifier:\n      type: string\n      pattern: \\S+\n      minLength: 1\n      maxLength: 256\n    AssociateResourceRequest:\n      type: object\n      title: AssociateResourceRequest\n      properties: {}\n    AssociationCount:\n      type: integer\n      minimum: 0\n    AttributeGroupId:\n      type: string\n      pattern: '[a-z0-9]+'\n      minLength: 26\n      maxLength: 26\n    AttributeGroup:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupId'\n            - description: The globally unique attribute group identifier of the attribute group.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupArn'\n            - description: The Amazon resource name (ARN) that specifies the attribute group across services.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the attribute group.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the attribute group that the user provides.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment the attribute group was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs you can use to associate with the attribute group.\n      description: Represents a Amazon Web Services Service Catalog AppRegistry attribute group that is rich metadata which describes an application and its components.\n    AttributeGroupIds:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeGroupId'\n    AttributeGroupSummary:\n      type: object\n      properties:\n        id:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupId'\n            - description: The globally unique attribute group identifier of the attribute group.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/AttributeGroupArn'\n            - description: The Amazon resource name (ARN) that specifies the attribute group across services.\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the attribute group.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the attribute group that the user provides.\n        creationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment the attribute group was created.\n        lastUpdateTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.\n      description: Summary of a Amazon Web Services Service Catalog AppRegistry attribute group.\n    AttributeGroupSummaries:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeGroupSummary'\n    Attributes:\n      type: string\n      pattern: '[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+'\n      minLength: 1\n      maxLength: 8000\n    ClientToken:\n      type: string\n      pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'\n      minLength: 1\n      maxLength: 128\n    CreateApplicationRequest:\n      type: object\n      required:\n        - name\n        - clientToken\n      title: CreateApplicationRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the application. The name must be unique in the region in which you are creating the application.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the application.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs you can use to associate with the application.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.'\n    CreateAttributeGroupRequest:\n      type: object\n      required:\n        - name\n        - attributes\n        - clientToken\n      title: CreateAttributeGroupRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The name of the attribute group.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the attribute group that the user provides.\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: Key-value pairs you can use to associate with the attribute group.\n        clientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.'\n    DeleteApplicationRequest:\n      type: object\n      title: DeleteApplicationRequest\n      properties: {}\n    DeleteAttributeGroupRequest:\n      type: object\n      title: DeleteAttributeGroupRequest\n      properties: {}\n    DisassociateAttributeGroupRequest:\n      type: object\n      title: DisassociateAttributeGroupRequest\n      properties: {}\n    DisassociateResourceRequest:\n      type: object\n      title: DisassociateResourceRequest\n      properties: {}\n    GetApplicationRequest:\n      type: object\n      title: GetApplicationRequest\n      properties: {}\n    Integrations:\n      type: object\n      properties:\n        resourceGroup:\n          allOf:\n            - $ref: '#/components/schemas/ResourceGroup'\n            - description: ' The information about the resource group integration.'\n      description: ' The information about the service integration.'\n    GetAssociatedResourceRequest:\n      type: object\n      title: GetAssociatedResourceRequest\n      properties: {}\n    Resource:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceSpecifier'\n            - description: The name of the resource.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/StackArn'\n            - description: The Amazon resource name (ARN) of the resource.\n        associationTime:\n          allOf:\n            - $ref: '#/components/schemas/Timestamp'\n            - description: The time the resource was associated with the application.\n        integrations:\n          allOf:\n            - $ref: '#/components/schemas/ResourceIntegrations'\n            - description: 'The service integration information about the resource. '\n      description: ' The information about the resource.'\n    GetAttributeGroupRequest:\n      type: object\n      title: GetAttributeGroupRequest\n      properties: {}\n    ResourceGroup:\n      type: object\n      properties:\n        state:\n          allOf:\n            - $ref: '#/components/schemas/ResourceGroupState'\n            - description: '\u003cp\u003eThe state of the propagation process for the resource group. The states includes:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCREATING \u003c/code\u003eif the resource group is in the process of being created.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCREATE_COMPLETE\u003c/code\u003e if the resource group was created successfully.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCREATE_FAILED\u003c/code\u003e if the resource group failed to be created.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e if the resource group is in the process of being updated.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eUPDATE_COMPLETE\u003c/code\u003e if the resource group updated successfully.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eUPDATE_FAILED\u003c/code\u003e if the resource group could not update successfully.\u003c/p\u003e'\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/Arn'\n            - description: The Amazon resource name (ARN) of the resource group.\n        errorMessage:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The error message that generates when the propagation process for the resource group fails.\n      description: The information about the resource group integration.\n    NextToken:\n      type: string\n      pattern: '[A-Za-z0-9+/=]+'\n      minLength: 1\n      maxLength: 2024\n    MaxResults:\n      type: integer\n      minimum: 1\n      maximum: 25\n    ListApplicationsRequest:\n      type: object\n      title: ListApplicationsRequest\n      properties: {}\n    ListAssociatedAttributeGroupsRequest:\n      type: object\n      title: ListAssociatedAttributeGroupsRequest\n      properties: {}\n    ListAssociatedResourcesRequest:\n      type: object\n      title: ListAssociatedResourcesRequest\n      properties: {}\n    Resources:\n      type: array\n      items:\n        $ref: '#/components/schemas/ResourceInfo'\n    ListAttributeGroupsRequest:\n      type: object\n      title: ListAttributeGroupsRequest\n      properties: {}\n    ListTagsForResourceRequest:\n      type: object\n      title: ListTagsForResourceRequest\n      properties: {}\n    StackArn:\n      type: string\n      pattern: 'arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}'\n    ResourceIntegrations:\n      type: object\n      properties:\n        resourceGroup:\n          allOf:\n            - $ref: '#/components/schemas/ResourceGroup'\n            - description: The information about the integration of Resource Groups.\n      description: The service integration information about the resource.\n    ResourceGroupState:\n      type: string\n      enum:\n        - CREATING\n        - CREATE_COMPLETE\n        - CREATE_FAILED\n        - UPDATING\n        - UPDATE_COMPLETE\n        - UPDATE_FAILED\n    String:\n      type: string\n    ResourceInfo:\n      type: object\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/ResourceSpecifier'\n            - description: The name of the resource.\n        arn:\n          allOf:\n            - $ref: '#/components/schemas/StackArn'\n            - description: The Amazon resource name (ARN) that specifies the resource across services.\n      description: The information about the resource.\n    SyncAction:\n      type: string\n      enum:\n        - START_SYNC\n        - NO_ACTION\n    SyncResourceRequest:\n      type: object\n      title: SyncResourceRequest\n      properties: {}\n    TagKeys:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKey'\n      minItems: 0\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      title: TagResourceRequest\n      properties:\n        tags:\n          allOf:\n            - $ref: '#/components/schemas/Tags'\n            - description: The new or modified tags for the resource.\n    UntagResourceRequest:\n      type: object\n      title: UntagResourceRequest\n      properties: {}\n    UpdateApplicationRequest:\n      type: object\n      title: UpdateApplicationRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name of the application. The name must be unique in the region in which you are updating the application.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The new description of the application.\n    UpdateAttributeGroupRequest:\n      type: object\n      title: UpdateAttributeGroupRequest\n      properties:\n        name:\n          allOf:\n            - $ref: '#/components/schemas/Name'\n            - description: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group.\n        description:\n          allOf:\n            - $ref: '#/components/schemas/Description'\n            - description: The description of the attribute group that the user provides.\n        attributes:\n          allOf:\n            - $ref: '#/components/schemas/Attributes'\n            - description: A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@47bf2b618e492e31bc62743e9f72c47cb8460229/-/blob/APIs/amazonaws.com/servicecatalog-appregistry/2020-06-24/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/47bf2b618e492e31bc62743e9f72c47cb8460229/APIs/amazonaws.com/servicecatalog-appregistry/2020-06-24/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /tags/{resourceArn}#tagKeys: delete: operation \"UntagResource\": parse path \"/tags/{resourceArn}#tagKeys\": path MUST NOT contain a fragment"
}