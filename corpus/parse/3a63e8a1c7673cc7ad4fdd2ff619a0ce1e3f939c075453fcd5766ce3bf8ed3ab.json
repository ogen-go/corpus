{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/arXiv/arxiv-fulltext"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "schema/openapi.yaml",
			"byteSize": 10500,
			"content": "openapi: \"3.0.0\"\ninfo:\n  version: \"0.3\"\n  title: \"arXiv fulltext extraction service\"\n  contact:\n    name: \"arXiv API Team\"\n    email: nextgen@arxiv.org\n  license:\n    name: MIT\n\npaths:\n  /arxiv/arxiv/{identifier}:\n    get:\n      operationId: getLatestExtraction\n      summary: Retrieve the latest extraction for an e-print.\n      responses:\n        '200':\n          description: An extraction exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '303':\n          description: |\n            An extraction task exists for this paper using the current\n            extractor version.\n          headers:\n            Location:\n              description: The URI of the extraction task.\n              schema:\n                type: string\n\n    post:\n      operationId: requestExtraction\n      responses:\n        '202':\n          description: |\n            An extraction task has been created for this paper using the\n            current extractor version.\n          headers:\n            Location:\n              description: The URI of the extraction task.\n              schema:\n                type: string\n        '401':\n          description: Unauthorized. Missing valid authentication information.\n        '403':\n          description: |\n            Forbidden. Client or user is not authorized to force extraction.\n\n  /arxiv/{identifier}/format/{format}:\n    get:\n      operationId: getLatestExtractionByFormat\n      summary: |\n        Retrieve an extraction for a paper in a specific format.\n      responses:\n        '200':\n          description: The requested format exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '404':\n          description: The requested format does not exist.\n\n  /arxiv/{identifier}/version/{extractor_version}:\n    get:\n      operationId: getExtractionByVersion\n      summary: |\n        Retrieve an extraction for a paper from a specific extractor\n        version.\n      responses:\n        '200':\n          description: The requested version exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '404':\n          description: The requested version does not exist.\n\n  /arxiv/{identifier}/version/{extractor_version}/format/{format}:\n    get:\n      operationId: getExtractionByVersionAndFormat\n      summary: |\n        Retrieve an extraction for a paper from a specific extractor version\n        in a specific format.\n      responses:\n        '200':\n          description: The requested version and format exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '404':\n          description: The requested version + format does not exist.\n\n  /arxiv/{identifier}/status:\n    get:\n      operationId: getExtractionStatus\n      summary: |\n        Get the current status of an extraction task. If the extraction task\n        has completed successfully, redirects to the resulting fulltext\n        resource.\n      responses:\n        '200':\n          description: |\n            The extraction task exists, and is either pending, running, or has\n            failed.\n          content:\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '303':\n          description: |\n            The extraction task has completed successfully, and a fulltext\n            resource exists.\n          headers:\n            Location:\n              description: |\n                The URI of the fulltext resource created by this extraction\n                task.\n              schema:\n                type: string\n        '404':\n          description: The requested task does not exist.\n\n  /arxiv/{identifier}/version/{extractor_version}/status:\n    get:\n      operationId: getExtractionStatusByVersion\n      summary: |\n        Get the current status of an extraction task. If the extraction task\n        has completed successfully, redirects to the resulting fulltext\n        resource.\n      responses:\n        '200':\n          description: |\n            The extraction task exists, and is either pending, running, or has\n            failed.\n          content:\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '303':\n          description: |\n            The extraction task has completed successfully, and a fulltext\n            resource exists.\n          headers:\n            Location:\n              description: |\n                The URI of the fulltext resource created by this extraction\n                task.\n              schema:\n                type: string\n        '404':\n          description: The requested task does not exist.\n\n  /submission/{source_id}/{source_checksum}:\n    get:\n      operationId: getLatestSubmissionExtraction\n      summary: |\n        Retrieve the latest extraction for a submission.\n      responses:\n        '200':\n          description: |\n            An extraction for the current version of the extractor exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '303':\n          description: |\n            An extraction task exists for this submission using the current\n            extractor version.\n          headers:\n            Location:\n              description: The URI of the extraction task.\n              schema:\n                type: string\n\n    post:\n      operationId: requestSubmissionExtraction\n      responses:\n        '202':\n          description: |\n            An extraction task has been created for this submission using the\n            current extractor version.\n          headers:\n            Location:\n              description: The URI of the extraction task.\n              schema:\n                type: string\n        '401':\n          description: Unauthorized. Missing valid authentication information.\n        '403':\n          description: |\n            Forbidden. Client or user is not authorized to force extraction.\n\n  /submission/{source_id}/{source_checksum}/format/{format}:\n    get:\n      operationId: getSubmissionExtractionByFormat\n      summary: |\n        Retrieve an extraction for a submission in a specific format.\n      responses:\n        '200':\n          description: The requested format exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '404':\n          description: The requested format does not exist.\n\n  /submission/{source_id}/{source_checksum}/version/{extractor_version}:\n    get:\n      operationId: getSubmissionExtractionByVersion\n      summary: |\n        Retrieve an extraction for a submission from a specific extractor\n        version.\n      responses:\n        '200':\n          description: The requested version exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '404':\n          description: The requested version does not exist.\n\n  /submission/{source_id}/{source_checksum}/version/{extractor_version}/format/{format}:\n    get:\n      operationId: getSubmissionExtractionByVersionAndFormat\n      summary: |\n        Retrieve an extraction for a submission from a specific extractor\n        version in a specific format.\n      responses:\n        '200':\n          description: The requested version and format exists.\n          content:\n            text/plain:\n              schema:\n                type: string\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '404':\n          description: The requested version + format does not exist.\n\n  /submission/{source_id}/{source_checksum}/status:\n    get:\n      operationId: getSubmissionExtractionStatus\n      summary: |\n        Get the current status of an extraction task. If the extraction task\n        has completed successfully, redirects to the resulting fulltext\n        resource.\n      responses:\n        '200':\n          description: |\n            The extraction task exists, and is either pending, running, or has\n            failed.\n          content:\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '303':\n          description: |\n            The extraction task has completed successfully, and a fulltext\n            resource exists.\n          headers:\n            Location:\n              description: |\n                The URI of the fulltext resource created by this extraction\n                task.\n              schema:\n                type: string\n        '404':\n          description: The requested task does not exist.\n\n  /submission/{source_id}/{source_checksum}/version/{extractor_version}/status:\n    get:\n      operationId: getSubmissionExtractionStatusByVersion\n      summary: |\n        Get the current status of an extraction task. If the extraction task\n        has completed successfully, redirects to the resulting fulltext\n        resource.\n      responses:\n        '200':\n          description: |\n            The extraction task exists, and is either pending, running, or has\n            failed.\n          content:\n            application/json:\n              schema:\n                $ref: './resources/Extraction.json#'\n        '303':\n          description: |\n            The extraction task has completed successfully, and a fulltext\n            resource exists.\n          headers:\n            Location:\n              description: |\n                The URI of the fulltext resource created by this extraction\n                task.\n              schema:\n                type: string\n        '404':\n          description: The requested task does not exist.\n"
		}
	},
	"Error": "parse: parse spec: paths: /submission/{source_id}/{source_checksum}/version/{extractor_version}: get: operation \"getSubmissionExtractionByVersion\": parse path: path parameter not specified: \"source_id\""
}