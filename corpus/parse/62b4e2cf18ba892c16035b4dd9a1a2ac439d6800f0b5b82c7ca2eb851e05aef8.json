{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/radiantearth/stac-api-spec"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "ogcapi-features/extensions/version/openapi.yaml",
			"byteSize": 3144,
			"content": "openapi: 3.0.3\ninfo:\n  title: The SpatioTemporal Asset Catalog API - Item Search\n  version: 1.0.0-rc.1\n  description: \u003e-\n    This is an OpenAPI definition of the SpatioTemporal Asset Catalog API Item Search\n    specification.\n  contact:\n    name: STAC Specification\n    url: 'http://stacspec.org'\n  license:\n    name: Apache License 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0'\ntags:\n  - name: Version\n    description: This version API extension defines the API resources and semantics for creating and accessing versioned records.\npaths:\n  '/collections/{collectionId}/versions':\n    get:\n      summary: returns a list of links for a versioned collection\n      description: returns a list of links for a versioned collection\n      tags:\n        - Version\n      operationId: getCollectionVersions\n      parameters:\n        - $ref: '../../openapi.yaml#/components/parameters/collectionId'\n      responses:\n        '200':\n          description: A catalog JSON definition the returns list of links of a collection versions\n          content:\n            application/json:\n              schema:\n                $ref: '../../../core/commons.yaml#/components/schemas/catalog'\n  '/collections/{collectionId}/versions/{versionId}':\n    get:\n      summary: returns the requested version of a collection\n      description: returns the requested version of a collection\n      tags:\n        - Version\n      operationId: getCollectionVersion\n      parameters:\n        - $ref: '../../openapi.yaml#/components/parameters/collectionId'\n        - $ref: '#/components/parameters/versionId'\n      responses:\n        '200':\n          $ref: '../../openapi.yaml#/components/responses/Collections'\n  '/collections/{collectionId}/items/{featureId}/versions':\n    get:\n      summary: returns a list of links for a versioned item\n      description: returns a list of links for a versioned item\n      tags:\n        - Version\n      operationId: getItemVersions\n      parameters:\n        - $ref: '../../openapi.yaml#/components/parameters/collectionId'\n        - $ref: '../../openapi.yaml#/components/parameters/featureId'\n      responses:\n        '200':\n          description: A catalog JSON definition the returns list of links of an item versions\n          content:\n            application/json:\n              schema:\n                $ref: '../../../core/commons.yaml#/components/schemas/catalog'\n  '/collections/{collectionId}/items/{featureId}/versions/{versionId}':\n    get:\n      summary: returns the requested version of an item\n      description: returns the requested version of an item\n      tags:\n        - Version\n      operationId: getItemVersion\n      parameters:\n        - $ref: '../../openapi.yaml#/components/parameters/collectionId'\n        - $ref: '../../openapi.yaml#/components/parameters/featureId'\n        - $ref: '#/components/parameters/versionId'\n      responses:\n        '200':\n          $ref: '../../openapi.yaml#/components/responses/Collections'\ncomponents:\n  parameters:\n    versionId:\n      name: versionId\n      in: path\n      description: local identifier of a version\n      required: true\n      schema:\n        type: string\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /collections/{collectionId}/versions: get: operation \"getCollectionVersions\": parameters: parse parameter \"\": resolve \"../../openapi.yaml#/components/parameters/collectionId\" reference: invalid parameter reference"
}