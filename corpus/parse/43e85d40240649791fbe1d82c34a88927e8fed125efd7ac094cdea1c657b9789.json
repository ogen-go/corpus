{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "schemas.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/schemas.yml",
			"byteSize": 3722,
			"content": "openapi: 3.0.2\ninfo:\npaths:\ncomponents:\n    schemas:\n        Format:\n            description: The format of the body used to convert it to HTML.\n            type: string\n            enum:\n                - rich\n                - markdown\n                - text\n                - textex\n                - wysiwyg\n                - bbcode\n            example: markdown\n        RoleFragment:\n            type: object\n            properties:\n                name:\n                    description: Name of the role.\n                    minLength: 1\n                    type: string\n                roleID:\n                    description: ID of the role.\n                    type: integer\n            required:\n                - roleID\n                - name\n        UserFragment:\n            oneOf:\n                - type: object\n                  properties:\n                      userID:\n                          description: The ID of the user.\n                          type: integer\n                      name:\n                          description: The username of the user.\n                          minLength: 1\n                          type: string\n                      url:\n                          description: The URL of the user's profile.\n                          type: string\n                          format: uri\n                      photoUrl:\n                          description: The URL of the user's avatar picture.\n                          type: string\n                          format: uri\n                      dateLastActive:\n                          description: Time the user was last active.\n                          format: date-time\n                          nullable: true\n                          type: string\n                      ssoID:\n                          description: The unique ID of the user from the source site, if using SSO.\n                          type: string\n                  required:\n                      - userID\n                      - name\n                      - photoUrl\n                      - dateLastActive\n                - type: object\n                  description: A user fragment when only expanding by ssoID.\n                  properties:\n                      ssoID:\n                          description: The unique ID of the user from the source site, if using SSO.\n                          type: string\n                  required:\n                      - ssoID\n        MainImage:\n            description: The main image, pulled from content.\n            type: object\n            properties:\n                url:\n                    description: The original image URL.\n                    type: string\n                urlSrcSet:\n                    $ref: \"schemas.yml#/components/schemas/SrcSet\"\n                alt:\n                    description: The image's alternative text.\n                    type: string\n        SrcSet:\n            description: An image's srcset for various sizes.\n            type: object\n            properties:\n                10:\n                    description: 10px large Image url.\n                    type: string\n                300:\n                    description: 300px large Image url.\n                    type: string\n                800:\n                    description: 800px large Image url.\n                    type: string\n                1200:\n                    description: 1200px large Image url.\n                    type: string\n        RangeExpression:\n            description: Specify a range or CSV of values.\n            type: string\n            format: range-expression\n            externalDocs:\n                url: https://success.vanillaforums.com/kb/articles/308-range-expressions\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"MainImage\": parse schema: property \"urlSrcSet\": parse schema: resolve \"schemas.yml#/components/schemas/SrcSet\": find schema: external base \"schemas.yml\" is not supported"
}