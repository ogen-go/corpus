{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/AI4Bharat/Indic-Glossary-Explorer"
		},
		"file": {
			"name": "glossary-service-api-contract.yml",
			"size": 0,
			"path": "Specs/glossary-service-api-contract.yml",
			"byteSize": 6116,
			"content": "openapi: 3.0.1\ninfo:\n  title: Glossary-explorer\n  description: A python based microservice to create/search glossaries.\n  contact:\n    name: Abhishek Suga\n    email: abhishek.suga@tarento.com\n  version: 1.0.0\nservers:\n- url: /glossary-explorer\npaths:\n  /v1/signup:\n    post:\n      tags:\n      - Signup\n      summary: REST API for signup.\n      description: This API accepts user details.\n      requestBody:\n        description: Request format accepted by this API.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/signupRequest'\n        required: true\n      responses:\n        202:\n          description: On successful signup.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/signupResponse'\n      x-codegen-request-body-name: request\n\n\n\n\n  /v1/login:\n    post:\n      tags:\n      - Login\n      summary: REST API for login.\n      description: This API accepts login credentials.\n      requestBody:\n        description: Request format accepted by this API.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/loginRequest'\n        required: true\n      responses:\n        202:\n          description: On successful login.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/loginResponse'\n      x-codegen-request-body-name: request\n\n\n  /v1/glossary/create:\n    post:\n      tags:\n      - Create\n      summary: REST API to create glossaries.\n      description: This API accepts list of JSON objects.\n      requestBody:\n        description: Request format accepted by this API.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/createRequest'\n        required: true\n      responses:\n        202:\n          description: On successful Upload of glossaries created.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/createResponse'\n      x-codegen-request-body-name: request\n  /v1/glossary/file/upload:\n    post:\n      tags:\n      - Upload\n      summary: REST API to upload Glossary files.\n      description: This API accepts glossary file of xls/xlsx/csv/tsv format.\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              required:\n              - glossaryFile\n              properties:\n                glossaryFile:\n                  type: array\n                  description: Request format accepted by this API.\n                  format: binary\n        required: true\n      responses:\n        200:\n          description: On successful uplaod of glossary file.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/createResponse'\n  /v1/sentence/phrases/search:\n    post:\n      tags:\n      - Search\n      summary: REST API to retrive all the possible glossaries from the ES store.\n      description: This API accepts List of input sentences/phrases to give all the\n        available glossaries in response .\n      requestBody:\n        description: Request format accepted by this API.\n        content:\n          '*/*':\n            schema:\n              $ref: '#/components/schemas/searchRequest'\n        required: true\n      responses:\n        200:\n          description: Either an empty or a non-empty array of glossary JSONs.\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/searchResponse'\n                \n      x-codegen-request-body-name: request\ncomponents:\n  schemas:\n    signupRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password: \n          type: string\n      \n    signupResponse:\n      type: object\n      properties:\n        message:\n          type: string\n        status: \n          type: string  \n  \n  \n  \n\n    loginRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password: \n          type: string\n      \n    loginResponse:\n      type: object\n      properties:\n        token:\n          type: string\n        user: \n          type: object\n          description: user details.\n          items:\n            $ref: '#/components/schemas/userDetails'\n\n\n\n\n  \n    createRequest:\n      type: object\n      properties:\n        glossary:\n          type: array\n          items:\n            $ref: '#/components/schemas/glossaryCreate'\n    glossaryCreate:\n      type: object\n      properties:\n        srcLanguage:\n          type: string\n        tgtLanguage:\n          type: string\n        srcText:\n          type: string\n        tgtText:\n          type: string\n        domain:\n          type: string\n        collectionSource:\n          type: string\n        level:\n          type: string\n    createResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: On successful creation of glossary.\n        status:\n          type: string\n          description: On successful creation of glossary.\n    searchRequest:\n      type: object\n      properties:\n        inputs:\n          type: array\n          description: File to be uploaded.\n          items:\n            type: string\n    searchResponse:\n      type: array\n      items:\n        type: object\n        properties:\n          glossaryPhrases:\n            type: array\n            description: list of glossaries available.\n            items:\n              $ref: '#/components/schemas/glossaryList'\n          input:\n            type: string\n    glossaryList:\n      type: object\n      properties:\n        collectionSource:\n          type: string\n        domain:\n          type: string\n        level:\n          type: string\n        srcLang:\n          type: string\n        srcText:\n          type: string\n        tgtLanguage:\n          type: string\n        tgtText:\n          type: string\n          \n    userDetails:\n        type: object\n        properties:\n          email:\n            type: string\n          userId:\n            type: string\n          username:\n            type: string",
			"canonicalURL": "/github.com/AI4Bharat/Indic-Glossary-Explorer@b10f5022e9a9ba05f2af9bb6807bc409fdd1c73e/-/blob/Specs/glossary-service-api-contract.yml",
			"externalURLs": [
				{
					"url": "https://github.com/AI4Bharat/Indic-Glossary-Explorer/blob/b10f5022e9a9ba05f2af9bb6807bc409fdd1c73e/Specs/glossary-service-api-contract.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"loginResponse\": resolve \"#/components/schemas/loginResponse\": property \"user\": at Specs/glossary-service-api-contract.yml:167:13: items: object cannot contain 'items' field"
}