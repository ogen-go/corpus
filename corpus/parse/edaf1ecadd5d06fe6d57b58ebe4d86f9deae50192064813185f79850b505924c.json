{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/APIs-guru/openapi-directory"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "APIs/amazonaws.com/dynamodb/2012-08-10/openapi.yaml",
			"byteSize": 473615,
			"content": "openapi: 3.0.0\ninfo:\n  version: '2012-08-10'\n  x-release: v4\n  title: Amazon DynamoDB\n  description: '\u003cfullname\u003eAmazon DynamoDB\u003c/fullname\u003e \u003cp\u003eAmazon DynamoDB is a fully managed NoSQL database service that provides fast and predictable performance with seamless scalability. DynamoDB lets you offload the administrative burdens of operating and scaling a distributed database, so that you don''t have to worry about hardware provisioning, setup and configuration, replication, software patching, or cluster scaling.\u003c/p\u003e \u003cp\u003eWith DynamoDB, you can create database tables that can store and retrieve any amount of data, and serve any level of request traffic. You can scale up or scale down your tables'' throughput capacity without downtime or performance degradation, and use the AWS Management Console to monitor resource utilization and performance metrics.\u003c/p\u003e \u003cp\u003eDynamoDB automatically spreads the data and traffic for your tables over a sufficient number of servers to handle your throughput and storage requirements, while maintaining consistent and fast performance. All of your data is stored on solid state disks (SSDs) and automatically replicated across multiple Availability Zones in an AWS region, providing built-in high availability and data durability. \u003c/p\u003e'\n  x-logo:\n    url: 'https://twitter.com/awscloud/profile_image?size=original'\n    backgroundColor: '#FFFFFF'\n  termsOfService: 'https://aws.amazon.com/service-terms/'\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: 'https://github.com/mermade/aws2openapi'\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: 'http://www.apache.org/licenses/'\n  x-providerName: amazonaws.com\n  x-serviceName: dynamodb\n  x-origin:\n    - contentType: application/json\n      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dynamodb-2012-08-10.normal.json'\n      converter:\n        url: 'https://github.com/mermade/aws2openapi'\n        version: 1.0.0\n      x-apisguru-driver: external\n  x-apiClientRegistration:\n    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: 'https://docs.aws.amazon.com/dynamodb/'\nservers:\n  - url: 'http://dynamodb.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The DynamoDB multi-region endpoint\n  - url: 'https://dynamodb.{region}.amazonaws.com'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - eu-south-1\n          - af-south-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-east-1\n          - ap-south-1\n          - sa-east-1\n          - me-south-1\n        default: us-east-1\n    description: The DynamoDB multi-region endpoint\n  - url: 'http://dynamodb.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The DynamoDB endpoint for China (Beijing) and China (Ningxia)\n  - url: 'https://dynamodb.{region}.amazonaws.com.cn'\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The DynamoDB endpoint for China (Beijing) and China (Ningxia)\nx-hasEquivalentPaths: true\npaths:\n  /#X-Amz-Target=DynamoDB_20120810.BatchExecuteStatement:\n    post:\n      operationId: BatchExecuteStatement\n      description: ' This operation allows you to perform batch reads and writes on data stored in DynamoDB, using PartiQL. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchExecuteStatementOutput'\n        '480':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchExecuteStatementInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.BatchExecuteStatement\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.BatchGetItem:\n    post:\n      operationId: BatchGetItem\n      description: '\u003cp\u003eThe \u003ccode\u003eBatchGetItem\u003c/code\u003e operation returns the attributes of one or more items from one or more tables. You identify requested items by primary key.\u003c/p\u003e \u003cp\u003eA single operation can retrieve up to 16 MB of data, which can contain as many as 100 items. \u003ccode\u003eBatchGetItem\u003c/code\u003e returns a partial result if the response size limit is exceeded, the table''s provisioned throughput is exceeded, or an internal processing failure occurs. If a partial result is returned, the operation returns a value for \u003ccode\u003eUnprocessedKeys\u003c/code\u003e. You can use this value to retry the operation starting with the next item to get.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf you request more than 100 items, \u003ccode\u003eBatchGetItem\u003c/code\u003e returns a \u003ccode\u003eValidationException\u003c/code\u003e with the message \"Too many items requested for the BatchGetItem call.\"\u003c/p\u003e \u003c/important\u003e \u003cp\u003eFor example, if you ask to retrieve 100 items, but each individual item is 300 KB in size, the system returns 52 items (so as not to exceed the 16 MB limit). It also returns an appropriate \u003ccode\u003eUnprocessedKeys\u003c/code\u003e value so you can get the next page of results. If desired, your application can include its own logic to assemble the pages of results into one dataset.\u003c/p\u003e \u003cp\u003eIf \u003ci\u003enone\u003c/i\u003e of the items can be processed due to insufficient provisioned throughput on all of the tables in the request, then \u003ccode\u003eBatchGetItem\u003c/code\u003e returns a \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e. If \u003ci\u003eat least one\u003c/i\u003e of the items is successfully processed, then \u003ccode\u003eBatchGetItem\u003c/code\u003e completes successfully, while returning the keys of the unread items in \u003ccode\u003eUnprocessedKeys\u003c/code\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf DynamoDB returns any unprocessed items, you should retry the batch operation on those items. However, \u003ci\u003ewe strongly recommend that you use an exponential backoff algorithm\u003c/i\u003e. If you retry the batch operation immediately, the underlying read or write requests can still fail due to throttling on the individual tables. If you delay the batch operation using exponential backoff, the individual requests in the batch are much more likely to succeed.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#BatchOperations\"\u003eBatch Operations and Error Handling\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eBy default, \u003ccode\u003eBatchGetItem\u003c/code\u003e performs eventually consistent reads on every table in the request. If you want strongly consistent reads instead, you can set \u003ccode\u003eConsistentRead\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e for any or all tables.\u003c/p\u003e \u003cp\u003eIn order to minimize response latency, \u003ccode\u003eBatchGetItem\u003c/code\u003e retrieves items in parallel.\u003c/p\u003e \u003cp\u003eWhen designing your application, keep in mind that DynamoDB does not return items in any particular order. To help parse the response by item, include the primary key values for the items in your request in the \u003ccode\u003eProjectionExpression\u003c/code\u003e parameter.\u003c/p\u003e \u003cp\u003eIf a requested item does not exist, it is not returned in the result. Requests for nonexistent items consume the minimum read capacity units according to the type of read. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#CapacityUnitCalculations\"\u003eWorking with Tables\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchGetItemOutput'\n        '480':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchGetItemInput'\n      parameters:\n        - name: RequestItems\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.BatchGetItem\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.BatchWriteItem:\n    post:\n      operationId: BatchWriteItem\n      description: '\u003cp\u003eThe \u003ccode\u003eBatchWriteItem\u003c/code\u003e operation puts or deletes multiple items in one or more tables. A single call to \u003ccode\u003eBatchWriteItem\u003c/code\u003e can write up to 16 MB of data, which can comprise as many as 25 put or delete requests. Individual items to be written can be as large as 400 KB.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e \u003ccode\u003eBatchWriteItem\u003c/code\u003e cannot update items. To update items, use the \u003ccode\u003eUpdateItem\u003c/code\u003e action.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe individual \u003ccode\u003ePutItem\u003c/code\u003e and \u003ccode\u003eDeleteItem\u003c/code\u003e operations specified in \u003ccode\u003eBatchWriteItem\u003c/code\u003e are atomic; however \u003ccode\u003eBatchWriteItem\u003c/code\u003e as a whole is not. If any requested operations fail because the table''s provisioned throughput is exceeded or an internal processing failure occurs, the failed operations are returned in the \u003ccode\u003eUnprocessedItems\u003c/code\u003e response parameter. You can investigate and optionally resend the requests. Typically, you would call \u003ccode\u003eBatchWriteItem\u003c/code\u003e in a loop. Each iteration would check for unprocessed items and submit a new \u003ccode\u003eBatchWriteItem\u003c/code\u003e request with those unprocessed items until all items have been processed.\u003c/p\u003e \u003cp\u003eIf \u003ci\u003enone\u003c/i\u003e of the items can be processed due to insufficient provisioned throughput on all of the tables in the request, then \u003ccode\u003eBatchWriteItem\u003c/code\u003e returns a \u003ccode\u003eProvisionedThroughputExceededException\u003c/code\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf DynamoDB returns any unprocessed items, you should retry the batch operation on those items. However, \u003ci\u003ewe strongly recommend that you use an exponential backoff algorithm\u003c/i\u003e. If you retry the batch operation immediately, the underlying read or write requests can still fail due to throttling on the individual tables. If you delay the batch operation using exponential backoff, the individual requests in the batch are much more likely to succeed.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ErrorHandling.html#Programming.Errors.BatchOperations\"\u003eBatch Operations and Error Handling\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eWith \u003ccode\u003eBatchWriteItem\u003c/code\u003e, you can efficiently write or delete large amounts of data, such as from Amazon EMR, or copy data from another database into DynamoDB. In order to improve performance with these large-scale operations, \u003ccode\u003eBatchWriteItem\u003c/code\u003e does not behave in the same way as individual \u003ccode\u003ePutItem\u003c/code\u003e and \u003ccode\u003eDeleteItem\u003c/code\u003e calls would. For example, you cannot specify conditions on individual put and delete requests, and \u003ccode\u003eBatchWriteItem\u003c/code\u003e does not return deleted items in the response.\u003c/p\u003e \u003cp\u003eIf you use a programming language that supports concurrency, you can use threads to write items in parallel. Your application must include the necessary logic to manage the threads. With languages that don''t support threading, you must update or delete the specified items one at a time. In both situations, \u003ccode\u003eBatchWriteItem\u003c/code\u003e performs the specified put and delete operations in parallel, giving you the power of the thread pool approach without having to introduce complexity into your application.\u003c/p\u003e \u003cp\u003eParallel processing reduces latency, but each specified put and delete request consumes the same number of write capacity units whether it is processed in parallel or not. Delete operations on nonexistent items consume one write capacity unit.\u003c/p\u003e \u003cp\u003eIf one or more of the following is true, DynamoDB rejects the entire batch write operation:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eOne or more tables specified in the \u003ccode\u003eBatchWriteItem\u003c/code\u003e request does not exist.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePrimary key attributes specified on an item in the request do not match those in the corresponding table''s primary key schema.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eYou try to perform multiple operations on the same item in the same \u003ccode\u003eBatchWriteItem\u003c/code\u003e request. For example, you cannot put and delete the same item in the same \u003ccode\u003eBatchWriteItem\u003c/code\u003e request. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e Your request contains at least two items with identical hash and range keys (which essentially is two put operations). \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere are more than 25 requests in the batch.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAny individual item in a batch exceeds 400 KB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe total request size exceeds 16 MB.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BatchWriteItemOutput'\n        '480':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: ItemCollectionSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ItemCollectionSizeLimitExceededException'\n        '483':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '484':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BatchWriteItemInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.BatchWriteItem\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.CreateBackup:\n    post:\n      operationId: CreateBackup\n      description: '\u003cp\u003eCreates a backup for an existing table.\u003c/p\u003e \u003cp\u003e Each time you create an on-demand backup, the entire table data is backed up. There is no limit to the number of on-demand backups that can be taken. \u003c/p\u003e \u003cp\u003e When you create an on-demand backup, a time marker of the request is cataloged, and the backup is created asynchronously, by applying all changes until the time of the request to the last full table snapshot. Backup requests are processed instantaneously and become available for restore within minutes. \u003c/p\u003e \u003cp\u003eYou can call \u003ccode\u003eCreateBackup\u003c/code\u003e at a maximum rate of 50 times per second.\u003c/p\u003e \u003cp\u003eAll backups in DynamoDB work without consuming any provisioned throughput on the table.\u003c/p\u003e \u003cp\u003e If you submit a backup request on 2018-12-14 at 14:25:00, the backup is guaranteed to contain all data committed to the table up to 14:24:00, and data committed after 14:26:00 will not be. The backup might contain data modifications made between 14:24:00 and 14:26:00. On-demand backup does not support causal consistency. \u003c/p\u003e \u003cp\u003e Along with data, the following are also included on the backups: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eGlobal secondary indexes (GSIs)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eLocal secondary indexes (LSIs)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eStreams\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eProvisioned read and write capacity\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackupOutput'\n        '480':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n        '481':\n          description: TableInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableInUseException'\n        '482':\n          description: ContinuousBackupsUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContinuousBackupsUnavailableException'\n        '483':\n          description: BackupInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupInUseException'\n        '484':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '485':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBackupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.CreateBackup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.CreateGlobalTable:\n    post:\n      operationId: CreateGlobalTable\n      description: '\u003cp\u003eCreates a global table from an existing table. A global table creates a replication relationship between two or more DynamoDB tables with the same table name in the provided Regions. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html\"\u003eVersion 2017.11.29\u003c/a\u003e of global tables.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eIf you want to add a new replica table to a global table, each of the following conditions must be true:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eThe table must have the same primary key as all of the other replicas.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe table must have the same name as all of the other replicas.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe table must have DynamoDB Streams enabled, with the stream containing both the new and the old images of the item.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNone of the replica tables in the global table can contain any data.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If global secondary indexes are specified, then the following conditions must also be met: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e The global secondary indexes must have the same name. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e The global secondary indexes must have the same hash key and sort key (if present). \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If local secondary indexes are specified, then the following conditions must also be met: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e The local secondary indexes must have the same name. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e The local secondary indexes must have the same hash key and sort key (if present). \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cimportant\u003e \u003cp\u003e Write capacity settings should be set consistently across your replica tables and secondary indexes. DynamoDB strongly recommends enabling auto scaling to manage the write capacity settings for all of your global tables replicas and indexes. \u003c/p\u003e \u003cp\u003e If you prefer to manage write capacity settings manually, you should provision equal replicated write capacity units to your replica tables. You should also provision equal replicated write capacity units to matching secondary indexes across your global table. \u003c/p\u003e \u003c/important\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateGlobalTableOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '482':\n          description: GlobalTableAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTableAlreadyExistsException'\n        '483':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGlobalTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.CreateGlobalTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.CreateTable:\n    post:\n      operationId: CreateTable\n      description: '\u003cp\u003eThe \u003ccode\u003eCreateTable\u003c/code\u003e operation adds a new table to your account. In an AWS account, table names must be unique within each Region. That is, you can have two tables with same name if you create the tables in different Regions.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eCreateTable\u003c/code\u003e is an asynchronous operation. Upon receiving a \u003ccode\u003eCreateTable\u003c/code\u003e request, DynamoDB immediately returns a response with a \u003ccode\u003eTableStatus\u003c/code\u003e of \u003ccode\u003eCREATING\u003c/code\u003e. After the table is created, DynamoDB sets the \u003ccode\u003eTableStatus\u003c/code\u003e to \u003ccode\u003eACTIVE\u003c/code\u003e. You can perform read and write operations only on an \u003ccode\u003eACTIVE\u003c/code\u003e table. \u003c/p\u003e \u003cp\u003eYou can optionally define secondary indexes on the new table, as part of the \u003ccode\u003eCreateTable\u003c/code\u003e operation. If you want to create multiple tables with secondary indexes on them, you must create the tables sequentially. Only one table with secondary indexes can be in the \u003ccode\u003eCREATING\u003c/code\u003e state at any given time.\u003c/p\u003e \u003cp\u003eYou can use the \u003ccode\u003eDescribeTable\u003c/code\u003e action to check the table status.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTableOutput'\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.CreateTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DeleteBackup:\n    post:\n      operationId: DeleteBackup\n      description: \u003cp\u003eDeletes an existing backup of a table.\u003c/p\u003e \u003cp\u003eYou can call \u003ccode\u003eDeleteBackup\u003c/code\u003e at a maximum rate of 10 times per second.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackupOutput'\n        '480':\n          description: BackupNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupNotFoundException'\n        '481':\n          description: BackupInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupInUseException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteBackupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DeleteBackup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DeleteItem:\n    post:\n      operationId: DeleteItem\n      description: '\u003cp\u003eDeletes a single item in a table by primary key. You can perform a conditional delete operation that deletes the item if it exists, or if it has an expected attribute value.\u003c/p\u003e \u003cp\u003eIn addition to deleting an item, you can also return the item''s attribute values in the same operation, using the \u003ccode\u003eReturnValues\u003c/code\u003e parameter.\u003c/p\u003e \u003cp\u003eUnless you specify conditions, the \u003ccode\u003eDeleteItem\u003c/code\u003e is an idempotent operation; running it multiple times on the same item or attribute does \u003ci\u003enot\u003c/i\u003e result in an error response.\u003c/p\u003e \u003cp\u003eConditional deletes are useful for deleting items only if specific conditions are met. If those conditions are met, DynamoDB performs the delete. Otherwise, the item is not deleted.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteItemOutput'\n        '480':\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionalCheckFailedException'\n        '481':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ItemCollectionSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ItemCollectionSizeLimitExceededException'\n        '484':\n          description: TransactionConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionConflictException'\n        '485':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteItemInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DeleteItem\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DeleteTable:\n    post:\n      operationId: DeleteTable\n      description: '\u003cp\u003eThe \u003ccode\u003eDeleteTable\u003c/code\u003e operation deletes a table and all of its items. After a \u003ccode\u003eDeleteTable\u003c/code\u003e request, the specified table is in the \u003ccode\u003eDELETING\u003c/code\u003e state until DynamoDB completes the deletion. If the table is in the \u003ccode\u003eACTIVE\u003c/code\u003e state, you can delete it. If a table is in \u003ccode\u003eCREATING\u003c/code\u003e or \u003ccode\u003eUPDATING\u003c/code\u003e states, then DynamoDB returns a \u003ccode\u003eResourceInUseException\u003c/code\u003e. If the specified table does not exist, DynamoDB returns a \u003ccode\u003eResourceNotFoundException\u003c/code\u003e. If table is already in the \u003ccode\u003eDELETING\u003c/code\u003e state, no error is returned. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eDynamoDB might continue to accept data read and write operations, such as \u003ccode\u003eGetItem\u003c/code\u003e and \u003ccode\u003ePutItem\u003c/code\u003e, on a table in the \u003ccode\u003eDELETING\u003c/code\u003e state until the table deletion is complete.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eWhen you delete a table, any indexes on that table are also deleted.\u003c/p\u003e \u003cp\u003eIf you have DynamoDB Streams enabled on the table, then the corresponding stream on that table goes into the \u003ccode\u003eDISABLED\u003c/code\u003e state, and the stream is automatically deleted after 24 hours.\u003c/p\u003e \u003cp\u003eUse the \u003ccode\u003eDescribeTable\u003c/code\u003e action to check the status of the table. \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteTableOutput'\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DeleteTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeBackup:\n    post:\n      operationId: DescribeBackup\n      description: \u003cp\u003eDescribes an existing backup of a table.\u003c/p\u003e \u003cp\u003eYou can call \u003ccode\u003eDescribeBackup\u003c/code\u003e at a maximum rate of 10 times per second.\u003c/p\u003e\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeBackupOutput'\n        '480':\n          description: BackupNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeBackupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeBackup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeContinuousBackups:\n    post:\n      operationId: DescribeContinuousBackups\n      description: '\u003cp\u003eChecks the status of continuous backups and point in time recovery on the specified table. Continuous backups are \u003ccode\u003eENABLED\u003c/code\u003e on all tables at table creation. If point in time recovery is enabled, \u003ccode\u003ePointInTimeRecoveryStatus\u003c/code\u003e will be set to ENABLED.\u003c/p\u003e \u003cp\u003e After continuous backups and point in time recovery are enabled, you can restore to any point in time within \u003ccode\u003eEarliestRestorableDateTime\u003c/code\u003e and \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e is typically 5 minutes before the current time. You can restore your table to any point in time during the last 35 days. \u003c/p\u003e \u003cp\u003eYou can call \u003ccode\u003eDescribeContinuousBackups\u003c/code\u003e at a maximum rate of 10 times per second.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeContinuousBackupsOutput'\n        '480':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeContinuousBackupsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeContinuousBackups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeContributorInsights:\n    post:\n      operationId: DescribeContributorInsights\n      description: 'Returns information about contributor insights, for a given table or global secondary index.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeContributorInsightsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeContributorInsightsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeContributorInsights\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeEndpoints:\n    post:\n      operationId: DescribeEndpoints\n      description: Returns the regional endpoint information.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeEndpointsResponse'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeEndpointsRequest'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeEndpoints\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeExport:\n    post:\n      operationId: DescribeExport\n      description: Describes an existing table export.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeExportOutput'\n        '480':\n          description: ExportNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportNotFoundException'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeExportInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeExport\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTable:\n    post:\n      operationId: DescribeGlobalTable\n      description: '\u003cp\u003eReturns information about the specified global table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html\"\u003eVersion 2017.11.29\u003c/a\u003e of global tables. If you are using global tables \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html\"\u003eVersion 2019.11.21\u003c/a\u003e you can use \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DescribeTable.html\"\u003eDescribeTable\u003c/a\u003e instead.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeGlobalTableOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '481':\n          description: GlobalTableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTableNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeGlobalTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeGlobalTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTableSettings:\n    post:\n      operationId: DescribeGlobalTableSettings\n      description: '\u003cp\u003eDescribes Region-specific settings for a global table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html\"\u003eVersion 2017.11.29\u003c/a\u003e of global tables.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeGlobalTableSettingsOutput'\n        '480':\n          description: GlobalTableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTableNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeGlobalTableSettingsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeGlobalTableSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeKinesisStreamingDestination:\n    post:\n      operationId: DescribeKinesisStreamingDestination\n      description: Returns information about the status of Kinesis streaming.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeKinesisStreamingDestinationOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeKinesisStreamingDestinationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeKinesisStreamingDestination\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeLimits:\n    post:\n      operationId: DescribeLimits\n      description: '\u003cp\u003eReturns the current provisioned-capacity quotas for your AWS account in a Region, both for the Region as a whole and for any one DynamoDB table that you create there.\u003c/p\u003e \u003cp\u003eWhen you establish an AWS account, the account has initial quotas on the maximum read capacity units and write capacity units that you can provision across all of your DynamoDB tables in a given Region. Also, there are per-table quotas that apply when you create a table there. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e page in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eAlthough you can increase these quotas by filing a case at \u003ca href=\"https://console.aws.amazon.com/support/home#/\"\u003eAWS Support Center\u003c/a\u003e, obtaining the increase is not instantaneous. The \u003ccode\u003eDescribeLimits\u003c/code\u003e action lets you write code to compare the capacity you are currently using to those quotas imposed by your account so that you have enough time to apply for an increase before you hit a quota.\u003c/p\u003e \u003cp\u003eFor example, you could use one of the AWS SDKs to do the following:\u003c/p\u003e \u003col\u003e \u003cli\u003e \u003cp\u003eCall \u003ccode\u003eDescribeLimits\u003c/code\u003e for a particular Region to obtain your current account quotas on provisioned capacity there.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCreate a variable to hold the aggregate read capacity units provisioned for all your tables in that Region, and one to hold the aggregate write capacity units. Zero them both.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCall \u003ccode\u003eListTables\u003c/code\u003e to obtain a list of all your DynamoDB tables.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor each table name listed by \u003ccode\u003eListTables\u003c/code\u003e, do the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eCall \u003ccode\u003eDescribeTable\u003c/code\u003e with the table name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUse the data returned by \u003ccode\u003eDescribeTable\u003c/code\u003e to add the read capacity units and write capacity units provisioned for the table itself to your variables.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf the table has one or more global secondary indexes (GSIs), loop over these GSIs and add their provisioned capacity values to your variables as well.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eReport the account quotas for that Region returned by \u003ccode\u003eDescribeLimits\u003c/code\u003e, along with the total current provisioned capacity levels you have calculated.\u003c/p\u003e \u003c/li\u003e \u003c/ol\u003e \u003cp\u003eThis will let you see whether you are getting close to your account-level quotas.\u003c/p\u003e \u003cp\u003eThe per-table quotas apply only when you are creating a new table. They restrict the sum of the provisioned capacity of the new table itself and all its global secondary indexes.\u003c/p\u003e \u003cp\u003eFor existing tables and their GSIs, DynamoDB doesn''t let you increase provisioned capacity extremely rapidly, but the only quota that applies is that the aggregate provisioned capacity over all your tables and GSIs cannot exceed either of the per-account quotas.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e \u003ccode\u003eDescribeLimits\u003c/code\u003e should only be called periodically. You can expect throttling errors if you call it more than once in a minute.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eThe \u003ccode\u003eDescribeLimits\u003c/code\u003e Request element has no content.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeLimitsOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeLimitsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeLimits\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeTable:\n    post:\n      operationId: DescribeTable\n      description: '\u003cp\u003eReturns information about the table, including the current status of the table, when it was created, the primary key schema, and any indexes on the table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you issue a \u003ccode\u003eDescribeTable\u003c/code\u003e request immediately after a \u003ccode\u003eCreateTable\u003c/code\u003e request, DynamoDB might return a \u003ccode\u003eResourceNotFoundException\u003c/code\u003e. This is because \u003ccode\u003eDescribeTable\u003c/code\u003e uses an eventually consistent query, and the metadata for your table might not be available at that moment. Wait for a few seconds, and then try the \u003ccode\u003eDescribeTable\u003c/code\u003e request again.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTableOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeTableReplicaAutoScaling:\n    post:\n      operationId: DescribeTableReplicaAutoScaling\n      description: '\u003cp\u003eDescribes auto scaling settings across replicas of the global table at once.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html\"\u003eVersion 2019.11.21\u003c/a\u003e of global tables.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTableReplicaAutoScalingOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTableReplicaAutoScalingInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeTableReplicaAutoScaling\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DescribeTimeToLive:\n    post:\n      operationId: DescribeTimeToLive\n      description: 'Gives a description of the Time to Live (TTL) status on the specified table. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DescribeTimeToLiveOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DescribeTimeToLiveInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DescribeTimeToLive\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.DisableKinesisStreamingDestination:\n    post:\n      operationId: DisableKinesisStreamingDestination\n      description: Stops replication from the DynamoDB table to the Kinesis data stream. This is done without deleting either of the resources.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KinesisStreamingDestinationOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KinesisStreamingDestinationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.DisableKinesisStreamingDestination\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.EnableKinesisStreamingDestination:\n    post:\n      operationId: EnableKinesisStreamingDestination\n      description: 'Starts table data replication to the specified Kinesis data stream at a timestamp chosen during the enable workflow. If this operation doesn''t return results immediately, use DescribeKinesisStreamingDestination to check if streaming to the Kinesis data stream is ACTIVE.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/KinesisStreamingDestinationOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '481':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '482':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '483':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/KinesisStreamingDestinationInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.EnableKinesisStreamingDestination\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ExecuteStatement:\n    post:\n      operationId: ExecuteStatement\n      description: ' This operation allows you to perform reads and singleton writes on data stored in DynamoDB, using PartiQL. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExecuteStatementOutput'\n        '480':\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionalCheckFailedException'\n        '481':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ItemCollectionSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ItemCollectionSizeLimitExceededException'\n        '484':\n          description: TransactionConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionConflictException'\n        '485':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '487':\n          description: DuplicateItemException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DuplicateItemException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteStatementInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ExecuteStatement\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction:\n    post:\n      operationId: ExecuteTransaction\n      description: ' This operation allows you to perform transactional reads or writes on data stored in DynamoDB, using PartiQL. '\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExecuteTransactionOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TransactionCanceledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionCanceledException'\n        '482':\n          description: TransactionInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionInProgressException'\n        '483':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '484':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '485':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExecuteTransactionInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ExecuteTransaction\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime:\n    post:\n      operationId: ExportTableToPointInTime\n      description: 'Exports table data to an S3 bucket. The table must have point in time recovery enabled, and you can export data from any time within the point in time recovery window.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportTableToPointInTimeOutput'\n        '480':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n        '481':\n          description: PointInTimeRecoveryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointInTimeRecoveryUnavailableException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InvalidExportTimeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidExportTimeException'\n        '484':\n          description: ExportConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportConflictException'\n        '485':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExportTableToPointInTimeInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ExportTableToPointInTime\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.GetItem:\n    post:\n      operationId: GetItem\n      description: '\u003cp\u003eThe \u003ccode\u003eGetItem\u003c/code\u003e operation returns a set of attributes for the item with the given primary key. If there is no matching item, \u003ccode\u003eGetItem\u003c/code\u003e does not return any data and there will be no \u003ccode\u003eItem\u003c/code\u003e element in the response.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eGetItem\u003c/code\u003e provides an eventually consistent read by default. If your application requires a strongly consistent read, set \u003ccode\u003eConsistentRead\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e. Although a strongly consistent read might take more time than an eventually consistent read, it always returns the last updated value.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetItemOutput'\n        '480':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GetItemInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.GetItem\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ListBackups:\n    post:\n      operationId: ListBackups\n      description: '\u003cp\u003eList backups associated with an AWS account. To list backups for a given table, specify \u003ccode\u003eTableName\u003c/code\u003e. \u003ccode\u003eListBackups\u003c/code\u003e returns a paginated list of results with at most 1 MB worth of items in a page. You can also specify a maximum number of entries to be returned in a page. \u003c/p\u003e \u003cp\u003eIn the request, start time is inclusive, but end time is exclusive. Note that these boundaries are for the time at which the original backup was requested.\u003c/p\u003e \u003cp\u003eYou can call \u003ccode\u003eListBackups\u003c/code\u003e a maximum of five times per second.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupsOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListBackupsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ListBackups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ListContributorInsights:\n    post:\n      operationId: ListContributorInsights\n      description: Returns a list of ContributorInsightsSummary for a table and all its global secondary indexes.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListContributorInsightsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListContributorInsightsInput'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ListContributorInsights\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ListExports:\n    post:\n      operationId: ListExports\n      description: Lists completed exports within the past 90 days.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListExportsOutput'\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListExportsInput'\n      parameters:\n        - name: MaxResults\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: NextToken\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ListExports\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ListGlobalTables:\n    post:\n      operationId: ListGlobalTables\n      description: '\u003cp\u003eLists all global tables that have a replica in the specified Region.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V1.html\"\u003eVersion 2017.11.29\u003c/a\u003e of global tables.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListGlobalTablesOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListGlobalTablesInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ListGlobalTables\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ListTables:\n    post:\n      operationId: ListTables\n      description: 'Returns an array of table names associated with the current account and endpoint. The output from \u003ccode\u003eListTables\u003c/code\u003e is paginated, with each page returning a maximum of 100 table names.'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTablesOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTablesInput'\n      parameters:\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: ExclusiveStartTableName\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ListTables\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.ListTagsOfResource:\n    post:\n      operationId: ListTagsOfResource\n      description: '\u003cp\u003eList all tags on an Amazon DynamoDB resource. You can call ListTagsOfResource up to 10 times per second, per account.\u003c/p\u003e \u003cp\u003eFor an overview on tagging DynamoDB resources, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html\"\u003eTagging for DynamoDB\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListTagsOfResourceOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListTagsOfResourceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.ListTagsOfResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.PutItem:\n    post:\n      operationId: PutItem\n      description: '\u003cp\u003eCreates a new item, or replaces an old item with a new item. If an item that has the same primary key as the new item already exists in the specified table, the new item completely replaces the existing item. You can perform a conditional put operation (add a new item if one with the specified primary key doesn''t exist), or replace an existing item if it has certain attribute values. You can return the item''s attribute values in the same operation, using the \u003ccode\u003eReturnValues\u003c/code\u003e parameter.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eThis topic provides general information about the \u003ccode\u003ePutItem\u003c/code\u003e API.\u003c/p\u003e \u003cp\u003eFor information on how to call the \u003ccode\u003ePutItem\u003c/code\u003e API using the AWS SDK in specific languages, see the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/aws-cli/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS Command Line Interface\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/DotNetSDKV3/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for .NET\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/SdkForCpp/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for C++\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/SdkForGoV1/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for Go\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/SdkForJava/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for Java\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/AWSJavaScriptSDK/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for JavaScript\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/SdkForPHPV3/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for PHP V3\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/boto3/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for Python\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ca href=\"http://docs.aws.amazon.com/goto/SdkForRubyV2/dynamodb-2012-08-10/PutItem\"\u003e PutItem in the AWS SDK for Ruby V2\u003c/a\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/important\u003e \u003cp\u003eWhen you add an item, the primary key attributes are the only required attributes. Attribute values cannot be null.\u003c/p\u003e \u003cp\u003eEmpty String and Binary attribute values are allowed. Attribute values of type String and Binary must have a length greater than zero if the attribute is used as a key attribute for a table or index. Set type attributes cannot be empty. \u003c/p\u003e \u003cp\u003eInvalid Requests with empty values will be rejected with a \u003ccode\u003eValidationException\u003c/code\u003e exception.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eTo prevent a new item from replacing an existing item, use a conditional expression that contains the \u003ccode\u003eattribute_not_exists\u003c/code\u003e function with the name of the attribute being used as the partition key for the table. Since every record must contain that attribute, the \u003ccode\u003eattribute_not_exists\u003c/code\u003e function will only succeed if no matching item exists.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information about \u003ccode\u003ePutItem\u003c/code\u003e, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html\"\u003eWorking with Items\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PutItemOutput'\n        '480':\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionalCheckFailedException'\n        '481':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ItemCollectionSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ItemCollectionSizeLimitExceededException'\n        '484':\n          description: TransactionConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionConflictException'\n        '485':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PutItemInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.PutItem\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.Query:\n    post:\n      operationId: Query\n      description: '\u003cp\u003eThe \u003ccode\u003eQuery\u003c/code\u003e operation finds items based on primary key values. You can query any table or secondary index that has a composite primary key (a partition key and a sort key). \u003c/p\u003e \u003cp\u003eUse the \u003ccode\u003eKeyConditionExpression\u003c/code\u003e parameter to provide a specific value for the partition key. The \u003ccode\u003eQuery\u003c/code\u003e operation will return all of the items from the table or index with that partition key value. You can optionally narrow the scope of the \u003ccode\u003eQuery\u003c/code\u003e operation by specifying a sort key value and a comparison operator in \u003ccode\u003eKeyConditionExpression\u003c/code\u003e. To further refine the \u003ccode\u003eQuery\u003c/code\u003e results, you can optionally provide a \u003ccode\u003eFilterExpression\u003c/code\u003e. A \u003ccode\u003eFilterExpression\u003c/code\u003e determines which items within the results should be returned to you. All of the other results are discarded. \u003c/p\u003e \u003cp\u003e A \u003ccode\u003eQuery\u003c/code\u003e operation always returns a result set. If no matching items are found, the result set will be empty. Queries that do not return results consume the minimum number of read capacity units for that type of read operation. \u003c/p\u003e \u003cnote\u003e \u003cp\u003e DynamoDB calculates the number of read capacity units consumed based on item size, not on the amount of data that is returned to an application. The number of capacity units consumed will be the same whether you request all of the attributes (the default behavior) or just some of them (using a projection expression). The number will also be the same whether or not you use a \u003ccode\u003eFilterExpression\u003c/code\u003e. \u003c/p\u003e \u003c/note\u003e \u003cp\u003e \u003ccode\u003eQuery\u003c/code\u003e results are always sorted by the sort key value. If the data type of the sort key is Number, the results are returned in numeric order; otherwise, the results are returned in order of UTF-8 bytes. By default, the sort order is ascending. To reverse the order, set the \u003ccode\u003eScanIndexForward\u003c/code\u003e parameter to false. \u003c/p\u003e \u003cp\u003e A single \u003ccode\u003eQuery\u003c/code\u003e operation will read up to the maximum number of items set (if using the \u003ccode\u003eLimit\u003c/code\u003e parameter) or a maximum of 1 MB of data and then apply any filtering to the results using \u003ccode\u003eFilterExpression\u003c/code\u003e. If \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is present in the response, you will need to paginate the result set. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html#Query.Pagination\"\u003ePaginating the Results\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eFilterExpression\u003c/code\u003e is applied after a \u003ccode\u003eQuery\u003c/code\u003e finishes, but before the results are returned. A \u003ccode\u003eFilterExpression\u003c/code\u003e cannot contain partition key or sort key attributes. You need to specify those attributes in the \u003ccode\u003eKeyConditionExpression\u003c/code\u003e. \u003c/p\u003e \u003cnote\u003e \u003cp\u003e A \u003ccode\u003eQuery\u003c/code\u003e operation can return an empty result set and a \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e if all the items read for the page of results are filtered out. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eYou can query a table, a local secondary index, or a global secondary index. For a query on a table or on a local secondary index, you can set the \u003ccode\u003eConsistentRead\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e and obtain a strongly consistent result. Global secondary indexes support eventually consistent reads only, so do not specify \u003ccode\u003eConsistentRead\u003c/code\u003e when querying a global secondary index.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueryOutput'\n        '480':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/QueryInput'\n      parameters:\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: ExclusiveStartKey\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.Query\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup:\n    post:\n      operationId: RestoreTableFromBackup\n      description: '\u003cp\u003eCreates a new table from an existing backup. Any number of users can execute up to 4 concurrent restores (any type of restore) in a given account. \u003c/p\u003e \u003cp\u003eYou can call \u003ccode\u003eRestoreTableFromBackup\u003c/code\u003e at a maximum rate of 10 times per second.\u003c/p\u003e \u003cp\u003eYou must manually set up the following on the restored table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAuto scaling policies\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIAM policies\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAmazon CloudWatch metrics and alarms\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTags\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eStream settings\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTime to Live (TTL) settings\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestoreTableFromBackupOutput'\n        '480':\n          description: TableAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableAlreadyExistsException'\n        '481':\n          description: TableInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableInUseException'\n        '482':\n          description: BackupNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupNotFoundException'\n        '483':\n          description: BackupInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupInUseException'\n        '484':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '485':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreTableFromBackupInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.RestoreTableFromBackup\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime:\n    post:\n      operationId: RestoreTableToPointInTime\n      description: '\u003cp\u003eRestores the specified table to the specified point in time within \u003ccode\u003eEarliestRestorableDateTime\u003c/code\u003e and \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e. You can restore your table to any point in time during the last 35 days. Any number of users can execute up to 4 concurrent restores (any type of restore) in a given account. \u003c/p\u003e \u003cp\u003e When you restore using point in time recovery, DynamoDB restores your table data to the state based on the selected date and time (day:hour:minute:second) to a new table. \u003c/p\u003e \u003cp\u003e Along with data, the following are also included on the new restored table using point in time recovery: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eGlobal secondary indexes (GSIs)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eLocal secondary indexes (LSIs)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eProvisioned read and write capacity\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEncryption settings\u003c/p\u003e \u003cimportant\u003e \u003cp\u003e All these settings come from the current settings of the source table at the time of restore. \u003c/p\u003e \u003c/important\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou must manually set up the following on the restored table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAuto scaling policies\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIAM policies\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAmazon CloudWatch metrics and alarms\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTags\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eStream settings\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTime to Live (TTL) settings\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003ePoint in time recovery settings\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RestoreTableToPointInTimeOutput'\n        '480':\n          description: TableAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableAlreadyExistsException'\n        '481':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n        '482':\n          description: TableInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableInUseException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '484':\n          description: InvalidRestoreTimeException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InvalidRestoreTimeException'\n        '485':\n          description: PointInTimeRecoveryUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PointInTimeRecoveryUnavailableException'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RestoreTableToPointInTimeInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.RestoreTableToPointInTime\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.Scan:\n    post:\n      operationId: Scan\n      description: '\u003cp\u003eThe \u003ccode\u003eScan\u003c/code\u003e operation returns one or more items and item attributes by accessing every item in a table or a secondary index. To have DynamoDB return fewer items, you can provide a \u003ccode\u003eFilterExpression\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eIf the total number of scanned items exceeds the maximum dataset size limit of 1 MB, the scan stops and results are returned to the user as a \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e value to continue the scan in a subsequent operation. The results also include the number of items exceeding the limit. A scan can result in no table data meeting the filter criteria. \u003c/p\u003e \u003cp\u003eA single \u003ccode\u003eScan\u003c/code\u003e operation reads up to the maximum number of items set (if using the \u003ccode\u003eLimit\u003c/code\u003e parameter) or a maximum of 1 MB of data and then apply any filtering to the results using \u003ccode\u003eFilterExpression\u003c/code\u003e. If \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is present in the response, you need to paginate the result set. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.Pagination\"\u003ePaginating the Results\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eScan\u003c/code\u003e operations proceed sequentially; however, for faster performance on a large table or secondary index, applications can request a parallel \u003ccode\u003eScan\u003c/code\u003e operation by providing the \u003ccode\u003eSegment\u003c/code\u003e and \u003ccode\u003eTotalSegments\u003c/code\u003e parameters. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Scan.html#Scan.ParallelScan\"\u003eParallel Scan\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eScan\u003c/code\u003e uses eventually consistent reads when accessing the data in a table; therefore, the result set might not include the changes to data in the table immediately before the operation began. If you need a consistent copy of the data, as of the time that the \u003ccode\u003eScan\u003c/code\u003e begins, you can set the \u003ccode\u003eConsistentRead\u003c/code\u003e parameter to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScanOutput'\n        '480':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ScanInput'\n      parameters:\n        - name: Limit\n          in: query\n          schema:\n            type: string\n          description: Pagination limit\n          required: false\n        - name: ExclusiveStartKey\n          in: query\n          schema:\n            type: string\n          description: Pagination token\n          required: false\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.Scan\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.TagResource:\n    post:\n      operationId: TagResource\n      description: '\u003cp\u003eAssociate a set of tags with an Amazon DynamoDB resource. You can then activate these user-defined tags so that they appear on the Billing and Cost Management console for cost allocation tracking. You can call TagResource up to five times per second, per account. \u003c/p\u003e \u003cp\u003eFor an overview on tagging DynamoDB resources, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html\"\u003eTagging for DynamoDB\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '483':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TagResourceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.TagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.TransactGetItems:\n    post:\n      operationId: TransactGetItems\n      description: '\u003cp\u003e \u003ccode\u003eTransactGetItems\u003c/code\u003e is a synchronous operation that atomically retrieves multiple items from one or more tables (but not from indexes) in a single account and Region. A \u003ccode\u003eTransactGetItems\u003c/code\u003e call can contain up to 25 \u003ccode\u003eTransactGetItem\u003c/code\u003e objects, each of which contains a \u003ccode\u003eGet\u003c/code\u003e structure that specifies an item to retrieve from a table in the account and Region. A call to \u003ccode\u003eTransactGetItems\u003c/code\u003e cannot retrieve items from tables in more than one AWS account or Region. The aggregate size of the items in the transaction cannot exceed 4 MB.\u003c/p\u003e \u003cp\u003eDynamoDB rejects the entire \u003ccode\u003eTransactGetItems\u003c/code\u003e request if any of the following is true:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA conflicting operation is in the process of updating an item to be read.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere is insufficient provisioned capacity for the transaction to be completed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere is a user error, such as an invalid data format.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe aggregate size of the items in the transaction cannot exceed 4 MB.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactGetItemsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TransactionCanceledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionCanceledException'\n        '482':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '483':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '484':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransactGetItemsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.TransactGetItems\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.TransactWriteItems:\n    post:\n      operationId: TransactWriteItems\n      description: \"\u003cp\u003e \u003ccode\u003eTransactWriteItems\u003c/code\u003e is a synchronous write operation that groups up to 25 action requests. These actions can target items in different tables, but not in different AWS accounts or Regions, and no two actions can target the same item. For example, you cannot both \u003ccode\u003eConditionCheck\u003c/code\u003e and \u003ccode\u003eUpdate\u003c/code\u003e the same item. The aggregate size of the items in the transaction cannot exceed 4 MB.\u003c/p\u003e \u003cp\u003eThe actions are completed atomically so that either all of them succeed, or all of them fail. They are defined by the following objects:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePut\u003c/code\u003e \\_\u0026#x97; \\_ Initiates a \u003ccode\u003ePutItem\u003c/code\u003e operation to write a new item. This structure specifies the primary key of the item to be written, the name of the table to write it in, an optional condition expression that must be satisfied for the write to succeed, a list of the item's attributes, and a field indicating whether to retrieve the item's attributes if the condition is not met.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUpdate\u003c/code\u003e \\_\u0026#x97; \\_ Initiates an \u003ccode\u003eUpdateItem\u003c/code\u003e operation to update an existing item. This structure specifies the primary key of the item to be updated, the name of the table where it resides, an optional condition expression that must be satisfied for the update to succeed, an expression that defines one or more attributes to be updated, and a field indicating whether to retrieve the item's attributes if the condition is not met.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDelete\u003c/code\u003e \\_\u0026#x97; \\_ Initiates a \u003ccode\u003eDeleteItem\u003c/code\u003e operation to delete an existing item. This structure specifies the primary key of the item to be deleted, the name of the table where it resides, an optional condition expression that must be satisfied for the deletion to succeed, and a field indicating whether to retrieve the item's attributes if the condition is not met.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eConditionCheck\u003c/code\u003e \\_\u0026#x97; \\_ Applies a condition to an item that is not being modified by the transaction. This structure specifies the primary key of the item to be checked, the name of the table where it resides, a condition expression that must be satisfied for the transaction to succeed, and a field indicating whether to retrieve the item's attributes if the condition is not met.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eDynamoDB rejects the entire \u003ccode\u003eTransactWriteItems\u003c/code\u003e request if any of the following is true:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA condition in one of the condition expressions is not met.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn ongoing operation is in the process of updating the same item.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere is insufficient provisioned capacity for the transaction to be completed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn item size becomes too large (bigger than 400 KB), a local secondary index (LSI) becomes too large, or a similar validation error occurs because of changes made by the transaction.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThe aggregate size of the items in the transaction exceeds 4 MB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eThere is a user error, such as an invalid data format.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactWriteItemsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: TransactionCanceledException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionCanceledException'\n        '482':\n          description: TransactionInProgressException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionInProgressException'\n        '483':\n          description: IdempotentParameterMismatchException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IdempotentParameterMismatchException'\n        '484':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '485':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TransactWriteItemsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.TransactWriteItems\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UntagResource:\n    post:\n      operationId: UntagResource\n      description: '\u003cp\u003eRemoves the association of tags from an Amazon DynamoDB resource. You can call \u003ccode\u003eUntagResource\u003c/code\u003e up to five times per second, per account. \u003c/p\u003e \u003cp\u003eFor an overview on tagging DynamoDB resources, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html\"\u003eTagging for DynamoDB\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n        '480':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '483':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UntagResourceInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UntagResource\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateContinuousBackups:\n    post:\n      operationId: UpdateContinuousBackups\n      description: '\u003cp\u003e \u003ccode\u003eUpdateContinuousBackups\u003c/code\u003e enables or disables point in time recovery for the specified table. A successful \u003ccode\u003eUpdateContinuousBackups\u003c/code\u003e call returns the current \u003ccode\u003eContinuousBackupsDescription\u003c/code\u003e. Continuous backups are \u003ccode\u003eENABLED\u003c/code\u003e on all tables at table creation. If point in time recovery is enabled, \u003ccode\u003ePointInTimeRecoveryStatus\u003c/code\u003e will be set to ENABLED.\u003c/p\u003e \u003cp\u003e Once continuous backups and point in time recovery are enabled, you can restore to any point in time within \u003ccode\u003eEarliestRestorableDateTime\u003c/code\u003e and \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e is typically 5 minutes before the current time. You can restore your table to any point in time during the last 35 days. \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContinuousBackupsOutput'\n        '480':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n        '481':\n          description: ContinuousBackupsUnavailableException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ContinuousBackupsUnavailableException'\n        '482':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContinuousBackupsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateContinuousBackups\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateContributorInsights:\n    post:\n      operationId: UpdateContributorInsights\n      description: Updates the status for contributor insights for a specific table or index.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateContributorInsightsOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateContributorInsightsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateContributorInsights\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable:\n    post:\n      operationId: UpdateGlobalTable\n      description: '\u003cp\u003eAdds or removes replicas in the specified global table. The global table must already exist to be able to use this operation. Any replica to be added must be empty, have the same name as the global table, have the same key schema, have DynamoDB Streams enabled, and have the same provisioned and maximum write capacity units.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAlthough you can use \u003ccode\u003eUpdateGlobalTable\u003c/code\u003e to add replicas and remove replicas in a single request, for simplicity we recommend that you issue separate requests for adding or removing replicas.\u003c/p\u003e \u003c/note\u003e \u003cp\u003e If global secondary indexes are specified, then the following conditions must also be met: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e The global secondary indexes must have the same name. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e The global secondary indexes must have the same hash key and sort key (if present). \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e The global secondary indexes must have the same provisioned and maximum write capacity units. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateGlobalTableOutput'\n        '480':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n        '481':\n          description: GlobalTableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTableNotFoundException'\n        '482':\n          description: ReplicaAlreadyExistsException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplicaAlreadyExistsException'\n        '483':\n          description: ReplicaNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplicaNotFoundException'\n        '484':\n          description: TableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TableNotFoundException'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGlobalTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateGlobalTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings:\n    post:\n      operationId: UpdateGlobalTableSettings\n      description: Updates settings for a global table.\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateGlobalTableSettingsOutput'\n        '480':\n          description: GlobalTableNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GlobalTableNotFoundException'\n        '481':\n          description: ReplicaNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReplicaNotFoundException'\n        '482':\n          description: IndexNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IndexNotFoundException'\n        '483':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '484':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '485':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateGlobalTableSettingsInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateGlobalTableSettings\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateItem:\n    post:\n      operationId: UpdateItem\n      description: '\u003cp\u003eEdits an existing item''s attributes, or adds a new item to the table if it does not already exist. You can put, delete, or add attribute values. You can also perform a conditional update on an existing item (insert a new attribute name-value pair if it doesn''t exist, or replace an existing name-value pair if it has certain expected attribute values).\u003c/p\u003e \u003cp\u003eYou can also return the item''s attribute values in the same \u003ccode\u003eUpdateItem\u003c/code\u003e operation using the \u003ccode\u003eReturnValues\u003c/code\u003e parameter.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateItemOutput'\n        '480':\n          description: ConditionalCheckFailedException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionalCheckFailedException'\n        '481':\n          description: ProvisionedThroughputExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProvisionedThroughputExceededException'\n        '482':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '483':\n          description: ItemCollectionSizeLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ItemCollectionSizeLimitExceededException'\n        '484':\n          description: TransactionConflictException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TransactionConflictException'\n        '485':\n          description: RequestLimitExceeded\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RequestLimitExceeded'\n        '486':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateItemInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateItem\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateTable:\n    post:\n      operationId: UpdateTable\n      description: '\u003cp\u003eModifies the provisioned throughput settings, global secondary indexes, or DynamoDB Streams settings for a given table.\u003c/p\u003e \u003cp\u003eYou can only perform one of the following operations at once:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eModify the provisioned throughput settings of the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eEnable or disable DynamoDB Streams on the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eRemove a global secondary index from the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eCreate a new global secondary index on the table. After the index begins backfilling, you can use \u003ccode\u003eUpdateTable\u003c/code\u003e to perform other operations.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003ccode\u003eUpdateTable\u003c/code\u003e is an asynchronous operation; while it is executing, the table status changes from \u003ccode\u003eACTIVE\u003c/code\u003e to \u003ccode\u003eUPDATING\u003c/code\u003e. While it is \u003ccode\u003eUPDATING\u003c/code\u003e, you cannot issue another \u003ccode\u003eUpdateTable\u003c/code\u003e request. When the table returns to the \u003ccode\u003eACTIVE\u003c/code\u003e state, the \u003ccode\u003eUpdateTable\u003c/code\u003e operation is complete.\u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTableOutput'\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTableInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateTable\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateTableReplicaAutoScaling:\n    post:\n      operationId: UpdateTableReplicaAutoScaling\n      description: '\u003cp\u003eUpdates auto scaling settings on your global tables at once.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operation only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html\"\u003eVersion 2019.11.21\u003c/a\u003e of global tables.\u003c/p\u003e \u003c/note\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTableReplicaAutoScalingOutput'\n        '480':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '481':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTableReplicaAutoScalingInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateTableReplicaAutoScaling\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\n  /#X-Amz-Target=DynamoDB_20120810.UpdateTimeToLive:\n    post:\n      operationId: UpdateTimeToLive\n      description: '\u003cp\u003eThe \u003ccode\u003eUpdateTimeToLive\u003c/code\u003e method enables or disables Time to Live (TTL) for the specified table. A successful \u003ccode\u003eUpdateTimeToLive\u003c/code\u003e call returns the current \u003ccode\u003eTimeToLiveSpecification\u003c/code\u003e. It can take up to one hour for the change to fully process. Any additional \u003ccode\u003eUpdateTimeToLive\u003c/code\u003e calls for the same table during this one hour duration result in a \u003ccode\u003eValidationException\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eTTL compares the current time in epoch time format to the time stored in the TTL attribute of an item. If the epoch time value stored in the attribute is less than the current time, the item is marked as expired and subsequently deleted.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e The epoch time format is the number of seconds elapsed since 12:00:00 AM January 1, 1970 UTC. \u003c/p\u003e \u003c/note\u003e \u003cp\u003eDynamoDB deletes expired items on a best-effort basis to ensure availability of throughput for other data operations. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eDynamoDB typically deletes expired items within two days of expiration. The exact duration within which an item gets deleted after expiration is specific to the nature of the workload. Items that have expired and not been deleted will still show up in reads, queries, and scans.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eAs items are deleted, they are removed from any local secondary index and global secondary index immediately in the same eventually consistent way as a standard delete operation.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html\"\u003eTime To Live\u003c/a\u003e in the Amazon DynamoDB Developer Guide. \u003c/p\u003e'\n      responses:\n        '200':\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateTimeToLiveOutput'\n        '480':\n          description: ResourceInUseException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceInUseException'\n        '481':\n          description: ResourceNotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceNotFoundException'\n        '482':\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LimitExceededException'\n        '483':\n          description: InternalServerError\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InternalServerError'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateTimeToLiveInput'\n      parameters:\n        - name: X-Amz-Target\n          in: header\n          required: true\n          schema:\n            type: string\n            enum:\n              - DynamoDB_20120810.UpdateTimeToLive\n    parameters:\n      - $ref: '#/components/parameters/X-Amz-Content-Sha256'\n      - $ref: '#/components/parameters/X-Amz-Date'\n      - $ref: '#/components/parameters/X-Amz-Algorithm'\n      - $ref: '#/components/parameters/X-Amz-Credential'\n      - $ref: '#/components/parameters/X-Amz-Security-Token'\n      - $ref: '#/components/parameters/X-Amz-Signature'\n      - $ref: '#/components/parameters/X-Amz-SignedHeaders'\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      schema:\n        type: string\n      required: false\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      schema:\n        type: string\n      required: false\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    BatchExecuteStatementOutput:\n      type: object\n      properties:\n        Responses:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLBatchResponse'\n            - description: ' The response to each PartiQL statement in the batch. '\n    BatchExecuteStatementInput:\n      type: object\n      required:\n        - Statements\n      title: BatchExecuteStatementInput\n      properties:\n        Statements:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLBatchRequest'\n            - description: ' The list of PartiQL statements representing the batch to run. '\n    RequestLimitExceeded: {}\n    InternalServerError: {}\n    BatchGetItemOutput:\n      type: object\n      example:\n        Responses:\n          Music:\n            - AlbumTitle:\n                S: Somewhat Famous\n            - AlbumTitle:\n                S: Blue Sky Blues\n            - AlbumTitle:\n                S: Louder Than Ever\n      properties:\n        Responses:\n          allOf:\n            - $ref: '#/components/schemas/BatchGetResponseMap'\n            - description: 'A map of table name to a list of items. Each object in \u003ccode\u003eResponses\u003c/code\u003e consists of a table name, along with a map of attribute data consisting of the data type and attribute value.'\n        UnprocessedKeys:\n          allOf:\n            - $ref: '#/components/schemas/BatchGetRequestMap'\n            - description: '\u003cp\u003eA map of tables and their respective keys that were not processed with the current response. The \u003ccode\u003eUnprocessedKeys\u003c/code\u003e value is in the same form as \u003ccode\u003eRequestItems\u003c/code\u003e, so the value can be provided directly to a subsequent \u003ccode\u003eBatchGetItem\u003c/code\u003e operation. For more information, see \u003ccode\u003eRequestItems\u003c/code\u003e in the Request Parameters section.\u003c/p\u003e \u003cp\u003eEach element consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeys\u003c/code\u003e - An array of primary key attribute values that define specific items in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjectionExpression\u003c/code\u003e - One or more attributes to be retrieved from the table or index. By default, all attributes are returned. If a requested attribute is not found, it does not appear in the result.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eConsistentRead\u003c/code\u003e - The consistency of a read operation. If set to \u003ccode\u003etrue\u003c/code\u003e, then a strongly consistent read is used; otherwise, an eventually consistent read is used.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf there are no unprocessed keys remaining, the response contains an empty \u003ccode\u003eUnprocessedKeys\u003c/code\u003e map.\u003c/p\u003e'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityMultiple'\n            - description: '\u003cp\u003eThe read capacity units consumed by the entire \u003ccode\u003eBatchGetItem\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eEach element consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTableName\u003c/code\u003e - The table that consumed the provisioned throughput.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCapacityUnits\u003c/code\u003e - The total number of capacity units consumed.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output of a \u003ccode\u003eBatchGetItem\u003c/code\u003e operation.\n    BatchGetItemInput:\n      type: object\n      required:\n        - RequestItems\n      title: BatchGetItemInput\n      properties:\n        RequestItems:\n          allOf:\n            - $ref: '#/components/schemas/BatchGetRequestMap'\n            - description: '\u003cp\u003eA map of one or more table names and, for each table, a map that describes one or more items to retrieve from that table. Each table name can be used only once per \u003ccode\u003eBatchGetItem\u003c/code\u003e request.\u003c/p\u003e \u003cp\u003eEach element in the map of items to retrieve consists of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eConsistentRead\u003c/code\u003e - If \u003ccode\u003etrue\u003c/code\u003e, a strongly consistent read is used; if \u003ccode\u003efalse\u003c/code\u003e (the default), an eventually consistent read is used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e - One or more substitution tokens for attribute names in the \u003ccode\u003eProjectionExpression\u003c/code\u003e parameter. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information about expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eAccessing Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeys\u003c/code\u003e - An array of primary key attribute values that define specific items in the table. For each primary key, you must provide \u003ci\u003eall\u003c/i\u003e of the key attributes. For example, with a simple primary key, you only need to provide the partition key value. For a composite key, you must provide \u003ci\u003eboth\u003c/i\u003e the partition key value and the sort key value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjectionExpression\u003c/code\u003e - A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.\u003c/p\u003e \u003cp\u003eIf no attribute names are specified, then all attributes are returned. If any of the requested attributes are not found, they do not appear in the result.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eAccessing Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAttributesToGet\u003c/code\u003e - This is a legacy parameter. Use \u003ccode\u003eProjectionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\"\u003eAttributesToGet\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n      description: Represents the input of a \u003ccode\u003eBatchGetItem\u003c/code\u003e operation.\n    ProvisionedThroughputExceededException: {}\n    ResourceNotFoundException: {}\n    BatchWriteItemOutput:\n      type: object\n      example: {}\n      properties:\n        UnprocessedItems:\n          allOf:\n            - $ref: '#/components/schemas/BatchWriteItemRequestMap'\n            - description: '\u003cp\u003eA map of tables and requests against those tables that were not processed. The \u003ccode\u003eUnprocessedItems\u003c/code\u003e value is in the same form as \u003ccode\u003eRequestItems\u003c/code\u003e, so you can provide this value directly to a subsequent \u003ccode\u003eBatchGetItem\u003c/code\u003e operation. For more information, see \u003ccode\u003eRequestItems\u003c/code\u003e in the Request Parameters section.\u003c/p\u003e \u003cp\u003eEach \u003ccode\u003eUnprocessedItems\u003c/code\u003e entry consists of a table name and, for that table, a list of operations to perform (\u003ccode\u003eDeleteRequest\u003c/code\u003e or \u003ccode\u003ePutRequest\u003c/code\u003e).\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDeleteRequest\u003c/code\u003e - Perform a \u003ccode\u003eDeleteItem\u003c/code\u003e operation on the specified item. The item to be deleted is identified by a \u003ccode\u003eKey\u003c/code\u003e subelement:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKey\u003c/code\u003e - A map of primary key attribute values that uniquely identify the item. Each entry in this map consists of an attribute name and an attribute value.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePutRequest\u003c/code\u003e - Perform a \u003ccode\u003ePutItem\u003c/code\u003e operation on the specified item. The item to be put is identified by an \u003ccode\u003eItem\u003c/code\u003e subelement:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItem\u003c/code\u003e - A map of attributes and their values. Each entry in this map consists of an attribute name and an attribute value. Attribute values must not be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty. Requests that contain empty values will be rejected with a \u003ccode\u003eValidationException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eIf you specify any attributes that are part of an index key, then the data types for those attributes must match those of the schema in the table''s attribute definition.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf there are no unprocessed items remaining, the response contains an empty \u003ccode\u003eUnprocessedItems\u003c/code\u003e map.\u003c/p\u003e'\n        ItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionMetricsPerTable'\n            - description: '\u003cp\u003eA list of tables that were processed by \u003ccode\u003eBatchWriteItem\u003c/code\u003e and, for each table, information about any item collections that were affected by individual \u003ccode\u003eDeleteItem\u003c/code\u003e or \u003ccode\u003ePutItem\u003c/code\u003e operations.\u003c/p\u003e \u003cp\u003eEach entry consists of the following subelements:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItemCollectionKey\u003c/code\u003e - The partition key value of the item collection. This is the same as the partition key value of the item.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSizeEstimateRangeGB\u003c/code\u003e - An estimate of item collection size, expressed in GB. This is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on the table. Use this estimate to measure whether a local secondary index is approaching its size limit.\u003c/p\u003e \u003cp\u003eThe estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityMultiple'\n            - description: '\u003cp\u003eThe capacity units consumed by the entire \u003ccode\u003eBatchWriteItem\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eEach element consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTableName\u003c/code\u003e - The table that consumed the provisioned throughput.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCapacityUnits\u003c/code\u003e - The total number of capacity units consumed.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output of a \u003ccode\u003eBatchWriteItem\u003c/code\u003e operation.\n    BatchWriteItemInput:\n      type: object\n      required:\n        - RequestItems\n      title: BatchWriteItemInput\n      properties:\n        RequestItems:\n          allOf:\n            - $ref: '#/components/schemas/BatchWriteItemRequestMap'\n            - description: '\u003cp\u003eA map of one or more table names and, for each table, a list of operations to be performed (\u003ccode\u003eDeleteRequest\u003c/code\u003e or \u003ccode\u003ePutRequest\u003c/code\u003e). Each element in the map consists of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDeleteRequest\u003c/code\u003e - Perform a \u003ccode\u003eDeleteItem\u003c/code\u003e operation on the specified item. The item to be deleted is identified by a \u003ccode\u003eKey\u003c/code\u003e subelement:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKey\u003c/code\u003e - A map of primary key attribute values that uniquely identify the item. Each entry in this map consists of an attribute name and an attribute value. For each primary key, you must provide \u003ci\u003eall\u003c/i\u003e of the key attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for \u003ci\u003eboth\u003c/i\u003e the partition key and the sort key.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePutRequest\u003c/code\u003e - Perform a \u003ccode\u003ePutItem\u003c/code\u003e operation on the specified item. The item to be put is identified by an \u003ccode\u003eItem\u003c/code\u003e subelement:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItem\u003c/code\u003e - A map of attributes and their values. Each entry in this map consists of an attribute name and an attribute value. Attribute values must not be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty. Requests that contain empty values are rejected with a \u003ccode\u003eValidationException\u003c/code\u003e exception.\u003c/p\u003e \u003cp\u003eIf you specify any attributes that are part of an index key, then the data types for those attributes must match those of the schema in the table''s attribute definition.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ReturnItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ReturnItemCollectionMetrics'\n            - description: 'Determines whether item collection metrics are returned. If set to \u003ccode\u003eSIZE\u003c/code\u003e, the response includes statistics about item collections, if any, that were modified during the operation are returned in the response. If set to \u003ccode\u003eNONE\u003c/code\u003e (the default), no statistics are returned.'\n      description: Represents the input of a \u003ccode\u003eBatchWriteItem\u003c/code\u003e operation.\n    ItemCollectionSizeLimitExceededException: {}\n    CreateBackupOutput:\n      type: object\n      properties:\n        BackupDetails:\n          allOf:\n            - $ref: '#/components/schemas/BackupDetails'\n            - description: Contains the details of the backup created for the table.\n    CreateBackupInput:\n      type: object\n      required:\n        - TableName\n        - BackupName\n      title: CreateBackupInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        BackupName:\n          allOf:\n            - $ref: '#/components/schemas/BackupName'\n            - description: Specified name for the backup.\n    TableNotFoundException: {}\n    TableInUseException: {}\n    ContinuousBackupsUnavailableException: {}\n    BackupInUseException: {}\n    LimitExceededException: {}\n    CreateGlobalTableOutput:\n      type: object\n      properties:\n        GlobalTableDescription:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableDescription'\n            - description: Contains the details of the global table.\n    CreateGlobalTableInput:\n      type: object\n      required:\n        - GlobalTableName\n        - ReplicationGroup\n      title: CreateGlobalTableInput\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The global table name.\n        ReplicationGroup:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaList'\n            - description: The Regions where the global table needs to be created.\n    GlobalTableAlreadyExistsException: {}\n    CreateTableOutput:\n      type: object\n      example:\n        TableDescription:\n          AttributeDefinitions:\n            - AttributeName: Artist\n              AttributeType: S\n            - AttributeName: SongTitle\n              AttributeType: S\n          CreationDateTime: '1421866952.062'\n          ItemCount: 0\n          KeySchema:\n            - AttributeName: Artist\n              KeyType: HASH\n            - AttributeName: SongTitle\n              KeyType: RANGE\n          ProvisionedThroughput:\n            ReadCapacityUnits: 5\n            WriteCapacityUnits: 5\n          TableName: Music\n          TableSizeBytes: 0\n          TableStatus: CREATING\n      properties:\n        TableDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableDescription'\n            - description: Represents the properties of the table.\n      description: Represents the output of a \u003ccode\u003eCreateTable\u003c/code\u003e operation.\n    CreateTableInput:\n      type: object\n      required:\n        - AttributeDefinitions\n        - TableName\n        - KeySchema\n      title: CreateTableInput\n      properties:\n        AttributeDefinitions:\n          allOf:\n            - $ref: '#/components/schemas/AttributeDefinitions'\n            - description: An array of attributes that describe the key schema for the table and indexes.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to create.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eSpecifies the attributes that make up the primary key for a table or an index. The attributes in \u003ccode\u003eKeySchema\u003c/code\u003e must also be defined in the \u003ccode\u003eAttributeDefinitions\u003c/code\u003e array. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html\"\u003eData Model\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eEach \u003ccode\u003eKeySchemaElement\u003c/code\u003e in the array is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAttributeName\u003c/code\u003e - The name of this key attribute.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeyType\u003c/code\u003e - The role that the key attribute will assume:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from the DynamoDB usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor a simple primary key (partition key), you must provide exactly one element with a \u003ccode\u003eKeyType\u003c/code\u003e of \u003ccode\u003eHASH\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor a composite primary key (partition key and sort key), you must provide exactly two elements, in this order: The first element must have a \u003ccode\u003eKeyType\u003c/code\u003e of \u003ccode\u003eHASH\u003c/code\u003e, and the second element must have a \u003ccode\u003eKeyType\u003c/code\u003e of \u003ccode\u003eRANGE\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#WorkingWithTables.primary.key\"\u003eWorking with Tables\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        LocalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/LocalSecondaryIndexList'\n            - description: '\u003cp\u003eOne or more local secondary indexes (the maximum is 5) to be created on the table. Each index is scoped to a given partition key value. There is a 10 GB size limit per partition key value; otherwise, the size of a local secondary index is unconstrained.\u003c/p\u003e \u003cp\u003eEach local secondary index in the array includes the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexName\u003c/code\u003e - The name of the local secondary index. Must be unique only for this table.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeySchema\u003c/code\u003e - Specifies the key schema for the local secondary index. The key schema must begin with the same partition key as the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjection\u003c/code\u003e - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjectionType\u003c/code\u003e - One of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the index and primary keys are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINCLUDE\u003c/code\u003e - Only the specified table attributes are projected into the index. The list of projected attributes is in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e - All of the table attributes are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNonKeyAttributes\u003c/code\u003e - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e'\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexList'\n            - description: '\u003cp\u003eOne or more global secondary indexes (the maximum is 20) to be created on the table. Each global secondary index in the array includes the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexName\u003c/code\u003e - The name of the global secondary index. Must be unique only for this table.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeySchema\u003c/code\u003e - Specifies the key schema for the global secondary index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjection\u003c/code\u003e - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjectionType\u003c/code\u003e - One of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the index and primary keys are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINCLUDE\u003c/code\u003e - Only the specified table attributes are projected into the index. The list of projected attributes is in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e - All of the table attributes are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNonKeyAttributes\u003c/code\u003e - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e, summed across all of the secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProvisionedThroughput\u003c/code\u003e - The provisioned throughput settings for the global secondary index, consisting of read and write capacity units.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        BillingMode:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: '\u003cp\u003eControls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROVISIONED\u003c/code\u003e - We recommend using \u003ccode\u003ePROVISIONED\u003c/code\u003e for predictable workloads. \u003ccode\u003ePROVISIONED\u003c/code\u003e sets the billing mode to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual\"\u003eProvisioned Mode\u003c/a\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e - We recommend using \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e for unpredictable workloads. \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e sets the billing mode to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand\"\u003eOn-Demand Mode\u003c/a\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: '\u003cp\u003eRepresents the provisioned throughput settings for a specified table or index. The settings can be modified using the \u003ccode\u003eUpdateTable\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003e If you set BillingMode as \u003ccode\u003ePROVISIONED\u003c/code\u003e, you must specify this property. If you set BillingMode as \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e, you cannot specify this property.\u003c/p\u003e \u003cp\u003eFor current minimum and maximum provisioned throughput values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        StreamSpecification:\n          allOf:\n            - $ref: '#/components/schemas/StreamSpecification'\n            - description: '\u003cp\u003eThe settings for DynamoDB Streams on the table. These settings consist of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStreamEnabled\u003c/code\u003e - Indicates whether DynamoDB Streams is to be enabled (true) or disabled (false).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStreamViewType\u003c/code\u003e - When an item in the table is modified, \u003ccode\u003eStreamViewType\u003c/code\u003e determines what information is written to the table''s stream. Valid values for \u003ccode\u003eStreamViewType\u003c/code\u003e are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the key attributes of the modified item are written to the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_IMAGE\u003c/code\u003e - The entire item, as it appears after it was modified, is written to the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOLD_IMAGE\u003c/code\u003e - The entire item, as it appeared before it was modified, is written to the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_AND_OLD_IMAGES\u003c/code\u003e - Both the new and the old item images of the item are written to the stream.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e'\n        SSESpecification:\n          allOf:\n            - $ref: '#/components/schemas/SSESpecification'\n            - description: Represents the settings used to enable server-side encryption.\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: 'A list of key-value pairs to label the table. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html\"\u003eTagging for DynamoDB\u003c/a\u003e.'\n      description: Represents the input of a \u003ccode\u003eCreateTable\u003c/code\u003e operation.\n    ResourceInUseException: {}\n    DeleteBackupOutput:\n      type: object\n      properties:\n        BackupDescription:\n          allOf:\n            - $ref: '#/components/schemas/BackupDescription'\n            - description: Contains the description of the backup created for the table.\n    DeleteBackupInput:\n      type: object\n      required:\n        - BackupArn\n      title: DeleteBackupInput\n      properties:\n        BackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: The ARN associated with the backup.\n    BackupNotFoundException: {}\n    DeleteItemOutput:\n      type: object\n      example:\n        ConsumedCapacity:\n          CapacityUnits: 1\n          TableName: Music\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/AttributeMap'\n            - description: 'A map of attribute names to \u003ccode\u003eAttributeValue\u003c/code\u003e objects, representing the item as it appeared before the \u003ccode\u003eDeleteItem\u003c/code\u003e operation. This map appears in the response only if \u003ccode\u003eReturnValues\u003c/code\u003e was specified as \u003ccode\u003eALL_OLD\u003c/code\u003e in the request.'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacity'\n            - description: 'The capacity units consumed by the \u003ccode\u003eDeleteItem\u003c/code\u003e operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the \u003ccode\u003eReturnConsumedCapacity\u003c/code\u003e parameter was specified. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eProvisioned Mode\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionMetrics'\n            - description: '\u003cp\u003eInformation about item collections, if any, that were affected by the \u003ccode\u003eDeleteItem\u003c/code\u003e operation. \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e is only returned if the \u003ccode\u003eReturnItemCollectionMetrics\u003c/code\u003e parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.\u003c/p\u003e \u003cp\u003eEach \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e element consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItemCollectionKey\u003c/code\u003e - The partition key value of the item collection. This is the same as the partition key value of the item itself.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSizeEstimateRangeGB\u003c/code\u003e - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.\u003c/p\u003e \u003cp\u003eThe estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output of a \u003ccode\u003eDeleteItem\u003c/code\u003e operation.\n    DeleteItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      title: DeleteItemInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table from which to delete the item.\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eA map of attribute names to \u003ccode\u003eAttributeValue\u003c/code\u003e objects, representing the primary key of the item to delete.\u003c/p\u003e \u003cp\u003eFor the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.\u003c/p\u003e'\n        Expected:\n          allOf:\n            - $ref: '#/components/schemas/ExpectedAttributeMap'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.Expected.html\"\u003eExpected\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConditionalOperator:\n          allOf:\n            - $ref: '#/components/schemas/ConditionalOperator'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\"\u003eConditionalOperator\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ReturnValues:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValue'\n            - description: '\u003cp\u003eUse \u003ccode\u003eReturnValues\u003c/code\u003e if you want to get the item attributes as they appeared before they were deleted. For \u003ccode\u003eDeleteItem\u003c/code\u003e, the valid values are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e - If \u003ccode\u003eReturnValues\u003c/code\u003e is not specified, or if its value is \u003ccode\u003eNONE\u003c/code\u003e, then nothing is returned. (This setting is the default for \u003ccode\u003eReturnValues\u003c/code\u003e.)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_OLD\u003c/code\u003e - The content of the old item is returned.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eReturnValues\u003c/code\u003e parameter is used by several DynamoDB operations; however, \u003ccode\u003eDeleteItem\u003c/code\u003e does not recognize any values other than \u003ccode\u003eNONE\u003c/code\u003e or \u003ccode\u003eALL_OLD\u003c/code\u003e.\u003c/p\u003e \u003c/note\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ReturnItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ReturnItemCollectionMetrics'\n            - description: 'Determines whether item collection metrics are returned. If set to \u003ccode\u003eSIZE\u003c/code\u003e, the response includes statistics about item collections, if any, that were modified during the operation are returned in the response. If set to \u003ccode\u003eNONE\u003c/code\u003e (the default), no statistics are returned.'\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: '\u003cp\u003eA condition that must be satisfied in order for a conditional \u003ccode\u003eDeleteItem\u003c/code\u003e to succeed.\u003c/p\u003e \u003cp\u003eAn expression can contain any of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFunctions: \u003ccode\u003eattribute_exists | attribute_not_exists | attribute_type | contains | begins_with | size\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThese function names are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eComparison operators: \u003ccode\u003e= | \u0026lt;\u0026gt; | \u0026lt; | \u0026gt; | \u0026lt;= | \u0026gt;= | BETWEEN | IN \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e Logical operators: \u003ccode\u003eAND | OR | NOT\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information about condition expressions, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eCondition Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information on expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: '\u003cp\u003eOne or more values that can be substituted in an expression.\u003c/p\u003e \u003cp\u003eUse the \u003cb\u003e:\u003c/b\u003e (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the \u003ci\u003eProductStatus\u003c/i\u003e attribute was one of the following: \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAvailable | Backordered | Discontinued\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou would first need to specify \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"}, \":disc\":{\"S\":\"Discontinued\"} }\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou could then use these values in an expression, such as this:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eProductStatus IN (:avail, :back, :disc)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information on expression attribute values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eCondition Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input of a \u003ccode\u003eDeleteItem\u003c/code\u003e operation.\n    ConditionalCheckFailedException: {}\n    TransactionConflictException: {}\n    DeleteTableOutput:\n      type: object\n      example:\n        TableDescription:\n          ItemCount: 0\n          ProvisionedThroughput:\n            NumberOfDecreasesToday: 1\n            ReadCapacityUnits: 5\n            WriteCapacityUnits: 5\n          TableName: Music\n          TableSizeBytes: 0\n          TableStatus: DELETING\n      properties:\n        TableDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableDescription'\n            - description: Represents the properties of a table.\n      description: Represents the output of a \u003ccode\u003eDeleteTable\u003c/code\u003e operation.\n    DeleteTableInput:\n      type: object\n      required:\n        - TableName\n      title: DeleteTableInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to delete.\n      description: Represents the input of a \u003ccode\u003eDeleteTable\u003c/code\u003e operation.\n    DescribeBackupOutput:\n      type: object\n      properties:\n        BackupDescription:\n          allOf:\n            - $ref: '#/components/schemas/BackupDescription'\n            - description: Contains the description of the backup created for the table.\n    DescribeBackupInput:\n      type: object\n      required:\n        - BackupArn\n      title: DescribeBackupInput\n      properties:\n        BackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: The Amazon Resource Name (ARN) associated with the backup.\n    DescribeContinuousBackupsOutput:\n      type: object\n      properties:\n        ContinuousBackupsDescription:\n          allOf:\n            - $ref: '#/components/schemas/ContinuousBackupsDescription'\n            - description: Represents the continuous backups and point in time recovery settings on the table.\n    DescribeContinuousBackupsInput:\n      type: object\n      required:\n        - TableName\n      title: DescribeContinuousBackupsInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table for which the customer wants to check the continuous backups and point in time recovery settings.\n    DescribeContributorInsightsOutput:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table being described.\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index being described.\n        ContributorInsightsRuleList:\n          allOf:\n            - $ref: '#/components/schemas/ContributorInsightsRuleList'\n            - description: List of names of the associated Alpine rules.\n        ContributorInsightsStatus:\n          allOf:\n            - $ref: '#/components/schemas/ContributorInsightsStatus'\n            - description: Current Status contributor insights.\n        LastUpdateDateTime:\n          allOf:\n            - $ref: '#/components/schemas/LastUpdateDateTime'\n            - description: Timestamp of the last time the status was changed.\n        FailureException:\n          allOf:\n            - $ref: '#/components/schemas/FailureException'\n            - description: '\u003cp\u003eReturns information about the last failure that encountered.\u003c/p\u003e \u003cp\u003eThe most common exceptions for a FAILED status are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eLimitExceededException - Per-account Amazon CloudWatch Contributor Insights rule limit reached. Please disable Contributor Insights for other tables/indexes OR disable Contributor Insights rules before retrying.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAccessDeniedException - Amazon CloudWatch Contributor Insights rules cannot be modified due to insufficient permissions.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAccessDeniedException - Failed to create service-linked role for Contributor Insights due to insufficient permissions.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eInternalServerError - Failed to create Amazon CloudWatch Contributor Insights rules. Please retry request.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    DescribeContributorInsightsInput:\n      type: object\n      required:\n        - TableName\n      title: DescribeContributorInsightsInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to describe.\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: 'The name of the global secondary index to describe, if applicable.'\n    DescribeEndpointsResponse:\n      type: object\n      required:\n        - Endpoints\n      properties:\n        Endpoints:\n          allOf:\n            - $ref: '#/components/schemas/Endpoints'\n            - description: List of endpoints.\n    DescribeEndpointsRequest:\n      type: object\n      title: DescribeEndpointsRequest\n      properties: {}\n    DescribeExportOutput:\n      type: object\n      properties:\n        ExportDescription:\n          allOf:\n            - $ref: '#/components/schemas/ExportDescription'\n            - description: Represents the properties of the export.\n    DescribeExportInput:\n      type: object\n      required:\n        - ExportArn\n      title: DescribeExportInput\n      properties:\n        ExportArn:\n          allOf:\n            - $ref: '#/components/schemas/ExportArn'\n            - description: The Amazon Resource Name (ARN) associated with the export.\n    ExportNotFoundException: {}\n    DescribeGlobalTableOutput:\n      type: object\n      properties:\n        GlobalTableDescription:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableDescription'\n            - description: Contains the details of the global table.\n    DescribeGlobalTableInput:\n      type: object\n      required:\n        - GlobalTableName\n      title: DescribeGlobalTableInput\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the global table.\n    GlobalTableNotFoundException: {}\n    DescribeGlobalTableSettingsOutput:\n      type: object\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the global table.\n        ReplicaSettings:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaSettingsDescriptionList'\n            - description: The Region-specific settings for the global table.\n    DescribeGlobalTableSettingsInput:\n      type: object\n      required:\n        - GlobalTableName\n      title: DescribeGlobalTableSettingsInput\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the global table to describe.\n    DescribeKinesisStreamingDestinationOutput:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table being described.\n        KinesisDataStreamDestinations:\n          allOf:\n            - $ref: '#/components/schemas/KinesisDataStreamDestinations'\n            - description: The list of replica structures for the table being described.\n    DescribeKinesisStreamingDestinationInput:\n      type: object\n      required:\n        - TableName\n      title: DescribeKinesisStreamingDestinationInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table being described.\n    DescribeLimitsOutput:\n      type: object\n      example:\n        AccountMaxReadCapacityUnits: 20000\n        AccountMaxWriteCapacityUnits: 20000\n        TableMaxReadCapacityUnits: 10000\n        TableMaxWriteCapacityUnits: 10000\n      properties:\n        AccountMaxReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum total read capacity units that your account allows you to provision across all of your tables in this Region.\n        AccountMaxWriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum total write capacity units that your account allows you to provision across all of your tables in this Region.\n        TableMaxReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'The maximum read capacity units that your account allows you to provision for a new table that you are creating in this Region, including the read capacity units provisioned for its global secondary indexes (GSIs).'\n        TableMaxWriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'The maximum write capacity units that your account allows you to provision for a new table that you are creating in this Region, including the write capacity units provisioned for its global secondary indexes (GSIs).'\n      description: Represents the output of a \u003ccode\u003eDescribeLimits\u003c/code\u003e operation.\n    DescribeLimitsInput:\n      type: object\n      title: DescribeLimitsInput\n      properties: {}\n      description: Represents the input of a \u003ccode\u003eDescribeLimits\u003c/code\u003e operation. Has no content.\n    DescribeTableOutput:\n      type: object\n      example:\n        Table:\n          AttributeDefinitions:\n            - AttributeName: Artist\n              AttributeType: S\n            - AttributeName: SongTitle\n              AttributeType: S\n          CreationDateTime: '1421866952.062'\n          ItemCount: 0\n          KeySchema:\n            - AttributeName: Artist\n              KeyType: HASH\n            - AttributeName: SongTitle\n              KeyType: RANGE\n          ProvisionedThroughput:\n            NumberOfDecreasesToday: 1\n            ReadCapacityUnits: 5\n            WriteCapacityUnits: 5\n          TableName: Music\n          TableSizeBytes: 0\n          TableStatus: ACTIVE\n      properties:\n        Table:\n          allOf:\n            - $ref: '#/components/schemas/TableDescription'\n            - description: The properties of the table.\n      description: Represents the output of a \u003ccode\u003eDescribeTable\u003c/code\u003e operation.\n    DescribeTableInput:\n      type: object\n      required:\n        - TableName\n      title: DescribeTableInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to describe.\n      description: Represents the input of a \u003ccode\u003eDescribeTable\u003c/code\u003e operation.\n    DescribeTableReplicaAutoScalingOutput:\n      type: object\n      properties:\n        TableAutoScalingDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableAutoScalingDescription'\n            - description: Represents the auto scaling properties of the table.\n    DescribeTableReplicaAutoScalingInput:\n      type: object\n      required:\n        - TableName\n      title: DescribeTableReplicaAutoScalingInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n    DescribeTimeToLiveOutput:\n      type: object\n      properties:\n        TimeToLiveDescription:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveDescription'\n            - description: \u003cp/\u003e\n    DescribeTimeToLiveInput:\n      type: object\n      required:\n        - TableName\n      title: DescribeTimeToLiveInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to be described.\n    KinesisStreamingDestinationOutput:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table being modified.\n        StreamArn:\n          allOf:\n            - $ref: '#/components/schemas/StreamArn'\n            - description: The ARN for the specific Kinesis data stream.\n        DestinationStatus:\n          allOf:\n            - $ref: '#/components/schemas/DestinationStatus'\n            - description: The current status of the replication.\n    KinesisStreamingDestinationInput:\n      type: object\n      required:\n        - TableName\n        - StreamArn\n      title: KinesisStreamingDestinationInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the DynamoDB table.\n        StreamArn:\n          allOf:\n            - $ref: '#/components/schemas/StreamArn'\n            - description: The ARN for a Kinesis data stream.\n    ExecuteStatementOutput:\n      type: object\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/ItemList'\n            - description: ' If a read operation was used, this property will contain the result of the reade operation; a map of attribute names and their values. For the write operations this value will be empty. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLNextToken'\n            - description: ' If the response of a read request exceeds the response payload limit DynamoDB will set this value in the response. If set, you can use that this value in the subsequent request to get the remaining results. '\n    ExecuteStatementInput:\n      type: object\n      required:\n        - Statement\n      title: ExecuteStatementInput\n      properties:\n        Statement:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLStatement'\n            - description: ' The PartiQL statement representing the operation to run. '\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/PreparedStatementParameters'\n            - description: ' The parameters for the PartiQL statement, if any. '\n        ConsistentRead:\n          allOf:\n            - $ref: '#/components/schemas/ConsistentRead'\n            - description: ' The consistency of a read operation. If set to \u003ccode\u003etrue\u003c/code\u003e, then a strongly consistent read is used; otherwise, an eventually consistent read is used. '\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLNextToken'\n            - description: ' Set this value to get remaining results, if \u003ccode\u003eNextToken\u003c/code\u003e was returned in the statement response. '\n    DuplicateItemException: {}\n    ExecuteTransactionOutput:\n      type: object\n      properties:\n        Responses:\n          allOf:\n            - $ref: '#/components/schemas/ItemResponseList'\n            - description: ' The response to a PartiQL transaction. '\n    ExecuteTransactionInput:\n      type: object\n      required:\n        - TransactStatements\n      title: ExecuteTransactionInput\n      properties:\n        TransactStatements:\n          allOf:\n            - $ref: '#/components/schemas/ParameterizedStatements'\n            - description: ' The list of PartiQL statements representing the transaction to run. '\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: ' Set this value to get remaining results, if \u003ccode\u003eNextToken\u003c/code\u003e was returned in the statement response. '\n    TransactionCanceledException: {}\n    TransactionInProgressException: {}\n    IdempotentParameterMismatchException: {}\n    ExportTableToPointInTimeOutput:\n      type: object\n      properties:\n        ExportDescription:\n          allOf:\n            - $ref: '#/components/schemas/ExportDescription'\n            - description: Contains a description of the table export.\n    ExportTableToPointInTimeInput:\n      type: object\n      required:\n        - TableArn\n        - S3Bucket\n      title: ExportTableToPointInTimeInput\n      properties:\n        TableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: The Amazon Resource Name (ARN) associated with the table to export.\n        ExportTime:\n          allOf:\n            - $ref: '#/components/schemas/ExportTime'\n            - description: Time in the past from which to export table data. The table export will be a snapshot of the table's state at this point in time.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: '\u003cp\u003eProviding a \u003ccode\u003eClientToken\u003c/code\u003e makes the call to \u003ccode\u003eExportTableToPointInTimeInput\u003c/code\u003e idempotent, meaning that multiple identical calls have the same effect as one single call.\u003c/p\u003e \u003cp\u003eA client token is valid for 8 hours after the first request that uses it is completed. After 8 hours, any request with the same client token is treated as a new request. Do not resubmit the same request with the same client token for more than 8 hours, or the result might not be idempotent.\u003c/p\u003e \u003cp\u003eIf you submit a request with the same client token but a change in other parameters within the 8-hour idempotency window, DynamoDB returns an \u003ccode\u003eIdempotentParameterMismatch\u003c/code\u003e exception.\u003c/p\u003e'\n        S3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/S3Bucket'\n            - description: The name of the Amazon S3 bucket to export the snapshot to.\n        S3BucketOwner:\n          allOf:\n            - $ref: '#/components/schemas/S3BucketOwner'\n            - description: The ID of the AWS account that owns the bucket the export will be stored in.\n        S3Prefix:\n          allOf:\n            - $ref: '#/components/schemas/S3Prefix'\n            - description: The Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.\n        S3SseAlgorithm:\n          allOf:\n            - $ref: '#/components/schemas/S3SseAlgorithm'\n            - description: '\u003cp\u003eType of encryption used on the bucket where export data will be stored. Valid values for \u003ccode\u003eS3SseAlgorithm\u003c/code\u003e are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAES256\u003c/code\u003e - server-side encryption with Amazon S3 managed keys\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e - server-side encryption with AWS KMS managed keys\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        S3SseKmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/S3SseKmsKeyId'\n            - description: The ID of the AWS KMS managed key used to encrypt the S3 bucket where export data will be stored (if applicable).\n        ExportFormat:\n          allOf:\n            - $ref: '#/components/schemas/ExportFormat'\n            - description: The format for the exported data. Valid values for \u003ccode\u003eExportFormat\u003c/code\u003e are \u003ccode\u003eDYNAMODB_JSON\u003c/code\u003e or \u003ccode\u003eION\u003c/code\u003e.\n    PointInTimeRecoveryUnavailableException: {}\n    InvalidExportTimeException: {}\n    ExportConflictException: {}\n    GetItemOutput:\n      type: object\n      example:\n        Item:\n          AlbumTitle:\n            S: Songs About Life\n          Artist:\n            S: Acme Band\n          SongTitle:\n            S: Happy Day\n      properties:\n        Item:\n          allOf:\n            - $ref: '#/components/schemas/AttributeMap'\n            - description: 'A map of attribute names to \u003ccode\u003eAttributeValue\u003c/code\u003e objects, as specified by \u003ccode\u003eProjectionExpression\u003c/code\u003e.'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacity'\n            - description: 'The capacity units consumed by the \u003ccode\u003eGetItem\u003c/code\u003e operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the \u003ccode\u003eReturnConsumedCapacity\u003c/code\u003e parameter was specified. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eRead/Write Capacity Mode\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n      description: Represents the output of a \u003ccode\u003eGetItem\u003c/code\u003e operation.\n    GetItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      title: GetItemInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table containing the requested item.\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eA map of attribute names to \u003ccode\u003eAttributeValue\u003c/code\u003e objects, representing the primary key of the item to retrieve.\u003c/p\u003e \u003cp\u003eFor the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.\u003c/p\u003e'\n        AttributesToGet:\n          allOf:\n            - $ref: '#/components/schemas/AttributeNameList'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eProjectionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\"\u003eAttributesToGet\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConsistentRead:\n          allOf:\n            - $ref: '#/components/schemas/ConsistentRead'\n            - description: 'Determines the read consistency model: If set to \u003ccode\u003etrue\u003c/code\u003e, then the operation uses strongly consistent reads; otherwise, the operation uses eventually consistent reads.'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ProjectionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ProjectionExpression'\n            - description: '\u003cp\u003eA string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.\u003c/p\u003e \u003cp\u003eIf no attribute names are specified, then all attributes are returned. If any of the requested attributes are not found, they do not appear in the result.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information on expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input of a \u003ccode\u003eGetItem\u003c/code\u003e operation.\n    ListBackupsOutput:\n      type: object\n      properties:\n        BackupSummaries:\n          allOf:\n            - $ref: '#/components/schemas/BackupSummaries'\n            - description: List of \u003ccode\u003eBackupSummary\u003c/code\u003e objects.\n        LastEvaluatedBackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: '\u003cp\u003e The ARN of the backup last evaluated when the current page of results was returned, inclusive of the current page of results. This value may be specified as the \u003ccode\u003eExclusiveStartBackupArn\u003c/code\u003e of a new \u003ccode\u003eListBackups\u003c/code\u003e operation in order to fetch the next page of results. \u003c/p\u003e \u003cp\u003e If \u003ccode\u003eLastEvaluatedBackupArn\u003c/code\u003e is empty, then the last page of results has been processed and there are no more results to be retrieved. \u003c/p\u003e \u003cp\u003e If \u003ccode\u003eLastEvaluatedBackupArn\u003c/code\u003e is not empty, this may or may not indicate that there is more data to be returned. All results are guaranteed to have been returned if and only if no value for \u003ccode\u003eLastEvaluatedBackupArn\u003c/code\u003e is returned. \u003c/p\u003e'\n    ListBackupsInput:\n      type: object\n      title: ListBackupsInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: 'The backups from the table specified by \u003ccode\u003eTableName\u003c/code\u003e are listed. '\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/BackupsInputLimit'\n            - description: Maximum number of backups to return at once.\n        TimeRangeLowerBound:\n          allOf:\n            - $ref: '#/components/schemas/TimeRangeLowerBound'\n            - description: Only backups created after this time are listed. \u003ccode\u003eTimeRangeLowerBound\u003c/code\u003e is inclusive.\n        TimeRangeUpperBound:\n          allOf:\n            - $ref: '#/components/schemas/TimeRangeUpperBound'\n            - description: 'Only backups created before this time are listed. \u003ccode\u003eTimeRangeUpperBound\u003c/code\u003e is exclusive. '\n        ExclusiveStartBackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: ' \u003ccode\u003eLastEvaluatedBackupArn\u003c/code\u003e is the Amazon Resource Name (ARN) of the backup last evaluated when the current page of results was returned, inclusive of the current page of results. This value may be specified as the \u003ccode\u003eExclusiveStartBackupArn\u003c/code\u003e of a new \u003ccode\u003eListBackups\u003c/code\u003e operation in order to fetch the next page of results. '\n        BackupType:\n          allOf:\n            - $ref: '#/components/schemas/BackupTypeFilter'\n            - description: '\u003cp\u003eThe backups from the table specified by \u003ccode\u003eBackupType\u003c/code\u003e are listed.\u003c/p\u003e \u003cp\u003eWhere \u003ccode\u003eBackupType\u003c/code\u003e can be:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUSER\u003c/code\u003e - On-demand backup created by you.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSYSTEM\u003c/code\u003e - On-demand backup automatically created by DynamoDB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e - All types of on-demand backups (USER and SYSTEM).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ListContributorInsightsOutput:\n      type: object\n      properties:\n        ContributorInsightsSummaries:\n          allOf:\n            - $ref: '#/components/schemas/ContributorInsightsSummaries'\n            - description: A list of ContributorInsightsSummary.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextTokenString'\n            - description: A token to go to the next page if there is one.\n    ListContributorInsightsInput:\n      type: object\n      title: ListContributorInsightsInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextTokenString'\n            - description: 'A token to for the desired page, if there is one.'\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/ListContributorInsightsLimit'\n            - description: Maximum number of results to return per page.\n    ListExportsOutput:\n      type: object\n      properties:\n        ExportSummaries:\n          allOf:\n            - $ref: '#/components/schemas/ExportSummaries'\n            - description: A list of \u003ccode\u003eExportSummary\u003c/code\u003e objects.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/ExportNextToken'\n            - description: 'If this value is returned, there are additional results to be displayed. To retrieve them, call \u003ccode\u003eListExports\u003c/code\u003e again, with \u003ccode\u003eNextToken\u003c/code\u003e set to this value.'\n    ListExportsInput:\n      type: object\n      title: ListExportsInput\n      properties:\n        TableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: The Amazon Resource Name (ARN) associated with the exported table.\n        MaxResults:\n          allOf:\n            - $ref: '#/components/schemas/ListExportsMaxLimit'\n            - description: Maximum number of results to return per page.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/ExportNextToken'\n            - description: 'An optional string that, if supplied, must be copied from the output of a previous call to \u003ccode\u003eListExports\u003c/code\u003e. When provided in this manner, the API fetches the next page of results.'\n    ListGlobalTablesOutput:\n      type: object\n      properties:\n        GlobalTables:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableList'\n            - description: List of global table names.\n        LastEvaluatedGlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Last evaluated global table name.\n    ListGlobalTablesInput:\n      type: object\n      title: ListGlobalTablesInput\n      properties:\n        ExclusiveStartGlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The first global table name that this operation will evaluate.\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: '\u003cp\u003eThe maximum number of table names to return, if the parameter is not specified DynamoDB defaults to 100.\u003c/p\u003e \u003cp\u003eIf the number of global tables DynamoDB finds reaches this limit, it stops the operation and returns the table names collected up to that point, with a table name in the \u003ccode\u003eLastEvaluatedGlobalTableName\u003c/code\u003e to apply in a subsequent operation to the \u003ccode\u003eExclusiveStartGlobalTableName\u003c/code\u003e parameter.\u003c/p\u003e'\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: Lists the global tables in a specific Region.\n    ListTablesOutput:\n      type: object\n      example:\n        TableNames:\n          - Forum\n          - ProductCatalog\n          - Reply\n          - Thread\n      properties:\n        TableNames:\n          allOf:\n            - $ref: '#/components/schemas/TableNameList'\n            - description: '\u003cp\u003eThe names of the tables associated with the current account at the current endpoint. The maximum size of this array is 100.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedTableName\u003c/code\u003e also appears in the output, you can use this value as the \u003ccode\u003eExclusiveStartTableName\u003c/code\u003e parameter in a subsequent \u003ccode\u003eListTables\u003c/code\u003e request and obtain the next page of results.\u003c/p\u003e'\n        LastEvaluatedTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: '\u003cp\u003eThe name of the last table in the current page of results. Use this value as the \u003ccode\u003eExclusiveStartTableName\u003c/code\u003e in a new request to obtain the next page of results, until all the table names are returned.\u003c/p\u003e \u003cp\u003eIf you do not receive a \u003ccode\u003eLastEvaluatedTableName\u003c/code\u003e value in the response, this means that there are no more table names to be retrieved.\u003c/p\u003e'\n      description: Represents the output of a \u003ccode\u003eListTables\u003c/code\u003e operation.\n    ListTablesInput:\n      type: object\n      title: ListTablesInput\n      properties:\n        ExclusiveStartTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: 'The first table name that this operation will evaluate. Use the value that was returned for \u003ccode\u003eLastEvaluatedTableName\u003c/code\u003e in a previous operation, so that you can obtain the next page of results.'\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/ListTablesInputLimit'\n            - description: 'A maximum number of table names to return. If this parameter is not specified, the limit is 100.'\n      description: Represents the input of a \u003ccode\u003eListTables\u003c/code\u003e operation.\n    ListTagsOfResourceOutput:\n      type: object\n      properties:\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags currently associated with the Amazon DynamoDB resource.\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextTokenString'\n            - description: 'If this value is returned, there are additional results to be displayed. To retrieve them, call ListTagsOfResource again, with NextToken set to this value.'\n    ListTagsOfResourceInput:\n      type: object\n      required:\n        - ResourceArn\n      title: ListTagsOfResourceInput\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The Amazon DynamoDB resource with tags to be listed. This value is an Amazon Resource Name (ARN).\n        NextToken:\n          allOf:\n            - $ref: '#/components/schemas/NextTokenString'\n            - description: 'An optional string that, if supplied, must be copied from the output of a previous call to ListTagOfResource. When provided in this manner, this API fetches the next page of results.'\n    PutItemOutput:\n      type: object\n      example:\n        ConsumedCapacity:\n          CapacityUnits: 1\n          TableName: Music\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/AttributeMap'\n            - description: 'The attribute values as they appeared before the \u003ccode\u003ePutItem\u003c/code\u003e operation, but only if \u003ccode\u003eReturnValues\u003c/code\u003e is specified as \u003ccode\u003eALL_OLD\u003c/code\u003e in the request. Each element consists of an attribute name and an attribute value.'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacity'\n            - description: 'The capacity units consumed by the \u003ccode\u003ePutItem\u003c/code\u003e operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the \u003ccode\u003eReturnConsumedCapacity\u003c/code\u003e parameter was specified. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eRead/Write Capacity Mode\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionMetrics'\n            - description: '\u003cp\u003eInformation about item collections, if any, that were affected by the \u003ccode\u003ePutItem\u003c/code\u003e operation. \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e is only returned if the \u003ccode\u003eReturnItemCollectionMetrics\u003c/code\u003e parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.\u003c/p\u003e \u003cp\u003eEach \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e element consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItemCollectionKey\u003c/code\u003e - The partition key value of the item collection. This is the same as the partition key value of the item itself.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSizeEstimateRangeGB\u003c/code\u003e - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.\u003c/p\u003e \u003cp\u003eThe estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output of a \u003ccode\u003ePutItem\u003c/code\u003e operation.\n    PutItemInput:\n      type: object\n      required:\n        - TableName\n        - Item\n      title: PutItemInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to contain the item.\n        Item:\n          allOf:\n            - $ref: '#/components/schemas/PutItemInputAttributeMap'\n            - description: '\u003cp\u003eA map of attribute name/value pairs, one for each attribute. Only the primary key attributes are required; you can optionally provide other attribute name-value pairs for the item.\u003c/p\u003e \u003cp\u003eYou must provide all of the attributes for the primary key. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide both values for both the partition key and the sort key.\u003c/p\u003e \u003cp\u003eIf you specify any attributes that are part of an index key, then the data types for those attributes must match those of the schema in the table''s attribute definition.\u003c/p\u003e \u003cp\u003eEmpty String and Binary attribute values are allowed. Attribute values of type String and Binary must have a length greater than zero if the attribute is used as a key attribute for a table or index.\u003c/p\u003e \u003cp\u003eFor more information about primary keys, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.CoreComponents.html#HowItWorks.CoreComponents.PrimaryKey\"\u003ePrimary Key\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eEach element in the \u003ccode\u003eItem\u003c/code\u003e map is an \u003ccode\u003eAttributeValue\u003c/code\u003e object.\u003c/p\u003e'\n        Expected:\n          allOf:\n            - $ref: '#/components/schemas/ExpectedAttributeMap'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.Expected.html\"\u003eExpected\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ReturnValues:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValue'\n            - description: '\u003cp\u003eUse \u003ccode\u003eReturnValues\u003c/code\u003e if you want to get the item attributes as they appeared before they were updated with the \u003ccode\u003ePutItem\u003c/code\u003e request. For \u003ccode\u003ePutItem\u003c/code\u003e, the valid values are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e - If \u003ccode\u003eReturnValues\u003c/code\u003e is not specified, or if its value is \u003ccode\u003eNONE\u003c/code\u003e, then nothing is returned. (This setting is the default for \u003ccode\u003eReturnValues\u003c/code\u003e.)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_OLD\u003c/code\u003e - If \u003ccode\u003ePutItem\u003c/code\u003e overwrote an attribute name-value pair, then the content of the old item is returned.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe \u003ccode\u003eReturnValues\u003c/code\u003e parameter is used by several DynamoDB operations; however, \u003ccode\u003ePutItem\u003c/code\u003e does not recognize any values other than \u003ccode\u003eNONE\u003c/code\u003e or \u003ccode\u003eALL_OLD\u003c/code\u003e.\u003c/p\u003e \u003c/note\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ReturnItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ReturnItemCollectionMetrics'\n            - description: 'Determines whether item collection metrics are returned. If set to \u003ccode\u003eSIZE\u003c/code\u003e, the response includes statistics about item collections, if any, that were modified during the operation are returned in the response. If set to \u003ccode\u003eNONE\u003c/code\u003e (the default), no statistics are returned.'\n        ConditionalOperator:\n          allOf:\n            - $ref: '#/components/schemas/ConditionalOperator'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\"\u003eConditionalOperator\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: '\u003cp\u003eA condition that must be satisfied in order for a conditional \u003ccode\u003ePutItem\u003c/code\u003e operation to succeed.\u003c/p\u003e \u003cp\u003eAn expression can contain any of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFunctions: \u003ccode\u003eattribute_exists | attribute_not_exists | attribute_type | contains | begins_with | size\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThese function names are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eComparison operators: \u003ccode\u003e= | \u0026lt;\u0026gt; | \u0026lt; | \u0026gt; | \u0026lt;= | \u0026gt;= | BETWEEN | IN \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e Logical operators: \u003ccode\u003eAND | OR | NOT\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information on condition expressions, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eCondition Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information on expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: '\u003cp\u003eOne or more values that can be substituted in an expression.\u003c/p\u003e \u003cp\u003eUse the \u003cb\u003e:\u003c/b\u003e (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the \u003ci\u003eProductStatus\u003c/i\u003e attribute was one of the following: \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAvailable | Backordered | Discontinued\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou would first need to specify \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"}, \":disc\":{\"S\":\"Discontinued\"} }\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou could then use these values in an expression, such as this:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eProductStatus IN (:avail, :back, :disc)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information on expression attribute values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eCondition Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input of a \u003ccode\u003ePutItem\u003c/code\u003e operation.\n    QueryOutput:\n      type: object\n      example:\n        ConsumedCapacity: {}\n        Count: 2\n        Items:\n          - SongTitle:\n              S: Call Me Today\n        ScannedCount: 2\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/ItemList'\n            - description: An array of item attributes that match the query criteria. Each element in this array consists of an attribute name and the value for that attribute.\n        Count:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe number of items in the response.\u003c/p\u003e \u003cp\u003eIf you used a \u003ccode\u003eQueryFilter\u003c/code\u003e in the request, then \u003ccode\u003eCount\u003c/code\u003e is the number of items returned after the filter was applied, and \u003ccode\u003eScannedCount\u003c/code\u003e is the number of matching items before the filter was applied.\u003c/p\u003e \u003cp\u003eIf you did not use a filter in the request, then \u003ccode\u003eCount\u003c/code\u003e and \u003ccode\u003eScannedCount\u003c/code\u003e are the same.\u003c/p\u003e'\n        ScannedCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe number of items evaluated, before any \u003ccode\u003eQueryFilter\u003c/code\u003e is applied. A high \u003ccode\u003eScannedCount\u003c/code\u003e value with few, or no, \u003ccode\u003eCount\u003c/code\u003e results indicates an inefficient \u003ccode\u003eQuery\u003c/code\u003e operation. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count\"\u003eCount and ScannedCount\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf you did not use a filter in the request, then \u003ccode\u003eScannedCount\u003c/code\u003e is the same as \u003ccode\u003eCount\u003c/code\u003e.\u003c/p\u003e'\n        LastEvaluatedKey:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eThe primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is empty.\u003c/p\u003e'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacity'\n            - description: 'The capacity units consumed by the \u003ccode\u003eQuery\u003c/code\u003e operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the \u003ccode\u003eReturnConsumedCapacity\u003c/code\u003e parameter was specified. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eProvisioned Throughput\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n      description: Represents the output of a \u003ccode\u003eQuery\u003c/code\u003e operation.\n    QueryInput:\n      type: object\n      required:\n        - TableName\n      title: QueryInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table containing the requested items.\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: 'The name of an index to query. This index can be any local secondary index or global secondary index on the table. Note that if you use the \u003ccode\u003eIndexName\u003c/code\u003e parameter, you must also provide \u003ccode\u003eTableName.\u003c/code\u003e '\n        Select:\n          allOf:\n            - $ref: '#/components/schemas/Select'\n            - description: '\u003cp\u003eThe attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, the count of matching items, or in the case of an index, some or all of the attributes projected into the index.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_ATTRIBUTES\u003c/code\u003e - Returns all of the item attributes from the specified table or index. If you query a local secondary index, then for each matching item in the index, DynamoDB fetches the entire item from the parent table. If the index is configured to project all item attributes, then all of the data can be obtained from the local secondary index, and no fetching is required.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_PROJECTED_ATTRIBUTES\u003c/code\u003e - Allowed only when querying an index. Retrieves all attributes that have been projected into the index. If the index is configured to project all attributes, this return value is equivalent to specifying \u003ccode\u003eALL_ATTRIBUTES\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCOUNT\u003c/code\u003e - Returns the number of matching items, rather than the matching items themselves.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSPECIFIC_ATTRIBUTES\u003c/code\u003e - Returns only the attributes listed in \u003ccode\u003eAttributesToGet\u003c/code\u003e. This return value is equivalent to specifying \u003ccode\u003eAttributesToGet\u003c/code\u003e without specifying any value for \u003ccode\u003eSelect\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you query or scan a local secondary index and request only attributes that are projected into that index, the operation will read only the index and not the table. If any of the requested attributes are not projected into the local secondary index, DynamoDB fetches each of these attributes from the parent table. This extra fetching incurs additional throughput cost and latency.\u003c/p\u003e \u003cp\u003eIf you query or scan a global secondary index, you can only request attributes that are projected into the index. Global secondary index queries cannot fetch attributes from the parent table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf neither \u003ccode\u003eSelect\u003c/code\u003e nor \u003ccode\u003eAttributesToGet\u003c/code\u003e are specified, DynamoDB defaults to \u003ccode\u003eALL_ATTRIBUTES\u003c/code\u003e when accessing a table, and \u003ccode\u003eALL_PROJECTED_ATTRIBUTES\u003c/code\u003e when accessing an index. You cannot use both \u003ccode\u003eSelect\u003c/code\u003e and \u003ccode\u003eAttributesToGet\u003c/code\u003e together in a single request, unless the value for \u003ccode\u003eSelect\u003c/code\u003e is \u003ccode\u003eSPECIFIC_ATTRIBUTES\u003c/code\u003e. (This usage is equivalent to specifying \u003ccode\u003eAttributesToGet\u003c/code\u003e without any value for \u003ccode\u003eSelect\u003c/code\u003e.)\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you use the \u003ccode\u003eProjectionExpression\u003c/code\u003e parameter, then the value for \u003ccode\u003eSelect\u003c/code\u003e can only be \u003ccode\u003eSPECIFIC_ATTRIBUTES\u003c/code\u003e. Any other value for \u003ccode\u003eSelect\u003c/code\u003e will return an error.\u003c/p\u003e \u003c/note\u003e'\n        AttributesToGet:\n          allOf:\n            - $ref: '#/components/schemas/AttributeNameList'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eProjectionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\"\u003eAttributesToGet\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: 'The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the limit while processing the results, it stops the operation and returns the matching values up to that point, and a key in \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed dataset size exceeds 1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a key in \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e to apply in a subsequent operation to continue the operation. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html\"\u003eQuery and Scan\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConsistentRead:\n          allOf:\n            - $ref: '#/components/schemas/ConsistentRead'\n            - description: '\u003cp\u003eDetermines the read consistency model: If set to \u003ccode\u003etrue\u003c/code\u003e, then the operation uses strongly consistent reads; otherwise, the operation uses eventually consistent reads.\u003c/p\u003e \u003cp\u003eStrongly consistent reads are not supported on global secondary indexes. If you query a global secondary index with \u003ccode\u003eConsistentRead\u003c/code\u003e set to \u003ccode\u003etrue\u003c/code\u003e, you will receive a \u003ccode\u003eValidationException\u003c/code\u003e.\u003c/p\u003e'\n        KeyConditions:\n          allOf:\n            - $ref: '#/components/schemas/KeyConditions'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eKeyConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.KeyConditions.html\"\u003eKeyConditions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        QueryFilter:\n          allOf:\n            - $ref: '#/components/schemas/FilterConditionMap'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eFilterExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.QueryFilter.html\"\u003eQueryFilter\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConditionalOperator:\n          allOf:\n            - $ref: '#/components/schemas/ConditionalOperator'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eFilterExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\"\u003eConditionalOperator\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ScanIndexForward:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: '\u003cp\u003eSpecifies the order for index traversal: If \u003ccode\u003etrue\u003c/code\u003e (default), the traversal is performed in ascending order; if \u003ccode\u003efalse\u003c/code\u003e, the traversal is performed in descending order. \u003c/p\u003e \u003cp\u003eItems with the same partition key value are stored in sorted order by sort key. If the sort key data type is Number, the results are stored in numeric order. For type String, the results are stored in order of UTF-8 bytes. For type Binary, DynamoDB treats each byte of the binary data as unsigned.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eScanIndexForward\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, DynamoDB returns the results in the order in which they are stored (by sort key value). This is the default behavior. If \u003ccode\u003eScanIndexForward\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e, DynamoDB reads the results in reverse order by sort key value, and then returns the results to the client.\u003c/p\u003e'\n        ExclusiveStartKey:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eThe primary key of the first item that this operation will evaluate. Use the value that was returned for \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e in the previous operation.\u003c/p\u003e \u003cp\u003eThe data type for \u003ccode\u003eExclusiveStartKey\u003c/code\u003e must be String, Number, or Binary. No set data types are allowed.\u003c/p\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ProjectionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ProjectionExpression'\n            - description: '\u003cp\u003eA string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.\u003c/p\u003e \u003cp\u003eIf no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eAccessing Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        FilterExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: '\u003cp\u003eA string that contains conditions that DynamoDB applies after the \u003ccode\u003eQuery\u003c/code\u003e operation, but before the data is returned to you. Items that do not satisfy the \u003ccode\u003eFilterExpression\u003c/code\u003e criteria are not returned.\u003c/p\u003e \u003cp\u003eA \u003ccode\u003eFilterExpression\u003c/code\u003e does not allow key attributes. You cannot define a filter expression based on a partition key or a sort key.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eA \u003ccode\u003eFilterExpression\u003c/code\u003e is applied after the items have already been read; the process of filtering does not consume any additional read capacity units.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#FilteringResults\"\u003eFilter Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        KeyConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/KeyExpression'\n            - description: '\u003cp\u003eThe condition that specifies the key values for items to be retrieved by the \u003ccode\u003eQuery\u003c/code\u003e action.\u003c/p\u003e \u003cp\u003eThe condition must perform an equality test on a single partition key value.\u003c/p\u003e \u003cp\u003eThe condition can optionally perform one of several comparison tests on a single sort key value. This allows \u003ccode\u003eQuery\u003c/code\u003e to retrieve one item with a given partition key value and sort key value, or several items that have the same partition key value but different sort key values.\u003c/p\u003e \u003cp\u003eThe partition key equality test is required, and must be specified in the following format:\u003c/p\u003e \u003cp\u003e \u003ccode\u003epartitionKeyName\u003c/code\u003e \u003ci\u003e=\u003c/i\u003e \u003ccode\u003e:partitionkeyval\u003c/code\u003e \u003c/p\u003e \u003cp\u003eIf you also want to provide a condition for the sort key, it must be combined using \u003ccode\u003eAND\u003c/code\u003e with the condition for the sort key. Following is an example, using the \u003cb\u003e=\u003c/b\u003e comparison operator for the sort key:\u003c/p\u003e \u003cp\u003e \u003ccode\u003epartitionKeyName\u003c/code\u003e \u003ccode\u003e=\u003c/code\u003e \u003ccode\u003e:partitionkeyval\u003c/code\u003e \u003ccode\u003eAND\u003c/code\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003e=\u003c/code\u003e \u003ccode\u003e:sortkeyval\u003c/code\u003e \u003c/p\u003e \u003cp\u003eValid comparisons for the sort key condition are as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003e=\u003c/code\u003e \u003ccode\u003e:sortkeyval\u003c/code\u003e - true if the sort key value is equal to \u003ccode\u003e:sortkeyval\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003e\u0026lt;\u003c/code\u003e \u003ccode\u003e:sortkeyval\u003c/code\u003e - true if the sort key value is less than \u003ccode\u003e:sortkeyval\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003e\u0026lt;=\u003c/code\u003e \u003ccode\u003e:sortkeyval\u003c/code\u003e - true if the sort key value is less than or equal to \u003ccode\u003e:sortkeyval\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003e\u0026gt;\u003c/code\u003e \u003ccode\u003e:sortkeyval\u003c/code\u003e - true if the sort key value is greater than \u003ccode\u003e:sortkeyval\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003e\u0026gt;= \u003c/code\u003e \u003ccode\u003e:sortkeyval\u003c/code\u003e - true if the sort key value is greater than or equal to \u003ccode\u003e:sortkeyval\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003esortKeyName\u003c/code\u003e \u003ccode\u003eBETWEEN\u003c/code\u003e \u003ccode\u003e:sortkeyval1\u003c/code\u003e \u003ccode\u003eAND\u003c/code\u003e \u003ccode\u003e:sortkeyval2\u003c/code\u003e - true if the sort key value is greater than or equal to \u003ccode\u003e:sortkeyval1\u003c/code\u003e, and less than or equal to \u003ccode\u003e:sortkeyval2\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ebegins_with (\u003c/code\u003e \u003ccode\u003esortKeyName\u003c/code\u003e, \u003ccode\u003e:sortkeyval\u003c/code\u003e \u003ccode\u003e)\u003c/code\u003e - true if the sort key value begins with a particular operand. (You cannot use this function with a sort key that is of type Number.) Note that the function name \u003ccode\u003ebegins_with\u003c/code\u003e is case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e parameter to replace tokens such as \u003ccode\u003e:partitionval\u003c/code\u003e and \u003ccode\u003e:sortval\u003c/code\u003e with actual values at runtime.\u003c/p\u003e \u003cp\u003eYou can optionally use the \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e parameter to replace the names of the partition key and sort key with placeholder tokens. This option might be necessary if an attribute name conflicts with a DynamoDB reserved word. For example, the following \u003ccode\u003eKeyConditionExpression\u003c/code\u003e parameter causes an error because \u003ci\u003eSize\u003c/i\u003e is a reserved word:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSize = :myval\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eTo work around this, define a placeholder (such a \u003ccode\u003e#S\u003c/code\u003e) to represent the attribute name \u003ci\u003eSize\u003c/i\u003e. \u003ccode\u003eKeyConditionExpression\u003c/code\u003e then is as follows:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#S = :myval\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor a list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information on \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e and \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ExpressionPlaceholders.html\"\u003eUsing Placeholders for Attribute Names and Values\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information on expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: '\u003cp\u003eOne or more values that can be substituted in an expression.\u003c/p\u003e \u003cp\u003eUse the \u003cb\u003e:\u003c/b\u003e (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the \u003ci\u003eProductStatus\u003c/i\u003e attribute was one of the following: \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAvailable | Backordered | Discontinued\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou would first need to specify \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"}, \":disc\":{\"S\":\"Discontinued\"} }\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou could then use these values in an expression, such as this:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eProductStatus IN (:avail, :back, :disc)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information on expression attribute values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eSpecifying Conditions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input of a \u003ccode\u003eQuery\u003c/code\u003e operation.\n    RestoreTableFromBackupOutput:\n      type: object\n      properties:\n        TableDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableDescription'\n            - description: The description of the table created from an existing backup.\n    RestoreTableFromBackupInput:\n      type: object\n      required:\n        - TargetTableName\n        - BackupArn\n      title: RestoreTableFromBackupInput\n      properties:\n        TargetTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the new table to which the backup must be restored.\n        BackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: The Amazon Resource Name (ARN) associated with the backup.\n        BillingModeOverride:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: The billing mode of the restored table.\n        GlobalSecondaryIndexOverride:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexList'\n            - description: List of global secondary indexes for the restored table. The indexes provided should match existing secondary indexes. You can choose to exclude some or all of the indexes at the time of restore.\n        LocalSecondaryIndexOverride:\n          allOf:\n            - $ref: '#/components/schemas/LocalSecondaryIndexList'\n            - description: List of local secondary indexes for the restored table. The indexes provided should match existing secondary indexes. You can choose to exclude some or all of the indexes at the time of restore.\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: Provisioned throughput settings for the restored table.\n        SSESpecificationOverride:\n          allOf:\n            - $ref: '#/components/schemas/SSESpecification'\n            - description: The new server-side encryption settings for the restored table.\n    TableAlreadyExistsException: {}\n    RestoreTableToPointInTimeOutput:\n      type: object\n      properties:\n        TableDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableDescription'\n            - description: Represents the properties of a table.\n    RestoreTableToPointInTimeInput:\n      type: object\n      required:\n        - TargetTableName\n      title: RestoreTableToPointInTimeInput\n      properties:\n        SourceTableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: The DynamoDB table that will be restored. This value is an Amazon Resource Name (ARN).\n        SourceTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the source table that is being restored.\n        TargetTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the new table to which it must be restored to.\n        UseLatestRestorableTime:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'Restore the table to the latest possible time. \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e is typically 5 minutes before the current time. '\n        RestoreDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: Time in the past to restore the table to.\n        BillingModeOverride:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: The billing mode of the restored table.\n        GlobalSecondaryIndexOverride:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexList'\n            - description: List of global secondary indexes for the restored table. The indexes provided should match existing secondary indexes. You can choose to exclude some or all of the indexes at the time of restore.\n        LocalSecondaryIndexOverride:\n          allOf:\n            - $ref: '#/components/schemas/LocalSecondaryIndexList'\n            - description: List of local secondary indexes for the restored table. The indexes provided should match existing secondary indexes. You can choose to exclude some or all of the indexes at the time of restore.\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: Provisioned throughput settings for the restored table.\n        SSESpecificationOverride:\n          allOf:\n            - $ref: '#/components/schemas/SSESpecification'\n            - description: The new server-side encryption settings for the restored table.\n    InvalidRestoreTimeException: {}\n    ScanOutput:\n      type: object\n      example:\n        ConsumedCapacity: {}\n        Count: 2\n        Items:\n          - AlbumTitle:\n              S: Somewhat Famous\n            SongTitle:\n              S: Call Me Today\n          - AlbumTitle:\n              S: Blue Sky Blues\n            SongTitle:\n              S: Scared of My Shadow\n        ScannedCount: 3\n      properties:\n        Items:\n          allOf:\n            - $ref: '#/components/schemas/ItemList'\n            - description: An array of item attributes that match the scan criteria. Each element in this array consists of an attribute name and the value for that attribute.\n        Count:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe number of items in the response.\u003c/p\u003e \u003cp\u003eIf you set \u003ccode\u003eScanFilter\u003c/code\u003e in the request, then \u003ccode\u003eCount\u003c/code\u003e is the number of items returned after the filter was applied, and \u003ccode\u003eScannedCount\u003c/code\u003e is the number of matching items before the filter was applied.\u003c/p\u003e \u003cp\u003eIf you did not use a filter in the request, then \u003ccode\u003eCount\u003c/code\u003e is the same as \u003ccode\u003eScannedCount\u003c/code\u003e.\u003c/p\u003e'\n        ScannedCount:\n          allOf:\n            - $ref: '#/components/schemas/Integer'\n            - description: '\u003cp\u003eThe number of items evaluated, before any \u003ccode\u003eScanFilter\u003c/code\u003e is applied. A high \u003ccode\u003eScannedCount\u003c/code\u003e value with few, or no, \u003ccode\u003eCount\u003c/code\u003e results indicates an inefficient \u003ccode\u003eScan\u003c/code\u003e operation. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count\"\u003eCount and ScannedCount\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf you did not use a filter in the request, then \u003ccode\u003eScannedCount\u003c/code\u003e is the same as \u003ccode\u003eCount\u003c/code\u003e.\u003c/p\u003e'\n        LastEvaluatedKey:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eThe primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.\u003c/p\u003e \u003cp\u003eIf \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e is empty.\u003c/p\u003e'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacity'\n            - description: 'The capacity units consumed by the \u003ccode\u003eScan\u003c/code\u003e operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the \u003ccode\u003eReturnConsumedCapacity\u003c/code\u003e parameter was specified. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eProvisioned Throughput\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n      description: Represents the output of a \u003ccode\u003eScan\u003c/code\u003e operation.\n    ScanInput:\n      type: object\n      required:\n        - TableName\n      title: ScanInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: 'The name of the table containing the requested items; or, if you provide \u003ccode\u003eIndexName\u003c/code\u003e, the name of the table to which that index belongs.'\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: 'The name of a secondary index to scan. This index can be any local secondary index or global secondary index. Note that if you use the \u003ccode\u003eIndexName\u003c/code\u003e parameter, you must also provide \u003ccode\u003eTableName\u003c/code\u003e.'\n        AttributesToGet:\n          allOf:\n            - $ref: '#/components/schemas/AttributeNameList'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eProjectionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html\"\u003eAttributesToGet\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        Limit:\n          allOf:\n            - $ref: '#/components/schemas/PositiveIntegerObject'\n            - description: 'The maximum number of items to evaluate (not necessarily the number of matching items). If DynamoDB processes the number of items up to the limit while processing the results, it stops the operation and returns the matching values up to that point, and a key in \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e to apply in a subsequent operation, so that you can pick up where you left off. Also, if the processed dataset size exceeds 1 MB before DynamoDB reaches this limit, it stops the operation and returns the matching values up to the limit, and a key in \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e to apply in a subsequent operation to continue the operation. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html\"\u003eWorking with Queries\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        Select:\n          allOf:\n            - $ref: '#/components/schemas/Select'\n            - description: '\u003cp\u003eThe attributes to be returned in the result. You can retrieve all item attributes, specific item attributes, the count of matching items, or in the case of an index, some or all of the attributes projected into the index.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_ATTRIBUTES\u003c/code\u003e - Returns all of the item attributes from the specified table or index. If you query a local secondary index, then for each matching item in the index, DynamoDB fetches the entire item from the parent table. If the index is configured to project all item attributes, then all of the data can be obtained from the local secondary index, and no fetching is required.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_PROJECTED_ATTRIBUTES\u003c/code\u003e - Allowed only when querying an index. Retrieves all attributes that have been projected into the index. If the index is configured to project all attributes, this return value is equivalent to specifying \u003ccode\u003eALL_ATTRIBUTES\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCOUNT\u003c/code\u003e - Returns the number of matching items, rather than the matching items themselves.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSPECIFIC_ATTRIBUTES\u003c/code\u003e - Returns only the attributes listed in \u003ccode\u003eAttributesToGet\u003c/code\u003e. This return value is equivalent to specifying \u003ccode\u003eAttributesToGet\u003c/code\u003e without specifying any value for \u003ccode\u003eSelect\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you query or scan a local secondary index and request only attributes that are projected into that index, the operation reads only the index and not the table. If any of the requested attributes are not projected into the local secondary index, DynamoDB fetches each of these attributes from the parent table. This extra fetching incurs additional throughput cost and latency.\u003c/p\u003e \u003cp\u003eIf you query or scan a global secondary index, you can only request attributes that are projected into the index. Global secondary index queries cannot fetch attributes from the parent table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf neither \u003ccode\u003eSelect\u003c/code\u003e nor \u003ccode\u003eAttributesToGet\u003c/code\u003e are specified, DynamoDB defaults to \u003ccode\u003eALL_ATTRIBUTES\u003c/code\u003e when accessing a table, and \u003ccode\u003eALL_PROJECTED_ATTRIBUTES\u003c/code\u003e when accessing an index. You cannot use both \u003ccode\u003eSelect\u003c/code\u003e and \u003ccode\u003eAttributesToGet\u003c/code\u003e together in a single request, unless the value for \u003ccode\u003eSelect\u003c/code\u003e is \u003ccode\u003eSPECIFIC_ATTRIBUTES\u003c/code\u003e. (This usage is equivalent to specifying \u003ccode\u003eAttributesToGet\u003c/code\u003e without any value for \u003ccode\u003eSelect\u003c/code\u003e.)\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you use the \u003ccode\u003eProjectionExpression\u003c/code\u003e parameter, then the value for \u003ccode\u003eSelect\u003c/code\u003e can only be \u003ccode\u003eSPECIFIC_ATTRIBUTES\u003c/code\u003e. Any other value for \u003ccode\u003eSelect\u003c/code\u003e will return an error.\u003c/p\u003e \u003c/note\u003e'\n        ScanFilter:\n          allOf:\n            - $ref: '#/components/schemas/FilterConditionMap'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eFilterExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ScanFilter.html\"\u003eScanFilter\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConditionalOperator:\n          allOf:\n            - $ref: '#/components/schemas/ConditionalOperator'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eFilterExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\"\u003eConditionalOperator\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ExclusiveStartKey:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eThe primary key of the first item that this operation will evaluate. Use the value that was returned for \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e in the previous operation.\u003c/p\u003e \u003cp\u003eThe data type for \u003ccode\u003eExclusiveStartKey\u003c/code\u003e must be String, Number or Binary. No set data types are allowed.\u003c/p\u003e \u003cp\u003eIn a parallel scan, a \u003ccode\u003eScan\u003c/code\u003e request that includes \u003ccode\u003eExclusiveStartKey\u003c/code\u003e must specify the same segment whose previous \u003ccode\u003eScan\u003c/code\u003e returned the corresponding value of \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e.\u003c/p\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        TotalSegments:\n          allOf:\n            - $ref: '#/components/schemas/ScanTotalSegments'\n            - description: '\u003cp\u003eFor a parallel \u003ccode\u003eScan\u003c/code\u003e request, \u003ccode\u003eTotalSegments\u003c/code\u003e represents the total number of segments into which the \u003ccode\u003eScan\u003c/code\u003e operation will be divided. The value of \u003ccode\u003eTotalSegments\u003c/code\u003e corresponds to the number of application workers that will perform the parallel scan. For example, if you want to use four application threads to scan a table or an index, specify a \u003ccode\u003eTotalSegments\u003c/code\u003e value of 4.\u003c/p\u003e \u003cp\u003eThe value for \u003ccode\u003eTotalSegments\u003c/code\u003e must be greater than or equal to 1, and less than or equal to 1000000. If you specify a \u003ccode\u003eTotalSegments\u003c/code\u003e value of 1, the \u003ccode\u003eScan\u003c/code\u003e operation will be sequential rather than parallel.\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eTotalSegments\u003c/code\u003e, you must also specify \u003ccode\u003eSegment\u003c/code\u003e.\u003c/p\u003e'\n        Segment:\n          allOf:\n            - $ref: '#/components/schemas/ScanSegment'\n            - description: '\u003cp\u003eFor a parallel \u003ccode\u003eScan\u003c/code\u003e request, \u003ccode\u003eSegment\u003c/code\u003e identifies an individual segment to be scanned by an application worker.\u003c/p\u003e \u003cp\u003eSegment IDs are zero-based, so the first segment is always 0. For example, if you want to use four application threads to scan a table or an index, then the first thread specifies a \u003ccode\u003eSegment\u003c/code\u003e value of 0, the second thread specifies 1, and so on.\u003c/p\u003e \u003cp\u003eThe value of \u003ccode\u003eLastEvaluatedKey\u003c/code\u003e returned from a parallel \u003ccode\u003eScan\u003c/code\u003e request must be used as \u003ccode\u003eExclusiveStartKey\u003c/code\u003e with the same segment ID in a subsequent \u003ccode\u003eScan\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eThe value for \u003ccode\u003eSegment\u003c/code\u003e must be greater than or equal to 0, and less than the value provided for \u003ccode\u003eTotalSegments\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you provide \u003ccode\u003eSegment\u003c/code\u003e, you must also provide \u003ccode\u003eTotalSegments\u003c/code\u003e.\u003c/p\u003e'\n        ProjectionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ProjectionExpression'\n            - description: '\u003cp\u003eA string that identifies one or more attributes to retrieve from the specified table or index. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.\u003c/p\u003e \u003cp\u003eIf no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        FilterExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: '\u003cp\u003eA string that contains conditions that DynamoDB applies after the \u003ccode\u003eScan\u003c/code\u003e operation, but before the data is returned to you. Items that do not satisfy the \u003ccode\u003eFilterExpression\u003c/code\u003e criteria are not returned.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eA \u003ccode\u003eFilterExpression\u003c/code\u003e is applied after the items have already been read; the process of filtering does not consume any additional read capacity units.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#FilteringResults\"\u003eFilter Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information on expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: '\u003cp\u003eOne or more values that can be substituted in an expression.\u003c/p\u003e \u003cp\u003eUse the \u003cb\u003e:\u003c/b\u003e (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the \u003ccode\u003eProductStatus\u003c/code\u003e attribute was one of the following: \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAvailable | Backordered | Discontinued\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou would first need to specify \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"}, \":disc\":{\"S\":\"Discontinued\"} }\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou could then use these values in an expression, such as this:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eProductStatus IN (:avail, :back, :disc)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information on expression attribute values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eCondition Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ConsistentRead:\n          allOf:\n            - $ref: '#/components/schemas/ConsistentRead'\n            - description: '\u003cp\u003eA Boolean value that determines the read consistency model during the scan:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eConsistentRead\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e, then the data returned from \u003ccode\u003eScan\u003c/code\u003e might not contain the results from other recently completed write operations (\u003ccode\u003ePutItem\u003c/code\u003e, \u003ccode\u003eUpdateItem\u003c/code\u003e, or \u003ccode\u003eDeleteItem\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eConsistentRead\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, then all of the write operations that completed before the \u003ccode\u003eScan\u003c/code\u003e began are guaranteed to be contained in the \u003ccode\u003eScan\u003c/code\u003e response.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe default setting for \u003ccode\u003eConsistentRead\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eConsistentRead\u003c/code\u003e parameter is not supported on global secondary indexes. If you scan a global secondary index with \u003ccode\u003eConsistentRead\u003c/code\u003e set to true, you will receive a \u003ccode\u003eValidationException\u003c/code\u003e.\u003c/p\u003e'\n      description: Represents the input of a \u003ccode\u003eScan\u003c/code\u003e operation.\n    TagResourceInput:\n      type: object\n      required:\n        - ResourceArn\n        - Tags\n      title: TagResourceInput\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: Identifies the Amazon DynamoDB resource to which tags should be added. This value is an Amazon Resource Name (ARN).\n        Tags:\n          allOf:\n            - $ref: '#/components/schemas/TagList'\n            - description: The tags to be assigned to the Amazon DynamoDB resource.\n    TransactGetItemsOutput:\n      type: object\n      properties:\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityMultiple'\n            - description: 'If the \u003ci\u003eReturnConsumedCapacity\u003c/i\u003e value was \u003ccode\u003eTOTAL\u003c/code\u003e, this is an array of \u003ccode\u003eConsumedCapacity\u003c/code\u003e objects, one for each table addressed by \u003ccode\u003eTransactGetItem\u003c/code\u003e objects in the \u003ci\u003eTransactItems\u003c/i\u003e parameter. These \u003ccode\u003eConsumedCapacity\u003c/code\u003e objects report the read-capacity units consumed by the \u003ccode\u003eTransactGetItems\u003c/code\u003e call in that table.'\n        Responses:\n          allOf:\n            - $ref: '#/components/schemas/ItemResponseList'\n            - description: '\u003cp\u003eAn ordered array of up to 25 \u003ccode\u003eItemResponse\u003c/code\u003e objects, each of which corresponds to the \u003ccode\u003eTransactGetItem\u003c/code\u003e object in the same position in the \u003ci\u003eTransactItems\u003c/i\u003e array. Each \u003ccode\u003eItemResponse\u003c/code\u003e object contains a Map of the name-value pairs that are the projected attributes of the requested item.\u003c/p\u003e \u003cp\u003eIf a requested item could not be retrieved, the corresponding \u003ccode\u003eItemResponse\u003c/code\u003e object is Null, or if the requested item has no projected attributes, the corresponding \u003ccode\u003eItemResponse\u003c/code\u003e object is an empty Map. \u003c/p\u003e'\n    TransactGetItemsInput:\n      type: object\n      required:\n        - TransactItems\n      title: TransactGetItemsInput\n      properties:\n        TransactItems:\n          allOf:\n            - $ref: '#/components/schemas/TransactGetItemList'\n            - description: 'An ordered array of up to 25 \u003ccode\u003eTransactGetItem\u003c/code\u003e objects, each of which contains a \u003ccode\u003eGet\u003c/code\u003e structure.'\n        ReturnConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ReturnConsumedCapacity'\n            - description: 'A value of \u003ccode\u003eTOTAL\u003c/code\u003e causes consumed capacity information to be returned, and a value of \u003ccode\u003eNONE\u003c/code\u003e prevents that information from being returned. No other value is valid.'\n    TransactWriteItemsOutput:\n      type: object\n      properties:\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityMultiple'\n            - description: 'The capacity units consumed by the entire \u003ccode\u003eTransactWriteItems\u003c/code\u003e operation. The values of the list are ordered according to the ordering of the \u003ccode\u003eTransactItems\u003c/code\u003e request parameter. '\n        ItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionMetricsPerTable'\n            - description: 'A list of tables that were processed by \u003ccode\u003eTransactWriteItems\u003c/code\u003e and, for each table, information about any item collections that were affected by individual \u003ccode\u003eUpdateItem\u003c/code\u003e, \u003ccode\u003ePutItem\u003c/code\u003e, or \u003ccode\u003eDeleteItem\u003c/code\u003e operations. '\n    TransactWriteItemsInput:\n      type: object\n      required:\n        - TransactItems\n      title: TransactWriteItemsInput\n      properties:\n        TransactItems:\n          allOf:\n            - $ref: '#/components/schemas/TransactWriteItemList'\n            - description: 'An ordered array of up to 25 \u003ccode\u003eTransactWriteItem\u003c/code\u003e objects, each of which contains a \u003ccode\u003eConditionCheck\u003c/code\u003e, \u003ccode\u003ePut\u003c/code\u003e, \u003ccode\u003eUpdate\u003c/code\u003e, or \u003ccode\u003eDelete\u003c/code\u003e object. These can operate on items in different tables, but the tables must reside in the same AWS account and Region, and no two of them can operate on the same item. '\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ReturnItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ReturnItemCollectionMetrics'\n            - description: 'Determines whether item collection metrics are returned. If set to \u003ccode\u003eSIZE\u003c/code\u003e, the response includes statistics about item collections (if any), that were modified during the operation and are returned in the response. If set to \u003ccode\u003eNONE\u003c/code\u003e (the default), no statistics are returned. '\n        ClientRequestToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientRequestToken'\n            - description: '\u003cp\u003eProviding a \u003ccode\u003eClientRequestToken\u003c/code\u003e makes the call to \u003ccode\u003eTransactWriteItems\u003c/code\u003e idempotent, meaning that multiple identical calls have the same effect as one single call.\u003c/p\u003e \u003cp\u003eAlthough multiple identical calls using the same client request token produce the same result on the server (no side effects), the responses to the calls might not be the same. If the \u003ccode\u003eReturnConsumedCapacity\u0026gt;\u003c/code\u003e parameter is set, then the initial \u003ccode\u003eTransactWriteItems\u003c/code\u003e call returns the amount of write capacity units consumed in making the changes. Subsequent \u003ccode\u003eTransactWriteItems\u003c/code\u003e calls with the same client token return the number of read capacity units consumed in reading the item.\u003c/p\u003e \u003cp\u003eA client request token is valid for 10 minutes after the first request that uses it is completed. After 10 minutes, any request with the same client token is treated as a new request. Do not resubmit the same request with the same client token for more than 10 minutes, or the result might not be idempotent.\u003c/p\u003e \u003cp\u003eIf you submit a request with the same client token but a change in other parameters within the 10-minute idempotency window, DynamoDB returns an \u003ccode\u003eIdempotentParameterMismatch\u003c/code\u003e exception.\u003c/p\u003e'\n    UntagResourceInput:\n      type: object\n      required:\n        - ResourceArn\n        - TagKeys\n      title: UntagResourceInput\n      properties:\n        ResourceArn:\n          allOf:\n            - $ref: '#/components/schemas/ResourceArnString'\n            - description: The DynamoDB resource that the tags will be removed from. This value is an Amazon Resource Name (ARN).\n        TagKeys:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyList'\n            - description: A list of tag keys. Existing tags of the resource whose keys are members of this list will be removed from the DynamoDB resource.\n    UpdateContinuousBackupsOutput:\n      type: object\n      properties:\n        ContinuousBackupsDescription:\n          allOf:\n            - $ref: '#/components/schemas/ContinuousBackupsDescription'\n            - description: Represents the continuous backups and point in time recovery settings on the table.\n    UpdateContinuousBackupsInput:\n      type: object\n      required:\n        - TableName\n        - PointInTimeRecoverySpecification\n      title: UpdateContinuousBackupsInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        PointInTimeRecoverySpecification:\n          allOf:\n            - $ref: '#/components/schemas/PointInTimeRecoverySpecification'\n            - description: Represents the settings used to enable point in time recovery.\n    UpdateContributorInsightsOutput:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: 'The name of the global secondary index, if applicable.'\n        ContributorInsightsStatus:\n          allOf:\n            - $ref: '#/components/schemas/ContributorInsightsStatus'\n            - description: The status of contributor insights\n    UpdateContributorInsightsInput:\n      type: object\n      required:\n        - TableName\n        - ContributorInsightsAction\n      title: UpdateContributorInsightsInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: 'The global secondary index name, if applicable.'\n        ContributorInsightsAction:\n          allOf:\n            - $ref: '#/components/schemas/ContributorInsightsAction'\n            - description: Represents the contributor insights action.\n    UpdateGlobalTableOutput:\n      type: object\n      properties:\n        GlobalTableDescription:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableDescription'\n            - description: Contains the details of the global table.\n    UpdateGlobalTableInput:\n      type: object\n      required:\n        - GlobalTableName\n        - ReplicaUpdates\n      title: UpdateGlobalTableInput\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The global table name.\n        ReplicaUpdates:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaUpdateList'\n            - description: A list of Regions that should be added or removed from the global table.\n    ReplicaAlreadyExistsException: {}\n    ReplicaNotFoundException: {}\n    UpdateGlobalTableSettingsOutput:\n      type: object\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the global table.\n        ReplicaSettings:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaSettingsDescriptionList'\n            - description: The Region-specific settings for the global table.\n    UpdateGlobalTableSettingsInput:\n      type: object\n      required:\n        - GlobalTableName\n      title: UpdateGlobalTableSettingsInput\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the global table\n        GlobalTableBillingMode:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: '\u003cp\u003eThe billing mode of the global table. If \u003ccode\u003eGlobalTableBillingMode\u003c/code\u003e is not specified, the global table defaults to \u003ccode\u003ePROVISIONED\u003c/code\u003e capacity billing mode.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROVISIONED\u003c/code\u003e - We recommend using \u003ccode\u003ePROVISIONED\u003c/code\u003e for predictable workloads. \u003ccode\u003ePROVISIONED\u003c/code\u003e sets the billing mode to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual\"\u003eProvisioned Mode\u003c/a\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e - We recommend using \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e for unpredictable workloads. \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e sets the billing mode to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand\"\u003eOn-Demand Mode\u003c/a\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        GlobalTableProvisionedWriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'The maximum number of writes consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException.\u003c/code\u003e '\n        GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n            - description: Auto scaling settings for managing provisioned write capacity for the global table.\n        GlobalTableGlobalSecondaryIndexSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableGlobalSecondaryIndexSettingsUpdateList'\n            - description: Represents the settings of a global secondary index for a global table that will be modified.\n        ReplicaSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaSettingsUpdateList'\n            - description: Represents the settings for a global table in a Region that will be modified.\n    IndexNotFoundException: {}\n    UpdateItemOutput:\n      type: object\n      example:\n        Attributes:\n          AlbumTitle:\n            S: Louder Than Ever\n          Artist:\n            S: Acme Band\n          SongTitle:\n            S: Happy Day\n          Year:\n            'N': '2015'\n      properties:\n        Attributes:\n          allOf:\n            - $ref: '#/components/schemas/AttributeMap'\n            - description: '\u003cp\u003eA map of attribute values as they appear before or after the \u003ccode\u003eUpdateItem\u003c/code\u003e operation, as determined by the \u003ccode\u003eReturnValues\u003c/code\u003e parameter.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eAttributes\u003c/code\u003e map is only present if \u003ccode\u003eReturnValues\u003c/code\u003e was specified as something other than \u003ccode\u003eNONE\u003c/code\u003e in the request. Each element represents one attribute.\u003c/p\u003e'\n        ConsumedCapacity:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacity'\n            - description: 'The capacity units consumed by the \u003ccode\u003eUpdateItem\u003c/code\u003e operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the \u003ccode\u003eReturnConsumedCapacity\u003c/code\u003e parameter was specified. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eProvisioned Throughput\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionMetrics'\n            - description: '\u003cp\u003eInformation about item collections, if any, that were affected by the \u003ccode\u003eUpdateItem\u003c/code\u003e operation. \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e is only returned if the \u003ccode\u003eReturnItemCollectionMetrics\u003c/code\u003e parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.\u003c/p\u003e \u003cp\u003eEach \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e element consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItemCollectionKey\u003c/code\u003e - The partition key value of the item collection. This is the same as the partition key value of the item itself.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSizeEstimateRangeGB\u003c/code\u003e - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.\u003c/p\u003e \u003cp\u003eThe estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the output of an \u003ccode\u003eUpdateItem\u003c/code\u003e operation.\n    UpdateItemInput:\n      type: object\n      required:\n        - TableName\n        - Key\n      title: UpdateItemInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table containing the item to update.\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: '\u003cp\u003eThe primary key of the item to be updated. Each element consists of an attribute name and a value for that attribute.\u003c/p\u003e \u003cp\u003eFor the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.\u003c/p\u003e'\n        AttributeUpdates:\n          allOf:\n            - $ref: '#/components/schemas/AttributeUpdates'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eUpdateExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributeUpdates.html\"\u003eAttributeUpdates\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        Expected:\n          allOf:\n            - $ref: '#/components/schemas/ExpectedAttributeMap'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.Expected.html\"\u003eExpected\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConditionalOperator:\n          allOf:\n            - $ref: '#/components/schemas/ConditionalOperator'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eConditionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.ConditionalOperator.html\"\u003eConditionalOperator\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ReturnValues:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValue'\n            - description: '\u003cp\u003eUse \u003ccode\u003eReturnValues\u003c/code\u003e if you want to get the item attributes as they appear before or after they are updated. For \u003ccode\u003eUpdateItem\u003c/code\u003e, the valid values are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e - If \u003ccode\u003eReturnValues\u003c/code\u003e is not specified, or if its value is \u003ccode\u003eNONE\u003c/code\u003e, then nothing is returned. (This setting is the default for \u003ccode\u003eReturnValues\u003c/code\u003e.)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_OLD\u003c/code\u003e - Returns all of the attributes of the item, as they appeared before the UpdateItem operation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATED_OLD\u003c/code\u003e - Returns only the updated attributes, as they appeared before the UpdateItem operation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL_NEW\u003c/code\u003e - Returns all of the attributes of the item, as they appear after the UpdateItem operation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATED_NEW\u003c/code\u003e - Returns only the updated attributes, as they appear after the UpdateItem operation.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThere is no additional cost associated with requesting a return value aside from the small network and processing overhead of receiving a larger response. No read capacity units are consumed.\u003c/p\u003e \u003cp\u003eThe values returned are strongly consistent.\u003c/p\u003e'\n        ReturnConsumedCapacity:\n          $ref: '#/components/schemas/ReturnConsumedCapacity'\n        ReturnItemCollectionMetrics:\n          allOf:\n            - $ref: '#/components/schemas/ReturnItemCollectionMetrics'\n            - description: 'Determines whether item collection metrics are returned. If set to \u003ccode\u003eSIZE\u003c/code\u003e, the response includes statistics about item collections, if any, that were modified during the operation are returned in the response. If set to \u003ccode\u003eNONE\u003c/code\u003e (the default), no statistics are returned.'\n        UpdateExpression:\n          allOf:\n            - $ref: '#/components/schemas/UpdateExpression'\n            - description: '\u003cp\u003eAn expression that defines one or more attributes to be updated, the action to be performed on them, and new values for them.\u003c/p\u003e \u003cp\u003eThe following action values are available for \u003ccode\u003eUpdateExpression\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSET\u003c/code\u003e - Adds one or more attributes and values to an item. If any of these attributes already exist, they are replaced by the new values. You can also use \u003ccode\u003eSET\u003c/code\u003e to add or subtract from an attribute that is of type Number. For example: \u003ccode\u003eSET myNum = myNum + :val\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003eSET\u003c/code\u003e supports the following functions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eif_not_exists (path, operand)\u003c/code\u003e - if the item does not contain an attribute at the specified path, then \u003ccode\u003eif_not_exists\u003c/code\u003e evaluates to operand; otherwise, it evaluates to path. You can use this function to avoid overwriting an attribute that may already be present in the item.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003elist_append (operand, operand)\u003c/code\u003e - evaluates to a list with a new element added to it. You can append the new element to the start or the end of the list by reversing the order of the operands.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThese function names are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREMOVE\u003c/code\u003e - Removes one or more attributes from an item.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eADD\u003c/code\u003e - Adds the specified value to the item, if the attribute does not already exist. If the attribute does exist, then the behavior of \u003ccode\u003eADD\u003c/code\u003e depends on the data type of the attribute:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf the existing attribute is a number, and if \u003ccode\u003eValue\u003c/code\u003e is also a number, then \u003ccode\u003eValue\u003c/code\u003e is mathematically added to the existing attribute. If \u003ccode\u003eValue\u003c/code\u003e is a negative number, then it is subtracted from the existing attribute.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf you use \u003ccode\u003eADD\u003c/code\u003e to increment or decrement a number value for an item that doesn''t exist before the update, DynamoDB uses \u003ccode\u003e0\u003c/code\u003e as the initial value.\u003c/p\u003e \u003cp\u003eSimilarly, if you use \u003ccode\u003eADD\u003c/code\u003e for an existing item to increment or decrement an attribute value that doesn''t exist before the update, DynamoDB uses \u003ccode\u003e0\u003c/code\u003e as the initial value. For example, suppose that the item you want to update doesn''t have an attribute named \u003ccode\u003eitemcount\u003c/code\u003e, but you decide to \u003ccode\u003eADD\u003c/code\u003e the number \u003ccode\u003e3\u003c/code\u003e to this attribute anyway. DynamoDB will create the \u003ccode\u003eitemcount\u003c/code\u003e attribute, set its initial value to \u003ccode\u003e0\u003c/code\u003e, and finally add \u003ccode\u003e3\u003c/code\u003e to it. The result will be a new \u003ccode\u003eitemcount\u003c/code\u003e attribute in the item, with a value of \u003ccode\u003e3\u003c/code\u003e.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf the existing data type is a set and if \u003ccode\u003eValue\u003c/code\u003e is also a set, then \u003ccode\u003eValue\u003c/code\u003e is added to the existing set. For example, if the attribute value is the set \u003ccode\u003e[1,2]\u003c/code\u003e, and the \u003ccode\u003eADD\u003c/code\u003e action specified \u003ccode\u003e[3]\u003c/code\u003e, then the final attribute value is \u003ccode\u003e[1,2,3]\u003c/code\u003e. An error occurs if an \u003ccode\u003eADD\u003c/code\u003e action is specified for a set attribute and the attribute type specified does not match the existing set type. \u003c/p\u003e \u003cp\u003eBoth sets must have the same primitive data type. For example, if the existing data type is a set of strings, the \u003ccode\u003eValue\u003c/code\u003e must also be a set of strings.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cimportant\u003e \u003cp\u003eThe \u003ccode\u003eADD\u003c/code\u003e action only supports Number and set data types. In addition, \u003ccode\u003eADD\u003c/code\u003e can only be used on top-level attributes, not nested attributes.\u003c/p\u003e \u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETE\u003c/code\u003e - Deletes an element from a set.\u003c/p\u003e \u003cp\u003eIf a set of values is specified, then those values are subtracted from the old set. For example, if the attribute value was the set \u003ccode\u003e[a,b,c]\u003c/code\u003e and the \u003ccode\u003eDELETE\u003c/code\u003e action specifies \u003ccode\u003e[a,c]\u003c/code\u003e, then the final attribute value is \u003ccode\u003e[b]\u003c/code\u003e. Specifying an empty set is an error.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eThe \u003ccode\u003eDELETE\u003c/code\u003e action only supports set data types. In addition, \u003ccode\u003eDELETE\u003c/code\u003e can only be used on top-level attributes, not nested attributes.\u003c/p\u003e \u003c/important\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can have many actions in a single expression, such as the following: \u003ccode\u003eSET a=:value1, b=:value2 DELETE :value3, :value4, :value5\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information on update expressions, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.Modifying.html\"\u003eModifying Items and Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: '\u003cp\u003eA condition that must be satisfied in order for a conditional update to succeed.\u003c/p\u003e \u003cp\u003eAn expression can contain any of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFunctions: \u003ccode\u003eattribute_exists | attribute_not_exists | attribute_type | contains | begins_with | size\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThese function names are case-sensitive.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eComparison operators: \u003ccode\u003e= | \u0026lt;\u0026gt; | \u0026lt; | \u0026gt; | \u0026lt;= | \u0026gt;= | BETWEEN | IN \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e Logical operators: \u003ccode\u003eAND | OR | NOT\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information about condition expressions, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eSpecifying Conditions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.) To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information about expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eSpecifying Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: '\u003cp\u003eOne or more values that can be substituted in an expression.\u003c/p\u003e \u003cp\u003eUse the \u003cb\u003e:\u003c/b\u003e (colon) character in an expression to dereference an attribute value. For example, suppose that you wanted to check whether the value of the \u003ccode\u003eProductStatus\u003c/code\u003e attribute was one of the following: \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAvailable | Backordered | Discontinued\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou would first need to specify \u003ccode\u003eExpressionAttributeValues\u003c/code\u003e as follows:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e{ \":avail\":{\"S\":\"Available\"}, \":back\":{\"S\":\"Backordered\"}, \":disc\":{\"S\":\"Discontinued\"} }\u003c/code\u003e \u003c/p\u003e \u003cp\u003eYou could then use these values in an expression, such as this:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eProductStatus IN (:avail, :back, :disc)\u003c/code\u003e \u003c/p\u003e \u003cp\u003eFor more information on expression attribute values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.SpecifyingConditions.html\"\u003eCondition Expressions\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the input of an \u003ccode\u003eUpdateItem\u003c/code\u003e operation.\n    UpdateTableOutput:\n      type: object\n      example:\n        TableDescription:\n          AttributeDefinitions:\n            - AttributeName: Artist\n              AttributeType: S\n            - AttributeName: SongTitle\n              AttributeType: S\n          CreationDateTime: '1421866952.062'\n          ItemCount: 0\n          KeySchema:\n            - AttributeName: Artist\n              KeyType: HASH\n            - AttributeName: SongTitle\n              KeyType: RANGE\n          ProvisionedThroughput:\n            LastIncreaseDateTime: '1421874759.194'\n            NumberOfDecreasesToday: 1\n            ReadCapacityUnits: 1\n            WriteCapacityUnits: 1\n          TableName: MusicCollection\n          TableSizeBytes: 0\n          TableStatus: UPDATING\n      properties:\n        TableDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableDescription'\n            - description: Represents the properties of the table.\n      description: Represents the output of an \u003ccode\u003eUpdateTable\u003c/code\u003e operation.\n    UpdateTableInput:\n      type: object\n      required:\n        - TableName\n      title: UpdateTableInput\n      properties:\n        AttributeDefinitions:\n          allOf:\n            - $ref: '#/components/schemas/AttributeDefinitions'\n            - description: 'An array of attributes that describe the key schema for the table and indexes. If you are adding a new global secondary index to the table, \u003ccode\u003eAttributeDefinitions\u003c/code\u003e must include the key element(s) of the new index.'\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to be updated.\n        BillingMode:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: '\u003cp\u003eControls how you are charged for read and write throughput and how you manage capacity. When switching from pay-per-request to provisioned capacity, initial provisioned capacity values must be set. The initial provisioned capacity values are estimated based on the consumed read and write capacity of your table and global secondary indexes over the past 30 minutes.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROVISIONED\u003c/code\u003e - We recommend using \u003ccode\u003ePROVISIONED\u003c/code\u003e for predictable workloads. \u003ccode\u003ePROVISIONED\u003c/code\u003e sets the billing mode to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual\"\u003eProvisioned Mode\u003c/a\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e - We recommend using \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e for unpredictable workloads. \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e sets the billing mode to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand\"\u003eOn-Demand Mode\u003c/a\u003e. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: The new provisioned throughput settings for the specified table or index.\n        GlobalSecondaryIndexUpdates:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexUpdateList'\n            - description: '\u003cp\u003eAn array of one or more global secondary indexes for the table. For each index in the array, you can request one action:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCreate\u003c/code\u003e - add a new global secondary index to the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUpdate\u003c/code\u003e - modify the provisioned throughput settings of an existing global secondary index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDelete\u003c/code\u003e - remove a global secondary index from the table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou can create or delete only one global secondary index per \u003ccode\u003eUpdateTable\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.OnlineOps.html\"\u003eManaging Global Secondary Indexes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. \u003c/p\u003e'\n        StreamSpecification:\n          allOf:\n            - $ref: '#/components/schemas/StreamSpecification'\n            - description: '\u003cp\u003eRepresents the DynamoDB Streams configuration for the table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou receive a \u003ccode\u003eResourceInUseException\u003c/code\u003e if you try to enable a stream on a table that already has a stream, or if you try to disable a stream on a table that doesn''t have a stream.\u003c/p\u003e \u003c/note\u003e'\n        SSESpecification:\n          allOf:\n            - $ref: '#/components/schemas/SSESpecification'\n            - description: The new server-side encryption settings for the specified table.\n        ReplicaUpdates:\n          allOf:\n            - $ref: '#/components/schemas/ReplicationGroupUpdateList'\n            - description: '\u003cp\u003eA list of replica update actions (create, delete, or update) for the table.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis property only applies to \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/globaltables.V2.html\"\u003eVersion 2019.11.21\u003c/a\u003e of global tables.\u003c/p\u003e \u003c/note\u003e'\n      description: Represents the input of an \u003ccode\u003eUpdateTable\u003c/code\u003e operation.\n    UpdateTableReplicaAutoScalingOutput:\n      type: object\n      properties:\n        TableAutoScalingDescription:\n          allOf:\n            - $ref: '#/components/schemas/TableAutoScalingDescription'\n            - description: Returns information about the auto scaling settings of a table with replicas.\n    UpdateTableReplicaAutoScalingInput:\n      type: object\n      required:\n        - TableName\n      title: UpdateTableReplicaAutoScalingInput\n      properties:\n        GlobalSecondaryIndexUpdates:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexAutoScalingUpdateList'\n            - description: Represents the auto scaling settings of the global secondary indexes of the replica to be updated.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the global table to be updated.\n        ProvisionedWriteCapacityAutoScalingUpdate:\n          $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n        ReplicaUpdates:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaAutoScalingUpdateList'\n            - description: Represents the auto scaling settings of replicas of the table that will be modified.\n    UpdateTimeToLiveOutput:\n      type: object\n      properties:\n        TimeToLiveSpecification:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveSpecification'\n            - description: Represents the output of an \u003ccode\u003eUpdateTimeToLive\u003c/code\u003e operation.\n    UpdateTimeToLiveInput:\n      type: object\n      required:\n        - TableName\n        - TimeToLiveSpecification\n      title: UpdateTimeToLiveInput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table to be configured.\n        TimeToLiveSpecification:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveSpecification'\n            - description: Represents the settings used to enable or disable Time to Live for the specified table.\n      description: Represents the input of an \u003ccode\u003eUpdateTimeToLive\u003c/code\u003e operation.\n    ArchivalReason:\n      type: string\n    Date:\n      type: string\n      format: date-time\n    BackupArn:\n      type: string\n      minLength: 37\n      maxLength: 1024\n    ArchivalSummary:\n      type: object\n      properties:\n        ArchivalDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: 'The date and time when table archival was initiated by DynamoDB, in UNIX epoch time format.'\n        ArchivalReason:\n          allOf:\n            - $ref: '#/components/schemas/ArchivalReason'\n            - description: '\u003cp\u003eThe reason DynamoDB archived the table. Currently, the only possible value is:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINACCESSIBLE_ENCRYPTION_CREDENTIALS\u003c/code\u003e - The table was archived due to the table''s AWS KMS key being inaccessible for more than seven days. An On-Demand backup was created at the archival time.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ArchivalBackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: 'The Amazon Resource Name (ARN) of the backup the table was archived to, when applicable in the archival reason. If you wish to restore this backup to the same table name, you will need to delete the original table.'\n      description: Contains details of a table archival operation.\n    AttributeAction:\n      type: string\n      enum:\n        - ADD\n        - PUT\n        - DELETE\n    KeySchemaAttributeName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    ScalarAttributeType:\n      type: string\n      enum:\n        - S\n        - 'N'\n        - B\n    AttributeDefinition:\n      type: object\n      required:\n        - AttributeName\n        - AttributeType\n      properties:\n        AttributeName:\n          allOf:\n            - $ref: '#/components/schemas/KeySchemaAttributeName'\n            - description: A name for the attribute.\n        AttributeType:\n          allOf:\n            - $ref: '#/components/schemas/ScalarAttributeType'\n            - description: '\u003cp\u003eThe data type for the attribute, where:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eS\u003c/code\u003e - the attribute is of type String\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eN\u003c/code\u003e - the attribute is of type Number\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eB\u003c/code\u003e - the attribute is of type Binary\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents an attribute for describing the key schema for the table and indexes.\n    AttributeDefinitions:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeDefinition'\n    AttributeValue:\n      type: object\n      properties:\n        S:\n          allOf:\n            - $ref: '#/components/schemas/StringAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type String. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"S\": \"Hello\"\u003c/code\u003e \u003c/p\u003e'\n        'N':\n          allOf:\n            - $ref: '#/components/schemas/NumberAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Number. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"N\": \"123.45\"\u003c/code\u003e \u003c/p\u003e \u003cp\u003eNumbers are sent across the network to DynamoDB as strings, to maximize compatibility across languages and libraries. However, DynamoDB treats them as number type attributes for mathematical operations.\u003c/p\u003e'\n        B:\n          allOf:\n            - $ref: '#/components/schemas/BinaryAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Binary. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"B\": \"dGhpcyB0ZXh0IGlzIGJhc2U2NC1lbmNvZGVk\"\u003c/code\u003e \u003c/p\u003e'\n        SS:\n          allOf:\n            - $ref: '#/components/schemas/StringSetAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type String Set. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"SS\": [\"Giraffe\", \"Hippo\" ,\"Zebra\"]\u003c/code\u003e \u003c/p\u003e'\n        NS:\n          allOf:\n            - $ref: '#/components/schemas/NumberSetAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Number Set. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"NS\": [\"42.2\", \"-19\", \"7.5\", \"3.14\"]\u003c/code\u003e \u003c/p\u003e \u003cp\u003eNumbers are sent across the network to DynamoDB as strings, to maximize compatibility across languages and libraries. However, DynamoDB treats them as number type attributes for mathematical operations.\u003c/p\u003e'\n        BS:\n          allOf:\n            - $ref: '#/components/schemas/BinarySetAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Binary Set. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"BS\": [\"U3Vubnk=\", \"UmFpbnk=\", \"U25vd3k=\"]\u003c/code\u003e \u003c/p\u003e'\n        M:\n          allOf:\n            - $ref: '#/components/schemas/MapAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Map. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"M\": {\"Name\": {\"S\": \"Joe\"}, \"Age\": {\"N\": \"35\"}}\u003c/code\u003e \u003c/p\u003e'\n        L:\n          allOf:\n            - $ref: '#/components/schemas/ListAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type List. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"L\": [ {\"S\": \"Cookies\"} , {\"S\": \"Coffee\"}, {\"N\", \"3.14159\"}]\u003c/code\u003e \u003c/p\u003e'\n        'NULL':\n          allOf:\n            - $ref: '#/components/schemas/NullAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Null. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"NULL\": true\u003c/code\u003e \u003c/p\u003e'\n        BOOL:\n          allOf:\n            - $ref: '#/components/schemas/BooleanAttributeValue'\n            - description: '\u003cp\u003eAn attribute of type Boolean. For example:\u003c/p\u003e \u003cp\u003e \u003ccode\u003e\"BOOL\": true\u003c/code\u003e \u003c/p\u003e'\n      description: '\u003cp\u003eRepresents the data for an attribute.\u003c/p\u003e \u003cp\u003eEach attribute value is described as a name-value pair. The name is the data type, and the value is the data itself.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\"\u003eData Types\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    AttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    AttributeName:\n      type: string\n      maxLength: 65535\n    AttributeNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeName'\n      minItems: 1\n    AttributeValueUpdate:\n      type: object\n      properties:\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/AttributeValue'\n            - description: '\u003cp\u003eRepresents the data for an attribute.\u003c/p\u003e \u003cp\u003eEach attribute value is described as a name-value pair. The name is the data type, and the value is the data itself.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\"\u003eData Types\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. \u003c/p\u003e'\n        Action:\n          allOf:\n            - $ref: '#/components/schemas/AttributeAction'\n            - description: '\u003cp\u003eSpecifies how to perform the update. Valid values are \u003ccode\u003ePUT\u003c/code\u003e (default), \u003ccode\u003eDELETE\u003c/code\u003e, and \u003ccode\u003eADD\u003c/code\u003e. The behavior depends on whether the specified primary key already exists in the table.\u003c/p\u003e \u003cp\u003e \u003cb\u003eIf an item with the specified \u003ci\u003eKey\u003c/i\u003e is found in the table:\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePUT\u003c/code\u003e - Adds the specified attribute to the item. If the attribute already exists, it is replaced by the new value. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETE\u003c/code\u003e - If no value is specified, the attribute and its value are removed from the item. The data type of the specified value must match the existing value''s data type.\u003c/p\u003e \u003cp\u003eIf a \u003ci\u003eset\u003c/i\u003e of values is specified, then those values are subtracted from the old set. For example, if the attribute value was the set \u003ccode\u003e[a,b,c]\u003c/code\u003e and the \u003ccode\u003eDELETE\u003c/code\u003e action specified \u003ccode\u003e[a,c]\u003c/code\u003e, then the final attribute value would be \u003ccode\u003e[b]\u003c/code\u003e. Specifying an empty set is an error.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eADD\u003c/code\u003e - If the attribute does not already exist, then the attribute and its values are added to the item. If the attribute does exist, then the behavior of \u003ccode\u003eADD\u003c/code\u003e depends on the data type of the attribute:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf the existing attribute is a number, and if \u003ccode\u003eValue\u003c/code\u003e is also a number, then the \u003ccode\u003eValue\u003c/code\u003e is mathematically added to the existing attribute. If \u003ccode\u003eValue\u003c/code\u003e is a negative number, then it is subtracted from the existing attribute.\u003c/p\u003e \u003cnote\u003e \u003cp\u003e If you use \u003ccode\u003eADD\u003c/code\u003e to increment or decrement a number value for an item that doesn''t exist before the update, DynamoDB uses 0 as the initial value.\u003c/p\u003e \u003cp\u003eIn addition, if you use \u003ccode\u003eADD\u003c/code\u003e to update an existing item, and intend to increment or decrement an attribute value which does not yet exist, DynamoDB uses \u003ccode\u003e0\u003c/code\u003e as the initial value. For example, suppose that the item you want to update does not yet have an attribute named \u003ci\u003eitemcount\u003c/i\u003e, but you decide to \u003ccode\u003eADD\u003c/code\u003e the number \u003ccode\u003e3\u003c/code\u003e to this attribute anyway, even though it currently does not exist. DynamoDB will create the \u003ci\u003eitemcount\u003c/i\u003e attribute, set its initial value to \u003ccode\u003e0\u003c/code\u003e, and finally add \u003ccode\u003e3\u003c/code\u003e to it. The result will be a new \u003ci\u003eitemcount\u003c/i\u003e attribute in the item, with a value of \u003ccode\u003e3\u003c/code\u003e.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf the existing data type is a set, and if the \u003ccode\u003eValue\u003c/code\u003e is also a set, then the \u003ccode\u003eValue\u003c/code\u003e is added to the existing set. (This is a \u003ci\u003eset\u003c/i\u003e operation, not mathematical addition.) For example, if the attribute value was the set \u003ccode\u003e[1,2]\u003c/code\u003e, and the \u003ccode\u003eADD\u003c/code\u003e action specified \u003ccode\u003e[3]\u003c/code\u003e, then the final attribute value would be \u003ccode\u003e[1,2,3]\u003c/code\u003e. An error occurs if an Add action is specified for a set attribute and the attribute type specified does not match the existing set type. \u003c/p\u003e \u003cp\u003eBoth sets must have the same primitive data type. For example, if the existing data type is a set of strings, the \u003ccode\u003eValue\u003c/code\u003e must also be a set of strings. The same holds true for number sets and binary sets.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThis action is only valid for an existing attribute whose data type is number or is a set. Do not use \u003ccode\u003eADD\u003c/code\u003e for any other data types.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eIf no item with the specified \u003ci\u003eKey\u003c/i\u003e is found:\u003c/b\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePUT\u003c/code\u003e - DynamoDB creates a new item with the specified primary key, and then adds the attribute. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETE\u003c/code\u003e - Nothing happens; there is no attribute to delete.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eADD\u003c/code\u003e - DynamoDB creates an item with the supplied primary key and number (or set of numbers) for the attribute value. The only data types allowed are number and number set; no other data types can be specified.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: '\u003cp\u003eFor the \u003ccode\u003eUpdateItem\u003c/code\u003e operation, represents the attributes to be modified, the action to perform on each, and the new value for each.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eYou cannot use \u003ccode\u003eUpdateItem\u003c/code\u003e to update any primary key attributes. Instead, you will need to delete the item, and then use \u003ccode\u003ePutItem\u003c/code\u003e to create a new item with new attributes.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eAttribute values cannot be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty. Requests with empty values will be rejected with a \u003ccode\u003eValidationException\u003c/code\u003e exception.\u003c/p\u003e'\n    AttributeUpdates:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValueUpdate'\n    StringAttributeValue:\n      type: string\n    NumberAttributeValue:\n      type: string\n    BinaryAttributeValue:\n      type: string\n    StringSetAttributeValue:\n      type: array\n      items:\n        $ref: '#/components/schemas/StringAttributeValue'\n    NumberSetAttributeValue:\n      type: array\n      items:\n        $ref: '#/components/schemas/NumberAttributeValue'\n    BinarySetAttributeValue:\n      type: array\n      items:\n        $ref: '#/components/schemas/BinaryAttributeValue'\n    MapAttributeValue:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    ListAttributeValue:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeValue'\n    NullAttributeValue:\n      type: boolean\n    BooleanAttributeValue:\n      type: boolean\n    AttributeValueList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeValue'\n    AutoScalingPolicyName:\n      type: string\n      pattern: '\\p{Print}+'\n      minLength: 1\n      maxLength: 256\n    AutoScalingTargetTrackingScalingPolicyConfigurationDescription:\n      type: object\n      required:\n        - TargetValue\n      properties:\n        DisableScaleIn:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won''t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.'\n        ScaleInCooldown:\n          allOf:\n            - $ref: '#/components/schemas/IntegerObject'\n            - description: 'The amount of time, in seconds, after a scale in activity completes before another scale in activity can start. The cooldown period is used to block subsequent scale in requests until it has expired. You should scale in conservatively to protect your application''s availability. However, if another alarm triggers a scale out policy during the cooldown period after a scale-in, application auto scaling scales out your scalable target immediately. '\n        ScaleOutCooldown:\n          allOf:\n            - $ref: '#/components/schemas/IntegerObject'\n            - description: 'The amount of time, in seconds, after a scale out activity completes before another scale out activity can start. While the cooldown period is in effect, the capacity that has been added by the previous scale out event that initiated the cooldown is calculated as part of the desired capacity for the next scale out. You should continuously (but not excessively) scale out.'\n        TargetValue:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: The target value for the metric. The range is 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2).\n      description: Represents the properties of a target tracking scaling policy.\n    AutoScalingPolicyDescription:\n      type: object\n      properties:\n        PolicyName:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingPolicyName'\n            - description: The name of the scaling policy.\n        TargetTrackingScalingPolicyConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingTargetTrackingScalingPolicyConfigurationDescription'\n            - description: Represents a target tracking scaling policy configuration.\n      description: Represents the properties of the scaling policy.\n    AutoScalingPolicyDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AutoScalingPolicyDescription'\n    AutoScalingTargetTrackingScalingPolicyConfigurationUpdate:\n      type: object\n      required:\n        - TargetValue\n      properties:\n        DisableScaleIn:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: 'Indicates whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won''t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.'\n        ScaleInCooldown:\n          allOf:\n            - $ref: '#/components/schemas/IntegerObject'\n            - description: 'The amount of time, in seconds, after a scale in activity completes before another scale in activity can start. The cooldown period is used to block subsequent scale in requests until it has expired. You should scale in conservatively to protect your application''s availability. However, if another alarm triggers a scale out policy during the cooldown period after a scale-in, application auto scaling scales out your scalable target immediately. '\n        ScaleOutCooldown:\n          allOf:\n            - $ref: '#/components/schemas/IntegerObject'\n            - description: 'The amount of time, in seconds, after a scale out activity completes before another scale out activity can start. While the cooldown period is in effect, the capacity that has been added by the previous scale out event that initiated the cooldown is calculated as part of the desired capacity for the next scale out. You should continuously (but not excessively) scale out.'\n        TargetValue:\n          allOf:\n            - $ref: '#/components/schemas/Double'\n            - description: The target value for the metric. The range is 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2).\n      description: Represents the settings of a target tracking scaling policy that will be modified.\n    AutoScalingPolicyUpdate:\n      type: object\n      required:\n        - TargetTrackingScalingPolicyConfiguration\n      properties:\n        PolicyName:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingPolicyName'\n            - description: The name of the scaling policy.\n        TargetTrackingScalingPolicyConfiguration:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingTargetTrackingScalingPolicyConfigurationUpdate'\n            - description: Represents a target tracking scaling policy configuration.\n      description: Represents the auto scaling policy to be modified.\n    AutoScalingRoleArn:\n      type: string\n      minLength: 1\n      maxLength: 1600\n      x-pattern: '[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*'\n    PositiveLongObject:\n      type: integer\n      minimum: 1\n    BooleanObject:\n      type: boolean\n    String:\n      type: string\n    AutoScalingSettingsDescription:\n      type: object\n      properties:\n        MinimumUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The minimum capacity units that a global table or global secondary index should be scaled down to.\n        MaximumUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum capacity units that a global table or global secondary index should be scaled up to.\n        AutoScalingDisabled:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: Disabled auto scaling for this global table or global secondary index.\n        AutoScalingRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: Role ARN used for configuring the auto scaling policy.\n        ScalingPolicies:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingPolicyDescriptionList'\n            - description: Information about the scaling policies.\n      description: Represents the auto scaling settings for a global table or global secondary index.\n    AutoScalingSettingsUpdate:\n      type: object\n      properties:\n        MinimumUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The minimum capacity units that a global table or global secondary index should be scaled down to.\n        MaximumUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum capacity units that a global table or global secondary index should be scaled up to.\n        AutoScalingDisabled:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: Disabled auto scaling for this global table or global secondary index.\n        AutoScalingRoleArn:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingRoleArn'\n            - description: Role ARN used for configuring auto scaling policy.\n        ScalingPolicyUpdate:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingPolicyUpdate'\n            - description: The scaling policy to apply for scaling target global table or global secondary index capacity units.\n      description: Represents the auto scaling settings to be modified for a global table or global secondary index.\n    IntegerObject:\n      type: integer\n    Double:\n      type: number\n      format: double\n    Backfilling:\n      type: boolean\n    BackupCreationDateTime:\n      type: string\n      format: date-time\n    BackupDetails:\n      type: object\n      required:\n        - BackupArn\n        - BackupName\n        - BackupStatus\n        - BackupType\n        - BackupCreationDateTime\n      properties:\n        BackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: ARN associated with the backup.\n        BackupName:\n          allOf:\n            - $ref: '#/components/schemas/BackupName'\n            - description: Name of the requested backup.\n        BackupSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/BackupSizeBytes'\n            - description: Size of the backup in bytes.\n        BackupStatus:\n          allOf:\n            - $ref: '#/components/schemas/BackupStatus'\n            - description: 'Backup can be in one of the following states: CREATING, ACTIVE, DELETED. '\n        BackupType:\n          allOf:\n            - $ref: '#/components/schemas/BackupType'\n            - description: '\u003cp\u003eBackupType:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUSER\u003c/code\u003e - You create and manage these using the on-demand backup feature.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSYSTEM\u003c/code\u003e - If you delete a table with point-in-time recovery enabled, a \u003ccode\u003eSYSTEM\u003c/code\u003e backup is automatically created and is retained for 35 days (at no additional cost). System backups allow you to restore the deleted table to the state it was in just before the point of deletion. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAWS_BACKUP\u003c/code\u003e - On-demand backup created by you from AWS Backup service.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        BackupCreationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/BackupCreationDateTime'\n            - description: 'Time at which the backup was created. This is the request time of the backup. '\n        BackupExpiryDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: Time at which the automatic on-demand backup created by DynamoDB will expire. This \u003ccode\u003eSYSTEM\u003c/code\u003e on-demand backup expires automatically 35 days after its creation.\n      description: Contains the details of the backup created for the table.\n    SourceTableDetails:\n      type: object\n      required:\n        - TableName\n        - TableId\n        - KeySchema\n        - TableCreationDateTime\n        - ProvisionedThroughput\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: 'The name of the table for which the backup was created. '\n        TableId:\n          allOf:\n            - $ref: '#/components/schemas/TableId'\n            - description: 'Unique identifier for the table for which the backup was created. '\n        TableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: 'ARN of the table for which backup was created. '\n        TableSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: Size of the table in bytes. Note that this is an approximate value.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: 'Schema of the table. '\n        TableCreationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/TableCreationDateTime'\n            - description: 'Time when the source table was created. '\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: Read IOPs and Write IOPS on the table when the backup was created.\n        ItemCount:\n          allOf:\n            - $ref: '#/components/schemas/ItemCount'\n            - description: 'Number of items in the table. Note that this is an approximate value. '\n        BillingMode:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: \u003cp\u003eControls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROVISIONED\u003c/code\u003e - Sets the read/write capacity mode to \u003ccode\u003ePROVISIONED\u003c/code\u003e. We recommend using \u003ccode\u003ePROVISIONED\u003c/code\u003e for predictable workloads.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e - Sets the read/write capacity mode to \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e. We recommend using \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e for unpredictable workloads. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n      description: 'Contains the details of the table when the backup was created. '\n    SourceTableFeatureDetails:\n      type: object\n      properties:\n        LocalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/LocalSecondaryIndexes'\n            - description: 'Represents the LSI properties for the table when the backup was created. It includes the IndexName, KeySchema and Projection for the LSIs on the table at the time of backup. '\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexes'\n            - description: 'Represents the GSI properties for the table when the backup was created. It includes the IndexName, KeySchema, Projection, and ProvisionedThroughput for the GSIs on the table at the time of backup. '\n        StreamDescription:\n          allOf:\n            - $ref: '#/components/schemas/StreamSpecification'\n            - description: Stream settings on the table when the backup was created.\n        TimeToLiveDescription:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveDescription'\n            - description: Time to Live settings on the table when the backup was created.\n        SSEDescription:\n          allOf:\n            - $ref: '#/components/schemas/SSEDescription'\n            - description: The description of the server-side encryption status on the table when the backup was created.\n      description: 'Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL. '\n    BackupDescription:\n      type: object\n      properties:\n        BackupDetails:\n          allOf:\n            - $ref: '#/components/schemas/BackupDetails'\n            - description: 'Contains the details of the backup created for the table. '\n        SourceTableDetails:\n          allOf:\n            - $ref: '#/components/schemas/SourceTableDetails'\n            - description: 'Contains the details of the table when the backup was created. '\n        SourceTableFeatureDetails:\n          allOf:\n            - $ref: '#/components/schemas/SourceTableFeatureDetails'\n            - description: 'Contains the details of the features enabled on the table when the backup was created. For example, LSIs, GSIs, streams, TTL.'\n      description: Contains the description of the backup created for the table.\n    BackupName:\n      type: string\n      pattern: '[a-zA-Z0-9_.-]+'\n      minLength: 3\n      maxLength: 255\n    BackupSizeBytes:\n      type: integer\n      minimum: 0\n    BackupStatus:\n      type: string\n      enum:\n        - CREATING\n        - DELETED\n        - AVAILABLE\n    BackupType:\n      type: string\n      enum:\n        - USER\n        - SYSTEM\n        - AWS_BACKUP\n    BackupSummary:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table.\n        TableId:\n          allOf:\n            - $ref: '#/components/schemas/TableId'\n            - description: Unique identifier for the table.\n        TableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: ARN associated with the table.\n        BackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: ARN associated with the backup.\n        BackupName:\n          allOf:\n            - $ref: '#/components/schemas/BackupName'\n            - description: Name of the specified backup.\n        BackupCreationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/BackupCreationDateTime'\n            - description: Time at which the backup was created.\n        BackupExpiryDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: Time at which the automatic on-demand backup created by DynamoDB will expire. This \u003ccode\u003eSYSTEM\u003c/code\u003e on-demand backup expires automatically 35 days after its creation.\n        BackupStatus:\n          allOf:\n            - $ref: '#/components/schemas/BackupStatus'\n            - description: 'Backup can be in one of the following states: CREATING, ACTIVE, DELETED.'\n        BackupType:\n          allOf:\n            - $ref: '#/components/schemas/BackupType'\n            - description: '\u003cp\u003eBackupType:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUSER\u003c/code\u003e - You create and manage these using the on-demand backup feature.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eSYSTEM\u003c/code\u003e - If you delete a table with point-in-time recovery enabled, a \u003ccode\u003eSYSTEM\u003c/code\u003e backup is automatically created and is retained for 35 days (at no additional cost). System backups allow you to restore the deleted table to the state it was in just before the point of deletion. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAWS_BACKUP\u003c/code\u003e - On-demand backup created by you from AWS Backup service.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        BackupSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/BackupSizeBytes'\n            - description: Size of the backup in bytes.\n      description: Contains details for the backup.\n    BackupSummaries:\n      type: array\n      items:\n        $ref: '#/components/schemas/BackupSummary'\n    TableName:\n      type: string\n      pattern: '[a-zA-Z0-9_.-]+'\n      minLength: 3\n      maxLength: 255\n    TableId:\n      type: string\n      pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'\n    TableArn:\n      type: string\n    BackupTypeFilter:\n      type: string\n      enum:\n        - USER\n        - SYSTEM\n        - AWS_BACKUP\n        - ALL\n    BackupsInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 100\n    PartiQLBatchRequest:\n      type: array\n      items:\n        $ref: '#/components/schemas/BatchStatementRequest'\n      minItems: 1\n      maxItems: 25\n    PartiQLBatchResponse:\n      type: array\n      items:\n        $ref: '#/components/schemas/BatchStatementResponse'\n    BatchGetRequestMap:\n      type: object\n      minProperties: 1\n      maxProperties: 100\n      additionalProperties:\n        $ref: '#/components/schemas/KeysAndAttributes'\n    ReturnConsumedCapacity:\n      type: string\n      enum:\n        - INDEXES\n        - TOTAL\n        - NONE\n      description: '\u003cp\u003eDetermines the level of detail about provisioned throughput consumption that is returned in the response:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINDEXES\u003c/code\u003e - The response includes the aggregate \u003ccode\u003eConsumedCapacity\u003c/code\u003e for the operation, together with \u003ccode\u003eConsumedCapacity\u003c/code\u003e for each table and secondary index that was accessed.\u003c/p\u003e \u003cp\u003eNote that some operations, such as \u003ccode\u003eGetItem\u003c/code\u003e and \u003ccode\u003eBatchGetItem\u003c/code\u003e, do not access any indexes at all. In these cases, specifying \u003ccode\u003eINDEXES\u003c/code\u003e will only return \u003ccode\u003eConsumedCapacity\u003c/code\u003e information for table(s).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eTOTAL\u003c/code\u003e - The response includes only the aggregate \u003ccode\u003eConsumedCapacity\u003c/code\u003e for the operation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNONE\u003c/code\u003e - No \u003ccode\u003eConsumedCapacity\u003c/code\u003e details are included in the response.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    BatchGetResponseMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ItemList'\n    ConsumedCapacityMultiple:\n      type: array\n      items:\n        $ref: '#/components/schemas/ConsumedCapacity'\n    KeysAndAttributes:\n      type: object\n      required:\n        - Keys\n      properties:\n        Keys:\n          allOf:\n            - $ref: '#/components/schemas/KeyList'\n            - description: The primary key attribute values that define the items and the attributes associated with the items.\n        AttributesToGet:\n          allOf:\n            - $ref: '#/components/schemas/AttributeNameList'\n            - description: 'This is a legacy parameter. Use \u003ccode\u003eProjectionExpression\u003c/code\u003e instead. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.html\"\u003eLegacy Conditional Parameters\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ConsistentRead:\n          allOf:\n            - $ref: '#/components/schemas/ConsistentRead'\n            - description: 'The consistency of a read operation. If set to \u003ccode\u003etrue\u003c/code\u003e, then a strongly consistent read is used; otherwise, an eventually consistent read is used.'\n        ProjectionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ProjectionExpression'\n            - description: '\u003cp\u003eA string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the \u003ccode\u003eProjectionExpression\u003c/code\u003e must be separated by commas.\u003c/p\u003e \u003cp\u003eIf no attribute names are specified, then all attributes will be returned. If any of the requested attributes are not found, they will not appear in the result.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eAccessing Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: '\u003cp\u003eOne or more substitution tokens for attribute names in an expression. The following are some use cases for using \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eTo access an attribute whose name conflicts with a DynamoDB reserved word.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo create a placeholder for repeating occurrences of an attribute name in an expression.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTo prevent special characters in an attribute name from being misinterpreted in an expression.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eUse the \u003cb\u003e#\u003c/b\u003e character in an expression to dereference an attribute name. For example, consider the following attribute name:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePercentile\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html\"\u003eReserved Words\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e). To work around this, you could specify the following for \u003ccode\u003eExpressionAttributeNames\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e{\"#P\":\"Percentile\"}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYou could then use this substitution in an expression, as in this example:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003e#P = :val\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eTokens that begin with the \u003cb\u003e:\u003c/b\u003e character are \u003ci\u003eexpression attribute values\u003c/i\u003e, which are placeholders for the actual value at runtime.\u003c/p\u003e \u003c/note\u003e \u003cp\u003eFor more information on expression attribute names, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html\"\u003eAccessing Item Attributes\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: '\u003cp\u003eRepresents a set of primary keys and, for each key, the attributes to retrieve from the table.\u003c/p\u003e \u003cp\u003eFor each primary key, you must provide \u003ci\u003eall\u003c/i\u003e of the key attributes. For example, with a simple primary key, you only need to provide the partition key. For a composite primary key, you must provide \u003ci\u003eboth\u003c/i\u003e the partition key and the sort key.\u003c/p\u003e'\n    ItemList:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeMap'\n    BatchStatementErrorCodeEnum:\n      type: string\n      enum:\n        - ConditionalCheckFailed\n        - ItemCollectionSizeLimitExceeded\n        - RequestLimitExceeded\n        - ValidationError\n        - ProvisionedThroughputExceeded\n        - TransactionConflict\n        - ThrottlingError\n        - InternalServerError\n        - ResourceNotFound\n        - AccessDenied\n        - DuplicateItem\n    BatchStatementError:\n      type: object\n      properties:\n        Code:\n          allOf:\n            - $ref: '#/components/schemas/BatchStatementErrorCodeEnum'\n            - description: ' The error code associated with the failed PartiQL batch statement. '\n        Message:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: ' The error message associated with the PartiQL batch resposne. '\n      description: ' An error associated with a statement in a PartiQL batch that was run. '\n    PartiQLStatement:\n      type: string\n      minLength: 1\n      maxLength: 8192\n    PreparedStatementParameters:\n      type: array\n      items:\n        $ref: '#/components/schemas/AttributeValue'\n      minItems: 1\n    ConsistentRead:\n      type: boolean\n    BatchStatementRequest:\n      type: object\n      required:\n        - Statement\n      properties:\n        Statement:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLStatement'\n            - description: ' A valid PartiQL statement. '\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/PreparedStatementParameters'\n            - description: ' The parameters associated with a PartiQL statement in the batch request. '\n        ConsistentRead:\n          allOf:\n            - $ref: '#/components/schemas/ConsistentRead'\n            - description: ' The read consistency of the PartiQL batch request. '\n      description: ' A PartiQL batch statement request. '\n    BatchStatementResponse:\n      type: object\n      properties:\n        Error:\n          allOf:\n            - $ref: '#/components/schemas/BatchStatementError'\n            - description: ' The error associated with a failed PartiQL batch statement. '\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: ' The table name associated with a failed PartiQL batch statement. '\n        Item:\n          allOf:\n            - $ref: '#/components/schemas/AttributeMap'\n            - description: ' A DynamoDB item associated with a BatchStatementResponse '\n      description: ' A PartiQL batch statement response.. '\n    BatchWriteItemRequestMap:\n      type: object\n      minProperties: 1\n      maxProperties: 25\n      additionalProperties:\n        $ref: '#/components/schemas/WriteRequests'\n    ReturnItemCollectionMetrics:\n      type: string\n      enum:\n        - SIZE\n        - NONE\n    ItemCollectionMetricsPerTable:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ItemCollectionMetricsMultiple'\n    WriteRequests:\n      type: array\n      items:\n        $ref: '#/components/schemas/WriteRequest'\n      minItems: 1\n      maxItems: 25\n    BilledSizeBytes:\n      type: integer\n      minimum: 0\n    BillingMode:\n      type: string\n      enum:\n        - PROVISIONED\n        - PAY_PER_REQUEST\n    BillingModeSummary:\n      type: object\n      properties:\n        BillingMode:\n          allOf:\n            - $ref: '#/components/schemas/BillingMode'\n            - description: \u003cp\u003eControls how you are charged for read and write throughput and how you manage capacity. This setting can be changed later.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePROVISIONED\u003c/code\u003e - Sets the read/write capacity mode to \u003ccode\u003ePROVISIONED\u003c/code\u003e. We recommend using \u003ccode\u003ePROVISIONED\u003c/code\u003e for predictable workloads.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e - Sets the read/write capacity mode to \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e. We recommend using \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e for unpredictable workloads. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\n        LastUpdateToPayPerRequestDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: Represents the time when \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e was last set as the read/write capacity mode.\n      description: Contains the details for the read/write capacity mode.\n    ConsumedCapacityUnits:\n      type: number\n      format: double\n    Capacity:\n      type: object\n      properties:\n        ReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityUnits'\n            - description: The total number of read capacity units consumed on a table or an index.\n        WriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityUnits'\n            - description: The total number of write capacity units consumed on a table or an index.\n        CapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityUnits'\n            - description: The total number of capacity units consumed on a table or an index.\n      description: Represents the amount of provisioned throughput capacity consumed on a table or an index.\n    ClientRequestToken:\n      type: string\n      minLength: 1\n      maxLength: 36\n    ClientToken:\n      type: string\n    ComparisonOperator:\n      type: string\n      enum:\n        - EQ\n        - NE\n        - IN\n        - LE\n        - LT\n        - GE\n        - GT\n        - BETWEEN\n        - NOT_NULL\n        - 'NULL'\n        - CONTAINS\n        - NOT_CONTAINS\n        - BEGINS_WITH\n    Condition:\n      type: object\n      required:\n        - ComparisonOperator\n      properties:\n        AttributeValueList:\n          allOf:\n            - $ref: '#/components/schemas/AttributeValueList'\n            - description: '\u003cp\u003eOne or more values to evaluate against the supplied attribute. The number of values in the list depends on the \u003ccode\u003eComparisonOperator\u003c/code\u003e being used.\u003c/p\u003e \u003cp\u003eFor type Number, value comparisons are numeric.\u003c/p\u003e \u003cp\u003eString value comparisons for greater than, equals, or less than are based on ASCII character code values. For example, \u003ccode\u003ea\u003c/code\u003e is greater than \u003ccode\u003eA\u003c/code\u003e, and \u003ccode\u003ea\u003c/code\u003e is greater than \u003ccode\u003eB\u003c/code\u003e. For a list of code values, see \u003ca href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\"\u003ehttp://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values.\u003c/p\u003e'\n        ComparisonOperator:\n          allOf:\n            - $ref: '#/components/schemas/ComparisonOperator'\n            - description: '\u003cp\u003eA comparator for evaluating attributes. For example, equals, greater than, less than, etc.\u003c/p\u003e \u003cp\u003eThe following comparison operators are available:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eEQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH | IN | BETWEEN\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThe following are descriptions of each comparison operator.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEQ\u003c/code\u003e : Equal. \u003ccode\u003eEQ\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, Binary, String Set, Number Set, or Binary Set. If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNE\u003c/code\u003e : Not equal. \u003ccode\u003eNE\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e of type String, Number, Binary, String Set, Number Set, or Binary Set. If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLE\u003c/code\u003e : Less than or equal. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLT\u003c/code\u003e : Less than. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGE\u003c/code\u003e : Greater than or equal. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGT\u003c/code\u003e : Greater than. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNOT_NULL\u003c/code\u003e : The attribute exists. \u003ccode\u003eNOT_NULL\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operator tests for the existence of an attribute, not its data type. If the data type of attribute \"\u003ccode\u003ea\u003c/code\u003e\" is null, and you evaluate it using \u003ccode\u003eNOT_NULL\u003c/code\u003e, the result is a Boolean \u003ccode\u003etrue\u003c/code\u003e. This result is because the attribute \"\u003ccode\u003ea\u003c/code\u003e\" exists; its data type is not relevant to the \u003ccode\u003eNOT_NULL\u003c/code\u003e comparison operator.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNULL\u003c/code\u003e : The attribute does not exist. \u003ccode\u003eNULL\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operator tests for the nonexistence of an attribute, not its data type. If the data type of attribute \"\u003ccode\u003ea\u003c/code\u003e\" is null, and you evaluate it using \u003ccode\u003eNULL\u003c/code\u003e, the result is a Boolean \u003ccode\u003efalse\u003c/code\u003e. This is because the attribute \"\u003ccode\u003ea\u003c/code\u003e\" exists; its data type is not relevant to the \u003ccode\u003eNULL\u003c/code\u003e comparison operator.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCONTAINS\u003c/code\u003e : Checks for a subsequence, or value in a set.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If the target attribute of the comparison is of type String, then the operator checks for a substring match. If the target attribute of the comparison is of type Binary, then the operator looks for a subsequence of the target that matches the input. If the target attribute of the comparison is a set (\"\u003ccode\u003eSS\u003c/code\u003e\", \"\u003ccode\u003eNS\u003c/code\u003e\", or \"\u003ccode\u003eBS\u003c/code\u003e\"), then the operator evaluates to true if it finds an exact match with any member of the set.\u003c/p\u003e \u003cp\u003eCONTAINS is supported for lists: When evaluating \"\u003ccode\u003ea CONTAINS b\u003c/code\u003e\", \"\u003ccode\u003ea\u003c/code\u003e\" can be a list; however, \"\u003ccode\u003eb\u003c/code\u003e\" cannot be a set, a map, or a list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNOT_CONTAINS\u003c/code\u003e : Checks for absence of a subsequence, or absence of a value in a set.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If the target attribute of the comparison is a String, then the operator checks for the absence of a substring match. If the target attribute of the comparison is Binary, then the operator checks for the absence of a subsequence of the target that matches the input. If the target attribute of the comparison is a set (\"\u003ccode\u003eSS\u003c/code\u003e\", \"\u003ccode\u003eNS\u003c/code\u003e\", or \"\u003ccode\u003eBS\u003c/code\u003e\"), then the operator evaluates to true if it \u003ci\u003edoes not\u003c/i\u003e find an exact match with any member of the set.\u003c/p\u003e \u003cp\u003eNOT_CONTAINS is supported for lists: When evaluating \"\u003ccode\u003ea NOT CONTAINS b\u003c/code\u003e\", \"\u003ccode\u003ea\u003c/code\u003e\" can be a list; however, \"\u003ccode\u003eb\u003c/code\u003e\" cannot be a set, a map, or a list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBEGINS_WITH\u003c/code\u003e : Checks for a prefix. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e of type String or Binary (not a Number or a set type). The target attribute of the comparison must be of type String or Binary (not a Number or a set type).\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIN\u003c/code\u003e : Checks for matching elements in a list.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain one or more \u003ccode\u003eAttributeValue\u003c/code\u003e elements of type String, Number, or Binary. These attributes are compared against an existing attribute of an item. If any elements of the input are equal to the item attribute, the expression evaluates to true.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBETWEEN\u003c/code\u003e : Greater than or equal to the first value, and less than or equal to the second value. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e must contain two \u003ccode\u003eAttributeValue\u003c/code\u003e elements of the same type, either String, Number, or Binary (not a set type). A target attribute matches if the target value is greater than, or equal to, the first element and less than, or equal to, the second element. If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor usage examples of \u003ccode\u003eAttributeValueList\u003c/code\u003e and \u003ccode\u003eComparisonOperator\u003c/code\u003e, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.html\"\u003eLegacy Conditional Parameters\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: '\u003cp\u003eRepresents the selection criteria for a \u003ccode\u003eQuery\u003c/code\u003e or \u003ccode\u003eScan\u003c/code\u003e operation:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eFor a \u003ccode\u003eQuery\u003c/code\u003e operation, \u003ccode\u003eCondition\u003c/code\u003e is used for specifying the \u003ccode\u003eKeyConditions\u003c/code\u003e to use when querying a table or an index. For \u003ccode\u003eKeyConditions\u003c/code\u003e, only the following comparison operators are supported:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eEQ | LE | LT | GE | GT | BEGINS_WITH | BETWEEN\u003c/code\u003e \u003c/p\u003e \u003cp\u003e \u003ccode\u003eCondition\u003c/code\u003e is also used in a \u003ccode\u003eQueryFilter\u003c/code\u003e, which evaluates the query results and returns only the desired values.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eFor a \u003ccode\u003eScan\u003c/code\u003e operation, \u003ccode\u003eCondition\u003c/code\u003e is used in a \u003ccode\u003eScanFilter\u003c/code\u003e, which evaluates the scan results and returns only the desired values.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    Key:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    ConditionExpression:\n      type: string\n    ExpressionAttributeNameMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeName'\n    ExpressionAttributeValueMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    ReturnValuesOnConditionCheckFailure:\n      type: string\n      enum:\n        - ALL_OLD\n        - NONE\n    ConditionCheck:\n      type: object\n      required:\n        - Key\n        - TableName\n        - ConditionExpression\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The primary key of the item to be checked. Each element consists of an attribute name and a value for that attribute.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table for the check item request.\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: A condition that must be satisfied in order for a conditional update to succeed.\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: One or more substitution tokens for attribute names in an expression.\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: One or more values that can be substituted in an expression.\n        ReturnValuesOnConditionCheckFailure:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValuesOnConditionCheckFailure'\n            - description: 'Use \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e to get the item attributes if the \u003ccode\u003eConditionCheck\u003c/code\u003e condition fails. For \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e, the valid values are: NONE and ALL_OLD.'\n      description: Represents a request to perform a check that an item exists or to check the condition of specific attributes of the item.\n    ConditionalOperator:\n      type: string\n      enum:\n        - AND\n        - OR\n    SecondaryIndexesCapacityMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Capacity'\n    ConsumedCapacity:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table that was affected by the operation.\n        CapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityUnits'\n            - description: The total number of capacity units consumed by the operation.\n        ReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityUnits'\n            - description: The total number of read capacity units consumed by the operation.\n        WriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/ConsumedCapacityUnits'\n            - description: The total number of write capacity units consumed by the operation.\n        Table:\n          allOf:\n            - $ref: '#/components/schemas/Capacity'\n            - description: The amount of throughput consumed on the table affected by the operation.\n        LocalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/SecondaryIndexesCapacityMap'\n            - description: The amount of throughput consumed on each local index affected by the operation.\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/SecondaryIndexesCapacityMap'\n            - description: The amount of throughput consumed on each global index affected by the operation.\n      description: 'The capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. \u003ccode\u003eConsumedCapacity\u003c/code\u003e is only returned if the request asked for it. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\"\u003eProvisioned Throughput\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n    ContinuousBackupsStatus:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    PointInTimeRecoveryDescription:\n      type: object\n      properties:\n        PointInTimeRecoveryStatus:\n          allOf:\n            - $ref: '#/components/schemas/PointInTimeRecoveryStatus'\n            - description: '\u003cp\u003eThe current state of point in time recovery:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eENABLING\u003c/code\u003e - Point in time recovery is being enabled.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eENABLED\u003c/code\u003e - Point in time recovery is enabled.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDISABLED\u003c/code\u003e - Point in time recovery is disabled.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        EarliestRestorableDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: 'Specifies the earliest point in time you can restore your table to. You can restore your table to any point in time during the last 35 days. '\n        LatestRestorableDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: ' \u003ccode\u003eLatestRestorableDateTime\u003c/code\u003e is typically 5 minutes before the current time. '\n      description: The description of the point in time settings applied to the table.\n    ContinuousBackupsDescription:\n      type: object\n      required:\n        - ContinuousBackupsStatus\n      properties:\n        ContinuousBackupsStatus:\n          allOf:\n            - $ref: '#/components/schemas/ContinuousBackupsStatus'\n            - description: ' \u003ccode\u003eContinuousBackupsStatus\u003c/code\u003e can be one of the following states: ENABLED, DISABLED'\n        PointInTimeRecoveryDescription:\n          allOf:\n            - $ref: '#/components/schemas/PointInTimeRecoveryDescription'\n            - description: The description of the point in time recovery settings applied to the table.\n      description: Represents the continuous backups and point in time recovery settings on the table.\n    ContributorInsightsAction:\n      type: string\n      enum:\n        - ENABLE\n        - DISABLE\n    ContributorInsightsRule:\n      type: string\n      pattern: '[A-Za-z0-9][A-Za-z0-9\\-\\_\\.]{0,126}[A-Za-z0-9]'\n    ContributorInsightsRuleList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContributorInsightsRule'\n    ContributorInsightsStatus:\n      type: string\n      enum:\n        - ENABLING\n        - ENABLED\n        - DISABLING\n        - DISABLED\n        - FAILED\n    ContributorInsightsSummary:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table associated with the summary.\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: 'Name of the index associated with the summary, if any.'\n        ContributorInsightsStatus:\n          allOf:\n            - $ref: '#/components/schemas/ContributorInsightsStatus'\n            - description: 'Describes the current status for contributor insights for the given table and index, if applicable.'\n      description: Represents a Contributor Insights summary entry.\n    ContributorInsightsSummaries:\n      type: array\n      items:\n        $ref: '#/components/schemas/ContributorInsightsSummary'\n    IndexName:\n      type: string\n      pattern: '[a-zA-Z0-9_.-]+'\n      minLength: 3\n      maxLength: 255\n    KeySchema:\n      type: array\n      items:\n        $ref: '#/components/schemas/KeySchemaElement'\n      minItems: 1\n      maxItems: 2\n    Projection:\n      type: object\n      properties:\n        ProjectionType:\n          allOf:\n            - $ref: '#/components/schemas/ProjectionType'\n            - description: '\u003cp\u003eThe set of attributes that are projected into the index:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the index and primary keys are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINCLUDE\u003c/code\u003e - In addition to the attributes described in \u003ccode\u003eKEYS_ONLY\u003c/code\u003e, the secondary index will include other non-key attributes that you specify.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e - All of the table attributes are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        NonKeyAttributes:\n          allOf:\n            - $ref: '#/components/schemas/NonKeyAttributeNameList'\n            - description: '\u003cp\u003eRepresents the non-key attribute names which will be projected into the index.\u003c/p\u003e \u003cp\u003eFor local secondary indexes, the total count of \u003ccode\u003eNonKeyAttributes\u003c/code\u003e summed across all of the local secondary indexes, must not exceed 20. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.\u003c/p\u003e'\n      description: 'Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.'\n    ProvisionedThroughput:\n      type: object\n      required:\n        - ReadCapacityUnits\n        - WriteCapacityUnits\n      properties:\n        ReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: '\u003cp\u003eThe maximum number of strongly consistent reads consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\"\u003eSpecifying Read and Write Requirements\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf read/write capacity mode is \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e the value is set to 0.\u003c/p\u003e'\n        WriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: '\u003cp\u003eThe maximum number of writes consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\"\u003eSpecifying Read and Write Requirements\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf read/write capacity mode is \u003ccode\u003ePAY_PER_REQUEST\u003c/code\u003e the value is set to 0.\u003c/p\u003e'\n      description: '\u003cp\u003eRepresents the provisioned throughput settings for a specified table or index. The settings can be modified using the \u003ccode\u003eUpdateTable\u003c/code\u003e operation.\u003c/p\u003e \u003cp\u003eFor current minimum and maximum provisioned throughput values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    CreateGlobalSecondaryIndexAction:\n      type: object\n      required:\n        - IndexName\n        - KeySchema\n        - Projection\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index to be created.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: The key schema for the global secondary index.\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.'\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: '\u003cp\u003eRepresents the provisioned throughput settings for the specified global secondary index.\u003c/p\u003e \u003cp\u003eFor current minimum and maximum provisioned throughput values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents a new global secondary index to be added to an existing table.\n    ReplicaList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Replica'\n    GlobalTableDescription:\n      type: object\n      properties:\n        ReplicationGroup:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaDescriptionList'\n            - description: The Regions where the global table has replicas.\n        GlobalTableArn:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableArnString'\n            - description: The unique identifier of the global table.\n        CreationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The creation time of the global table.\n        GlobalTableStatus:\n          allOf:\n            - $ref: '#/components/schemas/GlobalTableStatus'\n            - description: '\u003cp\u003eThe current state of the global table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The global table is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The global table is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The global table is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The global table is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The global table name.\n      description: Contains details about the global table.\n    RegionName:\n      type: string\n    CreateReplicaAction:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region of the replica to be added.\n      description: Represents a replica to be added.\n    KMSMasterKeyId:\n      type: string\n    ProvisionedThroughputOverride:\n      type: object\n      properties:\n        ReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'Replica-specific read capacity units. If not specified, uses the source table''s read capacity settings.'\n      description: 'Replica-specific provisioned throughput settings. If not specified, uses the source table''s provisioned throughput settings.'\n    ReplicaGlobalSecondaryIndexList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaGlobalSecondaryIndex'\n      minItems: 1\n    CreateReplicationGroupMemberAction:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the new replica will be created.\n        KMSMasterKeyId:\n          allOf:\n            - $ref: '#/components/schemas/KMSMasterKeyId'\n            - description: 'The AWS KMS customer master key (CMK) that should be used for AWS KMS encryption in the new replica. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB KMS master key alias/aws/dynamodb.'\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputOverride'\n            - description: 'Replica-specific provisioned throughput. If not specified, uses the source table''s provisioned throughput settings.'\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexList'\n            - description: Replica-specific global secondary index settings.\n      description: Represents a replica to be created.\n    LocalSecondaryIndexList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LocalSecondaryIndex'\n    GlobalSecondaryIndexList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalSecondaryIndex'\n    StreamSpecification:\n      type: object\n      required:\n        - StreamEnabled\n      properties:\n        StreamEnabled:\n          allOf:\n            - $ref: '#/components/schemas/StreamEnabled'\n            - description: Indicates whether DynamoDB Streams is enabled (true) or disabled (false) on the table.\n        StreamViewType:\n          allOf:\n            - $ref: '#/components/schemas/StreamViewType'\n            - description: '\u003cp\u003e When an item in the table is modified, \u003ccode\u003eStreamViewType\u003c/code\u003e determines what information is written to the stream for this table. Valid values for \u003ccode\u003eStreamViewType\u003c/code\u003e are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the key attributes of the modified item are written to the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_IMAGE\u003c/code\u003e - The entire item, as it appears after it was modified, is written to the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eOLD_IMAGE\u003c/code\u003e - The entire item, as it appeared before it was modified, is written to the stream.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNEW_AND_OLD_IMAGES\u003c/code\u003e - Both the new and the old item images of the item are written to the stream.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the DynamoDB Streams configuration for a table in DynamoDB.\n    SSESpecification:\n      type: object\n      properties:\n        Enabled:\n          allOf:\n            - $ref: '#/components/schemas/SSEEnabled'\n            - description: 'Indicates whether server-side encryption is done using an AWS managed CMK or an AWS owned CMK. If enabled (true), server-side encryption type is set to \u003ccode\u003eKMS\u003c/code\u003e and an AWS managed CMK is used (AWS KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned CMK.'\n        SSEType:\n          allOf:\n            - $ref: '#/components/schemas/SSEType'\n            - description: '\u003cp\u003eServer-side encryption type. The only supported value is:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e - Server-side encryption that uses AWS Key Management Service. The key is stored in your account and is managed by AWS KMS (AWS KMS charges apply).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        KMSMasterKeyId:\n          allOf:\n            - $ref: '#/components/schemas/KMSMasterKeyId'\n            - description: 'The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB customer master key alias/aws/dynamodb.'\n      description: Represents the settings used to enable server-side encryption.\n    TagList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Tag'\n    TableDescription:\n      type: object\n      properties:\n        AttributeDefinitions:\n          allOf:\n            - $ref: '#/components/schemas/AttributeDefinitions'\n            - description: '\u003cp\u003eAn array of \u003ccode\u003eAttributeDefinition\u003c/code\u003e objects. Each of these objects describes one attribute in the table and index key schema.\u003c/p\u003e \u003cp\u003eEach \u003ccode\u003eAttributeDefinition\u003c/code\u003e object in this array is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAttributeName\u003c/code\u003e - The name of the attribute.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAttributeType\u003c/code\u003e - The data type for the attribute.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe primary key structure for the table. Each \u003ccode\u003eKeySchemaElement\u003c/code\u003e consists of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAttributeName\u003c/code\u003e - The name of the attribute.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeyType\u003c/code\u003e - The role of the attribute:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information about primary keys, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataModel.html#DataModelPrimaryKey\"\u003ePrimary Key\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        TableStatus:\n          allOf:\n            - $ref: '#/components/schemas/TableStatus'\n            - description: '\u003cp\u003eThe current state of the table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The table is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The table is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The table is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The table is ready for use.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINACCESSIBLE_ENCRYPTION_CREDENTIALS\u003c/code\u003e - The AWS KMS key used to encrypt the table in inaccessible. Table operations may fail due to failure to use the AWS KMS key. DynamoDB will initiate the table archival process when a table''s AWS KMS key remains inaccessible for more than seven days. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eARCHIVING\u003c/code\u003e - The table is being archived. Operations are not allowed until archival is complete. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eARCHIVED\u003c/code\u003e - The table has been archived. See the ArchivalReason for more information. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        CreationDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: 'The date and time when the table was created, in \u003ca href=\"http://www.epochconverter.com/\"\u003eUNIX epoch time\u003c/a\u003e format.'\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputDescription'\n            - description: 'The provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.'\n        TableSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The total size of the specified table, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.'\n        ItemCount:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The number of items in the specified table. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.\n        TableArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) that uniquely identifies the table.\n        TableId:\n          allOf:\n            - $ref: '#/components/schemas/TableId'\n            - description: 'Unique identifier for the table for which the backup was created. '\n        BillingModeSummary:\n          allOf:\n            - $ref: '#/components/schemas/BillingModeSummary'\n            - description: Contains the details for the read/write capacity mode.\n        LocalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/LocalSecondaryIndexDescriptionList'\n            - description: '\u003cp\u003eRepresents one or more local secondary indexes on the table. Each index is scoped to a given partition key value. Tables with one or more local secondary indexes are subject to an item collection size limit, where the amount of data within a given item collection cannot exceed 10 GB. Each element is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexName\u003c/code\u003e - The name of the local secondary index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeySchema\u003c/code\u003e - Specifies the complete index key schema. The attribute names in the key schema must be between 1 and 255 characters (inclusive). The key schema must begin with the same partition key as the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjection\u003c/code\u003e - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjectionType\u003c/code\u003e - One of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the index and primary keys are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINCLUDE\u003c/code\u003e - Only the specified table attributes are projected into the index. The list of projected attributes is in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e - All of the table attributes are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNonKeyAttributes\u003c/code\u003e - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e, summed across all of the secondary indexes, must not exceed 20. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexSizeBytes\u003c/code\u003e - Represents the total size of the index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItemCount\u003c/code\u003e - Represents the number of items in the index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the table is in the \u003ccode\u003eDELETING\u003c/code\u003e state, no information about indexes will be returned.\u003c/p\u003e'\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/GlobalSecondaryIndexDescriptionList'\n            - description: '\u003cp\u003eThe global secondary indexes, if any, on the table. Each index is scoped to a given partition key value. Each element is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBackfilling\u003c/code\u003e - If true, then the index is currently in the backfilling phase. Backfilling occurs only when a new global secondary index is added to the table. It is the process by which DynamoDB populates the new index with data from the table. (This attribute does not appear for indexes that were created during a \u003ccode\u003eCreateTable\u003c/code\u003e operation.) \u003c/p\u003e \u003cp\u003e You can delete an index that is being created during the \u003ccode\u003eBackfilling\u003c/code\u003e phase when \u003ccode\u003eIndexStatus\u003c/code\u003e is set to CREATING and \u003ccode\u003eBackfilling\u003c/code\u003e is true. You can''t delete the index that is being created when \u003ccode\u003eIndexStatus\u003c/code\u003e is set to CREATING and \u003ccode\u003eBackfilling\u003c/code\u003e is false. (This attribute does not appear for indexes that were created during a \u003ccode\u003eCreateTable\u003c/code\u003e operation.)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexName\u003c/code\u003e - The name of the global secondary index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexSizeBytes\u003c/code\u003e - The total size of the global secondary index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexStatus\u003c/code\u003e - The current status of the global secondary index:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The index is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The index is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The index is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The index is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eItemCount\u003c/code\u003e - The number of items in the global secondary index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeySchema\u003c/code\u003e - Specifies the complete index key schema. The attribute names in the key schema must be between 1 and 255 characters (inclusive). The key schema must begin with the same partition key as the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjection\u003c/code\u003e - Specifies attributes that are copied (projected) from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. Each attribute specification is composed of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjectionType\u003c/code\u003e - One of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKEYS_ONLY\u003c/code\u003e - Only the index and primary keys are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINCLUDE\u003c/code\u003e - In addition to the attributes described in \u003ccode\u003eKEYS_ONLY\u003c/code\u003e, the secondary index will include other non-key attributes that you specify.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eALL\u003c/code\u003e - All of the table attributes are projected into the index.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNonKeyAttributes\u003c/code\u003e - A list of one or more non-key attribute names that are projected into the secondary index. The total count of attributes provided in \u003ccode\u003eNonKeyAttributes\u003c/code\u003e, summed across all of the secondary indexes, must not exceed 20. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProvisionedThroughput\u003c/code\u003e - The provisioned throughput settings for the global secondary index, consisting of read and write capacity units, along with data about increases and decreases. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf the table is in the \u003ccode\u003eDELETING\u003c/code\u003e state, no information about indexes will be returned.\u003c/p\u003e'\n        StreamSpecification:\n          allOf:\n            - $ref: '#/components/schemas/StreamSpecification'\n            - description: The current DynamoDB Streams configuration for the table.\n        LatestStreamLabel:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: '\u003cp\u003eA timestamp, in ISO 8601 format, for this stream.\u003c/p\u003e \u003cp\u003eNote that \u003ccode\u003eLatestStreamLabel\u003c/code\u003e is not a unique identifier for the stream, because it is possible that a stream from another table might have the same timestamp. However, the combination of the following three elements is guaranteed to be unique:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eAWS customer ID\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eTable name\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eStreamLabel\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        LatestStreamArn:\n          allOf:\n            - $ref: '#/components/schemas/StreamArn'\n            - description: The Amazon Resource Name (ARN) that uniquely identifies the latest stream for this table.\n        GlobalTableVersion:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: 'Represents the version of \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html\"\u003eglobal tables\u003c/a\u003e in use, if the table is replicated across AWS Regions.'\n        Replicas:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaDescriptionList'\n            - description: Represents replicas of the table.\n        RestoreSummary:\n          allOf:\n            - $ref: '#/components/schemas/RestoreSummary'\n            - description: Contains details for the restore.\n        SSEDescription:\n          allOf:\n            - $ref: '#/components/schemas/SSEDescription'\n            - description: The description of the server-side encryption status on the specified table.\n        ArchivalSummary:\n          allOf:\n            - $ref: '#/components/schemas/ArchivalSummary'\n            - description: Contains information about the table archive.\n      description: Represents the properties of a table.\n    Delete:\n      type: object\n      required:\n        - Key\n        - TableName\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The primary key of the item to be deleted. Each element consists of an attribute name and a value for that attribute.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table in which the item to be deleted resides.\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: A condition that must be satisfied in order for a conditional delete to succeed.\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: One or more substitution tokens for attribute names in an expression.\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: One or more values that can be substituted in an expression.\n        ReturnValuesOnConditionCheckFailure:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValuesOnConditionCheckFailure'\n            - description: 'Use \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e to get the item attributes if the \u003ccode\u003eDelete\u003c/code\u003e condition fails. For \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e, the valid values are: NONE and ALL_OLD.'\n      description: Represents a request to perform a \u003ccode\u003eDeleteItem\u003c/code\u003e operation.\n    DeleteGlobalSecondaryIndexAction:\n      type: object\n      required:\n        - IndexName\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index to be deleted.\n      description: Represents a global secondary index to be deleted from an existing table.\n    ExpectedAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/ExpectedAttributeValue'\n    ReturnValue:\n      type: string\n      enum:\n        - NONE\n        - ALL_OLD\n        - UPDATED_OLD\n        - ALL_NEW\n        - UPDATED_NEW\n    ItemCollectionMetrics:\n      type: object\n      properties:\n        ItemCollectionKey:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionKeyAttributeMap'\n            - description: The partition key value of the item collection. This value is the same as the partition key value of the item.\n        SizeEstimateRangeGB:\n          allOf:\n            - $ref: '#/components/schemas/ItemCollectionSizeEstimateRange'\n            - description: '\u003cp\u003eAn estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.\u003c/p\u003e \u003cp\u003eThe estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.\u003c/p\u003e'\n      description: 'Information about item collections, if any, that were affected by the operation. \u003ccode\u003eItemCollectionMetrics\u003c/code\u003e is only returned if the request asked for it. If the table does not have any local secondary indexes, this information is not returned in the response.'\n    DeleteReplicaAction:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region of the replica to be removed.\n      description: Represents a replica to be removed.\n    DeleteReplicationGroupMemberAction:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the replica exists.\n      description: Represents a replica to be deleted.\n    DeleteRequest:\n      type: object\n      required:\n        - Key\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: 'A map of attribute name to attribute values, representing the primary key of the item to delete. All of the table''s primary key attributes must be specified, and their data types must match those of the table''s key schema.'\n      description: Represents a request to perform a \u003ccode\u003eDeleteItem\u003c/code\u003e operation on an item.\n    LastUpdateDateTime:\n      type: string\n      format: date-time\n    FailureException:\n      type: object\n      properties:\n        ExceptionName:\n          allOf:\n            - $ref: '#/components/schemas/ExceptionName'\n            - description: Exception name.\n        ExceptionDescription:\n          allOf:\n            - $ref: '#/components/schemas/ExceptionDescription'\n            - description: Description of the failure.\n      description: Represents a failure a contributor insights operation.\n    Endpoints:\n      type: array\n      items:\n        $ref: '#/components/schemas/Endpoint'\n    ExportArn:\n      type: string\n      minLength: 37\n      maxLength: 1024\n    ExportDescription:\n      type: object\n      properties:\n        ExportArn:\n          allOf:\n            - $ref: '#/components/schemas/ExportArn'\n            - description: The Amazon Resource Name (ARN) of the table export.\n        ExportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: 'Export can be in one of the following states: IN_PROGRESS, COMPLETED, or FAILED.'\n        StartTime:\n          allOf:\n            - $ref: '#/components/schemas/ExportStartTime'\n            - description: The time at which the export task began.\n        EndTime:\n          allOf:\n            - $ref: '#/components/schemas/ExportEndTime'\n            - description: The time at which the export task completed.\n        ExportManifest:\n          allOf:\n            - $ref: '#/components/schemas/ExportManifest'\n            - description: The name of the manifest file for the export task.\n        TableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: The Amazon Resource Name (ARN) of the table that was exported.\n        TableId:\n          allOf:\n            - $ref: '#/components/schemas/TableId'\n            - description: Unique ID of the table that was exported.\n        ExportTime:\n          allOf:\n            - $ref: '#/components/schemas/ExportTime'\n            - description: Point in time from which table data was exported.\n        ClientToken:\n          allOf:\n            - $ref: '#/components/schemas/ClientToken'\n            - description: 'The client token that was provided for the export task. A client token makes calls to \u003ccode\u003eExportTableToPointInTimeInput\u003c/code\u003e idempotent, meaning that multiple identical calls have the same effect as one single call.'\n        S3Bucket:\n          allOf:\n            - $ref: '#/components/schemas/S3Bucket'\n            - description: The name of the Amazon S3 bucket containing the export.\n        S3BucketOwner:\n          allOf:\n            - $ref: '#/components/schemas/S3BucketOwner'\n            - description: The ID of the AWS account that owns the bucket containing the export.\n        S3Prefix:\n          allOf:\n            - $ref: '#/components/schemas/S3Prefix'\n            - description: The Amazon S3 bucket prefix used as the file name and path of the exported snapshot.\n        S3SseAlgorithm:\n          allOf:\n            - $ref: '#/components/schemas/S3SseAlgorithm'\n            - description: '\u003cp\u003eType of encryption used on the bucket where export data is stored. Valid values for \u003ccode\u003eS3SseAlgorithm\u003c/code\u003e are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAES256\u003c/code\u003e - server-side encryption with Amazon S3 managed keys\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e - server-side encryption with AWS KMS managed keys\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        S3SseKmsKeyId:\n          allOf:\n            - $ref: '#/components/schemas/S3SseKmsKeyId'\n            - description: The ID of the AWS KMS managed key used to encrypt the S3 bucket where export data is stored (if applicable).\n        FailureCode:\n          allOf:\n            - $ref: '#/components/schemas/FailureCode'\n            - description: Status code for the result of the failed export.\n        FailureMessage:\n          allOf:\n            - $ref: '#/components/schemas/FailureMessage'\n            - description: Export failure reason description.\n        ExportFormat:\n          allOf:\n            - $ref: '#/components/schemas/ExportFormat'\n            - description: The format of the exported data. Valid values for \u003ccode\u003eExportFormat\u003c/code\u003e are \u003ccode\u003eDYNAMODB_JSON\u003c/code\u003e or \u003ccode\u003eION\u003c/code\u003e.\n        BilledSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/BilledSizeBytes'\n            - description: The billable size of the table export.\n        ItemCount:\n          allOf:\n            - $ref: '#/components/schemas/ItemCount'\n            - description: The number of items exported.\n      description: Represents the properties of the exported table.\n    ReplicaSettingsDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaSettingsDescription'\n    KinesisDataStreamDestinations:\n      type: array\n      items:\n        $ref: '#/components/schemas/KinesisDataStreamDestination'\n    TableAutoScalingDescription:\n      type: object\n      properties:\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table.\n        TableStatus:\n          allOf:\n            - $ref: '#/components/schemas/TableStatus'\n            - description: '\u003cp\u003eThe current state of the table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The table is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The table is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The table is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The table is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Replicas:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaAutoScalingDescriptionList'\n            - description: Represents replicas of the global table.\n      description: Represents the auto scaling configuration for a global table.\n    TimeToLiveDescription:\n      type: object\n      properties:\n        TimeToLiveStatus:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveStatus'\n            - description: ' The TTL status for the table.'\n        AttributeName:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveAttributeName'\n            - description: ' The name of the TTL attribute for items in the table.'\n      description: 'The description of the Time to Live (TTL) status on the specified table. '\n    DestinationStatus:\n      type: string\n      enum:\n        - ENABLING\n        - ACTIVE\n        - DISABLING\n        - DISABLED\n        - ENABLE_FAILED\n    Long:\n      type: integer\n    Endpoint:\n      type: object\n      required:\n        - Address\n        - CachePeriodInMinutes\n      properties:\n        Address:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: IP address of the endpoint.\n        CachePeriodInMinutes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: Endpoint cache time to live (TTL) value.\n      description: An endpoint information details.\n    ExceptionDescription:\n      type: string\n    ExceptionName:\n      type: string\n    PartiQLNextToken:\n      type: string\n      minLength: 1\n      maxLength: 32768\n    ParameterizedStatements:\n      type: array\n      items:\n        $ref: '#/components/schemas/ParameterizedStatement'\n      minItems: 1\n      maxItems: 25\n    ItemResponseList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ItemResponse'\n      minItems: 1\n      maxItems: 25\n    ExpectedAttributeValue:\n      type: object\n      properties:\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/AttributeValue'\n            - description: '\u003cp\u003eRepresents the data for the expected attribute.\u003c/p\u003e \u003cp\u003eEach attribute value is described as a name-value pair. The name is the data type, and the value is the data itself.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes\"\u003eData Types\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        Exists:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: '\u003cp\u003eCauses DynamoDB to evaluate the value before attempting a conditional operation:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eExists\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, DynamoDB will check to see if that attribute value already exists in the table. If it is found, then the operation succeeds. If it is not found, the operation fails with a \u003ccode\u003eConditionCheckFailedException\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf \u003ccode\u003eExists\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e, DynamoDB assumes that the attribute value does not exist in the table. If in fact the value does not exist, then the assumption is valid and the operation succeeds. If the value is found, despite the assumption that it does not exist, the operation fails with a \u003ccode\u003eConditionCheckFailedException\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe default setting for \u003ccode\u003eExists\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e. If you supply a \u003ccode\u003eValue\u003c/code\u003e all by itself, DynamoDB assumes the attribute exists: You don''t have to set \u003ccode\u003eExists\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e, because it is implied.\u003c/p\u003e \u003cp\u003eDynamoDB returns a \u003ccode\u003eValidationException\u003c/code\u003e if:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eExists\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e but there is no \u003ccode\u003eValue\u003c/code\u003e to check. (You expect a value to exist, but don''t specify what that value is.)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eExists\u003c/code\u003e is \u003ccode\u003efalse\u003c/code\u003e but you also provide a \u003ccode\u003eValue\u003c/code\u003e. (You cannot expect an attribute to have a value, while also expecting it not to exist.)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ComparisonOperator:\n          allOf:\n            - $ref: '#/components/schemas/ComparisonOperator'\n            - description: '\u003cp\u003eA comparator for evaluating attributes in the \u003ccode\u003eAttributeValueList\u003c/code\u003e. For example, equals, greater than, less than, etc.\u003c/p\u003e \u003cp\u003eThe following comparison operators are available:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eEQ | NE | LE | LT | GE | GT | NOT_NULL | NULL | CONTAINS | NOT_CONTAINS | BEGINS_WITH | IN | BETWEEN\u003c/code\u003e \u003c/p\u003e \u003cp\u003eThe following are descriptions of each comparison operator.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eEQ\u003c/code\u003e : Equal. \u003ccode\u003eEQ\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, Binary, String Set, Number Set, or Binary Set. If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNE\u003c/code\u003e : Not equal. \u003ccode\u003eNE\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e of type String, Number, Binary, String Set, Number Set, or Binary Set. If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLE\u003c/code\u003e : Less than or equal. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eLT\u003c/code\u003e : Less than. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGE\u003c/code\u003e : Greater than or equal. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eGT\u003c/code\u003e : Greater than. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not equal \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e.\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNOT_NULL\u003c/code\u003e : The attribute exists. \u003ccode\u003eNOT_NULL\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operator tests for the existence of an attribute, not its data type. If the data type of attribute \"\u003ccode\u003ea\u003c/code\u003e\" is null, and you evaluate it using \u003ccode\u003eNOT_NULL\u003c/code\u003e, the result is a Boolean \u003ccode\u003etrue\u003c/code\u003e. This result is because the attribute \"\u003ccode\u003ea\u003c/code\u003e\" exists; its data type is not relevant to the \u003ccode\u003eNOT_NULL\u003c/code\u003e comparison operator.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNULL\u003c/code\u003e : The attribute does not exist. \u003ccode\u003eNULL\u003c/code\u003e is supported for all data types, including lists and maps.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eThis operator tests for the nonexistence of an attribute, not its data type. If the data type of attribute \"\u003ccode\u003ea\u003c/code\u003e\" is null, and you evaluate it using \u003ccode\u003eNULL\u003c/code\u003e, the result is a Boolean \u003ccode\u003efalse\u003c/code\u003e. This is because the attribute \"\u003ccode\u003ea\u003c/code\u003e\" exists; its data type is not relevant to the \u003ccode\u003eNULL\u003c/code\u003e comparison operator.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCONTAINS\u003c/code\u003e : Checks for a subsequence, or value in a set.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If the target attribute of the comparison is of type String, then the operator checks for a substring match. If the target attribute of the comparison is of type Binary, then the operator looks for a subsequence of the target that matches the input. If the target attribute of the comparison is a set (\"\u003ccode\u003eSS\u003c/code\u003e\", \"\u003ccode\u003eNS\u003c/code\u003e\", or \"\u003ccode\u003eBS\u003c/code\u003e\"), then the operator evaluates to true if it finds an exact match with any member of the set.\u003c/p\u003e \u003cp\u003eCONTAINS is supported for lists: When evaluating \"\u003ccode\u003ea CONTAINS b\u003c/code\u003e\", \"\u003ccode\u003ea\u003c/code\u003e\" can be a list; however, \"\u003ccode\u003eb\u003c/code\u003e\" cannot be a set, a map, or a list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eNOT_CONTAINS\u003c/code\u003e : Checks for absence of a subsequence, or absence of a value in a set.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e element of type String, Number, or Binary (not a set type). If the target attribute of the comparison is a String, then the operator checks for the absence of a substring match. If the target attribute of the comparison is Binary, then the operator checks for the absence of a subsequence of the target that matches the input. If the target attribute of the comparison is a set (\"\u003ccode\u003eSS\u003c/code\u003e\", \"\u003ccode\u003eNS\u003c/code\u003e\", or \"\u003ccode\u003eBS\u003c/code\u003e\"), then the operator evaluates to true if it \u003ci\u003edoes not\u003c/i\u003e find an exact match with any member of the set.\u003c/p\u003e \u003cp\u003eNOT_CONTAINS is supported for lists: When evaluating \"\u003ccode\u003ea NOT CONTAINS b\u003c/code\u003e\", \"\u003ccode\u003ea\u003c/code\u003e\" can be a list; however, \"\u003ccode\u003eb\u003c/code\u003e\" cannot be a set, a map, or a list.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBEGINS_WITH\u003c/code\u003e : Checks for a prefix. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain only one \u003ccode\u003eAttributeValue\u003c/code\u003e of type String or Binary (not a Number or a set type). The target attribute of the comparison must be of type String or Binary (not a Number or a set type).\u003c/p\u003e \u003cp/\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIN\u003c/code\u003e : Checks for matching elements in a list.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e can contain one or more \u003ccode\u003eAttributeValue\u003c/code\u003e elements of type String, Number, or Binary. These attributes are compared against an existing attribute of an item. If any elements of the input are equal to the item attribute, the expression evaluates to true.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eBETWEEN\u003c/code\u003e : Greater than or equal to the first value, and less than or equal to the second value. \u003c/p\u003e \u003cp\u003e \u003ccode\u003eAttributeValueList\u003c/code\u003e must contain two \u003ccode\u003eAttributeValue\u003c/code\u003e elements of the same type, either String, Number, or Binary (not a set type). A target attribute matches if the target value is greater than, or equal to, the first element and less than, or equal to, the second element. If an item contains an \u003ccode\u003eAttributeValue\u003c/code\u003e element of a different type than the one provided in the request, the value does not match. For example, \u003ccode\u003e{\"S\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e. Also, \u003ccode\u003e{\"N\":\"6\"}\u003c/code\u003e does not compare to \u003ccode\u003e{\"NS\":[\"6\", \"2\", \"1\"]}\u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        AttributeValueList:\n          allOf:\n            - $ref: '#/components/schemas/AttributeValueList'\n            - description: '\u003cp\u003eOne or more values to evaluate against the supplied attribute. The number of values in the list depends on the \u003ccode\u003eComparisonOperator\u003c/code\u003e being used.\u003c/p\u003e \u003cp\u003eFor type Number, value comparisons are numeric.\u003c/p\u003e \u003cp\u003eString value comparisons for greater than, equals, or less than are based on ASCII character code values. For example, \u003ccode\u003ea\u003c/code\u003e is greater than \u003ccode\u003eA\u003c/code\u003e, and \u003ccode\u003ea\u003c/code\u003e is greater than \u003ccode\u003eB\u003c/code\u003e. For a list of code values, see \u003ca href=\"http://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\"\u003ehttp://en.wikipedia.org/wiki/ASCII#ASCII_printable_characters\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor Binary, DynamoDB treats each byte of the binary data as unsigned when it compares binary values.\u003c/p\u003e \u003cp\u003eFor information on specifying data types in JSON, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DataFormat.html\"\u003eJSON Data Format\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: '\u003cp\u003eRepresents a condition to be compared with an attribute value. This condition can be used with \u003ccode\u003eDeleteItem\u003c/code\u003e, \u003ccode\u003ePutItem\u003c/code\u003e, or \u003ccode\u003eUpdateItem\u003c/code\u003e operations; if the comparison evaluates to true, the operation succeeds; if not, the operation fails. You can use \u003ccode\u003eExpectedAttributeValue\u003c/code\u003e in one of two different ways:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eUse \u003ccode\u003eAttributeValueList\u003c/code\u003e to specify one or more values to compare against an attribute. Use \u003ccode\u003eComparisonOperator\u003c/code\u003e to specify how you want to perform the comparison. If the comparison evaluates to true, then the conditional operation succeeds.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eUse \u003ccode\u003eValue\u003c/code\u003e to specify a value that DynamoDB will compare against an attribute. If the values match, then \u003ccode\u003eExpectedAttributeValue\u003c/code\u003e evaluates to true and the conditional operation succeeds. Optionally, you can also set \u003ccode\u003eExists\u003c/code\u003e to false, indicating that you \u003ci\u003edo not\u003c/i\u003e expect to find the attribute value in the table. In this case, the conditional operation succeeds only if the comparison evaluates to false.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003ccode\u003eValue\u003c/code\u003e and \u003ccode\u003eExists\u003c/code\u003e are incompatible with \u003ccode\u003eAttributeValueList\u003c/code\u003e and \u003ccode\u003eComparisonOperator\u003c/code\u003e. Note that if you use both sets of parameters at once, DynamoDB will return a \u003ccode\u003eValidationException\u003c/code\u003e exception.\u003c/p\u003e'\n    ExportStatus:\n      type: string\n      enum:\n        - IN_PROGRESS\n        - COMPLETED\n        - FAILED\n    ExportStartTime:\n      type: string\n      format: date-time\n    ExportEndTime:\n      type: string\n      format: date-time\n    ExportManifest:\n      type: string\n    ExportTime:\n      type: string\n      format: date-time\n    S3Bucket:\n      type: string\n    S3BucketOwner:\n      type: string\n    S3Prefix:\n      type: string\n    S3SseAlgorithm:\n      type: string\n      enum:\n        - AES256\n        - KMS\n    S3SseKmsKeyId:\n      type: string\n      minLength: 1\n      maxLength: 2048\n    FailureCode:\n      type: string\n    FailureMessage:\n      type: string\n    ExportFormat:\n      type: string\n      enum:\n        - DYNAMODB_JSON\n        - ION\n    ItemCount:\n      type: integer\n      minimum: 0\n    ExportNextToken:\n      type: string\n    ExportSummary:\n      type: object\n      properties:\n        ExportArn:\n          allOf:\n            - $ref: '#/components/schemas/ExportArn'\n            - description: The Amazon Resource Name (ARN) of the export.\n        ExportStatus:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n            - description: 'Export can be in one of the following states: IN_PROGRESS, COMPLETED, or FAILED.'\n      description: Summary information about an export task.\n    ExportSummaries:\n      type: array\n      items:\n        $ref: '#/components/schemas/ExportSummary'\n    ExpressionAttributeNameVariable:\n      type: string\n    ExpressionAttributeValueVariable:\n      type: string\n    FilterConditionMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Condition'\n    ProjectionExpression:\n      type: string\n    Get:\n      type: object\n      required:\n        - Key\n        - TableName\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: A map of attribute names to \u003ccode\u003eAttributeValue\u003c/code\u003e objects that specifies the primary key of the item to retrieve.\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The name of the table from which to retrieve the specified item.\n        ProjectionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ProjectionExpression'\n            - description: 'A string that identifies one or more attributes of the specified item to retrieve from the table. The attributes in the expression must be separated by commas. If no attribute names are specified, then all attributes of the specified item are returned. If any of the requested attributes are not found, they do not appear in the result.'\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: One or more substitution tokens for attribute names in the ProjectionExpression parameter.\n      description: Specifies an item and related attribute values to retrieve in a \u003ccode\u003eTransactGetItem\u003c/code\u003e object.\n    GlobalSecondaryIndex:\n      type: object\n      required:\n        - IndexName\n        - KeySchema\n        - Projection\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index. The name must be unique among all other indexes on this table.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. '\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: '\u003cp\u003eRepresents the provisioned throughput settings for the specified global secondary index.\u003c/p\u003e \u003cp\u003eFor current minimum and maximum provisioned throughput values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the properties of a global secondary index.\n    GlobalSecondaryIndexAutoScalingUpdate:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        ProvisionedWriteCapacityAutoScalingUpdate:\n          $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n      description: Represents the auto scaling settings of a global secondary index for a global table that will be modified.\n    GlobalSecondaryIndexAutoScalingUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalSecondaryIndexAutoScalingUpdate'\n      minItems: 1\n    IndexStatus:\n      type: string\n      enum:\n        - CREATING\n        - UPDATING\n        - DELETING\n        - ACTIVE\n    ProvisionedThroughputDescription:\n      type: object\n      properties:\n        LastIncreaseDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time of the last provisioned throughput increase for this table.\n        LastDecreaseDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The date and time of the last provisioned throughput decrease for this table.\n        NumberOfDecreasesToday:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'The number of provisioned throughput decreases for this table during this UTC calendar day. For current maximums on provisioned throughput decreases, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/NonNegativeLongObject'\n            - description: 'The maximum number of strongly consistent reads consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e. Eventually consistent reads require less effort than strongly consistent reads, so a setting of 50 \u003ccode\u003eReadCapacityUnits\u003c/code\u003e per second provides 100 eventually consistent \u003ccode\u003eReadCapacityUnits\u003c/code\u003e per second.'\n        WriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/NonNegativeLongObject'\n            - description: The maximum number of writes consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e.\n      description: 'Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.'\n    GlobalSecondaryIndexDescription:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. '\n        IndexStatus:\n          allOf:\n            - $ref: '#/components/schemas/IndexStatus'\n            - description: '\u003cp\u003eThe current state of the global secondary index:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The index is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The index is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The index is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The index is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Backfilling:\n          allOf:\n            - $ref: '#/components/schemas/Backfilling'\n            - description: '\u003cp\u003eIndicates whether the index is currently backfilling. \u003ci\u003eBackfilling\u003c/i\u003e is the process of reading items from the table and determining whether they can be added to the index. (Not all items will qualify: For example, a partition key cannot have any duplicate values.) If an item can be added to the index, DynamoDB will do so. After all items have been processed, the backfilling operation is complete and \u003ccode\u003eBackfilling\u003c/code\u003e is false.\u003c/p\u003e \u003cp\u003eYou can delete an index that is being created during the \u003ccode\u003eBackfilling\u003c/code\u003e phase when \u003ccode\u003eIndexStatus\u003c/code\u003e is set to CREATING and \u003ccode\u003eBackfilling\u003c/code\u003e is true. You can''t delete the index that is being created when \u003ccode\u003eIndexStatus\u003c/code\u003e is set to CREATING and \u003ccode\u003eBackfilling\u003c/code\u003e is false. \u003c/p\u003e \u003cnote\u003e \u003cp\u003eFor indexes that were created during a \u003ccode\u003eCreateTable\u003c/code\u003e operation, the \u003ccode\u003eBackfilling\u003c/code\u003e attribute does not appear in the \u003ccode\u003eDescribeTable\u003c/code\u003e output.\u003c/p\u003e \u003c/note\u003e'\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputDescription'\n            - description: '\u003cp\u003eRepresents the provisioned throughput settings for the specified global secondary index.\u003c/p\u003e \u003cp\u003eFor current minimum and maximum provisioned throughput values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n        IndexSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.'\n        ItemCount:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.\n        IndexArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) that uniquely identifies the index.\n      description: Represents the properties of a global secondary index.\n    GlobalSecondaryIndexDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalSecondaryIndexDescription'\n    GlobalSecondaryIndexInfo:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. '\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: 'Represents the provisioned throughput settings for the specified global secondary index. '\n      description: Represents the properties of a global secondary index for the table when the backup was created.\n    UpdateGlobalSecondaryIndexAction:\n      type: object\n      required:\n        - IndexName\n        - ProvisionedThroughput\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index to be updated.\n        ProvisionedThroughput:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughput'\n            - description: '\u003cp\u003eRepresents the provisioned throughput settings for the specified global secondary index.\u003c/p\u003e \u003cp\u003eFor current minimum and maximum provisioned throughput values, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html\"\u003eService, Account, and Table Quotas\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n      description: Represents the new provisioned throughput settings to be applied to a global secondary index.\n    GlobalSecondaryIndexUpdate:\n      type: object\n      properties:\n        Update:\n          allOf:\n            - $ref: '#/components/schemas/UpdateGlobalSecondaryIndexAction'\n            - description: 'The name of an existing global secondary index, along with new provisioned throughput settings to be applied to that index.'\n        Create:\n          allOf:\n            - $ref: '#/components/schemas/CreateGlobalSecondaryIndexAction'\n            - description: '\u003cp\u003eThe parameters required for creating a global secondary index on an existing table:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eIndexName \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKeySchema \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eAttributeDefinitions \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProjection \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eProvisionedThroughput \u003c/code\u003e \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        Delete:\n          allOf:\n            - $ref: '#/components/schemas/DeleteGlobalSecondaryIndexAction'\n            - description: The name of an existing global secondary index to be removed.\n      description: '\u003cp\u003eRepresents one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA new global secondary index to be added to an existing table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNew provisioned throughput parameters for an existing global secondary index.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn existing global secondary index to be removed from an existing table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    GlobalSecondaryIndexUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalSecondaryIndexUpdate'\n    GlobalSecondaryIndexes:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalSecondaryIndexInfo'\n    GlobalTable:\n      type: object\n      properties:\n        GlobalTableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: The global table name.\n        ReplicationGroup:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaList'\n            - description: The Regions where the global table has replicas.\n      description: Represents the properties of a global table.\n    GlobalTableArnString:\n      type: string\n    ReplicaDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaDescription'\n    GlobalTableStatus:\n      type: string\n      enum:\n        - CREATING\n        - ACTIVE\n        - DELETING\n        - UPDATING\n    GlobalTableGlobalSecondaryIndexSettingsUpdate:\n      type: object\n      required:\n        - IndexName\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index. The name must be unique among all other indexes on this table.\n        ProvisionedWriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'The maximum number of writes consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException.\u003c/code\u003e '\n        ProvisionedWriteCapacityAutoScalingSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n            - description: Auto scaling settings for managing a global secondary index's write capacity units.\n      description: Represents the settings of a global secondary index for a global table that will be modified.\n    GlobalTableGlobalSecondaryIndexSettingsUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalTableGlobalSecondaryIndexSettingsUpdate'\n      minItems: 1\n      maxItems: 20\n    GlobalTableList:\n      type: array\n      items:\n        $ref: '#/components/schemas/GlobalTable'\n    Integer:\n      type: integer\n    ItemCollectionKeyAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    ItemCollectionSizeEstimateRange:\n      type: array\n      items:\n        $ref: '#/components/schemas/ItemCollectionSizeEstimateBound'\n    ItemCollectionMetricsMultiple:\n      type: array\n      items:\n        $ref: '#/components/schemas/ItemCollectionMetrics'\n    ItemCollectionSizeEstimateBound:\n      type: number\n      format: double\n    ItemResponse:\n      type: object\n      properties:\n        Item:\n          allOf:\n            - $ref: '#/components/schemas/AttributeMap'\n            - description: Map of attribute data consisting of the data type and attribute value.\n      description: Details for the requested item.\n    KMSMasterKeyArn:\n      type: string\n    KeyConditions:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/Condition'\n    KeyExpression:\n      type: string\n    KeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/Key'\n      minItems: 1\n      maxItems: 100\n    KeySchemaElement:\n      type: object\n      required:\n        - AttributeName\n        - KeyType\n      properties:\n        AttributeName:\n          allOf:\n            - $ref: '#/components/schemas/KeySchemaAttributeName'\n            - description: The name of a key attribute.\n        KeyType:\n          allOf:\n            - $ref: '#/components/schemas/KeyType'\n            - description: '\u003cp\u003eThe role that this key attribute will assume:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n      description: '\u003cp\u003eRepresents \u003ci\u003ea single element\u003c/i\u003e of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index.\u003c/p\u003e \u003cp\u003eA \u003ccode\u003eKeySchemaElement\u003c/code\u003e represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one \u003ccode\u003eKeySchemaElement\u003c/code\u003e (for the partition key). A composite primary key would require one \u003ccode\u003eKeySchemaElement\u003c/code\u003e for the partition key, and another \u003ccode\u003eKeySchemaElement\u003c/code\u003e for the sort key.\u003c/p\u003e \u003cp\u003eA \u003ccode\u003eKeySchemaElement\u003c/code\u003e must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.\u003c/p\u003e'\n    KeyType:\n      type: string\n      enum:\n        - HASH\n        - RANGE\n    StreamArn:\n      type: string\n      minLength: 37\n      maxLength: 1024\n    KinesisDataStreamDestination:\n      type: object\n      properties:\n        StreamArn:\n          allOf:\n            - $ref: '#/components/schemas/StreamArn'\n            - description: The ARN for a specific Kinesis data stream.\n        DestinationStatus:\n          allOf:\n            - $ref: '#/components/schemas/DestinationStatus'\n            - description: The current status of replication.\n        DestinationStatusDescription:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The human-readable string that corresponds to the replica status.\n      description: Describes a Kinesis data stream destination.\n    TimeRangeLowerBound:\n      type: string\n      format: date-time\n    TimeRangeUpperBound:\n      type: string\n      format: date-time\n    NextTokenString:\n      type: string\n    ListContributorInsightsLimit:\n      type: integer\n      maximum: 100\n    ListExportsMaxLimit:\n      type: integer\n      minimum: 1\n      maximum: 25\n    PositiveIntegerObject:\n      type: integer\n      minimum: 1\n    ListTablesInputLimit:\n      type: integer\n      minimum: 1\n      maximum: 100\n    TableNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TableName'\n    ResourceArnString:\n      type: string\n      minLength: 1\n      maxLength: 1283\n    LocalSecondaryIndex:\n      type: object\n      required:\n        - IndexName\n        - KeySchema\n        - Projection\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the local secondary index. The name must be unique among all other indexes on this table.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into the local secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. '\n      description: Represents the properties of a local secondary index.\n    LocalSecondaryIndexDescription:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: Represents the name of the local secondary index.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. '\n        IndexSizeBytes:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: 'The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.'\n        ItemCount:\n          allOf:\n            - $ref: '#/components/schemas/Long'\n            - description: The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.\n        IndexArn:\n          allOf:\n            - $ref: '#/components/schemas/String'\n            - description: The Amazon Resource Name (ARN) that uniquely identifies the index.\n      description: Represents the properties of a local secondary index.\n    LocalSecondaryIndexDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/LocalSecondaryIndexDescription'\n    LocalSecondaryIndexInfo:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: Represents the name of the local secondary index.\n        KeySchema:\n          allOf:\n            - $ref: '#/components/schemas/KeySchema'\n            - description: '\u003cp\u003eThe complete key schema for a local secondary index, which consists of one or more pairs of attribute names and key types:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eHASH\u003c/code\u003e - partition key\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eRANGE\u003c/code\u003e - sort key\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cnote\u003e \u003cp\u003eThe partition key of an item is also known as its \u003ci\u003ehash attribute\u003c/i\u003e. The term \"hash attribute\" derives from DynamoDB''s usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.\u003c/p\u003e \u003cp\u003eThe sort key of an item is also known as its \u003ci\u003erange attribute\u003c/i\u003e. The term \"range attribute\" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.\u003c/p\u003e \u003c/note\u003e'\n        Projection:\n          allOf:\n            - $ref: '#/components/schemas/Projection'\n            - description: 'Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected. '\n      description: Represents the properties of a local secondary index for the table when the backup was created.\n    LocalSecondaryIndexes:\n      type: array\n      items:\n        $ref: '#/components/schemas/LocalSecondaryIndexInfo'\n    NonKeyAttributeName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    NonKeyAttributeNameList:\n      type: array\n      items:\n        $ref: '#/components/schemas/NonKeyAttributeName'\n      minItems: 1\n      maxItems: 20\n    NonNegativeLongObject:\n      type: integer\n      minimum: 0\n    ParameterizedStatement:\n      type: object\n      required:\n        - Statement\n      properties:\n        Statement:\n          allOf:\n            - $ref: '#/components/schemas/PartiQLStatement'\n            - description: ' A PartiQL statment that uses parameters. '\n        Parameters:\n          allOf:\n            - $ref: '#/components/schemas/PreparedStatementParameters'\n            - description: ' The parameter values. '\n      description: ' Represents a PartiQL statment that uses parameters. '\n    PointInTimeRecoveryStatus:\n      type: string\n      enum:\n        - ENABLED\n        - DISABLED\n    PointInTimeRecoverySpecification:\n      type: object\n      required:\n        - PointInTimeRecoveryEnabled\n      properties:\n        PointInTimeRecoveryEnabled:\n          allOf:\n            - $ref: '#/components/schemas/BooleanObject'\n            - description: Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.\n      description: Represents the settings used to enable point in time recovery.\n    ProjectionType:\n      type: string\n      enum:\n        - ALL\n        - KEYS_ONLY\n        - INCLUDE\n    PutItemInputAttributeMap:\n      type: object\n      additionalProperties:\n        $ref: '#/components/schemas/AttributeValue'\n    Put:\n      type: object\n      required:\n        - Item\n        - TableName\n      properties:\n        Item:\n          allOf:\n            - $ref: '#/components/schemas/PutItemInputAttributeMap'\n            - description: 'A map of attribute name to attribute values, representing the primary key of the item to be written by \u003ccode\u003ePutItem\u003c/code\u003e. All of the table''s primary key attributes must be specified, and their data types must match those of the table''s key schema. If any attributes are present in the item that are part of an index key schema for the table, their types must match the index key schema. '\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table in which to write the item.\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: A condition that must be satisfied in order for a conditional update to succeed.\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: One or more substitution tokens for attribute names in an expression.\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: One or more values that can be substituted in an expression.\n        ReturnValuesOnConditionCheckFailure:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValuesOnConditionCheckFailure'\n            - description: 'Use \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e to get the item attributes if the \u003ccode\u003ePut\u003c/code\u003e condition fails. For \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e, the valid values are: NONE and ALL_OLD.'\n      description: Represents a request to perform a \u003ccode\u003ePutItem\u003c/code\u003e operation.\n    PutRequest:\n      type: object\n      required:\n        - Item\n      properties:\n        Item:\n          allOf:\n            - $ref: '#/components/schemas/PutItemInputAttributeMap'\n            - description: 'A map of attribute name to attribute values, representing the primary key of an item to be processed by \u003ccode\u003ePutItem\u003c/code\u003e. All of the table''s primary key attributes must be specified, and their data types must match those of the table''s key schema. If any attributes are present in the item that are part of an index key schema for the table, their types must match the index key schema.'\n      description: Represents a request to perform a \u003ccode\u003ePutItem\u003c/code\u003e operation on an item.\n    Select:\n      type: string\n      enum:\n        - ALL_ATTRIBUTES\n        - ALL_PROJECTED_ATTRIBUTES\n        - SPECIFIC_ATTRIBUTES\n        - COUNT\n    Replica:\n      type: object\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the replica needs to be created.\n      description: Represents the properties of a replica.\n    ReplicaGlobalSecondaryIndexAutoScalingDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexAutoScalingDescription'\n    ReplicaStatus:\n      type: string\n      enum:\n        - CREATING\n        - CREATION_FAILED\n        - UPDATING\n        - DELETING\n        - ACTIVE\n        - REGION_DISABLED\n        - INACCESSIBLE_ENCRYPTION_CREDENTIALS\n    ReplicaAutoScalingDescription:\n      type: object\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the replica exists.\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexAutoScalingDescriptionList'\n            - description: Replica-specific global secondary index auto scaling settings.\n        ReplicaProvisionedReadCapacityAutoScalingSettings:\n          $ref: '#/components/schemas/AutoScalingSettingsDescription'\n        ReplicaProvisionedWriteCapacityAutoScalingSettings:\n          $ref: '#/components/schemas/AutoScalingSettingsDescription'\n        ReplicaStatus:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaStatus'\n            - description: '\u003cp\u003eThe current state of the replica:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The replica is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The replica is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The replica is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The replica is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n      description: Represents the auto scaling settings of the replica.\n    ReplicaAutoScalingDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaAutoScalingDescription'\n    ReplicaGlobalSecondaryIndexAutoScalingUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexAutoScalingUpdate'\n    ReplicaAutoScalingUpdate:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the replica exists.\n        ReplicaGlobalSecondaryIndexUpdates:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexAutoScalingUpdateList'\n            - description: Represents the auto scaling settings of global secondary indexes that will be modified.\n        ReplicaProvisionedReadCapacityAutoScalingUpdate:\n          $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n      description: Represents the auto scaling settings of a replica that will be modified.\n    ReplicaAutoScalingUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaAutoScalingUpdate'\n      minItems: 1\n    ReplicaStatusDescription:\n      type: string\n    ReplicaStatusPercentProgress:\n      type: string\n    ReplicaGlobalSecondaryIndexDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexDescription'\n    ReplicaDescription:\n      type: object\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The name of the Region.\n        ReplicaStatus:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaStatus'\n            - description: '\u003cp\u003eThe current state of the replica:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The replica is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The replica is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The replica is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The replica is ready for use.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eREGION_DISABLED\u003c/code\u003e - The replica is inaccessible because the AWS Region has been disabled.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf the AWS Region remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eINACCESSIBLE_ENCRYPTION_CREDENTIALS \u003c/code\u003e - The AWS KMS key used to encrypt the table is inaccessible.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eIf the AWS KMS key remains inaccessible for more than 20 hours, DynamoDB will remove this replica from the replication group. The replica will not be deleted and replication will stop from and to this region.\u003c/p\u003e \u003c/note\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ReplicaStatusDescription:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaStatusDescription'\n            - description: Detailed information about the replica status.\n        ReplicaStatusPercentProgress:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaStatusPercentProgress'\n            - description: 'Specifies the progress of a Create, Update, or Delete action on the replica as a percentage.'\n        KMSMasterKeyId:\n          allOf:\n            - $ref: '#/components/schemas/KMSMasterKeyId'\n            - description: The AWS KMS customer master key (CMK) of the replica that will be used for AWS KMS encryption.\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputOverride'\n            - description: 'Replica-specific provisioned throughput. If not described, uses the source table''s provisioned throughput settings.'\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexDescriptionList'\n            - description: Replica-specific global secondary index settings.\n        ReplicaInaccessibleDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: The time at which the replica was first detected as inaccessible. To determine cause of inaccessibility check the \u003ccode\u003eReplicaStatus\u003c/code\u003e property.\n      description: Contains the details of the replica.\n    ReplicaGlobalSecondaryIndex:\n      type: object\n      required:\n        - IndexName\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputOverride'\n            - description: 'Replica table GSI-specific provisioned throughput. If not specified, uses the source table GSI''s read capacity settings.'\n      description: Represents the properties of a replica global secondary index.\n    ReplicaGlobalSecondaryIndexAutoScalingDescription:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        IndexStatus:\n          allOf:\n            - $ref: '#/components/schemas/IndexStatus'\n            - description: '\u003cp\u003eThe current state of the replica global secondary index:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The index is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The index is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The index is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The index is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ProvisionedReadCapacityAutoScalingSettings:\n          $ref: '#/components/schemas/AutoScalingSettingsDescription'\n        ProvisionedWriteCapacityAutoScalingSettings:\n          $ref: '#/components/schemas/AutoScalingSettingsDescription'\n      description: Represents the auto scaling configuration for a replica global secondary index.\n    ReplicaGlobalSecondaryIndexAutoScalingUpdate:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        ProvisionedReadCapacityAutoScalingUpdate:\n          $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n      description: Represents the auto scaling settings of a global secondary index for a replica that will be modified.\n    ReplicaGlobalSecondaryIndexDescription:\n      type: object\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index.\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputOverride'\n            - description: 'If not described, uses the source table GSI''s read capacity settings.'\n      description: Represents the properties of a replica global secondary index.\n    ReplicaGlobalSecondaryIndexSettingsDescription:\n      type: object\n      required:\n        - IndexName\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index. The name must be unique among all other indexes on this table.\n        IndexStatus:\n          allOf:\n            - $ref: '#/components/schemas/IndexStatus'\n            - description: '\u003cp\u003e The current status of the global secondary index:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The global secondary index is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The global secondary index is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The global secondary index is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The global secondary index is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ProvisionedReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum number of strongly consistent reads consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e.\n        ProvisionedReadCapacityAutoScalingSettings:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsDescription'\n            - description: Auto scaling settings for a global secondary index replica's read capacity units.\n        ProvisionedWriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum number of writes consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e.\n        ProvisionedWriteCapacityAutoScalingSettings:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsDescription'\n            - description: Auto scaling settings for a global secondary index replica's write capacity units.\n      description: Represents the properties of a global secondary index.\n    ReplicaGlobalSecondaryIndexSettingsDescriptionList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexSettingsDescription'\n    ReplicaGlobalSecondaryIndexSettingsUpdate:\n      type: object\n      required:\n        - IndexName\n      properties:\n        IndexName:\n          allOf:\n            - $ref: '#/components/schemas/IndexName'\n            - description: The name of the global secondary index. The name must be unique among all other indexes on this table.\n        ProvisionedReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: The maximum number of strongly consistent reads consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e.\n        ProvisionedReadCapacityAutoScalingSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n            - description: Auto scaling settings for managing a global secondary index replica's read capacity units.\n      description: Represents the settings of a global secondary index for a global table that will be modified.\n    ReplicaGlobalSecondaryIndexSettingsUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexSettingsUpdate'\n      minItems: 1\n      maxItems: 20\n    ReplicaSettingsDescription:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region name of the replica.\n        ReplicaStatus:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaStatus'\n            - description: '\u003cp\u003eThe current state of the Region:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCREATING\u003c/code\u003e - The Region is being created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - The Region is being updated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDELETING\u003c/code\u003e - The Region is being deleted.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eACTIVE\u003c/code\u003e - The Region is ready for use.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        ReplicaBillingModeSummary:\n          allOf:\n            - $ref: '#/components/schemas/BillingModeSummary'\n            - description: The read/write capacity mode of the replica.\n        ReplicaProvisionedReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/NonNegativeLongObject'\n            - description: 'The maximum number of strongly consistent reads consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\"\u003eSpecifying Read and Write Requirements\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. '\n        ReplicaProvisionedReadCapacityAutoScalingSettings:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsDescription'\n            - description: Auto scaling settings for a global table replica's read capacity units.\n        ReplicaProvisionedWriteCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/NonNegativeLongObject'\n            - description: 'The maximum number of writes consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\"\u003eSpecifying Read and Write Requirements\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.'\n        ReplicaProvisionedWriteCapacityAutoScalingSettings:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsDescription'\n            - description: Auto scaling settings for a global table replica's write capacity units.\n        ReplicaGlobalSecondaryIndexSettings:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexSettingsDescriptionList'\n            - description: Replica global secondary index settings for the global table.\n      description: Represents the properties of a replica.\n    ReplicaSettingsUpdate:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region of the replica to be added.\n        ReplicaProvisionedReadCapacityUnits:\n          allOf:\n            - $ref: '#/components/schemas/PositiveLongObject'\n            - description: 'The maximum number of strongly consistent reads consumed per second before DynamoDB returns a \u003ccode\u003eThrottlingException\u003c/code\u003e. For more information, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.html#ProvisionedThroughput\"\u003eSpecifying Read and Write Requirements\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e. '\n        ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/AutoScalingSettingsUpdate'\n            - description: Auto scaling settings for managing a global table replica's read capacity units.\n        ReplicaGlobalSecondaryIndexSettingsUpdate:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexSettingsUpdateList'\n            - description: Represents the settings of a global secondary index for a global table that will be modified.\n      description: Represents the settings for a global table in a Region that will be modified.\n    ReplicaSettingsUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaSettingsUpdate'\n      minItems: 1\n      maxItems: 50\n    ReplicaUpdate:\n      type: object\n      properties:\n        Create:\n          allOf:\n            - $ref: '#/components/schemas/CreateReplicaAction'\n            - description: The parameters required for creating a replica on an existing global table.\n        Delete:\n          allOf:\n            - $ref: '#/components/schemas/DeleteReplicaAction'\n            - description: The name of the existing replica to be removed.\n      description: '\u003cp\u003eRepresents one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA new replica to be added to an existing global table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNew parameters for an existing replica.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn existing replica to be removed from an existing global table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ReplicaUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicaUpdate'\n    UpdateReplicationGroupMemberAction:\n      type: object\n      required:\n        - RegionName\n      properties:\n        RegionName:\n          allOf:\n            - $ref: '#/components/schemas/RegionName'\n            - description: The Region where the replica exists.\n        KMSMasterKeyId:\n          allOf:\n            - $ref: '#/components/schemas/KMSMasterKeyId'\n            - description: 'The AWS KMS customer master key (CMK) of the replica that should be used for AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB KMS master key alias/aws/dynamodb.'\n        ProvisionedThroughputOverride:\n          allOf:\n            - $ref: '#/components/schemas/ProvisionedThroughputOverride'\n            - description: 'Replica-specific provisioned throughput. If not specified, uses the source table''s provisioned throughput settings.'\n        GlobalSecondaryIndexes:\n          allOf:\n            - $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexList'\n            - description: Replica-specific global secondary index settings.\n      description: Represents a replica to be modified.\n    ReplicationGroupUpdate:\n      type: object\n      properties:\n        Create:\n          allOf:\n            - $ref: '#/components/schemas/CreateReplicationGroupMemberAction'\n            - description: The parameters required for creating a replica for the table.\n        Update:\n          allOf:\n            - $ref: '#/components/schemas/UpdateReplicationGroupMemberAction'\n            - description: The parameters required for updating a replica for the table.\n        Delete:\n          allOf:\n            - $ref: '#/components/schemas/DeleteReplicationGroupMemberAction'\n            - description: The parameters required for deleting a replica for the table.\n      description: '\u003cp\u003eRepresents one of the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eA new replica to be added to an existing regional table or global table. This request invokes the \u003ccode\u003eCreateTableReplica\u003c/code\u003e action in the destination Region.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eNew parameters for an existing replica. This request invokes the \u003ccode\u003eUpdateTable\u003c/code\u003e action in the destination Region.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eAn existing replica to be deleted. The request invokes the \u003ccode\u003eDeleteTableReplica\u003c/code\u003e action in the destination Region, deleting the replica and all if its items in the destination Region.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n    ReplicationGroupUpdateList:\n      type: array\n      items:\n        $ref: '#/components/schemas/ReplicationGroupUpdate'\n      minItems: 1\n    RestoreInProgress:\n      type: boolean\n    RestoreSummary:\n      type: object\n      required:\n        - RestoreDateTime\n        - RestoreInProgress\n      properties:\n        SourceBackupArn:\n          allOf:\n            - $ref: '#/components/schemas/BackupArn'\n            - description: The Amazon Resource Name (ARN) of the backup from which the table was restored.\n        SourceTableArn:\n          allOf:\n            - $ref: '#/components/schemas/TableArn'\n            - description: The ARN of the source table of the backup that is being restored.\n        RestoreDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: Point in time or source backup time.\n        RestoreInProgress:\n          allOf:\n            - $ref: '#/components/schemas/RestoreInProgress'\n            - description: Indicates if a restore is in progress or not.\n      description: Contains details for the restore.\n    SSEStatus:\n      type: string\n      enum:\n        - ENABLING\n        - ENABLED\n        - DISABLING\n        - DISABLED\n        - UPDATING\n    SSEType:\n      type: string\n      enum:\n        - AES256\n        - KMS\n    SSEDescription:\n      type: object\n      properties:\n        Status:\n          allOf:\n            - $ref: '#/components/schemas/SSEStatus'\n            - description: '\u003cp\u003eRepresents the current state of server-side encryption. The only supported values are:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eENABLED\u003c/code\u003e - Server-side encryption is enabled.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUPDATING\u003c/code\u003e - Server-side encryption is being updated.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        SSEType:\n          allOf:\n            - $ref: '#/components/schemas/SSEType'\n            - description: '\u003cp\u003eServer-side encryption type. The only supported value is:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eKMS\u003c/code\u003e - Server-side encryption that uses AWS Key Management Service. The key is stored in your account and is managed by AWS KMS (AWS KMS charges apply).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e'\n        KMSMasterKeyArn:\n          allOf:\n            - $ref: '#/components/schemas/KMSMasterKeyArn'\n            - description: The AWS KMS customer master key (CMK) ARN used for the AWS KMS encryption.\n        InaccessibleEncryptionDateTime:\n          allOf:\n            - $ref: '#/components/schemas/Date'\n            - description: 'Indicates the time, in UNIX epoch date format, when DynamoDB detected that the table''s AWS KMS key was inaccessible. This attribute will automatically be cleared when DynamoDB detects that the table''s AWS KMS key is accessible again. DynamoDB will initiate the table archival process when table''s AWS KMS key remains inaccessible for more than seven days from this date.'\n      description: The description of the server-side encryption status on the specified table.\n    SSEEnabled:\n      type: boolean\n    ScanTotalSegments:\n      type: integer\n      minimum: 1\n      maximum: 1000000\n    ScanSegment:\n      type: integer\n      minimum: 0\n      maximum: 999999\n    TableCreationDateTime:\n      type: string\n      format: date-time\n    StreamEnabled:\n      type: boolean\n    StreamViewType:\n      type: string\n      enum:\n        - NEW_IMAGE\n        - OLD_IMAGE\n        - NEW_AND_OLD_IMAGES\n        - KEYS_ONLY\n    TableStatus:\n      type: string\n      enum:\n        - CREATING\n        - UPDATING\n        - DELETING\n        - ACTIVE\n        - INACCESSIBLE_ENCRYPTION_CREDENTIALS\n        - ARCHIVING\n        - ARCHIVED\n    TagKeyString:\n      type: string\n      minLength: 1\n      maxLength: 128\n    TagValueString:\n      type: string\n      minLength: 0\n      maxLength: 256\n    Tag:\n      type: object\n      required:\n        - Key\n        - Value\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/TagKeyString'\n            - description: 'The key of the tag. Tag keys are case sensitive. Each DynamoDB table can only have up to one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value. '\n        Value:\n          allOf:\n            - $ref: '#/components/schemas/TagValueString'\n            - description: The value of the tag. Tag values are case-sensitive and can be null.\n      description: '\u003cp\u003eDescribes a tag. A tag is a key-value pair. You can add up to 50 tags to a single DynamoDB table. \u003c/p\u003e \u003cp\u003e AWS-assigned tag names and values are automatically assigned the \u003ccode\u003eaws:\u003c/code\u003e prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix \u003ccode\u003euser:\u003c/code\u003e in the Cost Allocation Report. You cannot backdate the application of a tag. \u003c/p\u003e \u003cp\u003eFor an overview on tagging DynamoDB resources, see \u003ca href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html\"\u003eTagging for DynamoDB\u003c/a\u003e in the \u003ci\u003eAmazon DynamoDB Developer Guide\u003c/i\u003e.\u003c/p\u003e'\n    TagKeyList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TagKeyString'\n    TimeToLiveAttributeName:\n      type: string\n      minLength: 1\n      maxLength: 255\n    TimeToLiveStatus:\n      type: string\n      enum:\n        - ENABLING\n        - DISABLING\n        - ENABLED\n        - DISABLED\n    TimeToLiveEnabled:\n      type: boolean\n    TimeToLiveSpecification:\n      type: object\n      required:\n        - Enabled\n        - AttributeName\n      properties:\n        Enabled:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveEnabled'\n            - description: Indicates whether TTL is to be enabled (true) or disabled (false) on the table.\n        AttributeName:\n          allOf:\n            - $ref: '#/components/schemas/TimeToLiveAttributeName'\n            - description: The name of the TTL attribute used to store the expiration time for items in the table.\n      description: Represents the settings used to enable or disable Time to Live (TTL) for the specified table.\n    TransactGetItem:\n      type: object\n      required:\n        - Get\n      properties:\n        Get:\n          allOf:\n            - $ref: '#/components/schemas/Get'\n            - description: 'Contains the primary key that identifies the item to get, together with the name of the table that contains the item, and optionally the specific attributes of the item to retrieve.'\n      description: Specifies an item to be retrieved as part of the transaction.\n    TransactGetItemList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TransactGetItem'\n      minItems: 1\n      maxItems: 25\n    Update:\n      type: object\n      required:\n        - Key\n        - UpdateExpression\n        - TableName\n      properties:\n        Key:\n          allOf:\n            - $ref: '#/components/schemas/Key'\n            - description: The primary key of the item to be updated. Each element consists of an attribute name and a value for that attribute.\n        UpdateExpression:\n          allOf:\n            - $ref: '#/components/schemas/UpdateExpression'\n            - description: 'An expression that defines one or more attributes to be updated, the action to be performed on them, and new value(s) for them.'\n        TableName:\n          allOf:\n            - $ref: '#/components/schemas/TableName'\n            - description: Name of the table for the \u003ccode\u003eUpdateItem\u003c/code\u003e request.\n        ConditionExpression:\n          allOf:\n            - $ref: '#/components/schemas/ConditionExpression'\n            - description: A condition that must be satisfied in order for a conditional update to succeed.\n        ExpressionAttributeNames:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeNameMap'\n            - description: One or more substitution tokens for attribute names in an expression.\n        ExpressionAttributeValues:\n          allOf:\n            - $ref: '#/components/schemas/ExpressionAttributeValueMap'\n            - description: One or more values that can be substituted in an expression.\n        ReturnValuesOnConditionCheckFailure:\n          allOf:\n            - $ref: '#/components/schemas/ReturnValuesOnConditionCheckFailure'\n            - description: 'Use \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e to get the item attributes if the \u003ccode\u003eUpdate\u003c/code\u003e condition fails. For \u003ccode\u003eReturnValuesOnConditionCheckFailure\u003c/code\u003e, the valid values are: NONE, ALL_OLD, UPDATED_OLD, ALL_NEW, UPDATED_NEW.'\n      description: Represents a request to perform an \u003ccode\u003eUpdateItem\u003c/code\u003e operation.\n    TransactWriteItem:\n      type: object\n      properties:\n        ConditionCheck:\n          allOf:\n            - $ref: '#/components/schemas/ConditionCheck'\n            - description: A request to perform a check item operation.\n        Put:\n          allOf:\n            - $ref: '#/components/schemas/Put'\n            - description: A request to perform a \u003ccode\u003ePutItem\u003c/code\u003e operation.\n        Delete:\n          allOf:\n            - $ref: '#/components/schemas/Delete'\n            - description: A request to perform a \u003ccode\u003eDeleteItem\u003c/code\u003e operation.\n        Update:\n          allOf:\n            - $ref: '#/components/schemas/Update'\n            - description: A request to perform an \u003ccode\u003eUpdateItem\u003c/code\u003e operation.\n      description: 'A list of requests that can perform update, put, delete, or check operations on multiple items in one or more tables atomically.'\n    TransactWriteItemList:\n      type: array\n      items:\n        $ref: '#/components/schemas/TransactWriteItem'\n      minItems: 1\n      maxItems: 25\n    UpdateExpression:\n      type: string\n    WriteRequest:\n      type: object\n      properties:\n        PutRequest:\n          allOf:\n            - $ref: '#/components/schemas/PutRequest'\n            - description: A request to perform a \u003ccode\u003ePutItem\u003c/code\u003e operation.\n        DeleteRequest:\n          allOf:\n            - $ref: '#/components/schemas/DeleteRequest'\n            - description: A request to perform a \u003ccode\u003eDeleteItem\u003c/code\u003e operation.\n      description: 'Represents an operation to perform - either \u003ccode\u003eDeleteItem\u003c/code\u003e or \u003ccode\u003ePutItem\u003c/code\u003e. You can only request one of these operations, not both, in a single \u003ccode\u003eWriteRequest\u003c/code\u003e. If you do need to perform both of these operations, you need to provide two separate \u003ccode\u003eWriteRequest\u003c/code\u003e objects.'\nsecurity:\n  - hmac: []\n",
			"canonicalURL": "/github.com/APIs-guru/openapi-directory@297a6aabc26a26ce6a88a81c8a82120430c15265/-/blob/APIs/amazonaws.com/dynamodb/2012-08-10/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/APIs-guru/openapi-directory/blob/297a6aabc26a26ce6a88a81c8a82120430c15265/APIs/amazonaws.com/dynamodb/2012-08-10/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:460518: duplicate path: \"/#X-Amz-Target=DynamoDB_20120810.TransactGetItems\""
}