{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/GeoNode/documentation"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "devel/api/V2/schema/openapi.yml",
			"byteSize": 166230,
			"content": "openapi: 3.0.3\ninfo:\n  title: 'GeoNode REST API v2 - REST'\n  version: 3.2.0\npaths:\n  /api/v2/:\n    get:\n      operationId: api_v2_retrieve\n      description: Returns a list of available endpoints\n      tags:\n      - api\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          description: A json with a list of available endpoints\n  /api/v2/documents/:\n    get:\n      operationId: api_v2_documents_list\n      description: API endpoint that return all the documents available with detailed information (paginated).\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDocumentList'\n          description: ''\n    post:\n      operationId: api_v2_documents_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Document'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n    delete:\n      operationId: api_v2_documents_destroy\n      description: |-\n        Either delete a single or many model instances in bulk, by sending a json with the ID of the document to delete\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/documents/{id}/:\n    get:\n      operationId: api_v2_documents_retrieve\n      description: API endpoint that return detailed information of a specific document.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n    put:\n      operationId: api_v2_documents_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Document'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Document'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Document'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n    patch:\n      operationId: api_v2_documents_partial_update_2\n      description: API endpoint that allows documents to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDocument'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n    delete:\n      operationId: api_v2_documents_destroy_2\n      description: |-\n        Delete a single document.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/documents/{id}/linked_resources/:\n    get:\n      operationId: api_v2_documents_linked_resources_retrieve\n      description: API endpoint that return all the linked resources of a specific id.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this document.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Document'\n          description: ''\n  /api/v2/geoapps/:\n    get:\n      operationId: api_v2_geoapps_list\n      description: API endpoint that show all the geoapps available.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGeoAppList'\n          description: ''\n    post:\n      operationId: api_v2_geoapps_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    patch:\n      operationId: api_v2_geoapps_partial_update\n      description: API endpoint that allows geoapps to be viewed or edited.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    delete:\n      operationId: api_v2_geoapps_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/geoapps/{id}/:\n    get:\n      operationId: api_v2_geoapps_retrieve\n      description: API endpoint that show details of a specific geoapp.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    put:\n      operationId: api_v2_geoapps_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GeoApp'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    patch:\n      operationId: api_v2_geoapps_partial_update_2\n      description: API endpoint that allows geoapps to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGeoApp'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n    delete:\n      operationId: api_v2_geoapps_destroy_2\n      description: |-\n        Delete a single instances\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/geoapps/{id}/{field_name}/:\n    get:\n      operationId: api_v2_geoapps_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this geo app.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GeoApp'\n          description: ''\n  /api/v2/groups/:\n    get:\n      operationId: api_v2_groups_list\n      description: API endpoint that return all groups available with detailed information (paginated).\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedGroupProfileList'\n          description: ''\n    post:\n      operationId: api_v2_groups_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    patch:\n      operationId: api_v2_groups_partial_update\n      description: API endpoint that allows gropus to be viewed or edited.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    delete:\n      operationId: api_v2_groups_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/groups/{id}/:\n    get:\n      operationId: api_v2_groups_retrieve\n      description: API endpoint that return detailed information of a specific group.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    put:\n      operationId: api_v2_groups_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/GroupProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    patch:\n      operationId: api_v2_groups_partial_update_2\n      description: API endpoint that allows gropus to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedGroupProfile'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n    delete:\n      operationId: api_v2_groups_destroy_2\n      description: |-\n        Delete a single instance\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/groups/{id}/managers/:\n    get:\n      operationId: api_v2_groups_managers_retrieve\n      description: API endpoint that show the managers for the selected group.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n  /api/v2/groups/{id}/members/:\n    get:\n      operationId: api_v2_groups_members_retrieve\n      description: API endpoint that show either members and managers for the selected group.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n  /api/v2/groups/{id}/resources/:\n    get:\n      operationId: api_v2_groups_resources_retrieve\n      description: API endpoint that show all the resources connected to the selected group.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this group profile.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupProfile'\n          description: ''\n  /api/v2/datasets/:\n    get:\n      operationId: api_v2_datasets_list\n      description: API endpoint that return all the datasets available with detailed information (paginated).\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDatasetList'\n          description: ''\n    post:\n      operationId: api_v2_datasets_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    patch:\n      operationId: api_v2_datasets_partial_update\n      description: API endpoint that allows datasets to be viewed or edited.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    delete:\n      operationId: api_v2_datasets_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/datasets/{id}/:\n    get:\n      operationId: api_v2_datasets_retrieve\n      description: API endpoint that return detailed information of a specific dataset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    put:\n      operationId: api_v2_datasets_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Dataset'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    patch:\n      operationId: api_v2_datasets_partial_update_2\n      description: API endpoint that allows datasets to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDataset'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n    delete:\n      operationId: api_v2_dataset_destroy_2\n      description: |-\n        Delete a single model instance\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/datasets/{id}/{field_name}/:\n    get:\n      operationId: api_v2_datasets_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this dataset.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n  /api/v2/datasets/{id}/maps/:\n    get:\n      operationId: api_v2_datasets_maps_retrieve\n      description: API endpoint allowing to retrieve a list of the maps using a dataset.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n  /api/v2/datasets/{id}/maplayers/:\n    get:\n      operationId: api_v2_datasets_maplayers_retrieve\n      description: API endpoint allowing to retrieve a list of the MapLayers related to the dataset\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: ''\n\n  /api/v2/maps/:\n    get:\n      operationId: api_v2_maps_list\n      description: API endpoint that return all the maps available with detailed information (paginated).\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedMapList'\n          description: ''\n    post:\n      operationId: api_v2_maps_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Map'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Map'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Map'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    patch:\n      operationId: api_v2_maps_partial_update\n      description: API endpoint that allows maps to be viewed or edited.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    delete:\n      operationId: api_v2_maps_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/maps/{id}/:\n    get:\n      operationId: api_v2_maps_retrieve\n      description: API endpoint that return detailed information of a specific map.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    put:\n      operationId: api_v2_maps_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Map'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Map'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Map'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    patch:\n      operationId: api_v2_maps_partial_update_2\n      description: API endpoint that allows maps to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedMap'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n    delete:\n      operationId: api_v2_maps_destroy_2\n      description: |-\n        Delete a single instance.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/maps/{id}/{field_name}/:\n    get:\n      operationId: api_v2_maps_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n  /api/v2/maps/{id}/maplayers/:\n    get:\n      operationId: api_v2_maps_datasets_retrieve\n      description: |-\n        Return the list of the maplayers that compose the map.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n  /api/v2/maps/{id}/datasets/:\n    get:\n      operationId: api_v2_maps_datasets_retrieve\n      description: API endpoint allowing to retrieve a detailed list of the local Datasets a map is using.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this map.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Map'\n          description: ''\n  /api/v2/resources/:\n    get:\n      operationId: api_v2_resources_list\n      description: API endpoint that show all resources available in GeoNode, includes maps, datasets, geoapps and documents (paginated).\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedResourceBaseList'\n          description: ''\n    post:\n      operationId: api_v2_resources_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    patch:\n      operationId: api_v2_resources_partial_update\n      description: API endpoint that allows base resources to be viewed or edited.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    delete:\n      operationId: api_v2_resources_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/resources/{id}/:\n    get:\n      operationId: api_v2_resources_retrieve\n      description: API endpoint that return detailed information of a specific resource, including keywods, owner and bbox_polygon.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    put:\n      operationId: api_v2_resources_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    patch:\n      operationId: api_v2_resources_partial_update_2\n      description: API endpoint that allows base resources to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedResourceBase'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n    delete:\n      operationId: api_v2_resources_destroy_2\n      description: |-\n        Delete a single instance\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/resources/{id}/get_perms/:\n    get:\n      operationId: api_v2_resources_get_perms_retrieve\n      description: |-\n        API endpoint that show all the permissions defined for a specific resource, splitted by groups and users.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/resources/{id}/set_perms/:\n    put:\n      operationId: api_v2_resources_set_perms_update\n      description: API endpoint that allows the user to set the permissions to a specific resource.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this resource base.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ResourceBase'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/resources/approved/:\n    get:\n      operationId: api_v2_resources_approved_retrieve\n      description: Will return a list of approved resource available.\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/resources/featured/:\n    get:\n      operationId: api_v2_resources_featured_retrieve\n      description: Will return a list of featured resource available.\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/resources/published/:\n    get:\n      operationId: api_v2_resources_published_retrieve\n      description: Will return a list of published resource available.\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/resources/resource_types/:\n    get:\n      operationId: api_v2_resources_resource_types_retrieve\n      description: Will return a list of the resource types that are managed by GeoNode.\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceBase'\n          description: ''\n  /api/v2/schema/:\n    get:\n      operationId: api_v2_schema_retrieve\n      description: |-\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n        - YAML: application/vnd.oai.openapi\n        - JSON: application/vnd.oai.openapi+json\n      parameters:\n      - in: query\n        name: format\n        schema:\n          type: string\n          enum:\n          - json\n          - yaml\n      - in: query\n        name: lang\n        schema:\n          type: string\n          enum:\n          - af\n          - am\n          - ar\n          - bn\n          - de\n          - el\n          - en\n          - es\n          - fa\n          - fr\n          - id\n          - it\n          - ja\n          - km\n          - ko\n          - ne\n          - nl\n          - pl\n          - pt\n          - pt-br\n          - ru\n          - si\n          - sq\n          - sv\n          - sw\n          - ta\n          - th\n          - tl\n          - uk\n          - vi\n          - zh-cn\n      tags:\n      - api\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/vnd.oai.openapi:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/yaml:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/vnd.oai.openapi+json:\n              schema:\n                type: object\n                additionalProperties: {}\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/v2/upload-size-limits/:\n    get:\n      operationId: upload-size-limit-list\n      description:  |-\n        Upload Size Limit List\n        Each object in `upload-size-limits` contains:\n          - slug [str]: an unique identifier\n          - description [str]: The description of the limit.\n          - max_size [int]: Max amount of bytes allowed.\n          - max_size_label [str]: max_size in a human readable format. \n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - api\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUploadSizeLimitList'\n          description: ''\n  /api/v2/upload-size-limits/{slug}/:\n    get:\n      operationId: upload-size-limit-retrieve\n      description:  |-\n        Upload Size Limit Retrieve\n        Returns the limit object with the following data:\n          - slug [str]: an unique identifier\n          - description [str]: The description of the limit.\n          - max_size [int]: Max amount of bytes allowed.\n          - max_size_label [str]: max_size in a human readable format. \n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: A unique string value identifying this upload.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadSizeLimit'\n          description: ''\n    put:\n      operationId: upload-size-limit-update\n      description: Update one model instance.\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: A unique string value identifying this upload.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadSizeLimit'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadSizeLimit'\n          description: ''\n    patch:\n      operationId: upload-size-limit-partial-update\n      description: Partially update one model instance.\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: A unique string value identifying this upload.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UploadSizeLimit'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UploadSizeLimit'\n          description: ''\n    delete:\n      operationId: upload-size-limit-destroy\n      description: |-\n        Delete a model instance.\n        Protected objects, these objects are required by the code, so they can not\n        be deleted, only modified.\n          * 'dataset_upload_size'\n          * 'document_upload_size'\n      parameters:\n      - in: path\n        name: slug\n        schema:\n          type: string\n        description: A unique string value identifying this upload.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/uploads/:\n    get:\n      operationId: api_v2_uploads_list\n      description: List of the upload instances with their status.\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUploadList'\n          description: ''\n    post:\n      operationId: api_v2_uploads_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Upload'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n    patch:\n      operationId: api_v2_uploads_partial_update\n      description: API endpoint that allows uploads to be viewed or edited.\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUpload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedUpload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUpload'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n    delete:\n      operationId: api_v2_uploads_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/uploads/{id}/:\n    get:\n      operationId: api_v2_uploads_retrieve\n      description:  |-\n        Authenticated API endpoint that will show details about the upload status.\n        Main informations available are:\n          - ID: upload id\n          - name: dataset name\n          - date: start date of the import process\n          - state: the actual state of the import process. When the state is PROCESSED, means that the dataset has been process by GeoNode and Geoserver\n          - progress: % of progress\n          - uploadfile_set: list of the uploaded files\n          - delete url: url to be called for delete the import\n          - import_url: to monitoring the import status in geoserver.\n        Example of still in progress import:\n          {\n            \"upload\": {\n                \"id\": 1119,\n                \"name\": \"dataset_name\",\n                \"date\": \"2021-04-26T09:50:41.233543Z\",\n                \"create_date\": \"2021-04-26T09:50:40.515866Z\",\n                \"user\": 1167,\n                \"state\": \"COMPLETE\",\n                \"progress\": 80.0,\n                \"complete\": true,\n                \"import_id\": 1089,\n                \"uploadfile_set\": [],\n                \"resume_url\": null,\n                \"delete_url\": \"/upload/delete/1119\",\n                \"import_url\": \"http://geoserver:8080/geoserver/rest/imports/1089\",\n                \"detail_url\": null\n            }\n        }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this upload.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n    put:\n      operationId: api_v2_uploads_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this upload.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Upload'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n    patch:\n      operationId: api_v2_uploads_partial_update_2\n      description: API endpoint that allows uploads to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this upload.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUpload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedUpload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUpload'\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n    delete:\n      operationId: api_v2_uploads_destroy_2\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this upload.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/uploads/{id}/{field_name}/:\n    get:\n      operationId: api_v2_uploads_retrieve_2\n      description: |-\n        Fetch related object(s), as if sideloaded (used to support\n        link objects).\n\n        This method gets mapped to `/\u003cresource\u003e/\u003cpk\u003e/\u003cfield_name\u003e/` by\n        DynamicRouter for all DynamicRelationField fields. Generally,\n        this method probably shouldn't be overridden.\n\n        An alternative implementation would be to generate reverse queries.\n        For an exploration of that approach, see:\n            https://gist.github.com/ryochiji/54687d675978c7d96503\n      parameters:\n      - in: path\n        name: field_name\n        schema:\n          type: string\n        required: true\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this upload.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n  /api/v2/uploads/upload/:\n    put:\n      operationId: api_v2_uploads_upload_update\n      description:  |-\n        API endpoint that allows user to upload new datasets into GeoNode.\n        The endpoint is protected via authentication and the request should always come from the same session.\n        The API accept the request with form-data. Is also possible to define some information via json.\n        Behind the scene, geonode will:\n          - Create an upload session\n          - Save the dataset into GeoNode\n          - Call async geoserver to save the dataset\n        Example:\n          client = requests.session()\n          response = client.put(\n                \"http://localhost:8000/api/v2/uploads/upload/\",\n                auth=HTTPBasicAuth(username, password),\n                data=params,\n                files=files,\n            )\n            Where:\n              params = {\n                  \"permissions\": '{ \"users\": {\"AnonymousUser\": [\"view_resourcebase\"]} , \"groups\":{}}',  # dataset permissions\n                  \"time\": \"false\",\n                  \"layer_title\": \"layer_title\",\n                  \"time\": \"false\",\n                  \"charset\": \"UTF-8\",\n              }\n              files = {\n                \"filename\": \u003c_io.BufferedReader name=\"filename\"\u003e\n              }\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Upload'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Upload'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: ''\n  /upload/final?id={import_id}:\n    put:\n      operationId: api_upload_upload_final\n      description:  |-\n        API endpoint that allows user to check the status of new datasets into GeoNode.\n        The endpoint is protected via authentication and the request should always come from the same session.\n        Example:\n          client = requests.session()\n          response = client.get(\"http://localhost:8000/upload/final?id=1\")\n          Where:\n            params = {\n                \"permissions\": '{ \"users\": {\"AnonymousUser\": [\"view_resourcebase\"]} , \"groups\":{}}',  # dataset permissions\n                \"time\": \"false\",\n                \"layer_title\": \"layer_title\",\n                \"time\": \"false\",\n                \"charset\": \"UTF-8\",\n            }\n      tags:\n      - api\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Upload'\n          description: |-\n            {\n              \"status\": \"finished\",\n              \"id\": 131,\n              \"url\": \"file_name_path\",\n              \"bbox\": \"-180.0000000,-90.0000000,180.0000000,90.0000000\",\n              \"crs\": {\n                \"type\": \"name\",\n                \"properties\": \"EPSG:4326\"\n              },\n              \"success\": true\n            }          \n  /api/v2/users/:\n    get:\n      operationId: api_v2_users_list\n      description: API endpoint that show the list of users registered in GeoNode. if the logged user is the administrator will show all the user available, otherwise only the information of his own account are provided\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedUserProfileList'\n          description: ''\n    post:\n      operationId: api_v2_users_create\n      description: |-\n        Either create a single or many model instances in bulk\n        using the Serializer's many=True ability from Django REST \u003e= 2.2.5.\n\n        The data can be represented by the serializer name (single or plural\n        forms), dict or list.\n\n        Examples:\n\n        POST /dogs/\n        {\n          \"name\": \"Fido\",\n          \"age\": 2\n        }\n\n        POST /dogs/\n        {\n          \"dog\": {\n            \"name\": \"Lucky\",\n            \"age\": 3\n          }\n        }\n\n        POST /dogs/\n        {\n          \"dogs\": [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n          ]\n        }\n\n        POST /dogs/\n        [\n            {\"name\": \"Fido\", \"age\": 2},\n            {\"name\": \"Lucky\", \"age\": 3}\n        ]\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    delete:\n      operationId: api_v2_users_destroy\n      description: |-\n        Either delete a single or many model instances in bulk\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/users/{id}/:\n    get:\n      operationId: api_v2_users_retrieve\n      description: API endpoint that return detailed information of a specific user.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    put:\n      operationId: api_v2_users_update\n      description: |-\n        Update one or more model instances.\n\n        If ENABLE_BULK_UPDATE is set, multiple previously-fetched records\n        may be updated in a single call, provided their IDs.\n\n        If ENABLE_PATCH_ALL is set, multiple records\n        may be updated in a single PATCH call, even without knowing their IDs.\n\n        *WARNING*: ENABLE_PATCH_ALL should be considered an advanced feature\n        and used with caution. This feature must be enabled at the viewset level\n        and must also be requested explicitly by the client\n        via the \"patch-all\" query parameter.\n\n        This parameter can have one of the following values:\n\n            true (or 1): records will be fetched and then updated in a transaction loop\n              - The `Model.save` method will be called and model signals will run\n              - This can be slow if there are too many signals or many records in the query\n              - This is considered the more safe and default behavior\n            query: records will be updated in a single query\n              - The `QuerySet.update` method will be called and model signals will not run\n              - This will be fast, but may break data constraints that are controlled by signals\n              - This is considered unsafe but useful in certain situations\n\n        The server's successful response to a patch-all request\n        will NOT include any individual records. Instead, the response content will contain\n        a \"meta\" object with an \"updated\" count of updated records.\n\n        Examples:\n\n        Update one dog:\n\n            PATCH /dogs/1/\n            {\n                'fur': 'white'\n            }\n\n        Update many dogs by ID:\n\n            PATCH /dogs/\n            [\n                {'id': 1, 'fur': 'white'},\n                {'id': 2, 'fur': 'black'},\n                {'id': 3, 'fur': 'yellow'}\n            ]\n\n        Update all dogs in a query:\n\n            PATCH /dogs/?filter{fur.contains}=brown\u0026patch-all=true\n            {\n                'fur': 'gold'\n            }\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - api\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserProfile'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n    delete:\n      operationId: api_v2_users_destroy_2\n      description: |-\n        Delete a model instance.\n\n        DELETE /dogs/\n        {\n            \"dogs\": [\n                {\"id\": 1},\n                {\"id\": 2}\n            ]\n        }\n\n        DELETE /dogs/\n        [\n            {\"id\": 1},\n            {\"id\": 2}\n        ]\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/v2/users/{id}/groups/:\n    get:\n      operationId: api_v2_users_groups_retrieve\n      description: API endpoint that show the list of the groups that the user belong to.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n  /api/v2/users/{id}/resources/:\n    get:\n      operationId: api_v2_users_resources_retrieve\n      description: API endpoint that show the list of the resources that belong to the user.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - api\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserProfile'\n          description: ''\n  /mapstore/rest/resources/:\n    get:\n      operationId: mapstore_rest_resources_retrieve\n      description: Only Authenticate User perform CRUD Operations on Respective Data\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n    post:\n      operationId: mapstore_rest_resources_create\n      description: Only Authenticate User perform CRUD Operations on Respective Data\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          description: No response body\n  /mapstore/rest/resources/{id}/:\n    get:\n      operationId: mapstore_rest_resources_retrieve_2\n      description: Only Authenticate User perform CRUD Operations on Respective Data\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        description: A unique value identifying this map store resource.\n        required: true\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n    put:\n      operationId: mapstore_rest_resources_update\n      description: Only Authenticate User perform CRUD Operations on Respective Data\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        description: A unique value identifying this map store resource.\n        required: true\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          description: No response body\n    patch:\n      operationId: mapstore_rest_resources_partial_update\n      description: Only Authenticate User perform CRUD Operations on Respective Data\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        description: A unique value identifying this map store resource.\n        required: true\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          description: No response body\n    delete:\n      operationId: mapstore_rest_resources_destroy\n      description: Only Authenticate User perform CRUD Operations on Respective Data\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        description: A unique value identifying this map store resource.\n        required: true\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /mapstore/rest/users/:\n    get:\n      operationId: mapstore_rest_users_list\n      description: API endpoint that show the users available with some details.\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n          description: ''\n    post:\n      operationId: mapstore_rest_users_create\n      description: API endpoint that allows users to be viewed or edited.\n      tags:\n      - mapstore\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n  /mapstore/rest/users/{id}/:\n    get:\n      operationId: mapstore_rest_users_retrieve\n      description: API endpoint that show the users available with some details.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    put:\n      operationId: mapstore_rest_users_update\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - mapstore\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/User'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/User'\n        required: true\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    delete:\n      operationId: mapstore_rest_users_destroy\n      description: API endpoint that allows users to be viewed or edited.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this user.\n        required: true\n      tags:\n      - mapstore\n      security:\n      - cookieAuth: []\n      - basicAuth: []\n      responses:\n        '204':\n          description: No response body\n  /o/userinfo/:\n    get:\n      operationId: o_userinfo_retrieve\n      description: View used to show Claims about the authenticated End-User\n      tags:\n      - o\n      security:\n      - basicAuth: []\n      - cookieAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\ncomponents:\n  schemas:\n    AccessEnum:\n      enum:\n      - public\n      - public-invite\n      - private\n      type: string\n    BlankEnum:\n      enum:\n      - ''\n    Document:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        href:\n          type: string\n          readOnly: true\n        doc_type:\n          type: string\n          nullable: true\n          maxLength: 128\n        extension:\n          type: string\n          nullable: true\n          maxLength: 128\n        mime_type:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n      required:\n      - abstract\n      - alternate\n      - attribution\n      - bbox_polygon\n      - constraints_other\n      - created\n      - data_quality_statement\n      - date\n      - date_type\n      - detail_url\n      - doi\n      - edition\n      - embed_url\n      - featured\n      - href\n      - is_approved\n      - is_published\n      - language\n      - last_updated\n      - ll_bbox_polygon\n      - maintenance_frequency\n      - metadata_author\n      - metadata_only\n      - mime_type\n      - name\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - popular_count\n      - processed\n      - purpose\n      - rating\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - resource_type\n      - share_count\n      - srid\n      - supplemental_information\n      - temporal_extent_end\n      - temporal_extent_start\n      - thumbnail_url\n      - title\n      - uuid\n    GeoApp:\n      type: object\n      description: '- Deferred / not Embedded --\u003e ?include[]=data'\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        zoom:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          nullable: true\n        projection:\n          type: string\n          nullable: true\n          maxLength: 32\n        center_x:\n          type: number\n          format: float\n          nullable: true\n        center_y:\n          type: number\n          format: float\n          nullable: true\n        urlsuffix:\n          type: string\n          nullable: true\n          title: Site URL\n          maxLength: 255\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n      required:\n      - abstract\n      - alternate\n      - attribution\n      - bbox_polygon\n      - constraints_other\n      - created\n      - data_quality_statement\n      - date\n      - date_type\n      - detail_url\n      - doi\n      - edition\n      - embed_url\n      - featured\n      - is_approved\n      - is_published\n      - language\n      - last_updated\n      - ll_bbox_polygon\n      - maintenance_frequency\n      - metadata_author\n      - metadata_only\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - popular_count\n      - processed\n      - purpose\n      - rating\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - resource_type\n      - share_count\n      - srid\n      - supplemental_information\n      - temporal_extent_end\n      - temporal_extent_start\n      - thumbnail_url\n      - title\n      - uuid\n    GeoStory:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        app_type:\n          type: string\n          title: Apps Type\n          maxLength: 255\n        zoom:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          nullable: true\n        projection:\n          type: string\n          nullable: true\n          maxLength: 32\n        center_x:\n          type: number\n          format: float\n          nullable: true\n        center_y:\n          type: number\n          format: float\n          nullable: true\n        urlsuffix:\n          type: string\n          nullable: true\n          title: Site URL\n          maxLength: 255\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n      required:\n      - abstract\n      - alternate\n      - attribution\n      - bbox_polygon\n      - constraints_other\n      - created\n      - data_quality_statement\n      - date\n      - date_type\n      - detail_url\n      - doi\n      - edition\n      - embed_url\n      - featured\n      - is_approved\n      - is_published\n      - language\n      - last_updated\n      - ll_bbox_polygon\n      - maintenance_frequency\n      - metadata_author\n      - metadata_only\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - popular_count\n      - processed\n      - purpose\n      - rating\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - resource_type\n      - share_count\n      - srid\n      - supplemental_information\n      - temporal_extent_end\n      - temporal_extent_start\n      - thumbnail_url\n      - title\n      - uuid\n    GroupProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        title:\n          type: string\n          maxLength: 1000\n        group:\n          type: string\n        slug:\n          type: string\n          maxLength: 1000\n          pattern: ^[-a-zA-Z0-9_]+$\n        logo:\n          type: string\n          format: uri\n        description:\n          type: string\n        email:\n          type: string\n          format: email\n          nullable: true\n          description: Email used to contact one or all group members, such as a mailing\n            list, shared email, or exchange group.\n          maxLength: 254\n        keywords:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        access:\n          allOf:\n          - $ref: '#/components/schemas/AccessEnum'\n          description: 'Public: Any registered user can view and join a public group.\u003cbr\u003ePublic\n            (invite-only):Any registered user can view the group.  Only invited users\n            can join.\u003cbr\u003ePrivate: Registered users cannot see any details about the\n            group, including membership.  Only invited users can join.'\n        categories:\n          type: array\n          items:\n            type: string\n      required:\n      - categories\n      - description\n      - group\n      - keywords\n      - pk\n      - slug\n      - title\n    Dataset:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        workspace:\n          type: string\n          readOnly: true\n        store:\n          type: string\n          readOnly: true\n        storeType:\n          type: string\n          readOnly: true\n        charset:\n          type: string\n          readOnly: true\n        is_mosaic:\n          type: boolean\n          title: Is mosaic?\n        has_time:\n          type: boolean\n          title: Has time?\n        has_elevation:\n          type: boolean\n          title: Has elevation?\n        time_regex:\n          nullable: true\n          oneOf:\n          - $ref: '#/components/schemas/TimeRegexEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        elevation_regex:\n          type: string\n          nullable: true\n          maxLength: 128\n        use_featureinfo_custom_template:\n          type: boolean\n          title: Use featureinfo custom template?\n          description: specifies wether or not use a custom GetFeatureInfo template.\n        featureinfo_custom_template:\n          type: string\n          nullable: true\n          description: the custom GetFeatureInfo template HTML contents.\n        default_style:\n          type: string\n          readOnly: true\n          nullable: true\n        styles:\n          type: string\n          readOnly: true\n        attribute_set:\n          type: string\n          readOnly: true\n          nullable: true\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n      required:\n      - abstract\n      - alternate\n      - attribute_set\n      - attribution\n      - bbox_polygon\n      - charset\n      - constraints_other\n      - created\n      - data_quality_statement\n      - date\n      - date_type\n      - default_style\n      - detail_url\n      - doi\n      - edition\n      - embed_url\n      - featured\n      - is_approved\n      - is_published\n      - language\n      - last_updated\n      - ll_bbox_polygon\n      - maintenance_frequency\n      - metadata_author\n      - metadata_only\n      - name\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - popular_count\n      - processed\n      - purpose\n      - rating\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - resource_type\n      - share_count\n      - srid\n      - store\n      - storeType\n      - styles\n      - supplemental_information\n      - temporal_extent_end\n      - temporal_extent_start\n      - thumbnail_url\n      - title\n      - uuid\n      - workspace\n    Map:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        zoom:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        projection:\n          type: string\n          maxLength: 32\n        center_x:\n          type: number\n          format: float\n        center_y:\n          type: number\n          format: float\n        urlsuffix:\n          type: string\n          title: Site URL\n          maxLength: 255\n        featuredurl:\n          type: string\n          title: Featured Map URL\n          maxLength: 255\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n      required:\n      - abstract\n      - alternate\n      - attribution\n      - bbox_polygon\n      - center_x\n      - center_y\n      - constraints_other\n      - created\n      - data_quality_statement\n      - date\n      - date_type\n      - detail_url\n      - doi\n      - edition\n      - embed_url\n      - featured\n      - is_approved\n      - is_published\n      - language\n      - last_updated\n      - ll_bbox_polygon\n      - maintenance_frequency\n      - metadata_author\n      - metadata_only\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - popular_count\n      - processed\n      - projection\n      - purpose\n      - rating\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - resource_type\n      - share_count\n      - srid\n      - supplemental_information\n      - temporal_extent_end\n      - temporal_extent_start\n      - thumbnail_url\n      - title\n      - uuid\n      - zoom\n    NullEnum:\n      enum:\n      - null\n    PaginatedDocumentList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Document'\n    PaginatedGeoAppList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoApp'\n    PaginatedGeoStoryList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GeoStory'\n    PaginatedGroupProfileList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/GroupProfile'\n    PaginatedDatasetList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Dataset'\n    PaginatedMapList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Map'\n    PaginatedResourceBaseList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/ResourceBase'\n    PaginatedUploadSizeLimitList:\n      type: object\n      properties:\n        links:\n          type: object\n          properties:\n            next:\n              type: string\n              nullable: true\n            previous:\n              type: string\n              nullable: true\n        total:\n          type: integer\n          example: 123\n        page:\n          type: integer\n          example: 123\n        page_size:\n          type: integer\n          example: 123\n        upload-size-limits:\n          type: array\n          items:\n            $ref: '#/components/schemas/UploadSizeLimit'\n    PaginatedUploadList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Upload'\n    PaginatedUserProfileList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n        previous:\n          type: string\n          nullable: true\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserProfile'\n    PatchedDocument:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        href:\n          type: string\n          readOnly: true\n        doc_type:\n          type: string\n          nullable: true\n          maxLength: 128\n        extension:\n          type: string\n          nullable: true\n          maxLength: 128\n        mime_type:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n    PatchedGeoApp:\n      type: object\n      description: '- Deferred / not Embedded --\u003e ?include[]=data'\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        zoom:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          nullable: true\n        projection:\n          type: string\n          nullable: true\n          maxLength: 32\n        center_x:\n          type: number\n          format: float\n          nullable: true\n        center_y:\n          type: number\n          format: float\n          nullable: true\n        urlsuffix:\n          type: string\n          nullable: true\n          title: Site URL\n          maxLength: 255\n        data:\n          type: string\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n    PatchedGeoStory:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        app_type:\n          type: string\n          title: Apps Type\n          maxLength: 255\n        zoom:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n          nullable: true\n        projection:\n          type: string\n          nullable: true\n          maxLength: 32\n        center_x:\n          type: number\n          format: float\n          nullable: true\n        center_y:\n          type: number\n          format: float\n          nullable: true\n        urlsuffix:\n          type: string\n          nullable: true\n          title: Site URL\n          maxLength: 255\n        data:\n          type: string\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n    PatchedGroupProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        title:\n          type: string\n          maxLength: 1000\n        group:\n          type: string\n        slug:\n          type: string\n          maxLength: 1000\n          pattern: ^[-a-zA-Z0-9_]+$\n        logo:\n          type: string\n          format: uri\n        description:\n          type: string\n        email:\n          type: string\n          format: email\n          nullable: true\n          description: Email used to contact one or all group members, such as a mailing\n            list, shared email, or exchange group.\n          maxLength: 254\n        keywords:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        access:\n          allOf:\n          - $ref: '#/components/schemas/AccessEnum'\n          description: 'Public: Any registered user can view and join a public group.\u003cbr\u003ePublic\n            (invite-only):Any registered user can view the group.  Only invited users\n            can join.\u003cbr\u003ePrivate: Registered users cannot see any details about the\n            group, including membership.  Only invited users can join.'\n        categories:\n          type: array\n          items:\n            type: string\n    PatchedDataset:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        workspace:\n          type: string\n          readOnly: true\n        store:\n          type: string\n          readOnly: true\n        storeType:\n          type: string\n          readOnly: true\n        charset:\n          type: string\n          readOnly: true\n        is_mosaic:\n          type: boolean\n          title: Is mosaic?\n        has_time:\n          type: boolean\n          title: Has time?\n        has_elevation:\n          type: boolean\n          title: Has elevation?\n        time_regex:\n          nullable: true\n          oneOf:\n          - $ref: '#/components/schemas/TimeRegexEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        elevation_regex:\n          type: string\n          nullable: true\n          maxLength: 128\n        use_featureinfo_custom_template:\n          type: boolean\n          title: Use featureinfo custom template?\n          description: specifies wether or not use a custom GetFeatureInfo template.\n        featureinfo_custom_template:\n          type: string\n          nullable: true\n          description: the custom GetFeatureInfo template HTML contents.\n        default_style:\n          type: string\n          readOnly: true\n          nullable: true\n        styles:\n          type: string\n          readOnly: true\n        attribute_set:\n          type: string\n          readOnly: true\n          nullable: true\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n    PatchedMap:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        zoom:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        projection:\n          type: string\n          maxLength: 32\n        center_x:\n          type: number\n          format: float\n        center_y:\n          type: number\n          format: float\n        urlsuffix:\n          type: string\n          title: Site URL\n          maxLength: 255\n        featuredurl:\n          type: string\n          title: Featured Map URL\n          maxLength: 255\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        constraints_other:\n          type: string\n        language:\n          type: string\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        embed_url:\n          type: string\n        thumbnail_url:\n          type: string\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        restriction_code_type:\n          type: string\n          nullable: true\n        license:\n          type: string\n          nullable: true\n        spatial_representation_type:\n          type: string\n          nullable: true\n    PatchedResourceBase:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        restriction_code_type:\n          type: string\n          nullable: true\n        constraints_other:\n          type: string\n        license:\n          type: string\n          nullable: true\n        language:\n          type: string\n        spatial_representation_type:\n          type: string\n          nullable: true\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        thumbnail_url:\n          type: string\n    PatchedUpload:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n          maxLength: 64\n        date:\n          type: string\n          format: date-time\n        create_date:\n          type: string\n          format: date-time\n        user:\n          type: integer\n          nullable: true\n        state:\n          type: string\n          maxLength: 16\n        progress:\n          type: string\n          readOnly: true\n        complete:\n          type: boolean\n        import_id:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        uploadfile_set:\n          type: string\n          readOnly: true\n          nullable: true\n        resume_url:\n          type: string\n          readOnly: true\n        delete_url:\n          type: string\n          readOnly: true\n        import_url:\n          type: string\n          readOnly: true\n        detail_url:\n          type: string\n          readOnly: true\n    PatchedUser:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        is_staff:\n          type: boolean\n          title: Staff status\n          description: Designates whether the user can log into this admin site.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        is_superuser:\n          type: boolean\n          title: Superuser status\n          description: Designates that this user has all permissions without explicitly\n            assigning them.\n    PatchedUserProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 30\n        last_name:\n          type: string\n          maxLength: 150\n        avatar:\n          type: string\n          readOnly: true\n    ResourceBase:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: string\n          readOnly: true\n        uuid:\n          type: string\n          readOnly: true\n        resource_type:\n          type: string\n          readOnly: true\n        polymorphic_ctype_id:\n          type: string\n          readOnly: true\n        owner:\n          type: string\n          readOnly: true\n          nullable: true\n        poc:\n          type: string\n          readOnly: true\n        metadata_author:\n          type: string\n          readOnly: true\n        keywords:\n          type: string\n          nullable: true\n        regions:\n          type: string\n          readOnly: true\n          nullable: true\n        category:\n          type: string\n          nullable: true\n        title:\n          type: string\n        abstract:\n          type: string\n        attribution:\n          type: string\n        doi:\n          type: string\n        alternate:\n          type: string\n          readOnly: true\n        bbox_polygon:\n          type: string\n        ll_bbox_polygon:\n          type: string\n        srid:\n          type: string\n        date:\n          type: string\n          format: date-time\n        date_type:\n          type: string\n        edition:\n          type: string\n        purpose:\n          type: string\n        maintenance_frequency:\n          type: string\n        restriction_code_type:\n          type: string\n          nullable: true\n        constraints_other:\n          type: string\n        license:\n          type: string\n          nullable: true\n        language:\n          type: string\n        spatial_representation_type:\n          type: string\n          nullable: true\n        temporal_extent_start:\n          type: string\n          format: date-time\n        temporal_extent_end:\n          type: string\n          format: date-time\n        supplemental_information:\n          type: string\n        data_quality_statement:\n          type: string\n        group:\n          type: string\n          nullable: true\n        popular_count:\n          type: string\n        share_count:\n          type: string\n        rating:\n          type: string\n        featured:\n          type: boolean\n        is_published:\n          type: boolean\n        is_approved:\n          type: boolean\n        detail_url:\n          type: string\n          readOnly: true\n        embed_url:\n          type: string\n        created:\n          type: string\n          format: date-time\n          readOnly: true\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n        raw_abstract:\n          type: string\n          readOnly: true\n        raw_purpose:\n          type: string\n          readOnly: true\n        raw_constraints_other:\n          type: string\n          readOnly: true\n        raw_supplemental_information:\n          type: string\n          readOnly: true\n        raw_data_quality_statement:\n          type: string\n          readOnly: true\n        metadata_only:\n          type: boolean\n        processed:\n          type: boolean\n          readOnly: true\n        thumbnail_url:\n          type: string\n      required:\n      - abstract\n      - alternate\n      - attribution\n      - bbox_polygon\n      - constraints_other\n      - created\n      - data_quality_statement\n      - date\n      - date_type\n      - detail_url\n      - doi\n      - edition\n      - embed_url\n      - featured\n      - is_approved\n      - is_published\n      - language\n      - last_updated\n      - ll_bbox_polygon\n      - maintenance_frequency\n      - metadata_author\n      - metadata_only\n      - owner\n      - pk\n      - poc\n      - polymorphic_ctype_id\n      - popular_count\n      - processed\n      - purpose\n      - rating\n      - raw_abstract\n      - raw_constraints_other\n      - raw_data_quality_statement\n      - raw_purpose\n      - raw_supplemental_information\n      - regions\n      - resource_type\n      - share_count\n      - srid\n      - supplemental_information\n      - temporal_extent_end\n      - temporal_extent_start\n      - thumbnail_url\n      - title\n      - uuid\n    TimeRegexEnum:\n      enum:\n      - '[0-9]{8}'\n      - '[0-9]{8}T[0-9]{6}'\n      - '[0-9]{8}T[0-9]{6}Z'\n      type: string\n    UploadSizeLimit:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        slug:\n          type: string\n          readOnly: true\n          maxLength: 255\n          example: \"dataset_upload_size\"\n        description:\n          type: string\n          maxLength: 255\n          nullable: true\n        max_size:\n          type: integer\n          example: 104857600\n        max_size_label:\n          type: string\n          example: \"100.0 MB\"\n        link:\n          type: string\n          exemple: \"http://localhost:8000/api/v2/upload-size-limits/dataset_upload_size\"\n      required:\n      - slug\n      - max_size\n    Upload:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          nullable: true\n          maxLength: 64\n        date:\n          type: string\n          format: date-time\n        create_date:\n          type: string\n          format: date-time\n        user:\n          type: integer\n          nullable: true\n        state:\n          type: string\n          maxLength: 16\n        progress:\n          type: string\n          readOnly: true\n        complete:\n          type: boolean\n        import_id:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        uploadfile_set:\n          type: string\n          readOnly: true\n          nullable: true\n        resume_url:\n          type: string\n          readOnly: true\n        delete_url:\n          type: string\n          readOnly: true\n        import_url:\n          type: string\n          readOnly: true\n        detail_url:\n          type: string\n          readOnly: true\n      required:\n      - delete_url\n      - detail_url\n      - id\n      - import_url\n      - progress\n      - resume_url\n      - state\n      - uploadfile_set\n    User:\n      type: object\n      properties:\n        url:\n          type: string\n          format: uri\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          title: Email address\n          maxLength: 254\n        is_staff:\n          type: boolean\n          title: Staff status\n          description: Designates whether the user can log into this admin site.\n        is_active:\n          type: boolean\n          title: Active\n          description: Designates whether this user should be treated as active. Unselect\n            this instead of deleting accounts.\n        is_superuser:\n          type: boolean\n          title: Superuser status\n          description: Designates that this user has all permissions without explicitly\n            assigning them.\n      required:\n      - url\n      - username\n    UserProfile:\n      type: object\n      description: DREST-compatible model-based serializer.\n      properties:\n        pk:\n          type: integer\n          readOnly: true\n          title: ID\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+$\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 30\n        last_name:\n          type: string\n          maxLength: 150\n        avatar:\n          type: string\n          readOnly: true\n      required:\n      - avatar\n      - pk\n      - username\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    cookieAuth:\n      type: apiKey\n      in: cookie\n      name: Session\n    oauth2:\n      type: oauth2\n      flows: {}\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/v2/datasets/: get: operation \"api_v2_datasets_list\": responses: 200: content: \"application/json\": schema: parse schema: reference \"#/components/schemas/PaginatedDatasetList\": parse schema: results: parse schema: item: parse schema: reference \"#/components/schemas/Dataset\": parse schema: time_regex: parse schema: oneOf: [2]: parse schema: reference \"#/components/schemas/NullEnum\": parse schema: infer enum type: cannot infer type from \"null\""
}