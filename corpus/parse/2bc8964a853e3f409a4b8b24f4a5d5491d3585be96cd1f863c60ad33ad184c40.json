{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/PacktPublishing/Hands-on-Microservices-with-TypeScript-3"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "2.4_OpenApi3_(Swagger)/document/swagger.yaml",
			"byteSize": 3125,
			"content": "openapi: 3.0.0\nservers:\n  - description: Songs API direct\n    url: http://localhost:3000\n  - description: Songs API via Router\n    url: http://localhost:3080/api/songSvc\ninfo:\n  description: An API for fetching songs\n  version: \"1.0.1\"\n  title: Songs API\n  contact:\n    email: amit@company.com\n  license:\n    name: Apache 2.0\n    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'\ntags:\n  - name: Admins\n    description: Secured Admin-only calls\n  - name: Users\n    description: Operations available to regular users\npaths:\n  /v1/songs?id:\n    get:\n      tags:\n        - Users\n      summary: fetch a song by id\n      operationId: findSongById\n      description:\n        By passing in the appropriate options, you can search for\n        available inventory in the system\n      parameters:\n        - in: query\n          name: id\n          description: pass an optional song Id \n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SongItem'\n        '400':\n          description: bad input parameter\n  /v1/songs/?q:\n    get:\n      tags:\n        - Users\n      summary: searches song database\n      operationId: searchSongs\n      description:\n        By passing in the appropriate options, you can search for\n        available inventory in the system\n      parameters:\n        - in: query\n          name: q\n          description: the search query\n          required: false\n          schema:\n            type: string\n        - in: query\n          name: limit\n          description: maximum number of records to return\n          schema:\n            type: integer\n            format: int32\n            minimum: 0\n            maximum: 50\n      responses:\n        '200':\n          description: search results matching criteria\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SongItem'\n        '400':\n          description: bad input parameter\ncomponents:\n  schemas:\n    SongItem:\n      type: object\n      required:\n        - id\n        - name\n      properties:\n        id:\n          type: number\n          example: 2\n        name:\n          type: string\n          example: Poker Face\n        playCount:\n          type: number\n          example: 2358293\n        releaseDate:\n          type: string\n          format: date-time\n          example: '2016-08-29T09:12:33.001Z'\n        artist:\n          $ref: '#/components/schemas/Artist'\n        playTimeSecs: \n          type: number\n          example: 134\n        link:\n          type: string\n          example: '/storage/songs/poker.mp3'\n    Artist:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          example: Lady Gaga\n        homePage:\n          type: string\n          format: url\n          example: 'https://www.ladygaga.com/'\n      type: object",
			"canonicalURL": "/github.com/PacktPublishing/Hands-on-Microservices-with-TypeScript-3@c035fa438df7df86b44e9203eb36e1bb8a2d395b/-/blob/2.4_OpenApi3_%28Swagger%29/document/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/PacktPublishing/Hands-on-Microservices-with-TypeScript-3/blob/c035fa438df7df86b44e9203eb36e1bb8a2d395b/2.4_OpenApi3_(Swagger)/document/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: at 1:1616: path MUST NOT contain a query string"
}