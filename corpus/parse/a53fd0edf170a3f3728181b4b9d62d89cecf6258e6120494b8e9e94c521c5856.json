{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/restful-ma/thresholds"
		},
		"file": {
			"name": "amazonaws.com-appsync-2017-07-25-swagger.yaml",
			"size": 0,
			"path": "benchmark-repository/openapi/amazonaws.com-appsync-2017-07-25-swagger.yaml",
			"byteSize": 124143,
			"content": "openapi: 3.0.0\ninfo:\n  version: 2017-07-25\n  x-release: v4\n  title: AWS AppSync\n  description: AWS AppSync provides API actions for creating and interacting with data\n    sources using GraphQL from your application.\n  x-logo:\n    url: https://twitter.com/awscloud/profile_image?size=original\n    backgroundColor: \"#FFFFFF\"\n  termsOfService: https://aws.amazon.com/service-terms/\n  contact:\n    name: Mike Ralphson\n    email: mike.ralphson@gmail.com\n    url: https://github.com/mermade/aws2openapi\n    x-twitter: PermittedSoc\n  license:\n    name: Apache 2.0 License\n    url: http://www.apache.org/licenses/\n  x-providerName: amazonaws.com\n  x-serviceName: appsync\n  x-origin:\n    - contentType: application/json\n      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appsync-2017-07-25.normal.json\n      converter:\n        url: https://github.com/mermade/aws2openapi\n        version: 1.0.0\n      x-apisguru-direct: true\n  x-apiClientRegistration:\n    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct\n  x-apisguru-categories:\n    - cloud\n  x-preferred: true\nexternalDocs:\n  description: Amazon Web Services documentation\n  url: https://docs.aws.amazon.com/appsync/\nx-hasEquivalentPaths: true\nsecurity:\n  - hmac: []\npaths:\n  \"/v1/apis/{apiId}/apikeys\":\n    post:\n      operationId: CreateApiKey\n      description: Creates a unique key that you can distribute to clients who are\n        executing your API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateApiKeyResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"485\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"486\":\n          description: ApiKeyLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKeyLimitExceededException\"\n        \"487\":\n          description: ApiKeyValidityOutOfBoundsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKeyValidityOutOfBoundsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The ID for your GraphQL API.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A description of the purpose of the API key.\n                  type: string\n                expires:\n                  description: The time from creation time after which the API key expires.\n                    The date is represented as seconds since the epoch, rounded\n                    down to the nearest hour. The default value for this\n                    parameter is 7 days from creation time. For more\n                    information, see .\n                  type: integer\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListApiKeys\n      description: \u003cp\u003eLists the API keys for a given API.\u003c/p\u003e \u003cnote\u003e \u003cp\u003eAPI keys are\n        deleted automatically sometime after they expire. However, they may\n        still be included in the response until they have actually been deleted.\n        You can safely call \u003ccode\u003eDeleteApiKey\u003c/code\u003e to manually delete a key\n        before it's automatically deleted.\u003c/p\u003e \u003c/note\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListApiKeysResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: An identifier that was returned from the previous call to this\n            operation, which can be used to return the next set of items in the\n            list.\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n  \"/v1/apis/{apiId}/datasources\":\n    post:\n      operationId: CreateDataSource\n      description: Creates a \u003ccode\u003eDataSource\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateDataSourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID for the GraphQL API for the \u003ccode\u003eDataSource\u003c/code\u003e.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - type\n                - dynamodbConfig\n                - lambdaConfig\n                - elasticsearchConfig\n              properties:\n                name:\n                  description: A user-supplied name for the \u003ccode\u003eDataSource\u003c/code\u003e.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                description:\n                  description: A description of the \u003ccode\u003eDataSource\u003c/code\u003e.\n                  type: string\n                type:\n                  description: The type of the \u003ccode\u003eDataSource\u003c/code\u003e.\n                  type: string\n                  enum:\n                    - AWS_LAMBDA\n                    - AMAZON_DYNAMODB\n                    - AMAZON_ELASTICSEARCH\n                    - NONE\n                    - HTTP\n                    - RELATIONAL_DATABASE\n                serviceRoleArn:\n                  description: The AWS IAM service role ARN for the data source. The system\n                    assumes this role when accessing the data source.\n                  type: string\n                dynamodbConfig:\n                  description: Describes an Amazon DynamoDB data source configuration.\n                  type: object\n                  properties:\n                    tableName:\n                      $ref: \"#/components/schemas/String\"\n                    awsRegion:\n                      $ref: \"#/components/schemas/String\"\n                    useCallerCredentials:\n                      $ref: \"#/components/schemas/Boolean\"\n                lambdaConfig:\n                  description: Describes an AWS Lambda data source configuration.\n                  type: object\n                  properties:\n                    lambdaFunctionArn:\n                      $ref: \"#/components/schemas/String\"\n                elasticsearchConfig:\n                  description: Describes an Elasticsearch data source configuration.\n                  type: object\n                  properties:\n                    endpoint:\n                      $ref: \"#/components/schemas/String\"\n                    awsRegion:\n                      $ref: \"#/components/schemas/String\"\n                httpConfig:\n                  description: Describes an HTTP data source configuration.\n                  type: object\n                  properties:\n                    endpoint:\n                      $ref: \"#/components/schemas/String\"\n                    authorizationConfig:\n                      $ref: \"#/components/schemas/AuthorizationConfig\"\n                relationalDatabaseConfig:\n                  description: Describes a relational database data source configuration.\n                  type: object\n                  properties:\n                    relationalDatabaseSourceType:\n                      $ref: \"#/components/schemas/RelationalDatabaseSourceType\"\n                    rdsHttpEndpointConfig:\n                      $ref: \"#/components/schemas/RdsHttpEndpointConfig\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListDataSources\n      description: Lists the data sources for a given API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListDataSourcesResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \"An identifier that was returned from the previous call to this\n            operation, which can be used to return the next set of items in the\n            list. \"\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n  \"/v1/apis/{apiId}/functions\":\n    post:\n      operationId: CreateFunction\n      description: \u003cp\u003eCreates a \u003ccode\u003eFunction\u003c/code\u003e object.\u003c/p\u003e \u003cp\u003eA function is a\n        reusable entity. Multiple functions can be used to compose the resolver\n        logic.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateFunctionResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The GraphQL API ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - dataSourceName\n                - requestMappingTemplate\n                - functionVersion\n              properties:\n                name:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e name. The function name does not\n                    have to be unique.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                description:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e description.\n                  type: string\n                dataSourceName:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e \u003ccode\u003eDataSource\u003c/code\u003e name.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                requestMappingTemplate:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e request mapping template.\n                    Functions support only the 2018-05-29 version of the request\n                    mapping template.\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                responseMappingTemplate:\n                  description: \"The \u003ccode\u003eFunction\u003c/code\u003e response mapping template. \"\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                functionVersion:\n                  description: \"The \u003ccode\u003eversion\u003c/code\u003e of the request mapping template.\n                    Currently the supported value is 2018-05-29. \"\n                  type: string\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListFunctions\n      description: List multiple functions.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListFunctionsResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The GraphQL API ID.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: An identifier that was returned from the previous call to this\n            operation, which can be used to return the next set of items in the\n            list.\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n  /v1/apis:\n    post:\n      operationId: CreateGraphqlApi\n      description: Creates a \u003ccode\u003eGraphqlApi\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateGraphqlApiResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"482\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: ApiLimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiLimitExceededException\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - logConfig\n                - authenticationType\n                - userPoolConfig\n                - openIDConnectConfig\n              properties:\n                name:\n                  description: A user-supplied name for the \u003ccode\u003eGraphqlApi\u003c/code\u003e.\n                  type: string\n                logConfig:\n                  description: The CloudWatch Logs configuration.\n                  type: object\n                  properties:\n                    fieldLogLevel:\n                      $ref: \"#/components/schemas/FieldLogLevel\"\n                    cloudWatchLogsRoleArn:\n                      $ref: \"#/components/schemas/String\"\n                    excludeVerboseContent:\n                      $ref: \"#/components/schemas/Boolean\"\n                authenticationType:\n                  description: \"The authentication type: API key, AWS IAM, OIDC, or Amazon\n                    Cognito user pools.\"\n                  type: string\n                  enum:\n                    - API_KEY\n                    - AWS_IAM\n                    - AMAZON_COGNITO_USER_POOLS\n                    - OPENID_CONNECT\n                userPoolConfig:\n                  description: Describes an Amazon Cognito user pool configuration.\n                  type: object\n                  properties:\n                    userPoolId:\n                      $ref: \"#/components/schemas/String\"\n                    awsRegion:\n                      $ref: \"#/components/schemas/String\"\n                    defaultAction:\n                      $ref: \"#/components/schemas/DefaultAction\"\n                    appIdClientRegex:\n                      $ref: \"#/components/schemas/String\"\n                openIDConnectConfig:\n                  description: Describes an OpenID Connect configuration.\n                  type: object\n                  properties:\n                    issuer:\n                      $ref: \"#/components/schemas/String\"\n                    clientId:\n                      $ref: \"#/components/schemas/String\"\n                    iatTTL:\n                      $ref: \"#/components/schemas/Long\"\n                    authTTL:\n                      $ref: \"#/components/schemas/Long\"\n                tags:\n                  description: A map with keys of \u003ccode\u003eTagKey\u003c/code\u003e objects and values of\n                    \u003ccode\u003eTagValue\u003c/code\u003e objects.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n                additionalAuthenticationProviders:\n                  description: A list of additional authentication providers for the\n                    \u003ccode\u003eGraphqlApi\u003c/code\u003e API.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AdditionalAuthenticationProvider\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListGraphqlApis\n      description: Lists your GraphQL APIs.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListGraphqlApisResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"482\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: nextToken\n          in: query\n          required: false\n          description: \"An identifier that was returned from the previous call to this\n            operation, which can be used to return the next set of items in the\n            list. \"\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n  \"/v1/apis/{apiId}/types/{typeName}/resolvers\":\n    post:\n      operationId: CreateResolver\n      description: \u003cp\u003eCreates a \u003ccode\u003eResolver\u003c/code\u003e object.\u003c/p\u003e \u003cp\u003eA resolver converts\n        incoming requests into a format that a data source can understand and\n        converts the data source's responses into GraphQL.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateResolverResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The ID for the GraphQL API for which the resolver is being created.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The name of the \u003ccode\u003eType\u003c/code\u003e.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - fieldName\n                - requestMappingTemplate\n              properties:\n                fieldName:\n                  description: The name of the field to attach the resolver to.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                dataSourceName:\n                  description: The name of the data source for which the resolver is being\n                    created.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                requestMappingTemplate:\n                  description: \u003cp\u003eThe mapping template to be used for requests.\u003c/p\u003e \u003cp\u003eA\n                    resolver uses a request mapping template to convert a\n                    GraphQL expression into a format that a data source can\n                    understand. Mapping templates are written in Apache Velocity\n                    Template Language (VTL).\u003c/p\u003e\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                responseMappingTemplate:\n                  description: The mapping template to be used for responses from the data\n                    source.\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                kind:\n                  description: \"\u003cp\u003eThe resolver type.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eUNIT\u003c/b\u003e: A UNIT\n                    resolver type. A UNIT resolver is the default resolver type.\n                    A UNIT resolver enables you to execute a GraphQL query\n                    against a single data source.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n                    \u003cb\u003ePIPELINE\u003c/b\u003e: A PIPELINE resolver type. A PIPELINE\n                    resolver enables you to execute a series of\n                    \u003ccode\u003eFunction\u003c/code\u003e in a serial manner. You can use a\n                    pipeline resolver to execute a GraphQL query against\n                    multiple data sources.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n                  type: string\n                  enum:\n                    - UNIT\n                    - PIPELINE\n                pipelineConfig:\n                  description: The pipeline configuration for a resolver of kind\n                    \u003ccode\u003ePIPELINE\u003c/code\u003e.\n                  type: object\n                  properties:\n                    functions:\n                      $ref: \"#/components/schemas/FunctionsIds\"\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: ListResolvers\n      description: Lists the resolvers for a given API and type.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResolversResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The type name.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: \"An identifier that was returned from the previous call to this\n            operation, which can be used to return the next set of items in the\n            list. \"\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n  \"/v1/apis/{apiId}/types\":\n    post:\n      operationId: CreateType\n      description: Creates a \u003ccode\u003eType\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/CreateTypeResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - definition\n                - format\n              properties:\n                definition:\n                  description: \u003cp\u003eThe type definition, in GraphQL Schema Definition\n                    Language (SDL) format.\u003c/p\u003e \u003cp\u003eFor more information, see the\n                    \u003ca href=\"http://graphql.org/learn/schema/\"\u003eGraphQL SDL\n                    documentation\u003c/a\u003e.\u003c/p\u003e\n                  type: string\n                format:\n                  description: \"The type format: SDL or JSON.\"\n                  type: string\n                  enum:\n                    - SDL\n                    - JSON\n        required: true\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/v1/apis/{apiId}/apikeys/{id}\":\n    delete:\n      operationId: DeleteApiKey\n      description: Deletes an API key.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteApiKeyResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: id\n          in: path\n          required: true\n          description: The ID for the API key.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: UpdateApiKey\n      description: Updates an API key.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateApiKeyResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: ApiKeyValidityOutOfBoundsException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ApiKeyValidityOutOfBoundsException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The ID for the GraphQL API.\n          schema:\n            type: string\n        - name: id\n          in: path\n          required: true\n          description: The API key ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                description:\n                  description: A description of the purpose of the API key.\n                  type: string\n                expires:\n                  description: The time from update time after which the API key expires.\n                    The date is represented as seconds since the epoch. For more\n                    information, see .\n                  type: integer\n        required: true\n  \"/v1/apis/{apiId}/datasources/{name}\":\n    delete:\n      operationId: DeleteDataSource\n      description: Deletes a \u003ccode\u003eDataSource\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteDataSourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: name\n          in: path\n          required: true\n          description: The name of the data source.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetDataSource\n      description: Retrieves a \u003ccode\u003eDataSource\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetDataSourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: name\n          in: path\n          required: true\n          description: The name of the data source.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    post:\n      operationId: UpdateDataSource\n      description: Updates a \u003ccode\u003eDataSource\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateDataSourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: name\n          in: path\n          required: true\n          description: The new name for the data source.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - type\n                - dynamodbConfig\n                - lambdaConfig\n                - elasticsearchConfig\n              properties:\n                description:\n                  description: The new description for the data source.\n                  type: string\n                type:\n                  description: The new data source type.\n                  type: string\n                  enum:\n                    - AWS_LAMBDA\n                    - AMAZON_DYNAMODB\n                    - AMAZON_ELASTICSEARCH\n                    - NONE\n                    - HTTP\n                    - RELATIONAL_DATABASE\n                serviceRoleArn:\n                  description: The new service role ARN for the data source.\n                  type: string\n                dynamodbConfig:\n                  description: Describes an Amazon DynamoDB data source configuration.\n                  type: object\n                  properties:\n                    tableName:\n                      $ref: \"#/components/schemas/String\"\n                    awsRegion:\n                      $ref: \"#/components/schemas/String\"\n                    useCallerCredentials:\n                      $ref: \"#/components/schemas/Boolean\"\n                lambdaConfig:\n                  description: Describes an AWS Lambda data source configuration.\n                  type: object\n                  properties:\n                    lambdaFunctionArn:\n                      $ref: \"#/components/schemas/String\"\n                elasticsearchConfig:\n                  description: Describes an Elasticsearch data source configuration.\n                  type: object\n                  properties:\n                    endpoint:\n                      $ref: \"#/components/schemas/String\"\n                    awsRegion:\n                      $ref: \"#/components/schemas/String\"\n                httpConfig:\n                  description: Describes an HTTP data source configuration.\n                  type: object\n                  properties:\n                    endpoint:\n                      $ref: \"#/components/schemas/String\"\n                    authorizationConfig:\n                      $ref: \"#/components/schemas/AuthorizationConfig\"\n                relationalDatabaseConfig:\n                  description: Describes a relational database data source configuration.\n                  type: object\n                  properties:\n                    relationalDatabaseSourceType:\n                      $ref: \"#/components/schemas/RelationalDatabaseSourceType\"\n                    rdsHttpEndpointConfig:\n                      $ref: \"#/components/schemas/RdsHttpEndpointConfig\"\n        required: true\n  \"/v1/apis/{apiId}/functions/{functionId}\":\n    delete:\n      operationId: DeleteFunction\n      description: Deletes a \u003ccode\u003eFunction\u003c/code\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteFunctionResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The GraphQL API ID.\n          schema:\n            type: string\n        - name: functionId\n          in: path\n          required: true\n          description: The \u003ccode\u003eFunction\u003c/code\u003e ID.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetFunction\n      description: Get a \u003ccode\u003eFunction\u003c/code\u003e.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetFunctionResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The GraphQL API ID.\n          schema:\n            type: string\n        - name: functionId\n          in: path\n          required: true\n          description: The \u003ccode\u003eFunction\u003c/code\u003e ID.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    post:\n      operationId: UpdateFunction\n      description: Updates a \u003ccode\u003eFunction\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateFunctionResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The GraphQL API ID.\n          schema:\n            type: string\n        - name: functionId\n          in: path\n          required: true\n          description: The function ID.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - dataSourceName\n                - requestMappingTemplate\n                - functionVersion\n              properties:\n                name:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e name.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                description:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e description.\n                  type: string\n                dataSourceName:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e \u003ccode\u003eDataSource\u003c/code\u003e name.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                requestMappingTemplate:\n                  description: The \u003ccode\u003eFunction\u003c/code\u003e request mapping template.\n                    Functions support only the 2018-05-29 version of the request\n                    mapping template.\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                responseMappingTemplate:\n                  description: \"The \u003ccode\u003eFunction\u003c/code\u003e request mapping template. \"\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                functionVersion:\n                  description: \"The \u003ccode\u003eversion\u003c/code\u003e of the request mapping template.\n                    Currently the supported value is 2018-05-29. \"\n                  type: string\n        required: true\n  \"/v1/apis/{apiId}\":\n    delete:\n      operationId: DeleteGraphqlApi\n      description: Deletes a \u003ccode\u003eGraphqlApi\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteGraphqlApiResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetGraphqlApi\n      description: Retrieves a \u003ccode\u003eGraphqlApi\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetGraphqlApiResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"484\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID for the GraphQL API.\n          schema:\n            type: string\n    post:\n      operationId: UpdateGraphqlApi\n      description: Updates a \u003ccode\u003eGraphqlApi\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateGraphqlApiResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - name\n                - logConfig\n                - userPoolConfig\n                - openIDConnectConfig\n              properties:\n                name:\n                  description: The new name for the \u003ccode\u003eGraphqlApi\u003c/code\u003e object.\n                  type: string\n                logConfig:\n                  description: The CloudWatch Logs configuration.\n                  type: object\n                  properties:\n                    fieldLogLevel:\n                      $ref: \"#/components/schemas/FieldLogLevel\"\n                    cloudWatchLogsRoleArn:\n                      $ref: \"#/components/schemas/String\"\n                    excludeVerboseContent:\n                      $ref: \"#/components/schemas/Boolean\"\n                authenticationType:\n                  description: The new authentication type for the \u003ccode\u003eGraphqlApi\u003c/code\u003e\n                    object.\n                  type: string\n                  enum:\n                    - API_KEY\n                    - AWS_IAM\n                    - AMAZON_COGNITO_USER_POOLS\n                    - OPENID_CONNECT\n                userPoolConfig:\n                  description: Describes an Amazon Cognito user pool configuration.\n                  type: object\n                  properties:\n                    userPoolId:\n                      $ref: \"#/components/schemas/String\"\n                    awsRegion:\n                      $ref: \"#/components/schemas/String\"\n                    defaultAction:\n                      $ref: \"#/components/schemas/DefaultAction\"\n                    appIdClientRegex:\n                      $ref: \"#/components/schemas/String\"\n                openIDConnectConfig:\n                  description: Describes an OpenID Connect configuration.\n                  type: object\n                  properties:\n                    issuer:\n                      $ref: \"#/components/schemas/String\"\n                    clientId:\n                      $ref: \"#/components/schemas/String\"\n                    iatTTL:\n                      $ref: \"#/components/schemas/Long\"\n                    authTTL:\n                      $ref: \"#/components/schemas/Long\"\n                additionalAuthenticationProviders:\n                  description: A list of additional authentication providers for the\n                    \u003ccode\u003eGraphqlApi\u003c/code\u003e API.\n                  type: array\n                  items:\n                    $ref: \"#/components/schemas/AdditionalAuthenticationProvider\"\n        required: true\n  \"/v1/apis/{apiId}/types/{typeName}/resolvers/{fieldName}\":\n    delete:\n      operationId: DeleteResolver\n      description: Deletes a \u003ccode\u003eResolver\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteResolverResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The name of the resolver type.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n        - name: fieldName\n          in: path\n          required: true\n          description: The resolver field name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    get:\n      operationId: GetResolver\n      description: Retrieves a \u003ccode\u003eResolver\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetResolverResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The resolver type name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n        - name: fieldName\n          in: path\n          required: true\n          description: The resolver field name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    post:\n      operationId: UpdateResolver\n      description: Updates a \u003ccode\u003eResolver\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateResolverResponse\"\n        \"480\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The new type name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n        - name: fieldName\n          in: path\n          required: true\n          description: The new field name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - requestMappingTemplate\n              properties:\n                dataSourceName:\n                  description: The new data source name.\n                  type: string\n                  pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n                requestMappingTemplate:\n                  description: The new request mapping template.\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                responseMappingTemplate:\n                  description: The new response mapping template.\n                  type: string\n                  minLength: 1\n                  maxLength: 65536\n                kind:\n                  description: \"\u003cp\u003eThe resolver type.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eUNIT\u003c/b\u003e: A UNIT\n                    resolver type. A UNIT resolver is the default resolver type.\n                    A UNIT resolver enables you to execute a GraphQL query\n                    against a single data source.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n                    \u003cb\u003ePIPELINE\u003c/b\u003e: A PIPELINE resolver type. A PIPELINE\n                    resolver enables you to execute a series of\n                    \u003ccode\u003eFunction\u003c/code\u003e in a serial manner. You can use a\n                    pipeline resolver to execute a GraphQL query against\n                    multiple data sources.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n                  type: string\n                  enum:\n                    - UNIT\n                    - PIPELINE\n                pipelineConfig:\n                  description: The pipeline configuration for a resolver of kind\n                    \u003ccode\u003ePIPELINE\u003c/code\u003e.\n                  type: object\n                  properties:\n                    functions:\n                      $ref: \"#/components/schemas/FunctionsIds\"\n        required: true\n  \"/v1/apis/{apiId}/types/{typeName}\":\n    delete:\n      operationId: DeleteType\n      description: Deletes a \u003ccode\u003eType\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/DeleteTypeResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The type name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: UpdateType\n      description: Updates a \u003ccode\u003eType\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UpdateTypeResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The new type name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - format\n              properties:\n                definition:\n                  description: The new definition.\n                  type: string\n                format:\n                  description: \"The new type format: SDL or JSON.\"\n                  type: string\n                  enum:\n                    - SDL\n                    - JSON\n        required: true\n  \"/v1/apis/{apiId}/schema#format\":\n    get:\n      operationId: GetIntrospectionSchema\n      description: Retrieves the introspection schema for a GraphQL API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetIntrospectionSchemaResponse\"\n        \"480\":\n          description: GraphQLSchemaException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GraphQLSchemaException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: format\n          in: query\n          required: true\n          description: \"The schema format: SDL or JSON.\"\n          schema:\n            type: string\n            enum:\n              - SDL\n              - JSON\n        - name: includeDirectives\n          in: query\n          required: false\n          description: A flag that specifies whether the schema introspection should\n            contain directives.\n          schema:\n            type: boolean\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/v1/apis/{apiId}/schemacreation\":\n    get:\n      operationId: GetSchemaCreationStatus\n      description: Retrieves the current status of a schema creation operation.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetSchemaCreationStatusResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: StartSchemaCreation\n      description: \u003cp\u003eAdds a new schema to your GraphQL API.\u003c/p\u003e \u003cp\u003eThis operation is\n        asynchronous. Use to determine when it has completed.\u003c/p\u003e\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/StartSchemaCreationResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - definition\n              properties:\n                definition:\n                  description: The schema definition, in GraphQL schema language format.\n                  type: string\n        required: true\n  \"/v1/apis/{apiId}/types/{typeName}#format\":\n    get:\n      operationId: GetType\n      description: Retrieves a \u003ccode\u003eType\u003c/code\u003e object.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GetTypeResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: typeName\n          in: path\n          required: true\n          description: The type name.\n          schema:\n            type: string\n            pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n        - name: format\n          in: query\n          required: true\n          description: \"The type format: SDL or JSON.\"\n          schema:\n            type: string\n            enum:\n              - SDL\n              - JSON\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/v1/apis/{apiId}/functions/{functionId}/resolvers\":\n    get:\n      operationId: ListResolversByFunction\n      description: List the resolvers that are associated with a specific function.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListResolversByFunctionResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"483\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: functionId\n          in: path\n          required: true\n          description: The Function ID.\n          schema:\n            type: string\n        - name: nextToken\n          in: query\n          required: false\n          description: An identifier that was returned from the previous call to this\n            operation, which you can use to return the next set of items in the\n            list.\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/v1/tags/{resourceArn}\":\n    get:\n      operationId: ListTagsForResource\n      description: Lists the tags for a resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTagsForResourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The \u003ccode\u003eGraphqlApi\u003c/code\u003e ARN.\n          schema:\n            type: string\n            minLength: 70\n            maxLength: 75\n            pattern: ^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n    post:\n      operationId: TagResource\n      description: Tags a resource with user-supplied tags.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/TagResourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The \u003ccode\u003eGraphqlApi\u003c/code\u003e ARN.\n          schema:\n            type: string\n            minLength: 70\n            maxLength: 75\n            pattern: ^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - tags\n              properties:\n                tags:\n                  description: A map with keys of \u003ccode\u003eTagKey\u003c/code\u003e objects and values of\n                    \u003ccode\u003eTagValue\u003c/code\u003e objects.\n                  type: object\n                  minProperties: 1\n                  maxProperties: 50\n                  additionalProperties:\n                    $ref: \"#/components/schemas/TagValue\"\n        required: true\n  \"/v1/apis/{apiId}/types#format\":\n    get:\n      operationId: ListTypes\n      description: Lists the types for a given API.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ListTypesResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: ConcurrentModificationException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/ConcurrentModificationException\"\n        \"482\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n      parameters:\n        - name: apiId\n          in: path\n          required: true\n          description: The API ID.\n          schema:\n            type: string\n        - name: format\n          in: query\n          required: true\n          description: \"The type format: SDL or JSON.\"\n          schema:\n            type: string\n            enum:\n              - SDL\n              - JSON\n        - name: nextToken\n          in: query\n          required: false\n          description: \"An identifier that was returned from the previous call to this\n            operation, which can be used to return the next set of items in the\n            list. \"\n          schema:\n            type: string\n            pattern: \"[\\\\\\\\S]+\"\n        - name: maxResults\n          in: query\n          required: false\n          description: The maximum number of results you want the request to return.\n          schema:\n            type: integer\n            minimum: 0\n            maximum: 25\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\n  \"/v1/tags/{resourceArn}#tagKeys\":\n    delete:\n      operationId: UntagResource\n      description: Untags a resource.\n      responses:\n        \"200\":\n          description: Success\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UntagResourceResponse\"\n        \"480\":\n          description: BadRequestException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/BadRequestException\"\n        \"481\":\n          description: NotFoundException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/NotFoundException\"\n        \"482\":\n          description: LimitExceededException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/LimitExceededException\"\n        \"483\":\n          description: UnauthorizedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/UnauthorizedException\"\n        \"484\":\n          description: InternalFailureException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/InternalFailureException\"\n        \"485\":\n          description: AccessDeniedException\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/AccessDeniedException\"\n      parameters:\n        - name: resourceArn\n          in: path\n          required: true\n          description: The \u003ccode\u003eGraphqlApi\u003c/code\u003e ARN.\n          schema:\n            type: string\n            minLength: 70\n            maxLength: 75\n            pattern: ^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$\n        - name: tagKeys\n          in: query\n          required: true\n          description: A list of \u003ccode\u003eTagKey\u003c/code\u003e objects.\n          schema:\n            type: array\n            items:\n              type: string\n    parameters:\n      - $ref: \"#/components/parameters/X-Amz-Content-Sha256\"\n      - $ref: \"#/components/parameters/X-Amz-Date\"\n      - $ref: \"#/components/parameters/X-Amz-Algorithm\"\n      - $ref: \"#/components/parameters/X-Amz-Credential\"\n      - $ref: \"#/components/parameters/X-Amz-Security-Token\"\n      - $ref: \"#/components/parameters/X-Amz-Signature\"\n      - $ref: \"#/components/parameters/X-Amz-SignedHeaders\"\nservers:\n  - url: http://appsync.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWSAppSync multi-region endpoint\n  - url: https://appsync.{region}.amazonaws.com\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - us-east-1\n          - us-east-2\n          - us-west-1\n          - us-west-2\n          - us-gov-west-1\n          - us-gov-east-1\n          - ca-central-1\n          - eu-north-1\n          - eu-west-1\n          - eu-west-2\n          - eu-west-3\n          - eu-central-1\n          - ap-northeast-1\n          - ap-northeast-2\n          - ap-northeast-3\n          - ap-southeast-1\n          - ap-southeast-2\n          - ap-south-1\n          - sa-east-1\n        default: us-east-1\n    description: The AWSAppSync multi-region endpoint\n  - url: http://appsync.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWSAppSync endpoint for China (Beijing) and China (Ningxia)\n  - url: https://appsync.{region}.amazonaws.com.cn\n    variables:\n      region:\n        description: The AWS region\n        enum:\n          - cn-north-1\n          - cn-northwest-1\n        default: cn-north-1\n    description: The AWSAppSync endpoint for China (Beijing) and China (Ningxia)\ncomponents:\n  parameters:\n    X-Amz-Content-Sha256:\n      name: X-Amz-Content-Sha256\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Date:\n      name: X-Amz-Date\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Algorithm:\n      name: X-Amz-Algorithm\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Credential:\n      name: X-Amz-Credential\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Security-Token:\n      name: X-Amz-Security-Token\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-Signature:\n      name: X-Amz-Signature\n      in: header\n      required: false\n      schema:\n        type: string\n    X-Amz-SignedHeaders:\n      name: X-Amz-SignedHeaders\n      in: header\n      required: false\n      schema:\n        type: string\n  securitySchemes:\n    hmac:\n      type: apiKey\n      name: Authorization\n      in: header\n      description: Amazon Signature authorization v4\n      x-amazon-apigateway-authtype: awsSigv4\n  schemas:\n    CreateApiKeyResponse:\n      type: object\n      properties:\n        apiKey:\n          $ref: \"#/components/schemas/ApiKey\"\n    BadRequestException: {}\n    NotFoundException: {}\n    LimitExceededException: {}\n    UnauthorizedException: {}\n    InternalFailureException: {}\n    ApiKeyLimitExceededException: {}\n    ApiKeyValidityOutOfBoundsException: {}\n    CreateDataSourceResponse:\n      type: object\n      properties:\n        dataSource:\n          $ref: \"#/components/schemas/DataSource\"\n    String:\n      type: string\n    Boolean:\n      type: boolean\n    AuthorizationConfig:\n      type: object\n      required:\n        - authorizationType\n      properties:\n        authorizationType:\n          $ref: \"#/components/schemas/AuthorizationType\"\n        awsIamConfig:\n          $ref: \"#/components/schemas/AwsIamConfig\"\n      description: The authorization config in case the HTTP endpoint requires\n        authorization.\n    RelationalDatabaseSourceType:\n      type: string\n      enum:\n        - RDS_HTTP_ENDPOINT\n    RdsHttpEndpointConfig:\n      type: object\n      properties:\n        awsRegion:\n          $ref: \"#/components/schemas/String\"\n        dbClusterIdentifier:\n          $ref: \"#/components/schemas/String\"\n        databaseName:\n          $ref: \"#/components/schemas/String\"\n        schema:\n          $ref: \"#/components/schemas/String\"\n        awsSecretStoreArn:\n          $ref: \"#/components/schemas/String\"\n      description: The Amazon RDS HTTP endpoint configuration.\n    ConcurrentModificationException: {}\n    CreateFunctionResponse:\n      type: object\n      properties:\n        functionConfiguration:\n          $ref: \"#/components/schemas/FunctionConfiguration\"\n    CreateGraphqlApiResponse:\n      type: object\n      properties:\n        graphqlApi:\n          $ref: \"#/components/schemas/GraphqlApi\"\n    FieldLogLevel:\n      type: string\n      enum:\n        - NONE\n        - ERROR\n        - ALL\n    DefaultAction:\n      type: string\n      enum:\n        - ALLOW\n        - DENY\n    Long:\n      type: integer\n    TagValue:\n      type: string\n      description: The value for the tag.\n      maxLength: 256\n    AdditionalAuthenticationProvider:\n      type: object\n      properties:\n        authenticationType:\n          $ref: \"#/components/schemas/AuthenticationType\"\n        openIDConnectConfig:\n          $ref: \"#/components/schemas/OpenIDConnectConfig\"\n        userPoolConfig:\n          $ref: \"#/components/schemas/CognitoUserPoolConfig\"\n      description: Describes an additional authentication provider.\n    ApiLimitExceededException: {}\n    CreateResolverResponse:\n      type: object\n      properties:\n        resolver:\n          $ref: \"#/components/schemas/Resolver\"\n    FunctionsIds:\n      type: array\n      items:\n        $ref: \"#/components/schemas/String\"\n    CreateTypeResponse:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/Type\"\n    DeleteApiKeyResponse:\n      type: object\n      properties: {}\n    DeleteDataSourceResponse:\n      type: object\n      properties: {}\n    DeleteFunctionResponse:\n      type: object\n      properties: {}\n    DeleteGraphqlApiResponse:\n      type: object\n      properties: {}\n    AccessDeniedException: {}\n    DeleteResolverResponse:\n      type: object\n      properties: {}\n    DeleteTypeResponse:\n      type: object\n      properties: {}\n    GetDataSourceResponse:\n      type: object\n      properties:\n        dataSource:\n          $ref: \"#/components/schemas/DataSource\"\n    GetFunctionResponse:\n      type: object\n      properties:\n        functionConfiguration:\n          $ref: \"#/components/schemas/FunctionConfiguration\"\n    GetGraphqlApiResponse:\n      type: object\n      properties:\n        graphqlApi:\n          $ref: \"#/components/schemas/GraphqlApi\"\n    GetIntrospectionSchemaResponse:\n      type: object\n      properties:\n        schema:\n          $ref: \"#/components/schemas/Blob\"\n    GraphQLSchemaException: {}\n    GetResolverResponse:\n      type: object\n      properties:\n        resolver:\n          $ref: \"#/components/schemas/Resolver\"\n    GetSchemaCreationStatusResponse:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/SchemaStatus\"\n        details:\n          $ref: \"#/components/schemas/String\"\n    GetTypeResponse:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/Type\"\n    ListApiKeysResponse:\n      type: object\n      properties:\n        apiKeys:\n          $ref: \"#/components/schemas/ApiKeys\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListDataSourcesResponse:\n      type: object\n      properties:\n        dataSources:\n          $ref: \"#/components/schemas/DataSources\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListFunctionsResponse:\n      type: object\n      properties:\n        functions:\n          $ref: \"#/components/schemas/Functions\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListGraphqlApisResponse:\n      type: object\n      properties:\n        graphqlApis:\n          $ref: \"#/components/schemas/GraphqlApis\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListResolversResponse:\n      type: object\n      properties:\n        resolvers:\n          $ref: \"#/components/schemas/Resolvers\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListResolversByFunctionResponse:\n      type: object\n      properties:\n        resolvers:\n          $ref: \"#/components/schemas/Resolvers\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    ListTagsForResourceResponse:\n      type: object\n      properties:\n        tags:\n          $ref: \"#/components/schemas/TagMap\"\n    ListTypesResponse:\n      type: object\n      properties:\n        types:\n          $ref: \"#/components/schemas/TypeList\"\n        nextToken:\n          $ref: \"#/components/schemas/PaginationToken\"\n    StartSchemaCreationResponse:\n      type: object\n      properties:\n        status:\n          $ref: \"#/components/schemas/SchemaStatus\"\n    TagResourceResponse:\n      type: object\n      properties: {}\n    UntagResourceResponse:\n      type: object\n      properties: {}\n    TagKey:\n      type: string\n      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$\n      description: The key for the tag.\n      minLength: 1\n      maxLength: 128\n    UpdateApiKeyResponse:\n      type: object\n      properties:\n        apiKey:\n          $ref: \"#/components/schemas/ApiKey\"\n    UpdateDataSourceResponse:\n      type: object\n      properties:\n        dataSource:\n          $ref: \"#/components/schemas/DataSource\"\n    UpdateFunctionResponse:\n      type: object\n      properties:\n        functionConfiguration:\n          $ref: \"#/components/schemas/FunctionConfiguration\"\n    UpdateGraphqlApiResponse:\n      type: object\n      properties:\n        graphqlApi:\n          $ref: \"#/components/schemas/GraphqlApi\"\n    UpdateResolverResponse:\n      type: object\n      properties:\n        resolver:\n          $ref: \"#/components/schemas/Resolver\"\n    UpdateTypeResponse:\n      type: object\n      properties:\n        type:\n          $ref: \"#/components/schemas/Type\"\n    AuthenticationType:\n      type: string\n      enum:\n        - API_KEY\n        - AWS_IAM\n        - AMAZON_COGNITO_USER_POOLS\n        - OPENID_CONNECT\n    OpenIDConnectConfig:\n      type: object\n      required:\n        - issuer\n      properties:\n        issuer:\n          $ref: \"#/components/schemas/String\"\n        clientId:\n          $ref: \"#/components/schemas/String\"\n        iatTTL:\n          $ref: \"#/components/schemas/Long\"\n        authTTL:\n          $ref: \"#/components/schemas/Long\"\n      description: Describes an OpenID Connect configuration.\n    CognitoUserPoolConfig:\n      type: object\n      required:\n        - userPoolId\n        - awsRegion\n      properties:\n        userPoolId:\n          $ref: \"#/components/schemas/String\"\n        awsRegion:\n          $ref: \"#/components/schemas/String\"\n        appIdClientRegex:\n          $ref: \"#/components/schemas/String\"\n      description: Describes an Amazon Cognito user pool configuration.\n    AdditionalAuthenticationProviders:\n      type: array\n      items:\n        $ref: \"#/components/schemas/AdditionalAuthenticationProvider\"\n    ApiKey:\n      type: object\n      properties:\n        id:\n          $ref: \"#/components/schemas/String\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        expires:\n          $ref: \"#/components/schemas/Long\"\n      description: \"\u003cp\u003eDescribes an API key.\u003c/p\u003e \u003cp\u003eCustomers invoke AWS AppSync GraphQL\n        API operations with API keys as an identity mechanism. There are two key\n        versions:\u003c/p\u003e \u003cp\u003e \u003cb\u003eda1\u003c/b\u003e: This version was introduced at launch in\n        November 2017. These keys always expire after 7 days. Key expiration is\n        managed by Amazon DynamoDB TTL. The keys ceased to be valid after\n        February 21, 2018 and should not be used after that date.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\n        \u003cp\u003e \u003ccode\u003eListApiKeys\u003c/code\u003e returns the expiration time in\n        milliseconds.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCreateApiKey\u003c/code\u003e returns the\n        expiration time in milliseconds.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\n        \u003ccode\u003eUpdateApiKey\u003c/code\u003e is not available for this key version.\u003c/p\u003e\n        \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDeleteApiKey\u003c/code\u003e deletes the item from the\n        table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eExpiration is stored in Amazon DynamoDB as\n        milliseconds. This results in a bug where keys are not automatically\n        deleted because DynamoDB expects the TTL to be stored in seconds. As a\n        one-time action, we will delete these keys from the table after February\n        21, 2018.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eda2\u003c/b\u003e: This version was introduced in\n        February 2018 when AppSync added support to extend key expiration.\u003c/p\u003e\n        \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eListApiKeys\u003c/code\u003e returns the expiration time in\n        seconds.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eCreateApiKey\u003c/code\u003e returns the\n        expiration time in seconds and accepts a user-provided expiration time\n        in seconds.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eUpdateApiKey\u003c/code\u003e returns the\n        expiration time in seconds and accepts a user-provided expiration time\n        in seconds. Key expiration can only be updated while the key has not\n        expired.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003ccode\u003eDeleteApiKey\u003c/code\u003e deletes the item\n        from the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eExpiration is stored in Amazon\n        DynamoDB as seconds.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e\"\n    ApiKeys:\n      type: array\n      items:\n        $ref: \"#/components/schemas/ApiKey\"\n    AuthorizationType:\n      type: string\n      enum:\n        - AWS_IAM\n    AwsIamConfig:\n      type: object\n      properties:\n        signingRegion:\n          $ref: \"#/components/schemas/String\"\n        signingServiceName:\n          $ref: \"#/components/schemas/String\"\n      description: The AWS IAM configuration.\n    Blob:\n      type: string\n    BooleanValue:\n      type: boolean\n    CreateApiKeyRequest:\n      type: object\n      properties:\n        description:\n          $ref: \"#/components/schemas/String\"\n        expires:\n          $ref: \"#/components/schemas/Long\"\n    ResourceName:\n      type: string\n      pattern: \"[_A-Za-z][_0-9A-Za-z]*\"\n    DataSourceType:\n      type: string\n      enum:\n        - AWS_LAMBDA\n        - AMAZON_DYNAMODB\n        - AMAZON_ELASTICSEARCH\n        - NONE\n        - HTTP\n        - RELATIONAL_DATABASE\n    DynamodbDataSourceConfig:\n      type: object\n      required:\n        - tableName\n        - awsRegion\n      properties:\n        tableName:\n          $ref: \"#/components/schemas/String\"\n        awsRegion:\n          $ref: \"#/components/schemas/String\"\n        useCallerCredentials:\n          $ref: \"#/components/schemas/Boolean\"\n      description: Describes an Amazon DynamoDB data source configuration.\n    LambdaDataSourceConfig:\n      type: object\n      required:\n        - lambdaFunctionArn\n      properties:\n        lambdaFunctionArn:\n          $ref: \"#/components/schemas/String\"\n      description: Describes an AWS Lambda data source configuration.\n    ElasticsearchDataSourceConfig:\n      type: object\n      required:\n        - endpoint\n        - awsRegion\n      properties:\n        endpoint:\n          $ref: \"#/components/schemas/String\"\n        awsRegion:\n          $ref: \"#/components/schemas/String\"\n      description: Describes an Elasticsearch data source configuration.\n    HttpDataSourceConfig:\n      type: object\n      properties:\n        endpoint:\n          $ref: \"#/components/schemas/String\"\n        authorizationConfig:\n          $ref: \"#/components/schemas/AuthorizationConfig\"\n      description: Describes an HTTP data source configuration.\n    RelationalDatabaseDataSourceConfig:\n      type: object\n      properties:\n        relationalDatabaseSourceType:\n          $ref: \"#/components/schemas/RelationalDatabaseSourceType\"\n        rdsHttpEndpointConfig:\n          $ref: \"#/components/schemas/RdsHttpEndpointConfig\"\n      description: Describes a relational database data source configuration.\n    CreateDataSourceRequest:\n      type: object\n      required:\n        - name\n        - type\n      properties:\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        type:\n          $ref: \"#/components/schemas/DataSourceType\"\n        serviceRoleArn:\n          $ref: \"#/components/schemas/String\"\n        dynamodbConfig:\n          $ref: \"#/components/schemas/DynamodbDataSourceConfig\"\n        lambdaConfig:\n          $ref: \"#/components/schemas/LambdaDataSourceConfig\"\n        elasticsearchConfig:\n          $ref: \"#/components/schemas/ElasticsearchDataSourceConfig\"\n        httpConfig:\n          $ref: \"#/components/schemas/HttpDataSourceConfig\"\n        relationalDatabaseConfig:\n          $ref: \"#/components/schemas/RelationalDatabaseDataSourceConfig\"\n    DataSource:\n      type: object\n      properties:\n        dataSourceArn:\n          $ref: \"#/components/schemas/String\"\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        type:\n          $ref: \"#/components/schemas/DataSourceType\"\n        serviceRoleArn:\n          $ref: \"#/components/schemas/String\"\n        dynamodbConfig:\n          $ref: \"#/components/schemas/DynamodbDataSourceConfig\"\n        lambdaConfig:\n          $ref: \"#/components/schemas/LambdaDataSourceConfig\"\n        elasticsearchConfig:\n          $ref: \"#/components/schemas/ElasticsearchDataSourceConfig\"\n        httpConfig:\n          $ref: \"#/components/schemas/HttpDataSourceConfig\"\n        relationalDatabaseConfig:\n          $ref: \"#/components/schemas/RelationalDatabaseDataSourceConfig\"\n      description: Describes a data source.\n    MappingTemplate:\n      type: string\n      minLength: 1\n      maxLength: 65536\n    CreateFunctionRequest:\n      type: object\n      required:\n        - name\n        - dataSourceName\n        - requestMappingTemplate\n        - functionVersion\n      properties:\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        dataSourceName:\n          $ref: \"#/components/schemas/ResourceName\"\n        requestMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        responseMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        functionVersion:\n          $ref: \"#/components/schemas/String\"\n    FunctionConfiguration:\n      type: object\n      properties:\n        functionId:\n          $ref: \"#/components/schemas/String\"\n        functionArn:\n          $ref: \"#/components/schemas/String\"\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        dataSourceName:\n          $ref: \"#/components/schemas/ResourceName\"\n        requestMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        responseMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        functionVersion:\n          $ref: \"#/components/schemas/String\"\n      description: A function is a reusable entity. Multiple functions can be used to\n        compose the resolver logic.\n    LogConfig:\n      type: object\n      required:\n        - fieldLogLevel\n        - cloudWatchLogsRoleArn\n      properties:\n        fieldLogLevel:\n          $ref: \"#/components/schemas/FieldLogLevel\"\n        cloudWatchLogsRoleArn:\n          $ref: \"#/components/schemas/String\"\n        excludeVerboseContent:\n          $ref: \"#/components/schemas/Boolean\"\n      description: The CloudWatch Logs configuration.\n    UserPoolConfig:\n      type: object\n      required:\n        - userPoolId\n        - awsRegion\n        - defaultAction\n      properties:\n        userPoolId:\n          $ref: \"#/components/schemas/String\"\n        awsRegion:\n          $ref: \"#/components/schemas/String\"\n        defaultAction:\n          $ref: \"#/components/schemas/DefaultAction\"\n        appIdClientRegex:\n          $ref: \"#/components/schemas/String\"\n      description: Describes an Amazon Cognito user pool configuration.\n    TagMap:\n      type: object\n      description: A map with keys of \u003ccode\u003eTagKey\u003c/code\u003e objects and values of\n        \u003ccode\u003eTagValue\u003c/code\u003e objects.\n      minProperties: 1\n      maxProperties: 50\n      additionalProperties:\n        $ref: \"#/components/schemas/TagValue\"\n    CreateGraphqlApiRequest:\n      type: object\n      required:\n        - name\n        - authenticationType\n      properties:\n        name:\n          $ref: \"#/components/schemas/String\"\n        logConfig:\n          $ref: \"#/components/schemas/LogConfig\"\n        authenticationType:\n          $ref: \"#/components/schemas/AuthenticationType\"\n        userPoolConfig:\n          $ref: \"#/components/schemas/UserPoolConfig\"\n        openIDConnectConfig:\n          $ref: \"#/components/schemas/OpenIDConnectConfig\"\n        tags:\n          $ref: \"#/components/schemas/TagMap\"\n        additionalAuthenticationProviders:\n          $ref: \"#/components/schemas/AdditionalAuthenticationProviders\"\n    GraphqlApi:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        apiId:\n          $ref: \"#/components/schemas/String\"\n        authenticationType:\n          $ref: \"#/components/schemas/AuthenticationType\"\n        logConfig:\n          $ref: \"#/components/schemas/LogConfig\"\n        userPoolConfig:\n          $ref: \"#/components/schemas/UserPoolConfig\"\n        openIDConnectConfig:\n          $ref: \"#/components/schemas/OpenIDConnectConfig\"\n        arn:\n          $ref: \"#/components/schemas/String\"\n        uris:\n          $ref: \"#/components/schemas/MapOfStringToString\"\n        tags:\n          $ref: \"#/components/schemas/TagMap\"\n        additionalAuthenticationProviders:\n          $ref: \"#/components/schemas/AdditionalAuthenticationProviders\"\n      description: Describes a GraphQL API.\n    ResolverKind:\n      type: string\n      enum:\n        - UNIT\n        - PIPELINE\n    PipelineConfig:\n      type: object\n      properties:\n        functions:\n          $ref: \"#/components/schemas/FunctionsIds\"\n      description: The pipeline configuration for a resolver of kind \u003ccode\u003ePIPELINE\u003c/code\u003e.\n    CreateResolverRequest:\n      type: object\n      required:\n        - fieldName\n        - requestMappingTemplate\n      properties:\n        fieldName:\n          $ref: \"#/components/schemas/ResourceName\"\n        dataSourceName:\n          $ref: \"#/components/schemas/ResourceName\"\n        requestMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        responseMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        kind:\n          $ref: \"#/components/schemas/ResolverKind\"\n        pipelineConfig:\n          $ref: \"#/components/schemas/PipelineConfig\"\n    Resolver:\n      type: object\n      properties:\n        typeName:\n          $ref: \"#/components/schemas/ResourceName\"\n        fieldName:\n          $ref: \"#/components/schemas/ResourceName\"\n        dataSourceName:\n          $ref: \"#/components/schemas/ResourceName\"\n        resolverArn:\n          $ref: \"#/components/schemas/String\"\n        requestMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        responseMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        kind:\n          $ref: \"#/components/schemas/ResolverKind\"\n        pipelineConfig:\n          $ref: \"#/components/schemas/PipelineConfig\"\n      description: Describes a resolver.\n    TypeDefinitionFormat:\n      type: string\n      enum:\n        - SDL\n        - JSON\n    CreateTypeRequest:\n      type: object\n      required:\n        - definition\n        - format\n      properties:\n        definition:\n          $ref: \"#/components/schemas/String\"\n        format:\n          $ref: \"#/components/schemas/TypeDefinitionFormat\"\n    Type:\n      type: object\n      properties:\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        arn:\n          $ref: \"#/components/schemas/String\"\n        definition:\n          $ref: \"#/components/schemas/String\"\n        format:\n          $ref: \"#/components/schemas/TypeDefinitionFormat\"\n      description: Describes a type.\n    DataSources:\n      type: array\n      items:\n        $ref: \"#/components/schemas/DataSource\"\n    DeleteApiKeyRequest:\n      type: object\n      properties: {}\n    DeleteDataSourceRequest:\n      type: object\n      properties: {}\n    DeleteFunctionRequest:\n      type: object\n      properties: {}\n    DeleteGraphqlApiRequest:\n      type: object\n      properties: {}\n    DeleteResolverRequest:\n      type: object\n      properties: {}\n    DeleteTypeRequest:\n      type: object\n      properties: {}\n    Functions:\n      type: array\n      items:\n        $ref: \"#/components/schemas/FunctionConfiguration\"\n    GetDataSourceRequest:\n      type: object\n      properties: {}\n    GetFunctionRequest:\n      type: object\n      properties: {}\n    GetGraphqlApiRequest:\n      type: object\n      properties: {}\n    OutputType:\n      type: string\n      enum:\n        - SDL\n        - JSON\n    GetIntrospectionSchemaRequest:\n      type: object\n      properties: {}\n    GetResolverRequest:\n      type: object\n      properties: {}\n    GetSchemaCreationStatusRequest:\n      type: object\n      properties: {}\n    SchemaStatus:\n      type: string\n      enum:\n        - PROCESSING\n        - ACTIVE\n        - DELETING\n        - FAILED\n        - SUCCESS\n        - NOT_APPLICABLE\n    GetTypeRequest:\n      type: object\n      properties: {}\n    MapOfStringToString:\n      type: object\n      additionalProperties:\n        $ref: \"#/components/schemas/String\"\n    GraphqlApis:\n      type: array\n      items:\n        $ref: \"#/components/schemas/GraphqlApi\"\n    PaginationToken:\n      type: string\n      pattern: \"[\\\\\\\\S]+\"\n    MaxResults:\n      type: integer\n      minimum: 0\n      maximum: 25\n    ListApiKeysRequest:\n      type: object\n      properties: {}\n    ListDataSourcesRequest:\n      type: object\n      properties: {}\n    ListFunctionsRequest:\n      type: object\n      properties: {}\n    ListGraphqlApisRequest:\n      type: object\n      properties: {}\n    ListResolversByFunctionRequest:\n      type: object\n      properties: {}\n    Resolvers:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Resolver\"\n    ListResolversRequest:\n      type: object\n      properties: {}\n    ResourceArn:\n      type: string\n      pattern: ^arn:aws:appsync:[A-Za-z0-9_/.-]{0,63}:\\d{12}:apis/[0-9A-Za-z_-]{26}$\n      minLength: 70\n      maxLength: 75\n    ListTagsForResourceRequest:\n      type: object\n      properties: {}\n    ListTypesRequest:\n      type: object\n      properties: {}\n    TypeList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/Type\"\n    StartSchemaCreationRequest:\n      type: object\n      required:\n        - definition\n      properties:\n        definition:\n          $ref: \"#/components/schemas/Blob\"\n    TagKeyList:\n      type: array\n      items:\n        $ref: \"#/components/schemas/TagKey\"\n      minItems: 1\n      maxItems: 50\n    TagResourceRequest:\n      type: object\n      required:\n        - tags\n      properties:\n        tags:\n          $ref: \"#/components/schemas/TagMap\"\n    UntagResourceRequest:\n      type: object\n      properties: {}\n    UpdateApiKeyRequest:\n      type: object\n      properties:\n        description:\n          $ref: \"#/components/schemas/String\"\n        expires:\n          $ref: \"#/components/schemas/Long\"\n    UpdateDataSourceRequest:\n      type: object\n      required:\n        - type\n      properties:\n        description:\n          $ref: \"#/components/schemas/String\"\n        type:\n          $ref: \"#/components/schemas/DataSourceType\"\n        serviceRoleArn:\n          $ref: \"#/components/schemas/String\"\n        dynamodbConfig:\n          $ref: \"#/components/schemas/DynamodbDataSourceConfig\"\n        lambdaConfig:\n          $ref: \"#/components/schemas/LambdaDataSourceConfig\"\n        elasticsearchConfig:\n          $ref: \"#/components/schemas/ElasticsearchDataSourceConfig\"\n        httpConfig:\n          $ref: \"#/components/schemas/HttpDataSourceConfig\"\n        relationalDatabaseConfig:\n          $ref: \"#/components/schemas/RelationalDatabaseDataSourceConfig\"\n    UpdateFunctionRequest:\n      type: object\n      required:\n        - name\n        - dataSourceName\n        - requestMappingTemplate\n        - functionVersion\n      properties:\n        name:\n          $ref: \"#/components/schemas/ResourceName\"\n        description:\n          $ref: \"#/components/schemas/String\"\n        dataSourceName:\n          $ref: \"#/components/schemas/ResourceName\"\n        requestMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        responseMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        functionVersion:\n          $ref: \"#/components/schemas/String\"\n    UpdateGraphqlApiRequest:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          $ref: \"#/components/schemas/String\"\n        logConfig:\n          $ref: \"#/components/schemas/LogConfig\"\n        authenticationType:\n          $ref: \"#/components/schemas/AuthenticationType\"\n        userPoolConfig:\n          $ref: \"#/components/schemas/UserPoolConfig\"\n        openIDConnectConfig:\n          $ref: \"#/components/schemas/OpenIDConnectConfig\"\n        additionalAuthenticationProviders:\n          $ref: \"#/components/schemas/AdditionalAuthenticationProviders\"\n    UpdateResolverRequest:\n      type: object\n      required:\n        - requestMappingTemplate\n      properties:\n        dataSourceName:\n          $ref: \"#/components/schemas/ResourceName\"\n        requestMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        responseMappingTemplate:\n          $ref: \"#/components/schemas/MappingTemplate\"\n        kind:\n          $ref: \"#/components/schemas/ResolverKind\"\n        pipelineConfig:\n          $ref: \"#/components/schemas/PipelineConfig\"\n    UpdateTypeRequest:\n      type: object\n      required:\n        - format\n      properties:\n        definition:\n          $ref: \"#/components/schemas/String\"\n        format:\n          $ref: \"#/components/schemas/TypeDefinitionFormat\"\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /v1/apis/{apiId}/schema#format: get: operation \"GetIntrospectionSchema\": parse path \"/v1/apis/{apiId}/schema#format\": path MUST NOT contain a fragment"
}