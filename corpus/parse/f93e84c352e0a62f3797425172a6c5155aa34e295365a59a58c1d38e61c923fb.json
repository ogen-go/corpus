{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/rapi-doc/RapiDoc"
		},
		"file": {
			"name": "xxx-of-nesting-with-expand-level.yaml",
			"size": 0,
			"path": "docs/specs/xxx-of-nesting-with-expand-level.yaml",
			"byteSize": 2392,
			"content": "openapi: 3.0.3\ninfo:\n  title: One Of Nesting with Schema Expand level\n  description: \u003e\n    this test case demonstrate covers the following scenarios\n    - nesting of `one-of`, `any-of`\n    - nested `one-of` contains \n      - only primitive data type options\n      - mix of primitive and object data type options\n    - schema-exapand-level attribute must play nice with nesting of `one-of` and `any-of`\n  version: 1.0.0\nservers:\n  - url: 'http://localhost:9000'\n    description: Local server\npaths:\n  /nested-xxx-of:\n    get:\n      parameters:\n        - name: env\n          in: path\n          schema:\n            type: string\n      responses:\n        '200':\n          description: 'ok'\n          content:\n            application/json:\n              schema:\n                allOf:\n                  - type: object\n                    properties:\n                      rootLevel:\n                        allOf:\n                        - type: object\n                        - anyOf:\n                          - type: object\n                            properties:\n                              L1_A:\n                                type: string\n                              L1_B:\n                                type: number\n                              L1_C:\n                                type: object\n                                properties:\n                                  L2_C1:\n                                    type: string\n                                  L2_C2:\n                                    type: string\n                                  L2_C3:\n                                    oneOf:\n                                      - type: string\n                                      - type: number\n                                      - type: object\n                                        properties:\n                                          L3_C3_A:\n                                            type: string\n                                          L3_C3_B:\n                                            type: string\n                                  L2_C4:\n                                    oneOf:\n                                      - type: string\n                                      - type: number\n                          - type: object\n                            properties:\n                              L1_X: \n                                type: number\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /nested-xxx-of: get: operation \"\": parameters: parse parameter \"env\": path parameters must be required"
}