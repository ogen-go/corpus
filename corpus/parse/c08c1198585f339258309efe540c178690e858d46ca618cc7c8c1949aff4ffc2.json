{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/cockroachdb/cockroach-cloud-sdk-go"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "internal/openapi-generator/api/openapi.yaml",
			"byteSize": 174984,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: support@cockroachlabs.com\n    name: Cockroach Labs Support\n    url: https://support.cockroachlabs.com\n  description: \"This is a preview version of the Cloud API. The interface and output\\\n    \\ is subject to change, and there may be bugs.\"\n  title: CockroachDB Cloud API\n  version: 2022-09-20\nexternalDocs:\n  description: Use the CockroachDB Cloud API\n  url: https://www.cockroachlabs.com/docs/cockroachcloud/cloud-api.html\nservers:\n- url: https://cockroachlabs.cloud\nsecurity:\n- Bearer: []\ntags:\n- name: CockroachCloud\npaths:\n  /api/v1/clusters:\n    get:\n      description: \"Sort order: Cluster name\"\n      operationId: CockroachCloud_ListClusters\n      parameters:\n      - description: \"If `true`, show clusters that have been deleted or failed to\\\n          \\ initialize.\"\n        explode: true\n        in: query\n        name: show_inactive\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListClustersResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List clusters owned by an organization\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters?show_inactive=SOME_BOOLEAN_VALUE\u0026pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_CreateCluster\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateClusterRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Create and initialize a new cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"name\":\"test-cluster\",\"provider\":\"GCP\",\"spec\":{\"serverless\":{\"regions\":[\"us-central1\"],\"spend_limit\":0}}}'\n  /api/v1/clusters/available-regions:\n    get:\n      description: \"Sort order: Distance (based on client IP address)\"\n      operationId: CockroachCloud_ListAvailableRegions\n      parameters:\n      - description: |-\n          Optional CloudProvider for filtering.\n\n           - GCP: The Google Cloud Platform cloud provider.\n           - AWS: The Amazon Web Services cloud provider.\n        explode: true\n        in: query\n        name: provider\n        required: false\n        schema:\n          enum:\n          - GCP\n          - AWS\n          type: string\n        style: form\n      - description: Optional filter to only show regions available for serverless\n          clusters.\n        explode: true\n        in: query\n        name: serverless\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAvailableRegionsResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List the regions available for new clusters and nodes\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/available-regions?provider=SOME_STRING_VALUE\u0026serverless=SOME_BOOLEAN_VALUE\u0026pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/clusters/{cluster_id}:\n    delete:\n      operationId: CockroachCloud_DeleteCluster\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete a cluster and all of its data\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    get:\n      operationId: CockroachCloud_GetCluster\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Get extended information about a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    patch:\n      operationId: CockroachCloud_UpdateCluster\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: field_mask\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateClusterSpecification'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Cluster'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Scale or edit a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PATCH \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}?field_mask=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"dedicated\":{\"hardware\":{\"machine_type\":\"n2-standard-8\"},\"region_nodes\":{\"us-central1\":5,\"us-west1\":3}}}'\n  /api/v1/clusters/{cluster_id}/cmek:\n    get:\n      operationId: CockroachCloud_GetCMEKClusterInfo\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CMEKClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Get CMEK-related information for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    patch:\n      operationId: CockroachCloud_UpdateCMEKStatus\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateCMEKStatusRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CMEKClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Update the CMEK-related status for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PATCH \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"action\":\"REVOKE\"}'\n    post:\n      operationId: CockroachCloud_EnableCMEKSpec\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CMEKClusterSpecification'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CMEKClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Enable CMEK for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --data '{\"region_specs\":[{\"key_spec\":{\"auth_principal\":\"arn:aws:iam::account:role/role-name-with-path\",\"type\":\"AWS_KMS\",\"uri\":\"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\"},\"region\":\"us-central1\"}]}'\n    put:\n      operationId: CockroachCloud_UpdateCMEKSpec\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CMEKClusterSpecification'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CMEKClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Enable or update the CMEK spec for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PUT \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/cmek \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --data '{\"region_specs\":[{\"key_spec\":{\"auth_principal\":\"arn:aws:iam::account:role/role-name-with-path\",\"type\":\"AWS_KMS\",\"uri\":\"arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\"},\"region\":\"us-central1\"}]}'\n  /api/v1/clusters/{cluster_id}/databases:\n    get:\n      description: \"Sort order: Database name ascending\"\n      operationId: CockroachCloud_ListDatabases\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.ListDatabasesResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List databases for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    patch:\n      operationId: CockroachCloud_EditDatabase\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDatabaseRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.Database'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Update a database\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PATCH \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"new_name\":\"example_new_database_name\"}'\n    post:\n      operationId: CockroachCloud_CreateDatabase\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDatabaseRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.Database'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Create a new database\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"name\":\"example_database_name\"}'\n  /api/v1/clusters/{cluster_id}/databases/{name}:\n    delete:\n      operationId: CockroachCloud_DeleteDatabase\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.Database'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete a database\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/databases/{name} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/clusters/{cluster_id}/logexport:\n    delete:\n      operationId: CockroachCloud_DeleteLogExport\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogExportClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete the Log Export configuration for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    get:\n      operationId: CockroachCloud_GetLogExportInfo\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogExportClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Get the Log Export configuration for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_EnableLogExport\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableLogExportRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/LogExportClusterInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Create a Log Export configuration for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/logexport \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"auth_principal\":\"string\",\"groups\":[{\"channels\":[\"string\"],\"log_name\":\"string\",\"min_level\":\"string\",\"redact\":true}],\"log_name\":\"string\",\"redact\":true,\"region\":\"string\",\"type\":\"AWS_CLOUDWATCH\"}'\n  /api/v1/clusters/{cluster_id}/metricexport:\n    delete:\n      operationId: CockroachCloud_DeleteMetricExport\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - DATADOG\n          - CLOUDWATCH\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteMetricExportResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete the Metric Export configuration for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport?type=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    get:\n      operationId: CockroachCloud_GetMetricExportInfo\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricExportInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: |-\n        Metric export\n        Get the Metric Export configuration for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_EnableMetricExport\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableMetricExportRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MetricExportInfo'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Create a Metric Export configuration for a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/metricexport \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"cloudwatch\":{\"log_group_name\":\"string\",\"role_arn\":\"string\",\"target_region\":\"string\"},\"datadog\":{\"api_key\":\"string\",\"site\":\"US1\"}}'\n  /api/v1/clusters/{cluster_id}/networking/allowlist:\n    get:\n      description: \"Sort order: CIDR address\"\n      operationId: CockroachCloud_ListAllowlistEntries\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListAllowlistEntriesResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Get the IP allowlist and propagation status for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_AddAllowlistEntry\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AllowlistEntry'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowlistEntry'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Add a new CIDR address to the IP allowlist\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"cidr_ip\":\"192.168.1.1\",\"cidr_mask\":32,\"name\":\"Example\",\"sql\":true,\"ui\":true}'\n  /api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask}:\n    delete:\n      operationId: CockroachCloud_DeleteAllowlistEntry\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: cidr_ip\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: cidr_mask\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowlistEntry'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete an IP allowlist entry\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{cidr_ip}/{cidr_mask} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}:\n    patch:\n      operationId: CockroachCloud_UpdateAllowlistEntry\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: entry.cidr_ip\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: entry.cidr_mask\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      - explode: true\n        in: query\n        name: field_mask\n        required: false\n        schema:\n          type: string\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AllowlistEntry_1'\n        description: AllowlistEntry\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowlistEntry'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Update an IP allowlist entry\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PATCH \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}?field_mask=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --data '{\"cidr_ip\":\"192.168.1.1\",\"cidr_mask\":32,\"name\":\"Example\",\"sql\":true,\"ui\":true}'\n    put:\n      operationId: CockroachCloud_AddAllowlistEntry2\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: entry.cidr_ip\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: entry.cidr_mask\n        required: true\n        schema:\n          format: int32\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AllowlistEntry_1'\n        description: AllowlistEntry\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AllowlistEntry'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Add a new CIDR address to the IP allowlist\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PUT \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --data '{\"cidr_ip\":\"192.168.1.1\",\"cidr_mask\":32,\"name\":\"Example\",\"sql\":true,\"ui\":true}'\n  /api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections:\n    get:\n      operationId: CockroachCloud_ListAwsEndpointConnections\n      parameters:\n      - description: cluster_id is the ID for the cluster.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AwsEndpointConnections'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Lists all AwsEndpointConnections for a given cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id}:\n    patch:\n      description: |-\n        The \"status\" in the returned proto does not reflect the latest post-update\n        status, but rather the status before the state is transitioned.\n      operationId: CockroachCloud_SetAwsEndpointConnectionState\n      parameters:\n      - description: cluster_id is the ID for the cluster.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: endpoint_id is the ID for the VPC endpoint on the customer's\n          side.\n        explode: false\n        in: path\n        name: endpoint_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CockroachCloud_SetAwsEndpointConnectionState_request'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AwsEndpointConnection'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Sets the AWS Endpoint Connection state based on what is passed in the\n        body\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PATCH \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/aws-endpoint-connections/{endpoint_id} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"status\":\"ENDPOINT_AVAILABLE\"}'\n  /api/v1/clusters/{cluster_id}/networking/egress-rules:\n    get:\n      description: \"Sort order: Name\"\n      operationId: CockroachCloud_ListEgressRules\n      parameters:\n      - description: |-\n          cluster_id identifies the CockroachDB cluster owning the set of returned\n          egress rules.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEgressRulesResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List all egress rules associates with a cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_AddEgressRule\n      parameters:\n      - description: cluster_id identifies the cluster to which this egress rule applies.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddEgressRuleRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddEgressRuleResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Add an egress rule\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"cluster_id\":\"35c4abb2-bb66-46d7-afed-25ebef5ed100\",\"description\":\"some very descriptive stuff\",\"destination\":\"www.google.com\",\"name\":\"example-1\",\"paths\":[\"/hello\"],\"ports\":[443,80],\"type\":\"FQDN\"}'\n  /api/v1/clusters/{cluster_id}/networking/egress-rules/egress-traffic-policy:\n    post:\n      operationId: CockroachCloud_SetEgressTrafficPolicy\n      parameters:\n      - description: cluster_id identifies the cluster whose egress policy will be\n          updated.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SetEgressTrafficPolicyRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: object\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Outbound traffic management\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/egress-traffic-policy \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"allow_all\":true,\"idempotency_key\":\"string\"}'\n  /api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id}:\n    delete:\n      operationId: CockroachCloud_DeleteEgressRule\n      parameters:\n      - description: cluster_id uniquely identifies the cluster owning the egress\n          rule.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: rule_id is the UUID of an existing egress rule. This field is\n          required.\n        explode: false\n        in: path\n        name: rule_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: |-\n          idempotency_key uniquely identifies this request. If not set, it will be\n          set by the server.\n        explode: true\n        in: query\n        name: idempotency_key\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteEgressRuleResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete an existing egress rule\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id}?idempotency_key=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    get:\n      operationId: CockroachCloud_GetEgressRule\n      parameters:\n      - description: cluster_id uniquely identifies the cluster owning the egress\n          rule.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: rule_id is the UUID of an existing egress rule.\n        explode: false\n        in: path\n        name: rule_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetEgressRuleResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Get an existing egress rule\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    patch:\n      operationId: CockroachCloud_EditEgressRule\n      parameters:\n      - description: cluster_id uniquely identifies the cluster owning the egress\n          rule.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: rule_id is the UUID of an existing egress rule. This field is\n          required.\n        explode: false\n        in: path\n        name: rule_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EditEgressRuleRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditEgressRuleResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Edit an existing egress rule\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PATCH \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/egress-rules/{rule_id} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"cluster_id\":\"35c4abb2-bb66-46d7-afed-25ebef5ed100\",\"ports\":[443,80],\"rule_id\":\"35c4abb2-bb66-46d7-afed-25ebef5ed2aa\"}'\n  /api/v1/clusters/{cluster_id}/networking/private-endpoint-services:\n    get:\n      description: The internal_dns property from the regions field in the ListClusters\n        response can be used to connect to PrivateEndpointServices.\n      operationId: CockroachCloud_ListPrivateEndpointServices\n      parameters:\n      - description: cluster_id is the ID for the cluster.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpointServices'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Lists all PrivateEndpointServices for a given cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_CreatePrivateEndpointServices\n      parameters:\n      - description: cluster_id is the ID for the cluster.\n        explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PrivateEndpointServices'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Creates all PrivateEndpointServices for a given cluster\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/networking/private-endpoint-services \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{}'\n  /api/v1/clusters/{cluster_id}/nodes:\n    get:\n      description: \"Sort order: Region name, node name\"\n      operationId: CockroachCloud_ListClusterNodes\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Optional filter to limit response to a single region.\n        explode: true\n        in: query\n        name: region_name\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListClusterNodesResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List nodes for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/nodes?region_name=SOME_STRING_VALUE\u0026pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/clusters/{cluster_id}/sql-users:\n    get:\n      description: \"Sort order: Username\"\n      operationId: CockroachCloud_ListSQLUsers\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: pagination.page\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: true\n        in: query\n        name: pagination.limit\n        required: false\n        schema:\n          format: int32\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: pagination.as_of_time\n        required: false\n        schema:\n          format: date-time\n          type: string\n        style: form\n      - description: \" - DESC: Sort in descending order. The default order is ascending.\"\n        explode: true\n        in: query\n        name: pagination.sort_order\n        required: false\n        schema:\n          enum:\n          - ASC\n          - DESC\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSQLUsersResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List SQL users for a cluster\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url 'https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users?pagination.page=SOME_STRING_VALUE\u0026pagination.limit=SOME_INTEGER_VALUE\u0026pagination.as_of_time=SOME_STRING_VALUE\u0026pagination.sort_order=SOME_STRING_VALUE' \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n    post:\n      operationId: CockroachCloud_CreateSQLUser\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSQLUserRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLUser'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Create a new SQL user\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request POST \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"name\":\"example_username\",\"password\":\"example_password\"}'\n  /api/v1/clusters/{cluster_id}/sql-users/{name}:\n    delete:\n      operationId: CockroachCloud_DeleteSQLUser\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLUser'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Delete a SQL user\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request DELETE \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/clusters/{cluster_id}/sql-users/{name}/password:\n    put:\n      operationId: CockroachCloud_UpdateSQLUserPassword\n      parameters:\n      - explode: false\n        in: path\n        name: cluster_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateSQLUserPasswordRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SQLUser'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Update a SQL user's password\n      tags:\n      - CockroachCloud\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request PUT \\\n            --url https://cockroachlabs.cloud/api/v1/clusters/{cluster_id}/sql-users/{name}/password \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \\\n            --header 'content-type: application/json' \\\n            --data '{\"password\":\"example_new_password\"}'\n  /api/v1/invoices:\n    get:\n      description: \"Sort order: invoice start date ascending\"\n      operationId: CockroachCloud_ListInvoices\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListInvoicesResponse'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: List invoices for a given organization\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/invoices \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\n  /api/v1/invoices/{invoice_id}:\n    get:\n      operationId: CockroachCloud_GetInvoice\n      parameters:\n      - description: |-\n          invoice_id is the unique ID representing the invoice.\n          invoice_id is used to retrieve a specific\n          billing period's invoice.\n        explode: false\n        in: path\n        name: invoice_id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Invoice'\n          description: A successful response.\n        \"400\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when a request field is invalid.\n        \"401\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the token bearer cannot be authenticated.\n        \"403\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the user does not have permission to access the\n            resource.\n        \"404\":\n          content:\n            application/json:\n              schema: {}\n          description: Returned when the resource does not exist.\n        \"500\":\n          content:\n            application/json:\n              schema: {}\n          description: Server error\n        default:\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Status'\n          description: An unexpected error response.\n      summary: Gets a specific invoice for an organization\n      tags:\n      - CockroachCloud\n      x-badges:\n      - color: blue\n        label: PREVIEW\n      x-codeSamples:\n      - lang: Shell + Curl\n        source: |-\n          curl --request GET \\\n            --url https://cockroachlabs.cloud/api/v1/invoices/{invoice_id} \\\n            --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'\ncomponents:\n  requestBodies:\n    CockroachCloud_AddAllowlistEntry2Entry:\n      content:\n        application/json:\n          schema:\n            example:\n              cidr_ip: 192.168.1.1\n              cidr_mask: 32\n              name: Example\n              sql: true\n              ui: true\n            properties:\n              name:\n                type: string\n              sql:\n                type: boolean\n              ui:\n                type: boolean\n            required:\n            - sql\n            - ui\n            title: AllowlistEntry\n            type: object\n      description: AllowlistEntry\n      required: true\n    CockroachCloud_EnableCMEKSpecBody:\n      content:\n        application/json:\n          schema:\n            example:\n              region_specs:\n              - key_spec:\n                  auth_principal: arn:aws:iam::account:role/role-name-with-path\n                  type: AWS_KMS\n                  uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\n                region: us-central1\n            properties:\n              region_specs:\n                items:\n                  $ref: '#/components/schemas/CMEKRegionSpecification'\n                type: array\n            required:\n            - region_specs\n            title: CMEKClusterSpecification\n            type: object\n      required: true\n  schemas:\n    AWSEndpointConnectionStatus:\n      description: The statuses map to the statuses returned by the AWS API.\n      enum:\n      - ENDPOINT_PENDING\n      - ENDPOINT_PENDING_ACCEPTANCE\n      - ENDPOINT_AVAILABLE\n      - ENDPOINT_DELETING\n      - ENDPOINT_DELETED\n      - ENDPOINT_REJECTED\n      - ENDPOINT_FAILED\n      - ENDPOINT_EXPIRED\n      type: string\n    AWSPrivateLinkServiceDetail:\n      example:\n        availability_zone_ids:\n        - availability_zone_ids\n        - availability_zone_ids\n        service_name: service_name\n        service_id: service_id\n      properties:\n        availability_zone_ids:\n          description: |-\n            availability_zone_ids are the identifiers for the availability zones\n            that the service is available in.\n          items:\n            type: string\n          type: array\n        service_id:\n          description: |-\n            service_id is the server side of the PrivateLink\n            connection. This is the same as AWSPrivateLinkEndpoint.service_id.\n          type: string\n        service_name:\n          description: |-\n            service_name is the AWS service name customers use to create endpoints\n            on their end.\n          type: string\n      required:\n      - availability_zone_ids\n      - service_id\n      - service_name\n      type: object\n    AddEgressRuleResponse:\n      description: AddEgressRuleResponse is the response message of the AddEgressRule\n        RPC.\n      example:\n        Rule:\n          crl_managed: true\n          cluster_id: cluster_id\n          paths:\n          - paths\n          - paths\n          destination: destination\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          description: description\n          id: id\n          state: state\n          ports:\n          - 0\n          - 0\n          type: type\n      properties:\n        Rule:\n          $ref: '#/components/schemas/EgressRule'\n      required:\n      - rule\n      title: AddEgressRuleResponse\n      type: object\n    AllowlistEntry:\n      example:\n        cidr_ip: 192.168.1.1\n        cidr_mask: 32\n        name: Example\n        sql: true\n        ui: true\n      properties:\n        cidr_ip:\n          type: string\n        cidr_mask:\n          format: int32\n          type: integer\n        name:\n          type: string\n        sql:\n          type: boolean\n        ui:\n          type: boolean\n      required:\n      - cidr_ip\n      - cidr_mask\n      - sql\n      - ui\n      title: AllowlistEntry\n      type: object\n    Any:\n      additionalProperties: {}\n      description: |-\n        `Any` contains an arbitrary serialized protocol buffer message along with a\n        URL that describes the type of the serialized message.\n\n        Protobuf library provides support to pack/unpack Any values in the form\n        of utility functions or additional generated methods of the Any type.\n\n        Example 1: Pack and unpack a message in C++.\n\n            Foo foo = ...;\n            Any any;\n            any.PackFrom(foo);\n            ...\n            if (any.UnpackTo(\u0026foo)) {\n              ...\n            }\n\n        Example 2: Pack and unpack a message in Java.\n\n            Foo foo = ...;\n            Any any = Any.pack(foo);\n            ...\n            if (any.is(Foo.class)) {\n              foo = any.unpack(Foo.class);\n            }\n\n         Example 3: Pack and unpack a message in Python.\n\n            foo = Foo(...)\n            any = Any()\n            any.Pack(foo)\n            ...\n            if any.Is(Foo.DESCRIPTOR):\n              any.Unpack(foo)\n              ...\n\n         Example 4: Pack and unpack a message in Go\n\n             foo := \u0026pb.Foo{...}\n             any, err := ptypes.MarshalAny(foo)\n             ...\n             foo := \u0026pb.Foo{}\n             if err := ptypes.UnmarshalAny(any, foo); err != nil {\n               ...\n             }\n\n        The pack methods provided by protobuf library will by default use\n        'type.googleapis.com/full.type.name' as the type URL and the unpack\n        methods only use the fully qualified type name after the last '/'\n        in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n        name \"y.z\".\n\n\n        JSON\n        ====\n        The JSON representation of an `Any` value uses the regular\n        representation of the deserialized, embedded message, with an\n        additional field `@type` which contains the type URL. Example:\n\n            package google.profile;\n            message Person {\n              string first_name = 1;\n              string last_name = 2;\n            }\n\n            {\n              \"@type\": \"type.googleapis.com/google.profile.Person\",\n              \"firstName\": \u003cstring\u003e,\n              \"lastName\": \u003cstring\u003e\n            }\n\n        If the embedded message type is well-known and has a custom JSON\n        representation, that representation will be embedded adding a field\n        `value` which holds the custom JSON in addition to the `@type`\n        field. Example (for message [google.protobuf.Duration][]):\n\n            {\n              \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n              \"value\": \"1.212s\"\n            }\n      properties:\n        '@type':\n          description: |-\n            A URL/resource name that uniquely identifies the type of the serialized\n            protocol buffer message. This string must contain at least\n            one \"/\" character. The last segment of the URL's path must represent\n            the fully qualified name of the type (as in\n            `path/google.protobuf.Duration`). The name should be in a canonical form\n            (e.g., leading \".\" is not accepted).\n\n            In practice, teams usually precompile into the binary all types that they\n            expect it to use in the context of Any. However, for URLs which use the\n            scheme `http`, `https`, or no scheme, one can optionally set up a type\n            server that maps type URLs to message definitions as follows:\n\n            * If no scheme is provided, `https` is assumed.\n            * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n              value in binary format, or produce an error.\n            * Applications are allowed to cache lookup results based on the\n              URL, or have them precompiled into a binary to avoid any\n              lookup. Therefore, binary compatibility needs to be preserved\n              on changes to types. (Use versioned type names to manage\n              breaking changes.)\n\n            Note: this functionality is not currently available in the official\n            protobuf release, and it is not used for type URLs beginning with\n            type.googleapis.com.\n\n            Schemes other than `http`, `https` (or the empty scheme) might be\n            used with implementation specific semantics.\n          type: string\n      type: object\n    AwsEndpointConnection:\n      example:\n        service_id: service_id\n        endpoint_id: endpoint_id\n        cloud_provider: null\n        region_name: region_name\n        status: null\n      properties:\n        cloud_provider:\n          $ref: '#/components/schemas/api.CloudProvider'\n        endpoint_id:\n          description: endpoint_id is the client side of the PrivateLink connection.\n          type: string\n        region_name:\n          description: region_name is the cloud provider region name (i.e. us-east-1).\n          type: string\n        service_id:\n          description: |-\n            service_id is the server side of the PrivateLink\n            connection. This is the same as AWSPrivateLinkEndpoint.service_id.\n          type: string\n        status:\n          $ref: '#/components/schemas/AWSEndpointConnectionStatus'\n      required:\n      - cloud_provider\n      - endpoint_id\n      - region_name\n      - service_id\n      - status\n      type: object\n    AwsEndpointConnections:\n      example:\n        connections:\n        - service_id: service_id\n          endpoint_id: endpoint_id\n          cloud_provider: null\n          region_name: region_name\n          status: null\n        - service_id: service_id\n          endpoint_id: endpoint_id\n          cloud_provider: null\n          region_name: region_name\n          status: null\n      properties:\n        connections:\n          description: Connections is a list of private endpoints.\n          items:\n            $ref: '#/components/schemas/AwsEndpointConnection'\n          type: array\n      required:\n      - connections\n      type: object\n    CMEKClusterInfo:\n      description: |-\n        CMEKClusterInfo contains the status of CMEK across an entire cluster,\n        including within each one its regions.\n      example:\n        region_infos:\n        - region: region\n          key_infos:\n          - updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            user_message: user_message\n            spec:\n              auth_principal: auth_principal\n              type: null\n              uri: uri\n            status: null\n          - updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            user_message: user_message\n            spec:\n              auth_principal: auth_principal\n              type: null\n              uri: uri\n            status: null\n          status: null\n        - region: region\n          key_infos:\n          - updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            user_message: user_message\n            spec:\n              auth_principal: auth_principal\n              type: null\n              uri: uri\n            status: null\n          - updated_at: 2000-01-23T04:56:07.000+00:00\n            created_at: 2000-01-23T04:56:07.000+00:00\n            user_message: user_message\n            spec:\n              auth_principal: auth_principal\n              type: null\n              uri: uri\n            status: null\n          status: null\n        status: null\n      properties:\n        region_infos:\n          items:\n            $ref: '#/components/schemas/CMEKRegionInfo'\n          type: array\n        status:\n          $ref: '#/components/schemas/CMEKStatus'\n      type: object\n    CMEKCustomerAction:\n      description: |-\n        CMEKCustomerAction enumerates the actions a customer can take on a cluster\n        that has been enabled for CMEK.\n      enum:\n      - REVOKE\n      type: string\n    CMEKKeyInfo:\n      description: |-\n        CMEKKeyInfo contains the status of a customer-provided key alongside the\n        specification.\n      example:\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        user_message: user_message\n        spec:\n          auth_principal: auth_principal\n          type: null\n          uri: uri\n        status: null\n      properties:\n        created_at:\n          format: date-time\n          type: string\n        spec:\n          $ref: '#/components/schemas/CMEKKeySpecification'\n        status:\n          $ref: '#/components/schemas/CMEKStatus'\n        updated_at:\n          format: date-time\n          type: string\n        user_message:\n          type: string\n      type: object\n    CMEKKeySpecification:\n      description: \"CMEKKeySpecification contains all the details necessary to use\\\n        \\ a customer-provided\\nencryption key.\\n\\nThis involves the type/location\\\n        \\ of the key and the principal to authenticate as \\nwhen accessing it.\"\n      example:\n        auth_principal: auth_principal\n        type: null\n        uri: uri\n      properties:\n        auth_principal:\n          type: string\n        type:\n          $ref: '#/components/schemas/CMEKKeyType'\n        uri:\n          type: string\n      type: object\n    CMEKKeyType:\n      description: \"- UNKNOWN_KEY_TYPE: UNKNOWN should never be used; if it is used,\\\n        \\ it indicates a bug.\"\n      enum:\n      - AWS_KMS\n      - GCP_CLOUD_KMS\n      - NULL_KMS\n      title: CMEKKeyType enumerates types of customer-managed keys\n      type: string\n    CMEKRegionInfo:\n      description: \"CMEKRegionInfo contains the status of CMEK within a region.\\n\\n\\\n        This includes current and past key specifications used within the region,\\\n        \\ \\nas well as the status of those specifications\"\n      example:\n        region: region\n        key_infos:\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          user_message: user_message\n          spec:\n            auth_principal: auth_principal\n            type: null\n            uri: uri\n          status: null\n        - updated_at: 2000-01-23T04:56:07.000+00:00\n          created_at: 2000-01-23T04:56:07.000+00:00\n          user_message: user_message\n          spec:\n            auth_principal: auth_principal\n            type: null\n            uri: uri\n          status: null\n        status: null\n      properties:\n        key_infos:\n          items:\n            $ref: '#/components/schemas/CMEKKeyInfo'\n          type: array\n        region:\n          type: string\n        status:\n          $ref: '#/components/schemas/CMEKStatus'\n      type: object\n    CMEKRegionSpecification:\n      description: |-\n        CMEKRegionSpecification declares the customer-provided key specification that\n        should be used in a given region.\n      properties:\n        key_spec:\n          $ref: '#/components/schemas/CMEKKeySpecification'\n        region:\n          type: string\n      type: object\n    CMEKStatus:\n      description: |-\n        CMEKStatus describes the current status of CMEK for an entire CRDB cluster\n        or a CMEK key within a region.\n\n         - UNKNOWN_STATUS: UNKNOWN should never be used; if it is used, it indicates a bug.\n         - DISABLED: DISABLED corresponds to the state of a cluster or region-level key when\n        CMEK has finished being disabled. By default, CMEK will be disabled for\n        new clusters.\n         - DISABLING: DISABLING corresponds to the state of a cluster or region-level key when\n        CMEK is in the process of being disabled.\n         - DISABLE_FAILED: DISABLE_FAILED corresponds to the state of a cluster or region-level key\n        when CMEK has failed to be disabled.\n         - ENABLED: ENABLED corresponds to the state of a cluster or region-level key when\n        CMEK is enabled.\n         - ENABLING: ENABLING corresponds to the state of a cluster or region-level key when\n        CMEK is in the process of being enabled.\n         - ENABLE_FAILED: ENABLE_FAILED corresponds to the state of a cluster or region-level key\n        when CMEK has failed to be enabled.\n         - ROTATING: ROTATING corresponds to the state of a cluster or region when the a new\n        spec is in the process of being enabled while an existing spec is being\n        disabled.\n         - ROTATE_FAILED: ROTATE_FAILED corresponds to the state of a cluster or region if there was\n        a failure to update from one CMEK spec to another.\n         - REVOKED: REVOKED corresponds to the state of a cluster or region-level key when the\n        customer has revoked CockroachLab's permissions for their key.\n         - REVOKING: REVOKING corresponds to the state of a cluster or region-level key when\n        CMEK is in the process of being revoked.\n         - REVOKE_FAILED: REVOKE_FAILED corresponds to the state of a cluster or region-level key\n        when CMEK has failed to be revoked.\n      enum:\n      - DISABLED\n      - DISABLING\n      - DISABLE_FAILED\n      - ENABLED\n      - ENABLING\n      - ENABLE_FAILED\n      - ROTATING\n      - ROTATE_FAILED\n      - REVOKED\n      - REVOKING\n      - REVOKE_FAILED\n      type: string\n    CloudProviderRegion:\n      example:\n        distance: 0.8008282\n        provider: null\n        name: name\n        serverless: true\n        location: location\n      properties:\n        distance:\n          format: float\n          title: \"Distance in miles, based on client IP address\"\n          type: number\n        location:\n          type: string\n        name:\n          type: string\n        provider:\n          $ref: '#/components/schemas/api.CloudProvider'\n        serverless:\n          type: boolean\n      required:\n      - distance\n      - location\n      - name\n      - provider\n      - serverless\n      type: object\n    CloudWatchConfig:\n      example:\n        target_region: target_region\n        log_group_name: log_group_name\n        role_arn: role_arn\n      properties:\n        log_group_name:\n          description: log_group_name is the customized log group name.\n          type: string\n        role_arn:\n          description: |-\n            role_arn is the IAM role used to upload metric segments to the\n            target AWS account.\n          type: string\n        target_region:\n          description: |-\n            target_region specifies the specific AWS region that the metrics will\n            be exported to.\n          type: string\n      type: object\n    Cluster:\n      example:\n        account_id: \"\"\n        cloud_provider: GCP\n        cockroach_version: v21.2.4\n        config:\n          serverless:\n            routing_id: example-cluster-1533\n            spend_limit: 0\n        created_at: 2022-03-22T20:23:11.285067Z\n        creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n        deleted_at: null\n        id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n        name: example-cluster\n        operation_status: CLUSTER_STATUS_UNSPECIFIED\n        plan: SERVERLESS\n        regions:\n        - name: us-central1\n          node_count: 0\n          sql_dns: free-tier7.gcp-us-central1.crdb.io\n          ui_dns: \"\"\n        state: CREATED\n        updated_at: 2022-03-22T20:23:11.879593Z\n      properties:\n        account_id:\n          type: string\n        cloud_provider:\n          $ref: '#/components/schemas/api.CloudProvider'\n        cockroach_version:\n          type: string\n        config:\n          $ref: '#/components/schemas/ClusterConfig'\n        created_at:\n          format: date-time\n          type: string\n        creator_id:\n          type: string\n        deleted_at:\n          format: date-time\n          type: string\n        id:\n          type: string\n        name:\n          type: string\n        network_visibility:\n          $ref: '#/components/schemas/NetworkVisiblity'\n        operation_status:\n          $ref: '#/components/schemas/ClusterStatusType'\n        plan:\n          $ref: '#/components/schemas/Plan'\n        regions:\n          items:\n            $ref: '#/components/schemas/Region'\n          type: array\n        sql_dns:\n          description: sql_dns is the DNS name of SQL interface of the cluster.\n          type: string\n        state:\n          $ref: '#/components/schemas/ClusterStateType'\n        updated_at:\n          format: date-time\n          type: string\n      required:\n      - cloud_provider\n      - cockroach_version\n      - config\n      - creator_id\n      - id\n      - name\n      - operation_status\n      - plan\n      - regions\n      - state\n      type: object\n    ClusterConfig:\n      properties:\n        dedicated:\n          $ref: '#/components/schemas/DedicatedHardwareConfig'\n        serverless:\n          $ref: '#/components/schemas/ServerlessClusterConfig'\n      type: object\n    ClusterStateType:\n      description: |2-\n         - LOCKED: An exclusive operation is being performed on this cluster.\n        Other operations should not proceed if they did not set a cluster into the LOCKED state.\n      enum:\n      - CREATING\n      - CREATED\n      - CREATION_FAILED\n      - DELETED\n      - LOCKED\n      type: string\n    ClusterStatusType:\n      enum:\n      - CLUSTER_STATUS_UNSPECIFIED\n      - CRDB_MAJOR_UPGRADE_RUNNING\n      - CRDB_MAJOR_UPGRADE_FAILED\n      - CRDB_MAJOR_ROLLBACK_RUNNING\n      - CRDB_MAJOR_ROLLBACK_FAILED\n      - CRDB_PATCH_RUNNING\n      - CRDB_PATCH_FAILED\n      - CRDB_SCALE_RUNNING\n      - CRDB_SCALE_FAILED\n      - MAINTENANCE_RUNNING\n      - CRDB_INSTANCE_UPDATE_RUNNING\n      - CRDB_INSTANCE_UPDATE_FAILED\n      - CRDB_EDIT_CLUSTER_RUNNING\n      - CRDB_EDIT_CLUSTER_FAILED\n      - CRDB_CMEK_OPERATION_RUNNING\n      - CRDB_CMEK_OPERATION_FAILED\n      - TENANT_RESTORE_RUNNING\n      - TENANT_RESTORE_FAILED\n      - CRDB_LOG_EXPORT_OPERATION_RUNNING\n      - CRDB_LOG_EXPORT_OPERATION_FAILED\n      - CRDB_CLUSTER_DISRUPTION_RUNNING\n      - CRDB_CLUSTER_DISRUPTION_FAILED\n      - CRDB_REPAVE_RUNNING\n      - CRDB_REPAVE_FAILED\n      type: string\n    CreateClusterRequest:\n      example:\n        name: test-cluster\n        provider: GCP\n        spec:\n          serverless:\n            regions:\n            - us-central1\n            spend_limit: 0\n      properties:\n        name:\n          description: |-\n            Name must be 6-20 characters in length and can include numbers,\n            lowercase letters, and dashes (but no leading or trailing dashes).\n          type: string\n        provider:\n          $ref: '#/components/schemas/api.CloudProvider'\n        spec:\n          $ref: '#/components/schemas/CreateClusterSpecification'\n      required:\n      - name\n      - provider\n      - spec\n      title: CreateClusterRequest\n      type: object\n    CreateClusterSpecification:\n      properties:\n        dedicated:\n          $ref: '#/components/schemas/DedicatedClusterCreateSpecification'\n        serverless:\n          $ref: '#/components/schemas/ServerlessClusterCreateSpecification'\n      type: object\n    Currency:\n      description: Currency is the set of currencies supported in CockroachDB Cloud.\n      enum:\n      - USD\n      - CRDB_CLOUD_CREDITS\n      type: string\n    CurrencyAmount:\n      example:\n        amount: 0.8008281904610115\n        currency: null\n      properties:\n        amount:\n          description: amount is the quantity of currency.\n          format: double\n          type: number\n        currency:\n          $ref: '#/components/schemas/Currency'\n      type: object\n    DatadogConfig:\n      example:\n        site: null\n        api_key: api_key\n      properties:\n        api_key:\n          type: string\n        site:\n          $ref: '#/components/schemas/DatadogConfig.DatadogSite'\n      type: object\n    DatadogConfig.DatadogSite:\n      enum:\n      - US1\n      - US3\n      - US5\n      - US1_GOV\n      - EU1\n      type: string\n    DedicatedClusterCreateSpecification:\n      properties:\n        cockroach_version:\n          description: |-\n            The CockroachDB version for the cluster. The current version\n            is used if omitted.\n          type: string\n        hardware:\n          $ref: '#/components/schemas/DedicatedHardwareCreateSpecification'\n        network_visibility:\n          $ref: '#/components/schemas/NetworkVisiblity'\n        region_nodes:\n          additionalProperties:\n            format: int32\n            type: integer\n          description: |-\n            Region keys should match the cloud provider's zone code.\n            For example, for Oregon, set region_name to \"us-west2\" for\n            GCP and \"us-west-2\" for AWS. Values represent the node count.\n          type: object\n      required:\n      - hardware\n      - region_nodes\n      type: object\n    DedicatedClusterUpdateSpecification:\n      properties:\n        cmek_region_specs:\n          description: |-\n            This field should contain the CMEK specs for newly added regions. If a\n            CMEK spec is provided for an existing region, the request is invalid and\n            will fail.\n          items:\n            $ref: '#/components/schemas/CMEKRegionSpecification'\n          type: array\n        hardware:\n          $ref: '#/components/schemas/DedicatedHardwareUpdateSpecification'\n        region_nodes:\n          additionalProperties:\n            format: int32\n            type: integer\n          description: |-\n            Region keys should match the cloud provider's zone code.\n            For example, for Oregon, set region_name to \"us-west2\" for\n            GCP and \"us-west-2\" for AWS. Values represent the node count.\n          type: object\n      type: object\n    DedicatedHardwareConfig:\n      properties:\n        disk_iops:\n          description: |-\n            disk_iops is the number of disk I/O operations per second that are\n            permitted on each node in the cluster. Zero indicates the cloud\n            provider-specific default.\n          format: int32\n          type: integer\n        machine_type:\n          description: |-\n            machine_type is the machine type identifier within the given cloud\n            provider, ex. m5.xlarge, n2-standard-4.\n          type: string\n        memory_gib:\n          description: memory_gib is the memory GiB per node in the cluster.\n          format: float\n          type: number\n        num_virtual_cpus:\n          description: num_virtual_cpus is the number of virtual CPUs per node in\n            the cluster.\n          format: int32\n          type: integer\n        storage_gib:\n          description: storage_gib is the number of storage GiB per node in the cluster.\n          format: int32\n          type: integer\n      required:\n      - disk_iops\n      - machine_type\n      - memory_gib\n      - num_virtual_cpus\n      - storage_gib\n      type: object\n    DedicatedHardwareCreateSpecification:\n      properties:\n        disk_iops:\n          description: |-\n            disk_iops is the number of disk I/O operations per second that are\n            permitted on each node in the cluster. Zero indicates the cloud\n            provider-specific default. Only available for AWS clusters.\n          format: int32\n          type: integer\n        machine_spec:\n          $ref: '#/components/schemas/DedicatedMachineTypeSpecification'\n        storage_gib:\n          description: |-\n            storage_gib is the number of storage GiB per node in the cluster.\n            Zero indicates default to the lowest storage GiB available given machine specs.\n          format: int32\n          type: integer\n      required:\n      - machine_spec\n      - storage_gib\n      type: object\n    DedicatedHardwareUpdateSpecification:\n      properties:\n        disk_iops:\n          description: |-\n            disk_iops is the number of disk I/O operations per second that are\n            permitted on each node in the cluster. Zero indicates the cloud\n            provider-specific default. Only available for AWS clusters.\n          format: int32\n          type: integer\n        machine_spec:\n          $ref: '#/components/schemas/DedicatedMachineTypeSpecification'\n        storage_gib:\n          description: storage_gib is the number of storage GiB per node in the cluster.\n          format: int32\n          type: integer\n      type: object\n    DedicatedMachineTypeSpecification:\n      properties:\n        machine_type:\n          description: |-\n            machine_type is the machine type identifier within the given cloud\n            provider, ex. m5.xlarge, n2-standard-4.\n          type: string\n        num_virtual_cpus:\n          description: |-\n            num_virtual_cpus may be used to automatically select a machine type\n            according to the desired number of vCPUs.\n          format: int32\n          type: integer\n      type: object\n    DeleteEgressRuleResponse:\n      description: DeleteEgressRuleResponse is the output for the DeleteEgressRule\n        RPC.\n      example:\n        Rule:\n          crl_managed: true\n          cluster_id: cluster_id\n          paths:\n          - paths\n          - paths\n          destination: destination\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          description: description\n          id: id\n          state: state\n          ports:\n          - 0\n          - 0\n          type: type\n      properties:\n        Rule:\n          $ref: '#/components/schemas/EgressRule'\n      required:\n      - rule\n      title: DeleteEgressRuleResponse\n      type: object\n    DeleteMetricExportResponse:\n      example:\n        cluster_id: cluster_id\n        type: null\n        status: null\n      properties:\n        cluster_id:\n          type: string\n        status:\n          $ref: '#/components/schemas/MetricExportStatus'\n        type:\n          $ref: '#/components/schemas/MetricExportIntegrationType'\n      type: object\n    EditEgressRuleResponse:\n      description: EditEgressRuleResponse is the output message to the EditEgressRule\n        RPC.\n      example:\n        Rule:\n          crl_managed: true\n          cluster_id: cluster_id\n          paths:\n          - paths\n          - paths\n          destination: destination\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          description: description\n          id: id\n          state: state\n          ports:\n          - 0\n          - 0\n          type: type\n      properties:\n        Rule:\n          $ref: '#/components/schemas/EgressRule'\n      required:\n      - rule\n      title: EditEgressRuleResponse\n      type: object\n    EgressRule:\n      description: EgressRule represents a network egress rule.\n      example:\n        crl_managed: true\n        cluster_id: cluster_id\n        paths:\n        - paths\n        - paths\n        destination: destination\n        name: name\n        created_at: 2000-01-23T04:56:07.000+00:00\n        description: description\n        id: id\n        state: state\n        ports:\n        - 0\n        - 0\n        type: type\n      properties:\n        cluster_id:\n          description: cluster_id identifies the cluster to which this egress rule\n            applies.\n          type: string\n        created_at:\n          description: |-\n            created_at is the time at which the time at which the egress rule was\n            created.\n          format: date-time\n          type: string\n        crl_managed:\n          description: |-\n            crl_managed indicates this egress rule is managed by CockroachDB Cloud\n            services. This field is set by the server.\n          type: boolean\n        description:\n          description: description is a longer that serves to document the rules purpose.\n          type: string\n        destination:\n          description: |-\n            destination is the endpoint (or subnetwork if CIDR) to which traffic is\n            allowed.\n          type: string\n        id:\n          description: id uniquely identifies this egress rule.\n          type: string\n        name:\n          description: name is the name of the egress rule.\n          type: string\n        paths:\n          description: paths are the allowed URL paths. Only valid if Type=\"FQDN\".\n          items:\n            type: string\n          type: array\n        ports:\n          description: |-\n            ports are the allowed ports for TCP protocol. If Empty, all ports are\n            allowed.\n          items:\n            format: int32\n            type: integer\n          type: array\n        state:\n          description: state indicates the state of the egress rule.\n          type: string\n        type:\n          description: |-\n            type classifies the destination field. Valid types include: \"FQDN\",\n            \"CIDR\".\n          type: string\n      required:\n      - cluster_id\n      - crl_managed\n      - description\n      - destination\n      - id\n      - name\n      - state\n      - type\n      title: EgressRule\n      type: object\n    GetEgressRuleResponse:\n      description: GetEgressRuleResponse is the response message to the GetEgressRule\n        RPC.\n      example:\n        rule:\n          crl_managed: true\n          cluster_id: cluster_id\n          paths:\n          - paths\n          - paths\n          destination: destination\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          description: description\n          id: id\n          state: state\n          ports:\n          - 0\n          - 0\n          type: type\n      properties:\n        rule:\n          $ref: '#/components/schemas/EgressRule'\n      required:\n      - rule\n      title: GetEgressRuleResponse\n      type: object\n    Invoice:\n      description: |-\n        Invoice message represents the details and the total charges associated with\n        one billing period, which starts at the beginning of the month and ends at\n        the beginning of the next month.\n\n        The message also includes details about each invoice item.\n      example:\n        period_end: 2000-01-23T04:56:07.000+00:00\n        balances:\n        - amount: 0.8008281904610115\n          currency: null\n        - amount: 0.8008281904610115\n          currency: null\n        invoice_items:\n        - cluster:\n            account_id: \"\"\n            cloud_provider: GCP\n            cockroach_version: v21.2.4\n            config:\n              serverless:\n                routing_id: example-cluster-1533\n                spend_limit: 0\n            created_at: 2022-03-22T20:23:11.285067Z\n            creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n            deleted_at: null\n            id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n            name: example-cluster\n            operation_status: CLUSTER_STATUS_UNSPECIFIED\n            plan: SERVERLESS\n            regions:\n            - name: us-central1\n              node_count: 0\n              sql_dns: free-tier7.gcp-us-central1.crdb.io\n              ui_dns: \"\"\n            state: CREATED\n            updated_at: 2022-03-22T20:23:11.879593Z\n          line_items:\n          - quantity_unit: null\n            total:\n              amount: 0.8008281904610115\n              currency: null\n            quantity: 6.027456183070403\n            description: description\n            unit_cost: 1.4658129805029452\n          - quantity_unit: null\n            total:\n              amount: 0.8008281904610115\n              currency: null\n            quantity: 6.027456183070403\n            description: description\n            unit_cost: 1.4658129805029452\n          totals:\n          - amount: 0.8008281904610115\n            currency: null\n          - amount: 0.8008281904610115\n            currency: null\n        - cluster:\n            account_id: \"\"\n            cloud_provider: GCP\n            cockroach_version: v21.2.4\n            config:\n              serverless:\n                routing_id: example-cluster-1533\n                spend_limit: 0\n            created_at: 2022-03-22T20:23:11.285067Z\n            creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n            deleted_at: null\n            id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n            name: example-cluster\n            operation_status: CLUSTER_STATUS_UNSPECIFIED\n            plan: SERVERLESS\n            regions:\n            - name: us-central1\n              node_count: 0\n              sql_dns: free-tier7.gcp-us-central1.crdb.io\n              ui_dns: \"\"\n            state: CREATED\n            updated_at: 2022-03-22T20:23:11.879593Z\n          line_items:\n          - quantity_unit: null\n            total:\n              amount: 0.8008281904610115\n              currency: null\n            quantity: 6.027456183070403\n            description: description\n            unit_cost: 1.4658129805029452\n          - quantity_unit: null\n            total:\n              amount: 0.8008281904610115\n              currency: null\n            quantity: 6.027456183070403\n            description: description\n            unit_cost: 1.4658129805029452\n          totals:\n          - amount: 0.8008281904610115\n            currency: null\n          - amount: 0.8008281904610115\n            currency: null\n        period_start: 2000-01-23T04:56:07.000+00:00\n        invoice_id: invoice_id\n        totals:\n        - amount: 0.8008281904610115\n          currency: null\n        - amount: 0.8008281904610115\n          currency: null\n      properties:\n        balances:\n          description: balances are the amounts of currency left at the time of the\n            invoice.\n          items:\n            $ref: '#/components/schemas/CurrencyAmount'\n          type: array\n        invoice_id:\n          description: invoice_id is the unique ID representing the invoice.\n          type: string\n        invoice_items:\n          description: invoice_items are sorted by the cluster name.\n          items:\n            $ref: '#/components/schemas/InvoiceItem'\n          type: array\n        period_end:\n          description: period_end is the end of the billing period (exclusive).\n          format: date-time\n          type: string\n        period_start:\n          description: period_start is the start of the billing period (inclusive).\n          format: date-time\n          type: string\n        totals:\n          description: totals is a list of the total amounts per currency.\n          items:\n            $ref: '#/components/schemas/CurrencyAmount'\n          type: array\n      required:\n      - balances\n      - invoice_id\n      - invoice_items\n      - period_end\n      - period_start\n      - totals\n      type: object\n    InvoiceItem:\n      example:\n        cluster:\n          account_id: \"\"\n          cloud_provider: GCP\n          cockroach_version: v21.2.4\n          config:\n            serverless:\n              routing_id: example-cluster-1533\n              spend_limit: 0\n          created_at: 2022-03-22T20:23:11.285067Z\n          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n          deleted_at: null\n          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n          name: example-cluster\n          operation_status: CLUSTER_STATUS_UNSPECIFIED\n          plan: SERVERLESS\n          regions:\n          - name: us-central1\n            node_count: 0\n            sql_dns: free-tier7.gcp-us-central1.crdb.io\n            ui_dns: \"\"\n          state: CREATED\n          updated_at: 2022-03-22T20:23:11.879593Z\n        line_items:\n        - quantity_unit: null\n          total:\n            amount: 0.8008281904610115\n            currency: null\n          quantity: 6.027456183070403\n          description: description\n          unit_cost: 1.4658129805029452\n        - quantity_unit: null\n          total:\n            amount: 0.8008281904610115\n            currency: null\n          quantity: 6.027456183070403\n          description: description\n          unit_cost: 1.4658129805029452\n        totals:\n        - amount: 0.8008281904610115\n          currency: null\n        - amount: 0.8008281904610115\n          currency: null\n      properties:\n        cluster:\n          $ref: '#/components/schemas/Cluster'\n        line_items:\n          description: line_items contain all the relevant line items from the Metronome\n            invoice.\n          items:\n            $ref: '#/components/schemas/LineItem'\n          type: array\n        totals:\n          description: totals is a list of the total amounts of line items per currency.\n          items:\n            $ref: '#/components/schemas/CurrencyAmount'\n          type: array\n      required:\n      - cluster\n      - line_items\n      - totals\n      type: object\n    KeysetPaginationRequest:\n      properties:\n        as_of_time:\n          format: date-time\n          type: string\n        limit:\n          format: int32\n          type: integer\n        page:\n          type: string\n        sort_order:\n          $ref: '#/components/schemas/SortOrder'\n      type: object\n    KeysetPaginationResponse:\n      example:\n        next_page: next_page\n        previous_page: previous_page\n      properties:\n        next_page:\n          type: string\n        previous_page:\n          type: string\n      type: object\n    LineItem:\n      example:\n        quantity_unit: null\n        total:\n          amount: 0.8008281904610115\n          currency: null\n        quantity: 6.027456183070403\n        description: description\n        unit_cost: 1.4658129805029452\n      properties:\n        description:\n          description: description contains the details of the line item (i.e t3 micro).\n          type: string\n        quantity:\n          description: quantity is the number of the specific line items used.\n          format: double\n          type: number\n        quantity_unit:\n          $ref: '#/components/schemas/QuantityUnitType'\n        total:\n          $ref: '#/components/schemas/CurrencyAmount'\n        unit_cost:\n          description: unit_cost is the cost per unit of line item.\n          format: double\n          type: number\n      required:\n      - description\n      - quantity\n      - quantity_unit\n      - total\n      - unit_cost\n      type: object\n    ListAllowlistEntriesResponse:\n      example:\n        allowlist:\n        - cidr_ip: 192.168.1.1\n          cidr_mask: 32\n          name: Example\n          sql: true\n          ui: true\n        - cidr_ip: 192.168.1.1\n          cidr_mask: 32\n          name: Example\n          sql: true\n          ui: true\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n        propagating: true\n      properties:\n        allowlist:\n          items:\n            $ref: '#/components/schemas/AllowlistEntry'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n        propagating:\n          type: boolean\n      required:\n      - allowlist\n      - propagating\n      title: ListAllowlistEntriesResponse\n      type: object\n    ListAvailableRegionsResponse:\n      example:\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n        regions:\n        - distance: 0.8008282\n          provider: null\n          name: name\n          serverless: true\n          location: location\n        - distance: 0.8008282\n          provider: null\n          name: name\n          serverless: true\n          location: location\n      properties:\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n        regions:\n          items:\n            $ref: '#/components/schemas/CloudProviderRegion'\n          type: array\n      required:\n      - regions\n      type: object\n    ListClusterNodesResponse:\n      example:\n        nodes:\n        - name: name\n          region_name: region_name\n          status: null\n        - name: name\n          region_name: region_name\n          status: null\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n      properties:\n        nodes:\n          items:\n            $ref: '#/components/schemas/Node'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n      required:\n      - nodes\n      type: object\n    ListClustersResponse:\n      example:\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n        clusters:\n        - account_id: \"\"\n          cloud_provider: GCP\n          cockroach_version: v21.2.4\n          config:\n            serverless:\n              routing_id: example-cluster-1533\n              spend_limit: 0\n          created_at: 2022-03-22T20:23:11.285067Z\n          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n          deleted_at: null\n          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n          name: example-cluster\n          operation_status: CLUSTER_STATUS_UNSPECIFIED\n          plan: SERVERLESS\n          regions:\n          - name: us-central1\n            node_count: 0\n            sql_dns: free-tier7.gcp-us-central1.crdb.io\n            ui_dns: \"\"\n          state: CREATED\n          updated_at: 2022-03-22T20:23:11.879593Z\n        - account_id: \"\"\n          cloud_provider: GCP\n          cockroach_version: v21.2.4\n          config:\n            serverless:\n              routing_id: example-cluster-1533\n              spend_limit: 0\n          created_at: 2022-03-22T20:23:11.285067Z\n          creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n          deleted_at: null\n          id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n          name: example-cluster\n          operation_status: CLUSTER_STATUS_UNSPECIFIED\n          plan: SERVERLESS\n          regions:\n          - name: us-central1\n            node_count: 0\n            sql_dns: free-tier7.gcp-us-central1.crdb.io\n            ui_dns: \"\"\n          state: CREATED\n          updated_at: 2022-03-22T20:23:11.879593Z\n      properties:\n        clusters:\n          items:\n            $ref: '#/components/schemas/Cluster'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n      required:\n      - clusters\n      type: object\n    ListEgressRulesResponse:\n      description: ListEgressRulesResponse is the output for the ListEgressRules RPC.\n      example:\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n        rules:\n        - crl_managed: true\n          cluster_id: cluster_id\n          paths:\n          - paths\n          - paths\n          destination: destination\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          description: description\n          id: id\n          state: state\n          ports:\n          - 0\n          - 0\n          type: type\n        - crl_managed: true\n          cluster_id: cluster_id\n          paths:\n          - paths\n          - paths\n          destination: destination\n          name: name\n          created_at: 2000-01-23T04:56:07.000+00:00\n          description: description\n          id: id\n          state: state\n          ports:\n          - 0\n          - 0\n          type: type\n      properties:\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n        rules:\n          description: rules are the egress rules associated with the given CockroachDB\n            cluster.\n          items:\n            $ref: '#/components/schemas/EgressRule'\n          type: array\n      title: ListEgressRulesResponse\n      type: object\n    ListInvoicesResponse:\n      example:\n        invoices:\n        - period_end: 2000-01-23T04:56:07.000+00:00\n          balances:\n          - amount: 0.8008281904610115\n            currency: null\n          - amount: 0.8008281904610115\n            currency: null\n          invoice_items:\n          - cluster:\n              account_id: \"\"\n              cloud_provider: GCP\n              cockroach_version: v21.2.4\n              config:\n                serverless:\n                  routing_id: example-cluster-1533\n                  spend_limit: 0\n              created_at: 2022-03-22T20:23:11.285067Z\n              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n              deleted_at: null\n              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n              name: example-cluster\n              operation_status: CLUSTER_STATUS_UNSPECIFIED\n              plan: SERVERLESS\n              regions:\n              - name: us-central1\n                node_count: 0\n                sql_dns: free-tier7.gcp-us-central1.crdb.io\n                ui_dns: \"\"\n              state: CREATED\n              updated_at: 2022-03-22T20:23:11.879593Z\n            line_items:\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            totals:\n            - amount: 0.8008281904610115\n              currency: null\n            - amount: 0.8008281904610115\n              currency: null\n          - cluster:\n              account_id: \"\"\n              cloud_provider: GCP\n              cockroach_version: v21.2.4\n              config:\n                serverless:\n                  routing_id: example-cluster-1533\n                  spend_limit: 0\n              created_at: 2022-03-22T20:23:11.285067Z\n              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n              deleted_at: null\n              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n              name: example-cluster\n              operation_status: CLUSTER_STATUS_UNSPECIFIED\n              plan: SERVERLESS\n              regions:\n              - name: us-central1\n                node_count: 0\n                sql_dns: free-tier7.gcp-us-central1.crdb.io\n                ui_dns: \"\"\n              state: CREATED\n              updated_at: 2022-03-22T20:23:11.879593Z\n            line_items:\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            totals:\n            - amount: 0.8008281904610115\n              currency: null\n            - amount: 0.8008281904610115\n              currency: null\n          period_start: 2000-01-23T04:56:07.000+00:00\n          invoice_id: invoice_id\n          totals:\n          - amount: 0.8008281904610115\n            currency: null\n          - amount: 0.8008281904610115\n            currency: null\n        - period_end: 2000-01-23T04:56:07.000+00:00\n          balances:\n          - amount: 0.8008281904610115\n            currency: null\n          - amount: 0.8008281904610115\n            currency: null\n          invoice_items:\n          - cluster:\n              account_id: \"\"\n              cloud_provider: GCP\n              cockroach_version: v21.2.4\n              config:\n                serverless:\n                  routing_id: example-cluster-1533\n                  spend_limit: 0\n              created_at: 2022-03-22T20:23:11.285067Z\n              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n              deleted_at: null\n              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n              name: example-cluster\n              operation_status: CLUSTER_STATUS_UNSPECIFIED\n              plan: SERVERLESS\n              regions:\n              - name: us-central1\n                node_count: 0\n                sql_dns: free-tier7.gcp-us-central1.crdb.io\n                ui_dns: \"\"\n              state: CREATED\n              updated_at: 2022-03-22T20:23:11.879593Z\n            line_items:\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            totals:\n            - amount: 0.8008281904610115\n              currency: null\n            - amount: 0.8008281904610115\n              currency: null\n          - cluster:\n              account_id: \"\"\n              cloud_provider: GCP\n              cockroach_version: v21.2.4\n              config:\n                serverless:\n                  routing_id: example-cluster-1533\n                  spend_limit: 0\n              created_at: 2022-03-22T20:23:11.285067Z\n              creator_id: 7cde0cd9-0d8a-4008-8f90-45092ce8afc1\n              deleted_at: null\n              id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n              name: example-cluster\n              operation_status: CLUSTER_STATUS_UNSPECIFIED\n              plan: SERVERLESS\n              regions:\n              - name: us-central1\n                node_count: 0\n                sql_dns: free-tier7.gcp-us-central1.crdb.io\n                ui_dns: \"\"\n              state: CREATED\n              updated_at: 2022-03-22T20:23:11.879593Z\n            line_items:\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            - quantity_unit: null\n              total:\n                amount: 0.8008281904610115\n                currency: null\n              quantity: 6.027456183070403\n              description: description\n              unit_cost: 1.4658129805029452\n            totals:\n            - amount: 0.8008281904610115\n              currency: null\n            - amount: 0.8008281904610115\n              currency: null\n          period_start: 2000-01-23T04:56:07.000+00:00\n          invoice_id: invoice_id\n          totals:\n          - amount: 0.8008281904610115\n            currency: null\n          - amount: 0.8008281904610115\n            currency: null\n      properties:\n        invoices:\n          description: invoices are sorted by period_start time.\n          items:\n            $ref: '#/components/schemas/Invoice'\n          type: array\n      required:\n      - invoices\n      type: object\n    ListSQLUsersResponse:\n      example:\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n        users:\n        - name: name\n        - name: name\n      properties:\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n        users:\n          items:\n            $ref: '#/components/schemas/SQLUser'\n          type: array\n      required:\n      - users\n      type: object\n    LogExportClusterInfo:\n      description: |-\n        LogExportClusterInfo contains a package of information that fully\n        describes both the intended state of the log export configuration for\n        a specific cluster but also some metadata around its deployment\n        status, any error messages, and some timestamps.\n      example:\n        cluster_id: cluster_id\n        updated_at: 2000-01-23T04:56:07.000+00:00\n        created_at: 2000-01-23T04:56:07.000+00:00\n        user_message: user_message\n        spec:\n          auth_principal: auth_principal\n          log_name: log_name\n          redact: true\n          groups:\n          - channels:\n            - channels\n            - channels\n            log_name: log_name\n            redact: true\n            min_level: min_level\n          - channels:\n            - channels\n            - channels\n            log_name: log_name\n            redact: true\n            min_level: min_level\n          region: region\n          type: null\n        status: null\n      properties:\n        cluster_id:\n          type: string\n        created_at:\n          format: date-time\n          type: string\n        spec:\n          $ref: '#/components/schemas/LogExportClusterSpecification'\n        status:\n          $ref: '#/components/schemas/LogExportStatus'\n        updated_at:\n          format: date-time\n          type: string\n        user_message:\n          type: string\n      type: object\n    LogExportClusterSpecification:\n      description: |-\n        LogExportClusterSpecification contains all the data necessary to\n        configure log export for an individual cluster. Users would supply\n        this data via the API and also receive it back when inspecting the\n        state of their log export configuration.\n      example:\n        auth_principal: auth_principal\n        log_name: log_name\n        redact: true\n        groups:\n        - channels:\n          - channels\n          - channels\n          log_name: log_name\n          redact: true\n          min_level: min_level\n        - channels:\n          - channels\n          - channels\n          log_name: log_name\n          redact: true\n          min_level: min_level\n        region: region\n        type: null\n      properties:\n        auth_principal:\n          description: |-\n            auth_principal is either the AWS Role ARN that identifies a role\n            that the cluster account can assume to write to CloudWatch or the\n            GCP Project ID that the cluster service account has permissions to\n            write to for cloud logging.\n          type: string\n        groups:\n          description: |-\n            groups is a collection of log group configurations to customize\n            which CRDB channels get aggregated into different groups at the\n            target sink. Unconfigured channels will be sent to the default\n            locations via the settings above.\n          items:\n            $ref: '#/components/schemas/LogExportGroup'\n          type: array\n        log_name:\n          description: log_name is an identifier for the logs in the customer's log\n            sink.\n          type: string\n        redact:\n          description: |-\n            redact controls whether logs are redacted before forwarding to\n            customer sinks. By default they are not redacted.\n          type: boolean\n        region:\n          description: |-\n            region controls whether all logs are sent to a specific region in\n            the customer sink. By default, logs will remain their region of\n            origin depending on the cluster node's region.\n          type: string\n        type:\n          $ref: '#/components/schemas/LogExportType'\n      type: object\n    LogExportGroup:\n      description: |-\n        LogExportGroup contains an export configuration for a single\n        log group which can route logs for a subset of CRDB channels.\n      example:\n        channels:\n        - channels\n        - channels\n        log_name: log_name\n        redact: true\n        min_level: min_level\n      properties:\n        channels:\n          description: |-\n            channels is a list of CRDB log channels to include in this\n            group.\n          items:\n            type: string\n          type: array\n        log_name:\n          title: \"log_name is the name of the group, reflected in the log sink\"\n          type: string\n        min_level:\n          description: |-\n            min_level is the minimum log level to filter to this log\n            group. Should be one of INFO, WARNING, ERROR, FATAL.\n          type: string\n        redact:\n          description: |-\n            redact is a boolean that governs whether this log group\n            should aggregate redacted logs. Redaction settings will\n            inherit from the cluster log export defaults if unset.\n          type: boolean\n      type: object\n    LogExportStatus:\n      description: |-\n        LogExportStatus encodes the possible states that a configuration can\n        be in as it is created, deployed, and disabled.\n      enum:\n      - DISABLED\n      - DISABLING\n      - DISABLE_FAILED\n      - ENABLED\n      - ENABLING\n      - ENABLE_FAILED\n      type: string\n    LogExportType:\n      description: |-\n        LogExportType encodes the cloud selection that we're exporting to\n        along with the cloud logging platform.\n\n        Currently, each cloud has a single logging platform.\n      enum:\n      - AWS_CLOUDWATCH\n      - GCP_CLOUD_LOGGING\n      type: string\n    MetricExportInfo:\n      example:\n        cluster_id: cluster_id\n        integration:\n        - datadog:\n            site: null\n            api_key: api_key\n          user_message: user_message\n          cloudwatch:\n            target_region: target_region\n            log_group_name: log_group_name\n            role_arn: role_arn\n          status: null\n        - datadog:\n            site: null\n            api_key: api_key\n          user_message: user_message\n          cloudwatch:\n            target_region: target_region\n            log_group_name: log_group_name\n            role_arn: role_arn\n          status: null\n      properties:\n        cluster_id:\n          type: string\n        integration:\n          items:\n            $ref: '#/components/schemas/MetricExportIntegrationInfo'\n          type: array\n      type: object\n    MetricExportIntegrationInfo:\n      example:\n        datadog:\n          site: null\n          api_key: api_key\n        user_message: user_message\n        cloudwatch:\n          target_region: target_region\n          log_group_name: log_group_name\n          role_arn: role_arn\n        status: null\n      properties:\n        cloudwatch:\n          $ref: '#/components/schemas/CloudWatchConfig'\n        datadog:\n          $ref: '#/components/schemas/DatadogConfig'\n        status:\n          $ref: '#/components/schemas/MetricExportStatus'\n        user_message:\n          type: string\n      type: object\n    MetricExportIntegrationType:\n      enum:\n      - DATADOG\n      - CLOUDWATCH\n      type: string\n    MetricExportStatus:\n      enum:\n      - NOT_DEPLOYED\n      - DISABLING\n      - ENABLING\n      - ENABLED\n      - ERROR\n      type: string\n    NetworkVisiblity:\n      enum:\n      - NETWORK_VISIBILITY_PUBLIC\n      - NETWORK_VISIBILITY_PRIVATE\n      type: string\n    Node:\n      example:\n        name: name\n        region_name: region_name\n        status: null\n      properties:\n        name:\n          type: string\n        region_name:\n          type: string\n        status:\n          $ref: '#/components/schemas/NodeStatus'\n      required:\n      - name\n      - region_name\n      - status\n      type: object\n    NodeStatus:\n      enum:\n      - LIVE\n      - NOT_READY\n      type: string\n    Plan:\n      description: \" - DEDICATED: A paid plan that offers dedicated hardware in any\\\n        \\ location.\\n - CUSTOM: A plan option that is used for clusters whose machine\\\n        \\ configs are not \\nsupported in self-service. All INVOICE clusters are under\\\n        \\ this plan option.\\n - SERVERLESS: A paid plan that runs on shared hardware\\\n        \\ and caps the users'\\nmaximum monthly spending to a user-specified (possibly\\\n        \\ 0) amount.\"\n      enum:\n      - DEDICATED\n      - CUSTOM\n      - SERVERLESS\n      type: string\n    PrivateEndpointService:\n      example:\n        cloud_provider: null\n        region_name: region_name\n        aws:\n          availability_zone_ids:\n          - availability_zone_ids\n          - availability_zone_ids\n          service_name: service_name\n          service_id: service_id\n        status: null\n      properties:\n        aws:\n          $ref: '#/components/schemas/AWSPrivateLinkServiceDetail'\n        cloud_provider:\n          $ref: '#/components/schemas/api.CloudProvider'\n        region_name:\n          description: region_name is the cloud provider region name (i.e. us-east-1).\n          type: string\n        status:\n          $ref: '#/components/schemas/PrivateEndpointServiceStatus'\n      required:\n      - aws\n      - cloud_provider\n      - region_name\n      - status\n      type: object\n    PrivateEndpointServiceStatus:\n      description: |-\n        - ENDPOINT_SERVICE_STATUS_DELETE_FAILED: One note is that if the service is deleted, there is no longer\n        a record, hence there is no \"DELETED\" status.\n      enum:\n      - ENDPOINT_SERVICE_STATUS_CREATING\n      - ENDPOINT_SERVICE_STATUS_AVAILABLE\n      - ENDPOINT_SERVICE_STATUS_CREATE_FAILED\n      - ENDPOINT_SERVICE_STATUS_DELETING\n      - ENDPOINT_SERVICE_STATUS_DELETE_FAILED\n      title: Private Endpoints\n      type: string\n    PrivateEndpointServices:\n      example:\n        services:\n        - cloud_provider: null\n          region_name: region_name\n          aws:\n            availability_zone_ids:\n            - availability_zone_ids\n            - availability_zone_ids\n            service_name: service_name\n            service_id: service_id\n          status: null\n        - cloud_provider: null\n          region_name: region_name\n          aws:\n            availability_zone_ids:\n            - availability_zone_ids\n            - availability_zone_ids\n            service_name: service_name\n            service_id: service_id\n          status: null\n      properties:\n        services:\n          description: services contains a list of all cluster related services.\n          items:\n            $ref: '#/components/schemas/PrivateEndpointService'\n          type: array\n      required:\n      - services\n      type: object\n    QuantityUnitType:\n      description: |-\n        Billing\n        QuantityUnitType is the unit type for a quantity of billing line item.\n      enum:\n      - HOURS\n      - REQUEST_UNITS\n      type: string\n    Region:\n      properties:\n        internal_dns:\n          description: internal_dns is the internal DNS name of the cluster within\n            the cloud provider's network. It is used to connect to the cluster with\n            PrivateLink or VPC peering.\n          type: string\n        name:\n          type: string\n        node_count:\n          description: node_count will be 0 for serverless clusters.\n          format: int32\n          type: integer\n        sql_dns:\n          description: sql_dns is the DNS name of SQL interface of the cluster. It\n            is used to connect to the cluster with IP allowlisting.\n          type: string\n        ui_dns:\n          description: ui_dns is the DNS name used when connecting to the DB Console\n            for the cluster.\n          type: string\n      required:\n      - internal_dns\n      - name\n      - node_count\n      - sql_dns\n      - ui_dns\n      type: object\n    SQLUser:\n      example:\n        name: name\n      properties:\n        name:\n          type: string\n      required:\n      - name\n      type: object\n    ServerlessClusterConfig:\n      properties:\n        routing_id:\n          description: Used to build a connection string.\n          type: string\n        spend_limit:\n          description: Spend limit in US cents.\n          format: int32\n          type: integer\n      required:\n      - routing_id\n      - spend_limit\n      type: object\n    ServerlessClusterCreateSpecification:\n      properties:\n        regions:\n          description: |-\n            Region values should match the cloud provider's zone code.\n            For example, for Oregon, set region_name to \"us-west2\" for\n            GCP and \"us-west-2\" for AWS.\n          items:\n            type: string\n          type: array\n        spend_limit:\n          format: int32\n          title: Spend limit in US cents\n          type: integer\n      required:\n      - regions\n      - spend_limit\n      type: object\n    ServerlessClusterUpdateSpecification:\n      properties:\n        spend_limit:\n          format: int32\n          title: Spend limit in US cents\n          type: integer\n      required:\n      - spend_limit\n      type: object\n    SortOrder:\n      description: \" - DESC: Sort in descending order. The default order is ascending.\"\n      enum:\n      - ASC\n      - DESC\n      type: string\n    Status:\n      properties:\n        code:\n          format: int32\n          type: integer\n        details:\n          items:\n            $ref: '#/components/schemas/Any'\n          type: array\n        message:\n          type: string\n      type: object\n    UpdateClusterSpecification:\n      example:\n        dedicated:\n          hardware:\n            machine_type: n2-standard-8\n          region_nodes:\n            us-central1: 5\n            us-west1: 3\n      properties:\n        dedicated:\n          $ref: '#/components/schemas/DedicatedClusterUpdateSpecification'\n        serverless:\n          $ref: '#/components/schemas/ServerlessClusterUpdateSpecification'\n      type: object\n    api.CloudProvider:\n      description: |2-\n         - GCP: The Google Cloud Platform cloud provider.\n         - AWS: The Amazon Web Services cloud provider.\n      enum:\n      - GCP\n      - AWS\n      type: string\n    api.Database:\n      example:\n        table_count: table_count\n        name: name\n      properties:\n        name:\n          type: string\n        table_count:\n          format: int64\n          type: string\n      required:\n      - name\n      title: Database\n      type: object\n    api.ListDatabasesResponse:\n      example:\n        databases:\n        - table_count: table_count\n          name: name\n        - table_count: table_count\n          name: name\n        pagination:\n          next_page: next_page\n          previous_page: previous_page\n      properties:\n        databases:\n          items:\n            $ref: '#/components/schemas/api.Database'\n          type: array\n        pagination:\n          $ref: '#/components/schemas/KeysetPaginationResponse'\n      required:\n      - databases\n      title: ListDatabasesResponse\n      type: object\n    CMEKClusterSpecification:\n      example:\n        region_specs:\n        - key_spec:\n            auth_principal: arn:aws:iam::account:role/role-name-with-path\n            type: AWS_KMS\n            uri: arn:aws:kms:us-west-2:111122223333:key/id-of-kms-key\n          region: us-central1\n      properties:\n        region_specs:\n          items:\n            $ref: '#/components/schemas/CMEKRegionSpecification'\n          type: array\n      required:\n      - region_specs\n      title: CMEKClusterSpecification\n      type: object\n    UpdateCMEKStatusRequest:\n      example:\n        action: REVOKE\n      properties:\n        action:\n          $ref: '#/components/schemas/CMEKCustomerAction'\n      required:\n      - action\n      title: UpdateCMEKStatusRequest\n      type: object\n    CreateDatabaseRequest:\n      example:\n        name: example_database_name\n      properties:\n        name:\n          type: string\n      required:\n      - name\n      title: CreateDatabaseRequest\n      type: object\n    UpdateDatabaseRequest:\n      example:\n        new_name: example_new_database_name\n      properties:\n        name:\n          type: string\n        new_name:\n          type: string\n      required:\n      - name\n      - new_name\n      title: UpdateDatabaseRequest\n      type: object\n    EnableLogExportRequest:\n      example:\n        auth_principal: auth_principal\n        log_name: log_name\n        redact: true\n        groups:\n        - channels:\n          - channels\n          - channels\n          log_name: log_name\n          redact: true\n          min_level: min_level\n        - channels:\n          - channels\n          - channels\n          log_name: log_name\n          redact: true\n          min_level: min_level\n        region: region\n        type: null\n      properties:\n        auth_principal:\n          description: |-\n            auth_principal is either the AWS Role ARN that identifies a role\n            that the cluster account can assume to write to CloudWatch or the\n            GCP Project ID that the cluster service account has permissions to\n            write to for cloud logging.\n          type: string\n        groups:\n          description: |-\n            groups is a collection of log group configurations that allows the\n            customer to define collections of CRDB log channels that are aggregated\n            separately at the target sink.\n          items:\n            $ref: '#/components/schemas/LogExportGroup'\n          type: array\n        log_name:\n          description: log_name is an identifier for the logs in the customer's log\n            sink.\n          type: string\n        redact:\n          description: |-\n            redact allows the customer to set a default redaction policy for\n            logs before they are exported to the target sink. If a group config\n            omits a redact flag and this one is set to `true`, then that group\n            will receive redacted logs.\n          type: boolean\n        region:\n          description: |-\n            region allows the customer to override the destination region for\n            all logs for a cluster.\n          type: string\n        type:\n          $ref: '#/components/schemas/LogExportType'\n      title: EnableLogExportRequest\n      type: object\n    EnableMetricExportRequest:\n      example:\n        datadog:\n          site: null\n          api_key: api_key\n        cloudwatch:\n          target_region: target_region\n          log_group_name: log_group_name\n          role_arn: role_arn\n      properties:\n        cloudwatch:\n          $ref: '#/components/schemas/CloudWatchConfig'\n        datadog:\n          $ref: '#/components/schemas/DatadogConfig'\n      title: EnableMetricExportRequest\n      type: object\n    AllowlistEntry_1:\n      example:\n        cidr_ip: 192.168.1.1\n        cidr_mask: 32\n        name: Example\n        sql: true\n        ui: true\n      properties:\n        name:\n          type: string\n        sql:\n          type: boolean\n        ui:\n          type: boolean\n      required:\n      - sql\n      - ui\n      title: AllowlistEntry\n      type: object\n    CockroachCloud_SetAwsEndpointConnectionState_request:\n      example:\n        status: ENDPOINT_AVAILABLE\n      properties:\n        status:\n          $ref: '#/components/schemas/AWSEndpointConnectionStatus'\n      type: object\n    AddEgressRuleRequest:\n      description: AddEgressRuleRequest is the input for the rpc AddEgressRule().\n      example:\n        cluster_id: 35c4abb2-bb66-46d7-afed-25ebef5ed100\n        description: some very descriptive stuff\n        destination: www.google.com\n        name: example-1\n        paths:\n        - /hello\n        ports:\n        - 443\n        - 80\n        type: FQDN\n      properties:\n        description:\n          description: description is text that serves to document the rules purpose.\n          type: string\n        destination:\n          description: |-\n            destination is the endpoint (or subnetwork if CIDR) to which traffic is\n            allowed.\n          type: string\n        idempotency_key:\n          description: |-\n            idempotency_key uniquely identifies this request. If not set, it will be\n            set by the server.\n          type: string\n        name:\n          description: name is the name of the egress rule.\n          type: string\n        paths:\n          description: |-\n            paths are the allowed URL paths. If empty, all paths are allowed. Only\n            valid if Type=\"FQDN\".\n          items:\n            type: string\n          type: array\n        ports:\n          description: |-\n            ports are the allowed ports for TCP protocol. If Empty, all ports are\n            allowed.\n          items:\n            format: int32\n            type: integer\n          type: array\n        type:\n          description: |-\n            type classifies the Destination field. Valid types include: \"FQDN\",\n            \"CIDR\".\n          type: string\n      required:\n      - description\n      - destination\n      - name\n      - type\n      title: AddEgressRuleRequest\n      type: object\n    SetEgressTrafficPolicyRequest:\n      description: SetEgressTrafficPolicyRequest is the input for the SetEgressTrafficPolicy\n        RPC.\n      example:\n        idempotency_key: idempotency_key\n        allow_all: true\n      properties:\n        allow_all:\n          description: |-\n            allow_all, if true results in unrestricted egress traffic. If false, egress\n            traffic is set to default-deny and is managed via the Egress Rule\n            Management API.\n          type: boolean\n        idempotency_key:\n          description: |-\n            idempotency_key uniquely identifies this request. If not set, it will be\n            set by the server.\n          type: string\n      required:\n      - allow_all\n      title: SetEgressTrafficPolicyRequest\n      type: object\n    EditEgressRuleRequest:\n      description: EditEgressRuleRequest is the input message to the EditEgressRule\n        RPC.\n      example:\n        cluster_id: 35c4abb2-bb66-46d7-afed-25ebef5ed100\n        ports:\n        - 443\n        - 80\n        rule_id: 35c4abb2-bb66-46d7-afed-25ebef5ed2aa\n      properties:\n        description:\n          description: description is text that serves to document the rules purpose.\n          type: string\n        destination:\n          description: |-\n            destination is a CIDR range or fully-qualified domain name to which\n            outgoing traffic should be allowed. This field is required.\n          type: string\n        idempotency_key:\n          description: |-\n            idempotency_key uniquely identifies this request. If not set, it will be\n            set by the server.\n          type: string\n        paths:\n          description: |-\n            paths are the allowed URL paths. If empty, all paths are allowed. Only\n            valid if Type=\"FQDN\".\n          items:\n            type: string\n          type: array\n        ports:\n          description: |-\n            ports are the allowed ports for TCP protocol. If empty, all ports are\n            allowed.\n          items:\n            format: int32\n            type: integer\n          type: array\n        type:\n          description: |-\n            type is the destination type of this rule. Example values are\n            FQDN or CIDR. This field is required.\n          type: string\n      title: EditEgressRuleRequest\n      type: object\n    CreateSQLUserRequest:\n      example:\n        name: example_username\n        password: example_password\n      properties:\n        name:\n          type: string\n        password:\n          type: string\n      required:\n      - name\n      - password\n      title: CreateSQLUserRequest\n      type: object\n    UpdateSQLUserPasswordRequest:\n      example:\n        password: example_new_password\n      properties:\n        password:\n          type: string\n      required:\n      - password\n      title: UpdateSQLUserPasswordRequest\n      type: object\n  securitySchemes:\n    Bearer:\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/cockroachdb/cockroach-cloud-sdk-go@7cb6015e45db9fb6d3ccb249a90cae6794625d03/-/blob/internal/openapi-generator/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/cockroachdb/cockroach-cloud-sdk-go/blob/7cb6015e45db9fb6d3ccb249a90cae6794625d03/internal/openapi-generator/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: at internal/openapi-generator/api/openapi.yaml:1667:3: duplicate path: \"/api/v1/clusters/{cluster_id}/networking/allowlist/{entry.cidr_ip}/{entry.cidr_mask}\""
}