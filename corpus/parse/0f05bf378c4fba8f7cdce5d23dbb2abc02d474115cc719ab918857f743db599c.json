{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/mikekonan/go-oas3"
		},
		"file": {
			"name": "swagger.yaml",
			"size": 0,
			"path": "example/swagger.yaml",
			"byteSize": 6270,
			"content": "openapi: 3.0.0\ninfo:\n  title: go-oas3 example\n  description: go-oas3 example\n  version: 1.0.0\nservers:\n  - url: 'https://example.com'\npaths:\n  /transaction:\n    post:\n      tags:\n        - transactions\n      parameters:\n        - in: header\n          name: x-signature\n          schema:\n            type: string\n            maxLength: 5\n        - $ref: \"#/components/parameters/Fingerprint\"\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateTransactionRequest\"\n        description: address to observe\n      responses:\n        201:\n          description: transaction created\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n        500:\n          description: unhandled error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n  /transactions/{uuid}:\n    delete:\n      security:\n        - Bearer: []\n        - Cookie: []\n      tags:\n        - transactions\n      parameters:\n        - in: header\n          name: x-signature\n          schema:\n            type: string\n            maxLength: 5\n        - in: path\n          name: uuid\n          schema:\n            type: string\n          required: true\n          description: uuid\n          x-go-type: \"github.com/satori/go.uuid.UUID\"\n          x-go-type-string-parse: \"github.com/satori/go.uuid.FromString\"\n        - in: path\n          name: regexParam\n          required: true\n          schema:\n            type: string\n            x-go-regex: ^[.?\\d]+$\n            minLength: 5\n        - $ref: \"#/components/parameters/Fingerprint\"\n        - in: query\n          name: timeParam\n          schema:\n            $ref: '#/components/schemas/Time'\n      responses:\n        200:\n          description: transaction deleted\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n        400:\n          description: bad request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/GenericResponse\"\n  /callbacks/{callbackType}:\n    post:\n      parameters:\n        - description: callback type\n          in: path\n          name: callbackType\n          required: true\n          schema:\n            type: string\n        - description: callback bool param in query\n          in: query\n          name: hasSmth\n          schema:\n            $ref: '#/components/schemas/Boolean'\n      responses:\n        '200':\n          headers:\n            x-jws-signature:\n              schema:\n                type: string\n              description: response signature\n            Set-Cookie:\n              schema:\n                type: string\n              description: response signature cookie\n              example: JSESSIONID=abcde12345; Path=/; HttpOnly\n          content:\n            application/octet-stream:\n              schema:\n                $ref: '#/components/schemas/RawPayload'\n          description: OK\n      security:\n        - Cookie: []\n      tags:\n        - callbacks\n      description: callbacks\n      requestBody:\n        content:\n          application/octet-stream:\n            schema:\n              $ref: '#/components/schemas/RawPayload'\n        description: Callback data\n        required: true\n      summary: Callback\ncomponents:\n  securitySchemes:\n    Bearer:\n      type: apiKey\n      scheme: bearer\n      name: Authorization\n      in: header\n    Cookie:\n      type: apiKey\n      in: cookie\n      name: JSESSIONID\n    Basic:\n      type: http\n      scheme: bearer\n      name: Authorization\n      in: header\n  parameters:\n    Fingerprint:\n      description: Fingerprint\n      in: header\n      name: x-fingerprint\n      required: true\n      schema:\n        maxLength: 32\n        minLength: 32\n        x-go-regex: \"[0-9a-fA-F]+\"\n        type: string\n\n  schemas:\n    Boolean:\n      type: string\n      x-go-type: bool\n      x-go-type-string-parse: \"strconv.ParseBool\"\n    Time:\n      example: \"2020-12-08T16:38:09.70516+03:00\"\n      type: string\n      x-go-type: \"time.Time\"\n      x-go-type-string-parse: \"github.com/spf13/cast.ToTimeE\"\n    CurrencyCode:\n      $ref: \"https://raw.githubusercontent.com/mikekonan/go-types/v1.0.9/swagger.yaml#/components/schemas/CurrencyCode\"\n    CountryAlpha2:\n      $ref: \"https://raw.githubusercontent.com/mikekonan/go-types/v1.0.9/swagger.yaml#/components/schemas/CountryAlpha2\"\n    Email:\n      $ref: \"https://raw.githubusercontent.com/mikekonan/go-types/v1.0.9/swagger.yaml#/components/schemas/Email\"\n    URL:\n      $ref: \"https://raw.githubusercontent.com/mikekonan/go-types/v1.0.9/swagger.yaml#/components/schemas/URL\"\n    GenericResponse:\n      properties:\n        result:\n          type: string\n          enum:\n            - success\n            - failed\n          example: success\n    RawPayload:\n      type: string\n      format: binary\n    WithEnum:\n      type: string\n      enum:\n        - one\n        - two\n    CreateTransactionRequest:\n      properties:\n        Currency:\n          $ref: '#/components/schemas/CurrencyCode'\n        Country:\n          $ref: '#/components/schemas/CountryAlpha2'\n        Email:\n          $ref: '#/components/schemas/Email'\n        CallbackURL:\n          $ref: '#/components/schemas/URL'\n        TransactionID:\n          type: string\n          format: uuid\n        RegexParam:\n          type: string\n          x-go-regex: ^[.?\\d]+$\n        Amount:\n          type: number\n          minimum: 0.009\n          exclusiveMinimum: true\n        AmountCents:\n          type: integer\n          maximum: 100\n        Description:\n          type: string\n          minLength: 8\n          maxLength: 100\n          x-go-string-trimmable: true\n        Title:\n          type: string\n          minLength: 8\n          maxLength: 50\n          x-go-string-trimmable: true\n        Details:\n          type: string\n          x-go-pointer: true\n          x-go-omitempty: true\n      required:\n        - Description\n",
			"canonicalURL": "/github.com/mikekonan/go-oas3@b9a5c66e16a5c3bb1c80442e09c604279f3ab800/-/blob/example/swagger.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/mikekonan/go-oas3/blob/b9a5c66e16a5c3bb1c80442e09c604279f3ab800/example/swagger.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"CountryAlpha2\": parse schema: resolve \"https://raw.githubusercontent.com/mikekonan/go-types/v1.0.9/swagger.yaml#/components/schemas/CountryAlpha2\": parse enum values: parse value \"false\": expected type \"string\", got \"bool\""
}