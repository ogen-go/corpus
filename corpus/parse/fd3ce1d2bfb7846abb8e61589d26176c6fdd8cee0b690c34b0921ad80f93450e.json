{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "users.yml",
			"size": 0,
			"path": "plugins/Reactions/openapi/users.yml",
			"byteSize": 3284,
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /users/{id}/reacted:\n        get:\n            summary: Get a user's posts that have received a certain reaction.\n            tags:\n                - Users\n            parameters:\n                - description: The user ID.\n                  in: path\n                  name: id\n                  required: true\n                  schema:\n                      type: integer\n                - description: The reaction to filter by.\n                  in: query\n                  name: reactionUrlcode\n                  required: true\n                  schema:\n                      type: string\n                - description: expand parameters\n                  in: query\n                  name: expand\n                  schema:\n                      items:\n                          enum:\n                              - insertUser\n                              - updateUser\n                              - reactions\n                              - all\n                          type: string\n                      type: array\n                  style: form\n            responses:\n                \"200\":\n                    content:\n                        \"application/json\":\n                            schema:\n                                type: array\n                                items:\n                                    $ref: \"#/components/schemas/ReactedRecord\"\n                    description: Success\ncomponents:\n    schemas:\n        ReactedRecord:\n            type: object\n            properties:\n                name:\n                    description: The name of the record\n                    type: string\n                body:\n                    description: The body of the record\n                    type: string\n                insertUserID:\n                    description: The author of the record\n                    type: integer\n                dateUpdated:\n                    format: date-time\n                    type: string\n                recordID:\n                    type: integer\n                recordType:\n                    type: string\n                    enum:\n                        - Comment\n                        - Discussion\n                discussionID:\n                    type: integer\n                commentID:\n                    type: integer\n                url:\n                    type: string\n                insertUser:\n                    $ref: \"#/components/schemas/UserFragment\"\n                updateUser:\n                    $ref: \"#/components/schemas/UserFragment\"\n                reactions:\n                    type: array\n                    items:\n                        $ref: \"#/components/schemas/ReactionFragment\"\n            required:\n                - name\n                - body\n                - insertUserID\n                - recordID\n                - recordType\n                - discussionID\n                - url\n        ReactionFragment:\n            type: object\n            properties:\n                tagID:\n                    type: integer\n                urlcode:\n                    type: string\n                name:\n                    type: string\n                class:\n                    type: string\n                count:\n                    type: integer\n"
		}
	},
	"Error": "parse: parse spec: paths: /users/{id}/reacted: get: operation \"\": responses: 200: content: \"application/json\": schema: parse schema: item: parse schema: resolve \"#/components/schemas/ReactedRecord\": parse schema: property \"insertUser\": parse schema: resolve \"#/components/schemas/UserFragment\": find schema: resolve \"#/components/schemas/UserFragment\": can't find value for \"components/schemas/UserFragment\""
}