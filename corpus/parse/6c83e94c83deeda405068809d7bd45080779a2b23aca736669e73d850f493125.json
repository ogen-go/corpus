{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/vanilla/vanilla"
		},
		"file": {
			"name": "role-requests.yml",
			"size": 0,
			"path": "applications/dashboard/openapi/role-requests.yml",
			"byteSize": 8538,
			"content": "openapi: 3.0.2\ninfo:\npaths:\n    /role-requests/applications:\n        post:\n            summary: Apply to a role.\n            tags:\n                - Role Requests\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                roleID:\n                                    type: integer\n                                    description: The role to apply to.\n                                attributes:\n                                    type: object\n                                    description: Custom fields for the request.\n            responses:\n                \"201\":\n                    description: Created.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/RoleApplication\"\n        get:\n            summary: List role applicants.\n            tags:\n                - Role Requests\n            parameters:\n                - name: roleID\n                  in: query\n                  description: Filter by role.\n                  schema:\n                      type: integer\n                - name: status\n                  in: query\n                  description: Filter by status.\n                  schema:\n                      $ref: \"#/components/schemas/RoleRequestStatus\"\n                - name: userID\n                  in: query\n                  description: Filter by user.\n                  schema:\n                      type: integer\n                - $ref: \"#/components/parameters/Page\"\n                - $ref: \"#/components/parameters/Offset\"\n                - name: limit\n                  in: query\n                  description: Desired number of items per page.\n                  schema:\n                      type: integer\n                      default: 30\n                      maximum: 100\n                      minimum: 1\n                - name: sort\n                  in: query\n                  description: Sort the results.\n                  schema:\n                      type: string\n                      enum:\n                          - dateInserted\n                          - -dateInserted\n                - $ref: \"#/components/parameters/RoleRequestExpand\"\n            responses:\n                \"200\":\n                    description: OK.\n                    content:\n                        application/json:\n                            schema:\n                                type: array\n                                items:\n                                    allOf:\n                                        - $ref: \"#/components/schemas/RoleApplication\"\n                                        - $ref: \"#/components/schemas/RoleRequestExpansions\"\n    /role-requests/applications/{id}:\n        get:\n            summary: Get a single application.\n            tags:\n                - Role Requests\n            parameters:\n                - $ref: \"#/components/parameters/RoleRequestID\"\n                - $ref: \"#/components/parameters/RoleRequestExpand\"\n            responses:\n                \"200\":\n                    description: Success.\n                    content:\n                        application/json:\n                            schema:\n                                allOf:\n                                    - $ref: \"#/components/schemas/RoleApplication\"\n                                    - $ref: \"#/components/schemas/RoleRequestExpansions\"\n                \"403\":\n                    $ref: \"./responses.yml#/components/responses/PermissionError\"\n                \"404\":\n                    $ref: \"./responses.yml#/components/responses/NotFound\"\n        patch:\n            summary: Update a role application.\n            tags:\n                - Role Requests\n            parameters:\n                - $ref: \"#/components/parameters/RoleRequestID\"\n                - $ref: \"#/components/parameters/RoleRequestExpand\"\n            requestBody:\n                content:\n                    application/json:\n                        schema:\n                            type: object\n                            properties:\n                                status:\n                                    $ref: \"#/components/schemas/RoleRequestStatus\"\n            responses:\n                \"200\":\n                    description: Updated.\n                    content:\n                        application/json:\n                            schema:\n                                $ref: \"#/components/schemas/RoleApplication\"\n        delete:\n            summary: Delete a role application.\n            tags:\n                - Role Requests\n            parameters:\n                - $ref: \"#/components/parameters/RoleRequestID\"\n            responses:\n                \"204\":\n                    description: Success\ncomponents:\n    parameters:\n        RoleRequestID:\n            name: id\n            in: path\n            description: The ID of the request.\n            required: true\n            schema:\n                type: integer\n        RoleRequestExpand:\n            name: expand\n            description: |-\n                Expand associated records using one or more valid field names. A value of \"all\" will expand all expandable fields.\n\n                Note that only community managers can view and expand the `statusUser`.\n            in: query\n            schema:\n                type: array\n                items:\n                    type: string\n                    enum:\n                        - all\n                        - user\n                        - role\n                        - statusUser\n            style: form\n    schemas:\n        RoleRequestItem:\n            type: object\n            properties:\n                roleRequestID:\n                    type: integer\n                    description: The unique ID of the entry.\n                type:\n                    $ref: \"#/components/schemas/RoleRequestType\"\n                roleID:\n                    type: integer\n                    description: The role being applied/invited to.\n                userID:\n                    type: integer\n                    description: The user applying/being invited.\n                status:\n                    $ref: \"#/components/schemas/RoleRequestStatus\"\n                dateOfStatus:\n                    type: integer\n                    description: The date the status was changed.  Only community managers see this.\n                statusUserID:\n                    type: integer\n                    description: The user that last set the status. Only community managers see this.\n                dateExpires:\n                    type: string\n                    format: date-time\n                    nullable: true\n                    description: The date the application/invitation expires.\n                attributes:\n                    type: object\n            required:\n                - roleRequestID\n                - roleID\n                - userID\n                - status\n                - dateExpires\n                - attributes\n        RoleApplication:\n            allOf:\n                - $ref: \"#/components/schemas/RoleRequestItem\"\n                - $ref: \"#/components/schemas/InsertInfo\"\n                - $ref: \"#/components/schemas/UpdateInfo\"\n        RoleRequestStatus:\n            description: The current status of the request.\n            type: string\n            enum:\n                - pending\n                - approved\n                - denied\n        RoleRequestType:\n            description: The type of role request.\n            type: string\n            enum:\n                - application\n                - invitation\n        RoleRequestExpansions:\n            type: object\n            properties:\n                role:\n                    $ref: \"./schemas.yml#/components/schemas/RoleFragment\"\n                user:\n                    $ref: \"./schemas.yml#/components/schemas/UserFragment\"\n                statusUser:\n                    $ref: \"./schemas.yml#/components/schemas/UserFragment\"\n        RoleRequestFragment:\n            type: object\n            properties:\n                status:\n                    $ref: \"#/components/schemas/RoleRequestStatus\"\n                dateInserted:\n                    type: string\n                    format: date-time\n            required:\n                - status\n                - dateInserted\n",
			"canonicalURL": "/github.com/vanilla/vanilla@dfe2732ec86d37eed7eec0956151e79f2f414b4f/-/blob/applications/dashboard/openapi/role-requests.yml",
			"externalURLs": [
				{
					"url": "https://github.com/vanilla/vanilla/blob/dfe2732ec86d37eed7eec0956151e79f2f414b4f/applications/dashboard/openapi/role-requests.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"RoleApplication\": parse schema: allOf: [1]: parse schema: resolve \"#/components/schemas/InsertInfo\": find schema: resolve \"#/components/schemas/InsertInfo\": can't find value for \"components/schemas/InsertInfo\""
}