{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/saveourtool/save-cloud"
		},
		"file": {
			"name": "backend-api-docs.json",
			"size": 0,
			"path": "save-backend/backend-api-docs.json",
			"byteSize": 208451,
			"content": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"SAVE Backend API\",\n    \"version\": \"v1\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://localhost:5800\",\n      \"description\": \"Generated server url\"\n    }\n  ],\n  \"paths\": {\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/upload-snapshot\": {\n      \"post\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Upload a snapshot of test suites source.\",\n        \"description\": \"Upload a snapshot of test suites source.\",\n        \"operationId\": \"uploadSnapshot\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"required\": [\n                  \"content\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"content\": {\n                    \"description\": \"content of uploading snapshot\"\n                  },\n                  \"version\": {\n                    \"description\": \"version of uploading snapshot\"\n                  },\n                  \"creationTime\": {\n                    \"description\": \"creationTime of uploading snapshot\"\n                  },\n                  \"X-Authorization-Source\": {\n                    \"example\": \"basic\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully uploaded provided snapshot.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/download-snapshot\": {\n      \"post\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Download a snapshot of test suites source.\",\n        \"description\": \"Download a snapshot of test suites source.\",\n        \"operationId\": \"downloadSnapshot\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"description\": \"version of downloading snapshot\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"short\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"char\": {\n                        \"type\": \"string\"\n                      },\n                      \"int\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"long\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                      },\n                      \"float\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                      },\n                      \"double\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                      },\n                      \"direct\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"readOnly\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully downloaded snapshot with provided version.\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"short\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"char\": {\n                        \"type\": \"string\"\n                      },\n                      \"int\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"long\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                      },\n                      \"float\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                      },\n                      \"double\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                      },\n                      \"direct\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"readOnly\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"short\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"char\": {\n                        \"type\": \"string\"\n                      },\n                      \"int\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"long\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                      },\n                      \"float\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                      },\n                      \"double\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                      },\n                      \"direct\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"readOnly\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/users/{userName}/save/token\": {\n      \"post\": {\n        \"tags\": [\n          \"users-details-controller\"\n        ],\n        \"operationId\": \"saveUserToken\",\n        \"parameters\": [\n          {\n            \"name\": \"userName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/users/save\": {\n      \"post\": {\n        \"tags\": [\n          \"users-details-controller\"\n        ],\n        \"operationId\": \"saveUser\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserInfo\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/test-suites/get-by-ids\": {\n      \"post\": {\n        \"tags\": [\n          \"test-suites\"\n        ],\n        \"summary\": \"Get test suites by ids.\",\n        \"description\": \"Get list of available test suites by their ids.\",\n        \"operationId\": \"getTestSuitesByIds\",\n        \"parameters\": [\n          {\n            \"name\": \"isContest\",\n            \"in\": \"query\",\n            \"description\": \"is given request sent for browsing test suites for contest, default is false\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched test suites by ids.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/fetch\": {\n      \"post\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Post fetching of new tests from test suites source.\",\n        \"description\": \"Post fetching of new tests from test suites source.\",\n        \"operationId\": \"triggerFetch\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"mode\",\n            \"in\": \"query\",\n            \"description\": \"fetch mode\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"BY_BRANCH\",\n                \"BY_COMMIT\",\n                \"BY_TAG\"\n              ]\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"description\": \"version to be fetched: tag, branch or commit id\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"202\": {\n            \"description\": \"Successfully trigger fetching new tests from requested test suites source.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/update\": {\n      \"post\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Get or create a new test suite source by provided values.\",\n        \"description\": \"Get or create a new test suite source by provided values.\",\n        \"operationId\": \"update\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"description\": \"ID of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully get or create test suites source with requested values.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Test suite name is already taken.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Test suites source was not found by provided ID.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Try to change organization or git by this request.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/create\": {\n      \"post\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Get or create a new test suite source by provided values.\",\n        \"description\": \"Get or create a new test suite source by provided values.\",\n        \"operationId\": \"createTestSuitesSource\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully get or create test suites source with requested values.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either git credentials were not found by provided url or organization was not found by provided name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Test suite name is already taken.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"CONFLICT\",\n                    \"EXIST\",\n                    \"NEW\",\n                    \"UPDATED\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-execution\": {\n      \"post\": {\n        \"tags\": [\n          \"test-executions\"\n        ],\n        \"operationId\": \"getTestExecutionByLocation\",\n        \"parameters\": [\n          {\n            \"name\": \"executionId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestResultLocation\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestExecutionDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-executions\": {\n      \"post\": {\n        \"tags\": [\n          \"test-executions\"\n        ],\n        \"operationId\": \"getTestExecutions\",\n        \"parameters\": [\n          {\n            \"name\": \"executionId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"size\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"checkDebugInfo\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestExecutionFilters\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestExecutionDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/run/trigger\": {\n      \"post\": {\n        \"tags\": [\n          \"run-execution-controller\"\n        ],\n        \"operationId\": \"trigger\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RunExecutionRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/run/re-trigger\": {\n      \"post\": {\n        \"tags\": [\n          \"run-execution-controller\"\n        ],\n        \"operationId\": \"reTrigger\",\n        \"parameters\": [\n          {\n            \"name\": \"executionId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/projects/{organizationName}/{projectName}/users/roles\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\",\n          \"roles\"\n        ],\n        \"summary\": \"Get role for a user on a particular project.\",\n        \"description\": \"If userName is not present, then will return the role of current user in given project, otherwise will return role of user with name userName in project with name projectName.\",\n        \"operationId\": \"getRole\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization in which given project is in\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userName\",\n            \"in\": \"query\",\n            \"description\": \"name of a user that is being requested\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Requested user or project doesn\\u0027t exist or the user doesn\\u0027t have enough permissions (i.e. project is hidden from the current user)\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched user\\u0027s role\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"projects\",\n          \"roles\"\n        ],\n        \"summary\": \"Set role for a user on a particular project\",\n        \"description\": \"Set role for a user on a particular project\",\n        \"operationId\": \"setRole\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization in which given project is in\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"setRoleRequest\",\n            \"in\": \"path\",\n            \"description\": \"setRoleRequest passed through body\",\n            \"required\": true,\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/SetRoleRequest\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"User doesn\\u0027t have permissions to manage this members\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested user or project doesn\\u0027t exist\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Permission added\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/update\": {\n      \"post\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Update an existing project.\",\n        \"description\": \"Update an existing project.\",\n        \"operationId\": \"updateProject\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProjectDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either project or organization could not be found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully updated a project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for managing project settings.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/save\": {\n      \"post\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Create a new project.\",\n        \"description\": \"Create a new project.\",\n        \"operationId\": \"saveProject\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProjectDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Could not find organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Either invalid data, or project with such name is already created.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully created a new project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/not-deleted\": {\n      \"post\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get non-deleted projects.\",\n        \"description\": \"Get non-deleted projects, available for current user.\",\n        \"operationId\": \"getNotDeletedProjectsWithFilters\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ProjectFilters\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched non-deleted projects.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/users/roles\": {\n      \"get\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Get user\\u0027s role in organization with given name.\",\n        \"description\": \"If userName is not present, then will return the role of current user in given organization, otherwise will return role of user with name userName in organization with name organizationName.\",\n        \"operationId\": \"getRole_1\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userName\",\n            \"in\": \"query\",\n            \"description\": \"name of a user\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"You are not allowed to see requested user\\u0027s role.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched user\\u0027s role.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested user or organization doesn\\u0027t exist.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Set user\\u0027s role in organization with given name.\",\n        \"description\": \"Set user\\u0027s role in organization with given name.\",\n        \"operationId\": \"setRole_1\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"setRoleRequest\",\n            \"description\": \"pair of userName and role that is requested to be set\",\n            \"required\": true\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SetRoleRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"User doesn\\u0027t have permissions to manage this members\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested user or organization doesn\\u0027t exist\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Permission added\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/update\": {\n      \"post\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Update existing organization.\",\n        \"description\": \"Change settings of an existing organization by it\\u0027s name.\",\n        \"operationId\": \"updateOrganization\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Organization\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated an organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Organization with such name already exists.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for managing this organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find an organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/update-git\": {\n      \"post\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Update existed git in organization.\",\n        \"description\": \"Update existed git in organization.\",\n        \"operationId\": \"updateGit\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GitDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully saved an organization git.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for saving organization git.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find an organization with such name or git credential with provided url.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Provided invalid git credential.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/manage-contest-permission\": {\n      \"post\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Make an organization to be able to create contests.\",\n        \"description\": \"Make an organization to be able to create contests.\",\n        \"operationId\": \"setAbilityToCreateContest\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"isAbleToCreateContests\",\n            \"in\": \"query\",\n            \"description\": \"new flag for contest creation ability\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Could not change ability to create contests due to lack of permission.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Organization with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully changed ability to create contests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/create-git\": {\n      \"post\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Create git in organization.\",\n        \"description\": \"Create git in organization.\",\n        \"operationId\": \"createGit\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GitDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully saved an organization git.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for saving organization git.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find an organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Provided invalid git credential.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/save\": {\n      \"post\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Create a new organization.\",\n        \"description\": \"Create a new organization.\",\n        \"operationId\": \"saveOrganization\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrganizationDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully saved a new organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Requested name is not available.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/not-deleted\": {\n      \"post\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get non-deleted organizations.\",\n        \"description\": \"Get non-deleted organizations.\",\n        \"operationId\": \"getNotDeletedOrganizations\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OrganizationFilters\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched non-deleted organizations.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/image/upload\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"uploadImage\",\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"required\": [\n                  \"file\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"owner\": {},\n                  \"type\": {}\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageInfo\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/files/{organizationName}/{projectName}/upload\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"upload\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"required\": [\n                  \"file\"\n                ],\n                \"type\": \"object\",\n                \"properties\": {\n                  \"file\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\"\n                  },\n                  \"returnShortFileInfo\": {}\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/files/{organizationName}/{projectName}/download\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"download\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FileInfo\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/octet-stream\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"short\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"char\": {\n                        \"type\": \"string\"\n                      },\n                      \"int\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"long\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                      },\n                      \"float\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                      },\n                      \"double\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                      },\n                      \"direct\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"readOnly\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/files/get-execution-info\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"getExecutionInfo\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestExecutionDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"short\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"char\": {\n                        \"type\": \"string\"\n                      },\n                      \"int\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"long\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                      },\n                      \"float\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                      },\n                      \"double\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                      },\n                      \"direct\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"readOnly\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/files/get-debug-info\": {\n      \"post\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"getDebugInfo\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/TestExecutionDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"short\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"char\": {\n                        \"type\": \"string\"\n                      },\n                      \"int\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int32\"\n                      },\n                      \"long\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                      },\n                      \"float\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\"\n                      },\n                      \"double\": {\n                        \"type\": \"number\",\n                        \"format\": \"double\"\n                      },\n                      \"direct\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"readOnly\": {\n                        \"type\": \"boolean\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/execution/delete\": {\n      \"post\": {\n        \"tags\": [\n          \"execution-controller\"\n        ],\n        \"operationId\": \"deleteExecutionsByExecutionIds\",\n        \"parameters\": [\n          {\n            \"name\": \"executionIds\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              }\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/execution/delete-all-except-contest\": {\n      \"post\": {\n        \"tags\": [\n          \"execution-controller\"\n        ],\n        \"operationId\": \"deleteExecutionForProject\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"object\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/contests/update\": {\n      \"post\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Update contest.\",\n        \"description\": \"Change existing contest settings.\",\n        \"operationId\": \"updateContest\",\n        \"parameters\": [\n          {\n            \"name\": \"contestRequest\",\n            \"description\": \"name of an organization\",\n            \"required\": true\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not enough permission to edit current contest.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either organization or contest with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched public tests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/featured/add-or-delete\": {\n      \"post\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Create or delete featured contest.\",\n        \"description\": \"Mark contest to be featured if it is not marked so yet or unmark otherwise.\",\n        \"operationId\": \"addOrDeleteContestToFeatured\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"contestDto\",\n            \"description\": \"contest requested for creation\",\n            \"required\": true\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Contest was successfully created.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Contest with given name is not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/create\": {\n      \"post\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Create a new contest.\",\n        \"description\": \"Create a new contest.\",\n        \"operationId\": \"createContest\",\n        \"parameters\": [\n          {\n            \"name\": \"contestDto\",\n            \"description\": \"contest requested for creation\",\n            \"required\": true\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ContestDto\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Contest was successfully created.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Contest with given name is already present.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"User cannot create contests with given organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Organization with given name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/list-snapshot\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"List of snapshot for test suites source.\",\n        \"description\": \"List of snapshot for test suites source.\",\n        \"operationId\": \"listSnapshotVersions\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully listed snapshots for requested test suites source.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceSnapshotKey\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceSnapshotKey\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceSnapshotKey\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/contains-snapshot\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Check that test suites source contains provided version.\",\n        \"description\": \"Check that test suites source contains provided version.\",\n        \"operationId\": \"containsSnapshot\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"description\": \"version of checking snapshot\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully checked snapshot with provided values.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Get test suites source by organization name and source name.\",\n        \"description\": \"Get test suites source by organization name and test suites source name.\",\n        \"operationId\": \"findAsDtoByName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched list of test suites sources by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/list-snapshot\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"List of snapshot for all test suites sources in requested organization.\",\n        \"description\": \"List of snapshot for all test suites sources in requested organization.\",\n        \"operationId\": \"listSnapshots\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Organization was not found by provided name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceSnapshotKey\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully listed snapshots for all test suites sources in requested organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceSnapshotKey\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceSnapshotKey\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/list\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"List test suites source by organization name.\",\n        \"description\": \"List test suites source by organization name.\",\n        \"operationId\": \"list\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Organization was not found by provided name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched list of test suites sources by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/execution\": {\n      \"get\": {\n        \"tags\": [\n          \"execution-controller\"\n        ],\n        \"operationId\": \"getExecution\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Execution\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/users/{userName}\": {\n      \"get\": {\n        \"tags\": [\n          \"users-details-controller\"\n        ],\n        \"operationId\": \"findByName\",\n        \"parameters\": [\n          {\n            \"name\": \"userName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserInfo\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/users/{userName}/avatar\": {\n      \"get\": {\n        \"tags\": [\n          \"users-details-controller\"\n        ],\n        \"operationId\": \"avatar\",\n        \"parameters\": [\n          {\n            \"name\": \"userName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageInfo\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/users/global-role\": {\n      \"get\": {\n        \"tags\": [\n          \"users-details-controller\"\n        ],\n        \"operationId\": \"getSelfGlobalRole\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"ADMIN\",\n                    \"NONE\",\n                    \"OWNER\",\n                    \"SUPER_ADMIN\",\n                    \"VIEWER\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/testLatestExecutions\": {\n      \"get\": {\n        \"tags\": [\n          \"test-executions\"\n        ],\n        \"operationId\": \"getTestExecutionsByStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"executionId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"FAILED\",\n                \"IGNORED\",\n                \"INTERNAL_ERROR\",\n                \"PASSED\",\n                \"READY_FOR_TESTING\",\n                \"RUNNING\",\n                \"TEST_ERROR\"\n              ]\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"size\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteExecutionStatisticDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/testExecution/count\": {\n      \"get\": {\n        \"tags\": [\n          \"test-executions\"\n        ],\n        \"operationId\": \"getTestExecutionsCount\",\n        \"parameters\": [\n          {\n            \"name\": \"executionId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"FAILED\",\n                \"IGNORED\",\n                \"INTERNAL_ERROR\",\n                \"PASSED\",\n                \"READY_FOR_TESTING\",\n                \"RUNNING\",\n                \"TEST_ERROR\"\n              ]\n            }\n          },\n          {\n            \"name\": \"testSuite\",\n            \"in\": \"query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int32\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites/get-by-organization\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites\"\n        ],\n        \"summary\": \"Get test suites by organization.\",\n        \"description\": \"Get list of available test suites posted by given organization.\",\n        \"operationId\": \"getTestSuitesByOrganizationName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"query\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"isContest\",\n            \"in\": \"query\",\n            \"description\": \"is given request sent for browsing test suites for contest, default is false\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched test suites by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites/filtered\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites\"\n        ],\n        \"summary\": \"Get test suites with filters.\",\n        \"description\": \"Get test suites with filters.\",\n        \"operationId\": \"getFilteredTestSuites\",\n        \"parameters\": [\n          {\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"test suite tags substring for filtering, default is empty\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"\"\n            }\n          },\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"description\": \"test suite name substring for filtering, default is empty\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"\"\n            }\n          },\n          {\n            \"name\": \"language\",\n            \"in\": \"query\",\n            \"description\": \"test suite language substring for filtering, default is empty\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"\"\n            }\n          },\n          {\n            \"name\": \"isContest\",\n            \"in\": \"query\",\n            \"description\": \"is given request sent for browsing test suites for contest, default is false\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched filtered test suites.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites/available\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites\"\n        ],\n        \"summary\": \"Get public test suites.\",\n        \"description\": \"Get list of available test suites.\",\n        \"operationId\": \"getPublicTestSuites\",\n        \"parameters\": [\n          {\n            \"name\": \"isContest\",\n            \"in\": \"query\",\n            \"description\": \"is given request sent for browsing test suites for contest, default is false\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"boolean\",\n              \"default\": false\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched public test suites.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/tag-list-to-fetch\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Get list of tags which can be fetched from test suites source.\",\n        \"description\": \"Get list of tags which can be fetched from test suites source.\",\n        \"operationId\": \"tagListToFetch\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully listed tags which can be fetched from requested test suites source.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/get-test-suites\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"List of test suites in requested test suites source.\",\n        \"description\": \"List of test suites in requested test suites source.\",\n        \"operationId\": \"getTestSuiteDtos\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully listed snapshots for requested test suites source.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/branch-list-to-fetch\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Get list of branches which can be fetched from test suites source.\",\n        \"description\": \"Get list of branches which can be fetched from test suites source.\",\n        \"operationId\": \"branchListToFetch\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully listed branches which can be fetched from requested test suites source.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/list-with-ids\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"List test suites source with id by organization name.\",\n        \"description\": \"List test suites source with id by organization name.\",\n        \"operationId\": \"listWithIds\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Organization was not found by provided name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DtoWithIdTestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched list of test suites sources with ids by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DtoWithIdTestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/DtoWithIdTestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/test-suites-sources/avaliable\": {\n      \"get\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Get organizations with public test suite sources.\",\n        \"description\": \"Get list of organizations with public test suite sources\",\n        \"operationId\": \"getOrganizationNamesWithPublicTestSuiteSources\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched organizations with public test suite sources.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get all available projects.\",\n        \"description\": \"Get all projects, available for current user.\",\n        \"operationId\": \"getProjects\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Projects successfully fetched.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/{organizationName}/{projectName}/users\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get users from project with their roles.\",\n        \"description\": \"Get list of users that are connected with given project and their roles in it.\",\n        \"operationId\": \"getAllUsersByProjectNameAndOrganizationName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Project with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched users from project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/{organizationName}/{projectName}/users/not-from\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get users not from project.\",\n        \"description\": \"Get list of users that are not connected with given project.\",\n        \"operationId\": \"getAllUsersNotFromProjectWithNamesStartingWith\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"prefix\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched users not from project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Project with such name was not found or considered to be private.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/get/projects-by-organization\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get all projects by organization name.\",\n        \"description\": \"Get all projects by organization name.\",\n        \"operationId\": \"getProjectsByOrganizationName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched projects by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/get/organization-name\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get project by name and organization name.\",\n        \"description\": \"Get project by name and organization name.\",\n        \"operationId\": \"getProjectByNameAndOrganizationName\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Could not find project with such name and organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Project\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched project by name and organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Project\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for accessing given project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Project\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Project\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/get/not-deleted-projects-by-organization\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get non-deleted projects by organization name.\",\n        \"description\": \"Get non-deleted projects by organization name.\",\n        \"operationId\": \"getNonDeletedProjectsByOrganizationName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched projects by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/get-for-current-user\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get projects of current authenticated user\",\n        \"description\": \"Get list of projects related to current user\",\n        \"operationId\": \"getProjectsOfCurrentUser\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched users from project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/all\": {\n      \"get\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Get all projects.\",\n        \"description\": \"Get all projects, including deleted and private. Only accessible for super admins\",\n        \"operationId\": \"getProjects_1\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Projects successfully fetched.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Project\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}\": {\n      \"get\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get organization by name.\",\n        \"description\": \"Get an organization by its name.\",\n        \"operationId\": \"getOrganizationByName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Organization with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched organization by it\\u0027s name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/users\": {\n      \"get\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Get list of users that are connected with given organization.\",\n        \"description\": \"Get list of users that are connected with given organization.\",\n        \"operationId\": \"getAllUsersByOrganizationName\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Contest with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched contest by it\\u0027s name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/users/not-from\": {\n      \"get\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Get all users not from organization with names starting with a given prefix.\",\n        \"description\": \"Get all users not connected with organization with name organizationName whose names start with the same prefix.\",\n        \"operationId\": \"getAllUsersNotFromOrganizationWithNamesStartingWith\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"prefix\",\n            \"in\": \"query\",\n            \"description\": \"prefix of username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched list of users\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested organization doesn\\u0027t exist\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserInfo\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/list-git\": {\n      \"get\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get organization Gits.\",\n        \"description\": \"Get a list of organization\\u0027s Gits.\",\n        \"operationId\": \"listGit\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Could not find an organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GitDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched a list of GitDtos.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GitDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GitDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/get-organization-contest-rating\": {\n      \"get\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get organization contest rating.\",\n        \"description\": \"Get organization contest rating.\",\n        \"operationId\": \"getOrganizationContestRating\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully get an organization contest rating.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"number\",\n                  \"format\": \"double\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find an organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"number\",\n                  \"format\": \"double\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"number\",\n                  \"format\": \"double\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/avatar\": {\n      \"get\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get avatar by organization name.\",\n        \"description\": \"Get organization avatar by organization name.\",\n        \"operationId\": \"avatar_1\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched avatar by organization name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageInfo\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ImageInfo\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/get/list\": {\n      \"get\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get your organizations.\",\n        \"description\": \"Get list of all organizations where current user is a participant.\",\n        \"operationId\": \"getOrganizationsByUser\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched list of organizations.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/can-create-contests\": {\n      \"get\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Get all user\\u0027s organizations that can create contests.\",\n        \"description\": \"Get all organizations that can create contests where user is a member.\",\n        \"operationId\": \"getAllUsersOrganizationsThatCanCreateContests\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"User doesn\\u0027t have permissions to manage this members\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Role removed\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested user or organization doesn\\u0027t exist\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/by-user/not-deleted\": {\n      \"get\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Get user\\u0027s organizations.\",\n        \"description\": \"Get not deleted organizations where user is a member, and his roles in those organizations.\",\n        \"operationId\": \"getOrganizationWithRoles\",\n        \"parameters\": [\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Could not find user with this id.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched organization infos.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/OrganizationDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/all\": {\n      \"get\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Get all organizations\",\n        \"description\": \"Get organizations\",\n        \"operationId\": \"getAllOrganizations\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched all registered organizations\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/latestExecution\": {\n      \"get\": {\n        \"tags\": [\n          \"execution-controller\"\n        ],\n        \"operationId\": \"getLatestExecutionForProject\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExecutionDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/files/{organizationName}/{projectName}/list\": {\n      \"get\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"list_1\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/FileInfo\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/executionDto\": {\n      \"get\": {\n        \"tags\": [\n          \"execution-controller\"\n        ],\n        \"operationId\": \"getExecutionDto\",\n        \"parameters\": [\n          {\n            \"name\": \"executionId\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExecutionDto\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/executionDtoList\": {\n      \"get\": {\n        \"tags\": [\n          \"execution-controller\"\n        ],\n        \"operationId\": \"getExecutionByProject\",\n        \"parameters\": [\n          {\n            \"name\": \"name\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ExecutionDto\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/contests/{organizationName}/{projectName}/eligible-contests\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get contests that can be participated.\",\n        \"description\": \"Get list of contest names that a given project can participate in.\",\n        \"operationId\": \"getAvailableContestsForProject\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched contests avaliable for project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{organizationName}/{projectName}/best\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get best contests of a project.\",\n        \"description\": \"Get list of contests in which given project has higher results.\",\n        \"operationId\": \"getBestProjectContests\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"amount\",\n            \"in\": \"path\",\n            \"description\": \"number of contests that will be fetched, default is 4\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 4\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched best project contests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get contest by name.\",\n        \"description\": \"Get contest by name.\",\n        \"operationId\": \"getContestByName\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Contest with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContestDto\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched contest by it\\u0027s name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContestDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ContestDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/test-suites\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get test suites connected to contest.\",\n        \"description\": \"Get list of test suites dtos.\",\n        \"operationId\": \"getTestSuiteDtosByContestName\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"query\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched test suites.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/TestSuiteDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/scores\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get scores of all projects in contest.\",\n        \"description\": \"Get scores of all projects in contest.\",\n        \"operationId\": \"getRatingsInContest\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched contest scores.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/public-test\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get public test for contest with given name.\",\n        \"description\": \"Get public test for contest with given name.\",\n        \"operationId\": \"getPublicTestForContest\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"testSuiteId\",\n            \"in\": \"query\",\n            \"description\": \"id of a testSuite\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Cannot fetch public test from test suite not connected to contest.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestFilesContent\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either contest with such name was not found or tests are not provided.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestFilesContent\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched public tests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestFilesContent\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/TestFilesContent\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/my-results\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get your best results in contest.\",\n        \"description\": \"Get list of best results of your projects in a given contest.\",\n        \"operationId\": \"getBestResultsInUserProjects\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched your best results.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either given project or given contest was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestResult\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/is-featured\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Check if contest is featured.\",\n        \"description\": \"Check if a given contest is featured or not.\",\n        \"operationId\": \"isContestFeatured\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Contest with such name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched contest data.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/executions/{organizationName}/{projectName}\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get project executions in contest.\",\n        \"description\": \"Get list of execution of a project with given name in contest with given name.\",\n        \"operationId\": \"getContestExecutionsForProject\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either contest is not found or project is not found or execution is not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ExecutionDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched latest project execution in contest.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ExecutionDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ExecutionDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/executions/{organizationName}/{projectName}/latest\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get latest project execution in contest.\",\n        \"description\": \"Get latest execution of a project with given name in contest with given name.\",\n        \"operationId\": \"getLatestExecutionOfProjectInContest\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either contest is not found or project is not found or execution is not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExecutionDto\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched latest project execution in contest.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExecutionDto\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ExecutionDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/enroll\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Register for a contest.\",\n        \"description\": \"Register your public project for a contest.\",\n        \"operationId\": \"enrollForContest\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"query\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"query\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not enough permissions to enroll for a contest with given project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Only public projects can participate in contests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either given project or given contest was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully enrolled for a contest.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/{contestName}/eligible-projects\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get projects that can participate in contest.\",\n        \"description\": \"Get list of user\\u0027s projects that can participate in a given contest.\",\n        \"operationId\": \"getAvailableProjectsForContest\",\n        \"parameters\": [\n          {\n            \"name\": \"contestName\",\n            \"in\": \"path\",\n            \"description\": \"name of a contest\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched projects available for contest.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/newest\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get newest contests.\",\n        \"description\": \"Get list of [pageSize] newest contests.\",\n        \"operationId\": \"getSeveralNewestContests\",\n        \"parameters\": [\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"amount of records that will be returned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 5\n            }\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched newest contests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/finished\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get list of contests that has already finished.\",\n        \"description\": \"Get list of contests that has already finished.\",\n        \"operationId\": \"getFinishedContests\",\n        \"parameters\": [\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"amount of contests that should be returned, default: 10\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully fetched list of finished contests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/featured/list-active\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get featured contests.\",\n        \"description\": \"Get list of contests marked by admins as featured.\",\n        \"operationId\": \"getFeaturedContests\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Contests were successfully fetched.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/by-organization\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get contests connected with given organization.\",\n        \"description\": \"Get contests connected with given organization.\",\n        \"operationId\": \"getOrganizationContests\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"query\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"amount of records that will be returned\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"404\": {\n            \"description\": \"Either contest with such name was not found or tests are not provided.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched public tests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/contests/active\": {\n      \"get\": {\n        \"tags\": [\n          \"contests\"\n        ],\n        \"summary\": \"Get list of contests that are in progress now.\",\n        \"description\": \"Get list of contests that are in progress now.\",\n        \"operationId\": \"getContestsInProgress\",\n        \"parameters\": [\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"amount of contests that should be returned, default: 10\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": 10\n            }\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully fetched list of active contests.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/ContestDto\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/awesome-benchmarks\": {\n      \"get\": {\n        \"tags\": [\n          \"awesome-benchmarks-controller\"\n        ],\n        \"operationId\": \"getAllAwesomeBenchmarks\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AwesomeBenchmarks\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/v1/test-suites-sources/{organizationName}/{sourceName}/delete-test-suites-and-snapshot\": {\n      \"delete\": {\n        \"tags\": [\n          \"test-suites-source\"\n        ],\n        \"summary\": \"Delete test suites and snapshot for requested version from provided test suites source.\",\n        \"description\": \"Delete test suites and snapshot for requested version from provided test suites source.\",\n        \"operationId\": \"deleteTestSuitesAndSnapshot\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"sourceName\",\n            \"in\": \"path\",\n            \"description\": \"name of test suites source\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"query\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted test suites and snapshot for requested version from provided source.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either organization was not found by provided name or test suites source with such name in organization name was not found.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"boolean\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/{organizationName}/{projectName}/users/roles/{userName}\": {\n      \"delete\": {\n        \"tags\": [\n          \"projects\",\n          \"roles\"\n        ],\n        \"summary\": \"Removes user\\u0027s role on a particular project\",\n        \"description\": \"Removes user\\u0027s role on a particular project\",\n        \"operationId\": \"removeRole\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization in which given project is in\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"description\": \"name of a project\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userName\",\n            \"in\": \"path\",\n            \"description\": \"username\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"User doesn\\u0027t have permissions to manage this members\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested user or project doesn\\u0027t exist\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Permission removed\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Unit\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/projects/{organizationName}/{projectName}/delete\": {\n      \"delete\": {\n        \"tags\": [\n          \"projects\"\n        ],\n        \"summary\": \"Delete a project.\",\n        \"description\": \"Delete a project.\",\n        \"operationId\": \"deleteProject\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"Not enough permission for project deletion.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Successfully deleted a project.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Either could not find such organization or such project in such organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/users/roles/{userName}\": {\n      \"delete\": {\n        \"tags\": [\n          \"roles\",\n          \"organizations\"\n        ],\n        \"summary\": \"Remove user\\u0027s role in organization with given name.\",\n        \"description\": \"Remove user\\u0027s role in organization with given name.\",\n        \"operationId\": \"removeRole_1\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"userName\",\n            \"in\": \"path\",\n            \"description\": \"name of user whose role is requested to be removed\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"403\": {\n            \"description\": \"User doesn\\u0027t have permissions to manage this members\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"200\": {\n            \"description\": \"Role was successfully removed\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Requested user or organization doesn\\u0027t exist\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/delete\": {\n      \"delete\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Delete existing organization.\",\n        \"description\": \"Delete existing organization by its name.\",\n        \"operationId\": \"deleteOrganization\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted an organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for deleting this organization.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find an organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/organizations/{organizationName}/delete-git\": {\n      \"delete\": {\n        \"tags\": [\n          \"organizations\"\n        ],\n        \"summary\": \"Upsert organization git.\",\n        \"description\": \"Upsert organization git.\",\n        \"operationId\": \"deleteGit\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"description\": \"name of an organization\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"url\",\n            \"in\": \"query\",\n            \"description\": \"url of a git\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"X-Authorization-Source\",\n            \"in\": \"header\",\n            \"required\": true,\n            \"example\": \"basic\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted an organization git credentials and all corresponding data.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Not enough permission for deleting organization git credentials.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find an organization with such name.\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    },\n    \"/api/v1/files/{organizationName}/{projectName}/{creationTimestamp}\": {\n      \"delete\": {\n        \"tags\": [\n          \"files\"\n        ],\n        \"operationId\": \"delete\",\n        \"parameters\": [\n          {\n            \"name\": \"organizationName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"projectName\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"creationTimestamp\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"*/*\": {\n                \"schema\": {\n                  \"type\": \"string\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"basic\": []\n          }\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"Unit\": {\n        \"type\": \"object\"\n      },\n      \"UserInfo\": {\n        \"required\": [\n          \"isActive\",\n          \"name\",\n          \"organizations\",\n          \"originalLogins\",\n          \"projects\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"oldName\": {\n            \"type\": \"string\"\n          },\n          \"originalLogins\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"projects\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ADMIN\",\n                \"NONE\",\n                \"OWNER\",\n                \"SUPER_ADMIN\",\n                \"VIEWER\"\n              ]\n            }\n          },\n          \"organizations\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ADMIN\",\n                \"NONE\",\n                \"OWNER\",\n                \"SUPER_ADMIN\",\n                \"VIEWER\"\n              ]\n            }\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"company\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"linkedin\": {\n            \"type\": \"string\"\n          },\n          \"gitHub\": {\n            \"type\": \"string\"\n          },\n          \"twitter\": {\n            \"type\": \"string\"\n          },\n          \"globalRole\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ADMIN\",\n              \"NONE\",\n              \"OWNER\",\n              \"SUPER_ADMIN\",\n              \"VIEWER\"\n            ]\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"GitDto\": {\n        \"required\": [\n          \"url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TestSuiteDto\": {\n        \"required\": [\n          \"name\",\n          \"plugins\",\n          \"source\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"source\": {\n            \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"plugins\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"FIX\",\n                \"GENERAL\",\n                \"WARN\",\n                \"FIX AND WARN\"\n              ]\n            }\n          }\n        }\n      },\n      \"TestSuitesSourceDto\": {\n        \"required\": [\n          \"gitDto\",\n          \"name\",\n          \"organizationName\",\n          \"testRootPath\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"gitDto\": {\n            \"$ref\": \"#/components/schemas/GitDto\"\n          },\n          \"testRootPath\": {\n            \"type\": \"string\"\n          },\n          \"latestFetchedVersion\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TestResultLocation\": {\n        \"required\": [\n          \"pluginName\",\n          \"testLocation\",\n          \"testName\",\n          \"testSuiteName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"testSuiteName\": {\n            \"type\": \"string\"\n          },\n          \"pluginName\": {\n            \"type\": \"string\"\n          },\n          \"testLocation\": {\n            \"type\": \"string\"\n          },\n          \"testName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"TestExecutionDto\": {\n        \"required\": [\n          \"filePath\",\n          \"pluginName\",\n          \"status\",\n          \"tags\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"filePath\": {\n            \"type\": \"string\"\n          },\n          \"pluginName\": {\n            \"type\": \"string\"\n          },\n          \"agentContainerId\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"FAILED\",\n              \"IGNORED\",\n              \"INTERNAL_ERROR\",\n              \"PASSED\",\n              \"READY_FOR_TESTING\",\n              \"RUNNING\",\n              \"TEST_ERROR\"\n            ]\n          },\n          \"startTimeSeconds\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"endTimeSeconds\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"testSuiteName\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"unmatched\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"matched\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"expected\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"unexpected\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"hasDebugInfo\": {\n            \"type\": \"boolean\"\n          },\n          \"executionId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"TestExecutionFilters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"FAILED\",\n              \"IGNORED\",\n              \"INTERNAL_ERROR\",\n              \"PASSED\",\n              \"READY_FOR_TESTING\",\n              \"RUNNING\",\n              \"TEST_ERROR\"\n            ]\n          },\n          \"fileName\": {\n            \"type\": \"string\"\n          },\n          \"testSuite\": {\n            \"type\": \"string\"\n          },\n          \"tag\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FileKey\": {\n        \"required\": [\n          \"name\",\n          \"uploadedMillis\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uploadedMillis\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"ProjectCoordinates\": {\n        \"required\": [\n          \"organizationName\",\n          \"projectName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"projectName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RunExecutionRequest\": {\n        \"required\": [\n          \"files\",\n          \"projectCoordinates\",\n          \"sdk\",\n          \"testSuiteIds\",\n          \"testingType\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"projectCoordinates\": {\n            \"$ref\": \"#/components/schemas/ProjectCoordinates\"\n          },\n          \"testSuiteIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"files\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/FileKey\"\n            }\n          },\n          \"sdk\": {\n            \"$ref\": \"#/components/schemas/Sdk\"\n          },\n          \"execCmd\": {\n            \"type\": \"string\"\n          },\n          \"batchSizeForAnalyzer\": {\n            \"type\": \"string\"\n          },\n          \"testingType\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"CONTEST_MODE\",\n              \"PRIVATE_TESTS\",\n              \"PUBLIC_TESTS\"\n            ]\n          },\n          \"contestName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Sdk\": {\n        \"required\": [\n          \"name\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"SetRoleRequest\": {\n        \"required\": [\n          \"role\",\n          \"userName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"userName\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ADMIN\",\n              \"NONE\",\n              \"OWNER\",\n              \"SUPER_ADMIN\",\n              \"VIEWER\"\n            ]\n          }\n        },\n        \"description\": \"pair of userName and role that is requested to be set\"\n      },\n      \"ProjectDto\": {\n        \"required\": [\n          \"description\",\n          \"email\",\n          \"isPublic\",\n          \"name\",\n          \"organizationName\",\n          \"url\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"isPublic\": {\n            \"type\": \"boolean\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ProjectFilters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Organization\": {\n        \"required\": [\n          \"canCreateContests\",\n          \"name\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"CREATED\",\n              \"DELETED\"\n            ]\n          },\n          \"ownerId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"dateCreated\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"canCreateContests\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"Project\": {\n        \"required\": [\n          \"contestRating\",\n          \"name\",\n          \"numberOfContainers\",\n          \"organization\",\n          \"public\",\n          \"status\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"CREATED\",\n              \"DELETED\"\n            ]\n          },\n          \"public\": {\n            \"type\": \"boolean\"\n          },\n          \"userId\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"numberOfContainers\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"organization\": {\n            \"$ref\": \"#/components/schemas/Organization\"\n          },\n          \"contestRating\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"OrganizationDto\": {\n        \"required\": [\n          \"canCreateContests\",\n          \"description\",\n          \"name\",\n          \"userRoles\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"dateCreated\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"canCreateContests\": {\n            \"type\": \"boolean\"\n          },\n          \"userRoles\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ADMIN\",\n                \"NONE\",\n                \"OWNER\",\n                \"SUPER_ADMIN\",\n                \"VIEWER\"\n              ]\n            }\n          },\n          \"globalRating\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          }\n        }\n      },\n      \"OrganizationFilters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ImageInfo\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"path\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FileInfo\": {\n        \"required\": [\n          \"isExecutable\",\n          \"name\",\n          \"sizeBytes\",\n          \"uploadedMillis\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"uploadedMillis\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"sizeBytes\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"isExecutable\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"ContestDto\": {\n        \"required\": [\n          \"name\",\n          \"organizationName\",\n          \"status\",\n          \"testSuiteIds\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"CREATED\",\n              \"DELETED\"\n            ]\n          },\n          \"startTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"endTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"testSuiteIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          \"creationTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"description\": \"contest requested for creation\"\n      },\n      \"TestSuitesSourceSnapshotKey\": {\n        \"required\": [\n          \"creationTimeInMills\",\n          \"organizationName\",\n          \"testSuitesSourceName\",\n          \"version\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"testSuitesSourceName\": {\n            \"type\": \"string\"\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"creationTimeInMills\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"Execution\": {\n        \"required\": [\n          \"additionalFiles\",\n          \"allTests\",\n          \"expectedChecks\",\n          \"failedTests\",\n          \"matchedChecks\",\n          \"passedTests\",\n          \"project\",\n          \"runningTests\",\n          \"sdk\",\n          \"skippedTests\",\n          \"startTime\",\n          \"status\",\n          \"type\",\n          \"unexpectedChecks\",\n          \"unmatchedChecks\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"project\": {\n            \"$ref\": \"#/components/schemas/Project\"\n          },\n          \"startTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"endTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ERROR\",\n              \"FINISHED\",\n              \"OBSOLETE\",\n              \"PENDING\",\n              \"RUNNING\"\n            ]\n          },\n          \"testSuiteIds\": {\n            \"type\": \"string\"\n          },\n          \"batchSize\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"CONTEST_MODE\",\n              \"PRIVATE_TESTS\",\n              \"PUBLIC_TESTS\"\n            ]\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"allTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"runningTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"passedTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"failedTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"skippedTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"unmatchedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"matchedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"expectedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"unexpectedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"sdk\": {\n            \"type\": \"string\"\n          },\n          \"additionalFiles\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"$ref\": \"#/components/schemas/User\"\n          },\n          \"execCmd\": {\n            \"type\": \"string\"\n          },\n          \"batchSizeForAnalyzer\": {\n            \"type\": \"string\"\n          },\n          \"testSuiteSourceName\": {\n            \"type\": \"string\"\n          },\n          \"score\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"User\": {\n        \"required\": [\n          \"isActive\",\n          \"source\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          },\n          \"role\": {\n            \"type\": \"string\"\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"avatar\": {\n            \"type\": \"string\"\n          },\n          \"company\": {\n            \"type\": \"string\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"linkedin\": {\n            \"type\": \"string\"\n          },\n          \"gitHub\": {\n            \"type\": \"string\"\n          },\n          \"twitter\": {\n            \"type\": \"string\"\n          },\n          \"isActive\": {\n            \"type\": \"boolean\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      },\n      \"TestSuiteExecutionStatisticDto\": {\n        \"required\": [\n          \"countTest\",\n          \"countWithStatusTest\",\n          \"status\",\n          \"testSuiteName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"testSuiteName\": {\n            \"type\": \"string\"\n          },\n          \"countTest\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"countWithStatusTest\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"FAILED\",\n              \"IGNORED\",\n              \"INTERNAL_ERROR\",\n              \"PASSED\",\n              \"READY_FOR_TESTING\",\n              \"RUNNING\",\n              \"TEST_ERROR\"\n            ]\n          }\n        }\n      },\n      \"DtoWithIdTestSuitesSourceDto\": {\n        \"required\": [\n          \"content\",\n          \"id\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"content\": {\n            \"$ref\": \"#/components/schemas/TestSuitesSourceDto\"\n          }\n        }\n      },\n      \"ExecutionDto\": {\n        \"required\": [\n          \"allTests\",\n          \"expectedChecks\",\n          \"failedTests\",\n          \"id\",\n          \"matchedChecks\",\n          \"passedTests\",\n          \"runningTests\",\n          \"skippedTests\",\n          \"startTime\",\n          \"status\",\n          \"type\",\n          \"unexpectedChecks\",\n          \"unmatchedChecks\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ERROR\",\n              \"FINISHED\",\n              \"OBSOLETE\",\n              \"PENDING\",\n              \"RUNNING\"\n            ]\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"CONTEST_MODE\",\n              \"PRIVATE_TESTS\",\n              \"PUBLIC_TESTS\"\n            ]\n          },\n          \"version\": {\n            \"type\": \"string\"\n          },\n          \"startTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"endTime\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"allTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"runningTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"passedTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"failedTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"skippedTests\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"unmatchedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"matchedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"expectedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"unexpectedChecks\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"testSuiteSourceName\": {\n            \"type\": \"string\"\n          },\n          \"score\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"contestName\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ContestResult\": {\n        \"required\": [\n          \"contestName\",\n          \"hasFailedTest\",\n          \"organizationName\",\n          \"projectName\",\n          \"sdk\",\n          \"submissionStatus\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"projectName\": {\n            \"type\": \"string\"\n          },\n          \"organizationName\": {\n            \"type\": \"string\"\n          },\n          \"contestName\": {\n            \"type\": \"string\"\n          },\n          \"score\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"submissionTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"submissionStatus\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ERROR\",\n              \"FINISHED\",\n              \"OBSOLETE\",\n              \"PENDING\",\n              \"RUNNING\"\n            ]\n          },\n          \"sdk\": {\n            \"type\": \"string\"\n          },\n          \"hasFailedTest\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"TestFilesContent\": {\n        \"required\": [\n          \"tags\",\n          \"testLines\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"testLines\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"expectedLines\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"AwesomeBenchmarks\": {\n        \"required\": [\n          \"category\",\n          \"description\",\n          \"documentation\",\n          \"homepage\",\n          \"language\",\n          \"license\",\n          \"name\",\n          \"scenarios_num\",\n          \"sources\",\n          \"tags\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"category\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ALL\",\n              \"AI\",\n              \"AUDIT\",\n              \"CODING_STANDARD\",\n              \"PERFORMANCE\",\n              \"STATIC_ANALYSIS\"\n            ]\n          },\n          \"tags\": {\n            \"type\": \"string\"\n          },\n          \"language\": {\n            \"type\": \"string\"\n          },\n          \"license\": {\n            \"type\": \"string\"\n          },\n          \"scenarios_num\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"homepage\": {\n            \"type\": \"string\"\n          },\n          \"sources\": {\n            \"type\": \"string\"\n          },\n          \"documentation\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          }\n        }\n      }\n    },\n    \"securitySchemes\": {\n      \"basic\": {\n        \"type\": \"http\",\n        \"scheme\": \"basic\"\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/saveourtool/save-cloud@dd3445206b252a45d7960bf3080258b9c5bfa4c9/-/blob/save-backend/backend-api-docs.json",
			"externalURLs": [
				{
					"url": "https://github.com/saveourtool/save-cloud/blob/dd3445206b252a45d7960bf3080258b9c5bfa4c9/save-backend/backend-api-docs.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/api/v1/contests/create\": post: operation \"createContest\": parameters: parse parameter \"contestDto\": at 2574:11: unknown parameter location \"\""
}