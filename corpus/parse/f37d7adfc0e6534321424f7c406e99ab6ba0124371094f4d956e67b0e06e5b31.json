{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/opentdf/opentdf"
		},
		"file": {
			"name": "openapi-aggregate.json",
			"size": 0,
			"path": "openapi/openapi-aggregate.json",
			"byteSize": 49054,
			"content": "{\n  \"openapi\": \"3.0.3\",\n  \"info\": {\n    \"title\": \"OpenTDF\",\n    \"license\": {\n      \"name\": \"BSD 3-Clause Clear\",\n      \"url\": \"https://github.com/opentdf/backend/blob/main/LICENSE\"\n    },\n    \"version\": \"0.9.0\",\n    \"x-logo\": {\n      \"url\": \"https://avatars.githubusercontent.com/u/90051847?s=200\u0026v=4\"\n    }\n  },\n  \"externalDocs\": {\n    \"description\": \"Developer Hub\",\n    \"url\": \"https://developer.virtru.com/\"\n  },\n  \"tags\": [\n    {\n      \"name\": \"Attributes\",\n      \"description\": \"Operations to view data attributes. TDF protocol supports ABAC (Attribute Based Access Control). \\n        This allows TDF protocol to implement policy driven and highly scalable access control mechanism.\"\n    },\n    {\n      \"name\": \"Authorities\",\n      \"description\": \"Operations to view and create attribute authorities.\"\n    },\n    {\n      \"name\": \"Attributes Definitions\",\n      \"description\": \"Operations to manage the rules and metadata of attributes. \"\n    },\n    {\n      \"name\": \"Entitlements\",\n      \"description\": \"Operations to manage entitlements entitled to entities.\"\n    }\n  ],\n  \"paths\": {\n    \"/api/attributes/attributes\": {\n      \"get\": {\n        \"tags\": [\n          \"Attributes\"\n        ],\n        \"summary\": \"Read Attributes\",\n        \"operationId\": \"read_attributes_attributes_get\",\n        \"parameters\": [\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Authority\",\n              \"maxLength\": 2000,\n              \"minLength\": 1,\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"name\": \"authority\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Name\",\n              \"type\": \"string\"\n            },\n            \"name\": \"name\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Rule\",\n              \"type\": \"string\"\n            },\n            \"name\": \"rule\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Order\",\n              \"type\": \"string\"\n            },\n            \"name\": \"order\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Sort\",\n              \"pattern\": \"^(-*((state)|(rule)|(name)|(values_array)),)*-*((state)|(rule)|(name)|(values_array))$\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"sort\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Offset\",\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"default\": 1\n            },\n            \"name\": \"offset\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Limit\",\n              \"maximum\": 1000,\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"default\": 100\n            },\n            \"name\": \"limit\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Read Attributes Attributes Get\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"maxLength\": 65536,\n                    \"minLength\": 1,\n                    \"type\": \"string\",\n                    \"format\": \"uri\"\n                  }\n                },\n                \"example\": [\n                  \"https://opentdf.io/attr/IntellectualProperty/value/TradeSecret\",\n                  \"https://opentdf.io/attr/ClassificationUS/value/Unclassified\"\n                ]\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/attributes/definitions/attributes\": {\n      \"get\": {\n        \"tags\": [\n          \"Attributes Definitions\"\n        ],\n        \"summary\": \"Read Attributes Definitions\",\n        \"operationId\": \"read_attributes_definitions_definitions_attributes_get\",\n        \"parameters\": [\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Authority\",\n              \"maxLength\": 2000,\n              \"minLength\": 1,\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"name\": \"authority\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Name\",\n              \"type\": \"string\"\n            },\n            \"name\": \"name\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Rule\",\n              \"type\": \"string\"\n            },\n            \"name\": \"rule\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Order\",\n              \"type\": \"string\"\n            },\n            \"name\": \"order\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Sort\",\n              \"pattern\": \"^(-*((id)|(state)|(rule)|(name)|(values_array)),)*-*((id)|(state)|(rule)|(name)|(values_array))$\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"sort\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Offset\",\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"default\": 1\n            },\n            \"name\": \"offset\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Limit\",\n              \"maximum\": 1000,\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"default\": 100\n            },\n            \"name\": \"limit\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Read Attributes Definitions Definitions Attributes Get\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/AttributeDefinition\"\n                  }\n                },\n                \"example\": [\n                  {\n                    \"authority\": \"https://opentdf.io\",\n                    \"name\": \"IntellectualProperty\",\n                    \"rule\": \"hierarchy\",\n                    \"state\": \"published\",\n                    \"order\": [\n                      \"TradeSecret\",\n                      \"Proprietary\",\n                      \"BusinessSensitive\",\n                      \"Open\"\n                    ]\n                  }\n                ]\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Attributes Definitions\"\n        ],\n        \"summary\": \"Update Attribute Definition\",\n        \"operationId\": \"update_attribute_definition_definitions_attributes_put\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AttributeDefinition\"\n              },\n              \"example\": {\n                \"authority\": \"https://opentdf.io\",\n                \"name\": \"IntellectualProperty\",\n                \"rule\": \"hierarchy\",\n                \"state\": \"published\",\n                \"order\": [\n                  \"TradeSecret\",\n                  \"Proprietary\",\n                  \"BusinessSensitive\",\n                  \"Open\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AttributeDefinition\"\n                },\n                \"example\": {\n                  \"authority\": \"https://opentdf.io\",\n                  \"name\": \"IntellectualProperty\",\n                  \"rule\": \"hierarchy\",\n                  \"state\": \"published\",\n                  \"order\": [\n                    \"TradeSecret\",\n                    \"Proprietary\",\n                    \"BusinessSensitive\",\n                    \"Open\"\n                  ]\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Attributes Definitions\"\n        ],\n        \"summary\": \"Create Attributes Definitions\",\n        \"operationId\": \"create_attributes_definitions_definitions_attributes_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AttributeDefinition\"\n              },\n              \"example\": {\n                \"authority\": \"https://opentdf.io\",\n                \"name\": \"IntellectualProperty\",\n                \"rule\": \"hierarchy\",\n                \"state\": \"published\",\n                \"order\": [\n                  \"TradeSecret\",\n                  \"Proprietary\",\n                  \"BusinessSensitive\",\n                  \"Open\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AttributeDefinition\"\n                },\n                \"example\": {\n                  \"authority\": \"https://opentdf.io\",\n                  \"name\": \"IntellectualProperty\",\n                  \"rule\": \"hierarchy\",\n                  \"state\": \"published\",\n                  \"order\": [\n                    \"TradeSecret\",\n                    \"Proprietary\",\n                    \"BusinessSensitive\",\n                    \"Open\"\n                  ]\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Attributes Definitions\"\n        ],\n        \"summary\": \"Delete Attributes Definitions\",\n        \"operationId\": \"delete_attributes_definitions_definitions_attributes_delete\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AttributeDefinition\"\n              },\n              \"example\": {\n                \"authority\": \"https://opentdf.io\",\n                \"name\": \"IntellectualProperty\",\n                \"rule\": \"hierarchy\",\n                \"state\": \"published\",\n                \"order\": [\n                  \"TradeSecret\",\n                  \"Proprietary\",\n                  \"BusinessSensitive\",\n                  \"Open\"\n                ]\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"No Content\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {},\n                \"example\": {\n                  \"detail\": \"Item deleted\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/attributes/authorities\": {\n      \"get\": {\n        \"tags\": [\n          \"Authorities\"\n        ],\n        \"summary\": \"Read Authorities\",\n        \"operationId\": \"read_authorities_authorities_get\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {},\n                \"example\": [\n                  \"https://opentdf.io\"\n                ]\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Authorities\"\n        ],\n        \"summary\": \"Create Authorities\",\n        \"operationId\": \"create_authorities_authorities_post\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthorityDefinition\"\n              },\n              \"example\": {\n                \"authority\": \"https://opentdf.io\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {},\n                \"example\": [\n                  \"https://opentdf.io\"\n                ]\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/entitlements/entitlements\": {\n      \"get\": {\n        \"tags\": [\n          \"Entitlements\"\n        ],\n        \"summary\": \"Read Entitlements\",\n        \"operationId\": \"read_entitlements_entitlements_get\",\n        \"parameters\": [\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Authority\",\n              \"maxLength\": 2000,\n              \"minLength\": 1,\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            },\n            \"name\": \"authority\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Name\",\n              \"type\": \"string\"\n            },\n            \"name\": \"name\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Entityid\",\n              \"type\": \"string\"\n            },\n            \"name\": \"entityId\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Order\",\n              \"type\": \"string\"\n            },\n            \"name\": \"order\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Sort\",\n              \"pattern\": \"^(-*((id)|(state)|(rule)|(name)|(values)),)*-*((id)|(state)|(rule)|(name)|(values))$\",\n              \"type\": \"string\",\n              \"default\": \"\"\n            },\n            \"name\": \"sort\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Offset\",\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"default\": 1\n            },\n            \"name\": \"offset\",\n            \"in\": \"query\"\n          },\n          {\n            \"required\": false,\n            \"schema\": {\n              \"title\": \"Limit\",\n              \"maximum\": 1000,\n              \"minimum\": 1,\n              \"type\": \"integer\",\n              \"default\": 100\n            },\n            \"name\": \"limit\",\n            \"in\": \"query\"\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"title\": \"Response Read Entitlements Entitlements Get\",\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Entitlements\"\n                  }\n                },\n                \"example\": {\n                  \"123e4567-e89b-12d3-a456-426614174000\": [\n                    \"https://opentdf.io/attr/SecurityClearance/value/Unclassified\",\n                    \"https://opentdf.io/attr/OperationalRole/value/Manager\",\n                    \"https://opentdf.io/attr/OperationGroup/value/HR\"\n                  ]\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/entitlements/entitlements/{entityId}\": {\n      \"post\": {\n        \"tags\": [\n          \"Entitlements\"\n        ],\n        \"summary\": \"Add Entitlements To Entity\",\n        \"operationId\": \"add_entitlements_to_entity_entitlements__entityId__post\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Entityid\",\n              \"type\": \"string\"\n            },\n            \"example\": \"tdf-client\",\n            \"name\": \"entityId\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Request\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"example\": [\n                \"https://opentdf.io/attr/IntellectualProperty/value/TradeSecret\",\n                \"https://opentdf.io/attr/ClassificationUS/value/Unclassified\"\n              ]\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {},\n                \"example\": [\n                  \"https://opentdf.io/attr/IntellectualProperty/value/TradeSecret\",\n                  \"https://opentdf.io/attr/ClassificationUS/value/Unclassified\"\n                ]\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Entitlements\"\n        ],\n        \"summary\": \"Remove Entitlement From Entity\",\n        \"operationId\": \"remove_entitlement_from_entity_entitlements__entityId__delete\",\n        \"parameters\": [\n          {\n            \"required\": true,\n            \"schema\": {\n              \"title\": \"Entityid\",\n              \"type\": \"string\"\n            },\n            \"example\": \"tdf-client\",\n            \"name\": \"entityId\",\n            \"in\": \"path\"\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"title\": \"Request\",\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"example\": [\n                \"https://opentdf.io/attr/IntellectualProperty/value/TradeSecret\",\n                \"https://opentdf.io/attr/ClassificationUS/value/Unclassified\"\n              ]\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"202\": {\n            \"description\": \"No Content\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {},\n                \"example\": {\n                  \"detail\": \"Item deleted\"\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"OAuth2AuthorizationCodeBearer\": []\n          }\n        ]\n      }\n    },\n    \"/api/kas/\": {\n      \"get\": {\n        \"summary\": \"Get the current version\",\n        \"description\": \"This endpoint is for OPS so they have something to ping on to verify\\nthat the server hasn't died.\\n\",\n        \"operationId\": \"tdf3_kas_core.web.heartbeat.ping\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"version\": {\n                      \"type\": \"string\",\n                      \"example\": \"0.0.0\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/kas/healthz\": {\n      \"get\": {\n        \"tags\": [\n          \"heartbeat\"\n        ],\n        \"summary\": \"Return current version as semver; useful for liveness checks\",\n        \"operationId\": \"tdf3_kas_core.web.heartbeat.healthz\",\n        \"parameters\": [\n          {\n            \"name\": \"probe\",\n            \"description\": \"liveness or readiness\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"default\": \"liveness\",\n              \"enum\": [\n                \"liveness\",\n                \"readiness\"\n              ],\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success with a detail message\"\n          },\n          \"204\": {\n            \"description\": \"Success with no detail message\"\n          },\n          \"500\": {\n            \"description\": \"Unhealthy, per the requested probe\"\n          }\n        }\n      }\n    },\n    \"/api/kas/kas_public_key\": {\n      \"get\": {\n        \"summary\": \"Get the public key for KAS\",\n        \"deprecated\": true,\n        \"description\": \"This endpoint provides a public key for the private key that the\\nkas has internally. The public key is used to wrap object keys in\\nthe TDF3 or NanoTDF files.\\n\",\n        \"operationId\": \"tdf3_kas_core.web.public_key.get\",\n        \"parameters\": [\n          {\n            \"name\": \"algorithm\",\n            \"description\": \"algorithm type rsa:\u003ckeysize\u003e or ec:\u003ccurvename\u003e\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"default\": \"rsa:2048\",\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PublicKey\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/KeyNotFoundError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/kas/rewrap\": {\n      \"post\": {\n        \"summary\": \"Request a rewrap\",\n        \"description\": \"This endpoint performs the primary service of the KAS; to re-wrap\\ndata keys as needed to provide access for entities with a TDF that they\\nwould like to open.\\n\",\n        \"operationId\": \"tdf3_kas_core.web.rewrap.rewrap\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Rewrap\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"default\": {}\n                    },\n                    \"kasWrappedKey\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    },\n                    \"entityWrappedKey\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/AdjudicatorError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/AuthorizationError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/EntityError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyAccessError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyNotFoundError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PluginFailedError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PolicyError\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/kas/v2/rewrap\": {\n      \"post\": {\n        \"summary\": \"Request a rewrap\",\n        \"description\": \"This endpoint performs the primary service of the KAS; to re-wrap\\ndata keys as needed to provide access for entities with a TDF that they\\nwould like to open.\\n\",\n        \"operationId\": \"tdf3_kas_core.web.rewrap.rewrap_v2\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/RewrapV2\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"default\": {}\n                    },\n                    \"kasWrappedKey\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    },\n                    \"entityWrappedKey\": {\n                      \"type\": \"string\",\n                      \"nullable\": true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/AdjudicatorError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/AuthorizationError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/EntityError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyAccessError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyNotFoundError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PluginFailedError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PolicyError\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/kas/upsert\": {\n      \"post\": {\n        \"summary\": \"Request a upsert\",\n        \"description\": \"The upsert service is a proxy to the back-end services that persist\\npolicies and keys.\\n\",\n        \"operationId\": \"tdf3_kas_core.web.upsert.upsert\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/Upsert\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"default\": [],\n                  \"items\": {}\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/AuthorizationError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/EntityError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyAccessError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyNotFoundError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PluginFailedError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PolicyError\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/kas/v2/upsert\": {\n      \"post\": {\n        \"summary\": \"Request a upsert\",\n        \"description\": \"The upsert service is a proxy to the back-end services that persist\\npolicies and keys.\\n\",\n        \"operationId\": \"tdf3_kas_core.web.upsert.upsert_v2\",\n        \"requestBody\": {\n          \"$ref\": \"#/components/requestBodies/UpsertV2\"\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"default\": [],\n                  \"items\": {}\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"$ref\": \"#/components/responses/BadRequest\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"oneOf\": [\n                    {\n                      \"$ref\": \"#/components/schemas/AuthorizationError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/EntityError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyAccessError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/KeyNotFoundError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PluginFailedError\"\n                    },\n                    {\n                      \"$ref\": \"#/components/schemas/PolicyError\"\n                    }\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"AttributeDefinition\": {\n        \"title\": \"AttributeDefinition\",\n        \"required\": [\n          \"authority\",\n          \"name\",\n          \"order\",\n          \"rule\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"authority\": {\n            \"title\": \"Authority\",\n            \"maxLength\": 2000,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"name\": {\n            \"title\": \"Name\",\n            \"maxLength\": 2000,\n            \"type\": \"string\"\n          },\n          \"order\": {\n            \"title\": \"Order\",\n            \"maxLength\": 2000,\n            \"type\": \"array\",\n            \"items\": {\n              \"maxLength\": 2000,\n              \"type\": \"string\"\n            }\n          },\n          \"rule\": {\n            \"$ref\": \"#/components/schemas/RuleEnum\"\n          },\n          \"state\": {\n            \"title\": \"State\",\n            \"maxLength\": 64,\n            \"type\": \"string\"\n          }\n        },\n        \"example\": {\n          \"authority\": \"https://opentdf.io\",\n          \"name\": \"IntellectualProperty\",\n          \"rule\": \"hierarchy\",\n          \"state\": \"published\",\n          \"order\": [\n            \"TradeSecret\",\n            \"Proprietary\",\n            \"BusinessSensitive\",\n            \"Open\"\n          ]\n        }\n      },\n      \"AuthorityDefinition\": {\n        \"title\": \"AuthorityDefinition\",\n        \"required\": [\n          \"authority\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"authority\": {\n            \"title\": \"Authority\",\n            \"maxLength\": 2000,\n            \"minLength\": 1,\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          }\n        }\n      },\n      \"HTTPValidationError\": {\n        \"title\": \"HTTPValidationError\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"detail\": {\n            \"title\": \"Detail\",\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            }\n          }\n        }\n      },\n      \"RuleEnum\": {\n        \"title\": \"RuleEnum\",\n        \"enum\": [\n          \"hierarchy\",\n          \"anyOf\",\n          \"allOf\"\n        ],\n        \"type\": \"string\",\n        \"description\": \"An enumeration.\"\n      },\n      \"ValidationError\": {\n        \"title\": \"ValidationError\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"loc\": {\n            \"title\": \"Location\",\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"msg\": {\n            \"title\": \"Message\",\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"title\": \"Error Type\",\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Entitlements\": {\n        \"title\": \"Entitlements\",\n        \"type\": \"object\",\n        \"additionalProperties\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"example\": {\n          \"123e4567-e89b-12d3-a456-426614174000\": [\n            \"https://opentdf.io/attr/SecurityClearance/value/Unclassified\",\n            \"https://opentdf.io/attr/OperationalRole/value/Manager\",\n            \"https://opentdf.io/attr/OperationGroup/value/HR\"\n          ]\n        }\n      },\n      \"Algorithm\": {\n        \"title\": \"The algorithm used to encrypt the ciphertext\",\n        \"type\": \"string\",\n        \"enum\": [\n          \"AES-256-GCM\"\n        ]\n      },\n      \"Aliases\": {\n        \"title\": \"Array of userIds\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/UserId\"\n        }\n      },\n      \"AuthToken\": {\n        \"$ref\": \"#/components/schemas/JWT\"\n      },\n      \"Cert\": {\n        \"title\": \"Entity certificate\",\n        \"type\": \"string\"\n      },\n      \"Ciphertext\": {\n        \"title\": \"Encrypted object\",\n        \"type\": \"string\"\n      },\n      \"EncryptedMetadata\": {\n        \"title\": \"Metadata in encrypted format\",\n        \"type\": \"string\"\n      },\n      \"Entity\": {\n        \"description\": \"Entity object\",\n        \"type\": \"object\",\n        \"required\": [\n          \"cert\",\n          \"publicKey\",\n          \"userId\"\n        ],\n        \"maxProperties\": 6,\n        \"properties\": {\n          \"aliases\": {\n            \"$ref\": \"#/components/schemas/Aliases\"\n          },\n          \"attributes\": {\n            \"$ref\": \"#/components/schemas/EntityAttributes\"\n          },\n          \"cert\": {\n            \"$ref\": \"#/components/schemas/Cert\"\n          },\n          \"exp\": {\n            \"$ref\": \"#/components/schemas/Exp\"\n          },\n          \"publicKey\": {\n            \"$ref\": \"#/components/schemas/PublicKey\"\n          },\n          \"userId\": {\n            \"$ref\": \"#/components/schemas/UserId\"\n          }\n        }\n      },\n      \"EntityAttribute\": {\n        \"title\": \"Entity attribute\",\n        \"required\": [\n          \"jwt\"\n        ],\n        \"properties\": {\n          \"jwt\": {\n            \"$ref\": \"#/components/schemas/JWT\"\n          }\n        }\n      },\n      \"EntityAttributes\": {\n        \"title\": \"Entity attributes\",\n        \"type\": \"array\",\n        \"items\": {\n          \"$ref\": \"#/components/schemas/EntityAttribute\"\n        }\n      },\n      \"Exp\": {\n        \"title\": \"JWT expiration date\",\n        \"type\": \"number\"\n      },\n      \"IV\": {\n        \"title\": \"Initial vector used to encrypt the ciphertext\",\n        \"type\": \"string\"\n      },\n      \"JWT\": {\n        \"title\": \"JSON Web token\",\n        \"type\": \"string\",\n        \"pattern\": \"^[a-zA-Z0-9\\\\-_]+?\\\\.[a-zA-Z0-9\\\\-_]+?\\\\.([a-zA-Z0-9\\\\-_]+)?$\"\n      },\n      \"KeyAccess\": {\n        \"title\": \"Key access object\",\n        \"type\": \"object\",\n        \"required\": [\n          \"type\",\n          \"url\",\n          \"protocol\"\n        ],\n        \"properties\": {\n          \"encryptedMetadata\": {\n            \"$ref\": \"#/components/schemas/EncryptedMetadata\"\n          },\n          \"policySyncOptions\": {\n            \"$ref\": \"#/components/schemas/Policy\"\n          },\n          \"policyBinding\": {\n            \"$ref\": \"#/components/schemas/PolicyBinding\"\n          },\n          \"protocol\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"kas\"\n            ]\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"remote\",\n              \"remoteWrapped\",\n              \"wrapped\"\n            ]\n          },\n          \"url\": {\n            \"type\": \"string\"\n          },\n          \"wrappedKey\": {\n            \"$ref\": \"#/components/schemas/WrappedKey\"\n          }\n        }\n      },\n      \"Policy\": {\n        \"title\": \"Policy\",\n        \"type\": \"string\"\n      },\n      \"PolicyBinding\": {\n        \"title\": \"Policy binding\",\n        \"type\": \"string\"\n      },\n      \"PolicySyncOptions\": {\n        \"title\": \"Policy sync options\",\n        \"type\": \"object\",\n        \"properties\": {\n          \"url\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"PublicKey\": {\n        \"title\": \"Public key\",\n        \"type\": \"string\",\n        \"pattern\": \"-----BEGIN PUBLIC KEY-----(.|\\\\s)*-----END PUBLIC KEY-----(\\\\s)*\"\n      },\n      \"UserId\": {\n        \"title\": \"User id\",\n        \"type\": \"string\"\n      },\n      \"WrappedKey\": {\n        \"title\": \"Wrapped key\",\n        \"type\": \"string\"\n      },\n      \"TDF_Algorithm\": {\n        \"description\": \"String to define the type of algorithm the client performing the TDF operations.\",\n        \"type\": \"string\",\n        \"example\": \"ec:secp256r1\"\n      },\n      \"AttributePolicyConfigError\": {\n        \"title\": \"Attribute policy config error (500)\",\n        \"type\": \"string\"\n      },\n      \"AdjudicatorError\": {\n        \"title\": \"Adjudicator error (403)\",\n        \"type\": \"string\"\n      },\n      \"AuthorizationError\": {\n        \"title\": \"Authorization error (403)\",\n        \"type\": \"string\"\n      },\n      \"CryptoError\": {\n        \"title\": \"Crypto error (403)\",\n        \"type\": \"string\"\n      },\n      \"EntityError\": {\n        \"title\": \"Entity error (400)\",\n        \"type\": \"string\"\n      },\n      \"InvalidBindingError\": {\n        \"title\": \"Invalid binding error (403)\",\n        \"type\": \"string\"\n      },\n      \"JWTError\": {\n        \"title\": \"JWT error (403)\",\n        \"type\": \"string\"\n      },\n      \"KeyAccessError\": {\n        \"title\": \"Key access error (403)\",\n        \"type\": \"string\"\n      },\n      \"KeyNotFoundError\": {\n        \"title\": \"Key not found error (403)\",\n        \"type\": \"string\"\n      },\n      \"PluginFailedError\": {\n        \"title\": \"Plugin failed error (403)\",\n        \"type\": \"string\"\n      },\n      \"PluginIsBadError\": {\n        \"title\": \"Plugin is bad error (403)\",\n        \"type\": \"string\"\n      },\n      \"PolicyError\": {\n        \"title\": \"Policy error (403)\",\n        \"type\": \"string\"\n      },\n      \"PrivateKeyInvalidError\": {\n        \"title\": \"Private key invalid error (403)\",\n        \"type\": \"string\"\n      },\n      \"RequestError\": {\n        \"title\": \"Invalid binding error (403)\",\n        \"type\": \"string\"\n      },\n      \"ValidationError1\": {\n        \"title\": \"Validation error (400)\",\n        \"type\": \"string\"\n      },\n      \"UnknownAttributePolicyError\": {\n        \"title\": \"Unknown attribute policy error (403)\",\n        \"type\": \"string\"\n      },\n      \"RequestTimeoutError\": {\n        \"title\": \"Request timeout error (503)\",\n        \"type\": \"string\"\n      },\n      \"PolicyNotFoundError\": {\n        \"title\": \"Policy not found error (404)\",\n        \"type\": \"string\"\n      },\n      \"ContractNotFoundError\": {\n        \"title\": \"Contract not found error (404)\",\n        \"type\": \"string\"\n      },\n      \"PolicyCreateError\": {\n        \"title\": \"Policy create error (403)\",\n        \"type\": \"string\"\n      }\n    },\n    \"securitySchemes\": {\n      \"OAuth2AuthorizationCodeBearer\": {\n        \"type\": \"oauth2\",\n        \"flows\": {\n          \"authorizationCode\": {\n            \"scopes\": {},\n            \"authorizationUrl\": \"\",\n            \"tokenUrl\": \"\"\n          }\n        }\n      }\n    },\n    \"responses\": {\n      \"BadRequest\": {\n        \"description\": \"400 Bad request\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"properties\": {\n                \"detail\": {\n                  \"type\": \"string\"\n                },\n                \"status\": {\n                  \"type\": \"number\",\n                  \"default\": 400\n                },\n                \"title\": {\n                  \"type\": \"string\",\n                  \"default\": \"Bad request\"\n                },\n                \"type\": {\n                  \"type\": \"string\",\n                  \"default\": \"about:blank\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"NotFound\": {\n        \"description\": \"404 Not found\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"ServerError\": {\n        \"description\": \"Server error\"\n      },\n      \"PublicKey\": {\n        \"description\": \"Public key response\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"$ref\": \"#/components/schemas/PublicKey\"\n            }\n          }\n        }\n      },\n      \"Version\": {\n        \"description\": \"Respond with current version\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"version\": {\n                  \"type\": \"string\",\n                  \"example\": \"0.0.0\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"requestBodies\": {\n      \"Rewrap\": {\n        \"description\": \"Rewrap request body\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"authToken\",\n                    \"entity\",\n                    \"keyAccess\"\n                  ],\n                  \"maxProperties\": 5,\n                  \"properties\": {\n                    \"authToken\": {\n                      \"$ref\": \"#/components/schemas/AuthToken\"\n                    },\n                    \"entity\": {\n                      \"$ref\": \"#/components/schemas/Entity\"\n                    },\n                    \"keyAccess\": {\n                      \"$ref\": \"#/components/schemas/KeyAccess\"\n                    },\n                    \"policy\": {\n                      \"$ref\": \"#/components/schemas/Policy\"\n                    },\n                    \"algorithm\": {\n                      \"$ref\": \"#/components/schemas/TDF_Algorithm\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"signedRequestToken\"\n                  ],\n                  \"maxProperties\": 1,\n                  \"properties\": {\n                    \"signedRequestToken\": {\n                      \"$ref\": \"#/components/schemas/JWT\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"RewrapV2\": {\n        \"description\": \"RewrapV2 request body\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"signedRequestToken\"\n                  ],\n                  \"maxProperties\": 1,\n                  \"properties\": {\n                    \"signedRequestToken\": {\n                      \"$ref\": \"#/components/schemas/JWT\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"Upsert\": {\n        \"description\": \"Upsert request body\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"authToken\",\n                    \"entity\",\n                    \"keyAccess\",\n                    \"policy\"\n                  ],\n                  \"maxProperties\": 4,\n                  \"properties\": {\n                    \"authToken\": {\n                      \"$ref\": \"#/components/schemas/AuthToken\"\n                    },\n                    \"entity\": {\n                      \"$ref\": \"#/components/schemas/Entity\"\n                    },\n                    \"keyAccess\": {\n                      \"$ref\": \"#/components/schemas/KeyAccess\"\n                    },\n                    \"policy\": {\n                      \"$ref\": \"#/components/schemas/Policy\"\n                    }\n                  }\n                },\n                {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"signedRequestToken\"\n                  ]\n                }\n              ]\n            }\n          }\n        }\n      },\n      \"UpsertV2\": {\n        \"description\": \"Upsert request body\",\n        \"required\": true,\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"oneOf\": [\n                {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"signedRequestToken\"\n                  ],\n                  \"maxProperties\": 1,\n                  \"properties\": {\n                    \"signedRequestToken\": {\n                      \"$ref\": \"#/components/schemas/JWT\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n}",
			"canonicalURL": "/github.com/opentdf/opentdf@258fee57a999e6dc9c54c9a92bd75c91121ed1ab/-/blob/openapi/openapi-aggregate.json",
			"externalURLs": [
				{
					"url": "https://github.com/opentdf/opentdf/blob/258fee57a999e6dc9c54c9a92bd75c91121ed1ab/openapi/openapi-aggregate.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/api/attributes/authorities\": get: operation \"read_authorities_authorities_get\": security: parse security scheme \"OAuth2AuthorizationCodeBearer\": oauth2: flow \"authorizationCode\": at 1552:25: \"tokenUrl\" MUST be in the form of a URL: parse \"\": empty url"
}