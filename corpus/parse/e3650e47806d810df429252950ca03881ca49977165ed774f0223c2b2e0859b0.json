{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dariusbakunas/truenas-go-sdk"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 66446,
			"content": "openapi: 3.0.0\ninfo:\n  description: Go SDK for interacting with TrueNAS APIs (generated by Openapi Generator\n    https://github.com/openapitools/openapi-generator)\n  title: TrueNAS RESTful API\n  version: v2.0\nservers:\n- url: /\npaths:\n  /pool:\n    get:\n      operationId: listPools\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PoolsResponse'\n          description: A list of pools\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - pool\n  /pool/dataset:\n    post:\n      description: |\n        Creates a dataset/zvol.\n\n        `volsize` is required for type=VOLUME and is supposed to be a multiple of the block size.\n        `sparse` and `volblocksize` are only used for type=VOLUME.\n\n        `encryption` when enabled will create an ZFS encrypted root dataset for `name` pool.\n        There are 2 cases where ZFS encryption is not allowed for a dataset:\n        1) Pool in question is GELI encrypted.\n        2) If the parent dataset is encrypted with a passphrase and `name` is being created\n          with a key for encrypting the dataset.\n\n        `encryption_options` specifies configuration for encryption of dataset for `name` pool.\n        `encryption_options.passphrase` must be specified if encryption for dataset is desired with a passphrase\n        as a key.\n        Otherwise a hex encoded key can be specified by providing `encryption_options.key`.\n        `encryption_options.generate_key` when enabled automatically generates the key to be used\n        for dataset encryption.\n\n        It should be noted that keys are stored by the system for automatic locking/unlocking\n        on import/export of encrypted datasets. If that is not desired, dataset should be created\n        with a passphrase as a key.\n      operationId: createDataset\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDatasetParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: Dataset details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - dataset\n  /pool/dataset/id/{id}:\n    delete:\n      description: |\n        Delete dataset/zvol\n\n        `recursive` will also delete/destroy all children datasets.\n        `force` will force delete busy datasets.\n      operationId: deleteDataset\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: Operation succeeded\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - dataset\n    get:\n      description: |-\n        Query Pool Datasets with `query-filters` and `query-options`.\n\n        We provide two ways to retrieve datasets. The first is a flat structure (default), where\n        all datasets in the system are returned as separate objects which contain all data\n        there is for their children. This retrieval type is slightly slower because of duplicates in each object.\n        The second type is hierarchical, where only top level datasets are returned in the list. They contain all the\n        children in the `children` key. This retrieval type is slightly faster.\n        These options are controlled by the `query-options.extra.flat` attribute (default true).\n      operationId: getDataset\n      parameters:\n      - description: ID of the dataset\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: Dataset details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - dataset\n    put:\n      description: Update dataset\n      operationId: updateDataset\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDatasetParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Dataset'\n          description: Dataset details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - dataset\n  /cronjob/id/{id}:\n    delete:\n      operationId: deleteCronJob\n      parameters:\n      - description: ID of the cronjob\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Operation succeeded\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - cronjob\n    get:\n      operationId: getCronJob\n      parameters:\n      - description: ID of the cronjob\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJob'\n          description: CronJob details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - cronjob\n    put:\n      description: Update cronjob\n      operationId: updateCronJob\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCronjobParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJob'\n          description: CronJob details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - cronjob\n  /cronjob:\n    post:\n      description: |-\n        Create a new cron job.\n        `stderr` and `stdout` are boolean values which if `true`, represent that we would like to suppress standard error / standard output respectively.\n      operationId: createCronJob\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateCronjobParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CronJob'\n          description: CronJob details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - cronjob\n  /group:\n    get:\n      description: Get a list of (local) groups\n      operationId: listGroups\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          $ref: '#/components/responses/GroupsResponse'\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - group\n    post:\n      description: |-\n        Create a new group.\n\n        If `gid` is not provided it is automatically filled with the next one available.\n\n        `allow_duplicate_gid` allows distinct group names to share the same gid.\n\n        `users` is a list of user ids (`id` attribute from `user.query`).\n\n        `smb` specifies whether the group should be mapped into an NT group.\n      operationId: createGroup\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGroupParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResponse'\n          description: Group details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - group\n  /group/id/{id}:\n    delete:\n      description: |-\n        Delete group `id`.\n\n        The `delete_users` option deletes all users that have this group as their primary group.\n      operationId: deleteGroup\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteGroupParams'\n      responses:\n        \"200\":\n          description: Operation succeeded\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - group\n    get:\n      description: Get group of `id`.\n      operationId: getGroup\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Group'\n          description: Group details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - group\n    put:\n      description: Update attributes of an existing group.\n      operationId: updateGroup\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateGroupParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GroupResponse'\n          description: Group details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - group\n  /network/configuration:\n    get:\n      operationId: getNetworkConfiguration\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkConfig'\n          description: General network configuration\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - network\n  /network/general/summary:\n    get:\n      operationId: getNetworkSummary\n      parameters: []\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NetworkSummary'\n          description: General network summary\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - network\n  /service/id/{id}:\n    get:\n      operationId: getService\n      parameters:\n      - description: ID of the cronjob\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Service'\n          description: Service details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - service\n  /sharing/nfs:\n    get:\n      description: Get a list of NFS shares\n      operationId: listSharesNFS\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SharesNFSResponse'\n          description: List of NFS shares\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n    post:\n      description: |-\n        Create a new NFS Share.\n\n        `paths` is a list of valid paths which are configured to be shared on this share.\n\n        `networks` is a list of authorized networks that are allowed to access the share having format\n        \"network/mask\" CIDR notation. If empty, all networks are allowed.\n\n        `hosts` is a list of IP's/hostnames which are allowed to access the share. If empty, all IP's/hostnames are\n        allowed.\n\n        `alldirs` is a boolean value which when set indicates that the client can mount any subdirectories of the\n        selected pool or dataset.\n      operationId: createShareNFS\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateShareNFSParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareNFS'\n          description: NFS share details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n  /sharing/nfs/id/{id}:\n    delete:\n      description: Delete NFS Share of `id`.\n      operationId: removeShareNFS\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Operation succeeded\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n    get:\n      description: Get NFS Share of `id`.\n      operationId: getShareNFS\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareNFS'\n          description: NFS Share details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n    put:\n      description: Update NFS Share of `id`.\n      operationId: updateShareNFS\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateShareNFSParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareNFS'\n          description: NFS Share details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n  /sharing/smb:\n    get:\n      description: Get a list of SMB shares\n      operationId: listSharesSMB\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SharesSMBResponse'\n          description: List of SMB shares\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n    post:\n      description: |-\n        Create an SMB Share.\n\n        `purpose` applies common configuration presets depending on intended purpose.\n\n        `timemachine` when set, enables Time Machine backups for this share.\n\n        `ro` when enabled, prohibits write access to the share.\n\n        `guestok` when enabled, allows access to this share without a password.\n\n        `hostsallow` is a list of hostnames / IP addresses which have access to this share.\n\n        `hostsdeny` is a list of hostnames / IP addresses which are not allowed access to this share. If a handful\n        of hostnames are to be only allowed access, `hostsdeny` can be passed \"ALL\" which means that it will deny\n        access to ALL hostnames except for the ones which have been listed in `hostsallow`.\n\n        `acl` enables support for storing the SMB Security Descriptor as a Filesystem ACL.\n\n        `streams` enables support for storing alternate datastreams as filesystem extended attributes.\n\n        `fsrvp` enables support for the filesystem remote VSS protocol. This allows clients to create\n        ZFS snapshots through RPC.\n\n        `shadowcopy` enables support for the volume shadow copy service.\n\n        `auxsmbconf` is a string of additional smb4.conf parameters not covered by the system's API.\n      operationId: createShareSMB\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateShareSMBParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareSMB'\n          description: SMB Share details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n  /sharing/smb/id/{id}:\n    delete:\n      description: |-\n        Delete SMB Share of `id`. This will forcibly disconnect SMB clients\n        that are accessing the share.\n      operationId: removeShareSMB\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Operation succeeded\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n    get:\n      description: Get SMB Share of `id`.\n      operationId: getShareSMB\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareSMB'\n          description: SMB Share details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n    put:\n      description: Update SMB Share of `id`.\n      operationId: updateShareSMB\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateShareSMBParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ShareSMB'\n          description: SMB Share details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - sharing\n  /user:\n    get:\n      description: Get a list of (local) users.\n      operationId: listUsers\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UsersResponse'\n          description: List of local users\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - user\n    post:\n      description: |-\n        Create a new user.\n\n        If `uid` is not provided it is automatically filled with the next one available.\n\n        `group` is required if `group_create` is false.\n\n        `password` is required if `password_disabled` is false.\n\n        Available choices for `shell` can be retrieved with `user.shell_choices`.\n\n        `attributes` is a general-purpose object for storing arbitrary user information.\n\n        `smb` specifies whether the user should be allowed access to SMB shares. User\n        willl also automatically be added to the `builtin_users` group.\n      operationId: createUser\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUserParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: User ID\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - user\n  /user/id/{id}:\n    delete:\n      description: |-\n        Delete user `id`.\n\n        The `delete_group` option deletes the user primary group if it is not being used by\n        any other user.\n      operationId: deleteUser\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteUserParams'\n      responses:\n        \"200\":\n          description: Operation succeeded\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - user\n    get:\n      description: Get user of `id`.\n      operationId: getUser\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: User details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - user\n    put:\n      description: Update attributes of an existing user.\n      operationId: updateUser\n      parameters:\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateUserParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserResponse'\n          description: User ID\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - user\n  /user/shell_choices:\n    post:\n      description: |-\n        Return the available shell choices to be used in `user.create` and `user.update`.\n\n        If `user_id` is provided, shell choices are filtered to ensure the user can access the shell choices provided.\n      operationId: getUserShellChoices\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserShellChoicesParams'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserShellChoices'\n          description: Valid shell choices\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - user\n  /vm:\n    get:\n      description: Get a list of VMs\n      operationId: listVMS\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VMSResponse'\n          description: List of VMs\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - vm\n  /vm/id/{id}:\n    get:\n      description: Get VM details\n      operationId: getVM\n      parameters:\n      - explode: true\n        in: query\n        name: limit\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: offset\n        required: false\n        schema:\n          type: integer\n        style: form\n      - explode: true\n        in: query\n        name: count\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - explode: true\n        in: query\n        name: sort\n        required: false\n        schema:\n          type: string\n        style: form\n      - explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VM'\n          description: VM details\n        \"401\":\n          description: No authorization for this endpoint\n      security:\n      - bearerAuth: []\n      tags:\n      - vm\ncomponents:\n  responses:\n    NotFound:\n      description: Endpoint not found\n    Unauthorized:\n      description: No authorization for this endpoint\n    Success:\n      description: Operation succeeded\n  schemas:\n    CreateCronjobParams:\n      example:\n        schedule:\n          dom: dom\n          hour: hour\n          month: month\n          dow: dow\n          minute: minute\n        stdout: true\n        description: description\n        stderr: true\n        user: user\n        command: command\n        enabled: true\n      properties:\n        user:\n          type: string\n        command:\n          type: string\n        description:\n          type: string\n        enabled:\n          type: boolean\n        stdout:\n          type: boolean\n        stderr:\n          type: boolean\n        schedule:\n          $ref: '#/components/schemas/CronJobSchedule'\n      required:\n      - command\n      - user\n      type: object\n    CreateDatasetParams:\n      example:\n        quota_critical: 1\n        recordsize: recordsize\n        deduplication: deduplication\n        refreservation: 3\n        type: type\n        volblocksize: volblocksize\n        encryption_options:\n          generate_key: true\n          passphrase: passphrase\n          key: key\n          algorithm: algorithm\n        copies: 0\n        encryption: true\n        readonly: readonly\n        casesensitivity: casesensitivity\n        quota: 6\n        reservation: 2\n        inherit_encryption: true\n        force_size: true\n        refquota: 2\n        atime: atime\n        comments: comments\n        volsize: 5\n        sync: sync\n        snapdir: snapdir\n        quota_warning: 5\n        share_type: share_type\n        name: name\n        refquota_critical: 7\n        aclmode: aclmode\n        compression: compression\n        refquota_warning: 9\n        exec: exec\n      properties:\n        atime:\n          type: string\n        aclmode:\n          type: string\n        name:\n          type: string\n        comments:\n          type: string\n        compression:\n          type: string\n        casesensitivity:\n          type: string\n        copies:\n          type: integer\n        deduplication:\n          type: string\n        encryption:\n          type: boolean\n        encryption_options:\n          $ref: '#/components/schemas/CreateDatasetParams_encryption_options'\n        exec:\n          type: string\n        force_size:\n          type: boolean\n        inherit_encryption:\n          type: boolean\n        quota:\n          format: int64\n          type: integer\n        quota_critical:\n          format: int64\n          type: integer\n        quota_warning:\n          format: int64\n          type: integer\n        volsize:\n          format: int64\n          type: integer\n        volblocksize:\n          type: string\n        readonly:\n          type: string\n        recordsize:\n          type: string\n        refquota:\n          format: int64\n          type: integer\n        refquota_critical:\n          format: int64\n          type: integer\n        refquota_warning:\n          format: int64\n          type: integer\n        refreservation:\n          format: int64\n          type: integer\n        reservation:\n          format: int64\n          type: integer\n        share_type:\n          type: string\n        snapdir:\n          type: string\n        sync:\n          type: string\n        type:\n          type: string\n      required:\n      - name\n      type: object\n    UpdateDatasetParams:\n      example:\n        atime: atime\n        comments: comments\n        volsize: 5\n        recordsize: recordsize\n        deduplication: deduplication\n        refreservation: 5\n        sync: sync\n        snapdir: snapdir\n        copies: 0\n        readonly: readonly\n        quota: 6\n        aclmode: aclmode\n        compression: compression\n        force_size: true\n        refquota: 1\n        exec: exec\n      properties:\n        atime:\n          type: string\n        aclmode:\n          type: string\n        comments:\n          type: string\n        compression:\n          type: string\n        copies:\n          type: integer\n        deduplication:\n          type: string\n        exec:\n          type: string\n        force_size:\n          type: boolean\n        quota:\n          format: int64\n          type: integer\n        readonly:\n          type: string\n        recordsize:\n          type: string\n        refquota:\n          format: int64\n          type: integer\n        refreservation:\n          format: int64\n          type: integer\n        volsize:\n          format: int64\n          type: integer\n        snapdir:\n          type: string\n        sync:\n          type: string\n      type: object\n    CreateGroupParams:\n      example:\n        sudo_nopasswd: true\n        allow_duplicate_gid: true\n        gid: 0\n        name: name\n        smb: true\n        sudo: true\n        users:\n        - 6\n        - 6\n        sudo_commands:\n        - sudo_commands\n        - sudo_commands\n      properties:\n        gid:\n          type: integer\n        name:\n          type: string\n        smb:\n          type: boolean\n        sudo:\n          type: boolean\n        sudo_nopasswd:\n          type: boolean\n        sudo_commands:\n          items:\n            type: string\n          type: array\n        allow_duplicate_gid:\n          type: boolean\n        users:\n          items:\n            type: integer\n          type: array\n      required:\n      - name\n      type: object\n    DeleteGroupParams:\n      example:\n        delete_users: true\n      properties:\n        delete_users:\n          type: boolean\n      type: object\n    CreateShareNFSParams:\n      example:\n        maproot_group: maproot_group\n        hosts:\n        - hosts\n        - hosts\n        networks:\n        - networks\n        - networks\n        maproot_user: maproot_user\n        enabled: true\n        alldirs: true\n        mapall_user: mapall_user\n        mapall_group: mapall_group\n        security:\n        - security\n        - security\n        paths:\n        - paths\n        - paths\n        comment: comment\n        quiet: true\n        ro: true\n      properties:\n        paths:\n          items:\n            type: string\n          type: array\n        comment:\n          type: string\n        networks:\n          items:\n            type: string\n          type: array\n        hosts:\n          items:\n            type: string\n          type: array\n        alldirs:\n          type: boolean\n        ro:\n          type: boolean\n        quiet:\n          type: boolean\n        maproot_user:\n          type: string\n        maproot_group:\n          type: string\n        mapall_user:\n          type: string\n        mapall_group:\n          type: string\n        security:\n          items:\n            type: string\n          type: array\n        enabled:\n          type: boolean\n      required:\n      - paths\n      type: object\n    CreateShareSMBParams:\n      example:\n        auxsmbconf: auxsmbconf\n        shadowcopy: true\n        purpose: purpose\n        abe: true\n        hostsdeny:\n        - hostsdeny\n        - hostsdeny\n        path_suffix: path_suffix\n        streams: true\n        browsable: true\n        aapl_name_mangling: true\n        acl: true\n        fsrvp: true\n        enabled: true\n        home: true\n        durablehandle: true\n        path: path\n        timemachine: true\n        name: name\n        comment: comment\n        guestok: true\n        ro: true\n        hostsallow:\n        - hostsallow\n        - hostsallow\n        recyclebin: true\n      properties:\n        purpose:\n          type: string\n        path:\n          type: string\n        path_suffix:\n          type: string\n        home:\n          type: boolean\n        name:\n          type: string\n        comment:\n          type: string\n        ro:\n          type: boolean\n        browsable:\n          type: boolean\n        timemachine:\n          type: boolean\n        recyclebin:\n          type: boolean\n        guestok:\n          type: boolean\n        abe:\n          type: boolean\n        hostsallow:\n          items:\n            type: string\n          type: array\n        hostsdeny:\n          items:\n            type: string\n          type: array\n        aapl_name_mangling:\n          type: boolean\n        acl:\n          type: boolean\n        durablehandle:\n          type: boolean\n        shadowcopy:\n          type: boolean\n        streams:\n          type: boolean\n        fsrvp:\n          type: boolean\n        auxsmbconf:\n          type: string\n        enabled:\n          type: boolean\n      required:\n      - path\n      type: object\n    CreateUserParams:\n      example:\n        sshpubkey: sshpubkey\n        microsoft_account: true\n        smb: true\n        groups:\n        - 1\n        - 1\n        password_disabled: true\n        home: home\n        sudo_commands:\n        - sudo_commands\n        - sudo_commands\n        uid: 0\n        sudo_nopasswd: true\n        password: password\n        full_name: full_name\n        group_create: true\n        shell: shell\n        attributes:\n          key: '{}'\n        sudo: true\n        locked: true\n        home_mode: home_mode\n        email: email\n        username: username\n        group: 6\n      properties:\n        uid:\n          type: integer\n        username:\n          type: string\n        group:\n          type: integer\n        group_create:\n          type: boolean\n        home:\n          type: string\n        home_mode:\n          type: string\n        shell:\n          type: string\n        full_name:\n          type: string\n        email:\n          nullable: true\n          type: string\n        password:\n          type: string\n        password_disabled:\n          type: boolean\n        locked:\n          type: boolean\n        microsoft_account:\n          type: boolean\n        smb:\n          type: boolean\n        sudo:\n          type: boolean\n        sudo_nopasswd:\n          type: boolean\n        sudo_commands:\n          items:\n            type: string\n          type: array\n        sshpubkey:\n          nullable: true\n          type: string\n        groups:\n          items:\n            type: integer\n          type: array\n        attributes:\n          additionalProperties: true\n          properties: {}\n          type: object\n      required:\n      - full_name\n      - username\n      type: object\n    DeleteUserParams:\n      example:\n        delete_group: true\n      properties:\n        delete_group:\n          type: boolean\n      type: object\n    UpdateUserParams:\n      example:\n        sshpubkey: sshpubkey\n        microsoft_account: true\n        smb: true\n        groups:\n        - 1\n        - 1\n        password_disabled: true\n        home: home\n        sudo_commands:\n        - sudo_commands\n        - sudo_commands\n        uid: 0\n        sudo_nopasswd: true\n        password: password\n        full_name: full_name\n        shell: shell\n        attributes:\n          key: '{}'\n        sudo: true\n        locked: true\n        home_mode: home_mode\n        email: email\n        username: username\n        group: 6\n      properties:\n        uid:\n          type: integer\n        username:\n          type: string\n        group:\n          type: integer\n        home:\n          type: string\n        home_mode:\n          type: string\n        shell:\n          type: string\n        full_name:\n          type: string\n        email:\n          nullable: true\n          type: string\n        password:\n          type: string\n        password_disabled:\n          type: boolean\n        locked:\n          type: boolean\n        microsoft_account:\n          type: boolean\n        smb:\n          type: boolean\n        sudo:\n          type: boolean\n        sudo_nopasswd:\n          type: boolean\n        sudo_commands:\n          items:\n            type: string\n          type: array\n        sshpubkey:\n          nullable: true\n          type: string\n        groups:\n          items:\n            type: integer\n          type: array\n        attributes:\n          additionalProperties: true\n          properties: {}\n          type: object\n      type: object\n    UserShellChoicesParams:\n      nullable: true\n      title: user_id\n      type: integer\n    CompositeValue:\n      example:\n        rawvalue: rawvalue\n        source: source\n        value: value\n      properties:\n        value:\n          type: string\n        rawvalue:\n          type: string\n        source:\n          type: string\n      required:\n      - rawvalue\n      type: object\n    CronJob:\n      example:\n        schedule:\n          dom: dom\n          hour: hour\n          month: month\n          dow: dow\n          minute: minute\n        stdout: true\n        description: description\n        id: 0\n        stderr: true\n        user: user\n        command: command\n        enabled: true\n      properties:\n        id:\n          type: integer\n        user:\n          type: string\n        command:\n          type: string\n        description:\n          type: string\n        enabled:\n          type: boolean\n        stdout:\n          type: boolean\n        stderr:\n          type: boolean\n        schedule:\n          $ref: '#/components/schemas/CronJobSchedule'\n      type: object\n    CronJobSchedule:\n      example:\n        dom: dom\n        hour: hour\n        month: month\n        dow: dow\n        minute: minute\n      properties:\n        minute:\n          type: string\n        hour:\n          type: string\n        dom:\n          type: string\n        month:\n          type: string\n        dow:\n          type: string\n      type: object\n    Dataset:\n      example:\n        key_loaded: true\n        quota_critical:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        origin:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        recordsize:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        deduplication:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        refreservation:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        type: type\n        volblocksize:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        mountpoint: mountpoint\n        acltype:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        copies:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        readonly:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        casesensitivity:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        quota:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        reservation:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        id: id\n        locked: true\n        refquota:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        xattr:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        atime:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        comments:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        pbkdf2iters:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        volsize:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        key_format:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        pool: pool\n        encryption_root: encryption_root\n        sync:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        snapdir:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        quota_warning:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        encrypted: true\n        managedby:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        name: name\n        refquota_critical:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        encryption_algorithm:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        aclmode:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        compression:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        refquota_warning:\n          rawvalue: rawvalue\n          source: source\n          value: value\n        exec:\n          rawvalue: rawvalue\n          source: source\n          value: value\n      properties:\n        id:\n          type: string\n        name:\n          type: string\n        pool:\n          type: string\n        type:\n          type: string\n        mountpoint:\n          type: string\n        encrypted:\n          type: boolean\n        encryption_root:\n          type: string\n        key_loaded:\n          type: boolean\n        locked:\n          type: boolean\n        encryption_algorithm:\n          $ref: '#/components/schemas/CompositeValue'\n        aclmode:\n          $ref: '#/components/schemas/CompositeValue'\n        acltype:\n          $ref: '#/components/schemas/CompositeValue'\n        atime:\n          $ref: '#/components/schemas/CompositeValue'\n        casesensitivity:\n          $ref: '#/components/schemas/CompositeValue'\n        comments:\n          $ref: '#/components/schemas/CompositeValue'\n        compression:\n          $ref: '#/components/schemas/CompositeValue'\n        deduplication:\n          $ref: '#/components/schemas/CompositeValue'\n        exec:\n          $ref: '#/components/schemas/CompositeValue'\n        key_format:\n          $ref: '#/components/schemas/CompositeValue'\n        managedby:\n          $ref: '#/components/schemas/CompositeValue'\n        copies:\n          $ref: '#/components/schemas/CompositeValue'\n        quota:\n          $ref: '#/components/schemas/CompositeValue'\n        quota_critical:\n          $ref: '#/components/schemas/CompositeValue'\n        quota_warning:\n          $ref: '#/components/schemas/CompositeValue'\n        reservation:\n          $ref: '#/components/schemas/CompositeValue'\n        refreservation:\n          $ref: '#/components/schemas/CompositeValue'\n        refquota:\n          $ref: '#/components/schemas/CompositeValue'\n        refquota_critical:\n          $ref: '#/components/schemas/CompositeValue'\n        refquota_warning:\n          $ref: '#/components/schemas/CompositeValue'\n        readonly:\n          $ref: '#/components/schemas/CompositeValue'\n        recordsize:\n          $ref: '#/components/schemas/CompositeValue'\n        sync:\n          $ref: '#/components/schemas/CompositeValue'\n        snapdir:\n          $ref: '#/components/schemas/CompositeValue'\n        pbkdf2iters:\n          $ref: '#/components/schemas/CompositeValue'\n        origin:\n          $ref: '#/components/schemas/CompositeValue'\n        xattr:\n          $ref: '#/components/schemas/CompositeValue'\n        volsize:\n          $ref: '#/components/schemas/CompositeValue'\n        volblocksize:\n          $ref: '#/components/schemas/CompositeValue'\n      required:\n      - id\n      - name\n      - pool\n      - type\n      type: object\n    GroupsResponse:\n      items:\n        $ref: '#/components/schemas/Group'\n      type: array\n    GroupResponse:\n      title: group_id\n      type: integer\n    Group:\n      example:\n        sudo_nopasswd: true\n        id_type_both: true\n        gid: 6\n        builtin: true\n        smb: true\n        id: 0\n        sudo: true\n        users:\n        - 1\n        - 1\n        local: true\n        group: group\n        sudo_commands:\n        - sudo_commands\n        - sudo_commands\n      properties:\n        id:\n          type: integer\n        gid:\n          type: integer\n        group:\n          type: string\n        builtin:\n          type: boolean\n        sudo:\n          type: boolean\n        sudo_nopasswd:\n          type: boolean\n        sudo_commands:\n          items:\n            type: string\n          type: array\n        smb:\n          type: boolean\n        users:\n          items:\n            type: integer\n          type: array\n        local:\n          type: boolean\n        id_type_both:\n          type: boolean\n      required:\n      - group\n      - id\n      type: object\n    NetworkConfig:\n      example:\n        httpproxy: httpproxy\n        service_announcement:\n          wsd: true\n          netbios: true\n          mdns: true\n        hosts: hosts\n        domains:\n        - domains\n        - domains\n        ipv4gateway: ipv4gateway\n        ipv6gateway: ipv6gateway\n        hostname: hostname\n        nameserver2: nameserver2\n        nameserver3: nameserver3\n        hostname_local: hostname_local\n        netwait_ip:\n        - netwait_ip\n        - netwait_ip\n        nameserver1: nameserver1\n        domain: domain\n        netwait_enabled: true\n        id: 0\n      properties:\n        id:\n          type: integer\n        hostname:\n          type: string\n        domain:\n          type: string\n        ipv4gateway:\n          type: string\n        ipv6gateway:\n          type: string\n        nameserver1:\n          type: string\n        nameserver2:\n          type: string\n        nameserver3:\n          type: string\n        httpproxy:\n          type: string\n        netwait_enabled:\n          type: boolean\n        netwait_ip:\n          items:\n            type: string\n          type: array\n        hosts:\n          type: string\n        domains:\n          items:\n            type: string\n          type: array\n        service_announcement:\n          $ref: '#/components/schemas/NetworkConfig_service_announcement'\n        hostname_local:\n          type: string\n      type: object\n    NetworkSummary:\n      example:\n        nameservers:\n        - nameservers\n        - nameservers\n        ips:\n          key:\n            IPV6:\n            - IPV6\n            - IPV6\n            IPV4:\n            - IPV4\n            - IPV4\n        default_routes:\n        - default_routes\n        - default_routes\n      properties:\n        ips:\n          additionalProperties:\n            $ref: '#/components/schemas/NetworkSummary_ips'\n          type: object\n        default_routes:\n          items:\n            type: string\n          type: array\n        nameservers:\n          items:\n            type: string\n          type: array\n      type: object\n    PoolsResponse:\n      items:\n        $ref: '#/components/schemas/Pool'\n      type: array\n    Pool:\n      example:\n        path: path\n        healthy: true\n        encryptkey_path: encryptkey_path\n        name: name\n        guid: guid\n        id: 0\n        is_decrypted: true\n        status: status\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        guid:\n          type: string\n        path:\n          type: string\n        status:\n          type: string\n        healthy:\n          type: boolean\n        is_decrypted:\n          type: boolean\n        encryptkey_path:\n          type: string\n      required:\n      - id\n      - name\n      - path\n      type: object\n    Service:\n      example:\n        service: service\n        enable: true\n        id: 0\n        state: state\n        pids:\n        - 6\n        - 6\n      properties:\n        id:\n          type: integer\n        service:\n          type: string\n        enable:\n          type: boolean\n        state:\n          type: string\n        pids:\n          items:\n            type: integer\n          type: array\n      required:\n      - id\n      - service\n      type: object\n    ShareNFS:\n      example:\n        maproot_group: maproot_group\n        hosts:\n        - hosts\n        - hosts\n        maproot_user: maproot_user\n        networks:\n        - networks\n        - networks\n        enabled: true\n        alldirs: true\n        mapall_user: mapall_user\n        mapall_group: mapall_group\n        security:\n        - security\n        - security\n        paths:\n        - paths\n        - paths\n        comment: comment\n        id: 0\n        quiet: true\n        locked: true\n        ro: true\n      properties:\n        id:\n          type: integer\n        comment:\n          type: string\n        hosts:\n          items:\n            type: string\n          type: array\n        alldirs:\n          type: boolean\n        ro:\n          type: boolean\n        quiet:\n          type: boolean\n        maproot_user:\n          type: string\n        maproot_group:\n          type: string\n        mapall_user:\n          type: string\n        mapall_group:\n          type: string\n        security:\n          items:\n            type: string\n          type: array\n        enabled:\n          type: boolean\n        locked:\n          type: boolean\n        paths:\n          items:\n            type: string\n          type: array\n        networks:\n          items:\n            type: string\n          type: array\n      required:\n      - id\n      - paths\n      type: object\n    ShareSMB:\n      example:\n        auxsmbconf: auxsmbconf\n        purpose: purpose\n        hostsdeny:\n        - hostsdeny\n        - hostsdeny\n        path_suffix: path_suffix\n        browsable: true\n        aapl_name_mangling: true\n        acl: true\n        enabled: true\n        durablehandle: true\n        path: path\n        id: 0\n        locked: true\n        hostsallow:\n        - hostsallow\n        - hostsallow\n        shadowcopy: true\n        abe: true\n        streams: true\n        fsrvp: true\n        vuid: vuid\n        home: true\n        timemachine: true\n        name: name\n        comment: comment\n        guestok: true\n        ro: true\n        recyclebin: true\n      properties:\n        id:\n          type: integer\n        path:\n          type: string\n        path_suffix:\n          type: string\n        purpose:\n          type: string\n        home:\n          type: boolean\n        timemachine:\n          type: boolean\n        name:\n          type: string\n        comment:\n          type: string\n        ro:\n          type: boolean\n        browsable:\n          type: boolean\n        recyclebin:\n          type: boolean\n        shadowcopy:\n          type: boolean\n        guestok:\n          type: boolean\n        abe:\n          type: boolean\n        hostsallow:\n          items:\n            type: string\n          type: array\n        hostsdeny:\n          items:\n            type: string\n          type: array\n        aapl_name_mangling:\n          type: boolean\n        acl:\n          type: boolean\n        durablehandle:\n          type: boolean\n        streams:\n          type: boolean\n        fsrvp:\n          type: boolean\n        auxsmbconf:\n          type: string\n        enabled:\n          type: boolean\n        locked:\n          type: boolean\n        vuid:\n          type: string\n      required:\n      - id\n      - path\n      type: object\n    SharesNFSResponse:\n      items:\n        $ref: '#/components/schemas/ShareNFS'\n      type: array\n    SharesSMBResponse:\n      items:\n        $ref: '#/components/schemas/ShareSMB'\n      type: array\n    User:\n      example:\n        sshpubkey: sshpubkey\n        id_type_both: \"\"\n        builtin: \"\"\n        microsoft_account: \"\"\n        smb: \"\"\n        groups:\n        - 5\n        - 5\n        password_disabled: \"\"\n        local: \"\"\n        home: home\n        sudo_commands:\n        - sudo_commands\n        - sudo_commands\n        uid: 6\n        sudo_nopasswd: \"\"\n        full_name: full_name\n        smbhash: smbhash\n        shell: shell\n        unixhash: unixhash\n        attributes:\n          key: '{}'\n        id: 0\n        sudo: \"\"\n        locked: \"\"\n        email: email\n        username: username\n        group:\n          bsdgrp_group: bsdgrp_group\n          bsdgrp_builtin: \"\"\n          bsdgrp_sudo_commands:\n          - bsdgrp_sudo_commands\n          - bsdgrp_sudo_commands\n          bsdgrp_gid: 5\n          bsdgrp_sudo_nopasswd: \"\"\n          bsdgrp_smb: \"\"\n          id: 1\n          bsdgrp_sudo: \"\"\n      properties:\n        id:\n          type: integer\n        uid:\n          type: integer\n        username:\n          type: string\n        unixhash:\n          type: string\n        smbhash:\n          type: string\n        home:\n          type: string\n        shell:\n          type: string\n        full_name:\n          type: string\n        builtin:\n          type: bool\n        smb:\n          type: bool\n        password_disabled:\n          type: bool\n        locked:\n          type: bool\n        sudo:\n          type: bool\n        sudo_nopasswd:\n          type: bool\n        sudo_commands:\n          items:\n            type: string\n          type: array\n        microsoft_account:\n          type: bool\n        attributes:\n          additionalProperties: true\n          properties: {}\n          type: object\n        email:\n          nullable: true\n          type: string\n        group:\n          $ref: '#/components/schemas/User_group'\n        groups:\n          items:\n            type: integer\n          type: array\n        sshpubkey:\n          nullable: true\n          type: string\n        local:\n          type: bool\n        id_type_both:\n          type: bool\n      required:\n      - full_name\n      - id\n      - username\n      type: object\n    UsersResponse:\n      items:\n        $ref: '#/components/schemas/User'\n      type: array\n    UserResponse:\n      title: user_id\n      type: integer\n    UserShellChoices:\n      additionalProperties:\n        type: string\n      type: object\n    VM:\n      example:\n        memory: 1\n        devices:\n        - vm: 3\n          dtype: dtype\n          attributes: '{}'\n          id: 7\n          order: 9\n        - vm: 3\n          dtype: dtype\n          attributes: '{}'\n          id: 7\n          order: 9\n        shutdown_timeout: 2\n        description: description\n        threads: 5\n        vcpus: 6\n        autostart: true\n        cores: 5\n        bootloader: bootloader\n        name: name\n        id: 0\n        time: time\n        status:\n          domain_state: domain_state\n          pid: 2\n          state: state\n      properties:\n        id:\n          type: integer\n        name:\n          type: string\n        description:\n          type: string\n        vcpus:\n          type: integer\n        memory:\n          type: integer\n        autostart:\n          type: boolean\n        time:\n          type: string\n        bootloader:\n          type: string\n        cores:\n          type: integer\n        threads:\n          type: integer\n        shutdown_timeout:\n          type: integer\n        devices:\n          items:\n            $ref: '#/components/schemas/VM_devices'\n          type: array\n        status:\n          $ref: '#/components/schemas/VM_status'\n      required:\n      - id\n      - name\n      type: object\n    VMSResponse:\n      items:\n        $ref: '#/components/schemas/VM'\n      type: array\n    CreateDatasetParams_encryption_options:\n      example:\n        generate_key: true\n        passphrase: passphrase\n        key: key\n        algorithm: algorithm\n      properties:\n        algorithm:\n          type: string\n        generate_key:\n          type: boolean\n        passphrase:\n          type: string\n        key:\n          type: string\n      type: object\n    NetworkConfig_service_announcement:\n      example:\n        wsd: true\n        netbios: true\n        mdns: true\n      properties:\n        netbios:\n          type: boolean\n        mdns:\n          type: boolean\n        wsd:\n          type: boolean\n      type: object\n    NetworkSummary_ips:\n      example:\n        IPV6:\n        - IPV6\n        - IPV6\n        IPV4:\n        - IPV4\n        - IPV4\n      properties:\n        IPV4:\n          items:\n            type: string\n          type: array\n        IPV6:\n          items:\n            type: string\n          type: array\n      type: object\n    User_group:\n      example:\n        bsdgrp_group: bsdgrp_group\n        bsdgrp_builtin: \"\"\n        bsdgrp_sudo_commands:\n        - bsdgrp_sudo_commands\n        - bsdgrp_sudo_commands\n        bsdgrp_gid: 5\n        bsdgrp_sudo_nopasswd: \"\"\n        bsdgrp_smb: \"\"\n        id: 1\n        bsdgrp_sudo: \"\"\n      properties:\n        id:\n          type: integer\n        bsdgrp_gid:\n          type: integer\n        bsdgrp_group:\n          type: string\n        bsdgrp_builtin:\n          type: bool\n        bsdgrp_sudo:\n          type: bool\n        bsdgrp_sudo_nopasswd:\n          type: bool\n        bsdgrp_sudo_commands:\n          items:\n            type: string\n          type: array\n        bsdgrp_smb:\n          type: bool\n      type: object\n    VM_devices:\n      example:\n        vm: 3\n        dtype: dtype\n        attributes: '{}'\n        id: 7\n        order: 9\n      properties:\n        id:\n          type: integer\n        dtype:\n          type: string\n        order:\n          type: integer\n        vm:\n          type: integer\n        attributes:\n          type: object\n      required:\n      - dtype\n      - id\n      type: object\n    VM_status:\n      example:\n        domain_state: domain_state\n        pid: 2\n        state: state\n      properties:\n        state:\n          type: string\n        pid:\n          type: integer\n        domain_state:\n          type: string\n      type: object\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: APIKey\n      scheme: bearer\n      type: http\n",
			"canonicalURL": "/github.com/dariusbakunas/truenas-go-sdk@ce220a1b0eb25203d05ae50db631bdb99bd1b5a1/-/blob/api/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dariusbakunas/truenas-go-sdk/blob/ce220a1b0eb25203d05ae50db631bdb99bd1b5a1/api/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: at 1:15: schemas: \"UsersResponse\": parse schema: item: at 1:22481: parse schema: resolve \"#/components/schemas/User\": parse schema: property \"builtin\": at 1:20931: parse schema: unexpected schema type: \"bool\""
}