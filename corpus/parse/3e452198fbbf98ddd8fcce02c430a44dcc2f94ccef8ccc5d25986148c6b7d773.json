{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/RedHatInsights/rhsm-subscriptions"
		},
		"file": {
			"name": "insights-inventory-api-spec.yaml",
			"size": 0,
			"path": "clients/insights-inventory-client/insights-inventory-api-spec.yaml",
			"byteSize": 32043,
			"content": "---\nopenapi: 3.0.0\ninfo:\n  description: REST interface for the Insights Platform Host Inventory application.\n  version: 1.0.0\n  title: Insights Host Inventory REST Interface\npaths:\n  /hosts:\n    get:\n      operationId: api.host.get_host_list\n      tags:\n        - hosts\n      summary: Read the entire list of hosts\n      description: \u003e-\n        Read the entire list of all hosts available to the account.\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:read\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - in: query\n          name: display_name\n          schema:\n            type: string\n          description: A part of a searched hostâ€™s display name.\n          required: false\n        - in: query\n          name: fqdn\n          schema:\n            type: string\n          description: Filter by a host's FQDN\n          required: false\n        - in: query\n          name: hostname_or_id\n          schema:\n            type: string\n          description: 'Search for a host by display_name, fqdn, id'\n          required: false\n        - in: query\n          name: insights_id\n          schema:\n            type: string\n            format: uuid\n          description: Search for a host by insights_id\n          required: false\n        - $ref: '#/components/parameters/branchId'\n        - $ref: '#/components/parameters/perPageParam'\n        - $ref: '#/components/parameters/pageParam'\n        - $ref: '#/components/parameters/orderByParam'\n        - $ref: '#/components/parameters/orderHowParam'\n        - $ref: '#/components/parameters/stalenessParam'\n        - $ref: '#/components/parameters/tagsParam'\n        - $ref: '#/components/parameters/registered_with'\n      responses:\n        '200':\n          description: Successfully read the hosts list.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostQueryOutput'\n    post:\n      deprecated: true\n      operationId: api.host.add_host_list\n      tags:\n        - hosts\n      summary: Create/update multiple host and add them to the host list\n      description: \u003e-\n        Create a new host and add it to the host list or update an existing\n        hosts. A host is updated if there is already one with the same\n        canonicals facts and belonging to the same account.\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:write\n        \u003cbr /\u003e\u003cbr /\u003e\n        NOTICE: This operation is deprecated. The explicit creation of hosts is\n        no longer supported. Hosts are created automatically based on uploads\n        processed by the [payload ingress service](/docs/api/ingress#operations-default-post_upload) instead.\n      security:\n        - ApiKeyAuth: []\n        - BearerAuth: []\n      requestBody:\n        description: A list of host objects to be added to the host list\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/CreateHostIn'\n      responses:\n        '207':\n          description: Successfully created a host.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BulkHostOut'\n              examples:\n                update:\n                  value:\n                    status: 200\n                    host: Host details\n                create:\n                  value:\n                    status: 201\n                    host: Host details\n                error:\n                  value:\n                    status: 400\n                    title: Invalid Request\n                    detail: Could not process request\n                    host: Input host data\n        '400':\n          description: Invalid request.\n  '/hosts/{host_id_list}':\n    get:\n      tags:\n        - hosts\n      summary: Find hosts by their IDs\n      description: \u003e-\n        Find one or more hosts by their ID.\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:read\n      operationId: api.host.get_host_by_id\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/branchId'\n        - $ref: '#/components/parameters/perPageParam'\n        - $ref: '#/components/parameters/pageParam'\n        - $ref: '#/components/parameters/orderByParam'\n        - $ref: '#/components/parameters/orderHowParam'\n      responses:\n        '200':\n          description: Successfully searched for hosts.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HostQueryOutput'\n        '400':\n          description: Invalid request.\n        '404':\n          description: Host not found.\n    delete:\n      tags:\n        - hosts\n      summary: Delete hosts by IDs\n      description: \u003e-\n        Delete hosts by IDs\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:write\n      operationId: api.host.delete_by_id\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/branchId'\n      responses:\n        '200':\n          description: Successfully deleted hosts.\n        '400':\n          description: Invalid request.\n        '404':\n          description: Host not found.\n    patch:\n      tags:\n        - hosts\n      summary: Update a host\n      description: \u003e-\n        Update a host\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:write\n      operationId: api.host.patch_by_id\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/branchId'\n      requestBody:\n        description: A group of fields to be updated on the host\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchHostIn'\n      responses:\n        '200':\n          description: Successfully updated the host.\n        '400':\n          description: Invalid request.\n        '404':\n          description: Host not found.\n  '/hosts/{host_id_list}/facts/{namespace}':\n    patch:\n      tags:\n        - hosts\n      summary: Merge facts under a namespace\n      description: \u003e-\n        Merge one or multiple hosts facts under a namespace.\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:write\n      operationId: api.host.merge_facts\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/factsNamespace'\n        - $ref: '#/components/parameters/branchId'\n      requestBody:\n        description: A dictionary with the new facts to merge with the original ones.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Facts'\n      responses:\n        '200':\n          description: Successfully merged facts.\n        '400':\n          description: Invalid request.\n        '404':\n          description: Host or namespace not found.\n    put:\n      tags:\n        - hosts\n      summary: Replace facts under a namespace\n      description: \u003e-\n        Replace facts under a namespace\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:write\n      security:\n        - ApiKeyAuth: []\n      operationId: api.host.replace_facts\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/factsNamespace'\n        - $ref: '#/components/parameters/branchId'\n      requestBody:\n        description: A dictionary with the new facts to replace the original ones.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Facts'\n      responses:\n        '200':\n          description: Successfully replaced facts.\n        '400':\n          description: Invalid request.\n        '404':\n          description: Host or namespace not found.\n  '/hosts/{host_id_list}/system_profile':\n    get:\n      tags:\n        - hosts\n      summary: Return one or more hosts system profile\n      description: \u003e-\n        Find one or more hosts by their ID and return the id and system profile\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:read\n      operationId: api.host.get_host_system_profile_by_id\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/perPageParam'\n        - $ref: '#/components/parameters/pageParam'\n        - $ref: '#/components/parameters/orderByParam'\n        - $ref: '#/components/parameters/orderHowParam'\n        - $ref: '#/components/parameters/branchId'\n      responses:\n        '200':\n          description: Successfully searched for hosts.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SystemProfileByHostOut'\n        '400':\n          description: Invalid request.\n        '404':\n          description: Host not found.\n  '/hosts/{host_id_list}/tags':\n    get:\n      tags:\n        - hosts\n      summary: Get the tags on a host\n      description: \u003e-\n        Get the tags on a host\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:read\n      operationId: api.host.get_host_tags\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/perPageParam'\n        - $ref: '#/components/parameters/pageParam'\n        - $ref: '#/components/parameters/orderByParam'\n        - $ref: '#/components/parameters/orderHowParam'\n        - $ref: '#/components/parameters/searchParam'\n      responses:\n        '200':\n          description: Successfully found tags.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagsOut'\n        '400':\n          description: Invalid request.\n  '/hosts/{host_id_list}/tags/count':\n    get:\n      tags:\n        - hosts\n      summary: Get the number of tags on a host\n      description: \u003e-\n        Get the number of tags on a host\n        \u003cbr /\u003e\u003cbr /\u003e\n        Required permissions: inventory:hosts:read\n      operationId: api.host.get_host_tag_count\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/hostIdList'\n        - $ref: '#/components/parameters/perPageParam'\n        - $ref: '#/components/parameters/pageParam'\n        - $ref: '#/components/parameters/orderByParam'\n        - $ref: '#/components/parameters/orderHowParam'\n      responses:\n        '200':\n          description: Successfully found tag count.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TagCountOut'\n        '400':\n          description: Invalid request.\n\n  /tags:\n    get:\n      tags:\n        - tags\n      summary: Get the active host tags for a given account\n      description: \u003e-\n        Required permissions: inventory:hosts:read\n      operationId: api.tag.get_tags\n      security:\n        - ApiKeyAuth: []\n      parameters:\n        - $ref: '#/components/parameters/tagsParam'\n        - $ref: '#/components/parameters/tagsOrderBy'\n        - $ref: '#/components/parameters/tagsOrderHow'\n        - $ref: '#/components/parameters/perPageParam'\n        - $ref: '#/components/parameters/pageParam'\n        - $ref: '#/components/parameters/stalenessParam'\n        - $ref: '#/components/parameters/searchParam'\n        - $ref: '#/components/parameters/registered_with'\n      responses:\n        '200':\n            description: Tags\n            content:\n              application/json:\n                schema:\n                  $ref: '#/components/schemas/ActiveTags'\n        '400':\n            description: Invalid request.\n        '404':\n          $ref: '#/components/responses/PageOutOfBounds'\n\n\ncomponents:\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      x-bearerInfoFunc: app.auth.bearer_token_handler\n    ApiKeyAuth:\n      type: apiKey\n      in: header\n      name: x-rh-identity\n      description: \u003e-\n        Base64-encoded JSON identity header provided by 3Scale. Contains an\n        account number of the user issuing the request. Format of the JSON:\n        {\"identity\": {\"account_number\": \"12345678\"}}\n      x-apikeyInfoFunc: app.auth.authentication_header_handler\n  parameters:\n    pageParam:\n      name: page\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        default: 1\n      description: A page number of the items to return.\n    perPageParam:\n      name: per_page\n      in: query\n      required: false\n      schema:\n        type: integer\n        minimum: 1\n        maximum: 100\n        default: 50\n      description: A number of items to return per page.\n    hostIdList:\n      in: path\n      name: host_id_list\n      description: A comma separated list of host IDs.\n      required: true\n      schema:\n        type: array\n        items:\n          type: string\n          format: uuid\n    branchId:\n      in: query\n      name: branch_id\n      schema:\n        type: string\n      description: Filter by branch_id\n      required: false\n    factsNamespace:\n      in: path\n      name: namespace\n      description: A namespace of the merged facts.\n      required: true\n      schema:\n        type: string\n    orderByParam:\n      name: order_by\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - display_name\n          - updated\n      description: Ordering field name\n    orderHowParam:\n      name: order_how\n      in: query\n      required: false\n      schema:\n        type: string\n        enum:\n          - ASC\n          - DESC\n      description: \u003e-\n        Direction of the ordering, defaults to ASC for display_name and to DESC for\n        updated\n    stalenessParam:\n      name: staleness\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - fresh\n            - stale\n            - stale_warning\n            - unknown\n        default:\n          - fresh\n          - stale\n          - unknown\n      description: \"Culling states of the hosts. Default: fresh,stale,unknown\"\n    tagsParam:\n      name: tags\n      in: query\n      description: filters out hosts not tagged by the given tags\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          pattern: '^([^=/]+/)?[^=/]+(=[^=/]+)?$'\n    tagsOrderBy:\n      in: query\n      name: order_by\n      required: false\n      schema:\n        type: string\n        default: tag\n        enum:\n          - tag\n          - count\n      description: Ordering field name\n    tagsOrderHow:\n      in: query\n      name: order_how\n      required: false\n      schema:\n        type: string\n        default: ASC\n        enum:\n          - ASC\n          - DESC\n      description: Direction of the ordering. Default to ASC\n    searchParam:\n      in: query\n      name: search\n      required: false\n      description: Only include tags that match the given search string. The value is matched against namespace, key and value.\n      schema:\n        type: string\n    registered_with:\n      in: query\n      name: registered_with\n      required: false\n      description: Filters out any host not registered with the specified service\n      schema:\n        type: string\n        enum:\n          - insights\n\n\n  schemas:\n    TagsOut:\n      type: object\n      properties:\n        total:\n          type: integer\n          description: Total number of items in the \"data\" list.\n        count:\n          description: A number of entries on the current page.\n          type: integer\n        page:\n          description: A current page number.\n          type: integer\n        per_page:\n          description: A page size â€“ a number of entries per single page.\n          type: integer\n        results:\n          description: The list of tags on the systems\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              $ref: '#/components/schemas/StructuredTag'\n    StructuredTag:\n      type: object\n      properties:\n        namespace:\n          type: string\n          nullable: true\n        key:\n          type: string\n        value:\n          type: string\n          nullable: true\n    TagCountOut:\n      type: object\n      properties:\n        total:\n          type: integer\n          description: Total number of items in the \"data\" list.\n        count:\n          description: A number of entries on the current page.\n          type: integer\n        page:\n          description: A current page number.\n          type: integer\n        per_page:\n          description: A page size â€“ a number of entries per single page.\n          type: integer\n        results:\n          description: The list of tags on the systems\n          type: object\n          additionalProperties:\n            type: integer\n    BulkHostOut:\n      type: object\n      properties:\n        total:\n          type: integer\n          description: Total number of items in the \"data\" list.\n        errors:\n          type: integer\n          description: Number of items in the \"data\" list that contain errors.\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/BulkHostOutDetails'\n          description: 'List of hosts that were created, updated or failed to be processed.'\n    BulkHostOutDetails:\n      type: object\n      properties:\n        status:\n          type: integer\n          description: HTTP status code of the results of the host create/update process\n        host:\n          $ref: '#/components/schemas/CreateHostOut'\n        title:\n          type: string\n          description: Short description of why a host failed to be created or updated.\n        detail:\n          type: string\n          description: Details about why a host failed to be created or updated.\n    Facts:\n      title: Host facts\n      description: A set of string facts about a host.\n      type: object\n      example:\n        fact1: value1\n        fact2: value2\n    FactSet:\n      title: Host facts under a namespace\n      description: A set of string facts belonging to a single namespace.\n      properties:\n        namespace:\n          type: string\n          minLength: 1\n          description: A namespace the facts belong to.\n        facts:\n          type: object\n          description: The facts themselves.\n          example:\n            fact1: value1\n            fact2: value2\n      required:\n        - namespace\n        - facts\n    CreateHostIn:\n      title: Host data\n      description: \u003e-\n        Data of a single host belonging to an account. Represents the hosts\n        without its Inventory metadata.\n      type: object\n      required:\n        - account\n        - stale_timestamp\n        - reporter\n      properties:\n        display_name:\n          description: \u003e-\n            A hostâ€™s human-readable display name, e.g. in a form of a domain\n            name.\n          type: string\n          example: host1.mydomain.com\n        ansible_host:\n          description: \u003e-\n            The ansible host name for remediations\n          type: string\n          example: host1.mydomain.com\n        account:\n          description: A Red Hat Account number that owns the host.\n          type: string\n          example: '000102'\n        insights_id:\n          description: \u003e-\n            An ID defined in /etc/insights-client/machine-id. This field is\n            considered a canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n        rhel_machine_id:\n          description: \u003e-\n            A Machine ID of a RHEL host.  This field is considered to be a\n            canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n        subscription_manager_id:\n          description: \u003e-\n            A Red Hat Subcription Manager ID of a RHEL host.  This field is\n            considered to be a canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n        satellite_id:\n          description: \u003e-\n            A Red Hat Satellite ID of a RHEL host.  This field is considered to\n            be a canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n        bios_uuid:\n          description: \u003e-\n            A UUID of the host machine BIOS.  This field is considered to be a\n            canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n        ip_addresses:\n          description: \u003e-\n            Hostâ€™s network IP addresses.  This field is considered to be a\n            canonical fact.\n          type: array\n          items:\n            type: string\n          example:\n            - 10.10.0.1\n            - 10.0.0.2\n        fqdn:\n          description: \u003e-\n            A hostâ€™s Fully Qualified Domain Name.  This field is considered to\n            be a canonical fact.\n          type: string\n          example: my.host.example.com\n        mac_addresses:\n          description: \u003e-\n            Hostâ€™s network interfaces MAC addresses.  This field is considered\n            to be a canonical fact.\n          type: array\n          items:\n            type: string\n          example:\n            - 'c2:00:d0:c8:61:01'\n        external_id:\n          description: \u003e-\n            Hostâ€™s reference in the external source e.g. AWS EC2, Azure,\n            OpenStack, etc. This field is considered to be a canonical fact.\n          type: string\n          example: i-05d2313e6b9a42b16\n        facts:\n          description: A set of facts belonging to the host.\n          type: array\n          items:\n            $ref: '#/components/schemas/FactSet'\n        system_profile:\n          $ref: '#/components/schemas/SystemProfile'\n        stale_timestamp:\n          description: Timestamp from which the host is considered stale.\n          type: string\n          format: date-time\n        reporter:\n          description: Reporting source of the host. Used when updating the stale_timestamp.\n          type: string\n    CreateHostOut:\n      title: Create Host Out\n      description: \u003e-\n        Data of a single host belonging to an account. Represents the hosts\n        without its Inventory metadata.\n      type: object\n      required:\n        - account\n      properties:\n        display_name:\n          description: \u003e-\n            A hostâ€™s human-readable display name, e.g. in a form of a domain\n            name.\n          type: string\n          example: host1.mydomain.com\n          nullable: true\n        ansible_host:\n          description: \u003e-\n            The ansible host name for remediations\n          type: string\n          example: host1.mydomain.com\n          nullable: true\n        account:\n          description: A Red Hat Account number that owns the host.\n          type: string\n          example: '000102'\n        insights_id:\n          description: \u003e-\n            An ID defined in /etc/insights-client/machine-id. This field is\n            considered a canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n          nullable: true\n        rhel_machine_id:\n          description: \u003e-\n            A Machine ID of a RHEL host.  This field is considered to be a\n            canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n          nullable: true\n        subscription_manager_id:\n          description: \u003e-\n            A Red Hat Subcription Manager ID of a RHEL host.  This field is\n            considered to be a canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n          nullable: true\n        satellite_id:\n          description: \u003e-\n            A Red Hat Satellite ID of a RHEL host.  This field is considered to\n            be a canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n          nullable: true\n        bios_uuid:\n          description: \u003e-\n            A UUID of the host machine BIOS.  This field is considered to be a\n            canonical fact.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n          nullable: true\n        ip_addresses:\n          description: \u003e-\n            Hostâ€™s network IP addresses.  This field is considered to be a\n            canonical fact.\n          type: array\n          items:\n            type: string\n          nullable: true\n          example:\n            - 10.10.0.1\n            - 10.0.0.2\n        fqdn:\n          description: \u003e-\n            A hostâ€™s Fully Qualified Domain Name.  This field is considered to\n            be a canonical fact.\n          type: string\n          example: my.host.example.com\n          nullable: true\n        mac_addresses:\n          description: \u003e-\n            Hostâ€™s network interfaces MAC addresses.  This field is considered\n            to be a canonical fact.\n          type: array\n          items:\n            type: string\n          nullable: true\n          example:\n            - 'c2:00:d0:c8:61:01'\n        external_id:\n          description: \u003e-\n            Hostâ€™s reference in the external source e.g. AWS EC2, Azure,\n            OpenStack, etc. This field is considered to be a canonical fact.\n          type: string\n          nullable: true\n          example: i-05d2313e6b9a42b16\n        id:\n          description: \u003e-\n            A durable and reliable platform-wide host identifier. Applications\n            should use this identifier to reference hosts.\n          type: string\n          example: 3f01b55457674041b75e41829bcee1dc\n        created:\n          description: A timestamp when the entry was created.\n          type: string\n          format: date-time\n        updated:\n          description: A timestamp when the entry was last updated.\n          type: string\n          format: date-time\n        facts:\n          description: A set of facts belonging to the host.\n          type: array\n          items:\n            $ref: '#/components/schemas/FactSet'\n        stale_timestamp:\n          description: Timestamp from which the host is considered stale.\n          type: string\n          format: date-time\n          nullable: true\n        stale_warning_timestamp:\n          description: \u003e-\n            Timestamp from which the host is considered too stale to be listed without an explicit\n            toggle.\n          type: string\n          format: date-time\n          nullable: true\n        culled_timestamp:\n          description: Timestamp from which the host is considered deleted.\n          type: string\n          format: date-time\n          nullable: true\n        reporter:\n          description: Reporting source of the host. Used when updating the stale_timestamp.\n          type: string\n          nullable: true\n    HostOut:\n      title: A Host Inventory entry\n      description: A database entry representing a single host with its Inventory metadata.\n      allOf:\n        - $ref: '#/components/schemas/CreateHostOut'\n        - type: object\n          properties:\n            facts:\n              description: A set of facts belonging to the host.\n              type: array\n              items:\n                $ref: '#/components/schemas/FactSet'\n    HostQueryOutput:\n      title: A Host Inventory query result\n      description: \u003e-\n        A paginated host search query result with host entries and their\n        Inventory metadata.\n      type: object\n      required:\n        - count\n        - page\n        - per_page\n        - total\n        - results\n      properties:\n        count:\n          description: A number of entries on the current page.\n          type: integer\n        page:\n          description: A current page number.\n          type: integer\n        per_page:\n          description: A page size â€“ a number of entries per single page.\n          type: integer\n        total:\n          description: A total count of the found entries.\n          type: integer\n        results:\n          description: Actual host search query result entries.\n          type: array\n          items:\n            $ref: '#/components/schemas/HostOut'\n    SystemProfileByHostOut:\n      title: A host system profile query result\n      description: Structure of the output of the host system profile query\n      type: object\n      required:\n        - count\n        - page\n        - per_page\n        - total\n        - results\n      properties:\n        count:\n          description: A number of entries on the current page.\n          type: integer\n        page:\n          description: A current page number.\n          type: integer\n        per_page:\n          description: A page size â€“ a number of entries per single page.\n          type: integer\n        total:\n          description: A total count of the found entries.\n          type: integer\n        results:\n          description: Actual host search query result entries.\n          type: array\n          items:\n            $ref: '#/components/schemas/HostSystemProfileOut'\n    HostSystemProfileOut:\n      title: Structure of an individual host system profile output\n      description: Individual host record that contains only the host id and system profile\n      properties:\n        id:\n          type: string\n        system_profile:\n          $ref: '#/components/schemas/SystemProfile'\n    PatchHostIn:\n      title: Host data\n      description: \u003e-\n        Data of a single host to be updated.\n      type: object\n      properties:\n        ansible_host:\n          description: \u003e-\n            The ansible host name for remediations\n          type: string\n          example: host1.mydomain.com\n        display_name:\n          description: \u003e-\n            A hostâ€™s human-readable display name, e.g. in a form of a domain\n            name.\n          type: string\n          example: host1.mydomain.com\n\n    ActiveTags:\n      title: Host data\n      type: object\n      required:\n        - total\n        - count\n        - page\n        - per_page\n        - results\n      properties:\n        total:\n          $ref: '#/components/schemas/Total'\n        count:\n          $ref: '#/components/schemas/Count'\n        page:\n          $ref: '#/components/schemas/Page'\n        per_page:\n          $ref: '#/components/schemas/PerPage'\n        results:\n          type: array\n          items:\n            title: ActiveTag\n            description: Information about a host tag\n            type: object\n            required:\n              - tag\n              - count\n            properties:\n              tag:\n                $ref: '#/components/schemas/StructuredTag'\n              count:\n                description: The number of hosts with the given tag. If the value is null this indicates that the count is unknown.\n                type: integer\n                nullable: true\n      example:\n        total: 3\n        count: 3\n        page: 1\n        per_page: 50\n        results:\n          - tag:\n              namespace: Sat\n              key: env\n              value: prod\n            count: 3\n          - tag:\n              namespace: aws\n              key: region\n              value: us-east-1\n            count: 1\n          - tag:\n              namespace: insights-client\n              key: web\n              value: null\n            count: -1\n    Total:\n      type: integer\n      description: Total number of items\n    Count:\n      type: integer\n      description: The number of items on the current page\n    Page:\n      type: integer\n      description: The page number\n    PerPage:\n      type: integer\n      description: The number of items to return per page\n    SystemProfile:\n      $ref: 'system_profile.spec.yaml#/$defs/SystemProfile'\n  responses:\n    PageOutOfBounds:\n      description: Requested page is outside of the range of available pages\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"HostSystemProfileOut\": parse schema: property \"system_profile\": parse schema: resolve \"#/components/schemas/SystemProfile\": parse schema: resolve \"system_profile.spec.yaml#/$defs/SystemProfile\": external \"system_profile.spec.yaml\": file: local file reference is not allowed"
}