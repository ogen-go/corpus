{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hms-dbmi-cellenics/api"
		},
		"file": {
			"name": "api.yaml",
			"size": 0,
			"path": "src/specs/api.yaml",
			"byteSize": 41116,
			"content": "openapi: 3.0.0\ninfo:\n  title: API\n  version: 1.0.0\n  description: The main Node.js pipeline API.\n  license:\n    name: MIT\n    url: 'https://github.com/hms-dbmi-cellenics/api/blob/master/LICENSE'\n  contact:\n    name: Biomage Ltd.\nservers:\n  - url: /v1\ntags:\n  - name: experiments\n    description: Manage your experiments and experiment details.\n  - name: heartbeat\n    description: API health checks.\n  - name: work\n    description: Submitting and receiving work.\n  - name: processing-config\n    description: Structure for configuration of processing steps.\npaths:\n  /health:\n    get:\n      tags:\n        - heartbeat\n      summary: API health check\n      operationId: checkHealth\n      x-eov-operation-id: health#check\n      x-eov-operation-handler: routes/health\n      responses:\n        '200':\n          description: API is available.\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    pattern: up\n                  env:\n                    type: string\n                    enum:\n                      - development\n                      - test\n                      - staging\n                      - production\n                  clusterEnv:\n                    type: string\n                    enum:\n                      - development\n                      - test\n                      - staging\n                      - production\n                required:\n                  - status\n                  - env\n                  - clusterEnv\n      description: Returns a status on the health of the API.\n  /kubernetesEvents:\n    post:\n      operationId: receiveKubernetesEvent\n      x-eov-operation-id: kubernetes#event\n      x-eov-operation-handler: routes/kubernetes\n      responses:\n        '200':\n          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: ok\n        '500':\n          description: The data sent by the server could not be parsed as JSON.\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: nok\n      description: Events from Kubernetes Event Exporter relayed to the API through this endpoint.\n      summary: Retrieve events from kubernetes from pipeline step functions\n  /gem2sResults:\n    post:\n      operationId: receiveGem2sResponse\n      x-eov-operation-id: gem2s#response\n      x-eov-operation-handler: routes/gem2s\n      requestBody:\n        description: 'The results from the execution of a pipeline step, sent via SNS.'\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n            examples: {}\n          application/json:\n            schema:\n              type: object\n              properties: {}\n            examples: {}\n      responses:\n        '200':\n          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: ok\n        '500':\n          description: The data sent by the server could not be parsed as JSON.\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: nok\n      description: |-\n        Results from Step Function pipeline steps are relayed to the API through this endpoint.\n\n        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.\n\n        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.\n      summary: Retrieve results from pipeline step functions\n      tags:\n        - work\n    parameters: []\n  /pipelineResults:\n    post:\n      operationId: receivePipelineResponse\n      x-eov-operation-id: pipelines#response\n      x-eov-operation-handler: routes/pipelines\n      requestBody:\n        description: 'The results from the execution of a pipeline step, sent via SNS.'\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n            examples: {}\n          application/json:\n            schema:\n              type: object\n              properties: {}\n            examples: {}\n      responses:\n        '200':\n          description: 'A JSON-parseable was received by the server, *irrespective of whether it was correct/acceptable or not*.'\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: ok\n        '500':\n          description: The data sent by the server could not be parsed as JSON.\n          content:\n            text/plain:\n              schema:\n                type: string\n                pattern: nok\n      description: |-\n        Results from Step Function pipeline steps are relayed to the API through this endpoint.\n\n        Note that this endpoint is only exposed to AWS SNS, and since it has a specific communication protocol with limited feedback, the schema defined here is designed to be liberally enforceable. This endpoint is also used by SNS to handle subscribe/unsubscribe events.\n\n        The actual JSON passed by SNS is found in the `PipelineResponse` model, which is to be validated by the API.\n      summary: Retrieve results from pipeline step functions\n      tags:\n        - work\n    parameters: []\n  '/experiments/{experimentId}':\n    get:\n      tags:\n        - experiments\n      summary: Get experiment details\n      description: Returns the main details of the experiment.\n      operationId: getExperiment\n      x-eov-operation-id: experiment#getExperiment\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: 'Fetch successful, response below'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExperimentDetails'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n        description: ID of the experiment to find.\n    post:\n      summary: Create experiment\n      description: Create a new experiment\n      operationId: createExperiment\n      x-eov-operation-id: experiment#createExperiment\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Create experiment\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n    put:\n      summary: ''\n      operationId: updateExperiment\n      x-eov-operation-id: experiment#updateExperiment\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to modify this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Update experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ExperimentAttrs'\n  '/experiments/{experimentId}/cellSets':\n    get:\n      tags:\n        - experiments\n      summary: Get cell sets for experiment\n      description: Returns a hirearchical view of cell sets in the experiment.\n      operationId: getExperimentCellSetsById\n      x-eov-operation-id: experiment#getCellSets\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: 'Request successful, hierarchy returned below.'\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  cellSets:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/CellSets'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n    parameters:\n      - name: experimentId\n        in: path\n        description: ID of experiment to find cell sets of.\n        required: true\n        schema:\n          type: string\n    patch:\n      summary: ''\n      operationId: patchExperimentCellSetsById\n      x-eov-operation-id: experiment#patchCellSets\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Update to object in response successful.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/CellSets'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Performs a partial update on the experiment's cell sets.\n      requestBody:\n        content:\n          application/boschni-json-merger+json:\n            schema:\n              oneOf:\n                - type: array\n                  items: {}\n                - type: object\n        description: The patch in the format declared by boschni/json-merger. Note the explicit naming of the content subtype (boschni-json-merger+json) which must be used to explicitly acknowledge the format.\n  '/experiments/{experimentId}/processingConfig':\n    get:\n      summary: Retrieve processing configuration\n      description: Returns a hirearchical view of processing configuration used in the experiment.\n      operationId: getExperimentProcessingConfigById\n      x-eov-operation-id: experiment#getProcessingConfig\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: 'Fetch successful, response below.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessingConfig'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      tags:\n        - processing-config\n    parameters:\n      - name: experimentId\n        in: path\n        description: ID of experiment to find cell sets of.\n        required: true\n        schema:\n          type: string\n    put:\n      summary: ''\n      operationId: updateExperimentProcessingConfigById\n      x-eov-operation-id: experiment#updateProcessingConfig\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Update to object in response successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessingConfig'\n              examples: {}\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Updates the processing configuration in the database.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                type: object\n                properties:\n                  name:\n                    type: string\n                    description: Name of the configuration that wants to be changed\n                  body:\n                    $ref: '#/components/schemas/ProcessingConfig'\n                required:\n                  - name\n                  - body\n            examples: {}\n        description: Updates the keys specified by `name` with the body specified by `body`. A standard DynamoDB UpdateItem request should be called on the update.\n      tags:\n        - processing-config\n  '/experiments/{experimentId}/download/{type}':\n    get:\n      summary: Download data according to the requested type\n      operationId: downloadExperimentData\n      x-eov-operation-id: experiment#downloadData\n      x-eov-operation-handler: routes/experiment\n      responses:\n        '200':\n          description: Download request successful.\n          content:\n            application/json:\n              schema:\n                type: string\n                description: signed URL of the resource\n        '400':\n          description: Invalid download type request.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Invalid experiment ID or download type specified\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Endpoint to download files\n      parameters:\n        - schema:\n            type: string\n          in: query\n          name: experimentId\n        - schema:\n            type: string\n          in: query\n          name: type\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n        description: ID of the experiment\n      - schema:\n          type: string\n        name: type\n        in: path\n        required: true\n        description: Download type\n  '/experiments/{experimentId}/plots-tables/{plotUuid}':\n    parameters:\n      - schema:\n          type: string\n        name: plotUuid\n        in: path\n        required: true\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n    put:\n      summary: ''\n      operationId: updatePlotTable\n      x-eov-operation-id: plots-tables#update\n      x-eov-operation-handler: routes/plots-tables\n      responses:\n        '200':\n          description: Update to object in response successful.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlotTableConfig'\n        '201':\n          description: New resource created.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlotTableConfig'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Invalid experiment ID specified.\n      description: Updates a plot and table for a given experiment with the data specified.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PlotTableConfig'\n        description: The new configuration to update the old one by.\n    get:\n      summary: ''\n      operationId: getPlotTable\n      x-eov-operation-id: plots-tables#read\n      x-eov-operation-handler: routes/plots-tables\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PlotTableConfig'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment/plot not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Reads a plot and table for a given experiment with the data specified.\n  '/experiments/{experimentId}/gem2s':\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n    post:\n      summary: Create a new pipeline for gem2s execution\n      operationId: createNewGem2S\n      x-eov-operation-id: gem2s#create\n      x-eov-operation-handler: routes/gem2s\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n      description: This path will create a new pipeline that can run a state machine with gem2s tasks.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                paramsHash:\n                  type: string\n              required:\n                - paramsHash\n        description: Request body for GEM2S request\n      parameters: []\n  '/experiments/{experimentId}/pipelines':\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n    post:\n      summary: Create a new pipeline for taks execution\n      operationId: createNewPipeline\n      x-eov-operation-id: pipelines#create\n      x-eov-operation-handler: routes/pipelines\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: This path will create a new pipeline that can run a state machine with different bioinformatics tasks.\n  '/experiments/{experimentId}/backendStatus':\n    get:\n      summary: Create new pipeline\n      description: Endpoint to download files\n      operationId: get-experiments-experimentId-pipelines\n      x-eov-operation-id: backend-status#get\n      x-eov-operation-handler: routes/backend-status\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties: {}\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n        description: ID of the experiment\n  '/experiments/{experimentId}/samples':\n    parameters:\n      - schema:\n          type: string\n        name: experimentId\n        in: path\n        required: true\n    get:\n      summary: Your GET endpoint\n      operationId: getSamplesByExperimentId\n      x-eov-operation-id: samples#getSamplesByExperimentId\n      x-eov-operation-handler: routes/samples\n      tags: []\n      responses:\n        '200':\n          description: 'Fetch successful, samples returned below.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Samples'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Samples not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Get all samples for an experiment\n  '/projects/{projectUuid}':\n    parameters:\n      - schema:\n          type: string\n        name: projectUuid\n        in: path\n        required: true\n    post:\n      summary: Create project\n      description: Create a new project\n      operationId: createProject\n      x-eov-operation-id: projects#create\n      x-eov-operation-handler: routes/projects\n      responses:\n        '200':\n          description: Create new project\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '415':\n          description: Unsupported Media Type\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        description: The new project to set.\n    put:\n      summary: Update project\n      operationId: updateProject\n      x-eov-operation-id: projects#update\n      x-eov-operation-handler: routes/projects\n      responses:\n        '200':\n          description: Update project object\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '415':\n          description: Unsupported Media Type\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Update a project\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n        description: The new configuration to update the old one by.\n    delete:\n      summary: Deletes the project\n      operationId: deleteProject\n      x-eov-operation-id: projects#delete\n      x-eov-operation-handler: routes/projects\n      responses:\n        '200':\n          description: Deletes object\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Deletes project and associated samples.\n  '/projects/{projectUuid}/experiments':\n    parameters:\n      - name: projectUuid\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get experiments under a project\n      operationId: getProjectExperiments\n      x-eov-operation-id: projects#getExperiments\n      x-eov-operation-handler: routes/projects\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Experiment'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The request lacks authorization credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Get all experiments under a project\n  '/projects/{projectUuid}/samples':\n    parameters:\n      - name: projectUuid\n        in: path\n        required: true\n        schema:\n          type: string\n    get:\n      summary: Get samples under a project\n      description: Get all samples under a project\n      operationId: getProjectSamples\n      x-eov-operation-id: samples#get\n      x-eov-operation-handler: routes/samples\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SamplesByExperiment'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The request lacks authorization credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n  '/projects/{projectUuid}/{experimentId}/samples':\n    parameters:\n      - name: projectUuid\n        in: path\n        required: true\n        schema:\n          type: string\n      - name: experimentId\n        in: path\n        required: true\n        schema:\n          type: string\n    put:\n      summary: Update samples\n      operationId: updateSamples\n      x-eov-operation-id: samples#update\n      x-eov-operation-handler: routes/samples\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '415':\n          description: Unsupported Media Type\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Updates a samples entry\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Samples'\n    post:\n      summary: Add sample\n      description: Adds a new sample to a samples entry\n      operationId: addSample\n      x-eov-operation-id: samples#add\n      x-eov-operation-handler: routes/samples\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '415':\n          description: Unsupported Media Type\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Sample'\n    delete:\n      summary: Remove samples\n      operationId: removeSamples\n      x-eov-operation-id: samples#remove\n      x-eov-operation-handler: routes/samples\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '400':\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Not Found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '415':\n          description: Unsupported Media Type\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Removes samples from an entry\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SamplesRemoveBody'\n  '/projects/{projectUuid}/samples/{sampleUuid}/{fileName}/uploadUrl':\n    get:\n      summary: Get file upload url\n      description: Get temporary s3 upload url for fileName\n      operationId: uploadSampleFileUrl\n      x-eov-operation-id: samples#uploadSampleFileUrl\n      x-eov-operation-handler: routes/samples\n      parameters:\n        - in: query\n          name: cellranger_version\n          description: The cellranger version of the dataset\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n  '/projects/{projectUuid}/samples/{sampleUuid}/{fileName}/downloadUrl':\n    get:\n      summary: Get file download url\n      description: Get temporary s3 download url for fileName\n      operationId: downloadSampleFileUrl\n      x-eov-operation-id: samples#downloadSampleFileUrl\n      x-eov-operation-handler: routes/samples\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: string\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The authenticated user is not authorized to view this resource.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n  /projects:\n    get:\n      summary: Get the list of projects\n      operationId: getProjects\n      x-eov-operation-id: projects#get\n      x-eov-operation-handler: routes/projects\n      description: Get the projects\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Project'\n        '401':\n          description: The request lacks authentication credentials.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n  '/workResults/{experimentId}/{ETag}':\n    get:\n      summary: Get the work results from S3\n      operationId: getWorkResults\n      x-eov-operation-id: work#getResults\n      x-eov-operation-handler: routes/work\n      description: 'On success, returns a signed url with the uploaded worker results in S3'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  signedUrl:\n                    type: string\n        '403':\n          description: The user does not have permissions to view the work results.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '404':\n          description: The work results were not found.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n  '/access/{experimentId}':\n    put:\n      summary: Add user to an experiment\n      operationId: put-access\n      x-eov-operation-id: access#addRole\n      x-eov-operation-handler: routes/access\n      description: Adds permissions for the user email for the experiment from the body\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '404':\n          description: User not found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                userEmail:\n                  type: string\n                projectUuid:\n                  type: string\n                role:\n                  type: string\n              required:\n                - userEmail\n                - projectUuid\n                - role\n    get:\n      summary: Get the users with access to an experiment\n      operationId: get-access\n      x-eov-operation-id: access#getRoles\n      x-eov-operation-handler: routes/access\n      description: Returns the users with access to the experiment\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                description: ''\n                type: array\n                properties:\n                  name:\n                    type: string\n                  email:\n                    type: string\n                  role:\n                    type: string\n                required:\n                  - name\n                  - email\n                  - role\n        '404':\n          description: Experiment not found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n    delete:\n      summary: ''\n      operationId: delete-access-experimentId\n      x-eov-operation-id: access#revokeRole\n      x-eov-operation-handler: routes/access\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPSuccess.v1.yaml\n        '404':\n          description: Role not found\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n        '403':\n          description: The user does not have permissions to revoke the role.\n          content:\n            application/json:\n              schema:\n                $ref: ./models/HTTPError.v1.yaml\n      description: Delete a role for a user in experiment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              description: ''\n              type: object\n              properties:\n                userEmail:\n                  type: string\n                  minLength: 1\n              required:\n                - userEmail\n        description: email of the user to remove from experiment\n\ncomponents:\n  schemas:\n    Project:\n      $ref: ./models/api-body-schemas/Project.v1.yaml\n    Samples:\n      $ref: ./models/api-body-schemas/Samples.v1.yaml\n    Sample:\n      $ref: ./models/samples-bodies/Sample.v1.yaml\n    SamplesRemoveBody:\n      $ref: ./models/samples-bodies/SamplesRemoveBody.v1.yaml\n    Experiment:\n      $ref: ./models/api-body-schemas/Experiment.v1.yaml\n    ExperimentDetails:\n      $ref: ./models/api-body-schemas/ExperimentDetails.v1.yaml\n    ExperimentAttrs:\n      $ref: ./models/experiment-bodies/ExperimentAttrs.v1.yaml\n    ProcessingConfig:\n      $ref: ./models/ProcessingConfig.v1.yaml\n    CellSets:\n      $ref: ./models/api-body-schemas/CellSets.v1.yaml\n    PlotTableConfig:\n      $ref: ./models/api-body-schemas/PlotTableConfig.v1.yaml\n    SamplesByExperiment:\n      $ref: ./models/samples-bodies/SamplesByExperiment.v1.yaml\n"
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"Project\": parse schema: resolve \"./models/api-body-schemas/Project.v1.yaml\": find schema: external base \"./models/api-body-schemas/Project.v1.yaml\" is not supported"
}