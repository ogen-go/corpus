{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/marykarakida/projeto20-repoprovas"
		},
		"file": {
			"name": "swagger.json",
			"size": 0,
			"path": "src/swagger.json",
			"byteSize": 7374,
			"content": "{\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Repo Provas\",\n        \"description\": \"This API can be used to share tests between students\",\n        \"version\": \"1.0.0\"\n    },\n    \"servers\": [{ \"url\": \"https://repo-provas-db.herokuapp.com\" }],\n    \"tags\": [\n        { \"name\": \"auth\", \"description\": \"User authentication\" },\n        { \"name\": \"tests\", \"description\": \"Everything about tests\" }\n    ],\n    \"paths\": {\n        \"/auth/register\": {\n            \"post\": {\n                \"tags\": [\"auth\"],\n                \"summary\": \"Account creation\",\n                \"description\": \"This route is responsible for registering a new account\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/NewUser\"\n                            },\n                            \"examples\": {\n                                \"visitor\": {\n                                    \"value\": {\n                                        \"email\": \"visitor@com.br\",\n                                        \"password\": \"Password@123\",\n                                        \"passwordConfirmation\": \"Password@123\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"description\": \"Unprocessable entity\"\n                    }\n                }\n            }\n        },\n        \"/auth/login\": {\n            \"post\": {\n                \"tags\": [\"auth\"],\n                \"summary\": \"Account access\",\n                \"description\": \"This route is responsible for logging into app\",\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/User\"\n                            },\n                            \"examples\": {\n                                \"visitor\": {\n                                    \"value\": {\n                                        \"email\": \"visitor@com.br\",\n                                        \"password\": \"Password@123\"\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    },\n                    \"400\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"422\": {\n                        \"description\": \"Unprocessable entity\"\n                    }\n                }\n            }\n        },\n        \"/tests\": {\n            \"post\": {\n                \"tags\": [\"tests\"],\n                \"summary\": \"Test creation\",\n                \"description\": \"This route is responsible for uploading a new test\",\n                \"security\": [{ \"bearerAuth\": [] }],\n                \"requestBody\": {\n                    \"content\": {\n                        \"application/json\": {\n                            \"schema\": {\n                                \"$ref\": \"#/components/schemas/Test\"\n                            },\n                            \"examples\": {\n                                \"visitor\": {\n                                    \"value\": {\n                                        \"name\": \"Prova supresa\",\n                                        \"pdfUrl\": \"https://stackoverflow.com\",\n                                        \"categoryId\": 1,\n                                        \"disciplineId\": 1,\n                                        \"teacherId\": 1\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                \"responses\": {\n                    \"201\": {\n                        \"description\": \"Created\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"404\": {\n                        \"description\": \"Not Found\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"description\": \"Unprocessable entity\"\n                    }\n                }\n            },\n            \"get\": {\n                \"tags\": [\"tests\"],\n                \"summary\": \"View tests\",\n                \"description\": \"This route is responsible for getting all tests\",\n                \"security\": [{ \"bearerAuth\": [] }],\n                \"parameters\": [\n                    {\n                        \"name\": \"groupedBy\",\n                        \"in\": \"query\",\n                        \"description\": \"Group tests by disciplines or teachers\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\"\n                    },\n                    \"401\": {\n                        \"description\": \"Unauthorized\"\n                    },\n                    \"409\": {\n                        \"description\": \"Conflict\"\n                    },\n                    \"422\": {\n                        \"description\": \"Unprocessable entity\"\n                    }\n                }\n            }\n        }\n    },\n    \"components\": {\n        \"schemas\": {\n            \"NewUser\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": { \"type\": \"string\" },\n                    \"email\": { \"type\": \"string\" },\n                    \"password\": {\n                        \"type\": \"string\",\n                        \"description\": \"8 to 24 characters. Must include uppercase and lowercase letters, a number and a special character. Allowed special characters: ! @ # $ % W\"\n                    },\n                    \"passwordConfirmation\": {\n                        \"type\": \"string\",\n                        \"description\": \"Same as password\"\n                    }\n                }\n            },\n            \"User\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"id\": { \"type\": \"string\" },\n                    \"email\": { \"type\": \"string\" },\n                    \"password\": { \"type\": \"string\" }\n                }\n            },\n            \"Test\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"name\": { \"type\": \"string\" },\n                    \"pdfUrl\": { \"type\": \"string\" },\n                    \"categoryId\": { \"type\": \"number\" },\n                    \"disciplineId\": { \"type\": \"number\" },\n                    \"teacherId\": { \"type\": \"number\" }\n                }\n            }\n        },\n        \"securitySchemes\": {\n            \"bearerAuth\": {\n                \"type\": \"http\",\n                \"scheme\": \"bearer\",\n                \"bearerFormat\": \"JWT\"\n            }\n        }\n    }\n}\n",
			"canonicalURL": "/github.com/marykarakida/projeto20-repoprovas@312deeb39045fe1fd0b741fd246ff1909c2ef1f9/-/blob/src/swagger.json",
			"externalURLs": [
				{
					"url": "https://github.com/marykarakida/projeto20-repoprovas/blob/312deeb39045fe1fd0b741fd246ff1909c2ef1f9/src/swagger.json",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/tests\": get: parameters: parse parameter \"groupedBy\": at src/swagger.json:135:21: parameter MUST contain either a schema property, or a content property"
}