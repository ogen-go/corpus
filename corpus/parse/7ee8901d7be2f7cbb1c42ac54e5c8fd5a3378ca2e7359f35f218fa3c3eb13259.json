{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/XeniasDimitris/SmartX-Project"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "back-end/api/api_docs/openapi.yaml",
			"byteSize": 20359,
			"content": "openapi: 3.0.0\ninfo:\n  description: |\n   This is the API Documentation for SmartX-City Project and is compliant with the OpenAPI Specification v3.0. The source code of the project is [here (Github)](https://github.com/XeniasDimitris/SmartX-Project) .\n  version: \"1.0.0\"\n  title: SmartX-City Project\n  contact:\n    name: \"Xenias Dimitris\"\n    email: dimitrisxenias@gmail.com\nservers:\n  - url: http://localhost:8000/api\n    description: SmartX City API server\ntags:\n  - name: Weather\n    description: Get info about weather records\n  - name: Parkings\n    description: Get info about Aarhus' Parking Areas\n  - name: Dokk1\n    description: Get sensors info about Dokk1 building\n  - name: Demographics\n    description: Get demographics for all local communities of Aarhus\n  - name: Traffic\n    description: Get info about Traffic Sensors\n  - name: Pollution\n    description: Get info about Pollution Sensors\n  - name: Events\n    description: Get events that happen in Town\npaths:\n  /weather/humidity:\n    get:\n      tags:\n        - Weather\n      summary: Get Humidity records\n      operationId: getHumidity\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n            required: false\n            schema:\n              type: string\n            $ref: './parameters_examples/weather_start_end_example.yaml'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled  with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            $ref: './parameters_examples/weather_start_end_example.yaml'\n\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/WeatherFloat.yaml'\n              example:\n              - datetime: '2014-08-01T00:00:00'\n                value: 56\n              - datetime: '2014-08-01T00:20:00'\n                value: 68\n\n  /weather/temperature:\n    get:\n      tags:\n        - Weather\n      summary: Get Temperature records\n      operationId: getTemperature\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n            required: false\n            schema:\n              type: string\n            $ref: './parameters_examples/weather_start_end_example.yaml'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled with  the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            $ref: './parameters_examples/weather_start_end_example.yaml'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/WeatherFloat.yaml'\n              example:\n              - datetime: '2014-08-01T00:00:00'\n                value: 18.2\n              - datetime: '2014-08-01T00:20:00'\n                value: 19.5\n\n  /weather/pressure:\n    get:\n      tags:\n        - Weather\n      summary: Get Pressure records\n      operationId: getPressure\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n            required: false\n            schema:\n              type: string\n            $ref: './parameters_examples/weather_start_end_example.yaml'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled with  the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            $ref: './parameters_examples/weather_start_end_example.yaml'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/WeatherInt.yaml'\n              example:\n              - datetime: '2014-08-01T00:00:00'\n                value: 1012\n              - datetime: '2014-08-01T00:20:00'\n                value: 1013\n  /weather/wind_speed:\n    get:\n      tags:\n        - Weather\n      summary: Get Wind Speed records\n      operationId: getWindSpeed\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2014-08-01'\n              YYYY-MM:\n               value: '2014-08'\n              YYYY:\n               value: '2014'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2014-08-01'\n              YYYY-MM:\n               value: '2014-08'\n              YYYY:\n               value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/WeatherFloat.yaml'\n              example:\n              - datetime: '2014-08-01T00:00:00'\n                value: 7.4\n              - datetime: '2014-08-01T00:20:00'\n                value: 7.5\n  /weather/wind_direction:\n    get:\n      tags:\n        - Weather\n      summary: Get Wind Direction records\n      operationId: getWindDirection\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2014-08-01'\n              YYYY-MM:\n               value: '2014-08'\n              YYYY:\n               value: '2014'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2014-08-01'\n              YYYY-MM:\n               value: '2014-08'\n              YYYY:\n               value: '2014'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/WeatherInt.yaml'\n              example:\n              - datetime: '2014-08-01T00:00:00'\n                value: 220\n              - datetime: '2014-08-01T00:20:00'\n                value: 210\n\n  /parkings/info:\n    get:\n      tags:\n        - Parkings\n      summary: Get metadata about Aarhus' Parking Areas\n      operationId: getParkingsInfo\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ParkingsInfo.yaml'\n              example:\n                $ref: './response_example/ParkingsInfo.yaml'\n  /parkings/records:\n    get:\n      tags:\n        - Parkings\n      summary: Get Aarhus' Parking Areas Records\n      operationId: getParkingRecords\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-05-22*)\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2014-05-22'\n              YYYY-MM:\n               value: '2014-05'\n              YYYY:\n               value: '2014'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2014-11-04*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2014-11-04'\n              YYYY-MM:\n               value: '2014-11'\n              YYYY:\n               value: '2014'\n          - name: parking\n            in: query\n            description: If filled, the records are only about this particular parking area\n            required: false\n            schema:\n              type: string\n            examples:\n              Parking:\n                value: 'NORREPORT'\n          - name: groupBy\n            in: query\n            description: If filled, the records will be returned grouped by the given frequency\n            required: false\n            schema:\n              type: string\n            examples:\n              Day:\n                value: 'D'\n              Month:\n                value: 'M'\n              Hour:\n                value: 'H'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/ParkingsRecs.yaml'\n              example:\n                $ref: './response_example/ParkingsRecs.yaml'\n  /dokk1/sensors:\n    get:\n      tags:\n        - Dokk1\n      summary: Get metadata about Dokk1's sensors\n      operationId: getDokk1Info\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Dokk1Info.yaml'\n              example:\n                $ref: './response_example/Dokk1Info.yaml'\n  /dokk1/records:\n    get:\n      tags:\n        - Dokk1\n      summary: Get Dokk1's records for a particular sensor\n      operationId: getDokk1Records\n      parameters:\n          - name: start\n            in: query\n            description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2020-05-04*)\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2020-05-04'\n              YYYY-MM:\n               value: '2020-05'\n              YYYY:\n               value: '2020'\n          - name: end\n            in: query\n            description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2020-09-19*)  \u003c/br\u003e\n              **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n            required: false\n            schema:\n              type: string\n            examples:\n              YYYY-MM-dd:\n               value: '2020-09-19'\n              YYYY-MM:\n               value: '2020-09'\n              YYYY:\n               value: '2020'\n          - name: id\n            in: query\n            required: true\n            schema:\n              type: string\n            description: The sensor's id from which to retrieve records.\n            examples:\n              Sensor:\n                value: '71c3e'\n          - name: groupBy\n            in: query\n            description: If filled, the records will be returned grouped by the given frequency\n            required: false\n            schema:\n              type: string\n            examples:\n              Day:\n                value: 'D'\n              Month:\n                value: 'M'\n              Hour:\n                value: 'H'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Dokk1Recs.yaml'\n              example:\n                $ref: './response_example/Dokk1Recs.yaml'\n  /demographics:\n      get:\n        tags:\n          - Demographics\n        summary: Get demographics\n        operationId: Demographics\n        responses:\n          '200':\n            description: Successful operation\n            content:\n              application/json:\n                schema:\n                  $ref: './schemas/Demographics.yaml'\n                example:\n                  $ref: './response_example/Demographics.yaml'\n\n  /traffic/sensors:\n    get:\n      tags:\n        - Traffic\n      summary: Get Meta Data about Traffic Sensors across Town\n      operationId: TrafficSensors\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/TrafficSensors.yaml'\n              example:\n                $ref: './response_example/TrafficSensors.yaml'\n  /traffic/cor_sensors:\n    get:\n      tags:\n        - Traffic\n      summary: Get Meta Data about Traffic Records\n      operationId: TrafficCorSensors\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/TrafficCorSensors.yaml'\n              example:\n                $ref: './response_example/TrafficCorSensors.yaml'\n  /traffic/records:\n    get:\n      tags:\n        - Traffic\n      summary: Get Traffic records from a particular traffic report_id\n      operationId: TrafficRecords\n      parameters:\n        - name: start\n          in: query\n          description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: '2014-08'\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n            **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: '2014-08'\n            YYYY:\n              value: '2014'\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The report id from which to retrieve records.\n          examples:\n            Sensor:\n              value: '158895'\n        - name: groupBy\n          in: query\n          description: If filled, the records will be returned grouped by the given frequency\n          required: false\n          schema:\n            type: string\n          examples:\n            Day:\n              value: 'D'\n            Month:\n              value: 'M'\n            Hour:\n              value: 'H'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/TrafficRecs.yaml'\n              example:\n                $ref: './response_example/TrafficRecs.yaml'\n\n  /pollution/sensors:\n    get:\n      tags:\n        - Pollution\n      summary: Get Meta Data about Pollution Sensors across Town\n      operationId: PollutionSensors\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/PollutionSensors.yaml'\n              example:\n                $ref: './response_example/PollutionSensors.yaml'\n  /pollution/records:\n    get:\n      tags:\n        - Pollution\n      summary: Get Pollution Records from a given report_id\n      operationId: PollutionRecords\n      parameters:\n        - name: start\n          in: query\n          description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2014-08-01*)\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: '2014-08'\n            YYYY:\n              value: '2014'\n        - name: end\n          in: query\n          description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2014-09-31*)  \u003c/br\u003e\n            **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2014-08-01'\n            YYYY-MM:\n              value: '2014-08'\n            YYYY:\n              value: '2014'\n        - name: id\n          in: query\n          required: true\n          schema:\n            type: string\n          description: The report id from which to retrieve records.\n          examples:\n            Sensor:\n              value: '158895'\n        - name: groupBy\n          in: query\n          description: If filled, the records will be returned grouped by the given frequency\n          required: false\n          schema:\n            type: string\n          examples:\n            Day:\n              value: 'D'\n            Month:\n              value: 'M'\n            Hour:\n              value: 'H'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/PollutionRecs.yaml'\n              example:\n                $ref: './response_example/PollutionRecs.yaml'\n\n  /events:\n    get:\n      tags:\n        - Events\n      summary: Get Events\n      operationId: Events\n      parameters:\n        - name: start\n          in: query\n          description: The first Date of requesting records. If it's not filled, it will be auto-filled with the first available datetime (here  *2013-11-04*)\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2013-11-04'\n            YYYY-MM:\n              value: '2013-11'\n            YYYY:\n              value: '2013'\n        - name: end\n          in: query\n          description: The final Date of requesting records. If it's not filled, it will be auto-filled with the last available datetime. (here *2015-03-11*)  \u003c/br\u003e\n            **!!!NOTE that end datetime  MUST be bigger than start datetime.**\n          required: false\n          schema:\n            type: string\n          examples:\n            YYYY-MM-dd:\n              value: '2015-03-11'\n            YYYY-MM:\n              value: '2015-03'\n            YYYY:\n              value: '2015'\n      responses:\n        '200':\n          description: Successful operation\n          content:\n            application/json:\n              schema:\n                $ref: './schemas/Events.yaml'\n              example:\n                $ref: './response_example/Events.yaml'",
			"canonicalURL": "/github.com/XeniasDimitris/SmartX-Project@b934968fad55bca7e85c48d42bbfbd00a2516245/-/blob/back-end/api/api_docs/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/XeniasDimitris/SmartX-Project/blob/b934968fad55bca7e85c48d42bbfbd00a2516245/back-end/api/api_docs/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/demographics\": get: operation \"Demographics\": responses: 200: content: application/json: schema: parse schema: at 1:565: external \"./schemas/Demographics.yaml\": get: file: local file reference is not allowed"
}