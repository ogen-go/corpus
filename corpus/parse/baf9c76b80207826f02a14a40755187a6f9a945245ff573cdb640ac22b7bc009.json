{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/iti-ict/wakamiti"
		},
		"file": {
			"name": "openapi.yml",
			"size": 0,
			"path": "kukumo-server-quarkus/src/main/resources/META-INF/openapi.yml",
			"byteSize": 12238,
			"content": "openapi: 3.0.3\ninfo:\n  title: Kukumo Execution Server API\n  version: \"1.0\"\n  summary: REST API to execute Kukumo test plans\npaths:\n  /executions:\n\n    get:\n      summary: Obtain the executions launched in a session\n      security:\n        - bearerAuthorization: []\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/ListKukumoExecution'\n        \"401\":\n          $ref: '#/components/responses/UnauthorizedError'\n\n    post:\n      summary: Send either a resource or a set of resources to be executed as a Kukumo test plan\n      description: |\n        Send resources to the server to be executed as a Kukumo test plan.\u003cbr/\u003e\n        This operation can work in three different ways:\u003cbr/\u003e\n        \u003cli\u003e\n          \u003cb\u003eSend a single resource in the request body as plain text\u003c/b\u003e\u003cbr/\u003e\n          For simple test plans formed by a single file. The parameter \u003ccode\u003eresourceType\u003c/code\u003e must be informed.\n        \u003c/li\u003e\n        \u003cli\u003e\n          \u003cb\u003eSend a set of resources in the request body as a JSON object\u003c/b\u003e\u003cbr/\u003e\n          For medium plans formed by a set of files, including a configuration file.\u003cbr/\u003e\n          The request body would be a JSON object where each property name is a file path and its value is \n          the file content, with the proper characters escaped.\n        \u003c/li\u003e\n        \u003cli\u003e\n          \u003cb\u003eSending a local directory and no body\u003c/b\u003e\u003cbr/\u003e\n          For medium-large plans that are stored in the same machine that the execution server. The parameter\n          \u003ccode\u003eworkspace\u003c/code\u003e must be informed.\u003cbr/\u003e\n          This should be the preferred method for large projects, due to the amount of net traffic required \n          otherwise.\n        \u003c/li\u003e\n      parameters:\n        - name: async\n          description: |\n            When true, the operation would return immediately and the test plan is executed as background process.\u003cbr/\u003e\n            When false, the operacion would wait until the test plan is executed, and return the test results.\n          in: query\n          schema:\n            type: boolean\n            default: false\n          required: false  \n        - name: resourceType\n          description: Only used when a single resource is sent as plain text. Set the Kukumo resource type for that content.\n          in: query\n          schema:\n            type: string\n          example: gherkin  \n        - name: workspace\n          description: The local path where the test resources are located. The request body must be empty.\n          in: query\n          schema:\n            type: string\n          example: /home/john/projects/my-project/test/resources  \n      requestBody:\n        content:\n          text/plain;charset=UTF-8:\n            schema:\n              type: string\n            example: |\n              # language: es\n              @implementation\n              Característica: Operaciones con usuarios\n              -------------------------------------------------\n\n              Antecedentes:\n                  Dada la URL de conexión a BBDD 'jdbc:h2:tcp://localhost:9092/~/test' usando el usuario 'sa' y la contraseña ''\n                  Y la URL base http://localhost:9191\n                  Y el servicio REST '/users'\n\n              # redefinition.stepMap: 2-1-2\n              @ID-1\n              Escenario: Se consulta un usuario existente\n\n                  Dado un usuario identificado por '3'\n                  Y que se ha insertado los siguientes datos en la tabla de BBDD USER:\n                  | ID | FIRST_NAME | LAST_NAME             |\n                  | 3  | Pepe       | Perez Marintez Pepito |\n                  Cuando se consulta el usuario\n                  Entonces el código de respuesta HTTP es 200\n\n                  Y la respuesta es parcialmente:\n                  \"\"\"\n                      RESPONSE\n                  \"\"\"\n          application/json;charset=UTF-8:\n            schema: \n              $ref: '#/components/schemas/dictionary'\n            example: |\n              {\n              \"kukumo.yaml\": \"kukumo:\\r\\n  resourceTypes:\\r\\n    - gherkin\",\n              \"example.feature\": \"# language: es\\r\\nCaracterística: Operaciones con usuarios\\r\\n-------------------------------------------------\\r\\n\\r\\n    Antecedentes:\\r\\n        Dada la URL de conexión a BBDD 'jdbc:h2:tcp:\\/\\/localhost:9092\\/~\\/test' usando el usuario 'sa' y la contraseña ''\\r\\n        Y la URL base http:\\/\\/localhost:9191\\r\\n        Y el servicio REST '\\/users'\\r\\n\\r\\n    # redefinition.stepMap: 2-1-2\\r\\n    @ID-1\\r\\n    Escenario: Se consulta un usuario muy bonito\\r\\n\\r\\n        Dado un usuario identificado por '3'\\r\\n        Y que se ha insertado los siguientes datos en la tabla de BBDD USER:\\r\\n        | ID | FIRST_NAME | LAST_NAME             |\\r\\n        | 3  | Pepe       | Perez Marintez Pepito |\\r\\n        Cuando se consulta el usuario\\r\\n        Entonces el código de respuesta HTTP es 200\\r\\n\\r\\n        Y la respuesta es parcialmente:\\r\\n        \\\"\\\"\\\"json\\r\\n            RESPONSE\\r\\n        \\\"\\\"\\\"\"\n              }\n\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/KukumoExecution'\n        \"401\":\n          $ref: '#/components/responses/UnauthorizedError'\n\n\n  /executions/{executionID}:\n    get:\n      parameters:\n        - name: executionID\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                $ref: '#/components/schemas/KukumoExecution'\n        \"401\":\n          $ref: '#/components/responses/UnauthorizedError'\n \n\n  /kukumo/configuration:\n    summary: Retrieve the default Kukumo configuration\n    description: |\n      Returns a dictionary (pairs of key-value) with all Kukumo configuration\n      properties that are applied by default to every execution,\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/dictionary'\n\n\n  /kukumo/contributors:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MapObjectObject'\n  /plans:\n    post:\n      description: |\n        Send resources to the server to be analyzed. It returns the test plan that would be executed but without executing it.\u003cbr/\u003e\n        This operation can work in three different ways:\u003cbr/\u003e\n        \u003cli\u003e\n          \u003cb\u003eSend a single resource in the request body as plain text\u003c/b\u003e\u003cbr/\u003e\n          For simple test plans formed by a single file. The parameter \u003ccode\u003eresourceType\u003c/code\u003e must be informed.\n        \u003c/li\u003e\n        \u003cli\u003e\n          \u003cb\u003eSend a set of resources in the request body as a JSON object\u003c/b\u003e\u003cbr/\u003e\n          For medium plans formed by a set of files, including a configuration file.\u003cbr/\u003e\n          The request body would be a JSON object where each property name is a file path and its value is \n          the file content, with the proper characters escaped.\n        \u003c/li\u003e\n        \u003cli\u003e\n          \u003cb\u003eSending a local directory and no body\u003c/b\u003e\u003cbr/\u003e\n          For medium-large plans that are stored in the same machine that the execution server. The parameter\n          \u003ccode\u003eworkspace\u003c/code\u003e must be informed.\u003cbr/\u003e\n          This should be the preferred method for large projects, due to the amount of net traffic required \n          otherwise.\n        \u003c/li\u003e\n      parameters:\n        - name: resourceType\n          description: Only used when a single resource is sent as plain text. Set the Kukumo resource type for that content (e.g. \u003ccode\u003egherkin\u003c/code\u003e).\n          in: query\n          schema:\n            type: string\n        - name: workspace\n          description: The local path where the test resources are located. The request body must be empty.\n          in: query\n          schema:\n            type: string\n\n      requestBody:\n        content:\n          text/plain;charset=UTF-8,*/*:\n            schema:\n              type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json;charset=UTF-8:\n              schema:\n                type: string\n  /tokens:\n    get:\n      responses:\n        \"200\":\n          description: OK\n          content:\n            text/plain:\n              schema:\n                type: string\n\n\n\ncomponents:\n\n\n  schemas:\n    ListKukumoExecution:\n      type: array\n      items:\n        $ref: '#/components/schemas/KukumoExecution'\n    KukumoExecution:\n      type: object\n      properties:\n        data:\n          $ref: '#/components/schemas/PlanNodeSnapshot'\n        executionID:\n          type: string\n        executionInstant:\n          type: string\n        owner:\n          type: string\n    PlanNodeSnapshot:\n      type: object\n      properties:\n        children:\n          $ref: '#/components/schemas/ListPlanNodeSnapshot'\n        childrenResults:\n          $ref: '#/components/schemas/counters'\n        dataTable:\n          type: array\n          items:\n            type: array\n            items:\n              type: string\n        description:\n          $ref: '#/components/schemas/ListString'\n        displayName:\n          type: string\n        document:\n          type: string\n        documentType:\n          type: string\n        duration:\n          format: int64\n          type: integer\n        errorMessage:\n          type: string\n        errorTrace:\n          type: string\n        executionID:\n          type: string\n        finishInstant:\n          type: string\n        id:\n          type: string\n        keyword:\n          type: string\n        language:\n          type: string\n        name:\n          type: string\n        nodeType:\n          $ref: '#/components/schemas/NodeType'\n        properties:\n          $ref: '#/components/schemas/dictionary'\n        result:\n          $ref: '#/components/schemas/Result'\n        snapshotInstant:\n          type: string\n        source:\n          type: string\n        startInstant:\n          type: string\n        tags:\n          $ref: '#/components/schemas/ListString'\n        testCaseResults:\n          $ref: '#/components/schemas/counters'\n    ListPlanNodeSnapshot:\n      type: array\n      items:\n        $ref: '#/components/schemas/PlanNodeSnapshot'\n    ListString:\n      type: array\n      items:\n        type: string\n    Result:\n      enum:\n        - ERROR\n        - FAILED\n        - PASSED\n        - SKIPPED\n        - UNDEFINED\n      type: string\n    NodeType:\n      enum:\n        - AGGREGATOR\n        - STEP\n        - STEP_AGGREGATOR\n        - TEST_CASE\n        - VIRTUAL_STEP\n      type: string\n    dictionary:\n      $ref: '#/components/schemas/dictionary'\n      description: A JSON object formed by pairs of key - text\n      example: |\n        {\n          \"generateOutputFile\": \"true\",\n          \"idTagPattern\": \"ID-(.*)\",\n          \"junit.treatStepsAsTests\": \"false\",\n          \"logs.showElapsedTime\": \"true\",\n          \"logs.showLogo\": \"true\",\n          \"logs.showStepSource\": \"false\",\n          \"outputFilePath\": \"kukumo.json\",\n          \"redefinition.definitionTag\": \"definition\",\n          \"redefinition.enabled\": \"true\",\n          \"redefinition.implementationTag\": \"implementation\",\n          \"report.generation\": \"true\",\n          \"resourcePath\": \".\"\n        }\n    counters:\n      $ref: '#/components/schemas/counters'\n      description: A JSON object formed by pairs of key - number\n      example: |\n        {\n          \"PASSED\": 13,\n          \"FAILED\": 2,\n          \"SKIPPED\": 3\n        }\n    MapObjectObject:\n      $ref: '#/components/schemas/MapObjectObject'\n\n\n  responses:\n    UnauthorizedError:\n      description: |\n        UNAUTHORIZED\u003cbr/\u003e\n        This HTTP error code is returned when attempting to execute the operation without a session token.\n\n\n\n  securitySchemes:\n    bearerAuthorization:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      tokenUrl: http://localhost:8080/tokens\n",
			"canonicalURL": "/github.com/iti-ict/wakamiti@8b7cb631bf3396b0c3311c3b4488ab002c800f9a/-/blob/kukumo-server-quarkus/src/main/resources/META-INF/openapi.yml",
			"externalURLs": [
				{
					"url": "https://github.com/iti-ict/wakamiti/blob/8b7cb631bf3396b0c3311c3b4488ab002c800f9a/kukumo-server-quarkus/src/main/resources/META-INF/openapi.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"ListPlanNodeSnapshot\": resolve \"#/components/schemas/ListPlanNodeSnapshot\": items: $ref: resolve \"#/components/schemas/PlanNodeSnapshot\": property \"childrenResults\": $ref: resolve \"#/components/schemas/counters\": at kukumo-server-quarkus/src/main/resources/META-INF/openapi.yml:337:13: $ref: resolve \"#/components/schemas/counters\": infinite recursion"
}