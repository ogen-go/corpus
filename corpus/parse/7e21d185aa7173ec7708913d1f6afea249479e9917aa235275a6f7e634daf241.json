{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/streamthoughts/kafka-connect-client"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "api/openapi.yaml",
			"byteSize": 16673,
			"content": "openapi: 3.0.1\ninfo:\n  title: Kafka Connect REST API\n  version: \"${project.version}\"\nservers:\n- url: /\npaths:\n  /:\n    get:\n      description: \"gets the version of the Connect worker that serves the REST request,\\\n        \\ the git commit ID of the source code, and the Kafka cluster ID that the\\\n        \\ worker is connected to.\"\n      operationId: getConnectVersion\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Version'\n          description: version of Kafka Connect\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connector-plugins:\n    get:\n      description: get the list of connector plugins installed in the Kafka Connect\n        cluster.\n      operationId: listConnectorPlugins\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                exampleSetFlag: false\n                items:\n                  $ref: '#/components/schemas/ConnectorPlugin'\n                type: array\n          description: OK\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors:\n    get:\n      description: gets the list of active connectors\n      operationId: listConnectors\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                default: []\n                exampleSetFlag: false\n                items:\n                  exampleSetFlag: false\n                  type: string\n                type: array\n          description: OK\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}:\n    delete:\n      description: \"deletes a connector, halting all tasks and deleting its configuration.\"\n      operationId: deleteConnector\n      parameters:\n      - description: The name of the connector to delete\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          content: {}\n          description: No Content\n        \"409\":\n          content: {}\n          description: (Conflict) a rebalance is in progress.\n      tags:\n      - connect\n      x-accepts: application/json\n    get:\n      description: gets information about the connector.\n      operationId: getConnectorInfo\n      parameters:\n      - description: The name of the created connector\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorInfo'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/restart:\n    post:\n      description: restarts the connector.\n      operationId: restartConnector\n      parameters:\n      - description: Name of the created connector\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content: {}\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"409\":\n          content: {}\n          description: (Conflict) a rebalance is in progress.\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/pause:\n    put:\n      description: \"pauses the connector and its tasks, which stops message processing\\\n        \\ until the connector is resumed. This call is asynchronous and the tasks\\\n        \\ will not transition to PAUSED state at the same time.\"\n      operationId: pauseConnector\n      parameters:\n      - description: The name of the connector to pause\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          content: {}\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"409\":\n          content: {}\n          description: (Conflict) a rebalance is in progress.\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/resume:\n    put:\n      description: resumes a paused connector or do nothing if the connector is not\n        paused. This call is asynchronous and the tasks will not transition to RUNNING\n        state at the same time.\n      operationId: resumeConnector\n      parameters:\n      - description: The name of the connector to resume\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          content: {}\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n        \"409\":\n          content: {}\n          description: (Conflict) a rebalance is in progress.\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/config:\n    get:\n      description: gets the configuration for the connector.\n      operationId: getConnectorConfig\n      parameters:\n      - description: The name of the connector\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  exampleSetFlag: false\n                  type: string\n                exampleSetFlag: false\n                type: object\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n    put:\n      description: \"creates a new connector using the given configuration, or updates\\\n        \\ the configuration for an existing connector.\"\n      operationId: updateOrCreateConnectorConfig\n      parameters:\n      - description: The name of the connector\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              additionalProperties:\n                exampleSetFlag: false\n                type: string\n              description: Configuration parameters for the connector. All values\n                should be strings.\n              exampleSetFlag: false\n              type: object\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorInfo'\n          description: OK\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/status:\n    get:\n      description: \"gets current status of the connector, including whether it is\\\n        \\ running, failed or paused, which worker it is assigned to, error information\\\n        \\ if it has failed, and the state of all its tasks.\"\n      operationId: getConnectorStateInfo\n      parameters:\n      - description: The name of the connector\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConnectorStateInfo'\n          description: OK\n        \"401\":\n          content: {}\n          description: Unauthorized\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/tasks:\n    get:\n      description: gets a taskâ€™s status.\n      operationId: getConnectorTaskInfos\n      parameters:\n      - description: The name of the connector.\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                exampleSetFlag: false\n                items:\n                  $ref: '#/components/schemas/TaskInfo'\n                type: array\n          description: OK\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/tasks/{taskId}/status:\n    get:\n      description: gets a task's status.\n      operationId: getConnectorTaskStatus\n      parameters:\n      - description: The name of the connector.\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      - description: The ID of the task to restart.\n        explode: false\n        in: path\n        name: taskId\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TaskState'\n          description: OK\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\n  /connectors/{name}/tasks/{taskId}/restart:\n    put:\n      description: restarts an individual task.\n      operationId: restartConnectorTask\n      parameters:\n      - description: The name of the connector?=.\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: string\n        style: simple\n      - description: The ID of the task to restart.\n        explode: false\n        in: path\n        name: taskId\n        required: true\n        schema:\n          exampleSetFlag: false\n          type: integer\n        style: simple\n      responses:\n        \"202\":\n          content: {}\n          description: Accepted\n        \"401\":\n          content: {}\n          description: Unauthorized\n      security:\n      - basicAuth: []\n      tags:\n      - connect\n      x-accepts: application/json\n      x-contentType: application/json\ncomponents:\n  schemas:\n    Version:\n      example:\n        kafka_cluster_id: kafka_cluster_id\n        commit: commit\n        version: version\n      exampleSetFlag: true\n      properties:\n        version:\n          description: Connect worker version\n          exampleSetFlag: false\n          type: string\n        commit:\n          description: Git commit ID\n          exampleSetFlag: false\n          type: string\n        kafka_cluster_id:\n          description: Kafka cluster ID\n          exampleSetFlag: false\n          type: string\n    ConnectorPlugin:\n      example:\n        type: type\n        class: class\n        version: version\n      exampleSetFlag: true\n      properties:\n        class:\n          description: The connector class name.\n          exampleSetFlag: false\n          type: string\n        version:\n          description: The connector version.\n          exampleSetFlag: false\n          type: string\n        type:\n          description: The connector type.\n          exampleSetFlag: false\n          type: string\n      required:\n      - class\n      - type\n      - version\n      type: object\n    ConnectorInfo:\n      example:\n        name: name\n        type: type\n        config:\n          key: config\n        tasks:\n        - task: 0\n          connector: connector\n        - task: 0\n          connector: connector\n      exampleSetFlag: true\n      properties:\n        name:\n          description: Name of the created connector\n          exampleSetFlag: false\n          type: string\n        config:\n          additionalProperties:\n            exampleSetFlag: false\n            type: string\n          description: Configuration parameters for the connector.\n          exampleSetFlag: false\n          type: object\n        tasks:\n          default: []\n          description: List of active tasks generated by the connector\n          exampleSetFlag: false\n          items:\n            $ref: '#/components/schemas/ConnectorTaskId'\n          type: array\n        type:\n          exampleSetFlag: false\n          type: string\n      required:\n      - config\n      - name\n      - tasks\n      - type\n      type: object\n    ConnectorTaskId:\n      example:\n        task: 0\n        connector: connector\n      exampleSetFlag: true\n      properties:\n        connector:\n          description: The name of the connector the task belongs to.\n          exampleSetFlag: false\n          type: string\n        task:\n          description: Task ID within the connector.\n          exampleSetFlag: false\n          type: integer\n      required:\n      - connector\n      - task\n      type: object\n    ConnectorStateInfo:\n      example:\n        connector:\n          msg: msg\n          worker_id: worker_id\n        name: name\n        type: type\n        tasks:\n        - msg: msg\n          id: 0\n          worker_id: worker_id\n        - msg: msg\n          id: 0\n          worker_id: worker_id\n      exampleSetFlag: true\n      properties:\n        name:\n          description: The name of the connector\n          exampleSetFlag: false\n          type: string\n        connector:\n          $ref: '#/components/schemas/ConnectorState'\n        tasks:\n          description: The states of tasks\n          exampleSetFlag: false\n          items:\n            $ref: '#/components/schemas/TaskState'\n          type: array\n        type:\n          exampleSetFlag: false\n          type: string\n      required:\n      - connector\n      - name\n      - tasks\n      - type\n      type: object\n    ConnectorState:\n      example:\n        msg: msg\n        worker_id: worker_id\n      exampleSetFlag: true\n      properties:\n        worker_id:\n          description: The Kafka Connect Worker ID\n          exampleSetFlag: false\n          type: string\n        state:\n          $ref: '#/components/schemas/State'\n        msg:\n          description: The error trace\n          exampleSetFlag: false\n          type: string\n      required:\n      - state\n      - worker_id\n      type: object\n    State:\n      description: State\n      enum:\n      - UNASSIGNED\n      - RUNNING\n      - PAUSE\n      - FAILED\n      - DESTROYED\n      exampleSetFlag: false\n      type: string\n    TaskState:\n      example:\n        msg: msg\n        id: 0\n        worker_id: worker_id\n      exampleSetFlag: true\n      properties:\n        id:\n          description: The identifier of the Task\n          exampleSetFlag: false\n          type: integer\n        state:\n          $ref: '#/components/schemas/State'\n        worker_id:\n          description: The Kafka Connect Worker ID\n          exampleSetFlag: false\n          type: string\n        msg:\n          description: The error trace\n          exampleSetFlag: false\n          type: string\n      required:\n      - id\n      - state\n      - worker_id\n      type: object\n    TaskInfo:\n      example:\n        id:\n          task: 0\n          connector: connector\n        config:\n          key: config\n      exampleSetFlag: true\n      properties:\n        id:\n          $ref: '#/components/schemas/ConnectorTaskId'\n        config:\n          additionalProperties:\n            exampleSetFlag: false\n            type: string\n          description: Configuration parameters for the task.\n          exampleSetFlag: false\n          type: object\n      required:\n      - config\n      - id\n      type: object\n\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /connectors/{name}/status: get: operation \"getConnectorStateInfo\": security: unknown security schema \"basicAuth\""
}