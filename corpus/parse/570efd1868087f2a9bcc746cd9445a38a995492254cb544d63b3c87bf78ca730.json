{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/Mermade/openapi3-examples"
		},
		"file": {
			"name": "openapi-ui.yaml",
			"size": 0,
			"path": "3.0/fail/openapi-ui/openapi-ui.yaml",
			"byteSize": 7833,
			"content": "openapi: 3.0.0\n\ninfo:\n  title: contentjet\n  version: 1.0.0\n  description: REST API for contentjet.io\n\nexternalDocs:\n  description: Hello world\n  url: http://example.com/\n\nservers:\n  - url: https://api.contentjet.io/v1\n\ntags:\n  - name: Project\n  - name: EntryType\n\npaths:\n\n  # Invite\n\n  /project/{projectUUID}/invite/:\n    get:\n      tags:\n        - Invite\n      description: ''\n      responses:\n        '200':\n          description: Returns a list of ProjectInvites.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/ProjectInvite'\n\n    post:\n      tags:\n        - Invite\n      description: ''\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                name:\n                  type: string\n                email:\n                  type: string\n      responses:\n        '201':\n          description: Returns a list of ProjectInvites.\n          schema:\n            $ref: '#/components/definitions/ProjectInvite'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  /project/{projectUUID}/invite/{inviteUUID}/:\n    get:\n      tags:\n        - Invite\n      description: ''\n      responses:\n        '200':\n          description: Returns a single ProjectInvite.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/ProjectInvite'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n      - name: inviteUUID\n        required: true\n        in: path\n        type: string\n\n  # Project\n\n  /project/:\n    get:\n      tags:\n        - Project\n      description: ''\n      responses:\n        '200':\n          description: Returns a list of Projects.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/Project'\n    post:\n      description: ''\n      responses:\n        '200':\n          description: Create Project.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/Project'\n\n  /project/{projectUUID}/:\n    get:\n      tags:\n        - Project\n      description: ''\n      responses:\n        '200':\n          description: Returns a single Project.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/Project'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  # EntryType\n\n  /project/{projectUUID}/entry-type/:\n    get:\n      tags:\n        - EntryType\n      description: ''\n      responses:\n        '200':\n          description: A list of EntryTypes.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/EntryType'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  /project/{projectUUID}/entry-type/{entryTypeUUID}/:\n    get:\n      tags:\n        - EntryType\n      description: ''\n      responses:\n        '200':\n          description: Returns a single EntryType.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/EntryType'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n      - name: entryTypeUUID\n        required: true\n        in: path\n        type: string\n\n  # EntryTag\n\n  /project/{projectUUID}/entry-tag/:\n    get:\n      tags:\n        - EntryTag\n      description: ''\n      responses:\n        '200':\n          description: A list of EntryTags.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/EntryTag'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  /project/{projectUUID}/entry-tag/{entryTypeUUID}/:\n    get:\n      tags:\n        - EntryTag\n      description: ''\n      responses:\n        '200':\n          description: Returns a single EntryTag.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/EntryType'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n      - name: entryTypeUUID\n        required: true\n        in: path\n        type: string\n\n  # Entry\n\n  /project/{projectUUID}/entry/:\n    get:\n      tags:\n        - Entry\n      description: ''\n      responses:\n        '200':\n          description: A list of Entries.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/Entry'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  /project/{projectUUID}/entry/{entryUUID}/:\n    get:\n      tags:\n        - Entry\n      description: ''\n      responses:\n        '200':\n          description: Returns a single Entry.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/Entry'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n      - name: entryUUID\n        required: true\n        in: path\n        type: string\n\n  # MediaAsset\n\n  /project/{projectUUID}/media/:\n    get:\n      tags:\n        - MediaAsset\n      description: ''\n      responses:\n        '200':\n          description: Returns a list of MediaAssets.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/MediaAsset'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  /project/{projectUUID}/media/{mediaUUID}/:\n    get:\n      tags:\n        - MediaAsset\n      description: ''\n      responses:\n        '200':\n          description: Returns a single MediaAsset.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/MediaAsset'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n      - name: mediaUUID\n        required: true\n        in: path\n        type: string\n\n  # MediaTag\n\n  /project/{projectUUID}/media-tag/:\n    get:\n      tags:\n        - MediaTag\n      description: ''\n      responses:\n        '200':\n          description: Returns a list of MediaTags.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/MediaTag'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n\n  /project/{projectUUID}/media-tag/{mediaTagUUID}/:\n    get:\n      tags:\n        - MediaTag\n      description: ''\n      responses:\n        '200':\n          description: Returns a single MediaAsset.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/definitions/MediaTag'\n    parameters:\n      - $ref: '#/components/parameters/projectUUID'\n      - name: mediaTagUUID\n        required: true\n        in: path\n        type: string\n\ncomponents:\n  definitions:\n\n    ProjectInvite:\n      type: object\n      properties:\n        uuid:\n          type: string\n        name:\n          type: string\n        email:\n          type: string\n\n    Project:\n      type: object\n      properties:\n        uuid:\n          type: string\n        name:\n          type: string\n\n    EntryType:\n      type: object\n      properties:\n        uuid:\n          type: string\n        name:\n          type: string\n\n    EntryTag:\n      type: object\n      properties:\n        name:\n          type: string\n\n    Entry:\n      type: object\n      properties:\n        uuid:\n          type: string\n        name:\n          type: string\n\n    MediaAsset:\n      type: object\n      properties:\n        uuid:\n          type: string\n        name:\n          type: string\n\n    MediaTag:\n      type: object\n      properties:\n        name:\n          type: string\n\n    User:\n      type: object\n      properties:\n        uuid:\n          type: string\n        name:\n          type: string\n        email:\n          type: string\n\n  parameters:\n\n    projectUUID:\n      name: projectUUID\n      required: true\n      in: path\n      type: string\n",
			"canonicalURL": "/github.com/Mermade/openapi3-examples@9c2997e1a25919a8182080cc43a4db06d2dc775d/-/blob/3.0/fail/openapi-ui/openapi-ui.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/Mermade/openapi3-examples/blob/9c2997e1a25919a8182080cc43a4db06d2dc775d/3.0/fail/openapi-ui/openapi-ui.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"projectUUID\": at 1:814: parameter MUST contain either a schema property, or a content property"
}