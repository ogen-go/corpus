{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/hwslabs/iam"
		},
		"file": {
			"name": "iam_openapi_spec.yml",
			"size": 0,
			"path": "iam_openapi_spec.yml",
			"byteSize": 85594,
			"content": "openapi: 3.0.1\ninfo:\n  title: Hypto IAM\n  version: 1.0.0\n  description: APIs for Hypto IAM Service.\n  contact:\n    email: engineering@hypto.in\n    name: Engineering\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n\nservers:\n  - url: https://{environment}.{region}.hypto.com/v1\n    variables:\n      environment:\n        default: sandbox-iam\n        enum:\n          - sandbox-iam\n          - iam\n      region:\n        default: us\n        enum:\n          - us\n          - eu\n          - apac\n\ntags:\n  - name: \"Organization Management\"\n    description: \"APIs for managing an Organization\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/OrganizationManagementApi.md\"\n  - name: \"User Management\"\n    description: \"APIs for managing users inside Organization\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserManagementApi.md\"\n  - name: \"Policy Management\"\n    description: \"APIs for managing policies\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/PolicyManagementApi.md\"\n  - name: \"User Policy Management\"\n    description: \"APIs for managing user policies\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserPolicyManagementApi.md\"\n  - name: \"User Credential Management\"\n    description: \"APIs for managing the credentials of user\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserCredentialManagementApi.md\"\n  - name: \"Resource Management\"\n    description: \"APIs for managing the resources inside an organization\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/ResourceManagementApi.md\"\n  - name: \"Resource Action Management\"\n    description: \"APIs for managing the actions for a resource inside an organization\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/ResourceActionManagementApi.md\"\n  - name: \"User Authorization\"\n    description: \"APIs used at runtime for validation\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/UserAuthorizationApi.md\"\n  - name: \"Key Management\"\n    description: \"APIs for fetching keys\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/KeyManagementApi.md\"\n  - name: \"User Sign-In\"\n    description: \"APIs used by the front-end for authentication\"\n    externalDocs:\n      description: \"docs\"\n      url: \"http://hypto.com/docs/iam/SignInApi\"\n  - name: \"User Verification\"\n    description: \"APIs for verifying emails\"\n    externalDocs:\n      description: \"docs\"\n      url: \"https://github.com/hwslabs/iam/blob/main/docs/api_reference/Apis/PasscodeManagement.md\"\n\npaths:\n  # organization\n  /organizations:\n    post:\n      tags:\n        - Organization Management\n      summary: Creates an organization.\n      description: Organization is the top level entity. All resources (like user, actions, policies) are created and managed under an organization. This is a privileged api and only internal applications has access to create an Organization.\n      operationId: createOrganization\n      requestBody:\n        $ref: '#/components/requestBodies/CreateOrganizationRequest'\n\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateOrganizationResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security:\n        - apiKeyAuth: [ hypto-internal-secret-key, passcode ]\n\n  /organizations/{organization_id}:\n    get:\n      tags:\n        - Organization Management\n      summary: Get an organization\n      description: Get an organization and the metadata for the given organization.\n      operationId: getOrganization\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganizationResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    patch:\n      tags:\n        - Organization Management\n      summary: Update an organization\n      description: Update an organization\n      operationId: updateOrganization\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateOrganizationRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/OrganizationResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    delete:\n      tags:\n        - Organization Management\n      summary: Delete an organization\n      description: Delete an organization. This is a privileged api and only internal application will have access to delete organization.\n      operationId: deleteOrganization\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security:\n        - apiKeyAuth: [ hypto-internal-secret-key ]\n\n  # user\n  /organizations/{organization_id}/users:\n    post:\n      tags:\n        - User Management\n      summary: Create a user\n      description: User is an entity which represent a person who is part of the organization or account. This user entity can be created either through user name, password or the user can be federated through an identity provider like Google, Facebook or any SAML 2.0, OIDC identity provider. This is a sign-up api to create a new user in an organization.\n      operationId: createUser\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/CreateUserRequest'\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateUserResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    get:\n      tags:\n        - User Management\n      summary: List users\n      description: List users associated with the organization. This is a pagniated api which returns the list of users with a next page token.\n      operationId: listUsers\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/page_size'\n      responses:\n        '201':\n          $ref: '#/components/responses/UserPaginatedResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/users/{user_name}:\n    get:\n      tags:\n        - User Management\n      summary: Gets a user entity associated with the organization\n      description: Get a User\n      operationId: getUser\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetUserResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    patch:\n      tags:\n        - User Management\n      summary: Update a User\n      description: Update a User\n      operationId: updateUser\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateUserRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateUserResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    delete:\n      tags:\n        - User Management\n      summary: Delete a User\n      description: Delete a User\n      operationId: deleteUser\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/users/{user_name}/change_password:\n    post:\n      tags:\n        - User Management\n      summary: Change password for a user\n      description: Change password for a user\n      operationId: changePassword\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/ChangeUserPasswordRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/users/resetPassword:\n    post:\n      tags:\n        - User Management\n      summary: Reset Password\n      description: Reset Password\n      operationId: resetPassword\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/ResetPasswordRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security:\n        - apiKeyAuth: [ passcode ]\n\n  /organizations/{organization_id}/users/{user_name}/policies:\n    get:\n      tags:\n        - User Policy Management\n      summary: List all policies associated with user\n      description: List all policies associated with user\n      operationId: getUserPolicies\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/page_size'\n        - $ref: '#/components/parameters/sort_order'\n      responses:\n        '200':\n          $ref: '#/components/responses/PolicyPaginatedResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n\n  /organizations/{organization_id}/users/{user_name}/attach_policies:\n    patch:\n      tags:\n        - User Policy Management\n      summary: Attach policies to user\n      description: Attach policies to user\n      operationId: attachPolicies\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/PolicyAssociationRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/users/{user_name}/detach_policies:\n    patch:\n      tags:\n        - User Policy Management\n      summary: Detach policies from user\n      description: Detach policies from user\n      operationId: detachPolicies\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/PolicyAssociationRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  # credential\n  /organizations/{organization_id}/users/{user_name}/credentials:\n    post:\n      tags:\n        - User Credential Management\n      summary: Create a new credential for a user\n      description: Create a new credential for a user. This API returns the credential's secret key, which will be available only in the response of this API.\n      operationId: createCredential\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/CreateCredentialRequest'\n\n      responses:\n        '201':\n          $ref: '#/components/responses/CreateCredentialResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n    get:\n      tags:\n        - User Credential Management\n      summary: List all credentials for a user\n      description: List all credentials for a user\n      operationId: listCredentials\n      parameters:\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/organization_id'\n      responses:\n        '201':\n          $ref: '#/components/responses/ListCredentialResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n\n  /organizations/{organization_id}/users/{user_name}/credentials/{credential_id}:\n    get:\n      tags:\n        - User Credential Management\n      summary: Gets credential for the user\n      description: Gets credential for the user, given the credential id\n      operationId: getCredential\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/credential_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/GetCredentialResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    patch:\n      tags:\n        - User Credential Management\n      summary: Update the status of credential\n      description: Update the status of credential to ACTIVE/INACTIVE. Credentials which are marked INACTIVE cannot be used to fetch short-term tokens.\n      operationId: updateCredential\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/credential_id'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateCredentialRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/UpdateCredentialResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    delete:\n      tags:\n        - User Credential Management\n      summary: Delete a credential\n      description: Delete a credential associated with the user\n      operationId: deleteCredential\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/user_name'\n        - $ref: '#/components/parameters/credential_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  # resource\n  /organizations/{organization_id}/resources:\n    post:\n      tags:\n        - Resource Management\n      summary: Create a resource name in an organization.\n      description: Creates a resource name. Access policies can be associated with the instances of these resources. ex - \\\"Wallet\\\" is a resource name in the organization org - \\\"Org#1\\\" and \\\"wallet#1\\\" is the instance of the resource \\\"Wallet\\\". Policies on which user to access the wallet#1 can be created by the user having privilege to access the resource.\n      operationId: createResource\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/CreateResourceRequest'\n      responses:\n        '201':\n          $ref: '#/components/responses/ResourceResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    get:\n      tags:\n        - Resource Management\n      summary: List Resources\n      description: List all the resource names in an organization.\n      operationId: listResources\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/page_size'\n        - $ref: '#/components/parameters/sort_order'\n      responses:\n        '201':\n          $ref: '#/components/responses/ResourcePaginatedResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/resources/{resource_name}:\n    get:\n      tags:\n        - Resource Management\n      summary: Get the resource details\n      description: Gets the resource details associated with the organization\n      operationId: getResource\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    patch:\n      tags:\n        - Resource Management\n      summary: Update a resource\n      description: Update resource name of the organization\n      operationId: updateResource\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateResourceRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ResourceResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    delete:\n      tags:\n        - Resource Management\n      summary: Delete a resource\n      description: Delete a resource\n      operationId: deleteResource\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  # action\n  /organizations/{organization_id}/resources/{resource_name}/actions:\n    post:\n      tags:\n        - Resource Action Management\n      summary: Create an action\n      description: Create an action\n      operationId: createAction\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n      requestBody:\n        $ref: '#/components/requestBodies/CreateActionRequest'\n\n      responses:\n        '201':\n          $ref: '#/components/responses/ActionResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    get:\n      tags:\n        - Resource Action Management\n      summary: List actions\n      description: List actions\n      operationId: listActions\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/page_size'\n        - $ref: '#/components/parameters/sort_order'\n      responses:\n        '200':\n          $ref: '#/components/responses/ActionPaginatedResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n\n  /organizations/{organization_id}/resources/{resource_name}/actions/{action_name}:\n    get:\n      tags:\n        - Resource Action Management\n      summary: Get an action\n      description: Get an action\n      operationId: getAction\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n        - $ref: '#/components/parameters/action_name'\n      responses:\n        '200':\n          $ref: '#/components/responses/ActionResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    patch:\n      tags:\n        - Resource Action Management\n      summary: Update an action\n      description: Update an action\n      operationId: updateAction\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n        - $ref: '#/components/parameters/action_name'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdateActionRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ActionResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    delete:\n      tags:\n        - Resource Action Management\n      summary: Delete an action\n      description: Delete an action\n      operationId: deleteAction\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/resource_name'\n        - $ref: '#/components/parameters/action_name'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  # policy\n  /organizations/{organization_id}/policies:\n    post:\n      tags:\n        - Policy Management\n      summary: Create a policy\n      description: Create a policy\n      operationId: createPolicy\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      requestBody:\n        $ref: '#/components/requestBodies/CreatePolicyRequest'\n\n      responses:\n        '201':\n          $ref: '#/components/responses/PolicyResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    get:\n      tags:\n        - Policy Management\n      summary: List policies\n      description: List policies\n      operationId: listPolicies\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/next_token'\n        - $ref: '#/components/parameters/page_size'\n        - $ref: '#/components/parameters/sort_order'\n      responses:\n        '201':\n          $ref: '#/components/responses/PolicyPaginatedResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/policies/{policy_name}:\n    get:\n      tags:\n        - Policy Management\n      summary: Get a policy\n      description: Get a policy\n      operationId: getPolicy\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/policy_name'\n      responses:\n        '200':\n          $ref: '#/components/responses/PolicyResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    patch:\n      tags:\n        - Policy Management\n      summary: Update a policy\n      description: Update a policy\n      operationId: updatePolicy\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/policy_name'\n      requestBody:\n        $ref: '#/components/requestBodies/UpdatePolicyRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/PolicyResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n    delete:\n      tags:\n        - Policy Management\n      summary: Delete a policy\n      description: Delete a policy\n      operationId: deletePolicy\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n        - $ref: '#/components/parameters/policy_name'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /organizations/{organization_id}/token:\n    post:\n      tags:\n        - User Authorization\n      summary: Generate a organization_id scoped token\n      description: Generate a token for the given user credential scoped by the provided organization_id\n      operationId: getTokenForOrg\n      parameters:\n        - $ref: '#/components/parameters/organization_id'\n      responses:\n        '200':\n          $ref: '#/components/responses/TokenResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security:\n        - basicAuth: [ ]\n        - bearerAuth: [ ]\n\n  /token:\n    post:\n      tags:\n        - User Authorization\n      summary: Generate a token\n      description: Generate a token for the given user credential (same as /organizations/{organization_id}/token at the moment. Might change in future)\n      operationId: getToken\n      responses:\n        '200':\n          $ref: '#/components/responses/TokenResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security:\n        - basicAuth: [ ]\n        - bearerAuth: [ ]\n\n  /validate:\n    post:\n      tags:\n        - User Authorization\n      summary: Validate an auth request\n      description: Validate if the caller has access to resource-action in the request\n      operationId: validate\n      requestBody:\n        $ref: '#/components/requestBodies/ValidationRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/ValidationResponse'\n        '401':\n          $ref: '#/components/responses/ErrorResponse'\n        '403':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n\n  /keys/{kid}:\n    get:\n      tags:\n        - Key Management\n      summary: Get keys\n      description: Get public/private keys from Key-id in der/pem format\n      operationId: getKey\n      parameters:\n        - $ref: '#/components/parameters/kid'\n        - $ref: '#/components/parameters/format'\n        - $ref: '#/components/parameters/type'\n      responses:\n        '200':\n          $ref: '#/components/responses/KeyResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security: [ ]\n\n  /verifyEmail:\n    post:\n      tags:\n        - User Verification\n      summary: Verify email\n      description: Verify email during account opening and resetting password\n      operationId: verifyEmail\n      requestBody:\n        $ref: '#/components/requestBodies/VerifyEmailRequest'\n      responses:\n        '200':\n          $ref: '#/components/responses/BaseSuccessResponse'\n        '400':\n          $ref: '#/components/responses/ErrorResponse'\n        '404':\n          $ref: '#/components/responses/ErrorResponse'\n        '429':\n          $ref: '#/components/responses/ErrorResponse'\n        default:\n          $ref: '#/components/responses/ErrorResponse'\n      security: [ ]\n\n\nsecurity:\n  - bearerAuth: [ ]\n\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: \"Bearer \u003ccredential\u003e\"\n    apiKeyAuth:\n      type: apiKey\n      in: header\n      name: X-API-Key\n    basicAuth:\n      type: http\n      scheme: basic\n\n  parameters:\n    user_name:\n      in: path\n      name: user_name\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 50\n            pattern: ^[A-Za-z0-9_]{3,50}$\n            example: Bob\n\n    resource_name:\n      in: path\n      name: resource_name\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 50\n            pattern: ^[A-Za-z0-9_]{3,50}$\n            example: invoice\n\n    action_name:\n      in: path\n      name: action_name\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 50\n            pattern: ^[A-Za-z0-9_]{3,50}$\n            example: view\n\n    policy_name:\n      in: path\n      name: policy_name\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 50\n            pattern: ^[A-Za-z0-9_]{3,50}$\n            example: policy_viewer\n\n    organization_id:\n      in: path\n      name: organization_id\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 10\n            pattern: ^[A-Z]{10}$\n            example: \"XlK5h64gND\"\n\n    credential_id:\n      in: path\n      name: credential_id\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 50\n            example: \"1f44ada7-7196-4f2d-8380-4c76f8bddec2\"\n\n    kid:\n      in: path\n      name: kid\n      required: true\n      content:\n        application/json:\n          schema:\n            type: string\n            maxLength: 50\n            example: \"1f44ada7-7196-4f2d-8380-4c76f8bddec2\"\n\n    format:\n      in: query\n      name: format\n      required: false\n      schema:\n        type: string\n        enum:\n          - der\n          - pem\n        default: pem\n        example: \"pem\"\n\n    type:\n      in: query\n      name: type\n      required: false\n      schema:\n        type: string\n        enum:\n          - public\n        default: public\n        example: \"public\"\n\n    next_token:\n      in: query\n      name: nextToken\n      required: false\n      schema:\n        type: string\n        example: \"eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==\"\n\n    page_size:\n      in: query\n      name: pageSize\n      required: false\n      schema:\n        type: string\n        example: \"10\"\n\n    sort_order:\n      in: query\n      name: sortOrder\n      required: false\n      schema:\n        type: string\n        enum:\n          - asc\n          - desc\n        example: \"asc\"\n\n  requestBodies:\n    CreateOrganizationRequest:\n      description: Payload to create organization\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateOrganizationRequest'\n          examples:\n            CreateOrganizationRequest:\n              $ref: '#/components/examples/CreateOrganizationRequest'\n\n    UpdateOrganizationRequest:\n      description: Payload to update organization\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateOrganizationRequest'\n          examples:\n            UpdateOrganizationRequest:\n              $ref: '#/components/examples/UpdateOrganizationRequest'\n\n    CreateUserRequest:\n      description: Payload to create user\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateUserRequest'\n          examples:\n            CreateUserRequest:\n              $ref: '#/components/examples/CreateUserRequest'\n\n\n    UpdateUserRequest:\n      description: Payload to update user\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateUserRequest'\n          examples:\n            UpdateUserRequest:\n              $ref: '#/components/examples/UpdateUserRequest'\n\n    ChangeUserPasswordRequest:\n      description: Payload to change user password\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ChangeUserPasswordRequest'\n          examples:\n            ChangeUserPasswordRequest:\n              $ref: '#/components/examples/ChangeUserPasswordRequest'\n\n    ResetPasswordRequest:\n      description: Payload to reset password\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResetPasswordRequest'\n          examples:\n            ResetPasswordRequest:\n              $ref: '#/components/examples/ResetPasswordRequest'\n\n    CreateCredentialRequest:\n      description: Payload to create credential\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateCredentialRequest'\n          examples:\n            CreateCredentialRequest:\n              $ref: '#/components/examples/CreateCredentialRequest'\n\n    UpdateCredentialRequest:\n      description: Payload to update credential\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateCredentialRequest'\n          examples:\n            UpdateCredentialRequest:\n              $ref: '#/components/examples/UpdateCredentialRequest'\n\n    CreateResourceRequest:\n      description: Payload to create resource\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateResourceRequest'\n          examples:\n            CreateResourceRequest:\n              $ref: '#/components/examples/CreateResourceRequest'\n\n    UpdateResourceRequest:\n      description: Payload to update resource\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateResourceRequest'\n          examples:\n            UpdateResourceRequest:\n              $ref: '#/components/examples/UpdateResourceRequest'\n\n    CreateActionRequest:\n      description: Payload to create action\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateActionRequest'\n          examples:\n            CreateActionRequest:\n              $ref: '#/components/examples/CreateActionRequest'\n\n    UpdateActionRequest:\n      description: Payload to update action\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdateActionRequest'\n          examples:\n            UpdateActionRequest:\n              $ref: '#/components/examples/UpdateActionRequest'\n\n    CreatePolicyRequest:\n      description: Payload to create policy\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreatePolicyRequest'\n          examples:\n            CreatePolicyRequest:\n              $ref: '#/components/examples/CreatePolicyRequest'\n\n    UpdatePolicyRequest:\n      description: Payload to update policy\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UpdatePolicyRequest'\n          examples:\n            UpdatePolicyRequest:\n              $ref: '#/components/examples/UpdatePolicyRequest'\n\n    PolicyAssociationRequest:\n      description: Payload to attach / detach a policy to a user / resource\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PolicyAssociationRequest'\n          examples:\n            PolicyAssociationRequest:\n              $ref: '#/components/examples/PolicyAssociationRequest'\n\n    ValidationRequest:\n      description: Payload to validate if a user has access to a resource-action\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ValidationRequest'\n          examples:\n            ValidationRequest:\n              $ref: '#/components/examples/ValidationRequest'\n\n    VerifyEmailRequest:\n      description: Payload to send verification link to email\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/VerifyEmailRequest'\n          examples:\n            VerifyEmailRequest:\n              $ref: '#/components/examples/VerifyEmailRequest'\n\n  responses:\n    BaseSuccessResponse:\n      description: OK\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/BaseSuccessResponse'\n\n    ErrorResponse:\n      description: Error response\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ErrorResponse'\n          examples:\n            ErrorResponse:\n              summary: Error message\n              value:\n                message: \"\u003cReason message\u003e\"\n\n    CreateOrganizationResponse:\n      description: Response for Create Organization request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CreateOrganizationResponse'\n          examples:\n            Organization:\n              $ref: '#/components/examples/CreateOrganizationResponse'\n\n    OrganizationResponse:\n      description: Response for Get and Update Organization requests\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Organization'\n          examples:\n            Organization:\n              $ref: '#/components/examples/Organization'\n\n    CreateUserResponse:\n      description: Response for CreateUserRequest\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n          examples:\n            User:\n              $ref: '#/components/examples/User'\n\n    UpdateUserResponse:\n      description: Response for UpdateUserRequest\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n          examples:\n            User:\n              $ref: '#/components/examples/User'\n\n    GetUserResponse:\n      description: Response for GetUserRequest\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/User'\n          examples:\n            User:\n              $ref: '#/components/examples/User'\n\n    CreateCredentialResponse:\n      description: Response for CreateCredentialRequest\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Credential'\n          examples:\n            Credential:\n              $ref: '#/components/examples/Credential'\n\n    GetCredentialResponse:\n      description: Response for GetCredentialRequest\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CredentialWithoutSecret'\n          examples:\n            CredentialWithoutSecret:\n              $ref: '#/components/examples/CredentialWithoutSecret'\n\n    ListCredentialResponse:\n      description: Response for list credential request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ListCredentialResponse'\n          examples:\n            ListCredentialResponse:\n              $ref: '#/components/examples/ListCredentialResponse'\n\n\n    UpdateCredentialResponse:\n      description: Response for UpdateCredentialRequest\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/CredentialWithoutSecret'\n          examples:\n            CredentialWithoutSecret:\n              $ref: '#/components/examples/CredentialWithoutSecret'\n\n    ResourceResponse:\n      description: Response for resource requests returning a resource entity\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Resource'\n          examples:\n            Resource:\n              $ref: '#/components/examples/Resource'\n\n    ActionResponse:\n      description: Response for action requests returning an action entity\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Action'\n          examples:\n            Action:\n              $ref: '#/components/examples/Action'\n\n    PolicyResponse:\n      description: Response for policy requests returning an policy entity\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Policy'\n          examples:\n            Policy:\n              $ref: '#/components/examples/Policy'\n\n    GetUserPoliciesResponse:\n      description: Response for list user policy API\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GetUserPoliciesResponse'\n          examples:\n            GetUserPoliciesResponse:\n              $ref: '#/components/examples/GetUserPoliciesResponse'\n\n    TokenResponse:\n      description: Response for generate token request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TokenResponse'\n          examples:\n            TokenResponse:\n              $ref: '#/components/examples/TokenResponse'\n        text/plain:\n          schema:\n            type: string\n          example: XlK5h64gNDBfMXAPKKGRmWjaxmXJJzDKIJNWqSWj\n\n    ValidationResponse:\n      description: Response for validation request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ValidationResponse'\n          examples:\n            ValidationResponse:\n              $ref: '#/components/examples/ValidationResponse'\n\n    UserPaginatedResponse:\n      description: Response for list users request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/UserPaginatedResponse'\n          examples:\n            UserPaginatedResponse:\n              $ref: '#/components/examples/UserPaginatedResponse'\n\n    PolicyPaginatedResponse:\n      description: Response for list policies request and list policies for user request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/PolicyPaginatedResponse'\n          examples:\n            PolicyPaginatedResponse:\n              $ref: '#/components/examples/PolicyPaginatedResponse'\n\n    ResourcePaginatedResponse:\n      description: Response for list resources request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ResourcePaginatedResponse'\n          examples:\n            ResourcePaginatedResponse:\n              $ref: '#/components/examples/ResourcePaginatedResponse'\n\n    ActionPaginatedResponse:\n      description: Response for list actions request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ActionPaginatedResponse'\n          examples:\n            ActionPaginatedResponse:\n              $ref: '#/components/examples/ActionPaginatedResponse'\n\n    KeyResponse:\n      description: Response for key request\n      headers:\n        X-Iam-User-Organization:\n          schema:\n            type: string\n          description: Organization Id of the authenticated user\n          example: XlK5h64gND\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/KeyResponse'\n          examples:\n            KeyResponse:\n              $ref: '#/components/examples/KeyResponse'\n\n  examples:\n    # Request examples\n    CreateOrganizationRequest:\n      summary: A sample CreateOrganizationRequest\n      value:\n        name: ACME Enterprise\n        description: Brief description about ACME\n        rootUser:\n          preferredUsername: username\n          name: Lorem Ipsum\n          passwordHash: \u003cpassword\u003e\n          email: root@example.com\n          phone: \"+1234567890\"\n          verified: true\n\n    UpdateOrganizationRequest:\n      summary: A sample UpdateOrganizationRequest\n      value:\n        name: ACME Enterprise\n        description: Updated Brief description about ACME\n        userConfiguration: null\n        # TODO: Fill userConfiguration\n\n    CreateUserRequest:\n      summary: A sample create user request\n      value:\n        name: Lorem Ipsum\n        passwordHash: nii2du35bdtuethntv3q7416\n        email: bob@acme.com\n        phone: \"+1234071628\"\n        status: enabled\n        verified: true\n\n    UpdateUserRequest:\n      summary: sample update user request\n      value:\n        name: Lorem Ipsum\n        email: bob@acme.com\n        phone: \"+1234071634\"\n        status: enabled\n        verified: true\n\n    ChangeUserPasswordRequest:\n      summary: sample change user password request\n      value:\n        oldPassword: Old@Password123\n        newPassword: New@Password123\n\n    ResetPasswordRequest:\n      summary: sample reset password request\n      value:\n        email: bob@acme.com\n        password: \u003cnew password\u003e\n\n    CreateCredentialRequest:\n      summary: sample create credential request\n      value:\n        validUntil: 2023-01-01T00:00:00\n    UpdateCredentialRequest:\n      summary: sample update credential request\n      value:\n        validUntil: 2023-01-03T00:00:00\n        status: active\n    CreateResourceRequest:\n      summary: sample create resource request\n      value:\n        name: invoice\n        description: customer invoice\n    UpdateResourceRequest:\n      summary: sample update resource request\n      value:\n        description: new descripation\n    CreateActionRequest:\n      summary: sample create action request\n      value:\n        name: view\n        description: View invoice action\n    UpdateActionRequest:\n      summary: update action request\n      value:\n        description: updated description\n    CreatePolicyRequest:\n      summary: sample create policy request\n      value:\n        name: policy_view_invoice\n        statements:\n          - resource: hrn:XlK5h64gND::invoice/1\n            action: hrn:XlK5h64gND::invoice$view\n            effect: deny\n          - resource: hrn:XlK5h64gND::invoice/*\n            action: hrn:XlK5h64gND::invoice$view\n            effect: allow\n\n    UpdatePolicyRequest:\n      summary: sample update policy request\n      value:\n        statements:\n          - resource: hrn:XlK5h64gND::invoice/1\n            action: hrn:XlK5h64gND::invoice$view\n            effect: deny\n          - resource: hrn:XlK5h64gND::invoice/*\n            action: hrn:XlK5h64gND::invoice$view\n            effect: allow\n    PolicyAssociationRequest:\n      summary: sample policy association request\n      value:\n        policies:\n          - hrn:XlK5h64gND::iam-policy/policy_view_invoice\n    ValidationRequest:\n      summary: sample validation request\n      value:\n        validations:\n          - resource: hrn:XlK5h64gND::invoice/1\n            action: hrn:XlK5h64gND::invoice$view\n          - resource: hrn:XlK5h64gND::invoice/2\n            action: hrn:XlK5h64gND::invoice$view\n\n    LoginRequest:\n      value:\n        # TODO: Verify if this should be name or email\n        username: Bob\n        salterPassword: wnr1782qbt52igbiuwbcgeuyiy==egryg123iuoh1109877t2i313489rge\n\n    VerifyEmailRequest:\n      value:\n        email: abcd@abcd.in\n        organizationId: XlK5h64gND\n        purpose: reset\n\n    # Response examples\n\n    CreateOrganizationResponse:\n      value:\n        organization:\n          id: XlK5h64gND\n          name: ACME Enterprise\n          description: Brief description about ACME\n          rootUser:\n            hrn: hrn:XlK5h64gND::iam-user/Bob\n            username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n            name: Lorem Ipsum\n            organizationId: XlK5h64gND\n            email: bob@acme.com\n            status: enabled\n            verified: true\n            phone: \"+1234071628\"\n            loginAccess: true\n            createdBy: ''\n          updatedAt: 2020-01-01T00:00:00.000Z\n          createdAt: 2020-01-01T00:00:00.000Z\n        rootUserToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\n\n    GetUserPoliciesResponse:\n      value:\n        policies:\n          - name: policy_viewer\n            organizationId: XlK5h64gND\n          - name: policy_editor\n            organizationId: XlK5h64gND\n\n    TokenResponse:\n      value:\n        token: XlK5h64gNDBfMXAPKKGRmWjaxmXJJzDKIJNWqSWj\n\n    ValidationResponse:\n      value:\n        results:\n          - resource: \"hrn:XlK5h64gND::invoice/1\"\n            action: \"hrn:XlK5h64gND::invoice$view\"\n            effect: \"allow\"\n          - resource: \"hrn:XlK5h64gND::invoice/2\"\n            action: \"hrn:XlK5h64gND::invoice$view\"\n            effect: \"deny\"\n\n    ListCredentialResponse:\n      value:\n        credentials:\n          - id: 1f44ada7-7196-4f2d-8380-4c76f8bddec2\n            validUntil: 2023-01-01T00:00:00\n            status: active\n            createdAt: 2020-01-01T00:00:00\n            updatedAt: 2020-01-01T00:00:00\n\n    UserPaginatedResponse:\n      value:\n        data:\n          - hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n            username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n            name: Lorem Ipsum\n            organizationId: XlK5h64gND\n            email: bob@acme.com\n            status: enabled\n            verified: true\n            phone: \"+1234071628\"\n            loginAccess: true\n            createdBy: hrn:Xghfdksd::iam-user/johnny314\n        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==\n        context:\n          pageSize: 10\n          sortOrder: asc\n\n    PolicyPaginatedResponse:\n      value:\n        data:\n          - name: policy_viewer\n            organizationId: XlK5h64gND\n            version: 1\n            statements:\n              - resource: hrn:XlK5h64gND::invoice/1\n                action: hrn:XlK5h64gND::invoice$view\n                effect: allow\n        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==\n        context:\n          pageSize: 10\n          sortOrder: asc\n\n    ResourcePaginatedResponse:\n      value:\n        data:\n          - name: invoice\n            organizationId: XlK5h64gND\n            hrn: hrn:XlK5h64gND::invoice\n            description: customer invoice\n        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==\n        context:\n          pageSize: 10\n          sortOrder: asc\n\n    ActionPaginatedResponse:\n      value:\n        data:\n          - organizationId: XlK5h64gND\n            resourceName: invoice\n            name: view\n            hrn: hrn:XlK5h64gND::invoice$view\n            description: View invoice action\n        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==\n        context:\n          pageSize: 10\n          sortOrder: asc\n\n    KeyResponse:\n      value:\n        kid: 1f44ada7-7196-4f2d-8380-4c76f8bddec2\n        status: SIGNING\n        format: der\n        key: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEKv36cup5G6xfHOtllBjsymgQ6CHQUxCRieycapq8UZL3oCpbatU7lg8Tv+eGAhFsF/JYoDWcHOhAHhMm8Ae+lA==\n\n    PaginationOptions:\n      value:\n        pageSize: 10\n        sortOrder: asc\n\n    # Entity examples\n    Organization:\n      summary: A sample Organization\n      value:\n        id: XlK5h64gND\n        name: ACME Enterprise\n        description: Brief description about ACME\n        rootUser:\n          hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n          username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n          name: Lorem Ipsum\n          organizationId: XlK5h64gND\n          email: bob@acme.com\n          status: enabled\n          verified: true\n          phone: \"+1234071628\"\n          loginAccess: true\n          createdBy: \"\"\n        rootUserHrn: \"hrn:XlK5h64gND::iam-user/root-user-name\"\n        createdAt: 2020-01-01T00:00:00.000Z\n        updatedAt: 2020-01-01T00:00:00.000Z\n\n    User:\n      summary: A sample user\n      value:\n        hrn: hrn:XlK5h64gND::iam-user/3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n        username: 3d9e0a90-38d5-49d8-b34d-fdbe2e6cf8f2\n        name: Lorem Ipsum\n        organizationId: XlK5h64gND\n        email: bob@acme.com\n        status: enabled\n        verified: true\n        phone: \"+1234071628\"\n        loginAccess: true\n        createdBy: hrn:Xghfdksd::iam-user/johnny314\n\n    UserConfiguration:\n      value:\n        passwordPolicy:\n        federatedIdentities:\n          - identityProviderName: Google\n            clientId: \u003cgoogle - clientId\u003e\n            clientSecret: \u003cgoogle - clientSecret\u003e\n            scopes:\n              - \u003cscope1\u003e\n              - \u003cscope2\u003e\n            attributeMap:\n              OIDCAttributeKey: \u003cvalue\u003e\n              IdentityProviderAttributeKey: \u003cvalue\u003e\n\n    FederatedIdentityProvider:\n      value:\n        identityProviderName: Google\n        clientId: \u003cgoogle - clientId\u003e\n        clientSecret: \u003cgoogle - clientSecret\u003e\n        scopes:\n          - \u003cscope1\u003e\n          - \u003cscope2\u003e\n        attributeMap:\n          OIDCAttributeKey: \u003cvalue\u003e\n          IdentityProviderAttributeKey: \u003cvalue\u003e\n\n    PasswordPolicyRules:\n      value:\n        lengthMinimum: 8\n        oneSpecialChar: true\n        oneNumeric: false\n        oneUppercase: true\n        oneLowercase: true\n\n    PasswordPolicyRegex:\n      value:\n        regexPattern: ^\\S{8,}$\n\n    Credential:\n      summary: A sample credential\n      value:\n        id: 1f44ada7-7196-4f2d-8380-4c76f8bddec2\n        validUntil: 2023-01-01T00:00:00\n        status: active\n        secret: Z2QGNPmgWUBfRXhCrAmArrrszMajaEbYgaQJMciL\n        createdAt: 2020-01-01T00:00:00\n        updatedAt: 2020-01-01T00:00:00\n\n    CredentialWithoutSecret:\n      summary: A sample credential without secret\n      value:\n        id: 1f44ada7-7196-4f2d-8380-4c76f8bddec2\n        validUntil: 2023-01-01T00:00:00\n        status: active\n        createdAt: 2020-01-01T00:00:00\n        updatedAt: 2020-01-01T00:00:00\n\n    Resource:\n      summary: A sample resource\n      value:\n        name: invoice\n        organizationId: XlK5h64gND\n        hrn: hrn:XlK5h64gND::invoice\n        description: customer invoice\n\n    Action:\n      summary: A sample action\n      value:\n        organizationId: XlK5h64gND\n        resourceName: invoice\n        name: view\n        hrn: hrn:XlK5h64gND::invoice$view\n        description: View invoice action\n\n    UserPolicy:\n      value:\n        name: policy_viewer\n        organizationId: XlK5h64gND\n\n    Policy:\n      summary: A sample policy\n      value:\n        name: policy_viewer\n        organizationId: XlK5h64gND\n        version: 1\n        statements:\n          - resource: hrn:XlK5h64gND::invoice/1\n            action: hrn:XlK5h64gND::invoice$view\n            effect: deny\n          - resource: hrn:XlK5h64gND::invoice/*\n            action: hrn:XlK5h64gND::invoice$view\n            effect: allow\n\n    PolicyStatement:\n      value:\n        - resource: hrn:XlK5h64gND::invoice/1\n          action: hrn:XlK5h64gND::invoice$view\n          effect: allow\n\n  schemas:\n    # Requests\n    CreateOrganizationRequest:\n      description: Payload to create organization\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - rootUser\n      properties:\n        name:\n          type: string\n          maxLength: 50\n          pattern: ^[_a-zA-Z0-9-\\s]{3,50}$\n        description:\n          type: string\n          maxLength: 500\n        rootUser:\n          $ref: '#/components/schemas/RootUser'\n\n    UpdateOrganizationRequest:\n      description: Payload to update organization\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          maxLength: 50\n          pattern: ^[_a-zA-Z0-9-\\s]{3,50}$\n        description:\n          type: string\n          maxLength: 500\n\n    RootUser:\n      type: object\n      description: Root user details for the organization\n      additionalProperties: false\n      required:\n        - username\n        - passwordHash\n        - email\n        - verified\n      properties:\n        preferredUsername:\n          type: string\n          maxLength: 50\n          pattern: ^[A-Za-z0-9]{3,50}$\n        name:\n          type: string\n          maxLength: 50\n        passwordHash:\n          type: string\n          maxLength: 100\n        email:\n          type: string\n          maxLength: 100\n          pattern: ^\\S+@\\S+\\.\\S+$\n        phone:\n          type: string\n          maxLength: 30\n        verified:\n          type: boolean\n\n\n    CreateUserRequest:\n      description: Payload to create ledger account\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - passwordHash\n        - email\n        - status\n      properties:\n        preferredUsername:\n          type: string\n          maxLength: 50\n          pattern: ^[A-Za-z0-9]{3,50}$\n        name:\n          type: string\n          maxLength: 50\n        passwordHash:\n          type: string\n          maxLength: 100\n        email:\n          type: string\n          maxLength: 100\n          pattern: ^\\S+@\\S+\\.\\S+$\n        phone:\n          type: string\n          maxLength: 30\n        status:\n          type: string\n          enum:\n            - enabled\n            - disabled\n        verified:\n          type: boolean\n\n    UpdateUserRequest:\n      description: Payload to create ledger account\n      type: object\n      additionalProperties: false\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          maxLength: 50\n        phone:\n          type: string\n          maxLength: 30\n        status:\n          type: string\n          enum:\n            - enabled\n            - disabled\n        verified:\n          type: boolean\n\n    ChangeUserPasswordRequest:\n      description: Payload to change user password\n      type: object\n      additionalProperties: false\n      required:\n        - oldPassword\n        - newPassword\n      properties:\n        oldPassword:\n          type: string\n          maxLength: 100\n        newPassword:\n          type: string\n          maxLength: 100\n\n    ResetPasswordRequest:\n      description: Payload to reset password\n      type: object\n      additionalProperties: false\n      required:\n        - email\n        - password\n      properties:\n        email:\n          type: string\n          maxLength: 50\n        password:\n          type: string\n          maxLength: 50\n\n    CreateCredentialRequest:\n      description: Payload to create credential\n      type: object\n      additionalProperties: false\n      properties:\n        validUntil: # Default: No validity\n          type: string\n          format: timestamp\n          maxLength: 20\n\n    UpdateCredentialRequest:\n      description: Payload to update credential\n      type: object\n      additionalProperties: false\n      properties:\n        validUntil: # No validity if null\n          type: string\n          format: timestamp\n          maxLength: 20\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n\n    CreateResourceRequest:\n      description: Payload to create resource\n      type: object\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        description:\n          type: string\n          maxLength: 500\n\n    UpdateResourceRequest:\n      description: Payload to update resource\n      type: object\n      additionalProperties: false\n      properties:\n        description:\n          type: string\n          maxLength: 500\n\n    CreateActionRequest:\n      description: Payload to create action\n      type: object\n      additionalProperties: false\n      required:\n        - name\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        description:\n          type: string\n          maxLength: 500\n    UpdateActionRequest:\n      description: Payload to update action\n      type: object\n      additionalProperties: false\n      required:\n        - description\n      properties:\n        description:\n          type: string\n          maxLength: 500\n\n    CreatePolicyRequest:\n      description: Payload to update action\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - statements\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        statements:\n          maxItems: 20\n          items:\n            $ref: '#/components/schemas/PolicyStatement'\n\n    UpdatePolicyRequest:\n      description: Payload to update action\n      type: object\n      additionalProperties: false\n      required:\n        - statements\n      properties:\n        statements:\n          maxItems: 20\n          items:\n            $ref: '#/components/schemas/PolicyStatement'\n\n    PolicyAssociationRequest:\n      description: Payload to attach / detach a policy to a user / resource\n      type: object\n      additionalProperties: false\n      required:\n        - policies\n      properties:\n        policies:\n          type: array\n          maxItems: 50\n          items:\n            type: string\n            maxLength: 50\n\n    ValidationRequest:\n      description: Payload to validate if a user has access to a resource-action\n      type: object\n      additionalProperties: false\n      required:\n        - validations\n      properties:\n        validations:\n          type: array\n          maxItems: 50\n          items:\n            $ref: \"#/components/schemas/ResourceAction\"\n\n    VerifyEmailRequest:\n      description: Payload to send verification link to email\n      type: object\n      additionalProperties: false\n      required:\n        - email\n        - purpose\n      properties:\n        email:\n          type: string\n        organizationId:\n          type: string\n        purpose:\n          type: string\n          enum:\n            - reset\n            - signup\n\n    # Responses:\n    BaseSuccessResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - success\n      properties:\n        success:\n          type: boolean\n          example: true\n\n    ErrorResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          description: error description\n          maxLength: 500\n\n    GetUserPoliciesResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - policies\n      properties:\n        policies:\n          type: array\n          maxItems: 50\n          items:\n            $ref: '#/components/schemas/UserPolicy'\n\n    TokenResponse:\n      type: object\n      required:\n        - token\n      properties:\n        token:\n          type: string\n\n    ValidationResponse:\n      description: Payload to validate if a user has access to a resource-action\n      type: object\n      additionalProperties: false\n      required:\n        - results\n      properties:\n        results:\n          type: array\n          maxItems: 50\n          items:\n            $ref: \"#/components/schemas/ResourceActionEffect\"\n\n    CreateOrganizationResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - organization\n        - rootUserToken\n      properties:\n        organization:\n          $ref: \"#/components/schemas/Organization\"\n        rootUserToken:\n          description: JWT token of the root user\n          type: string\n\n    ListCredentialResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - credentials\n      properties:\n        credentials:\n          type: array\n          maxItems: 50\n          items:\n            $ref: \"#/components/schemas/CredentialWithoutSecret\"\n\n    UserPaginatedResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/User'\n        nextToken:\n          type: string\n        context:\n          $ref: '#/components/schemas/PaginationOptions'\n\n    PolicyPaginatedResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Policy'\n        nextToken:\n          type: string\n        context:\n          $ref: '#/components/schemas/PaginationOptions'\n\n    ResourcePaginatedResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Resource'\n        nextToken:\n          type: string\n        context:\n          $ref: '#/components/schemas/PaginationOptions'\n\n    ActionPaginatedResponse:\n      type: object\n      additionalProperties: false\n      properties:\n        data:\n          type: array\n          items:\n            $ref: '#/components/schemas/Action'\n        nextToken:\n          type: string\n        context:\n          $ref: '#/components/schemas/PaginationOptions'\n\n    KeyResponse:\n      type: object\n      additionalProperties: false\n      required:\n        - kid\n        - status\n        - format\n        - key\n      properties:\n        kid:\n          type: string\n        status:\n          type: string\n          description: \"The status of the key. Valid values are SIGNING, VERIFYING and EXPIRED\"\n        format:\n          type: string\n          enum:\n            - der\n            - pem\n        key:\n          type: string\n\n    # Entities:\n    Organization:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - name\n        - rootUser\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: string\n          maxLength: 50\n        name:\n          type: string\n          maxLength: 50\n        description:\n          type: string\n          maxLength: 500\n        rootUser:\n          $ref: '#/components/schemas/User'\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n\n    User:\n      type: object\n      additionalProperties: false\n      required:\n        - hrn\n        - username\n        - name\n        - organizationId\n        - email\n        - status\n        - verified\n      properties:\n        hrn:\n          type: string\n        username:\n          type: string\n          maxLength: 50\n        preferredUsername:\n          type: string\n          maxLength: 50\n        name:\n          type: string\n          maxLength: 50\n        organizationId:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          maxLength: 50\n        status:\n          type: string\n          enum:\n            - enabled\n            - disabled\n        phone:\n          type: string\n          maxLength: 20\n        loginAccess:\n          type: boolean\n        createdBy:\n          type: string\n          maxLength: 50\n        verified:\n          type: boolean\n\n    Credential:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - status\n        - secret\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: string\n          maxLength: 50\n        validUntil:\n          type: string\n          format: timestamp\n          maxLength: 20\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n        secret:\n          type: string\n          maxLength: 50\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n\n    CredentialWithoutSecret:\n      type: object\n      additionalProperties: false\n      required:\n        - id\n        - status\n        - createdAt\n        - updatedAt\n      properties:\n        id:\n          type: string\n          maxLength: 50\n        validUntil:\n          type: string\n          format: timestamp\n          maxLength: 20\n        status:\n          type: string\n          enum:\n            - active\n            - inactive\n        createdAt:\n          type: string\n          format: date-time\n        updatedAt:\n          type: string\n          format: date-time\n\n    Resource:\n      type: object\n      additionalProperties: false\n      required:\n        - name\n        - organizationId\n        - hrn\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        organizationId:\n          type: string\n          maxLength: 50\n        hrn:\n          type: string\n        description:\n          type: string\n          maxLength: 500\n\n    Action:\n      type: object\n      additionalProperties: false\n      required:\n        - organizationId\n        - resourceName\n        - name\n        - hrn\n      properties:\n        organizationId:\n          type: string\n          maxLength: 50\n        resourceName:\n          type: string\n          maxLength: 50\n        name:\n          type: string\n          maxLength: 50\n        hrn:\n          type: string\n        description:\n          type: string\n          maxLength: 500\n\n    UserPolicy:\n      type: object\n      additionalProperties: false\n      required:\n        - organizationId\n        - name\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        organizationId:\n          type: string\n          maxLength: 50\n    Policy:\n      type: object\n      additionalProperties: false\n      required:\n        - organizationId\n        - hrn\n        - name\n        - version\n        - statements\n      properties:\n        name:\n          type: string\n          maxLength: 50\n        organizationId:\n          type: string\n          maxLength: 50\n        hrn:\n          type: string\n        version:\n          type: integer\n          maxLength: 5\n        statements:\n          type: array\n          maxItems: 20\n          items:\n            $ref: '#/components/schemas/PolicyStatement'\n\n    PolicyStatement:\n      type: object\n      additionalProperties: false\n      required:\n        - resource\n        - action\n        - effect\n      properties:\n        resource:\n          type: string\n          maxLength: 50\n        action:\n          type: string\n          maxLength: 50\n        effect:\n          type: string\n          enum:\n            - allow\n            - deny\n\n    # Others\n    ResourceAction:\n      type: object\n      required:\n        - resource\n        - action\n      properties:\n        resource:\n          type: string\n        action:\n          type: string\n\n    ResourceActionEffect:\n      type: object\n      required:\n        - resource\n        - action\n        - effect\n      properties:\n        resource:\n          type: string\n        action:\n          type: string\n        effect:\n          type: string\n          enum:\n            - allow\n            - deny\n\n    PaginationOptions:\n      type: object\n      additionalProperties: false\n      properties:\n        pageSize:\n          type: integer\n        sortOrder:\n          type: string\n          enum:\n            - asc\n            - desc\n\nexternalDocs:\n  description: Find out more about IAM\n  url: https://github.com/hwslabs/iam/\n",
			"canonicalURL": "/github.com/hwslabs/iam@2e6d909eafed19bd19207e61044e2b977ed83e74/-/blob/iam_openapi_spec.yml",
			"externalURLs": [
				{
					"url": "https://github.com/hwslabs/iam/blob/2e6d909eafed19bd19207e61044e2b977ed83e74/iam_openapi_spec.yml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse path items: path \"/organizations\": post: operation \"createOrganization\": security: at 1:38731: list of scopes MUST be empty for \"type\" \"apiKey\""
}