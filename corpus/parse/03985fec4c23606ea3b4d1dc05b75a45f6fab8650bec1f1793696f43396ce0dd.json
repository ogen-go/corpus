{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/dotwebstack/dotwebstack-framework"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": "example/example-openapi/src/main/resources/config/openapi.yaml",
			"byteSize": 17141,
			"content": "openapi: 3.0.2\n\ninfo:\n  title: Breweries\n  version: 3.0.0\n\npaths:\n  /noop:\n    get:\n      responses:\n        200:\n          description: OK\n          content:\n            application/text:\n              schema:\n                type: string\n                default: ok\n  /breweries:\n    get:\n      x-dws-query:\n        field: breweryCollection\n        paging:\n          pageSize: args.pageSize\n          page: args.page\n        filters:\n          name:\n            in: args.name\n          postalAddress:\n            city:\n              eq: args.city\n        sort: args.sort\n      parameters:\n        - name: status\n          in: query\n          required: false\n          schema:\n            type: string\n            x-dws-expr: active\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: [ 'history', 'beers','beers.class', 'beers.ingredients']\n        - name: name\n          in: query\n          explode: false\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: city\n          in: query\n          explode: false\n          required: false\n          schema:\n            type: string\n        #        - name: foundedAfter\n        #          in: query\n        #          required: false\n        #          schema:\n        #            type: string\n        #        - name: foundedBefore\n        #          in: query\n        #          required: false\n        #          schema:\n        #            type: string\n        - name: sort\n          in: query\n          required: false\n          schema:\n            type: string\n            enum: [ 'name', '-name']\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - name: pageSize\n          in: query\n          schema:\n            type: integer\n            enum:\n              - 2\n              - 10\n              - 20\n              - 50\n            default: 2\n\n      #        - name: withAddressSubject\n      #          in: query\n      #          schema:\n      #            type: string\n      #        - name: searchName\n      #          in: query\n      #          explode: false\n      #          required: false\n      #          schema:\n      #            type: array\n      #            items:\n      #              type: string\n      #        - name: searchPostalCode\n      #          in: query\n      #          schema:\n      #            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n            application/stream+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n          headers:\n            X-Pagination-Limit:\n              schema:\n                type: integer\n                x-dws-expr: args.pageSize\n            X-Pagination-Page:\n              schema:\n                type: integer\n                x-dws-expr: args.page\n  /breweriesInContext:\n    get:\n      x-dws-query:\n        field: breweryCollectionInContext\n        paging:\n          pageSize: args.pageSize\n          page: args.page\n        filters:\n          name:\n            in: args.name\n        context:\n          validOn: args.validOn\n          availableOn: args.availableOn\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: [ 'history', 'beers','beers.class', 'beers.ingredients']\n        - name: name\n          in: query\n          explode: false\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - name: pageSize\n          in: query\n          schema:\n            type: integer\n            default: 3\n        - name: validOn\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date\n            example: '2021-01-01'\n        - name: availableOn\n          in: query\n          required: false\n          schema:\n            type: string\n            format: date-time\n            example: '2021-01-01T12:00:00.000+01:00'\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n            application/stream+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n    post:\n      x-dws-query:\n        field: breweryCollection\n        filters:\n          geometry:\n            srid:\n              x-dws-expr: \"$header.'content-crs' == 'epsg:28992' ? 7415 : 7931\"\n            contains:\n              fromGeoJSON:\n                x-dws-expr: \"json:asString($body._geo.contains)!\"\n            intersects:\n              fromGeoJSON:\n                x-dws-expr: \"json:asString($body._geo.intersects)!\"\n            touches:\n              fromGeoJSON:\n                x-dws-expr: \"json:asString($body._geo.touches)!\"\n            within:\n              fromGeoJSON:\n                x-dws-expr: \"json:asString($body._geo.within)!\"\n      parameters:\n        - name: content-crs\n          in: header\n          schema:\n            default: 'epsg:4258'\n            enum:\n              - 'epsg:4258'\n              - 'epsg:28992'\n            type: string\n        - name: accept-crs\n          in: header\n          schema:\n            type: string\n      requestBody:\n        $ref: '#/components/requestBodies/GeoBody'\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n  /brewery/{identifier}:\n    get:\n      x-dws-query:\n        field: brewery\n        keys:\n          identifier: args.identifier\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: [ 'postalAddress', 'beers', 'beers.ingredients' ]\n        - name: identifier\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/Brewery'\n  /brewery_post:\n    post:\n      x-dws-query: brewery\n      parameters:\n        - name: expand\n          x-dws-type: expand\n          in: query\n          schema:\n            type: array\n            items:\n              type: string\n              enum: [ 'postalCode', 'beers', 'beers.ingredients' ]\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              required:\n                - identifier\n              properties:\n                identifier:\n                  type: string\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/Brewery'\n\n  /beers:\n    get:\n      x-dws-query:\n        field: beerCollection\n        paging:\n          pageSize: args.pageSize\n          page: args.page\n        filters:\n          name:\n            in: args.name\n      #          retired: args.retired\n      parameters:\n        - name: name\n          in: query\n          explode: false\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n        - name: retired\n          in: query\n          required: false\n          schema:\n            type: boolean\n        - name: page\n          in: query\n          required: false\n          schema:\n            type: integer\n            default: 1\n        - name: pageSize\n          in: query\n          schema:\n            type: integer\n            default: 2\n      responses:\n        200:\n          description: OK\n          content:\n            application/hal+json:\n              schema:\n                $ref: '#/components/schemas/BeerCollection'\n            application/stream+json:\n              schema:\n                $ref: '#/components/schemas/BreweryCollection'\n\ncomponents:\n  schemas:\n    BeerCollection:\n      type: object\n      x-dws-envelope: true\n      required:\n        - _embedded\n        - _links\n      properties:\n        _embedded:\n          x-dws-envelope: true\n          type: object\n          required:\n            - beers\n          properties:\n            beers:\n              type: array\n              items:\n                $ref: '#/components/schemas/Beer'\n        _links:\n          x-dws-envelope: true\n          type: object\n          required:\n            - self\n          properties:\n            self:\n              x-dws-envelope: true\n              type: object\n              required:\n                - href\n              properties:\n                href:\n                  type: string\n                  x-dws-expr: '`${env.dotwebstack.base_url}/beers`'\n            next:\n              type: object\n              x-dws-envelope: true\n              required:\n                - href\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  x-dws-expr: \"paging:next(data, args.pageSize, env.dotwebstack.base_url, args.requestPathAndQuery)\"\n            prev:\n              type: object\n              x-dws-envelope: true\n              required:\n                - href\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  x-dws-expr: \"paging:prev(env.dotwebstack.base_url, args.requestPathAndQuery)\"\n    Beer:\n      type: object\n      allOf:\n        - type: object\n          x-dws-include:\n            - soldPerYear\n          required:\n            - identifier\n          properties:\n            identifier:\n              type: string\n            abv:\n              type: number\n            describedBy:\n              type: object\n              x-dws-envelope: true\n              properties:\n                validStart:\n                  type: string\n                  format: date\n                validEnd:\n                  type: string\n                  format: date\n                  nullable: true\n\n        - $ref: '#/components/schemas/NamedItem'\n        - $ref: '#/components/schemas/ItemWithIngredients'\n    NamedItem:\n      type: object\n      required:\n        - name\n      properties:\n        name:\n          type: string\n    ItemWithIngredients:\n      type: object\n#      required:\n#        - ingredients\n      properties:\n        ingredients:\n          type: array\n          items:\n            $ref: '#/components/schemas/Ingredient'\n    BreweryCollection:\n      type: object\n      x-dws-envelope: true\n      required:\n        - _embedded\n        - _links\n      properties:\n        _embedded:\n          x-dws-envelope: true\n          type: object\n          required:\n            - breweries\n          properties:\n            breweries:\n              type: array\n              items:\n                $ref: '#/components/schemas/Brewery'\n        _links:\n          x-dws-envelope: true\n          type: object\n          required:\n            - self\n          properties:\n            self:\n              x-dws-envelope: true\n              type: object\n              required:\n                - href\n              properties:\n                href:\n                  type: string\n                  x-dws-expr: '`${env.dotwebstack.base_url}/breweries`'\n            next:\n              type: object\n              x-dws-envelope: true\n              required:\n                - href\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  x-dws-expr: \"paging:next(data, args.pageSize, env.dotwebstack.base_url, args.requestPathAndQuery)\"\n            prev:\n              type: object\n              x-dws-envelope: true\n              required:\n                - href\n              properties:\n                href:\n                  type: string\n                  format: uri\n                  x-dws-expr: \"paging:prev(env.dotwebstack.base_url, args.requestPathAndQuery)\"\n    Brewery:\n      type: object\n      x-dws-include:\n        - identifier\n      required:\n        - name\n        - visitAddress\n        - _links\n        - beers\n      #        - beers\n      properties:\n#        identifier:\n#          type: string\n        name:\n          type: string\n#        nameEnvelope:\n#          x-dws-envelope: true\n#          type: object\n#          properties:\n#            name:\n#              type: string\n        _links:\n          x-dws-envelope: true\n          type: object\n          properties:\n            self:\n              x-dws-envelope: true\n              type: object\n              properties:\n                href:\n                  type: string\n                  x-dws-expr: '`${env.dotwebstack.base_url}/brewery/${data.identifier}`'\n        geometry:\n          type: object\n        status:\n          type: string\n        postalAddress:\n          $ref: '#/components/schemas/Address'\n        visitAddress:\n          $ref: '#/components/schemas/Address'\n        history:\n          $ref: '#/components/schemas/History'\n        beers:\n          type: array\n          nullable: true\n          items:\n            $ref: '#/components/schemas/Beer'\n#        hasBeers:\n#          type: boolean\n#        _links:\n#          x-dws-envelope: true\n#          type: object\n#          required:\n#            - self\n#          properties:\n#            self:\n#              x-dws-envelope: true\n#              type: object\n#              required:\n#                - href\n#              properties:\n#                href:\n#                  x-dws-expr: '`${env.dotwebstack.base_url}/brewery/${fields.identifier}`'\n#                  type: string\n#                  format: uri\n    #        class:\n    #          type: string\n    #          x-dws-default: 'Brewery'\n    Ingredient:\n      type: object\n      required:\n        - name\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n    Address:\n      nullable: true\n      type: object\n      required:\n        - identifier\n        - street\n        - city\n      properties:\n        identifier:\n          type: string\n        street:\n          type: string\n        city:\n          type: string\n    History:\n      type: object\n      required:\n        - age\n        - history\n      properties:\n        age:\n          type: integer\n          format: int32\n        history:\n          type: string\n    GeoBody:\n      type: object\n      description: Geo body\n      properties:\n        _geo:\n          $ref: '#/components/schemas/Geo'\n    Geo:\n      type: object\n      description: Geo body content\n      oneOf:\n        - $ref: '#/components/schemas/Intersects'\n        - $ref: '#/components/schemas/Contains'\n        - $ref: '#/components/schemas/Touches'\n        - $ref: '#/components/schemas/Within'\n    Intersects:\n      type: object\n      description: \u003e-\n        'overlapt' en 'raakt' vallen hieronder\n      properties:\n        intersects:\n          $ref: '#/components/schemas/GeoJSONGeometry'\n    Contains:\n      type: object\n      description: Omsluit volledig\n      properties:\n        contains:\n          $ref: '#/components/schemas/GeoJSONGeometry'\n    Touches:\n      type: object\n      description: \u003e-\n        'raakt' valt hieronder\n      properties:\n        intersects:\n          $ref: '#/components/schemas/GeoJSONGeometry'\n    Within:\n      type: object\n      description: Valt volledig binnen\n      properties:\n        within:\n          $ref: '#/components/schemas/GeoJSONGeometry'\n    GeoJSONGeometry:\n      x-dws-type: geometry\n      title: GeoJSONGeometry\n      type: object\n      discriminator:\n        propertyName: type\n      oneOf:\n        - $ref: '#/components/schemas/Point'\n        - $ref: '#/components/schemas/MultiPoint'\n        - $ref: '#/components/schemas/LineString'\n        - $ref: '#/components/schemas/MultiLineString'\n        - $ref: '#/components/schemas/Polygon'\n        - $ref: '#/components/schemas/MultiPolygon'\n      example:\n        type: Polygon\n        coordinates:\n          - - - 5.955381012\n              - 52.179015422\n            - - 5.955381012\n              - 52.183396603\n            - - 5.96179731\n              - 52.183396603\n            - - 5.96179731\n              - 52.179015422\n            - - 5.955381012\n              - 52.179015422\n  requestBodies:\n    GeoBody:\n      x-dws-type: geometry\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/GeoBody'\n",
			"canonicalURL": "/github.com/dotwebstack/dotwebstack-framework@0b7b4ac64c4d3503ecda9aff44a79da47d1e2ba8/-/blob/example/example-openapi/src/main/resources/config/openapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/dotwebstack/dotwebstack-framework/blob/0b7b4ac64c4d3503ecda9aff44a79da47d1e2ba8/example/example-openapi/src/main/resources/config/openapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse components: schemas: \"GeoJSONGeometry\": parse schema: oneOf: [0]: parse schema: resolve \"#/components/schemas/Point\": find schema: resolve \"#/components/schemas/Point\": can't find value for \"components/schemas/Point\""
}