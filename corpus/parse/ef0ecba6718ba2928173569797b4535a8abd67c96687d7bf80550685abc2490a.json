{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/banzaicloud/pke"
		},
		"file": {
			"name": "openapi.yaml",
			"size": 0,
			"path": ".gen/pipeline/api/openapi.yaml",
			"byteSize": 835681,
			"content": "openapi: 3.0.0\ninfo:\n  contact:\n    email: info@banzaicloud.com\n  description: |\n    Pipeline is a feature rich application platform,\n    built for containers on top of Kubernetes to automate the DevOps experience,\n    continuous application development and the lifecycle of deployments.\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  title: Pipeline API\n  version: latest\nservers:\n- url: http://localhost:9090\ntags:\n- description: Clusters related functions\n  name: clusters\n- description: Deployment related functions for a cluster\n  name: deployments\n- description: Auth related functions\n  name: auth\n- description: Secrets related functions\n  name: secrets\n- description: Organizations related functions\n  name: organizations\n- description: Common API functions\n  name: common\n- description: Users related functions\n  name: users\n- description: Cloud config related functions\n  name: info\n- description: Storage related functions\n  name: storage\n- description: Horizontal Pod Autoscaling related functions\n  name: hpa\n- description: Google projects related operations\n  name: projects\n- description: ARK service related functions\n  name: ark\n- description: 'ARK: buckets related functions'\n  name: ark-buckets\n- description: 'ARK: backups related functions'\n  name: ark-backups\n- description: 'ARK: schedules related functions'\n  name: ark-schedules\n- description: 'ARK: restores related functions'\n  name: ark-restores\npaths:\n  /api/version:\n    get:\n      description: Return Pipeline build and deployment info\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VersionResponse'\n          description: Version info\n      tags:\n      - common\n  /api/v1/orgs/{orgId}/clusters:\n    get:\n      description: Listing all the K8S clusters from the cloud\n      operationId: ListClusters\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/GetClusterStatusResponse'\n                type: array\n          description: All cluster listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List clusters\n      tags:\n      - clusters\n    post:\n      description: Create a new K8S cluster in the cloud\n      operationId: CreateCluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            examples:\n              AKS:\n                value:\n                  name: azcluster-pipelineuser-123\n                  location: westeurope\n                  cloud: azure\n                  instanceType: Standard_D2_v2\n                  properties:\n                    aks:\n                      $ref: '#/components/schemas/CreateAKSProperties'\n              GKE:\n                value:\n                  name: gkecluster-pipelineuser-123\n                  location: us-central1-a\n                  cloud: google\n                  instanceType: n1-standard-1\n                  properties:\n                    gke:\n                      $ref: '#/components/schemas/CreateGKEProperties'\n            schema:\n              type: object\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateClusterResponse_202'\n          description: Cluster created successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create cluster\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}:\n    delete:\n      description: Deleting a K8S cluster\n      operationId: DeleteCluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Ignore errors during deletion\n        explode: true\n        in: query\n        name: force\n        required: false\n        schema:\n          default: false\n          type: boolean\n        style: form\n      responses:\n        \"202\":\n          description: Cluster delete in progress\n        \"204\":\n          description: Cluster deleted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete cluster\n      tags:\n      - clusters\n    get:\n      description: Getting cluster status\n      operationId: GetCluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetClusterStatusResponse'\n          description: Getting cluster succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get cluster status\n      tags:\n      - clusters\n    head:\n      description: Getting the K8S cluster status\n      operationId: GetClusterStatus\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Cluster exists\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get cluster status\n      tags:\n      - clusters\n    put:\n      description: Updating an existing K8S cluster\n      operationId: UpdateClusterDeprecated\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n        required: true\n      responses:\n        \"202\":\n          description: Cluster update accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update cluster\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/pods:\n    get:\n      description: Getting pod details\n      operationId: GetPodDetails\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PodDetailsResponse'\n          description: Getting cluster succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get pod details\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/posthooks:\n    put:\n      description: Run posthook functions\n      operationId: ClusterPostHooks\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReRunPostHook'\n        required: true\n      responses:\n        \"200\":\n          description: Posthooks started\n      security:\n      - bearerAuth: []\n      summary: Run posthook functions\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/config:\n    get:\n      description: Getting a K8S cluster config file\n      operationId: GetClusterConfig\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterConfig'\n          description: Getting config file succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get a cluster config\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/oidcconfig:\n    get:\n      description: Getting a K8S cluster config file with OIDC credentials\n      operationId: GetOIDCClusterConfig\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterConfig'\n          description: Getting config file succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get a cluster config with OIDC login\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/endpoints:\n    get:\n      description: List service public endpoints\n      operationId: ListClusterEndpoints\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Selected deployment release name\n        explode: true\n        in: query\n        name: releaseName\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListEndpointsResponse'\n          description: Endpoints listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List service public endpoints\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/nodes:\n    get:\n      description: List cluster nodes\n      operationId: ListNodes\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNodesResponse'\n          description: Nodes listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List cluster nodes\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/secrets:\n    get:\n      description: List secrets which belongs to cluster\n      operationId: ListClusterSecrets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Selected deployment release name\n        explode: true\n        in: query\n        name: releaseName\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SecretItem'\n                type: array\n          description: Secrets listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List secrets which belongs to cluster\n      tags:\n      - clusters\n    post:\n      description: Install secrets into cluster\n      operationId: InstallSecrets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstallSecretsRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/InstallSecretResponse'\n                type: array\n          description: Secrets are installed into cluster\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Install secrets into cluster\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/secrets/{secretName}:\n    patch:\n      description: Merge a particular secret with an existing one\n      operationId: MergeSecret\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret name as it will be seen in the cluster\n        explode: false\n        in: path\n        name: secretName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstallSecretRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallSecretResponse'\n          description: secret is installed into the cluster\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Merge a particular secret with an existing one with optional remapping\n      tags:\n      - clusters\n    post:\n      description: Install a particular secret into a cluster\n      operationId: InstallSecret\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret name as it will be seen in the cluster\n        explode: false\n        in: path\n        name: secretName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/InstallSecretRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/InstallSecretResponse'\n          description: secret is installed into the cluster\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Install a particular secret into a cluster with optional remapping\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/bootstrap:\n    get:\n      description: Get cluster bootstrap info\n      operationId: GetClusterBootstrap\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetClusterBootstrapResponse'\n          description: Getting bootstrap succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get cluster bootstrap info\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/scanlog:\n    get:\n      description: List scans\n      operationId: ListScans\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScanLogList'\n          description: Scan listing\n      security:\n      - bearerAuth: []\n      summary: List scans\n      tags:\n      - scanlog\n  /api/v1/orgs/{orgId}/clusters/{id}/scanlog/{releaseName}:\n    get:\n      description: List scans by release\n      operationId: ListScansByRelease\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: release name identification\n        explode: false\n        in: path\n        name: releaseName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScanLogList'\n          description: Scan listing\n      security:\n      - bearerAuth: []\n      summary: List scans by release\n      tags:\n      - scanlog\n  /api/v1/orgs/{orgId}/helm/repos:\n    get:\n      description: Listing Helm repositories in the cluster\n      operationId: HelmListRepos\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmReposListResponse'\n          description: Repositories listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List repositories\n      tags:\n      - helm\n    post:\n      description: Add new Helm repository\n      operationId: HelmReposAdd\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HelmReposAddRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmRepoListItem'\n          description: resource successfully added.\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Add Repo\n      tags:\n      - helm\n  /api/v1/orgs/{orgId}/helm/repos/{repoName}:\n    delete:\n      description: Delete  Helm repository\n      operationId: HelmReposDelete\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Helm repo name\n        explode: false\n        in: path\n        name: repoName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmReposDeleteResponse'\n          description: resource deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete Repo\n      tags:\n      - helm\n    put:\n      description: Modify Helm repository\n      operationId: HelmReposModify\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Helm repo name\n        explode: false\n        in: path\n        name: repoName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HelmReposModifyRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmReposUpdateResponse'\n          description: resource modified successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Modify Repo\n      tags:\n      - helm\n  /api/v1/orgs/{orgId}/helm/repos/{repoName}/update:\n    put:\n      description: Modify Helm repository\n      operationId: HelmReposUpdate\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Helm repo name\n        explode: false\n        in: path\n        name: repoName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmReposUpdateResponse'\n          description: resource modified successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update Repo\n      tags:\n      - helm\n  /api/v1/orgs/{orgId}/helm/charts:\n    get:\n      description: Get available Helm chart's list\n      operationId: HelmChartList\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Chart Name\n        explode: true\n        in: query\n        name: name\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Repo Name\n        explode: true\n        in: query\n        name: repo\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Chart version (latest)\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmChartsListResponse'\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Chart List\n      tags:\n      - helm\n  /api/v1/orgs/{orgId}/helm/chart/{repoName}/{chartName}:\n    get:\n      description: Get helm chart details\n      operationId: HelmChartDetails\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Chart repository name\n        explode: false\n        in: path\n        name: repoName\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Chart Name\n        explode: false\n        in: path\n        name: chartName\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Chart version\n        explode: true\n        in: query\n        name: version\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HelmChartDetailsResponse'\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Chart details\n      tags:\n      - helm\n  /api/v1/orgs/{orgId}/clusters/{id}/deployments:\n    get:\n      description: Listing Helm deployments\n      operationId: ListDeployments\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment tag to filter for\n        explode: true\n        in: query\n        name: tag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentsResponse'\n          description: Deployments listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List deployments\n      tags:\n      - deployments\n    head:\n      description: Checking if tiller ready to accept deployments\n      operationId: GetTillerStatus\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Tiller is available\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get tiller status\n      tags:\n      - deployments\n    post:\n      description: Creating a Helm deployment\n      operationId: CreateDeployment\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUpdateDeploymentRequest'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUpdateDeploymentResponse'\n          description: Deployment created successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create a Helm deployment\n      tags:\n      - deployments\n  /api/v1/orgs/{orgId}/clusters/{id}/whitelists:\n    get:\n      description: List Whitelisted deployments\n      operationId: ListWhitelists\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReleaseWhiteList'\n          description: List Whitelists\n      security:\n      - bearerAuth: []\n      summary: List Whitelisted deployments\n      tags:\n      - whitelist\n    post:\n      description: Create Whitelisted deployment\n      operationId: CreateWhitelists\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReleaseWhiteListItem'\n        required: true\n      responses:\n        \"200\":\n          description: Whitelist created\n      security:\n      - bearerAuth: []\n      summary: Create Whitelisted deployment\n      tags:\n      - whitelist\n  /api/v1/orgs/{orgId}/clusters/{id}/whitelists/{name}:\n    delete:\n      description: Delete Whitelisted deployment\n      operationId: DeleteWhitelist\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Selected whitelist identification\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: Whitelist deleted\n      security:\n      - bearerAuth: []\n      summary: Delete Whitelisted deployment\n      tags:\n      - whitelist\n  /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}:\n    delete:\n      description: Deleting a Helm deployment\n      operationId: DeleteDeployment\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteDeploymentResponse'\n          description: Deployment deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete deployment\n      tags:\n      - deployments\n    get:\n      description: Retrieves the details of a deployment\n      operationId: GetDeployment\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Deployment tag\n        explode: true\n        in: query\n        name: tag\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentResponse'\n          description: Deployment details\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get deployment details\n      tags:\n      - deployments\n    head:\n      description: Checking the status of a deployment through the Helm client API\n      operationId: HelmDeploymentStatus\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: Deployment status is OK\n        \"400\":\n          description: Error during checking deployment status\n        \"401\":\n          description: Unauthorized\n        \"404\":\n          description: Deployment not found\n      security:\n      - bearerAuth: []\n      summary: Check deployment status\n      tags:\n      - deployments\n    put:\n      description: Updating a Helm deployment\n      operationId: UpdateDeployment\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateUpdateDeploymentRequest'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateUpdateDeploymentResponse'\n          description: Deployment updated successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update deployment\n      tags:\n      - deployments\n  /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}/resources:\n    get:\n      description: Retrieves the K8s resources of a deployment\n      operationId: GetDeploymentResource\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: K8s resource type\n        explode: true\n        in: query\n        name: resourceTypes\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetDeploymentResourcesResponse'\n          description: Deployment resources\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get deployment K8s resources\n      tags:\n      - deployments\n  /api/v1/orgs/{orgId}/clusters/{id}/deployments/{name}/images:\n    get:\n      description: Retrieves the K8s images of a deployment\n      operationId: GetDeploymentImages\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentImageList'\n          description: Deployment images\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get deployment K8s images\n      tags:\n      - deployments\n  /api/v1/orgs/{orgId}/clusters/{id}/hpa:\n    delete:\n      description: Delete scaling info for a Helm deployment\n      operationId: DeleteDeploymentAutoscaling\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment or StatefulSet name\n        explode: true\n        in: query\n        name: scaleTarget\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"201\":\n          description: Deployment autoscaling updated successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete Deployment Scaling\n      tags:\n      - hpa\n    get:\n      description: Get scaling info for a Helm deployment\n      operationId: GetDeploymentAutoscaling\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Deployment or StatefulSet name\n        explode: true\n        in: query\n        name: scaleTarget\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeploymentScalingResponse'\n          description: Deployment autoscaling info\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get Deployment Scaling Info\n      tags:\n      - hpa\n    put:\n      description: Create / update scaling info for a Helm deployment\n      operationId: UpdateDeploymentAutoscaling\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeploymentScalingRequest'\n        required: true\n      responses:\n        \"201\":\n          description: Deployment autoscaling updated successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create / Update Deployment Scaling\n      tags:\n      - hpa\n  /api/v1/tokens:\n    get:\n      description: List all API tokens\n      operationId: ListTokens\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/TokenListResponseItem'\n                type: array\n          description: Tokens listed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List all API tokens\n      tags:\n      - auth\n    post:\n      description: Create token\n      operationId: CreateToken\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenCreateRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenCreateResponse'\n          description: Token created successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create token\n      tags:\n      - auth\n  /api/v1/tokens/{tokenId}:\n    delete:\n      description: Delete an API token\n      operationId: DeleteToken\n      parameters:\n      - description: Token identification\n        explode: false\n        in: path\n        name: tokenId\n        required: true\n        schema:\n          example: a4358708-c525-4c78-89c2-c1cbe0f3f76c\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Token deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete an API token\n      tags:\n      - auth\n  /api/v1/orgs/{orgId}/secrets:\n    get:\n      description: Listing secrets\n      operationId: GetSecrets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret's type to filter with\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - amazon\n          - azure\n          - google\n          - kubernetes\n          - generic\n          - tls\n          - ssh\n          type: string\n        style: form\n      - description: The selected tag to filter with\n        explode: true\n        in: query\n        name: tags\n        required: false\n        schema:\n          example:\n          - release:pipeline-monitoring\n          items:\n            type: string\n          type: array\n        style: form\n      - description: Marks if to present secret values or just the keys\n        explode: true\n        in: query\n        name: values\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/SecretItem'\n                type: array\n          description: Secrets listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List secrets\n      tags:\n      - secrets\n    post:\n      description: Adding secrets\n      operationId: AddSecrets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: validation is skipped or not\n        explode: true\n        in: query\n        name: validate\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSecretRequest'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSecretResponse'\n          description: Secret saved successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Add secrets\n      tags:\n      - secrets\n  /api/v1/secret-types:\n    get:\n      description: List secret types definitions\n      operationId: ListSecretTypes\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  $ref: '#/components/schemas/SecretTypeResponse'\n                example:\n                  tls:\n                    fields:\n                    - name: hosts\n                      required: true\n                    - name: validity\n                      required: false\n                type: object\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List secret types\n      tags:\n      - secrets\n  /api/v1/secret-types/{type}:\n    get:\n      description: Get a specific secret type and describe it's fields\n      operationId: GetSecretType\n      parameters:\n      - description: Secret type\n        explode: false\n        in: path\n        name: type\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretTypeResponse'\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get a specific secret type\n      tags:\n      - secrets\n  /api/v1/orgs/{orgId}/secrets/{secretId}:\n    delete:\n      description: Deleting secrets\n      operationId: DeleteSecrets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Secret deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete secrets\n      tags:\n      - secrets\n    get:\n      description: Get secret\n      operationId: GetSecret\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretItem'\n          description: Secret returned successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get secret\n      tags:\n      - secrets\n    put:\n      description: Update secrets\n      operationId: UpdateSecrets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: validation is skipped or not\n        explode: true\n        in: query\n        name: validate\n        required: false\n        schema:\n          type: boolean\n        style: form\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSecretRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSecretResponse'\n          description: Secret updated successfully\n        \"409\":\n          content:\n            application/json:\n              examples:\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret with this name already exists\n                    error: check-and-set parameter did not match the current version\n              schema:\n                $ref: '#/components/schemas/CommonError'\n          description: Conflict\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update secrets\n      tags:\n      - secrets\n  /api/v1/orgs/{orgId}/secrets/{secretId}/validate:\n    get:\n      description: Validate secret\n      operationId: ValidateSecret\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          description: Valid secret\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Validate secret\n      tags:\n      - secrets\n  /api/v1/orgs/{orgId}/secrets/{secretId}/tags:\n    get:\n      description: Get the tags of a secret\n      operationId: GetSecretTags\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretTags'\n          description: Secret tags returned successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get the tags of a secret\n      tags:\n      - secrets\n  /api/v1/orgs/{orgId}/secrets/{secretId}/tags/{tag}:\n    delete:\n      description: Delete a tag from a secret\n      operationId: DeleteSecretTag\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Tag\n        explode: false\n        in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: Secret tag deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete a tag from a secret\n      tags:\n      - secrets\n    put:\n      description: Add a tag to a secret\n      operationId: AddSecretTag\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: path\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Tag\n        explode: false\n        in: path\n        name: tag\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SecretTags'\n          description: Secret tags returned successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Add a tag to a secret\n      tags:\n      - secrets\n  /api/v1/orgs/{orgId}:\n    get:\n      description: Getting organization\n      operationId: GetOrg\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/OrganizationListItemResponse'\n          description: Organization getting successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get organization\n      tags:\n      - organizations\n  /api/v1/orgs:\n    get:\n      description: Listing organizations\n      operationId: ListOrgs\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/OrganizationListItemResponse'\n                type: array\n          description: Organizations listed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List organizations\n      tags:\n      - organizations\n    put:\n      operationId: SyncOrgs\n      responses:\n        \"200\":\n          description: Organizations synchronized successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Synchronize organizations\n      tags:\n      - organizations\n  /api:\n    get:\n      description: Listing Pipeline API endpoint\n      operationId: ListEndpoints\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                example:\n                - /api/v1/orgs\n                - /api/v1/orgs/:orgId\n                items:\n                  type: string\n                type: array\n          description: Endpoints listed\n      summary: List Pipeline API endpoints\n      tags:\n      - common\n  /api/v1/orgs/{orgId}/users:\n    get:\n      description: Listing users\n      operationId: ListUsers\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListUserResponse'\n          description: Users listed\n      security:\n      - bearerAuth: []\n      summary: List users\n      tags:\n      - users\n  /api/v1/orgs/{orgId}/users/{userId}:\n    get:\n      description: Getting user\n      operationId: GetUsers\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: User identification\n        explode: false\n        in: path\n        name: userId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Getting user succeeded\n      security:\n      - bearerAuth: []\n      summary: Get user\n      tags:\n      - users\n  /api/v1/me:\n    get:\n      description: Get current user\n      operationId: GetCurrentUser\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: Getting current user succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get current user\n      tags:\n      - users\n  /api/v1/capabilities:\n    get:\n      description: Retrieve Pipeline capabilities\n      operationId: ListCapabilities\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                additionalProperties:\n                  type: object\n                example:\n                  features:\n                    monitoring:\n                      enabled: true\n                    securityScan:\n                      enabled: true\n                      managed: true\n                    vault:\n                      enabled: true\n                      managed: false\n                type: object\n          description: capabilities successfully returned\n      summary: Lists configured Pipeline capabilities\n      tags:\n      - pipeline\n  /api/v1/orgs/{orgId}/azure/resourcegroups:\n    get:\n      description: Get all resource groups\n      operationId: GetResourceGroups\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identifier\n        explode: false\n        in: header\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                example:\n                - resourceGroup1\n                - resourceGroup2\n                items:\n                  type: string\n                type: array\n          description: Azure resource groups listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get all resource groups\n      tags:\n      - info\n    post:\n      description: Create resource groups\n      operationId: CreateResourceGroup\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateResourceGroup'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ResourceGroupCreated'\n          description: Azure resource group created\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create resource groups\n      tags:\n      - info\n  /api/v1/orgs/{orgId}/buckets:\n    get:\n      description: List object store buckets accessible by the credentials referenced\n        by the given secret. If no credentials provided all managed buckets are returned\n        for all cloud types.\n      operationId: ListObjectStoreBuckets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification. If not provided only the managed buckets\n          (those created via pipeline) are listed\n        explode: false\n        in: header\n        name: secretId\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider - mandatory if secretId header\n          is provided\n        explode: true\n        in: query\n        name: cloudType\n        required: false\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          type: string\n        style: form\n      - description: Signals whether the secret name is to be returned\n        explode: true\n        in: query\n        name: include\n        required: false\n        schema:\n          enum:\n          - secret\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListStorageBucketsResponse'\n          description: Storage buckets listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List object storage buckets\n      tags:\n      - storage\n    post:\n      description: Creates a new object store bucket on the Cloud provider referenced\n        by the given secret. The credentials for creating the bucket is taken from\n        the provided secret.\n      operationId: CreateObjectStoreBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateObjectStoreBucketRequest'\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateObjectStoreBucketResponse'\n          description: Storage bucket creation request accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Creates a new object store bucket with the given params\n      tags:\n      - storage\n  /api/v1/orgs/{orgId}/buckets/{name}:\n    delete:\n      description: Deletes the object store bucket identified by the given name. The\n        credentials for deleting the bucket is taken from the provided secret.\n      operationId: DeleteObjectStoreBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Bucket identification\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: header\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider\n        explode: true\n        in: query\n        name: cloudType\n        required: true\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          - oracle\n          - alibaba\n          type: string\n        style: form\n      - description: Is the operation forced\n        explode: true\n        in: query\n        name: force\n        required: false\n        schema:\n          type: boolean\n        style: form\n      - description: Azure resource group the storage account that holds the bucket\n          (storage container) to be deleted\n        explode: true\n        in: query\n        name: resourceGroup\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Azure storage account to delete the bucket (storage container)\n          from\n        explode: true\n        in: query\n        name: storageAccount\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The region to delete the bucket from. Required on Amazon, Oracle\n          and Alibaba cloud providers.\n        explode: true\n        in: query\n        name: location\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          description: Storage bucket deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Deletes the object store bucket with the given name\n      tags:\n      - storage\n    get:\n      description: Retrieves the details of the object store bucket given its name\n      operationId: GetBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Bucket identification\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: header\n        name: secretId\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification by name\n        explode: false\n        in: header\n        name: secretName\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider\n        explode: true\n        in: query\n        name: cloudType\n        required: true\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          - oracle\n          - alibaba\n          type: string\n        style: form\n      - description: Azure resource group to lookup the bucket(storage container)\n          under. Required only on Azure cloud provider.\n        explode: true\n        in: query\n        name: resourceGroup\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Azure storage account to lookup the bucket(storage container)\n          under. Required only on Azure cloud provider.\n        explode: true\n        in: query\n        name: storageAccount\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The region to lookup the bucket under. Required on Amazon, Oracle\n          and Alibaba cloud providers.\n        explode: true\n        in: query\n        name: location\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BucketInfo'\n          description: Object store bucket details\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get object store bucket details\n      tags:\n      - storage\n    head:\n      description: Retrieves the status of the object store bucket given its name\n      operationId: GetObjectStoreBucketStatus\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Bucket identification\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: header\n        name: secretId\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification by name\n        explode: false\n        in: header\n        name: secretName\n        required: false\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider\n        explode: true\n        in: query\n        name: cloudType\n        required: true\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          - oracle\n          - alibaba\n          type: string\n        style: form\n      - description: Azure resource group to lookup the bucket(storage container)\n          under. Required only on Azure cloud provider.\n        explode: true\n        in: query\n        name: resourceGroup\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Azure storage account to lookup the bucket(storage container)\n          under. Required only on Azure cloud provider.\n        explode: true\n        in: query\n        name: storageAccount\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The region to lookup the bucket under. Required on Amazon, Oracle\n          and Alibaba cloud providers.\n        explode: true\n        in: query\n        name: location\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          description: Object store buckets exists\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get object store bucket status\n      tags:\n      - storage\n  /api/v1/orgs/{orgId}/networks:\n    get:\n      description: List VPC networks accessible by the organization.\n      operationId: ListVPCNetworks\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: header\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider\n        explode: true\n        in: query\n        name: cloudType\n        required: true\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          - oracle\n          - alibaba\n          type: string\n        style: form\n      - description: Identifies the region of the VPC network (required when cloudType\n          != azure)\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identifies the resource group of the Azure virtual network (required\n          when cloudType == azure)\n        explode: true\n        in: query\n        name: resourceGroup\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListVPCNetworksResponse'\n          description: List of VPC networks\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List VPC networks\n      tags:\n      - network\n  /api/v1/orgs/{orgId}/networks/{networkId}/subnets:\n    get:\n      description: List subnetworks of the given VPC network\n      operationId: ListVPCSubnets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: VPC network identification\n        explode: false\n        in: path\n        name: networkId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: header\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider\n        explode: true\n        in: query\n        name: cloudType\n        required: true\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          - oracle\n          - alibaba\n          type: string\n        style: form\n      - description: Identifies the region of the VPC network (required when cloudType\n          != azure)\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identifies the resource group of the Azure virtual network (required\n          when cloudType == azure)\n        explode: true\n        in: query\n        name: resourceGroup\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListVPCSubnetsResponse'\n          description: List of VPC network subnets\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List VPC subnetworks\n      tags:\n      - network\n  /api/v1/orgs/{orgId}/networks/{networkId}/routeTables:\n    get:\n      description: List route tables of the given VPC network\n      operationId: ListRouteTables\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: VPC network identification\n        explode: false\n        in: path\n        name: networkId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Secret identification\n        explode: false\n        in: header\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Identifies the cloud provider\n        explode: true\n        in: query\n        name: cloudType\n        required: true\n        schema:\n          enum:\n          - amazon\n          - google\n          - azure\n          - oracle\n          - alibaba\n          type: string\n        style: form\n      - description: Identifies the region of the VPC network (required when cloudType\n          != azure)\n        explode: true\n        in: query\n        name: region\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: Identifies the resource group of the Azure virtual network (required\n          when cloudType == azure)\n        explode: true\n        in: query\n        name: resourceGroup\n        required: false\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRouteTablesResponse'\n          description: List of VPC network route tables\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List VPC route tables\n      tags:\n      - network\n  /api/v1/orgs/{orgId}/clusters/{id}/images:\n    get:\n      description: List Images used in cluster\n      operationId: ListImages\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ClusterImageList'\n          description: List Images\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List Images used in cluster\n      tags:\n      - images\n  /api/v1/orgs/{orgId}/clusters/{id}/images/{imageDigest}/deployments:\n    get:\n      description: List Deployments by Image\n      operationId: ListDeploymentsByImage\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Image digest\n        explode: false\n        in: path\n        name: imageDigest\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListDeploymentsResponse'\n          description: List Images\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List Deployments by Image\n      tags:\n      - images\n  /api/v1/orgs/{orgId}/clusters/{id}/pke/leader:\n    delete:\n      operationId: DeleteLeaderElection\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Leader deletion successful\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete cluster leader\n      tags:\n      - clusters\n    get:\n      operationId: GetLeaderElection\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetLeaderElectionResponse'\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Query cluster leader\n      tags:\n      - clusters\n    post:\n      operationId: PostLeaderElection\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostLeaderElectionRequest'\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostLeaderElectionResponse'\n          description: Application successful\n        \"409\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostLeaderElectionResponse'\n          description: Leader already elected\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Apply as new cluster leader\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/pke/ready:\n    get:\n      operationId: GetReadyPKENode\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PKEClusterReadinessResponse'\n          description: Readiness information\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Query reported node readiness information\n      tags:\n      - clusters\n    post:\n      operationId: PostReadyPKENode\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostReadyPKENodeRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                example: {}\n                type: object\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Report to Pipeline that a new node is ready (to be called by PKE installer)\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/pke/status:\n    post:\n      operationId: ReportPKENodeStatus\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ReportPKENodeStatusRequest'\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ReportPKENodeStatusResponse'\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Report to Pipeline the progress of the bootstrapping of a new node\n        (to be called by PKE installer)\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/pke/commands:\n    get:\n      description: Get the commands to use for bootstrapping nodes of a PKE cluster\n        in each nodepool\n      operationId: GetPKECommands\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetPKECommandsResponse'\n          description: Map of nodepool names to commands to use\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List bootstrap commands for namespaces\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/namespaces:\n    get:\n      description: Lists namespaces for a cluster\n      operationId: ListNamespaces\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/NamespaceListResponse'\n          description: Namespaces listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Lists namespaces for a cluster\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/namespaces/{namespace}:\n    delete:\n      description: Delete namespace from a cluster\n      operationId: DeleteNamespace\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Kubernetes namespace\n        explode: false\n        in: path\n        name: namespace\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          description: Namespace deletion started\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete namespace from a cluster\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/cloud/google/projects:\n    get:\n      description: Retrieves projects visible by the user represented by the secretId\n        header from the google cloud\n      operationId: ListProjects\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Secret identification.\n        explode: true\n        in: query\n        name: secretId\n        required: true\n        schema:\n          type: string\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GoogleProjects'\n          description: List of projects visible for the user\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Retrieves projects visible for the user identified by the secret id\n      tags:\n      - google\n  /api/v1/orgs/{orgId}/clusters/{id}/backupservice/enable:\n    post:\n      description: Enable ARK service\n      operationId: EnableARK\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EnableARKRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EnableARKResponse'\n          description: ARK service deployed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Enable ARK service\n      tags:\n      - ark\n  /api/v1/orgs/{orgId}/clusters/{id}/backupservice/disable:\n    post:\n      description: Disable ARK service\n      operationId: DisableARK\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DisableARKResponse'\n          description: ARK service removed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Disable ARK service\n      tags:\n      - ark\n  /api/v1/orgs/{orgId}/clusters/{id}/backupservice/status:\n    get:\n      description: Check ARK service status\n      operationId: CheckARKStatusGET\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/BackupServiceStatusResponse'\n          description: ARK service running\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Check ARK service status\n      tags:\n      - ark\n    head:\n      description: Check ARK service status\n      operationId: CheckARKStatus\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: ARK service running\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Check ARK service status\n      tags:\n      - ark\n  /api/v1/orgs/{orgId}/backupbuckets:\n    get:\n      description: List backup buckets\n      operationId: ListBackupBuckets\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupBucketsResponse'\n          description: All buckets listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List backup buckets\n      tags:\n      - ark-buckets\n    post:\n      description: Create backup bucket\n      operationId: CreateBackupBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBackupBucketRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackupBucketResponse'\n          description: Backup bucket added successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create backup bucket\n      tags:\n      - ark-buckets\n  /api/v1/orgs/{orgId}/backupbuckets/{bucketId}:\n    delete:\n      description: Delete backup bucket by ID\n      operationId: DeleteBackupBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the bucket\n        explode: false\n        in: path\n        name: bucketId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackupBucketResponse'\n          description: Deleting backup succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete backup bucket by ID\n      tags:\n      - ark-buckets\n    get:\n      description: Get backup bucket by ID\n      operationId: GetBackupBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the bucket\n        explode: false\n        in: path\n        name: bucketId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupBucketResponse'\n          description: Getting backup succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get backup bucket by ID\n      tags:\n      - ark-buckets\n  /api/v1/orgs/{orgId}/backupbuckets/sync:\n    put:\n      description: Sync backup buckets\n      operationId: SyncBackupBucket\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Backup buckets synced successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Sync backup buckets\n      tags:\n      - ark-buckets\n  /api/v1/orgs/{orgId}/backups:\n    get:\n      description: List ARK backups of an Organization\n      operationId: ListARKBackupsForOrganization\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupsResponse'\n          description: All backups listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List ARK backups of an Organization\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/backups/sync:\n    put:\n      description: Sync ARK backups of an Organization\n      operationId: SyncOrgBackups\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Backups synced successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Sync ARK backups of an Organization\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/clusters/{id}/update:\n    put:\n      description: |\n        Update the settings of an existing cluster.\n        Changing some settings (like Kubernetes version) might trigger a rolling update.\n      operationId: UpdateCluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateClusterRequest'\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update an existing cluster\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/backups:\n    get:\n      description: List ARK backups of a cluster\n      operationId: ListARKBackupsOfACluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListBackupsResponse'\n          description: All backups listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List ARK backups of a cluster\n      tags:\n      - ark-backups\n    post:\n      description: Create ARK backup of a cluster\n      operationId: CreateARKBackupOfACluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateBackupRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateBackupResponse'\n          description: Backup created successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create ARK backup\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/backups/{id}/sync:\n    put:\n      description: Sync ARK backups of a cluster\n      operationId: SyncARKBackupsOfACluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Backups synced successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Sync ARK backups of a cluster\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}:\n    delete:\n      description: Delete ARK backup\n      operationId: DeleteARKBackup\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the backup\n        explode: false\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteBackupResponse'\n          description: Backup removed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete ARK backup\n      tags:\n      - ark-backups\n    get:\n      description: Get ARK backup\n      operationId: GetARKBackup\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the backup\n        explode: false\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetBackupResponse'\n          description: Getting backup succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get ARK backup\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}/logs:\n    get:\n      description: Get ARK backup logs\n      operationId: GetARKBackupLogs\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the backup\n        explode: false\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            text/plain:\n              schema:\n                example: |\n                  time=\"2018-09-10T00:23:33Z\" level=info msg=\"Not including resource\" groupResource=events logSource=\"pkg/restore/restore.go:124\"\n                  time=\"2018-09-10T00:23:33Z\" level=info msg=\"Not including resource\" groupResource=nodes logSource=\"pkg/restore/restore.go:124\"\n                  time=\"2018-09-10T00:23:33Z\" level=info msg=\"Not including resource\"\n                type: string\n          description: Getting backup logs succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get ARK backup logs\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/clusters/{id}/backups/{backupId}/download:\n    get:\n      description: Download ARK backup contents\n      operationId: DownloadARKBackupContents\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the backup\n        explode: false\n        in: path\n        name: backupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/x-gzip:\n              schema:\n                format: file\n                type: string\n          description: Getting backup contents succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Download ARK backup contents\n      tags:\n      - ark-backups\n  /api/v1/orgs/{orgId}/clusters/{id}/schedules:\n    get:\n      description: List ARK schedules\n      operationId: ListARKSchedules\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListSchedulesResponse'\n          description: Schedules listed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List ARK schedules\n      tags:\n      - ark-schedules\n    post:\n      description: Create ARK schedule\n      operationId: CreateARKSchedule\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateScheduleRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateScheduleResponse'\n          description: Schedule created successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create ARK schedule\n      tags:\n      - ark-schedules\n  /api/v1/orgs/{orgId}/clusters/{id}/schedules/{scheduleName}:\n    delete:\n      description: Delete ARK schedule\n      operationId: DeleteARKSchedule\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Name of the schedule\n        explode: false\n        in: path\n        name: scheduleName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteScheduleResponse'\n          description: Schedule delete succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete ARK schedule\n      tags:\n      - ark-schedules\n    get:\n      description: Get ARK schedule\n      operationId: GetARKSchedule\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Name of the schedule\n        explode: false\n        in: path\n        name: scheduleName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ScheduleResponse'\n          description: Schedule retrieved succeeded\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get ARK schedule\n      tags:\n      - ark-schedules\n  /api/v1/orgs/{orgId}/clusters/{id}/restores:\n    get:\n      description: List ARK restores\n      operationId: ListARKRestores\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRestoresResponse'\n          description: Restores listed successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List ARK restores\n      tags:\n      - ark-restores\n    post:\n      description: Create ARK restore\n      operationId: CreateARKRestore\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRestoreRequest'\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRestoreResponse'\n          description: Restore created successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create ARK restore\n      tags:\n      - ark-restores\n  /api/v1/orgs/{orgId}/restores/{id}/sync:\n    put:\n      description: Sync ARK restores of a cluster\n      operationId: SyncARKRestoresOfACluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          description: Restores synced successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Sync ARK restores of a cluster\n      tags:\n      - ark-restores\n  /api/v1/orgs/{orgId}/clusters/{id}/restores/{restoreId}:\n    delete:\n      description: Delete ARK restore\n      operationId: DeleteARKRestore\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the restore\n        explode: false\n        in: path\n        name: restoreId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRestoreResponse'\n          description: Restore deleted successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete ARK restore\n      tags:\n      - ark-restores\n    get:\n      description: Get ARK restore\n      operationId: GetARKRestore\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the restore\n        explode: false\n        in: path\n        name: restoreId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRestoreResponse'\n          description: Restore retrieved successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get ARK restore\n      tags:\n      - ark-restores\n  /api/v1/orgs/{orgId}/clusters/{id}/restores/{restoreId}/results:\n    get:\n      description: Get ARK restore results\n      operationId: GetARKRestoreResuts\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: ID of the restore\n        explode: false\n        in: path\n        name: restoreId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/GetRestoreResultsResponse'\n          description: Restore retrieved successfully\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get ARK restore results\n      tags:\n      - ark-restores\n  /api/v1/orgs/{orgid}/clustergroups:\n    get:\n      description: retrieve list of cluster groups of an organization\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/api.ClusterGroup'\n                type: array\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List Cluster Groups of an Organization\n      tags:\n      - clustergroups\n    post:\n      description: create a group of clusters, joining clusters together with a name\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api.CreateRequest'\n        description: Create Cluster Group Request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.CreateResponse'\n          description: Created\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create Cluster Group\n      tags:\n      - clustergroups\n  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}:\n    delete:\n      description: delete a cluster group, disable all enabled features, delete related\n        deployments\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete Cluster Group\n      tags:\n      - clustergroups\n    get:\n      description: retrieve info about a cluster group, members, status of member\n        clusters, features\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.ClusterGroup'\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get Cluster Group\n      tags:\n      - clustergroups\n    put:\n      description: update name \u0026 member clusters for a cluster group\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/api.UpdateRequest'\n        description: Update Cluster Group Request\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.UpdateResponse'\n          description: Accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update Cluster Group\n      tags:\n      - clustergroups\n  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments:\n    get:\n      description: retrieve all deployments from a cluster group\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/deployment.ListDeploymentResponse'\n                type: array\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get All Deployments of a Cluster Group\n      tags:\n      - clustergroup deployments\n    post:\n      description: creates a new cluster group deployment, installs or upgrades deployment\n        on each member cluster accordingly\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deployment.ClusterGroupDeployment'\n        description: Deployment Create Request\n        required: true\n      responses:\n        \"201\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment.CreateUpdateDeploymentResponse'\n          description: Multi-cluster deployment has been created successfully. All\n            install / upgrade operations on all targeted clusters returned with no\n            errors.\n        \"207\":\n          content:\n            application/json:\n              examples:\n                PartialFailure:\n                  value:\n                    code: 207\n                    message: Partial failure\n                    error: there was as least one failure on one of the target clusters\n              schema:\n                $ref: '#/components/schemas/CommonError'\n          description: Partial failure\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create Cluster Group Deployment\n      tags:\n      - clustergroup deployments\n  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments/{deploymentName}:\n    delete:\n      description: deletes a cluster group deployment, also deleting deployments from\n        member clusters\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: release name of a cluster group deployment\n        explode: false\n        in: path\n        name: deploymentName\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: if true cluster group deployment gets deleted even if some deployments\n          can not be deleted from each target cluster\n        explode: true\n        in: query\n        name: force\n        required: false\n        schema:\n          type: boolean\n        style: form\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment.TargetClusterStatus'\n          description: Multi-cluster deployment has been deleted successfully. All\n            delete operations on all targeted clusters returned with no errors.\n        \"207\":\n          content:\n            application/json:\n              examples:\n                PartialFailure:\n                  value:\n                    code: 207\n                    message: Partial failure\n                    error: there was as least one failure on one of the target clusters\n              schema:\n                $ref: '#/components/schemas/CommonError'\n          description: Partial failure\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete Cluster Group Deployment\n      tags:\n      - clustergroup deployments\n    get:\n      description: retrieve info about a cluster group deployment and it's status\n        on each member cluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: release name of a cluster group deployment\n        explode: false\n        in: path\n        name: deploymentName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment.DeploymentInfo'\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get Cluster Group Deployment\n      tags:\n      - clustergroup deployments\n    put:\n      description: updates a cluster group deployment, installs or upgrades deployment\n        on each member cluster accordingly\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: release name of a cluster group deployment\n        explode: false\n        in: path\n        name: deploymentName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/deployment.ClusterGroupDeployment'\n        description: Deployment Update Request\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment.CreateUpdateDeploymentResponse'\n          description: Multi-cluster deployment has been updated successfully. All\n            upgrade / install operations on all targeted clusters returned with no\n            errors.\n        \"207\":\n          content:\n            application/json:\n              examples:\n                PartialFailure:\n                  value:\n                    code: 207\n                    message: Partial failure\n                    error: there was as least one failure on one of the target clusters\n              schema:\n                $ref: '#/components/schemas/CommonError'\n          description: Partial failure\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update Cluster Group Deployment\n      tags:\n      - clustergroup deployments\n  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/deployments/{deploymentName}/sync:\n    put:\n      description: install / upgrade deployment to target clusters where deployment\n        is not found or has wrong\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: release name of a cluster group deployment\n        explode: false\n        in: path\n        name: deploymentName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/deployment.TargetClusterStatus'\n          description: Multi-cluster deployment has been synced successfully. All\n            upgrade / install operations on all targeted clusters returned with no\n            errors.\n        \"207\":\n          content:\n            application/json:\n              examples:\n                PartialFailure:\n                  value:\n                    code: 207\n                    message: Partial failure\n                    error: there was as least one failure on one of the target clusters\n              schema:\n                $ref: '#/components/schemas/CommonError'\n          description: Partial failure\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Synchronize Cluster Group Deployment\n      tags:\n      - clustergroup deployments\n  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/features:\n    get:\n      description: retrieve info about a cluster group feature and it's status on\n        each member cluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                items:\n                  $ref: '#/components/schemas/api.FeatureResponse'\n                type: array\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get All Features of Cluster Group\n      tags:\n      - clustergroup features\n  /api/v1/orgs/{orgid}/clustergroups/{clusterGroupId}/features/{featureName}:\n    delete:\n      description: disable feature on all members of a cluster group\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Name of the feature\n        explode: false\n        in: path\n        name: featureName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Disable Feature of Cluster Group\n      tags:\n      - clustergroup features\n    get:\n      description: retrieve info about a cluster group feature and it's status on\n        each member cluster\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Name of the feature\n        explode: false\n        in: path\n        name: featureName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/api.FeatureResponse'\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get Feature of Cluster Group\n      tags:\n      - clustergroup features\n    post:\n      description: enable feature on all members of a cluster group\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Name of the feature\n        explode: false\n        in: path\n        name: featureName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/api.FeatureRequest'\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: Accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Enable Feature of Cluster Group\n      tags:\n      - clustergroup features\n    put:\n      description: update properties of a feature\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster Group ID\n        explode: false\n        in: path\n        name: clusterGroupId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Name of the feature\n        explode: false\n        in: path\n        name: featureName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        $ref: '#/components/requestBodies/api.FeatureRequest'\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                type: string\n          description: OK\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update Feature of Cluster Group\n      tags:\n      - clustergroup features\n  /api/v1/orgs/{orgId}/clusters/{id}/services:\n    get:\n      operationId: ListIntegratedServices\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntegratedServiceList'\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List enabled integrated services of a cluster\n      tags:\n      - integrated services\n  /api/v1/orgs/{orgId}/clusters/{id}/services/{serviceName}:\n    delete:\n      operationId: DeactivateIntegratedService\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: service name\n        explode: false\n        in: path\n        name: serviceName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"204\":\n          description: No Content\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Deactivate an integrated service\n      tags:\n      - integrated services\n    get:\n      operationId: IntegratedServiceDetails\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: service name\n        explode: false\n        in: path\n        name: serviceName\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IntegratedServiceDetails'\n          description: Success\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get details of an integrated service\n      tags:\n      - integrated services\n    post:\n      operationId: ActivateIntegratedService\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: service name\n        explode: false\n        in: path\n        name: serviceName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ActivateIntegratedServiceRequest'\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Activate an integrated service\n      tags:\n      - integrated services\n    put:\n      operationId: UpdateIntegratedService\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: service name\n        explode: false\n        in: path\n        name: serviceName\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateIntegratedServiceRequest'\n        required: true\n      responses:\n        \"202\":\n          description: Accepted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update an integrated service\n      tags:\n      - integrated services\n  /api/v1/orgs/{orgId}/clusters/{id}/nodepools:\n    get:\n      operationId: ListNodePools\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNodePoolsResponse'\n          description: Node pool list\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List node pools\n      tags:\n      - clusters\n    post:\n      description: Add new node pool to a cluster\n      operationId: CreateNodePool\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/NodePool'\n        required: true\n      responses:\n        \"202\":\n          description: Node pool creation in progress\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Create new node pool\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}:\n    delete:\n      description: Delete a node pool from a cluster.\n      operationId: DeleteNodePool\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Node pool name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          description: Node pool delete in progress\n        \"204\":\n          description: Node pool deleted\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Delete a node pool\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}/update:\n    post:\n      operationId: UpdateNodePool\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Node pool name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateNodePoolRequest'\n        required: true\n      responses:\n        \"202\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateNodePoolResponse'\n          description: Node pool update in progress\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Update an existing node pool\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/nodepools/{name}/cancel-update/{processId}:\n    post:\n      operationId: CancelNodePoolUpdate\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Node pool name\n        explode: false\n        in: path\n        name: name\n        required: true\n        schema:\n          type: string\n        style: simple\n      - description: Node pool update process ID\n        explode: false\n        in: path\n        name: processId\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          description: Node pool update is cancelled\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Cancel a running node pool update process\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/clusters/{id}/nodepool-labels:\n    get:\n      description: List cluster nodepool labels\n      operationId: ListNodepoolLabels\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Cluster identifier\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: integer\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListNodepoolLabelsResponse'\n          description: Nodepool labels listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List cluster nodepool labels\n      tags:\n      - clusters\n  /api/v1/orgs/{orgId}/processes:\n    get:\n      description: List processes in Pipeline\n      operationId: ListProcesses\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Type of processes to query\n        explode: true\n        in: query\n        name: type\n        required: false\n        schema:\n          enum:\n          - cluster-upgrade\n          type: string\n        style: form\n      - description: The id of the resource to list processes for\n        explode: true\n        in: query\n        name: resourceId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The id of the parent process\n        explode: true\n        in: query\n        name: parentId\n        required: false\n        schema:\n          type: string\n        style: form\n      - description: The status of processes to query\n        explode: true\n        in: query\n        name: status\n        required: false\n        schema:\n          $ref: '#/components/schemas/ProcessStatus'\n        style: form\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListProcessesResponse'\n          description: Processes listed\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: List processes in Pipeline\n      tags:\n      - processes\n  /api/v1/orgs/{orgId}/processes/{id}:\n    get:\n      description: Get a process in Pipeline\n      operationId: GetProcess\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Process id\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Process'\n          description: The process\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Get a process in Pipeline\n      tags:\n      - processes\n  /api/v1/orgs/{orgId}/processes/{id}/cancel:\n    post:\n      description: Cancel a process in Pipeline\n      operationId: CancelProcess\n      parameters:\n      - description: Organization identifier\n        explode: false\n        in: path\n        name: orgId\n        required: true\n        schema:\n          type: integer\n        style: simple\n      - description: Process id\n        explode: false\n        in: path\n        name: id\n        required: true\n        schema:\n          type: string\n        style: simple\n      responses:\n        \"202\":\n          description: The process is being canceled\n        default:\n          content:\n            application/json:\n              examples:\n                BadRequest:\n                  value:\n                    code: 400\n                    message: Invalid request\n                    error: Failed to parse request.\n                Unauthorized:\n                  value:\n                    code: 401\n                    message: Unauthorized\n                    error: Unauthorized\n                OrganizationNotFound:\n                  value:\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    code: 500\n                    message: Something went wrong\n                    error: Something went wrong\n              schema:\n                $ref: '#/components/schemas/CommonError'\n            application/problem+json:\n              examples:\n                BadRequest:\n                  value:\n                    type: about:blank\n                    title: Invalid request\n                    status: 400\n                    detail: Failed to parse request.\n                    instance: \"\"\n                    code: 400\n                    message: Failed to parse request.\n                    error: Invalid request\n                Unauthorized:\n                  value:\n                    type: about:blank\n                    title: Unauthorized\n                    status: 401\n                    detail: You are unauthorized to access this resource.\n                    instance: \"\"\n                    code: 401\n                    message: You are unauthorized to access this resource.\n                    error: Unauthorized\n                AccessDenied:\n                  value:\n                    type: about:blank\n                    title: Access denied\n                    status: 403\n                    detail: You are unauthorized to perform this action access this\n                      resource.\n                    instance: \"\"\n                    code: 403\n                    message: You are unauthorized to perform this action access this\n                      resource.\n                    error: Access denied\n                OrganizationNotFound:\n                  value:\n                    type: about:blank\n                    title: Organization not found\n                    status: 404\n                    detail: Organization not found\n                    instance: \"\"\n                    code: 404\n                    message: Organization not found\n                    error: Organization not found\n                SecretAlreadyExists:\n                  value:\n                    type: about:blank\n                    title: Secret already exists\n                    status: 409\n                    detail: Secret already exists\n                    instance: \"\"\n                    code: 409\n                    message: Secret already exists\n                    error: Secret already exists\n                InternalServerError:\n                  value:\n                    type: about:blank\n                    title: Internal server error\n                    status: 500\n                    detail: Something went wrong\n                    instance: \"\"\n                    code: 500\n                    message: Something went wrong\n                    error: Internal server error\n              schema:\n                $ref: '#/components/schemas/Error'\n          description: Internal server error\n      security:\n      - bearerAuth: []\n      summary: Cancel a process in Pipeline\n      tags:\n      - processes\ncomponents:\n  parameters:\n    orgId:\n      description: Organization identifier\n      explode: false\n      in: path\n      name: orgId\n      required: true\n      schema:\n        type: integer\n      style: simple\n    clusterId:\n      description: Cluster identifier\n      explode: false\n      in: path\n      name: id\n      required: true\n      schema:\n        type: integer\n      style: simple\n  requestBodies:\n    api.FeatureRequest:\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/api.FeatureRequest'\n      description: Feature properties\n      required: true\n  responses:\n    PartialFailure:\n      content:\n        application/json:\n          examples:\n            PartialFailure:\n              value:\n                code: 207\n                message: Partial failure\n                error: there was as least one failure on one of the target clusters\n          schema:\n            $ref: '#/components/schemas/CommonError'\n      description: Partial failure\n    Error:\n      content:\n        application/json:\n          examples:\n            BadRequest:\n              value:\n                code: 400\n                message: Invalid request\n                error: Failed to parse request.\n            Unauthorized:\n              value:\n                code: 401\n                message: Unauthorized\n                error: Unauthorized\n            OrganizationNotFound:\n              value:\n                code: 404\n                message: Organization not found\n                error: Organization not found\n            SecretAlreadyExists:\n              value:\n                code: 409\n                message: Secret already exists\n                error: Secret already exists\n            InternalServerError:\n              value:\n                code: 500\n                message: Something went wrong\n                error: Something went wrong\n          schema:\n            $ref: '#/components/schemas/CommonError'\n        application/problem+json:\n          examples:\n            BadRequest:\n              value:\n                type: about:blank\n                title: Invalid request\n                status: 400\n                detail: Failed to parse request.\n                instance: \"\"\n                code: 400\n                message: Failed to parse request.\n                error: Invalid request\n            Unauthorized:\n              value:\n                type: about:blank\n                title: Unauthorized\n                status: 401\n                detail: You are unauthorized to access this resource.\n                instance: \"\"\n                code: 401\n                message: You are unauthorized to access this resource.\n                error: Unauthorized\n            AccessDenied:\n              value:\n                type: about:blank\n                title: Access denied\n                status: 403\n                detail: You are unauthorized to perform this action access this resource.\n                instance: \"\"\n                code: 403\n                message: You are unauthorized to perform this action access this resource.\n                error: Access denied\n            OrganizationNotFound:\n              value:\n                type: about:blank\n                title: Organization not found\n                status: 404\n                detail: Organization not found\n                instance: \"\"\n                code: 404\n                message: Organization not found\n                error: Organization not found\n            SecretAlreadyExists:\n              value:\n                type: about:blank\n                title: Secret already exists\n                status: 409\n                detail: Secret already exists\n                instance: \"\"\n                code: 409\n                message: Secret already exists\n                error: Secret already exists\n            InternalServerError:\n              value:\n                type: about:blank\n                title: Internal server error\n                status: 500\n                detail: Something went wrong\n                instance: \"\"\n                code: 500\n                message: Something went wrong\n                error: Internal server error\n          schema:\n            $ref: '#/components/schemas/Error'\n      description: Internal server error\n  schemas:\n    Error:\n      description: Generic error object.\n      properties:\n        type:\n          description: A URI reference [RFC3986] that identifies the problem type.\n          example: about:blank\n          format: uri\n          type: string\n        title:\n          description: A short, human-readable summary of the problem type.\n          example: Not found\n          type: string\n        status:\n          description: The HTTP status code ([RFC7231], Section 6) generated by the\n            origin server for this occurrence of the problem.\n          example: 404\n          type: integer\n        detail:\n          description: A human-readable explanation specific to this occurrence of\n            the problem.\n          example: The requested resource cannot be found\n          type: string\n        instance:\n          description: A URI reference that identifies the specific occurrence of\n            the problem.\n          example: /path/to/resource\n          format: uri\n          type: string\n        code:\n          deprecated: true\n          description: 'HTTP status code. Deprecated: use status instead.'\n          type: integer\n        message:\n          deprecated: true\n          description: 'Error message. Deprecated: use detail instead.'\n          type: string\n        error:\n          deprecated: true\n          description: 'Error message. Deprecated: use title instead.'\n          type: string\n      type: object\n    CommonError:\n      deprecated: true\n      description: 'Generic error object. Deprecated: use Error schema instead.'\n      properties:\n        code:\n          description: HTTP status code\n          type: integer\n        message:\n          description: Error message\n          type: string\n        error:\n          description: Error message\n          type: string\n      type: object\n    VersionResponse:\n      description: Pipeline build and deployment info\n      example:\n        build_date: build_date\n        os: os\n        arch: arch\n        go_version: go_version\n        compiler: compiler\n        instance_uuid: instance_uuid\n        version: version\n        commit_hash: commit_hash\n      properties:\n        version:\n          type: string\n        commit_hash:\n          type: string\n        build_date:\n          type: string\n        go_version:\n          type: string\n        os:\n          type: string\n        arch:\n          type: string\n        compiler:\n          type: string\n        instance_uuid:\n          type: string\n      type: object\n    RequestedResources:\n      properties:\n        sumCpu:\n          description: Total CPU requested for the cluster\n          example: 8\n          type: integer\n        sumMem:\n          description: Total memory requested for the cluster (GB)\n          example: 32\n          type: integer\n        filters:\n          items:\n            type: string\n          type: array\n        sameSize:\n          description: If true, recommended instance types will have a similar size\n          example: true\n          type: boolean\n        onDemandPct:\n          description: Percentage of regular (on-demand) nodes in the recommended\n            cluster\n          example: 10\n          type: integer\n        minNodes:\n          description: Minimum number of nodes in the recommended cluster\n          example: 1\n          type: integer\n        maxNodes:\n          description: Maximum number of nodes in the recommended cluster\n          example: 3\n          type: integer\n      type: object\n    CreateClusterRequest:\n      properties:\n        name:\n          example: gkecluster-pipelineuser-123\n          type: string\n        location:\n          example: us-central1-a\n          type: string\n        cloud:\n          example: google\n          type: string\n        secretId:\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n        secretIds:\n          example:\n          - 62bc3c75-91fb-4670-bad4-24b401a9deac\n          - 4378ae32-2355-12ed-b984-1234567804ed\n          items:\n            type: string\n          type: array\n        secretName:\n          example: my-aws-secret\n          type: string\n        postHooks:\n          example:\n            InstallIngressController: null\n          type: object\n        scaleOptions:\n          $ref: '#/components/schemas/ScaleOptions'\n        properties:\n          example:\n            gke:\n              master:\n                version: 1.8.7-gke.1\n              nodePools:\n                pool1:\n                  count: 1\n                  instanceType: n1-standard-2\n              nodeVersion: 1.8.7-gke.1\n          type: object\n      required:\n      - cloud\n      - location\n      - name\n      - properties\n      type: object\n    CreateClusterRequestBase:\n      properties:\n        name:\n          example: my-azure-cluster-123\n          type: string\n        secretId:\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n        secretName:\n          example: my-aws-secret\n          type: string\n        sshSecretId:\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n        scaleOptions:\n          $ref: '#/components/schemas/ScaleOptions'\n        type:\n          type: string\n      required:\n      - name\n      - type\n      type: object\n    ScaleOptions:\n      properties:\n        enabled:\n          type: boolean\n        desiredCpu:\n          format: double\n          minimum: 1\n          type: number\n        desiredMem:\n          format: double\n          minimum: 1\n          type: number\n        desiredGpu:\n          minimum: 0\n          type: integer\n        onDemandPct:\n          maximum: 100\n          minimum: 0\n          type: integer\n        excludes:\n          items:\n            type: string\n          type: array\n        keepDesiredCapacity:\n          type: boolean\n      required:\n      - enabled\n      type: object\n    CreatePKEClusterKubernetes:\n      properties:\n        version:\n          example: v1.12.2\n          type: string\n        rbac:\n          example: true\n          type: boolean\n        oidc:\n          $ref: '#/components/schemas/CreatePKEClusterKubernetes_oidc'\n        cri:\n          $ref: '#/components/schemas/CreatePKEClusterKubernetes_cri'\n        network:\n          $ref: '#/components/schemas/CreatePKEClusterKubernetesNetwork'\n      required:\n      - version\n      type: object\n    CreatePKEClusterKubernetesNetwork:\n      properties:\n        serviceCIDR:\n          example: 10.32.0.0/24\n          type: string\n        podCIDR:\n          example: 10.200.0.0/16\n          type: string\n        provider:\n          enum:\n          - weave\n          - calico\n          - cilium\n          type: string\n        providerConfig:\n          type: object\n      type: object\n    CreatePKEClusterRequestBase:\n      allOf:\n      - $ref: '#/components/schemas/CreateClusterRequestBase'\n      - $ref: '#/components/schemas/CreatePKEClusterRequestBase_allOf'\n    PKEClusterHTTPProxy:\n      properties:\n        http:\n          $ref: '#/components/schemas/PKEClusterHTTPProxyOptions'\n        https:\n          $ref: '#/components/schemas/PKEClusterHTTPProxyOptions'\n        exceptions:\n          items:\n            example: .example.org\n            type: string\n          type: array\n      type: object\n    PKEClusterHTTPProxyOptions:\n      properties:\n        host:\n          description: host of the proxy\n          example: proxy.example.org\n          type: string\n        port:\n          description: port the proxy is available on\n          example: 12345\n          maximum: 65535\n          minimum: 0\n          type: integer\n        secretId:\n          description: ID of the secret containing the username and password for the\n            proxy\n          type: string\n        scheme:\n          description: Scheme of the proxy\n          type: string\n      required:\n      - host\n      type: object\n    CreatePKEOnAzureClusterRequest:\n      allOf:\n      - $ref: '#/components/schemas/CreatePKEClusterRequestBase'\n      - $ref: '#/components/schemas/CreatePKEOnAzureClusterRequest_allOf'\n    PKEOnAzureClusterNetwork:\n      properties:\n        name:\n          example: my-azure-virtual-network\n          type: string\n        cidr:\n          description: When referencing an already existing virtual network this field\n            does not need to be specified.\n          example: 10.0.0.0/16\n          type: string\n      type: object\n    PKEOnAzureNodePool:\n      properties:\n        name:\n          type: string\n        roles:\n          items:\n            enum:\n            - master\n            - system\n            - worker\n            type: string\n          type: array\n        labels:\n          additionalProperties:\n            type: string\n          type: object\n        subnet:\n          $ref: '#/components/schemas/PKEOnAzureNodePool_subnet'\n        zones:\n          example:\n          - \"1\"\n          - \"3\"\n          items:\n            enum:\n            - \"1\"\n            - \"2\"\n            - \"3\"\n            type: string\n          type: array\n        autoscaling:\n          type: boolean\n        minCount:\n          minimum: 1\n          type: integer\n        maxCount:\n          minimum: 1\n          type: integer\n        count:\n          minimum: 1\n          type: integer\n        instanceType:\n          example: Standard_B2ms\n          type: string\n      required:\n      - instanceType\n      - name\n      - roles\n      type: object\n    CreatePKEOnVsphereClusterRequest:\n      allOf:\n      - $ref: '#/components/schemas/CreatePKEClusterRequestBase'\n      - $ref: '#/components/schemas/CreatePKEOnVsphereClusterRequest_allOf'\n    PKEOnVsphereNodePool:\n      properties:\n        name:\n          type: string\n        roles:\n          items:\n            enum:\n            - master\n            - system\n            - worker\n            type: string\n          type: array\n        labels:\n          additionalProperties:\n            type: string\n          type: object\n        size:\n          minimum: 1\n          type: integer\n        vcpu:\n          description: Number of VCPUs to attach to each node.\n          example: 2\n          type: integer\n        ram:\n          description: MiBs of RAM to attach to each node.\n          example: 2048\n          type: integer\n        template:\n          description: Name of VM template available on vSphere to clone as the base\n            of nodes. Overrides default value from the main cluster secret.\n          example: '[{\"simple\":{\"value\":\"centos-7-pke-201910021808\",\"summary\":\"Name\n            of template to use when it''s unambiguous.\"}},{\"absolute\":{\"value\":\"/Datacenter/vm/centos-7-pke-201910021808\"}}]'\n          type: string\n        adminUsername:\n          description: Name of admin user to deploy the generated SSH public key for.\n            No key will be deployed if omitted.\n          example: root\n          type: string\n      required:\n      - name\n      - ram\n      - roles\n      - vcpu\n      type: object\n    CreateClusterRequestV2:\n      allOf:\n      - $ref: '#/components/schemas/CreateClusterRequestBase'\n      - $ref: '#/components/schemas/CreateClusterRequestBase'\n    NodePool:\n      oneOf:\n      - $ref: '#/components/schemas/EksNodePool'\n      - $ref: '#/components/schemas/EksNodePool'\n    GenericNodePool:\n      description: Generic node pool object for all cluster distributions.\n      properties:\n        name:\n          description: Node pool name.\n          type: string\n        size:\n          description: Node pool size.\n          type: integer\n        labels:\n          additionalProperties:\n            type: string\n          description: Node pool labels.\n          example:\n            example.io/label1: value1\n          type: object\n      required:\n      - name\n      - size\n      type: object\n    NodePoolAutoScaling:\n      description: Node pool auto scaling settings.\n      properties:\n        enabled:\n          description: Enable node pool autoscaling.\n          type: boolean\n        minSize:\n          description: Minimum node pool size.\n          example: 1\n          minimum: 0\n          type: integer\n        maxSize:\n          description: Maximum node pool size.\n          example: 5\n          type: integer\n      required:\n      - maxSize\n      - minSize\n      type: object\n    EKSAuthConfig:\n      properties:\n        mapRoles:\n          items:\n            $ref: '#/components/schemas/EKSAuthConfigRoles'\n          type: array\n        mapUsers:\n          items:\n            $ref: '#/components/schemas/EKSAuthConfigUsers'\n          type: array\n        mapAccounts:\n          items:\n            type: string\n          type: array\n      type: object\n    EKSAuthConfigUsers:\n      properties:\n        groups:\n          items:\n            type: string\n          type: array\n        username:\n          type: string\n        userarn:\n          type: string\n      type: object\n    EKSAuthConfigRoles:\n      properties:\n        groups:\n          items:\n            type: string\n          type: array\n        username:\n          type: string\n        rolearn:\n          type: string\n      type: object\n    EKSEncryptionConfig:\n      description: EKS encryption configuration object describing an encryption provider\n        and the corresponding resources to encrypt. More information can be found\n        at https://docs.aws.amazon.com/eks/latest/APIReference/API_EncryptionConfig.html.\n      example: |\n        {\n            \"provider\": {\n                \"keyARN\": \"arn:aws:kms:\u003cREGION\u003e:000000000000:key/00000000-0000-0000-0000-000000000000\"\n            },\n            \"resources\": [\n                \"secrets\"\n            ]\n        }\n      properties:\n        provider:\n          $ref: '#/components/schemas/EKSEncryptionConfigProvider'\n        resources:\n          description: Resource kinds to encrypt with the corresponding encryption\n            provider.\n          example: |\n            [\n                \"secrets\"\n            ]\n          items:\n            description: Resource kind to encrypt.\n            example: secrets\n            type: string\n          type: array\n      type: object\n    EKSEncryptionConfigProvider:\n      description: EKS encryption provider.\n      example: |\n        {\n            \"keyARN\": \"arn:aws:kms:\u003cREGION\u003e:000000000000:key/00000000-0000-0000-0000-000000000000\"\n        }\n      properties:\n        keyARN:\n          description: A customer master key to use for encryption. More information\n            can be found at https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html.\n          example: arn:aws:kms:\u003cREGION\u003e:000000000000:key/00000000-0000-0000-0000-000000000000\n          type: string\n      type: object\n    EksNodePool:\n      allOf:\n      - $ref: '#/components/schemas/GenericNodePool'\n      - $ref: '#/components/schemas/EksNodePool_allOf'\n      description: Node pool object for an EKS cluster.\n      type: object\n    UpdateNodePoolRequest:\n      oneOf:\n      - $ref: '#/components/schemas/EksUpdateNodePoolRequest'\n      - $ref: '#/components/schemas/PkeAwsUpdateNodePoolRequest'\n    UpdateNodePoolResponse:\n      example:\n        processId: processId\n      properties:\n        processId:\n          description: Node pool update process ID.\n          type: string\n      type: object\n    ListNodePoolsResponse:\n      items:\n        $ref: '#/components/schemas/NodePoolSummary'\n      type: array\n    ReportPKENodeStatusResponse:\n      example:\n        processId: processId\n      properties:\n        processId:\n          description: ID of the registered process\n          type: string\n      type: object\n    NodePoolSummary:\n      allOf:\n      - $ref: '#/components/schemas/NodePool'\n      - $ref: '#/components/schemas/NodePoolStatusInformation'\n      description: A summary of information about the node pool.\n      type: object\n    NodePoolStatusInformation:\n      description: Current status and its reason of the node pool.\n      properties:\n        status:\n          description: Current status of the node pool.\n          example: ERROR\n          type: string\n        statusMessage:\n          description: Details and reasoning about the status value.\n          example: 'Creating node pool failed: the specified volume size is invalid.'\n          type: string\n      type: object\n    BaseUpdateNodePoolRequest:\n      description: Base node pool update request object for all cluster distributions.\n      properties:\n        size:\n          description: Node pool size.\n          type: integer\n        labels:\n          additionalProperties:\n            type: string\n          description: Node pool labels.\n          example:\n            example.io/label1: value1\n          type: object\n      required:\n      - size\n      type: object\n    EksUpdateNodePoolRequest:\n      allOf:\n      - $ref: '#/components/schemas/BaseUpdateNodePoolRequest'\n      - $ref: '#/components/schemas/EksUpdateNodePoolRequest_allOf'\n      description: Node pool update request object for an EKS cluster.\n      type: object\n    PkeAwsUpdateNodePoolRequest:\n      allOf:\n      - $ref: '#/components/schemas/BaseUpdateNodePoolRequest'\n      - $ref: '#/components/schemas/PkeAwsUpdateNodePoolRequest_allOf'\n      description: Node pool update request object for an PKE AWS cluster.\n      type: object\n    BaseUpdateNodePoolOptions:\n      description: Base node pool update options object for all cluster distributions.\n      properties:\n        maxSurge:\n          default: 0\n          description: Maximum number of extra nodes that can be created during the\n            update.\n          type: integer\n        maxBatchSize:\n          default: 2\n          description: Maximum number of nodes that can be updated simultaneously.\n          type: integer\n        maxUnavailable:\n          default: 0\n          description: Maximum number of nodes that can be unavailable during the\n            update.\n          type: integer\n        drain:\n          $ref: '#/components/schemas/UpdateNodePoolDrainOptions'\n      type: object\n    UpdateNodePoolDrainOptions:\n      description: Drain options for old nodes.\n      properties:\n        timeout:\n          default: 0\n          description: How long should drain wait for pod eviction (in seconds)\n          type: integer\n        failOnError:\n          default: false\n          description: Whether the process should fail if draining fails/times out.\n          type: boolean\n        podSelector:\n          default: \"\"\n          description: Only evict those pods that matches this selector.\n          type: string\n      type: object\n    EKSNodePool:\n      properties:\n        instanceType:\n          example: m4.xlarge\n          type: string\n        spotPrice:\n          example: \"0.2\"\n          type: string\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        labels:\n          additionalProperties:\n            example: '{\"example.io/label1\":\"value1\"}'\n            type: string\n          type: object\n        volumeSize:\n          description: Size of the EBS volume in GBs of the nodes in the pool.\n          example: 50\n          type: integer\n        image:\n          example: ami-06d1667f\n          type: string\n        subnet:\n          $ref: '#/components/schemas/EKSSubnet'\n        securityGroups:\n          description: List of additional custom security groups for all nodes in\n            the pool.\n          example:\n          - sg-00000xxxx0000xxx1\n          - sg-00000xxxx0000xxx2\n          items:\n            type: string\n          type: array\n      required:\n      - instanceType\n      - maxCount\n      - minCount\n      - spotPrice\n      type: object\n    CreateEKSProperties:\n      properties:\n        eks:\n          $ref: '#/components/schemas/CreateEKSProperties_eks'\n      required:\n      - eks\n      type: object\n    CreateACKProperties:\n      properties:\n        ack:\n          $ref: '#/components/schemas/CreateACKProperties_ack'\n      required:\n      - ack\n      type: object\n    NodePoolsACK:\n      properties:\n        instanceType:\n          type: string\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 1\n          type: integer\n      required:\n      - count\n      - instanceType\n      type: object\n    CreateAKSProperties:\n      properties:\n        aks:\n          $ref: '#/components/schemas/CreateAKSProperties_aks'\n      required:\n      - aks\n      type: object\n    NodePoolsAzure:\n      properties:\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: Standard_B2ms\n          type: string\n        labels:\n          additionalProperties:\n            example: '{\"example.io/label1\":\"value1\"}'\n            type: string\n          type: object\n      required:\n      - count\n      - instanceType\n      type: object\n    CreateGKEProperties:\n      properties:\n        gke:\n          $ref: '#/components/schemas/CreateGKEProperties_gke'\n      required:\n      - gke\n      type: object\n    NodePoolsGoogle:\n      properties:\n        autoscaling:\n          example: true\n          type: boolean\n        preemptible:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: n1-standard-2\n          type: string\n        labels:\n          additionalProperties:\n            $ref: '#/components/schemas/LabelsGoogle'\n          type: object\n      required:\n      - count\n      - instanceType\n      type: object\n    LabelsGoogle:\n      example: labelValue\n      type: string\n    CreateUpdateOKEProperties:\n      properties:\n        oke:\n          $ref: '#/components/schemas/CreateUpdateOKEProperties_oke'\n      required:\n      - oke\n      type: object\n    NodePoolsOracle:\n      properties:\n        version:\n          example: v1.10.3\n          type: string\n        count:\n          example: 1\n          type: integer\n        image:\n          example: Oracle-Linux-7.5\n          type: string\n        shape:\n          example: VM.Standard1.1\n          type: string\n        labels:\n          additionalProperties:\n            $ref: '#/components/schemas/LabelsOracle'\n          type: object\n        subnetIds:\n          items:\n            example: ocid1.subnet.oc1.iad.abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwx\n            type: string\n          maxItems: 3\n          type: array\n      type: object\n    LabelsOracle:\n      example: labelValue\n      type: string\n    CreatePKEProperties:\n      properties:\n        network:\n          $ref: '#/components/schemas/CreatePKEProperties_network'\n        nodePools:\n          items:\n            $ref: '#/components/schemas/NodePoolsPKE'\n          type: array\n        kubernetes:\n          $ref: '#/components/schemas/CreatePKEProperties_kubernetes'\n        cri:\n          $ref: '#/components/schemas/CreatePKEProperties_cri'\n      required:\n      - cri\n      - kubernetes\n      - network\n      - nodePools\n      type: object\n    NodePoolsPKE:\n      properties:\n        name:\n          example: distrMaster\n          type: string\n        roles:\n          example:\n          - master\n          - pipeline-system\n          items:\n            type: string\n          type: array\n        labels:\n          additionalProperties:\n            example: '{\"example.io/label1\":\"value1\"}'\n            type: string\n          description: user provided custom node labels to be placed onto the nodes\n            of the node pool\n          type: object\n        autoscaling:\n          description: Enables/disables autoscaling of this node pool through Kubernetes\n            cluster autoscaler.\n          type: boolean\n        provider:\n          example: amazon\n          type: string\n        providerConfig:\n          type: object\n        hosts:\n          items:\n            $ref: '#/components/schemas/PKEHosts'\n          type: array\n      required:\n      - autoscaling\n      - name\n      - provider\n      - providerConfig\n      - roles\n      type: object\n    AmazonProviderConfig:\n      properties:\n        autoScalingGroup:\n          $ref: '#/components/schemas/AmazonAutoScalingGroup'\n      required:\n      - autoScalingGroup\n      type: object\n    PKEHosts:\n      properties:\n        name:\n          example: ip-10-240-0-204.eu-central-1.compute.internal\n          type: string\n        privateIP:\n          example: 10.240.0.204\n          type: string\n        roles:\n          example:\n          - master\n          - pipeline-system\n          items:\n            type: string\n          type: array\n      required:\n      - name\n      - privateIP\n      - roles\n      type: object\n    AmazonAutoScalingGroup:\n      properties:\n        name:\n          example: distrMaster\n          type: string\n        image:\n          example: ami-dd3c0f36\n          type: string\n        volumeSize:\n          description: Size of root EBS volume to attach to the nodes in GBs. Zero\n            means that the size is determined automatically.\n          type: integer\n        zones:\n          example:\n          - eu-central-1b\n          items:\n            type: string\n          type: array\n        instanceType:\n          example: t2.medium\n          type: string\n        launchConfigurationName:\n          example: distrMaster\n          type: string\n        launchTemplate:\n          type: object\n        vpcID:\n          example: vpc-0deb755857f5ef79d\n          type: string\n        securityGroupID:\n          example: sg-0b3ddd7bef209c1d0\n          type: string\n        subnets:\n          example:\n          - subnet-0d16a21e9655486af\n          items:\n            type: string\n          type: array\n        tags:\n          additionalProperties: true\n          type: object\n        spotPrice:\n          example: \"0.2\"\n          type: string\n        size:\n          $ref: '#/components/schemas/AmazonAutoScalingGroup_size'\n      required:\n      - image\n      - instanceType\n      - launchConfigurationName\n      - name\n      - securityGroupID\n      - size\n      - spotPrice\n      - subnets\n      - tags\n      - vpcID\n      - zones\n      type: object\n    AmazonLaunchTemplate:\n      type: object\n    CreateClusterResponse_202:\n      example:\n        name: gkecluster-pipelineuser-123\n        id: 1\n      properties:\n        name:\n          example: gkecluster-pipelineuser-123\n          type: string\n        id:\n          example: 1\n          type: integer\n      type: object\n    ClusterConfig:\n      example:\n        data: |-\n          apiVersion: v1\n          clusters....\n        status: 200\n      properties:\n        status:\n          example: 200\n          type: integer\n        data:\n          example: |-\n            apiVersion: v1\n            clusters....\n          type: string\n      type: object\n    UpdateClusterRequestV2:\n      oneOf:\n      - $ref: '#/components/schemas/UpdatePKEOnAzureClusterRequest'\n      - $ref: '#/components/schemas/UpdatePKEOnVsphereClusterRequest'\n    UpdatePKEOnAzureClusterRequest:\n      properties:\n        nodepools:\n          items:\n            $ref: '#/components/schemas/PKEOnAzureNodePool'\n          type: array\n      type: object\n    UpdatePKEOnVsphereClusterRequest:\n      properties:\n        nodepools:\n          items:\n            $ref: '#/components/schemas/PKEOnVsphereNodePool'\n          type: array\n      type: object\n    UpdateClusterRequestDeprecated:\n      properties:\n        cloud:\n          example: google\n          type: string\n        properties:\n          example:\n            google:\n              master:\n                version: \"1.10\"\n              nodePools:\n                pool1:\n                  count: 2\n                  instanceType: n1-standard-2\n          type: object\n      required:\n      - cloud\n      - properties\n      type: object\n    UpdateEksProperties:\n      properties:\n        eks:\n          $ref: '#/components/schemas/UpdateEksProperties_eks'\n      required:\n      - eks\n      type: object\n    UpdateACKProperties:\n      properties:\n        ack:\n          $ref: '#/components/schemas/UpdateACKProperties_ack'\n      required:\n      - ack\n      type: object\n    UpdateAzureProperties:\n      properties:\n        azure:\n          $ref: '#/components/schemas/UpdateAzureProperties_azure'\n      required:\n      - azure\n      type: object\n    UpdateNodePoolsAzure:\n      properties:\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: Standard_B2ms\n          type: string\n        labels:\n          additionalProperties:\n            example: '{\"example.io/label1\":\"value1\"}'\n            type: string\n          type: object\n        vnetSubnetID:\n          example: /subscriptions/12345678-1234-5678-1234-123456789abc/resourceGroups/your-resource-group-name/providers/Microsoft.Network/virtualNetworks/your-vnet-name/subnets/your-vnet-subnet-name\n          type: string\n      required:\n      - count\n      type: object\n    UpdateGoogleProperties:\n      properties:\n        master:\n          $ref: '#/components/schemas/UpdateGoogleProperties_master'\n        nodeVersion:\n          example: \"1.9\"\n          type: string\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/UpdateNodePoolsGoogle'\n          type: object\n      type: object\n    UpdateNodePoolsGoogle:\n      properties:\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 2\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: n1-standard-2\n          type: string\n      required:\n      - count\n      type: object\n    UpdatePKEProperties:\n      properties:\n        pke:\n          $ref: '#/components/schemas/UpdatePKEProperties_pke'\n      required:\n      - pke\n      type: object\n    UpdateNodePoolsPKE:\n      properties:\n        instanceType:\n          description: Instance type for the nodes in the node pool. This field is\n            ignored when existing node pool is updated as instance type can not be\n            changed.\n          example: c4.large\n          type: string\n        spotPrice:\n          description: The spot price for a node in the node pool. Provide \"\" or \"0\"\n            for on-demand nodes.\n          example: \"0.2\"\n          type: string\n        autoscaling:\n          description: Whether to enable Kubernetes cluster autoscaler for this node\n            pool.\n          type: boolean\n        minCount:\n          description: If cluster autoscaler is enabled for this node pool it sets\n            the minimum node count the cluster autoscaler can downscale the node pool\n            to.\n          example: 1\n          type: integer\n        maxCount:\n          description: If cluster autoscaler is enabled for this node pool it sets\n            the maximum node count the cluster autoscaler can upscale the node pool\n            to.\n          example: 2\n          type: integer\n        count:\n          description: If cluster autoscaler is not enabled this specifies the desired\n            node count in the node pool. If cluster autoscaler is enabled this specifies\n            the initial node count in the node pool.\n          example: 1\n          type: integer\n        subnets:\n          description: The subnet to create the node pool into. If this field is omitted\n            than the subnet from the cluster level network configuration is used.\n          example:\n          - subnet-0d16a21e9655486af\n          items:\n            type: string\n          type: array\n        labels:\n          additionalProperties:\n            example: '{\"example.io/label1\":\"value1\"}'\n            type: string\n          description: user provided custom node labels to be placed onto the nodes\n            of the node pool\n          type: object\n      type: object\n    ListEndpointsResponse:\n      example:\n        endpoints:\n        - urls:\n          - servicename: serviceName\n            url: url\n          - servicename: serviceName\n            url: url\n          name: pipeline-traefik\n          host: 11.11.11.111\n        - urls:\n          - servicename: serviceName\n            url: url\n          - servicename: serviceName\n            url: url\n          name: pipeline-traefik\n          host: 11.11.11.111\n      properties:\n        endpoints:\n          items:\n            $ref: '#/components/schemas/EndpointItem'\n          type: array\n      type: object\n    EndpointItem:\n      example:\n        urls:\n        - servicename: serviceName\n          url: url\n        - servicename: serviceName\n          url: url\n        name: pipeline-traefik\n        host: 11.11.11.111\n      properties:\n        name:\n          example: pipeline-traefik\n          type: string\n        host:\n          example: 11.11.11.111\n          type: string\n        urls:\n          items:\n            $ref: '#/components/schemas/URLItem'\n          type: array\n      type: object\n    URLItem:\n      example:\n        servicename: serviceName\n        url: url\n      properties:\n        servicename:\n          example: serviceName\n          type: string\n        url:\n          example: url\n          type: string\n      type: object\n    ListNodesResponse:\n      example:\n        metadata:\n          resourceVersion: \"30123\"\n          selfLink: /api/v1/nodes\n        items:\n        - metadata:\n            uid: f214d7fb-41ae-11e8-a4ea-42010a8001da\n            resourceVersion: \"30119\"\n            name: gke-gkecluster-feri-706-pool1-496eccb3-l25k\n            creationTimestamp: 2018-04-16T19:47:07Z\n            annotations:\n              key: '{\"node.alpha.kubernetes.io/ttl\":\"0\"}'\n            selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k\n            labels:\n              key: '{\"beta.kubernetes.io/arch\":\"amd64\"}'\n          spec:\n            providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k\n            externalID: \"5935724476937880453\"\n            podCIDR: 10.48.0.0/24\n          status:\n            daemonEndpoints:\n              kubeletEndpoint: '{}'\n            allocatable:\n              memory: 5784712Ki\n              cpu: 1930m\n              pods: \"110\"\n            addresses:\n            - address: 10.128.0.2\n              type: InternalIP\n            - address: 10.128.0.2\n              type: InternalIP\n            images:\n            - name:\n              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n              sizeBytes: 286572743\n            - name:\n              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n              sizeBytes: 286572743\n            nodeInfo:\n              machineID: 10d8adda771410ca912a387cf7e5cb06\n              bootID: decb64ff-e662-410a-b862-04cb490b4772\n              kernelVersion: 4.4.111+\n              containerRuntimeVersion: docker://17.3.2\n              kubeletVersion: v1.10\n              systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06\n              kubeProxyVersion: v1.10\n              operatingSystem: linux\n              osImage: Container-Optimized OS from Google\n              architecture: amd64\n            conditions:\n            - reason: KernelHasNoDeadlock\n              lastHeartbeatTime: 2018-04-17T09:02:45Z\n              type: KernelDeadlock\n              lastTransitionTime: 2018-04-16T19:46:26Z\n              message: kernel has no deadlock\n              status: \"False\"\n            - reason: KernelHasNoDeadlock\n              lastHeartbeatTime: 2018-04-17T09:02:45Z\n              type: KernelDeadlock\n              lastTransitionTime: 2018-04-16T19:46:26Z\n              message: kernel has no deadlock\n              status: \"False\"\n            capacity:\n              memory: 7664776Ki\n              cpu: \"2\"\n              pods: \"110\"\n        - metadata:\n            uid: f214d7fb-41ae-11e8-a4ea-42010a8001da\n            resourceVersion: \"30119\"\n            name: gke-gkecluster-feri-706-pool1-496eccb3-l25k\n            creationTimestamp: 2018-04-16T19:47:07Z\n            annotations:\n              key: '{\"node.alpha.kubernetes.io/ttl\":\"0\"}'\n            selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k\n            labels:\n              key: '{\"beta.kubernetes.io/arch\":\"amd64\"}'\n          spec:\n            providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k\n            externalID: \"5935724476937880453\"\n            podCIDR: 10.48.0.0/24\n          status:\n            daemonEndpoints:\n              kubeletEndpoint: '{}'\n            allocatable:\n              memory: 5784712Ki\n              cpu: 1930m\n              pods: \"110\"\n            addresses:\n            - address: 10.128.0.2\n              type: InternalIP\n            - address: 10.128.0.2\n              type: InternalIP\n            images:\n            - name:\n              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n              sizeBytes: 286572743\n            - name:\n              - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n              - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n              sizeBytes: 286572743\n            nodeInfo:\n              machineID: 10d8adda771410ca912a387cf7e5cb06\n              bootID: decb64ff-e662-410a-b862-04cb490b4772\n              kernelVersion: 4.4.111+\n              containerRuntimeVersion: docker://17.3.2\n              kubeletVersion: v1.10\n              systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06\n              kubeProxyVersion: v1.10\n              operatingSystem: linux\n              osImage: Container-Optimized OS from Google\n              architecture: amd64\n            conditions:\n            - reason: KernelHasNoDeadlock\n              lastHeartbeatTime: 2018-04-17T09:02:45Z\n              type: KernelDeadlock\n              lastTransitionTime: 2018-04-16T19:46:26Z\n              message: kernel has no deadlock\n              status: \"False\"\n            - reason: KernelHasNoDeadlock\n              lastHeartbeatTime: 2018-04-17T09:02:45Z\n              type: KernelDeadlock\n              lastTransitionTime: 2018-04-16T19:46:26Z\n              message: kernel has no deadlock\n              status: \"False\"\n            capacity:\n              memory: 7664776Ki\n              cpu: \"2\"\n              pods: \"110\"\n      properties:\n        metadata:\n          $ref: '#/components/schemas/ListNodesResponse_metadata'\n        items:\n          items:\n            $ref: '#/components/schemas/NodeItem'\n          type: array\n      type: object\n    NodeItem:\n      example:\n        metadata:\n          uid: f214d7fb-41ae-11e8-a4ea-42010a8001da\n          resourceVersion: \"30119\"\n          name: gke-gkecluster-feri-706-pool1-496eccb3-l25k\n          creationTimestamp: 2018-04-16T19:47:07Z\n          annotations:\n            key: '{\"node.alpha.kubernetes.io/ttl\":\"0\"}'\n          selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k\n          labels:\n            key: '{\"beta.kubernetes.io/arch\":\"amd64\"}'\n        spec:\n          providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k\n          externalID: \"5935724476937880453\"\n          podCIDR: 10.48.0.0/24\n        status:\n          daemonEndpoints:\n            kubeletEndpoint: '{}'\n          allocatable:\n            memory: 5784712Ki\n            cpu: 1930m\n            pods: \"110\"\n          addresses:\n          - address: 10.128.0.2\n            type: InternalIP\n          - address: 10.128.0.2\n            type: InternalIP\n          images:\n          - name:\n            - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n            - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n            sizeBytes: 286572743\n          - name:\n            - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n            - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n            sizeBytes: 286572743\n          nodeInfo:\n            machineID: 10d8adda771410ca912a387cf7e5cb06\n            bootID: decb64ff-e662-410a-b862-04cb490b4772\n            kernelVersion: 4.4.111+\n            containerRuntimeVersion: docker://17.3.2\n            kubeletVersion: v1.10\n            systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06\n            kubeProxyVersion: v1.10\n            operatingSystem: linux\n            osImage: Container-Optimized OS from Google\n            architecture: amd64\n          conditions:\n          - reason: KernelHasNoDeadlock\n            lastHeartbeatTime: 2018-04-17T09:02:45Z\n            type: KernelDeadlock\n            lastTransitionTime: 2018-04-16T19:46:26Z\n            message: kernel has no deadlock\n            status: \"False\"\n          - reason: KernelHasNoDeadlock\n            lastHeartbeatTime: 2018-04-17T09:02:45Z\n            type: KernelDeadlock\n            lastTransitionTime: 2018-04-16T19:46:26Z\n            message: kernel has no deadlock\n            status: \"False\"\n          capacity:\n            memory: 7664776Ki\n            cpu: \"2\"\n            pods: \"110\"\n      properties:\n        metadata:\n          $ref: '#/components/schemas/NodeItem_metadata'\n        spec:\n          $ref: '#/components/schemas/NodeItem_spec'\n        status:\n          $ref: '#/components/schemas/NodeItem_status'\n      type: object\n    ListDeploymentsResponse:\n      items:\n        $ref: '#/components/schemas/ListDeploymentsResponseItem'\n      type: array\n    ListDeploymentsResponseItem:\n      example:\n        createdAt: 2018-07-03T14:23:19+02:00\n        chartName: pipeline-cluster-ingress\n        chartVersion: 0.0.1\n        releaseName: pipeline\n        namespace: default\n        chart: pipeline-cluster-ingress-0.0.1\n        version: 1\n        updatedAt: 2018-07-03T14:23:19+02:00\n        status: DEPLOYED\n        supported: true\n      properties:\n        releaseName:\n          example: pipeline\n          type: string\n        chart:\n          example: pipeline-cluster-ingress-0.0.1\n          type: string\n        chartName:\n          example: pipeline-cluster-ingress\n          type: string\n        chartVersion:\n          example: 0.0.1\n          type: string\n        version:\n          example: 1\n          type: integer\n        updatedAt:\n          example: 2018-07-03T14:23:19+02:00\n          type: string\n        status:\n          example: DEPLOYED\n          type: string\n        namespace:\n          example: default\n          type: string\n        createdAt:\n          example: 2018-07-03T14:23:19+02:00\n          type: string\n        supported:\n          example: true\n          type: boolean\n      type: object\n    CreateUpdateDeploymentRequest:\n      example:\n        wait: false\n        package: package\n        dryRun: false\n        releaseName: singed-bee\n        odPcts:\n          deployment.my-deployment: 40\n        values:\n          ingress:\n            enabled: \"true\"\n        name: banzaicloud-stable/pipeline\n        namespace: default\n        reuseValues: true\n        version: 0.1.0\n        timeout: 500\n      properties:\n        name:\n          example: banzaicloud-stable/pipeline\n          type: string\n        version:\n          description: Version of the deployment. If not specified, the latest version\n            is used.\n          example: 0.1.0\n          type: string\n        package:\n          description: The chart content packaged by `helm package`. If specified\n            chart version is ignored.\n          format: byte\n          type: string\n        namespace:\n          example: default\n          type: string\n        releaseName:\n          example: singed-bee\n          type: string\n        dryRun:\n          example: false\n          type: boolean\n        wait:\n          description: if set, will wait until all Pods, PVCs, Services, and minimum\n            number of Pods of a Deployment are in a ready state before marking the\n            release as successful\n          example: false\n          type: boolean\n        timeout:\n          description: time in seconds to wait for any individual Kubernetes operation\n            (default 300)\n          example: 500\n          format: int64\n          type: integer\n        odPcts:\n          description: 'Map of resources in the template where replicas should have\n            a minimum on-demand percentage. Format: \u003ckind.resourceName: min-percentage\u003e'\n          example:\n            deployment.my-deployment: 40\n          type: object\n        reuseValues:\n          example: true\n          type: boolean\n        values:\n          description: current values of the deployment\n          example:\n            ingress:\n              enabled: \"true\"\n          type: object\n      required:\n      - name\n      type: object\n    CreateUpdateDeploymentResponse:\n      example:\n        notes: notes\n        releaseName: vigilant-mandrill\n      properties:\n        releaseName:\n          example: vigilant-mandrill\n          type: string\n        notes:\n          description: deployment notes in base64 encoded format\n          format: base64\n          type: string\n      type: object\n    DeleteDeploymentResponse:\n      example:\n        name: vigilant-mandrill\n        message: Deployment deleted!\n        status: 200\n      properties:\n        status:\n          example: 200\n          type: integer\n        message:\n          example: Deployment deleted!\n          type: string\n        name:\n          example: vigilant-mandrill\n          type: string\n      type: object\n    GetDeploymentResourcesResponse:\n      items:\n        properties:\n          name:\n            example: bumptious-dragon-zeppelin\n            type: string\n          kind:\n            example: Deployment\n            type: string\n        type: object\n      type: array\n    GetDeploymentResponse:\n      example:\n        createdAt: 2018-07-03T14:23:19+02:00\n        notes: notes\n        chartName: mysql\n        chartVersion: 0.7.0\n        releaseName: vigilant-mandrill\n        values:\n          metrics:\n            enabled: \"true\"\n        namespace: default\n        chart: mysql-0.7.0\n        version: 1\n        updatedAt: 2018-07-03T14:23:19+02:00\n        status: DEPLOYED\n      properties:\n        releaseName:\n          example: vigilant-mandrill\n          type: string\n        chart:\n          example: mysql-0.7.0\n          type: string\n        chartName:\n          example: mysql\n          type: string\n        chartVersion:\n          example: 0.7.0\n          type: string\n        namespace:\n          example: default\n          type: string\n        version:\n          example: 1\n          type: integer\n        updatedAt:\n          example: 2018-07-03T14:23:19+02:00\n          type: string\n        status:\n          example: DEPLOYED\n          type: string\n        createdAt:\n          example: 2018-07-03T14:23:19+02:00\n          type: string\n        notes:\n          description: deployment notes in base64 encoded format\n          format: base64\n          type: string\n        values:\n          description: current values of the deployment\n          example:\n            metrics:\n              enabled: \"true\"\n          type: object\n      type: object\n    HelmReposListResponse:\n      items:\n        $ref: '#/components/schemas/HelmRepoListItem'\n      type: array\n    HelmRepoListItem:\n      example:\n        cache: statestore/\u003ccluster_name\u003e/helm/repository/cache/stable-index.yaml\n        caFile: caFile\n        passwordSecretRef: passwordSecretRef\n        keyFile: keyFile\n        certFile: certFile\n        name: stable\n        tlsSecretRef: tlsSecretRef\n        url: https://charts.helm.sh/stable\n      properties:\n        name:\n          example: stable\n          type: string\n        cache:\n          example: statestore/\u003ccluster_name\u003e/helm/repository/cache/stable-index.yaml\n          type: string\n        url:\n          example: https://charts.helm.sh/stable\n          type: string\n        certFile:\n          type: string\n        keyFile:\n          type: string\n        caFile:\n          type: string\n        passwordSecretRef:\n          type: string\n        tlsSecretRef:\n          type: string\n      type: object\n    HelmReposModifyRequest:\n      example:\n        url: https://charts.helm.sh/stable\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        certFile:\n          type: string\n        keyFile:\n          type: string\n        caFile:\n          type: string\n        passwordSecretRef:\n          type: string\n        tlsSecretRef:\n          type: string\n      type: object\n    HelmReposAddRequest:\n      example:\n        name: stable\n        url: https://charts.helm.sh/stable\n      properties:\n        name:\n          type: string\n        url:\n          type: string\n        certFile:\n          type: string\n        keyFile:\n          type: string\n        caFile:\n          type: string\n        passwordSecretRef:\n          type: string\n        tlsSecretRef:\n          type: string\n      required:\n      - name\n      - url\n      type: object\n    HelmReposDeleteResponse:\n      example:\n        name: stable\n        message: resource deleted successfully\n        status: 200\n      properties:\n        status:\n          example: 200\n          type: integer\n        message:\n          example: resource deleted successfully\n          type: string\n        name:\n          example: stable\n          type: string\n      type: object\n    HelmReposUpdateResponse:\n      example:\n        name: stable\n        message: resource modified successfully\n        status: 200\n      properties:\n        status:\n          example: 200\n          type: integer\n        message:\n          example: resource modified successfully\n          type: string\n        name:\n          example: stable\n          type: string\n      type: object\n    HelmChartsListResponse:\n      items:\n        properties:\n          name:\n            example: stable\n            type: string\n          charts:\n            items:\n              items:\n                properties:\n                  name:\n                    example: nginx-ingress\n                    type: string\n                  home:\n                    example: https://github.com/kubernetes/ingress-nginx\n                    type: string\n                  sources:\n                    example:\n                    - https://github.com/kubernetes/ingress-nginx\n                    items:\n                      type: string\n                    type: array\n                  version:\n                    example: 0.13.1\n                    type: string\n                  description:\n                    example: An nginx Ingress controller that uses ConfigMap to store\n                      the nginx configuration.\n                    type: string\n                  keywords:\n                    example:\n                    - ingress, nginx\n                    items:\n                      type: string\n                    type: array\n                  maintainers:\n                    items:\n                      properties:\n                        name:\n                          example: jackzampolin\n                          type: string\n                        email:\n                          example: jack.zampolin@gmail.com\n                          type: string\n                      type: object\n                    type: array\n                  engine:\n                    example: gotpl\n                    type: string\n                  icon:\n                    example: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n                    type: string\n                  appVersion:\n                    example: 0.12.0\n                    type: string\n                  apiVersion:\n                    example: v1\n                    type: string\n                  deprecated:\n                    example: false\n                    type: boolean\n                  urls:\n                    example:\n                    - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\n                    items:\n                      type: string\n                    type: array\n                  created:\n                    example: 2018-04-11T18:11:24.761440762Z\n                    type: string\n                  digest:\n                    example: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\n                    type: string\n                type: object\n              type: array\n            type: array\n        type: object\n      type: array\n    HelmChartDetailsResponse:\n      example:\n        versions:\n        - values: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==\n          readme: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK\n          chart:\n            maintainers:\n            - name: jackzampolin\n              email: jack.zampolin@gmail.com\n            - name: jackzampolin\n              email: jack.zampolin@gmail.com\n            appVersion: 0.12.0\n            sources:\n            - https://github.com/kubernetes/ingress-nginx\n            keywords:\n            - ingress, nginx\n            created: 2018-04-11T18:11:24.761440762Z\n            deprecated: false\n            icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n            description: An nginx Ingress controller that uses ConfigMap to store\n              the nginx configuration.\n            version: 0.13.1\n            home: https://github.com/kubernetes/ingress-nginx\n            urls:\n            - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\n            apiVersion: v1\n            engine: gotpl\n            name: nginx-ingress\n            digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\n        - values: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==\n          readme: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK\n          chart:\n            maintainers:\n            - name: jackzampolin\n              email: jack.zampolin@gmail.com\n            - name: jackzampolin\n              email: jack.zampolin@gmail.com\n            appVersion: 0.12.0\n            sources:\n            - https://github.com/kubernetes/ingress-nginx\n            keywords:\n            - ingress, nginx\n            created: 2018-04-11T18:11:24.761440762Z\n            deprecated: false\n            icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n            description: An nginx Ingress controller that uses ConfigMap to store\n              the nginx configuration.\n            version: 0.13.1\n            home: https://github.com/kubernetes/ingress-nginx\n            urls:\n            - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\n            apiVersion: v1\n            engine: gotpl\n            name: nginx-ingress\n            digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\n        repo: banzaicloud-stable\n        name: vault\n      properties:\n        name:\n          example: vault\n          type: string\n        repo:\n          example: banzaicloud-stable\n          type: string\n        versions:\n          items:\n            $ref: '#/components/schemas/HelmChartDetailsResponse_versions'\n          type: array\n    InstallSecretsRequest:\n      example:\n        query:\n          ids:\n          - 02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b\n          type: amazon\n          tags:\n          - repo:pipeline\n        namespace: default\n      properties:\n        namespace:\n          example: default\n          type: string\n        query:\n          $ref: '#/components/schemas/InstallSecretsRequest_query'\n      required:\n      - namespace\n      type: object\n    InstallSecretRequest:\n      example:\n        namespace: default\n        sourceSecretName: my-secret\n        spec:\n          key:\n            sourceMap:\n              key: sourceMap\n            source: source\n            value: value\n      properties:\n        sourceSecretName:\n          example: my-secret\n          type: string\n        namespace:\n          example: default\n          type: string\n        spec:\n          additionalProperties:\n            $ref: '#/components/schemas/InstallSecretRequestSpecItem'\n          type: object\n      required:\n      - namespace\n      type: object\n    InstallSecretRequestSpecItem:\n      example:\n        sourceMap:\n          key: sourceMap\n        source: source\n        value: value\n      properties:\n        source:\n          type: string\n        sourceMap:\n          additionalProperties:\n            type: string\n          type: object\n        value:\n          type: string\n      type: object\n    InstallSecretResponse:\n      example:\n        name: my-aws-secret\n      properties:\n        name:\n          example: my-aws-secret\n          type: string\n      required:\n      - name\n      type: object\n    TokenCreateRequest:\n      example:\n        virtualUser: banzaicloud/pipeline\n        name: my API token\n        expiresAt: 2018-03-09T13:24:49+01:00\n      properties:\n        name:\n          example: my API token\n          type: string\n        virtualUser:\n          example: banzaicloud/pipeline\n          type: string\n        expiresAt:\n          example: 2018-03-09T13:24:49+01:00\n          format: date-time\n          nullable: true\n          type: string\n      type: object\n    TokenCreateResponse:\n      example:\n        name: my API token\n        id: f24c74d7-53f3-4d78-b3d4-f23f89e81bec\n        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL3BpcGVsaW5lLmJhbnphaWNsb3VkLmNvbSIsImp0aSI6ImYyNGM3NGQ3LTUzZjMtNGQ3OC1iM2Q0LWYyM2Y4OWU4MWJlYyIsImlhdCI6MTUyNzg0NTQ1OCwiaXNzIjoiaHR0cHM6Ly9iYW56YWljbG91ZC5jb20vIiwic3ViIjoiMSIsInNjb3BlIjoiYXBpOmludm9rZSIsInR5cGUiOiJ1c2VyIiwidGV4dCI6ImJvbmlmYWlkbyJ9.DMQcM0De3A_R1JOPDGqharh9NIjz-uBFeJgiq5JSej0\n      properties:\n        id:\n          example: f24c74d7-53f3-4d78-b3d4-f23f89e81bec\n          type: string\n        token:\n          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL3BpcGVsaW5lLmJhbnphaWNsb3VkLmNvbSIsImp0aSI6ImYyNGM3NGQ3LTUzZjMtNGQ3OC1iM2Q0LWYyM2Y4OWU4MWJlYyIsImlhdCI6MTUyNzg0NTQ1OCwiaXNzIjoiaHR0cHM6Ly9iYW56YWljbG91ZC5jb20vIiwic3ViIjoiMSIsInNjb3BlIjoiYXBpOmludm9rZSIsInR5cGUiOiJ1c2VyIiwidGV4dCI6ImJvbmlmYWlkbyJ9.DMQcM0De3A_R1JOPDGqharh9NIjz-uBFeJgiq5JSej0\n          type: string\n        name:\n          example: my API token\n          type: string\n      required:\n      - id\n      - name\n      - token\n      type: object\n    TokenListResponseItem:\n      example:\n        createdAt: 2018-06-01T11:26:40.044297036+02:00\n        name: my API token\n        id: f24c74d7-53f3-4d78-b3d4-f23f89e81bec\n      properties:\n        id:\n          example: f24c74d7-53f3-4d78-b3d4-f23f89e81bec\n          type: string\n        createdAt:\n          example: 2018-06-01T11:26:40.044297036+02:00\n          type: string\n        name:\n          example: my API token\n          type: string\n      required:\n      - createdAt\n      - id\n      - name\n      type: object\n    SecretItem:\n      example:\n        updatedBy: banzaiuser\n        values:\n          type: \u003chidden\u003e\n          project_id: \u003chidden\u003e\n          private_key_id: \u003chidden\u003e\n          private_key: \u003chidden\u003e\n          client_email: \u003chidden\u003e\n          client_id: \u003chidden\u003e\n          auth_uri: \u003chidden\u003e\n          token_uri: \u003chidden\u003e\n          auth_provider_x509_cert_url: \u003chidden\u003e\n          client_x509_cert_url: \u003chidden\u003e\n        name: my-google-secret\n        id: 6fa2288c361becce3e30ba4c41be7d8ba01e3580566f7acc76a7f99994474c46\n        type: google\n        updatedAt: 2018-03-09T13:24:49+01:00\n        tags:\n        - tag1\n        - tag2\n      properties:\n        id:\n          example: 6fa2288c361becce3e30ba4c41be7d8ba01e3580566f7acc76a7f99994474c46\n          type: string\n        name:\n          example: my-google-secret\n          type: string\n        type:\n          example: google\n          type: string\n        updatedAt:\n          example: 2018-03-09T13:24:49+01:00\n          format: date-time\n          type: string\n        updatedBy:\n          example: banzaiuser\n          type: string\n        tags:\n          example:\n          - tag1\n          - tag2\n          items:\n            type: string\n          type: array\n        values:\n          example:\n            type: \u003chidden\u003e\n            project_id: \u003chidden\u003e\n            private_key_id: \u003chidden\u003e\n            private_key: \u003chidden\u003e\n            client_email: \u003chidden\u003e\n            client_id: \u003chidden\u003e\n            auth_uri: \u003chidden\u003e\n            token_uri: \u003chidden\u003e\n            auth_provider_x509_cert_url: \u003chidden\u003e\n            client_x509_cert_url: \u003chidden\u003e\n          type: object\n      type: object\n    SecretTags:\n      example:\n      - scope:tag1\n      - scope:tag2\n      items:\n        type: string\n      type: array\n    CreateSecretResponse:\n      example:\n        updatedBy: username\n        name: My-google-secret\n        id: 62bc3c75-91fb-4670-bad4-24b401a9deac\n        type: google\n        error: Validation failed\n        version: 1\n        updatedAt: 2018-07-01T08:27:23.2636996Z\n        tags:\n        - repo:pipeline\n        - tag2\n      properties:\n        name:\n          example: My-google-secret\n          type: string\n        type:\n          example: google\n          type: string\n        id:\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n        error:\n          example: Validation failed\n          type: string\n        updatedAt:\n          example: 2018-07-01T08:27:23.2636996Z\n          format: date-time\n          type: string\n        updatedBy:\n          example: username\n          type: string\n        version:\n          example: 1\n          type: integer\n        tags:\n          example:\n          - repo:pipeline\n          - tag2\n          items:\n            type: string\n          type: array\n      required:\n      - id\n      - name\n      - type\n      type: object\n    CreateSecretRequest:\n      example:\n        values:\n          type: string\n          project_id: string\n          private_key_id: string\n          private_key: string\n          client_email: string\n          client_id: string\n          auth_uri: string\n          token_uri: string\n          auth_provider_x509_cert_url: string\n          client_x509_cert_url: string\n        name: My google secret\n        type: google\n        tags:\n        - repo:pipeline\n        - tag2\n      properties:\n        name:\n          example: My google secret\n          type: string\n        type:\n          example: google\n          type: string\n        tags:\n          example:\n          - repo:pipeline\n          - tag2\n          items:\n            type: string\n          type: array\n        values:\n          example:\n            type: string\n            project_id: string\n            private_key_id: string\n            private_key: string\n            client_email: string\n            client_id: string\n            auth_uri: string\n            token_uri: string\n            auth_provider_x509_cert_url: string\n            client_x509_cert_url: string\n          type: object\n      required:\n      - name\n      - type\n      - values\n      type: object\n    SecretKeyValueAmazon:\n      properties:\n        AWS_ACCESS_KEY_ID:\n          type: string\n        AWS_SECRET_ACCESS_KEY:\n          type: string\n      required:\n      - AWS_ACCESS_KEY_ID\n      - AWS_SECRET_ACCESS_KEY\n      type: object\n    SecretKeyValueAzure:\n      properties:\n        AZURE_CLIENT_ID:\n          type: string\n        AZURE_CLIENT_SECRET:\n          type: string\n        AZURE_TENANT_ID:\n          type: string\n        AZURE_SUBSCRIPTION_ID:\n          type: string\n      required:\n      - AZURE_CLIENT_ID\n      - AZURE_CLIENT_SECRET\n      - AZURE_SUBSCRIPTION_ID\n      - AZURE_TENANT_ID\n      type: object\n    SecretKeyValueGoogle:\n      properties:\n        type:\n          type: string\n        project_id:\n          type: string\n        private_key_id:\n          type: string\n        private_key:\n          type: string\n        client_email:\n          type: string\n        client_id:\n          type: string\n        auth_uri:\n          type: string\n        token_uri:\n          type: string\n        auth_provider_x509_cert_url:\n          type: string\n        client_x509_cert_url:\n          type: string\n      required:\n      - auth_provider_x509_cert_url\n      - auth_uri\n      - client_email\n      - client_id\n      - client_x509_cert_url\n      - private_key\n      - private_key_id\n      - project_id\n      - token_uri\n      - type\n      type: object\n    SecretKeyValueOracle:\n      properties:\n        user_ocid:\n          type: string\n        tenancy_ocid:\n          type: string\n        api_key:\n          type: string\n        api_key_fingerprint:\n          type: string\n        region:\n          type: string\n        client_id:\n          type: string\n      required:\n      - api_key\n      - api_key_fingerprint\n      - compartment_ocid\n      - region\n      - tenancy_ocid\n      - user_ocid\n      type: object\n    SecretKeyValueTLS:\n      properties:\n        hosts:\n          type: string\n        validity:\n          type: string\n        caCert:\n          type: string\n        caKey:\n          type: string\n        serverCert:\n          type: string\n        serverKey:\n          type: string\n        clientCert:\n          type: string\n        clientKey:\n          type: string\n      required:\n      - hosts\n      type: object\n    SecretKeyValueKubernetes:\n      properties:\n        K8Sconfig:\n          type: string\n      type: object\n    SecretKeyValueGeneric:\n      properties:\n        any:\n          type: string\n      type: object\n    OrganizationListItemResponse:\n      example:\n        createdAt: 2018-03-09T13:24:49+01:00\n        name: me@example.com\n        id: 1\n        normalizedName: me-example-com\n        updatedAt: 2018-03-09T13:24:49+01:00\n      properties:\n        id:\n          example: 1\n          type: integer\n        createdAt:\n          example: 2018-03-09T13:24:49+01:00\n          type: string\n        updatedAt:\n          example: 2018-03-09T13:24:49+01:00\n          type: string\n        name:\n          example: me@example.com\n          type: string\n        normalizedName:\n          example: me-example-com\n          type: string\n      type: object\n    User:\n      example:\n        createdAt: 2018-03-09T13:24:49+01:00\n        image: githubImageUrl.com/imageId/3\n        name: myName\n        organizations: '{}'\n        id: 1\n        login: username\n        email: my@email.com\n        updatedAt: 2018-03-09T13:24:49+01:00\n      properties:\n        id:\n          example: 1\n          type: integer\n        createdAt:\n          example: 2018-03-09T13:24:49+01:00\n          type: string\n        updatedAt:\n          example: 2018-03-09T13:24:49+01:00\n          type: string\n        name:\n          example: myName\n          type: string\n        email:\n          example: my@email.com\n          type: string\n        login:\n          example: username\n          type: string\n        image:\n          example: githubImageUrl.com/imageId/3\n          type: string\n        organizations:\n          type: object\n      type: object\n    SecretTypeResponse:\n      example:\n        fields:\n        - name: name\n          isSafeToDisplay: true\n          description: description\n          required: true\n        - name: name\n          isSafeToDisplay: true\n          description: description\n          required: true\n      properties:\n        fields:\n          items:\n            $ref: '#/components/schemas/SecretTypeResponse_fields'\n          type: array\n      type: object\n    ListUserResponse:\n      items:\n        $ref: '#/components/schemas/User'\n      type: array\n    GetClusterStatusResponse:\n      example:\n        securityscan: false\n        creatorName: userName\n        creatorId: 1\n        startedAt: 2018-07-03T14:23:29+02:00\n        distribution: gke\n        monitoring: false\n        version: 1.12.6-gke.10\n        oidc:\n          clientId: clientId\n          idpUrl: idpUrl\n          clientSecret: clientSecret\n          enabled: true\n        statusMessage: Cluster is running\n        cloud: google\n        createdAt: 2018-07-03T14:23:19+02:00\n        spot: false\n        name: myClusterName\n        logging: false\n        totalSummary:\n          memory:\n            allocatable: \"4\"\n            request: 380m\n            limit: 100m\n            capacity: \"4\"\n          cpu:\n            allocatable: \"4\"\n            request: 380m\n            limit: 100m\n            capacity: \"4\"\n          status: status\n        location: us-central1-a\n        id: 1\n        nodePools:\n          key:\n            count: 1\n            instanceType: n1-standard-1\n        region: us-central1\n        status: RUNNING\n      properties:\n        status:\n          example: RUNNING\n          type: string\n        statusMessage:\n          example: Cluster is running\n          type: string\n        name:\n          example: myClusterName\n          type: string\n        cloud:\n          example: google\n          type: string\n        distribution:\n          example: gke\n          type: string\n        version:\n          example: 1.12.6-gke.10\n          type: string\n        spot:\n          example: false\n          type: boolean\n        location:\n          example: us-central1-a\n          type: string\n        id:\n          example: 1\n          type: integer\n        logging:\n          example: false\n          type: boolean\n        monitoring:\n          example: false\n          type: boolean\n        securityscan:\n          example: false\n          type: boolean\n        createdAt:\n          example: 2018-07-03T14:23:19+02:00\n          type: string\n        startedAt:\n          example: 2018-07-03T14:23:29+02:00\n          type: string\n        creatorName:\n          example: userName\n          type: string\n        creatorId:\n          example: 1\n          type: integer\n        region:\n          example: us-central1\n          type: string\n        oidc:\n          $ref: '#/components/schemas/OIDCConfig'\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/NodePoolStatus'\n          type: object\n        totalSummary:\n          $ref: '#/components/schemas/ResourceSummary'\n      type: object\n    NodePoolStatus:\n      example:\n        count: 1\n        instanceType: n1-standard-1\n      oneOf:\n      - $ref: '#/components/schemas/NodePoolStatusAmazon'\n      - $ref: '#/components/schemas/NodePoolStatusAzure'\n      - $ref: '#/components/schemas/NodePoolStatusGoogle'\n      - $ref: '#/components/schemas/NodePoolStatusOracle'\n      - $ref: '#/components/schemas/NodePoolStatusVSphere'\n    NodePoolStatusAmazon:\n      properties:\n        instanceType:\n          example: m4.xlarge\n          type: string\n        spotPrice:\n          example: \"0.2\"\n          type: string\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        image:\n          example: ami-4d485ca7\n          type: string\n        labels:\n          additionalProperties:\n            example: '{\"example.io/label1\":\"value1\"}'\n            type: string\n          type: object\n        resourceSummary:\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceSummary'\n          type: object\n      type: object\n    NodePoolStatusAzure:\n      properties:\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: Standard_D4_v2\n          type: string\n        resourceSummary:\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceSummary'\n          type: object\n      type: object\n    NodePoolStatusGoogle:\n      properties:\n        autoscaling:\n          example: true\n          type: boolean\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: n1-standard-1\n          type: string\n        resourceSummary:\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceSummary'\n          type: object\n      type: object\n    NodePoolStatusOracle:\n      properties:\n        count:\n          example: 1\n          type: integer\n        minCount:\n          example: 1\n          type: integer\n        maxCount:\n          example: 2\n          type: integer\n        instanceType:\n          example: VM.Standard1.1\n          type: string\n        image:\n          example: ami-4d485ca7\n          type: string\n        autoscaling:\n          example: false\n          type: boolean\n        resourceSummary:\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceSummary'\n          type: object\n      type: object\n    NodePoolStatusVSphere:\n      properties:\n        count:\n          example: 1\n          type: integer\n        ram:\n          example: 4096\n          type: integer\n        vcpu:\n          example: 2\n          type: integer\n        template:\n          example: centos-7-pke-202001171452\n          type: string\n        resourceSummary:\n          additionalProperties:\n            $ref: '#/components/schemas/ResourceSummary'\n          type: object\n      type: object\n    CreateObjectStoreBucketRequest:\n      example:\n        secretName: my-aws-secret\n        name: mybucket\n        secretId: secretId\n        properties:\n          amazon:\n            location: eu-west-1\n          alibaba:\n            location: eu-central-1\n          oracle:\n            location: location\n          google:\n            location: europe\n          azure:\n            resourceGroup: resourceGroup\n            location: westeurope\n            storageAccount: mystorageaccount\n      properties:\n        secretId:\n          type: string\n        secretName:\n          example: my-aws-secret\n          type: string\n        name:\n          example: mybucket\n          type: string\n        properties:\n          $ref: '#/components/schemas/CreateObjectStoreBucketProperties'\n      required:\n      - name\n      - properties\n      type: object\n    CreateObjectStoreBucketProperties:\n      example:\n        amazon:\n          location: eu-west-1\n        alibaba:\n          location: eu-central-1\n        oracle:\n          location: location\n        google:\n          location: europe\n        azure:\n          resourceGroup: resourceGroup\n          location: westeurope\n          storageAccount: mystorageaccount\n      properties:\n        alibaba:\n          $ref: '#/components/schemas/CreateAlibabaObjectStoreBucketProperties'\n        amazon:\n          $ref: '#/components/schemas/CreateAmazonObjectStoreBucketProperties'\n        azure:\n          $ref: '#/components/schemas/CreateAzureObjectStoreBucketProperties'\n        google:\n          $ref: '#/components/schemas/CreateGoogleObjectStoreBucketProperties'\n        oracle:\n          $ref: '#/components/schemas/CreateOracleObjectStoreBucketProperties'\n      type: object\n    CreateAlibabaObjectStoreBucketProperties:\n      example:\n        location: eu-central-1\n      nullable: true\n      properties:\n        location:\n          example: eu-central-1\n          type: string\n      required:\n      - location\n      type: object\n    CreateAmazonObjectStoreBucketProperties:\n      example:\n        location: eu-west-1\n      nullable: true\n      properties:\n        location:\n          example: eu-west-1\n          type: string\n      required:\n      - location\n      type: object\n    CreateGoogleObjectStoreBucketProperties:\n      example:\n        location: europe\n      nullable: true\n      properties:\n        location:\n          example: europe\n          type: string\n      required:\n      - location\n      type: object\n    CreateAzureObjectStoreBucketProperties:\n      example:\n        resourceGroup: resourceGroup\n        location: westeurope\n        storageAccount: mystorageaccount\n      nullable: true\n      properties:\n        storageAccount:\n          example: mystorageaccount\n          type: string\n        location:\n          example: westeurope\n          type: string\n        resourceGroup:\n          type: string\n      required:\n      - location\n      - resourceGroup\n      - storageAccount\n      type: object\n    CreateOracleObjectStoreBucketProperties:\n      example:\n        location: location\n      nullable: true\n      properties:\n        location:\n          type: string\n      required:\n      - location\n      type: object\n    CreateObjectStoreBucketResponse:\n      example:\n        cloud: amazon\n        name: mybucket\n      properties:\n        name:\n          example: mybucket\n          type: string\n        cloud:\n          enum:\n          - amazon\n          - azure\n          - google\n          - oracle\n          - alibaba\n          example: amazon\n          type: string\n      required:\n      - cloud\n      - name\n      type: object\n    BucketInfo:\n      example:\n        cloud: amazon\n        notes: There's no secret with this ID\n        oracle:\n          namespace: namespace\n        managed: true\n        name: mybucket\n        aks:\n          resourceGroup: resourceGroup\n          storageAccount: storageAccount\n        location: eu-west-1\n        secret:\n          accessId: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef\n          accessName: myaccesssecretname\n          name: mysecretname\n          id: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1\n        statusMessage: statusMessage\n        status: CREATING\n      properties:\n        name:\n          description: the name of the object storage / bucket\n          example: mybucket\n          type: string\n        managed:\n          description: true if the bucket has been created via pipeline\n          example: true\n          type: boolean\n        cloud:\n          description: cloud provider of the bucket\n          example: amazon\n          type: string\n        location:\n          description: location of the bucket\n          example: eu-west-1\n          type: string\n        notes:\n          description: notes for the bucket\n          example: There's no secret with this ID\n          type: string\n        secret:\n          $ref: '#/components/schemas/BucketInfo_secret'\n        aks:\n          $ref: '#/components/schemas/AzureBlobStorageProps'\n        oracle:\n          $ref: '#/components/schemas/OracleStorageProps'\n        status:\n          description: the status of the bucket\n          enum:\n          - CREATING\n          - AVAILABLE\n          - ERROR_CREATE\n          - DELETING\n          - ERROR_DELETE\n          type: string\n        statusMessage:\n          description: the reason for the error status\n          type: string\n      required:\n      - cloud\n      - location\n      - managed\n      - name\n      - status\n      type: object\n    ListStorageBucketsResponse:\n      items:\n        $ref: '#/components/schemas/BucketInfo'\n      type: array\n    SubnetInfo:\n      example:\n        name: MySubnet\n        location: us-central1-a\n        cidrs:\n        - 10.0.1.0/24\n        - 10.0.1.0/24\n        id: subnet-9d4a7b6c\n      properties:\n        cidrs:\n          description: The IPv4 CIDR blocks assigned to the subnet\n          items:\n            example: 10.0.1.0/24\n            type: string\n          type: array\n        id:\n          description: Identifier of the subnetwork\n          example: subnet-9d4a7b6c\n          type: string\n        location:\n          description: The location of the subnetwork.\n          example: us-central1-a\n          type: string\n        name:\n          description: Name of the subnetwork\n          example: MySubnet\n          type: string\n      required:\n      - cidrs\n      - id\n      type: object\n    ListVPCSubnetsResponse:\n      items:\n        $ref: '#/components/schemas/SubnetInfo'\n      type: array\n    RouteTableInfo:\n      example:\n        name: My little route table\n        id: rtb-12345678\n      properties:\n        id:\n          description: Identifier of the route table\n          example: rtb-12345678\n          type: string\n        name:\n          description: Name of the route table\n          example: My little route table\n          type: string\n      required:\n      - id\n      type: object\n    ListRouteTablesResponse:\n      items:\n        $ref: '#/components/schemas/RouteTableInfo'\n      type: array\n    VPCNetworkInfo:\n      example:\n        name: MyVPC\n        cidrs:\n        - 10.50.0.0/16\n        - 10.50.0.0/16\n        id: vpc-a01106c2\n      properties:\n        cidrs:\n          description: The IPv4 CIDR blocks assigned to the VPC network\n          items:\n            example: 10.50.0.0/16\n            type: string\n          type: array\n        id:\n          description: Identifier of the VPC network\n          example: vpc-a01106c2\n          type: string\n        name:\n          description: Name of the VPC network\n          example: MyVPC\n          type: string\n      required:\n      - cidrs\n      - id\n      type: object\n    ListVPCNetworksResponse:\n      items:\n        $ref: '#/components/schemas/VPCNetworkInfo'\n      type: array\n    AzureBlobStorageProps:\n      example:\n        resourceGroup: resourceGroup\n        storageAccount: storageAccount\n      properties:\n        resourceGroup:\n          type: string\n        storageAccount:\n          type: string\n      required:\n      - resourceGroup\n      - storageAccount\n      type: object\n    OracleStorageProps:\n      example:\n        namespace: namespace\n      properties:\n        namespace:\n          type: string\n      required:\n      - namespace\n      type: object\n    PodDetailsResponse:\n      items:\n        $ref: '#/components/schemas/PodItem'\n      type: array\n    PodItem:\n      example:\n        createdAt: 2018-08-01T09:04:33+02:00\n        resourceSummary:\n          memory:\n            allocatable: \"4\"\n            request: 380m\n            limit: 100m\n            capacity: \"4\"\n          cpu:\n            allocatable: \"4\"\n            request: 380m\n            limit: 100m\n            capacity: \"4\"\n          status: status\n        name: pipeline-traefik-7c47dc7bd7-twzpl\n        namespace: default\n        conditions:\n        - type: Initialized\n          lastTransitionTime: 2018-08-01T07:04:37Z\n          status: \"True\"\n          lastProbeTime: lastProbeTime\n        - type: Initialized\n          lastTransitionTime: 2018-08-01T07:04:37Z\n          status: \"True\"\n          lastProbeTime: lastProbeTime\n        restartPolicy: Always\n        labels:\n          app: pipeline-traefik\n          release: pipeline\n          chart: traefik-1.14.2\n      properties:\n        name:\n          example: pipeline-traefik-7c47dc7bd7-twzpl\n          type: string\n        namespace:\n          example: default\n          type: string\n        createdAt:\n          example: 2018-08-01T09:04:33+02:00\n          type: string\n        labels:\n          $ref: '#/components/schemas/PodItem_labels'\n        restartPolicy:\n          example: Always\n          type: string\n        conditions:\n          items:\n            $ref: '#/components/schemas/PodCondition'\n          type: array\n        resourceSummary:\n          $ref: '#/components/schemas/ResourceSummary'\n      type: object\n    PodCondition:\n      example:\n        type: Initialized\n        lastTransitionTime: 2018-08-01T07:04:37Z\n        status: \"True\"\n        lastProbeTime: lastProbeTime\n      properties:\n        type:\n          example: Initialized\n          type: string\n        status:\n          example: \"True\"\n          type: string\n        lastProbeTime:\n          type: string\n        lastTransitionTime:\n          example: 2018-08-01T07:04:37Z\n          type: string\n      type: object\n    OIDCConfig:\n      example:\n        clientId: clientId\n        idpUrl: idpUrl\n        clientSecret: clientSecret\n        enabled: true\n      properties:\n        enabled:\n          type: boolean\n        idpUrl:\n          type: string\n        clientId:\n          type: string\n        clientSecret:\n          type: string\n      type: object\n    ResourceSummary:\n      example:\n        memory:\n          allocatable: \"4\"\n          request: 380m\n          limit: 100m\n          capacity: \"4\"\n        cpu:\n          allocatable: \"4\"\n          request: 380m\n          limit: 100m\n          capacity: \"4\"\n        status: status\n      properties:\n        cpu:\n          $ref: '#/components/schemas/Resource'\n        memory:\n          $ref: '#/components/schemas/Resource'\n        status:\n          type: string\n      type: object\n    Resource:\n      example:\n        allocatable: \"4\"\n        request: 380m\n        limit: 100m\n        capacity: \"4\"\n      properties:\n        capacity:\n          example: \"4\"\n          type: string\n        allocatable:\n          example: \"4\"\n          type: string\n        limit:\n          example: 100m\n          type: string\n        request:\n          example: 380m\n          type: string\n      type: object\n    BasePostHook:\n      properties:\n        PostHookFunctionName:\n          type: object\n      type: object\n    PostHooks:\n      oneOf:\n      - $ref: '#/components/schemas/BasePostHook'\n      - $ref: '#/components/schemas/BasePostHook'\n    ReRunPostHook:\n      example:\n        InstallIngressController: null\n      type: object\n    CreateResourceGroup:\n      example:\n        name: newResourceGroupName\n        secretId: 62bc3c75-91fb-4670-bad4-24b401a9deac\n        location: westeurope\n      properties:\n        name:\n          example: newResourceGroupName\n          type: string\n        location:\n          example: westeurope\n          type: string\n        secretId:\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n      required:\n      - location\n      - name\n      - secretId\n      type: object\n    ResourceGroupCreated:\n      example:\n        name: NewResourceGroupName\n      properties:\n        name:\n          example: NewResourceGroupName\n          type: string\n      type: object\n    DeploymentScalingRequest:\n      example:\n        scaleTarget: k8sDeploymentName\n        minReplicas: 1\n        maxReplicas: 3\n        cpu:\n          targetAverageUtilization: 70\n        memory:\n          targetAverageValue: 500Mi\n        customMetrics:\n          custom_metric_name:\n            type: pod\n            targetAverageValue: 700m\n      properties:\n        scaleTarget:\n          example: k8sDeploymentName\n          type: string\n        minReplicas:\n          example: 1\n          format: int32\n          type: integer\n        maxReplicas:\n          example: 3\n          format: int32\n          type: integer\n        cpu:\n          $ref: '#/components/schemas/ResourceMetric'\n        memory:\n          $ref: '#/components/schemas/ResourceMetric'\n        customMetrics:\n          additionalProperties:\n            $ref: '#/components/schemas/CustomMetric'\n          example:\n            custom_metric_name:\n              type: pod\n              targetAverageValue: 700m\n          type: object\n      required:\n      - maxReplicas\n      - minReplicas\n      - scaleTarget\n      title: Create / Update Deployment Scaling Request\n      type: object\n    ResourceMetric:\n      properties:\n        targetAverageValue:\n          example: 700m\n          type: string\n        targetAverageValueType:\n          enum:\n          - quantity\n          - percentage\n          type: string\n      required:\n      - targetAverageValue\n      - targetAverageValueType\n      title: ResourceMetric\n      type: object\n    CustomMetric:\n      properties:\n        type:\n          example: pod\n          type: string\n        targetAverageValue:\n          example: 700m\n          type: string\n      required:\n      - targetValue\n      - type\n      title: CustomMetric\n      type: object\n    DeploymentScalingResponse:\n      example:\n      - scaleTarget: k8sDeploymentName\n        kind: Deployment\n        minReplicas: 1\n        maxReplicas: 3\n        cpu:\n          targetAverageValueType: percentage\n          targetAverageValue: 60\n          currentAverageValue: 0\n        memory:\n          targetAverageValueType: quantity\n          targetAverageValue: 1100Mi\n          currentAverageUtilization: quantity\n          currentAverageValue: 780013568\n        customMetrics:\n          custom_metric_name:\n            type: pod\n            targetAverageValue: 700m\n            currentAverageValue: 300m\n        status:\n          currentReplicas: 1\n          desiredReplicas: 1\n          message: 'ScalingActive = true, lastTransitionTime: 2018-00-22T15:31:16Z,\n            the HPA was able to successfully calculate a replica count from memory\n            resource'\n      items:\n        properties:\n          scaleTarget:\n            example: k8sDeploymentName\n            type: string\n          kind:\n            example: Deployment\n            type: string\n          minReplicas:\n            example: 1\n            format: int32\n            type: integer\n          maxReplicas:\n            example: 3\n            format: int32\n            type: integer\n          cpu:\n            $ref: '#/components/schemas/ResourceMetricStatus'\n          memory:\n            $ref: '#/components/schemas/ResourceMetricStatus'\n          customMetrics:\n            additionalProperties:\n              $ref: '#/components/schemas/CustomMetricStatus'\n            example:\n              custom_metric_name:\n                type: pod\n                targetAverageValue: 700m\n                currentAverageValue: 300m\n            type: object\n          status:\n            $ref: '#/components/schemas/DeploymentScaleStatus'\n        type: object\n      title: Get Deployment Scaling Response\n      type: array\n    ResourceMetricStatus:\n      properties:\n        allOf:\n          $ref: '#/components/schemas/ResourceMetric'\n        currentAverageValue:\n          example: 100m\n          type: string\n        currentAverageValueType:\n          enum:\n          - quantity\n          - percentage\n          type: string\n      type: object\n    CustomMetricStatus:\n      properties:\n        allOf:\n          $ref: '#/components/schemas/CustomMetric'\n        currentAverageValue:\n          example: 300m\n          type: string\n      type: object\n    DeploymentScaleStatus:\n      properties:\n        currentReplicas:\n          example: 1\n          format: int32\n          type: integer\n        desiredReplicas:\n          example: 1\n          format: int32\n          type: integer\n        message:\n          example: 'ScalingActive = true, lastTransitionTime: 2018-08-22T15:31:16Z,\n            the HPA was able to successfully calculate a replica count from memory\n            resource'\n          type: string\n      type: object\n    ScanLogList:\n      items:\n        $ref: '#/components/schemas/ScanLogItem'\n      type: array\n    ScanLogItem:\n      example:\n        result:\n        - nginx:latest policy check failed\n        - busybox:latest policy check success\n        image:\n        - lastUpdated: 2018-11-11T14:35:38Z\n          imageName: docker.io/redis\n          imageTag: latest\n          imageDigest: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac\n        - lastUpdated: 2018-11-11T14:35:38Z\n          imageName: docker.io/redis\n          imageTag: latest\n          imageDigest: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac\n        resource: banzaicloud\n        releaseName: flying-monkey\n        action: allow\n      properties:\n        releaseName:\n          example: flying-monkey\n          type: string\n        resource:\n          example: banzaicloud\n          type: string\n        image:\n          items:\n            $ref: '#/components/schemas/ScanLogItemImage'\n          type: array\n        result:\n          example:\n          - nginx:latest policy check failed\n          - busybox:latest policy check success\n          items:\n            type: string\n          type: array\n        action:\n          enum:\n          - allow\n          - reject\n          example: allow\n          type: string\n      type: object\n    ScanLogItemImage:\n      example:\n        lastUpdated: 2018-11-11T14:35:38Z\n        imageName: docker.io/redis\n        imageTag: latest\n        imageDigest: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac\n      properties:\n        imageName:\n          example: docker.io/redis\n          type: string\n        imageTag:\n          example: latest\n          type: string\n        imageDigest:\n          example: sha256:93ce9120377effb33fc8ab25cc5fb6ab736982aa4524adb89324c031e47b33ac\n          type: string\n        lastUpdated:\n          example: 2018-11-11T14:35:38Z\n          type: string\n      type: object\n    ReleaseWhiteList:\n      items:\n        $ref: '#/components/schemas/ReleaseWhiteListItem'\n      type: array\n    ReleaseWhiteListItem:\n      example:\n        owner: banzaicloud\n        reason: test release\n        name: flying-monkey-wl\n      properties:\n        name:\n          example: flying-monkey-wl\n          type: string\n        owner:\n          example: banzaicloud\n          type: string\n        reason:\n          example: test release\n          type: string\n      required:\n      - name\n      - owner\n      type: object\n    DeploymentImageList:\n      items:\n        $ref: '#/components/schemas/ClusterImage'\n      type: array\n    ClusterImageList:\n      items:\n        $ref: '#/components/schemas/ClusterImage'\n      type: array\n    ClusterImage:\n      example:\n        imageName: docker.io/alpine\n        imageTag: latest\n        imageDigest: imageDigest\n      properties:\n        imageName:\n          example: docker.io/alpine\n          type: string\n        imageTag:\n          example: latest\n          type: string\n        imageDigest:\n          type: string\n      type: object\n    GoogleProjects:\n      description: List of Google Cloud projects.\n      example:\n        projects:\n        - lifecycleState: lifecycleState\n          projectNumber: projectNumber\n          name: name\n          projectId: projectId\n        - lifecycleState: lifecycleState\n          projectNumber: projectNumber\n          name: name\n          projectId: projectId\n      properties:\n        projects:\n          items:\n            $ref: '#/components/schemas/GoogleProject'\n          type: array\n      type: object\n    GoogleProject:\n      description: Details of a Google Cloud project.\n      example:\n        lifecycleState: lifecycleState\n        projectNumber: projectNumber\n        name: name\n        projectId: projectId\n      properties:\n        name:\n          type: string\n        projectId:\n          type: string\n        projectNumber:\n          type: string\n        lifecycleState:\n          type: string\n      type: object\n    EKSVpc:\n      properties:\n        vpcId:\n          description: The identifier of existing VPC to be used for creating the\n            EKS cluster. If not provided a new VPC is created for the cluster.\n          type: string\n        cidr:\n          default: 192.168.0.0/16\n          description: The CIDR range for the VPC in case new VPC is created.\n          type: string\n      type: object\n    EKSSubnet:\n      properties:\n        subnetId:\n          description: Id of existing subnet to use for creating the EKS cluster.\n            If not provided new subnet will be created.\n          type: string\n        cidr:\n          description: The CIDR range for the subnet in case new Subnet is created.\n          type: string\n        availabilityZone:\n          description: The AZ to create the subnet into.\n          type: string\n      type: object\n    EKSIam:\n      properties:\n        clusterRoleId:\n          description: The identifier of existing IAM role to be used for creating\n            the EKS cluster. If not provided a new IAM role is created for the cluster\n            (requires IAM Write Access).\n          type: string\n        nodeInstanceRoleId:\n          description: The identifier of existing IAM role to be used for creating\n            the EKS nodes. If not provided a new IAM role is created for the nodes\n            (requires IAM Write Access).\n          type: string\n        defaultUser:\n          default: false\n          description: Marks if the userid associated with the clusters AWS secret\n            has to be used in kubeconfig (bypasses IAM user creation).\n          type: boolean\n      type: object\n    GetClusterBootstrapResponse:\n      example:\n        masterAddress: 8.9.10.11:443\n        discoveryTokenCaCertHash: discoveryTokenCaCertHash\n        token: r6pyrk.6n1wv3twavjcnevr\n      properties:\n        token:\n          example: r6pyrk.6n1wv3twavjcnevr\n          type: string\n        discoveryTokenCaCertHash:\n          type: string\n        masterAddress:\n          example: 8.9.10.11:443\n          type: string\n      type: object\n    GetPKECommandsResponse:\n      example:\n        additionalProperties: pke-installer install --pipeline-url=\"http://127.0.0.1:9090\"\n          --pipeline-token=XXX --pipeline-org-id=3 --pipeline-cluster-id=19 --node-pool=\"distrMaster\"\n          --role=master\n      properties:\n        additionalProperties:\n          example: pke-installer install --pipeline-url=\"http://127.0.0.1:9090\" --pipeline-token=XXX\n            --pipeline-org-id=3 --pipeline-cluster-id=19 --node-pool=\"distrMaster\"\n            --role=master\n          type: string\n      type: object\n    PostReadyPKENodeRequest:\n      properties:\n        config:\n          description: kubeconfig in base64 or empty if not a master\n          example: c3ppYQo=\n          type: string\n        name:\n          description: name of node\n          example: my-node\n          type: string\n        nodePool:\n          description: name of nodepool\n          example: master\n          type: string\n        ip:\n          description: ip address of node (where the other nodes can reach it)\n          example: 127.0.0.1\n          type: string\n        master:\n          description: if this node is a master node\n          example: true\n          type: boolean\n        worker:\n          description: if this node is a worker node\n          example: false\n          type: boolean\n      type: object\n    ReportPKENodeStatusRequest:\n      properties:\n        name:\n          description: name of node\n          example: my-node\n          type: string\n        nodePool:\n          description: name of nodepool\n          example: master\n          type: string\n        ip:\n          description: ip address of node (where the other nodes can reach it)\n          example: 127.0.0.1\n          type: string\n        message:\n          description: detailed description about the current bootstrapping status\n            (including the cause of the failure)\n          example: installing docker daemon\n          type: string\n        phase:\n          description: the current phase of the bootstrap process\n          example: pre-flight\n          type: string\n        final:\n          description: if this is the final status report, that describes the conclusion\n            of the whole process\n          type: boolean\n        status:\n          $ref: '#/components/schemas/ProcessStatus'\n        timestamp:\n          description: exact time of event\n          format: date-time\n          nullable: true\n          type: string\n        processId:\n          description: ID of the process registered earlier (register new process\n            if empty)\n          type: string\n      type: object\n    PKEClusterReadinessResponse:\n      example:\n        master:\n          ready: true\n      properties:\n        master:\n          $ref: '#/components/schemas/PKEClusterReadinessResponse_master'\n      type: object\n    PostLeaderElectionRequest:\n      example:\n        hostname: node-0.my.cloud.com\n        ip: 10.20.30.40\n      properties:\n        hostname:\n          example: node-0.my.cloud.com\n          type: string\n        ip:\n          example: 10.20.30.40\n          type: string\n      required:\n      - hostname\n      type: object\n    UpdateClusterRequest:\n      oneOf:\n      - $ref: '#/components/schemas/EksUpdateClusterRequest'\n      - $ref: '#/components/schemas/EksUpdateClusterRequest'\n    EksUpdateClusterRequest:\n      properties:\n        version:\n          example: \"1.17\"\n          type: string\n      type: object\n    PostLeaderElectionResponse:\n      example:\n        hostname: node-0.my.cloud.com\n        ip: 10.20.30.40\n      properties:\n        hostname:\n          example: node-0.my.cloud.com\n          type: string\n        ip:\n          example: 10.20.30.40\n          type: string\n      required:\n      - hostname\n      type: object\n    GetRestoreResponse:\n      $ref: '#/components/schemas/RestoreResponse'\n    GetRestoreResultsResponse:\n      $ref: '#/components/schemas/RestoreResultsResponse'\n    ListRestoresResponse:\n      items:\n        $ref: '#/components/schemas/RestoreResponse'\n      type: array\n    ListSchedulesResponse:\n      items:\n        $ref: '#/components/schemas/ScheduleResponse'\n      type: array\n    ListBackupsResponse:\n      items:\n        $ref: '#/components/schemas/BackupResponse'\n      type: array\n    GetBackupResponse:\n      $ref: '#/components/schemas/BackupResponse'\n    CreateBackupBucketResponse:\n      $ref: '#/components/schemas/BackupBucketResponse'\n    BackupServiceStatusResponse:\n      $ref: '#/components/schemas/BackupServiceResponse'\n    ListBackupBucketsResponse:\n      items:\n        $ref: '#/components/schemas/BackupBucketResponse'\n      type: array\n    GetBackupBucketResponse:\n      $ref: '#/components/schemas/DeployedBackupBucketResponse'\n    RestoreResultARK:\n      example: []\n      items:\n        type: string\n      type: array\n    RestoreResultCluster:\n      example: []\n      items:\n        type: string\n      type: array\n    RestoreResultNamespaces:\n      additionalProperties:\n        items:\n          example: '[]'\n          type: string\n        type: array\n      type: object\n    RestoreResultNamespacesWarnings:\n      additionalProperties:\n        items:\n          description: warnings during restoration process\n          example: '{\"default\":[\"not restored: services \\\"kubernetes\\\" already exists\n            and is different from backed up version.\",\"not restored: services \\\"pipeline-traefik-metrics-prometheus\\\"\n            already exists and is different from backed up version.\",\"not restored:\n            services \\\"pipeline-traefik\\\" already exists and is different from backed\n            up version.\"]}'\n          type: string\n        type: array\n      type: object\n    RestoreResultErrors:\n      example:\n        cluster: []\n        ark: []\n        namespaces:\n          key:\n          - '[]'\n          - '[]'\n      properties:\n        ark:\n          example: []\n          items:\n            type: string\n          type: array\n        cluster:\n          example: []\n          items:\n            type: string\n          type: array\n        namespaces:\n          additionalProperties:\n            items:\n              example: '[]'\n              type: string\n            type: array\n          type: object\n      type: object\n    RestoreResultWarnings:\n      example:\n        cluster: []\n        ark: []\n        namespaces:\n          key:\n          - '{\"default\":[\"not restored: services \\\"kubernetes\\\" already exists and\n            is different from backed up version.\",\"not restored: services \\\"pipeline-traefik-metrics-prometheus\\\"\n            already exists and is different from backed up version.\",\"not restored:\n            services \\\"pipeline-traefik\\\" already exists and is different from backed\n            up version.\"]}'\n          - '{\"default\":[\"not restored: services \\\"kubernetes\\\" already exists and\n            is different from backed up version.\",\"not restored: services \\\"pipeline-traefik-metrics-prometheus\\\"\n            already exists and is different from backed up version.\",\"not restored:\n            services \\\"pipeline-traefik\\\" already exists and is different from backed\n            up version.\"]}'\n      properties:\n        ark:\n          example: []\n          items:\n            type: string\n          type: array\n        cluster:\n          example: []\n          items:\n            type: string\n          type: array\n        namespaces:\n          additionalProperties:\n            items:\n              description: warnings during restoration process\n              example: '{\"default\":[\"not restored: services \\\"kubernetes\\\" already\n                exists and is different from backed up version.\",\"not restored: services\n                \\\"pipeline-traefik-metrics-prometheus\\\" already exists and is different\n                from backed up version.\",\"not restored: services \\\"pipeline-traefik\\\"\n                already exists and is different from backed up version.\"]}'\n              type: string\n            type: array\n          type: object\n      type: object\n    RestoreResultsResponse:\n      example:\n        warnings:\n          cluster: []\n          ark: []\n          namespaces:\n            key:\n            - '{\"default\":[\"not restored: services \\\"kubernetes\\\" already exists and\n              is different from backed up version.\",\"not restored: services \\\"pipeline-traefik-metrics-prometheus\\\"\n              already exists and is different from backed up version.\",\"not restored:\n              services \\\"pipeline-traefik\\\" already exists and is different from backed\n              up version.\"]}'\n            - '{\"default\":[\"not restored: services \\\"kubernetes\\\" already exists and\n              is different from backed up version.\",\"not restored: services \\\"pipeline-traefik-metrics-prometheus\\\"\n              already exists and is different from backed up version.\",\"not restored:\n              services \\\"pipeline-traefik\\\" already exists and is different from backed\n              up version.\"]}'\n        errors:\n          cluster: []\n          ark: []\n          namespaces:\n            key:\n            - '[]'\n            - '[]'\n      properties:\n        errors:\n          $ref: '#/components/schemas/RestoreResultErrors'\n        warnings:\n          $ref: '#/components/schemas/RestoreResultWarnings'\n      type: object\n    RestoreResponse:\n      example:\n        uid: 494ec414-b6cb-11e8-9916-42010aa400f6\n        warnings: 3\n        name: full-backup-schedule-20180912223445\n        options:\n          includedNamespaces:\n          - '*'\n          includedResources:\n          - '*'\n          excludedNamespaces: []\n          excludedResources: []\n          snapshotVolumes: true\n          includeClusterResources: true\n        id: 1\n        backupName: full-backup-schedule\n        errors: 0\n        status: InProgress\n      properties:\n        id:\n          example: 1\n          type: integer\n        uid:\n          example: 494ec414-b6cb-11e8-9916-42010aa400f6\n          type: string\n        name:\n          example: full-backup-schedule-20180912223445\n          type: string\n        backupName:\n          example: full-backup-schedule\n          type: string\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n        status:\n          example: InProgress\n          type: string\n        warnings:\n          example: 3\n          type: integer\n        errors:\n          example: 0\n          type: integer\n      type: object\n    CreateRestoreRequest:\n      example:\n        options:\n          includedNamespaces:\n          - '*'\n          includedResources:\n          - '*'\n          excludedNamespaces: []\n          excludedResources: []\n          snapshotVolumes: true\n          includeClusterResources: true\n        backupName: full-backup\n      properties:\n        backupName:\n          example: full-backup\n          type: string\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n      required:\n      - backupName\n      type: object\n    CreateRestoreResponse:\n      example:\n        restore:\n          uid: 494ec414-b6cb-11e8-9916-42010aa400f6\n          warnings: 3\n          name: full-backup-schedule-20180912223445\n          options:\n            includedNamespaces:\n            - '*'\n            includedResources:\n            - '*'\n            excludedNamespaces: []\n            excludedResources: []\n            snapshotVolumes: true\n            includeClusterResources: true\n          id: 1\n          backupName: full-backup-schedule\n          errors: 0\n          status: InProgress\n        status: 200\n      properties:\n        restore:\n          $ref: '#/components/schemas/RestoreResponse'\n        status:\n          example: 200\n          type: integer\n      type: object\n    DeleteRestoreResponse:\n      example:\n        id: 1\n        status: 200\n      properties:\n        id:\n          example: 1\n          type: integer\n        status:\n          example: 200\n          type: integer\n      type: object\n    CreateScheduleRequest:\n      example:\n        schedule: 0 */6 * * *\n        name: full-backup-schedule\n        options:\n          includedNamespaces:\n          - '*'\n          includedResources:\n          - '*'\n          excludedNamespaces: []\n          excludedResources: []\n          snapshotVolumes: true\n          includeClusterResources: true\n        ttl: 720h0m0s\n        labels:\n          backup-type: full\n      properties:\n        name:\n          example: full-backup-schedule\n          type: string\n        schedule:\n          example: 0 */6 * * *\n          type: string\n        ttl:\n          example: 720h0m0s\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n      required:\n      - name\n      - schedule\n      - ttl\n      type: object\n    DeleteScheduleResponse:\n      example:\n        name: full-backup-schedule\n        status: 200\n      properties:\n        name:\n          example: full-backup-schedule\n          type: string\n        status:\n          example: 200\n          type: integer\n      type: object\n    CreateScheduleResponse:\n      example:\n        name: full-backup-schedule\n        status: 200\n      properties:\n        name:\n          example: full-backup-schedule\n          type: string\n        status:\n          example: 200\n          type: integer\n      type: object\n    ScheduleResponse:\n      example:\n        uid: 432d4d27-b48f-11e8-9916-42010aa400f6\n        schedule: 0 */6 * * *\n        lastBackup: 2018-09-13T11:59:11+02:00\n        name: full-backup-schedule\n        options:\n          includedNamespaces:\n          - '*'\n          includedResources:\n          - '*'\n          excludedNamespaces: []\n          excludedResources: []\n          snapshotVolumes: true\n          includeClusterResources: true\n        ttl: 720h0m0s\n        labels:\n          backup-type: full\n        status: Enabled\n      properties:\n        uid:\n          example: 432d4d27-b48f-11e8-9916-42010aa400f6\n          type: string\n        name:\n          example: full-backup-schedule\n          type: string\n        schedule:\n          example: 0 */6 * * *\n          type: string\n        ttl:\n          example: 720h0m0s\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n        status:\n          example: Enabled\n          type: string\n        lastBackup:\n          example: 2018-09-13T11:59:11+02:00\n          type: string\n      type: object\n    CreateBackupRequest:\n      example:\n        name: full-backup\n        options:\n          includedNamespaces:\n          - '*'\n          includedResources:\n          - '*'\n          excludedNamespaces: []\n          excludedResources: []\n          snapshotVolumes: true\n          includeClusterResources: true\n        ttl: 30m\n        labels:\n          backup-type: full\n      properties:\n        name:\n          example: full-backup\n          type: string\n        ttl:\n          example: 30m\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n      required:\n      - name\n      - ttl\n      type: object\n    CreateBackupResponse:\n      example:\n        id: 1\n        status: 200\n      properties:\n        id:\n          example: 1\n          type: integer\n        status:\n          example: 200\n          type: integer\n      type: object\n    DeleteBackupResponse:\n      example:\n        id: 1\n        status: 200\n      properties:\n        id:\n          example: 1\n          type: integer\n        status:\n          example: 200\n          type: integer\n      type: object\n    BackupResponse:\n      example:\n        cloud: google\n        uid: 432d4d27-b48f-11e8-9916-42010aa400f6\n        name: full-backup\n        options:\n          includedNamespaces:\n          - '*'\n          includedResources:\n          - '*'\n          excludedNamespaces: []\n          excludedResources: []\n          snapshotVolumes: true\n          includeClusterResources: true\n        id: 1\n        clusterId: 1\n        distribution: gke\n        expireAt: 2018-10-10T02:20:03+02:00\n        ttl: 720h0m0s\n        startAt: 2018-09-10T02:20:03+02:00\n        labels:\n          backup-type: full\n        status: Completed\n      properties:\n        id:\n          example: 1\n          type: integer\n        uid:\n          example: 432d4d27-b48f-11e8-9916-42010aa400f6\n          type: string\n        name:\n          example: full-backup\n          type: string\n        ttl:\n          example: 720h0m0s\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n        cloud:\n          example: google\n          type: string\n        distribution:\n          example: gke\n          type: string\n        status:\n          example: Completed\n          type: string\n        startAt:\n          example: 2018-09-10T02:20:03+02:00\n          type: string\n        expireAt:\n          example: 2018-10-10T02:20:03+02:00\n          type: string\n        clusterId:\n          example: 1\n          type: integer\n      type: object\n    CreateBackupBucketRequest:\n      example:\n        cloud: google\n        bucketName: ark-backup-bucket-123\n        resourceGroup: my-resource-group\n        prefix: my-backup-prefix\n        secretId: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\n        location: us-east\n        storageAccount: my-storage-account\n      properties:\n        cloud:\n          example: google\n          type: string\n        bucketName:\n          example: ark-backup-bucket-123\n          type: string\n        secretId:\n          example: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\n          type: string\n        prefix:\n          description: Optional, if not provided will be set to the name of the cluster\n          example: my-backup-prefix\n          type: string\n        location:\n          example: us-east\n          type: string\n        storageAccount:\n          description: required only in case of Azure\n          example: my-storage-account\n          type: string\n        resourceGroup:\n          description: required only case of Azure\n          example: my-resource-group\n          type: string\n      required:\n      - bucketName\n      - cloud\n      - secretId\n      type: object\n    BackupBucketResponse:\n      example:\n        cloud: google\n        name: ark-backup-bucket-123\n        inUse: false\n        secretId: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\n        id: 5\n        status: available\n      properties:\n        id:\n          example: 5\n          type: integer\n        name:\n          example: ark-backup-bucket-123\n          type: string\n        cloud:\n          example: google\n          type: string\n        secretId:\n          example: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\n          type: string\n        status:\n          example: available\n          type: string\n        inUse:\n          example: false\n          type: boolean\n      type: object\n    DeployedBackupBucketResponse:\n      example:\n        cloud: google\n        deploymentId: 1\n        name: ark-backup-bucket-123\n        inUse: false\n        secretId: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\n        id: 5\n        clusterId: 1\n        clusterCloud: google\n        status: deployed\n        clusterDistribution: gke\n      properties:\n        id:\n          example: 5\n          type: integer\n        name:\n          example: ark-backup-bucket-123\n          type: string\n        cloud:\n          example: google\n          type: string\n        secretId:\n          example: 61b9707ca463cad79188bb0ddfa1345e41fc01b651feddf06eea58a25c56d717\n          type: string\n        status:\n          example: deployed\n          type: string\n        inUse:\n          example: false\n          type: boolean\n        deploymentId:\n          example: 1\n          type: integer\n        clusterId:\n          example: 1\n          type: integer\n        clusterCloud:\n          example: google\n          type: string\n        clusterDistribution:\n          example: gke\n          type: string\n      type: object\n    DeleteBackupBucketResponse:\n      example:\n        id: 1\n        status: 200\n      properties:\n        id:\n          example: 1\n          type: integer\n        status:\n          example: 200\n          type: integer\n      type: object\n    DisableARKResponse:\n      example:\n        status: 200\n      properties:\n        status:\n          example: 200\n          type: integer\n      type: object\n    EnableARKResponse:\n      example:\n        status: 200\n      properties:\n        status:\n          example: 200\n          type: integer\n      type: object\n    EnableARKRequest:\n      properties:\n        cloud:\n          example: google\n          type: string\n        bucketName:\n          example: ark-backup-bucket-123\n          type: string\n        schedule:\n          example: 0 */6 * * *\n          type: string\n        ttl:\n          example: 1h\n          type: string\n        secretId:\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n        location:\n          example: us-east\n          type: string\n        useClusterSecret:\n          description: relevant only in case of Amazon clusters. By default set to\n            false in which case you must add snapshot permissions to your node instance\n            role. Should you set to true Pipeline will deploy your cluster secret\n            to the cluster.\n          example: false\n          type: boolean\n        serviceAccountRoleARN:\n          description: relevant only in case of Amazon clusters. This a third option\n            to give permissions for volume snapshots to Velero, besides the default\n            NodeInstance role or cluster secret deployment.\n          example: arn:aws:iam::AWS_ACCOUNT_ID:role/IAM_ROLE_NAME\n          type: string\n        storageAccount:\n          description: required only case of Azure\n          example: my-storage-account\n          type: string\n        resourceGroup:\n          description: required only case of Azure\n          example: my-resource-group\n          type: string\n        labels:\n          $ref: '#/components/schemas/Labels'\n        options:\n          $ref: '#/components/schemas/BackupOptions'\n      required:\n      - bucketName\n      - cloud\n      - schedule\n      - secretId\n      - ttl\n      type: object\n    Labels:\n      example:\n        backup-type: full\n      properties:\n        backup-type:\n          example: full\n          type: string\n      title: Labels\n      type: object\n    BackupOptions:\n      example:\n        includedNamespaces:\n        - '*'\n        includedResources:\n        - '*'\n        excludedNamespaces: []\n        excludedResources: []\n        snapshotVolumes: true\n        includeClusterResources: true\n      properties:\n        includedNamespaces:\n          example:\n          - '*'\n          items:\n            type: string\n          type: array\n        includedResources:\n          example:\n          - '*'\n          items:\n            type: string\n          type: array\n        excludedNamespaces:\n          example: []\n          items:\n            type: string\n          type: array\n        excludedResources:\n          example: []\n          items:\n            type: string\n          type: array\n        snapshotVolumes:\n          example: true\n          type: boolean\n        includeClusterResources:\n          example: true\n          type: boolean\n      title: Backup Options\n      type: object\n    GetLeaderElectionResponse:\n      example:\n        hostname: node-0.my.cloud.com\n        ip: 10.20.30.40\n      properties:\n        hostname:\n          example: node-0.my.cloud.com\n          type: string\n        ip:\n          example: 10.20.30.40\n          type: string\n      required:\n      - hostname\n      type: object\n    api.ClusterGroup:\n      example:\n        organizationId: 0\n        uid: uid\n        enabledFeatures:\n        - enabledFeatures\n        - enabledFeatures\n        members:\n        - cloud: google\n          name: clusterName\n          id: 1001\n          distribution: gke\n          status: status\n        - cloud: google\n          name: clusterName\n          id: 1001\n          distribution: gke\n          status: status\n        name: name\n        id: 10\n      properties:\n        enabledFeatures:\n          items:\n            type: string\n          type: array\n        id:\n          example: 10\n          type: integer\n        members:\n          items:\n            $ref: '#/components/schemas/api.Member'\n          type: array\n        name:\n          type: string\n        organizationId:\n          type: integer\n        uid:\n          type: string\n      type: object\n    api.CreateRequest:\n      properties:\n        members:\n          items:\n            type: integer\n          type: array\n        name:\n          example: cluster_group_name\n          type: string\n      type: object\n    api.CreateResponse:\n      example:\n        name: cluster_group_name\n        id: 0\n      properties:\n        id:\n          type: integer\n        name:\n          example: cluster_group_name\n          type: string\n      type: object\n    api.FeatureRequest:\n      type: object\n    api.FeatureResponse:\n      example:\n        lastReconcileError: lastReconcileError\n        clusterGroup:\n          organizationId: 0\n          uid: uid\n          enabledFeatures:\n          - enabledFeatures\n          - enabledFeatures\n          members:\n          - cloud: google\n            name: clusterName\n            id: 1001\n            distribution: gke\n            status: status\n          - cloud: google\n            name: clusterName\n            id: 1001\n            distribution: gke\n            status: status\n          name: name\n          id: 10\n        reconcileState: reconcileState\n        name: name\n        enabled: true\n        properties: '{}'\n        status: '{}'\n      properties:\n        clusterGroup:\n          $ref: '#/components/schemas/api.ClusterGroup'\n        enabled:\n          type: boolean\n        lastReconcileError:\n          type: string\n        name:\n          type: string\n        properties:\n          type: object\n        reconcileState:\n          type: string\n        status:\n          type: object\n      type: object\n    api.Member:\n      example:\n        cloud: google\n        name: clusterName\n        id: 1001\n        distribution: gke\n        status: status\n      properties:\n        cloud:\n          example: google\n          type: string\n        distribution:\n          example: gke\n          type: string\n        id:\n          example: 1001\n          type: integer\n        name:\n          example: clusterName\n          type: string\n        status:\n          type: string\n      type: object\n    api.UpdateRequest:\n      properties:\n        members:\n          items:\n            type: integer\n          type: array\n        name:\n          example: cluster_group_name\n          type: string\n      type: object\n    api.UpdateResponse:\n      example:\n        name: cluster_group_name\n        id: 0\n      properties:\n        id:\n          type: integer\n        name:\n          example: cluster_group_name\n          type: string\n      type: object\n    deployment.ClusterGroupDeployment:\n      properties:\n        atomic:\n          type: boolean\n        dryrun:\n          type: boolean\n        name:\n          type: string\n        namespace:\n          type: string\n        package:\n          items:\n            type: integer\n          type: array\n        releaseName:\n          type: string\n        reuseValues:\n          type: boolean\n        rollingMode:\n          type: boolean\n        valueOverrides:\n          type: object\n        values:\n          type: object\n        version:\n          type: string\n      required:\n      - name\n      type: object\n    deployment.CreateUpdateDeploymentResponse:\n      example:\n        releaseName: releaseName\n        targetClusters:\n        - cloud: cloud\n          stale: true\n          clusterName: clusterName\n          clusterId: 0\n          distribution: distribution\n          error: error\n          version: version\n          status: status\n        - cloud: cloud\n          stale: true\n          clusterName: clusterName\n          clusterId: 0\n          distribution: distribution\n          error: error\n          version: version\n          status: status\n      properties:\n        releaseName:\n          type: string\n        targetClusters:\n          items:\n            $ref: '#/components/schemas/deployment.TargetClusterStatus'\n          type: array\n      type: object\n    deployment.DeploymentInfo:\n      example:\n        createdAt: createdAt\n        chartName: chartName\n        chartVersion: chartVersion\n        releaseName: releaseName\n        values: '{}'\n        namespace: namespace\n        description: description\n        valueOverrides: '{}'\n        targetClusters:\n        - cloud: cloud\n          stale: true\n          clusterName: clusterName\n          clusterId: 0\n          distribution: distribution\n          error: error\n          version: version\n          status: status\n        - cloud: cloud\n          stale: true\n          clusterName: clusterName\n          clusterId: 0\n          distribution: distribution\n          error: error\n          version: version\n          status: status\n        chart: chart\n        version: 0\n        updatedAt: updatedAt\n      properties:\n        chart:\n          type: string\n        chartName:\n          type: string\n        chartVersion:\n          type: string\n        createdAt:\n          type: string\n        description:\n          type: string\n        namespace:\n          type: string\n        releaseName:\n          type: string\n        targetClusters:\n          items:\n            $ref: '#/components/schemas/deployment.TargetClusterStatus'\n          type: array\n        updatedAt:\n          type: string\n        valueOverrides:\n          type: object\n        values:\n          type: object\n        version:\n          type: integer\n      type: object\n    deployment.ListDeploymentResponse:\n      example:\n        createdAt: createdAt\n        chartName: chartName\n        chartVersion: chartVersion\n        releaseName: releaseName\n        namespace: namespace\n        chart: chart\n        version: 0\n        updatedAt: updatedAt\n      properties:\n        chart:\n          type: string\n        chartName:\n          type: string\n        chartVersion:\n          type: string\n        createdAt:\n          type: string\n        namespace:\n          type: string\n        releaseName:\n          type: string\n        updatedAt:\n          type: string\n        version:\n          type: integer\n      type: object\n    deployment.TargetClusterStatus:\n      example:\n        cloud: cloud\n        stale: true\n        clusterName: clusterName\n        clusterId: 0\n        distribution: distribution\n        error: error\n        version: version\n        status: status\n      properties:\n        cloud:\n          type: string\n        clusterId:\n          type: integer\n        clusterName:\n          type: string\n        distribution:\n          type: string\n        error:\n          type: string\n        stale:\n          type: boolean\n        status:\n          type: string\n        version:\n          type: string\n      type: object\n    BackupServiceResponse:\n      example:\n        enabled: true\n      properties:\n        enabled:\n          type: boolean\n      type: object\n    IntegratedServiceList:\n      additionalProperties:\n        $ref: '#/components/schemas/IntegratedServiceDetails'\n      type: object\n    ActivateIntegratedServiceRequest:\n      example:\n        spec: '{}'\n      properties:\n        spec:\n          type: object\n      required:\n      - spec\n      type: object\n    IntegratedServiceDetails:\n      example:\n        output: '{}'\n        spec: '{}'\n        status: inactive\n      properties:\n        output:\n          type: object\n        spec:\n          type: object\n        status:\n          enum:\n          - inactive\n          - pending\n          - active\n          - error\n          type: string\n      required:\n      - status\n      type: object\n    UpdateIntegratedServiceRequest:\n      example:\n        spec: '{}'\n      properties:\n        spec:\n          type: object\n      required:\n      - spec\n      type: object\n    IntegratedServiceSpec:\n      type: object\n    ListNodepoolLabelsResponse:\n      additionalProperties:\n        items:\n          $ref: '#/components/schemas/NodepoolLabels'\n        type: array\n      type: object\n    NodepoolLabels:\n      properties:\n        name:\n          type: string\n        value:\n          type: string\n        reserved:\n          type: boolean\n      type: object\n    NamespaceListResponse:\n      example:\n        namespaces:\n        - name: name\n        - name: name\n      properties:\n        namespaces:\n          items:\n            $ref: '#/components/schemas/NamespaceItem'\n          type: array\n      type: object\n    NamespaceList:\n      items:\n        $ref: '#/components/schemas/NamespaceItem'\n      type: array\n    NamespaceItem:\n      example:\n        name: name\n      properties:\n        name:\n          type: string\n      type: object\n    ListProcessesResponse:\n      items:\n        $ref: '#/components/schemas/Process'\n      type: array\n    Process:\n      example:\n        resourceId: resourceId\n        log: log\n        startedAt: 2000-01-23T04:56:07.000+00:00\n        id: id\n        type: type\n        parentId: parentId\n        orgId: 0\n        events:\n        - processId: processId\n          log: log\n          id: 6\n          type: type\n          timestamp: 2000-01-23T04:56:07.000+00:00\n        - processId: processId\n          log: log\n          id: 6\n          type: type\n          timestamp: 2000-01-23T04:56:07.000+00:00\n        resourceType: resourceType\n        finishedAt: 2000-01-23T04:56:07.000+00:00\n      properties:\n        id:\n          type: string\n        parentId:\n          type: string\n        orgId:\n          type: integer\n        type:\n          type: string\n        log:\n          type: string\n        resourceId:\n          type: string\n        resourceType:\n          type: string\n        status:\n          $ref: '#/components/schemas/ProcessStatus'\n        startedAt:\n          format: date-time\n          type: string\n        finishedAt:\n          format: date-time\n          nullable: true\n          type: string\n        events:\n          items:\n            $ref: '#/components/schemas/ProcessEvent'\n          type: array\n      type: object\n    ProcessEvent:\n      example:\n        processId: processId\n        log: log\n        id: 6\n        type: type\n        timestamp: 2000-01-23T04:56:07.000+00:00\n      properties:\n        id:\n          type: integer\n        processId:\n          type: string\n        type:\n          type: string\n        log:\n          type: string\n        status:\n          $ref: '#/components/schemas/ProcessStatus'\n        timestamp:\n          format: date-time\n          type: string\n      type: object\n    ProcessStatus:\n      enum:\n      - running\n      - failed\n      - finished\n      - canceled\n      title: ProcessStatus\n      type: string\n    CreatePKEClusterKubernetes_oidc:\n      properties:\n        enabled:\n          example: true\n          type: boolean\n    CreatePKEClusterKubernetes_cri:\n      properties:\n        runtime:\n          type: string\n        runtimeConfig:\n          type: object\n    CreatePKEClusterRequestBase_allOf:\n      properties:\n        kubernetes:\n          $ref: '#/components/schemas/CreatePKEClusterKubernetes'\n        proxy:\n          $ref: '#/components/schemas/PKEClusterHTTPProxy'\n      required:\n      - kubernetes\n    CreatePKEOnAzureClusterRequest_allOf:\n      properties:\n        location:\n          description: Non-existent resources will be created in this location. Existing\n            resources that must have the same location as the cluster will be validated\n            against this.\n          example: westeurope\n          type: string\n        resourceGroup:\n          description: Required resources will be created in this resource group.\n          example: my-resource-group-1\n          type: string\n        network:\n          $ref: '#/components/schemas/PKEOnAzureClusterNetwork'\n        accessPoints:\n          description: List of access points (i.e. load balancers, floating IPs) to\n            be created for the cluster. Access points are implemented using cloud\n            provider specific resources.\n          items:\n            enum:\n            - private\n            - public\n            type: string\n          type: array\n        apiServerAccessPoints:\n          description: List of access point references for the API server; currently,\n            public and private are the only valid values\n          items:\n            enum:\n            - private\n            - public\n            type: string\n          type: array\n        nodepools:\n          items:\n            $ref: '#/components/schemas/PKEOnAzureNodePool'\n          type: array\n      required:\n      - resourceGroup\n    PKEOnAzureNodePool_subnet:\n      properties:\n        name:\n          example: my-azure-subnet\n          type: string\n        cidr:\n          description: When referencing an already existing subnetwork this field\n            does not need to be specified.\n          example: 10.0.0.0/24\n          type: string\n    CreatePKEOnVsphereClusterRequest_allOf:\n      properties:\n        storageSecretId:\n          description: Secret ID used to setup VSphere storage classes. Overrides\n            the default settings in main cluster secret.\n          example: 62bc3c75-91fb-4670-bad4-24b401a9deac\n          type: string\n        storageSecretName:\n          description: Secret name used to setup VSphere storage classes. Overrides\n            default value from the main cluster secret.\n          example: my-vsphere-storage-secret\n          type: string\n        folder:\n          description: Folder to create nodes in. Overrides default value from the\n            main cluster secret.\n          example: '[{\"simple\":{\"value\":\"my-folder\",\"summary\":\"The name of the folder\n            anywhere in the hierarchy when it''s unambiguous.\"}},{\"absolute\":{\"value\":\"/Datacenter/vm/my-folder\",\"summary\":\"Absolute\n            path to the folder. Most vSphere installations use paths prefixed with\n            /Datacenter/vm/.\"}}]'\n          type: string\n        datastore:\n          description: Name of datastore or datastore cluster to place VM disks on.\n            Overrides default value from the main cluster secret.\n          example: Datastore-cluster\n          type: string\n        resourcePool:\n          description: Virtual machines will be created in this resource pool. Overrides\n            default value from the main cluster secret.\n          example: my-resource-pool\n          type: string\n        nodepools:\n          items:\n            $ref: '#/components/schemas/PKEOnVsphereNodePool'\n          type: array\n        loadBalancerIPRange:\n          description: IPv4 range to allocate addresses for LoadBalancer Services\n            (MetalLB)\n          example: 192.168.23.150-192.168.23.180\n          type: string\n      required:\n      - resourceGroup\n    EksNodePool_allOf:\n      properties:\n        autoscaling:\n          $ref: '#/components/schemas/NodePoolAutoScaling'\n        volumeSize:\n          description: Size of the EBS volume in GBs of the nodes in the pool.\n          example: 50\n          type: integer\n        instanceType:\n          description: Machine instance type.\n          example: m4.xlarge\n          type: string\n        image:\n          description: Instance AMI.\n          example: ami-06d1667f\n          type: string\n        spotPrice:\n          description: The upper limit price for the requested spot instance. If this\n            field is left empty or 0 passed in on-demand instances used instead of\n            spot instances.\n          example: \"0.2\"\n          type: string\n        subnetId:\n          example: subnet-xxxxxxxxxxxxxx\n          type: string\n        securityGroups:\n          description: List of additional custom security groups for all nodes in\n            the pool.\n          example:\n          - sg-00000xxxx0000xxx1\n          - sg-00000xxxx0000xxx2\n          items:\n            type: string\n          type: array\n      required:\n      - instanceType\n    EksUpdateNodePoolRequest_allOf:\n      properties:\n        autoscaling:\n          $ref: '#/components/schemas/NodePoolAutoScaling'\n        volumeSize:\n          description: Size of the EBS volume in GBs of the nodes in the pool.\n          example: 50\n          type: integer\n        instanceType:\n          description: The instance type to use for your node pool.\n          example: m4.xlarge\n          type: string\n        image:\n          description: The instance AMI to use for your node pool.\n          example: ami-06d1667f\n          type: string\n        version:\n          description: The Kubernetes version to use for your node pool.\n          example: 1.21.6\n          type: string\n        spotPrice:\n          description: The upper limit price for the requested spot instance. If this\n            field is empty or 0 on-demand instances are used instead of spot instances.\n          example: \"0.2\"\n          type: string\n        securityGroups:\n          description: List of additional custom security groups for all nodes in\n            the pool.\n          example:\n          - sg-00000xxxx0000xxx1\n          - sg-00000xxxx0000xxx2\n          items:\n            type: string\n          nullable: true\n          type: array\n        options:\n          $ref: '#/components/schemas/BaseUpdateNodePoolOptions'\n    PkeAwsUpdateNodePoolRequest_allOf:\n      properties:\n        autoscaling:\n          $ref: '#/components/schemas/NodePoolAutoScaling'\n        volumeSize:\n          description: Size of the EBS volume in GBs of the nodes in the pool.\n          example: 50\n          type: integer\n        instanceType:\n          description: The instance type to use for your node pool.\n          example: m4.xlarge\n          type: string\n        image:\n          description: The instance AMI to use for your node pool.\n          example: ami-06d1667f\n          type: string\n        spotPrice:\n          description: The upper limit price for the requested spot instance. If this\n            field is empty or 0 on-demand instances are used instead of spot instances.\n          example: \"0.2\"\n          type: string\n        options:\n          $ref: '#/components/schemas/BaseUpdateNodePoolOptions'\n    CreateEKSProperties_eks:\n      properties:\n        authConfig:\n          $ref: '#/components/schemas/EKSAuthConfig'\n        version:\n          example: \"1.10\"\n          type: string\n        encryptionConfig:\n          description: List of encryption config objects to define the encryption\n            providers and their corresponding resources to encrypt. More information\n            can be found at https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html\n            and https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html.\n          example: |\n            [\n                {\n                    \"provider\": {\n                        \"keyARN\": \"arn:aws:kms:\u003cREGION\u003e:000000000000:key/00000000-0000-0000-0000-000000000000\"\n                    },\n                    \"resources\": [\n                        \"secrets\"\n                    ]\n                }\n            ]\n          items:\n            $ref: '#/components/schemas/EKSEncryptionConfig'\n          type: array\n        logTypes:\n          example:\n          - api\n          - scheduler\n          items:\n            type: string\n          type: array\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/EKSNodePool'\n          type: object\n        vpc:\n          $ref: '#/components/schemas/EKSVpc'\n        routeTableId:\n          description: Id of the RouteTable of the VPC to be used by subnets. This\n            is used only when subnets are created into existing VPC.\n          type: string\n        subnets:\n          description: Subnets for EKS master and worker nodes. All worker nodes will\n            be launched in the same subnet (the first subnet in the list - which may\n            not coincide with first subnet in the cluster create request payload as\n            the deserialization may change the order) unless a subnet is specified\n            for the workers that belong to a node pool at node pool level.\n          items:\n            $ref: '#/components/schemas/EKSSubnet'\n          minItems: 2\n          type: array\n        iam:\n          $ref: '#/components/schemas/EKSIam'\n        apiServerAccessPoints:\n          default:\n          - public\n          description: List of access point types for the API server; public and private\n            are the only valid values\n          items:\n            enum:\n            - private\n            - public\n            type: string\n          type: array\n        tags:\n          additionalProperties:\n            example: '{\"customTagKey\":\"customTagValue\"}'\n            type: string\n          description: User defined tags to be added to created AWS resources. Empty\n            keys and values are not permitted.\n          type: object\n      required:\n      - nodePools\n    CreateACKProperties_ack:\n      properties:\n        regionId:\n          type: string\n        zoneId:\n          type: string\n        vswitchId:\n          example: vsw-zysrfslpfhasklu338qys\n          type: string\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/NodePoolsACK'\n          type: object\n      required:\n      - nodePools\n      - regionId\n      - zoneId\n    CreateAKSProperties_aks:\n      properties:\n        resourceGroup:\n          example: myRg\n          type: string\n        kubernetesVersion:\n          example: 1.8.2\n          type: string\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/NodePoolsAzure'\n          type: object\n        vnetSubnetID:\n          example: /subscriptions/12345678-1234-5678-1234-123456789abc/resourceGroups/your-resource-group-name/providers/Microsoft.Network/virtualNetworks/your-vnet-name/subnets/your-vnet-subnet-name\n          type: string\n      required:\n      - kubernetesVersion\n      - nodePools\n      - resourceGroup\n    CreateGKEProperties_gke_master:\n      properties:\n        version:\n          example: \"1.10\"\n          type: string\n    CreateGKEProperties_gke:\n      properties:\n        projectId:\n          type: string\n        master:\n          $ref: '#/components/schemas/CreateGKEProperties_gke_master'\n        nodeVersion:\n          example: \"1.10\"\n          type: string\n        vpc:\n          description: Name of the GCP Network (VPC) to deploy the cluster to. If\n            omitted than the \"default\" VPC is used.\n          example: corp-vpc\n          type: string\n        subnet:\n          description: Name of the GCP Subnet to deploy the cluster to. If \"default\"\n            VPC is used this field can be omitted. The subnet must be in the same\n            region as the location of the cluster.\n          type: string\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/NodePoolsGoogle'\n          type: object\n      required:\n      - nodePools\n    CreateUpdateOKEProperties_oke:\n      properties:\n        version:\n          example: v1.10.3\n          type: string\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/NodePoolsOracle'\n          type: object\n        vcnId:\n          example: ocid1.vcn.oc1.iad.aaaaaaaapt4vnv6vhy4nxwxfq7e5hji44ugdz3dqpffxk77gurec7skjbcyq\n          type: string\n        lbSubnetId1:\n          example: ocid1.subnet.oc1.iad.abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwx\n          type: string\n        lbSubnetId2:\n          example: ocid1.subnet.oc1.iad.abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmnopqrstuvwx\n          type: string\n      required:\n      - nodePools\n      - version\n    CreatePKEProperties_network:\n      properties:\n        apiServerAddress:\n          example: 10.240.0.204\n          type: string\n        serviceCIDR:\n          example: 10.32.0.0/24\n          type: string\n        podCIDR:\n          example: 10.200.0.0/16\"\n          type: string\n        provider:\n          example: weave\n          type: string\n      required:\n      - apiServerAddress\n      - podCIDR\n      - provider\n      - serviceCIDR\n    CreatePKEProperties_kubernetes_rbac:\n      properties:\n        enabled:\n          example: true\n          type: boolean\n      required:\n      - enabled\n    CreatePKEProperties_kubernetes:\n      properties:\n        version:\n          example: v1.12.2\n          type: string\n        rbac:\n          $ref: '#/components/schemas/CreatePKEProperties_kubernetes_rbac'\n      required:\n      - rbac\n      - version\n    CreatePKEProperties_cri:\n      properties:\n        runtime:\n          example: containerd\n          type: string\n      required:\n      - runtime\n    AmazonAutoScalingGroup_size:\n      properties:\n        min:\n          example: 1\n          type: integer\n        max:\n          example: 1\n          type: integer\n      required:\n      - max\n      - min\n    UpdateEksProperties_eks:\n      properties:\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/EKSNodePool'\n          type: object\n      required:\n      - nodePools\n    UpdateACKProperties_ack:\n      properties:\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/NodePoolsACK'\n          type: object\n      required:\n      - nodePools\n    UpdateAzureProperties_azure:\n      properties:\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/UpdateNodePoolsAzure'\n          type: object\n    UpdateGoogleProperties_master:\n      properties:\n        version:\n          type: string\n    UpdatePKEProperties_pke:\n      properties:\n        nodePools:\n          additionalProperties:\n            $ref: '#/components/schemas/UpdateNodePoolsPKE'\n          type: object\n      required:\n      - nodePools\n    ListNodesResponse_metadata:\n      example:\n        resourceVersion: \"30123\"\n        selfLink: /api/v1/nodes\n      properties:\n        selfLink:\n          example: /api/v1/nodes\n          type: string\n        resourceVersion:\n          example: \"30123\"\n          type: string\n    NodeItem_metadata:\n      example:\n        uid: f214d7fb-41ae-11e8-a4ea-42010a8001da\n        resourceVersion: \"30119\"\n        name: gke-gkecluster-feri-706-pool1-496eccb3-l25k\n        creationTimestamp: 2018-04-16T19:47:07Z\n        annotations:\n          key: '{\"node.alpha.kubernetes.io/ttl\":\"0\"}'\n        selfLink: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k\n        labels:\n          key: '{\"beta.kubernetes.io/arch\":\"amd64\"}'\n      properties:\n        name:\n          example: gke-gkecluster-feri-706-pool1-496eccb3-l25k\n          type: string\n        selfLink:\n          example: /api/v1/nodes/gke-gkecluster-feri-706-pool1-496eccb3-l25k\n          type: string\n        uid:\n          example: f214d7fb-41ae-11e8-a4ea-42010a8001da\n          type: string\n        resourceVersion:\n          example: \"30119\"\n          type: string\n        creationTimestamp:\n          example: 2018-04-16T19:47:07Z\n          type: string\n        labels:\n          additionalProperties:\n            example: '{\"beta.kubernetes.io/arch\":\"amd64\"}'\n            type: string\n          type: object\n        annotations:\n          additionalProperties:\n            example: '{\"node.alpha.kubernetes.io/ttl\":\"0\"}'\n            type: string\n          type: object\n    NodeItem_spec:\n      example:\n        providerID: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k\n        externalID: \"5935724476937880453\"\n        podCIDR: 10.48.0.0/24\n      properties:\n        podCIDR:\n          example: 10.48.0.0/24\n          type: string\n        externalID:\n          example: \"5935724476937880453\"\n          type: string\n        providerID:\n          example: gce://banzaitest/us-central1-a/gke-gkecluster-706-pool1-496eccb3-l25k\n          type: string\n    NodeItem_status_capacity:\n      example:\n        memory: 7664776Ki\n        cpu: \"2\"\n        pods: \"110\"\n      properties:\n        cpu:\n          example: \"2\"\n          type: string\n        memory:\n          example: 7664776Ki\n          type: string\n        pods:\n          example: \"110\"\n          type: string\n    NodeItem_status_allocatable:\n      example:\n        memory: 5784712Ki\n        cpu: 1930m\n        pods: \"110\"\n      properties:\n        cpu:\n          example: 1930m\n          type: string\n        memory:\n          example: 5784712Ki\n          type: string\n        pods:\n          example: \"110\"\n          type: string\n    NodeItem_status_conditions:\n      example:\n        reason: KernelHasNoDeadlock\n        lastHeartbeatTime: 2018-04-17T09:02:45Z\n        type: KernelDeadlock\n        lastTransitionTime: 2018-04-16T19:46:26Z\n        message: kernel has no deadlock\n        status: \"False\"\n      properties:\n        type:\n          example: KernelDeadlock\n          type: string\n        status:\n          example: \"False\"\n          type: string\n        lastHeartbeatTime:\n          example: 2018-04-17T09:02:45Z\n          type: string\n        lastTransitionTime:\n          example: 2018-04-16T19:46:26Z\n          type: string\n        reason:\n          example: KernelHasNoDeadlock\n          type: string\n        message:\n          example: kernel has no deadlock\n          type: string\n    NodeItem_status_addresses:\n      example:\n        address: 10.128.0.2\n        type: InternalIP\n      properties:\n        type:\n          example: InternalIP\n          type: string\n        address:\n          example: 10.128.0.2\n          type: string\n    NodeItem_status_daemonEndpoints:\n      example:\n        kubeletEndpoint: '{}'\n      properties:\n        kubeletEndpoint:\n          properties:\n            Port:\n              example: 10250\n              type: integer\n    NodeItem_status_nodeInfo:\n      example:\n        machineID: 10d8adda771410ca912a387cf7e5cb06\n        bootID: decb64ff-e662-410a-b862-04cb490b4772\n        kernelVersion: 4.4.111+\n        containerRuntimeVersion: docker://17.3.2\n        kubeletVersion: v1.10\n        systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06\n        kubeProxyVersion: v1.10\n        operatingSystem: linux\n        osImage: Container-Optimized OS from Google\n        architecture: amd64\n      properties:\n        machineID:\n          example: 10d8adda771410ca912a387cf7e5cb06\n          type: string\n        systemUUID:\n          example: 10D8ADDA-7714-10CA-912A-387CF7E5CB06\n          type: string\n        bootID:\n          example: decb64ff-e662-410a-b862-04cb490b4772\n          type: string\n        kernelVersion:\n          example: 4.4.111+\n          type: string\n        osImage:\n          example: Container-Optimized OS from Google\n          type: string\n        containerRuntimeVersion:\n          example: docker://17.3.2\n          type: string\n        kubeletVersion:\n          example: v1.10\n          type: string\n        kubeProxyVersion:\n          example: v1.10\n          type: string\n        operatingSystem:\n          example: linux\n          type: string\n        architecture:\n          example: amd64\n          type: string\n    NodeItem_status_images:\n      example:\n        name:\n        - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n        - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n        sizeBytes: 286572743\n      properties:\n        name:\n          example:\n          - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n          - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n          items:\n            type: string\n          type: array\n        sizeBytes:\n          example: 286572743\n          type: integer\n    NodeItem_status:\n      example:\n        daemonEndpoints:\n          kubeletEndpoint: '{}'\n        allocatable:\n          memory: 5784712Ki\n          cpu: 1930m\n          pods: \"110\"\n        addresses:\n        - address: 10.128.0.2\n          type: InternalIP\n        - address: 10.128.0.2\n          type: InternalIP\n        images:\n        - name:\n          - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n          - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n          sizeBytes: 286572743\n        - name:\n          - asia.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e\n          - eu.gcr.io/google_containers/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe\n          sizeBytes: 286572743\n        nodeInfo:\n          machineID: 10d8adda771410ca912a387cf7e5cb06\n          bootID: decb64ff-e662-410a-b862-04cb490b4772\n          kernelVersion: 4.4.111+\n          containerRuntimeVersion: docker://17.3.2\n          kubeletVersion: v1.10\n          systemUUID: 10D8ADDA-7714-10CA-912A-387CF7E5CB06\n          kubeProxyVersion: v1.10\n          operatingSystem: linux\n          osImage: Container-Optimized OS from Google\n          architecture: amd64\n        conditions:\n        - reason: KernelHasNoDeadlock\n          lastHeartbeatTime: 2018-04-17T09:02:45Z\n          type: KernelDeadlock\n          lastTransitionTime: 2018-04-16T19:46:26Z\n          message: kernel has no deadlock\n          status: \"False\"\n        - reason: KernelHasNoDeadlock\n          lastHeartbeatTime: 2018-04-17T09:02:45Z\n          type: KernelDeadlock\n          lastTransitionTime: 2018-04-16T19:46:26Z\n          message: kernel has no deadlock\n          status: \"False\"\n        capacity:\n          memory: 7664776Ki\n          cpu: \"2\"\n          pods: \"110\"\n      properties:\n        capacity:\n          $ref: '#/components/schemas/NodeItem_status_capacity'\n        allocatable:\n          $ref: '#/components/schemas/NodeItem_status_allocatable'\n        conditions:\n          items:\n            $ref: '#/components/schemas/NodeItem_status_conditions'\n          type: array\n        addresses:\n          items:\n            $ref: '#/components/schemas/NodeItem_status_addresses'\n          type: array\n        daemonEndpoints:\n          $ref: '#/components/schemas/NodeItem_status_daemonEndpoints'\n        nodeInfo:\n          $ref: '#/components/schemas/NodeItem_status_nodeInfo'\n        images:\n          items:\n            $ref: '#/components/schemas/NodeItem_status_images'\n          type: array\n    HelmChartDetailsResponse_chart_maintainers:\n      example:\n        name: jackzampolin\n        email: jack.zampolin@gmail.com\n      properties:\n        name:\n          example: jackzampolin\n          type: string\n        email:\n          example: jack.zampolin@gmail.com\n          type: string\n    HelmChartDetailsResponse_chart:\n      example:\n        maintainers:\n        - name: jackzampolin\n          email: jack.zampolin@gmail.com\n        - name: jackzampolin\n          email: jack.zampolin@gmail.com\n        appVersion: 0.12.0\n        sources:\n        - https://github.com/kubernetes/ingress-nginx\n        keywords:\n        - ingress, nginx\n        created: 2018-04-11T18:11:24.761440762Z\n        deprecated: false\n        icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n        description: An nginx Ingress controller that uses ConfigMap to store the\n          nginx configuration.\n        version: 0.13.1\n        home: https://github.com/kubernetes/ingress-nginx\n        urls:\n        - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\n        apiVersion: v1\n        engine: gotpl\n        name: nginx-ingress\n        digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\n      properties:\n        name:\n          example: nginx-ingress\n          type: string\n        home:\n          example: https://github.com/kubernetes/ingress-nginx\n          type: string\n        sources:\n          example:\n          - https://github.com/kubernetes/ingress-nginx\n          items:\n            type: string\n          type: array\n        version:\n          example: 0.13.1\n          type: string\n        description:\n          example: An nginx Ingress controller that uses ConfigMap to store the nginx\n            configuration.\n          type: string\n        keywords:\n          example:\n          - ingress, nginx\n          items:\n            type: string\n          type: array\n        maintainers:\n          items:\n            $ref: '#/components/schemas/HelmChartDetailsResponse_chart_maintainers'\n          type: array\n        engine:\n          example: gotpl\n          type: string\n        icon:\n          example: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n          type: string\n        appVersion:\n          example: 0.12.0\n          type: string\n        apiVersion:\n          example: v1\n          type: string\n        deprecated:\n          example: false\n          type: boolean\n        urls:\n          example:\n          - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\n          items:\n            type: string\n          type: array\n        created:\n          example: 2018-04-11T18:11:24.761440762Z\n          type: string\n        digest:\n          example: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\n          type: string\n    HelmChartDetailsResponse_versions:\n      example:\n        values: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==\n        readme: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK\n        chart:\n          maintainers:\n          - name: jackzampolin\n            email: jack.zampolin@gmail.com\n          - name: jackzampolin\n            email: jack.zampolin@gmail.com\n          appVersion: 0.12.0\n          sources:\n          - https://github.com/kubernetes/ingress-nginx\n          keywords:\n          - ingress, nginx\n          created: 2018-04-11T18:11:24.761440762Z\n          deprecated: false\n          icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png\n          description: An nginx Ingress controller that uses ConfigMap to store the\n            nginx configuration.\n          version: 0.13.1\n          home: https://github.com/kubernetes/ingress-nginx\n          urls:\n          - https://charts.helm.sh/stable/nginx-ingress-0.13.1.tgz\n          apiVersion: v1\n          engine: gotpl\n          name: nginx-ingress\n          digest: cf66d1666019b3e1647ba4dbc06a66ee7db1184629ae3669e11a9f72208eb7aa\n      properties:\n        chart:\n          $ref: '#/components/schemas/HelmChartDetailsResponse_chart'\n        values:\n          example: IyMgbmdpbngtbGVnbyBzcGlucyB1cCBhIHNjYWxhYmxlIGluZ3Jlc3MgcHJvdmlkZXIgdGhhdCBjYW4gYWxzbyBwcm92aXNpb24gU1NMIGNlcnRzCiMjIFNlZSBodHRwczovL2dpdGh1Yi5jb20vamV0c3RhY2sva3ViZS1sZWdvL3RyZWUvbWFzdGVyL2V4YW1wbGVzL25naW54IGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGltcGxlbWVudGF0aW9uCgojIyBOZ2lueCBjb25maWd1cmF0aW9uCiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci9pbmdyZXNzL2NvbnRyb2xsZXJzL25naW54I2F1dG9tYXRlZC1jZXJ0aWZpY2F0ZS1tYW5hZ2VtZW50LXdpdGgta3ViZS1sZWdvCiMjCm5naW54OgogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogazhzLmdjci5pby9uZ2lueC1pbmdyZXNzLWNvbnRyb2xsZXIKICAgIHRhZzogIjAuOC4zIgogICAgcHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgc2VydmljZToKICAgIHR5cGU6IExvYWRCYWxhbmNlcgogIG1vbml0b3Jpbmc6IGZhbHNlCiAgcmVzb3VyY2VzOgogICAgbGltaXRzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAyR2kKICAgIHJlcXVlc3RzOgogICAgICBjcHU6IDEKICAgICAgbWVtb3J5OiAxMjhNaQogIGNvbmZpZ21hcDoKICAgIHByb3h5X2Nvbm5lY3RfdGltZW91dDogIjMwIgogICAgcHJveHlfcmVhZF90aW1lb3V0OiAiNjAwIgogICAgcHJveHlfc2VuZF9pbWVvdXQ6ICI2MDAiCiAgICBoc3RzX2luY2x1ZGVfc3ViZG9tYWluczogImZhbHNlIgogICAgYm9keV9zaXplOiAiNjRtIgogICAgc2VydmVyX25hbWVfaGFzaF9idWNrZXRfc2l6ZTogIjI1NiIKICAgICMgVE9ETzogZmlndXJlIG91dCBob3cgdG8gZXhwb3NlIGB7bmdpbnhfYWRkcn06ODA4MC9uZ2lueF9zdGF0dXNgLCBvbiBleGlzdGluZyBzZXJ2aWNlIG9yIGNyZWF0ZSBuZXcgb25lPwogICAgZW5hYmxlX3Z0c19zdGF0dXM6ICJmYWxzZSIKCiMjIERlZmF1bHQgQmFja2VuZCBjb25maWd1cmF0aW9uCiMjIFRvIHJ1biBhIGRpZmZlcmVudCA0MDQgcGFnZSBmb3IgdGhlIG1hbmFnZWQgZG9tYWlucyBwbGVhc2Ugc2VlIHRoZSBkb2N1bWVudGF0aW9uIGJlbG93CiMjIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMvY29udHJpYi90cmVlL21hc3Rlci80MDQtc2VydmVyCiMjCmRlZmF1bHQ6CiAgcmVwbGljYUNvdW50OiAxCiAgaW1hZ2U6CiAgICByZXBvc2l0b3J5OiBrOHMuZ2NyLmlvL2RlZmF1bHRiYWNrZW5kCiAgICB0YWc6ICIxLjAiCiAgICBwdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCgojIyBrdWJlLWxlZ28gY29uZmlndXJhdGlvbgojIyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28KIyMKbGVnbzoKICBlbmFibGVkOiBmYWxzZQogIHJlcGxpY2FDb3VudDogMQogIGltYWdlOgogICAgcmVwb3NpdG9yeTogamV0c3RhY2sva3ViZS1sZWdvCiAgICB0YWc6ICIwLjEuMyIKICAgIHB1bGxQb2xpY3k6IElmTm90UHJlc2VudAogIGNvbmZpZ21hcDoKICAgIGVtYWlsOiAibXlAZW1haWwudGxkIgogICAgIyBQcm9kdWN0aW9uIExldCdzIEVuY3J5cHQgc2VydmVyCiAgICAjIHVybDogImh0dHBzOi8vYWNtZS12MDEuYXBpLmxldHNlbmNyeXB0Lm9yZy9kaXJlY3RvcnkiCiAgICAjIFRlc3QgTGV0J3MgRW5jcnlwdCBzZXJ2ZXIKICAgIHVybDogImh0dHBzOi8vYWNtZS1zdGFnaW5nLmFwaS5sZXRzZW5jcnlwdC5vcmcvZGlyZWN0b3J5ICIKICByZXNvdXJjZXM6CiAgICBsaW1pdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDJHaQogICAgcmVxdWVzdHM6CiAgICAgIGNwdTogMQogICAgICBtZW1vcnk6IDEyOE1pCg==\n          type: string\n        readme:\n          example: IyBuZ2lueC1sZWdvCgoqKlRoaXMgY2hhcnQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhcyBvZiB2ZXJzaW9uIDAuMi4xIGFuZCB3aWxsIG5vdCBiZSB1cGRhdGVkLiBQbGVhc2UgdXNlIHRoZSBuZ2lueC1pbmdyZXNzIGFuZCAob3B0aW9uYWwpIGt1YmUtbGVnbyBjaGFydHMgaW5zdGVhZC4qKgoKW25naW54LWxlZ29dKGh0dHBzOi8vZ2l0aHViLmNvbS9qZXRzdGFjay9rdWJlLWxlZ28vdHJlZS9tYXN0ZXIvZXhhbXBsZXMvbmdpbngpIGlzIGEgY2hhcnQgZm9yIGFuIFtgbmdpbnhgIGluZ3Jlc3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rdWJlcm5ldGVzL2NvbnRyaWIvdHJlZS9tYXN0ZXIvaW5ncmVzcy9jb250cm9sbGVycy9uZ2lueCkgd2l0aCBvcHRpb25hbCBzdXBwb3J0IGZvciBhdXRvbWF0aWNhbGx5IGdlbmVyYXRpbmcgYFNTTGAgY2VydCBmb3IgdGhlIG1hbmFnZWQgcm91dGVzLgoKVG8gdXNlIHRoaXMgaW5ncmVzcyBjb250b2xsZXIgYWRkIHRoZSBmb2xsb3dpbmcgYW5ub3RhdGlvbnMgdG8gdGhlIGBpbmdyZXNzYCByZXNvdXJjZXMgeW91IHdvdWxkIGxpa2UgdG8gcm91dGUgdGhyb3VnaCBpdDoKCmBgYHlhbWwKYXBpVmVyc2lvbjogZXh0ZW5zaW9ucy92MWJldGExCmtpbmQ6IEluZ3Jlc3MKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBmb28KICBhbm5vdGF0aW9uczoKICAgICMgQWRkIHRvIHJvdXRlIHRocm91Z2ggdGhlIG5naW54IHNlcnZpY2UKICAgIGt1YmVybmV0ZXMuaW8vaW5ncmVzcy5jbGFzczogbmdpbngKICAgICMgQWRkIHRvIGdlbmVyYXRlIGNlcnRpZmljYXRlcyBmb3IgdGhpcyBpbmdyZXNzCiAgICBrdWJlcm5ldGVzLmlvL3Rscy1hY21lOiAidHJ1ZSIKc3BlYzoKICB0bHM6CiAgICAjIFdpdGggdGhpcyBjb25maWd1cmF0aW9uIGt1YmUtbGVnbyB3aWxsIGdlbmVyYXRlIGEgc2VjcmV0IGluIG5hbWVzcGFjZSBmb28gY2FsbGVkIGBleGFtcGxlLXRsc2AKICAgICMgZm9yIHRoZSBVUkwgYHd3dy5leGFtcGxlLmNvbWAKICAgIC0gaG9zdHM6CiAgICAgIC0gInd3dy5leGFtcGxlLmNvbSIKICAgICAgc2VjcmV0TmFtZTogZXhhbXBsZS10bHMKYGBgCgojIyBUTDtEUjsKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgc3RhYmxlL2t1YmUtbGVnbwpgYGAKCiMjIEludHJvZHVjdGlvbgoKVGhpcyBjaGFydCBib290c3RyYXBzIGFuIG5naW54LWxlZ28gZGVwbG95bWVudCBvbiBhIFtLdWJlcm5ldGVzXShodHRwOi8va3ViZXJuZXRlcy5pbykgY2x1c3RlciB1c2luZyB0aGUgW0hlbG1dKGh0dHBzOi8vaGVsbS5zaCkgcGFja2FnZSBtYW5hZ2VyLgoKIyMgUHJlcmVxdWlzaXRlcwoKLSBLdWJlcm5ldGVzIDEuNCsgd2l0aCBCZXRhIEFQSXMgZW5hYmxlZAoKIyMgSW5zdGFsbGluZyB0aGUgQ2hhcnQKClRvIGluc3RhbGwgdGhlIGNoYXJ0IHdpdGggdGhlIHJlbGVhc2UgbmFtZSBgbXktcmVsZWFzZWA6CgpgYGBiYXNoCiQgaGVsbSBpbnN0YWxsIC0tbmFtZSBteS1yZWxlYXNlIHN0YWJsZS9uZ2lueC1sZWdvCmBgYAoKVGhlIGNvbW1hbmQgZGVwbG95cyBuZ2lueC1sZWdvIG9uIHRoZSBLdWJlcm5ldGVzIGNsdXN0ZXIgaW4gdGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbi4gVGhlIFtjb25maWd1cmF0aW9uXSgjY29uZmlndXJhdGlvbikgc2VjdGlvbiBsaXN0cyB0aGUgcGFyYW1ldGVycyB0aGF0IGNhbiBiZSBjb25maWd1cmVkIGR1cmluZyBpbnN0YWxsYXRpb24uCgo+ICoqVGlwKio6IExpc3QgYWxsIHJlbGVhc2VzIHVzaW5nIGBoZWxtIGxpc3RgCgojIyBVbmluc3RhbGxpbmcgdGhlIENoYXJ0CgpUbyB1bmluc3RhbGwvZGVsZXRlIHRoZSBgbXktcmVsZWFzZWAgZGVwbG95bWVudDoKCmBgYGJhc2gKJCBoZWxtIGRlbGV0ZSBteS1yZWxlYXNlCmBgYAoKVGhlIGNvbW1hbmQgcmVtb3ZlcyBhbGwgdGhlIEt1YmVybmV0ZXMgY29tcG9uZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNoYXJ0IGFuZCBkZWxldGVzIHRoZSByZWxlYXNlLgoKIyMgQ29uZmlndXJhdGlvbgoKU2VlIGB2YWx1ZXMueWFtbGAgZm9yIGNvbmZpZ3VyYXRpb24gbm90ZXMuIFNwZWNpZnkgZWFjaCBwYXJhbWV0ZXIgdXNpbmcgdGhlIGAtLXNldCBrZXk9dmFsdWVbLGtleT12YWx1ZV1gIGFyZ3VtZW50IHRvIGBoZWxtIGluc3RhbGxgLiBGb3IgZXhhbXBsZSwKCmBgYGJhc2gKJCBoZWxtIGluc3RhbGwgLS1uYW1lIG15LXJlbGVhc2UgXAogIC0tc2V0IGxlZ28uZW5hYmxlZD1mYWxzZSBcCiAgICBzdGFibGUvbmdpbngtbGVnbwpgYGAKCkluc3RhbGxzIHRoZSBjaGFydCB3aXRob3V0IGt1YmUtbGVnbyBhbmQgdGhlIGFiaWxpdHkgdG8gZ2VuZXJhdGUgY2VydHMuCgpBbHRlcm5hdGl2ZWx5LCBhIFlBTUwgZmlsZSB0aGF0IHNwZWNpZmllcyB0aGUgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVycyBjYW4gYmUgcHJvdmlkZWQgd2hpbGUgaW5zdGFsbGluZyB0aGUgY2hhcnQuIEZvciBleGFtcGxlLAoKYGBgYmFzaAokIGhlbG0gaW5zdGFsbCAtLW5hbWUgbXktcmVsZWFzZSAtZiB2YWx1ZXMueWFtbCBzdGFibGUvbmdpbngtbGVnbwpgYGAKCj4gKipUaXAqKjogWW91IGNhbiB1c2UgdGhlIGRlZmF1bHQgW3ZhbHVlcy55YW1sXSh2YWx1ZXMueWFtbCkK\n          type: string\n    InstallSecretsRequest_query:\n      example:\n        ids:\n        - 02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b\n        type: amazon\n        tags:\n        - repo:pipeline\n      properties:\n        type:\n          example: amazon\n          type: string\n        ids:\n          example:\n          - 02ba59be9de457d3f04a02add7238489cf927511c6cd2a8a2aede19eac2a299b\n          items:\n            type: string\n          type: array\n        tags:\n          example:\n          - repo:pipeline\n          items:\n            type: string\n          type: array\n    SecretTypeResponse_fields:\n      example:\n        name: name\n        isSafeToDisplay: true\n        description: description\n        required: true\n      properties:\n        name:\n          type: string\n        required:\n          type: boolean\n        isSafeToDisplay:\n          type: boolean\n        description:\n          type: string\n    BucketInfo_secret:\n      example:\n        accessId: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef\n        accessName: myaccesssecretname\n        name: mysecretname\n        id: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1\n      properties:\n        id:\n          example: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dca1\n          type: string\n        name:\n          example: mysecretname\n          type: string\n        accessId:\n          description: the secret identifier of the azure access information\n          example: cc051aeaf686444e2f125d0e79eb051aaaf4fb73384f7b0f8c89e84a0502dcef\n          type: string\n        accessName:\n          description: the secret name of the azure access information\n          example: myaccesssecretname\n          type: string\n      required:\n      - id\n    PodItem_labels:\n      example:\n        app: pipeline-traefik\n        release: pipeline\n        chart: traefik-1.14.2\n      properties:\n        app:\n          example: pipeline-traefik\n          type: string\n        chart:\n          example: traefik-1.14.2\n          type: string\n        release:\n          example: pipeline\n          type: string\n    PKEClusterReadinessResponse_master:\n      example:\n        ready: true\n      properties:\n        ready:\n          description: true when the node has been reported to be ready\n          example: true\n          type: boolean\n  securitySchemes:\n    bearerAuth:\n      bearerFormat: JWT\n      scheme: bearer\n      type: http\n"
		}
	},
	"Error": "parse: parse spec: parse operations: paths: /api/v1/orgs/{orgid}/clustergroups: get: operation \"\": parse path: path parameter not specified: \"orgid\""
}