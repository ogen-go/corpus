{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/unstructuredstudio/zubhub"
		},
		"file": {
			"name": "zubhub-openapi-schema.yml",
			"size": 0,
			"path": "zubhub_backend/zubhub/docs/zubhub-openapi-schema.yml",
			"byteSize": 64783,
			"content": "openapi: 3.0.2\ninfo:\n  title: ''\n  version: ''\npaths:\n  /api/rest-auth/logout/:\n    get:\n      operationId: listLogouts\n      description: 'Calls Django logout method and delete the Token object\n\n        assigned to the current User object.\n\n\n        Accepts/Returns nothing.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createLogout\n      description: 'Calls Django logout method and delete the Token object\n\n        assigned to the current User object.\n\n\n        Accepts/Returns nothing.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/rest-auth/user/:\n    get:\n      operationId: retrieveUserDetails\n      description: 'Reads and updates UserModel fields\n\n        Accepts GET, PUT, PATCH methods.\n\n\n        Default accepted fields: username, first_name, last_name\n\n        Default display fields: pk, username, email, first_name, last_name\n\n        Read-only fields: pk, email\n\n\n        Returns UserModel fields.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDetails'\n          description: ''\n      tags:\n      - api\n    put:\n      operationId: updateUserDetails\n      description: 'Reads and updates UserModel fields\n\n        Accepts GET, PUT, PATCH methods.\n\n\n        Default accepted fields: username, first_name, last_name\n\n        Default display fields: pk, username, email, first_name, last_name\n\n        Read-only fields: pk, email\n\n\n        Returns UserModel fields.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDetails'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserDetails'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserDetails'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDetails'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateUserDetails\n      description: 'Reads and updates UserModel fields\n\n        Accepts GET, PUT, PATCH methods.\n\n\n        Default accepted fields: username, first_name, last_name\n\n        Default display fields: pk, username, email, first_name, last_name\n\n        Read-only fields: pk, email\n\n\n        Returns UserModel fields.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDetails'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserDetails'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserDetails'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDetails'\n          description: ''\n      tags:\n      - api\n  /api/creators/auth-user/:\n    get:\n      operationId: retrieveCreator\n      description: \"Fetch the profile of the authenticated user. \\n\\nRequires authentication.\\n\\\n        Returns user profile object.\"\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/search/:\n    get:\n      operationId: listCreators\n      description: 'Fulltext search of users.\n\n\n        Requires search term.\n\n        Returns paginated list of users that match the search term'\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/locations/:\n    get:\n      operationId: listLocations\n      description: 'Fetch all countries from the database.\n\n\n        Takes no input.\n\n        Returns list of all countries.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Location'\n          description: ''\n      tags:\n      - api\n  /api/creators/{username}/projects/:\n    get:\n      operationId: listProjectLists\n      description: 'Get paginated list of all projects created by user with provided\n        username.\n\n\n        Requires username.\n\n        Returns paginated list projects'\n      parameters:\n      - name: username\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ProjectList'\n          description: ''\n      tags:\n      - api\n  /api/creators/{username}/followers/:\n    get:\n      operationId: listCreators\n      description: 'Fetch paginated user follower''s list.\n\n\n        Requires username of user.\n\n        Returns list of users.'\n      parameters:\n      - name: username\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/{username}/following/:\n    get:\n      operationId: listCreators\n      description: 'Fetch paginated list of users being followed by the user with\n        the provided username.\n\n\n        Requires username of user.\n\n        Returns list of users.'\n      parameters:\n      - name: username\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/{username}/members/:\n    get:\n      operationId: listCreators\n      description: 'Fetch paginated list of users in a group.\n\n\n        Requires username of group. Returns list of users.'\n      parameters:\n      - name: username\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/{username}/:\n    get:\n      operationId: retrieveCreator\n      description: 'Fetch Profile of user with given username.\n\n\n        Requires username of user.\n\n        Returns user profile.'\n      parameters:\n      - name: username\n        in: path\n        required: true\n        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n          only.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/{id}/toggle-follow/:\n    get:\n      operationId: retrieveCreator\n      description: 'Remove/Add authenticated user from/to followers list of user with\n        provided id.\n\n\n        Requires authentication.\n\n        Requires user id.\n\n        Returns user profile of user with provided id.'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this creator.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/creators/{id}/remove-member/:\n    get:\n      operationId: retrieveCreator\n      description: \"Remove user from group.\\n\\nRequires authentication.\\nid of user\\\n        \\ to be removed from group. \\nReturns profile of user removed from group.\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this creator.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/projects/:\n    get:\n      operationId: listProjects\n      description: 'Fetch paginated list of projects.\n\n\n        Returns paginated list of projects'\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ProjectList'\n          description: ''\n      tags:\n      - api\n  /api/projects/tags/search/:\n    get:\n      operationId: listTags\n      description: 'Fulltext search of project tags.\n\n\n        Requires query string.\n\n        Returns list of matching tags'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Tag'\n          description: ''\n      tags:\n      - api\n  /api/projects/search/:\n    get:\n      operationId: listProjectLists\n      description: 'Fulltext search of projects.\n\n\n        Requires query string.\n\n        Returns paginated list of matching projects.'\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ProjectList'\n          description: ''\n      tags:\n      - api\n  /api/projects/saved/:\n    get:\n      operationId: listProjectLists\n      description: 'Fetch paginated list of projects saved by authenticated user.\n\n\n        Requires authentication.\n\n        Returns paginated list of projects.'\n      parameters:\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  count:\n                    type: integer\n                    example: 123\n                  next:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=4\n                  previous:\n                    type: string\n                    nullable: true\n                    format: uri\n                    example: http://api.example.org/accounts/?page=2\n                  results:\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/ProjectList'\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/toggle-like/:\n    get:\n      operationId: retrieveProject\n      description: 'Like/Unlike a project.\n\n\n        Requires authentication.\n\n        Rquires project id.\n\n        Returns project details.'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/toggle-save/:\n    get:\n      operationId: retrieveProject\n      description: 'Add/Remove a project from authenticated user''s bookmark.\n\n\n        Requires authentication.\n\n        Rquires project id.\n\n        Returns project details.'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/:\n    get:\n      operationId: retrieveProject\n      description: 'Fetch Project details.\n\n\n        Rquires project id.\n\n        Returns project details.'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this project.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n  /api/projects/categories/:\n    get:\n      operationId: listCategorys\n      description: 'Fetch list of project categories.\n\n\n        Returns list of categories.'\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Category'\n          description: ''\n      tags:\n      - api\n  /api/projects/staff-picks/:\n    get:\n      operationId: listStaffPicks\n      description: \"Get List of staff-picks.\\n\\nA staff-pick is a list of projects\\\n        \\ curated by zubhub staffs.\\n\\nReturns list of staff-picks.\\n\\nresponse data\\\n        \\ format:\\n\\n    [\\n\\n        {\\n\\n            \\\"id\\\": \\\"3fa85f64-5717-4562-b3fc-2c963f66afa6\\\"\\\n        ,\\n\\n            \\\"title\\\": \\\"string\\\",\\n\\n            \\\"description\\\": \\\"\\\n        string\\\",\\n\\n            \\\"projects\\\": [paginated list of projects],\\n\\n \\\n        \\           \\\"created_on\\\": \\\"2022-02-20T11:58:30.082Z\\\"\\n\\n        }\\n\\n\\\n        \\    ]\"\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/StaffPick'\n          description: ''\n      tags:\n      - api\n  /api/projects/staff-picks/{id}/:\n    get:\n      operationId: retrieveStaffPick\n      description: \"Get staff-pick details.\\n\\nA staff-pick is a list of projects\\\n        \\ curated by zubhub staffs.\\n\\nRequires staff-pick id.\\n\\nReturns a single\\\n        \\ staff-pick.\\n\\nresponse data format:\\n\\n    {\\n\\n        \\\"id\\\": \\\"3fa85f64-5717-4562-b3fc-2c963f66afa6\\\"\\\n        ,\\n\\n        \\\"title\\\": \\\"string\\\",\\n\\n        \\\"description\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"projects\\\": [paginated list of projects],\\n\\n        \\\"created_on\\\"\\\n        : \\\"2022-02-20T11:58:30.082Z\\\"\\n\\n    }\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this staff pick.\n        schema:\n          type: string\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StaffPick'\n          description: ''\n      tags:\n      - api\n  /api/upload-file-to-local/:\n    get:\n      operationId: listUploadFileToLocals\n      description: \"Upload File To Storage backend.\\n\\n\\nRequires Authentication.\\n\\\n        \\n------------------------\\n\\n\\\"GET\\\":\\n\\nReturns {\\\"local\\\":True|False} indicating\\\n        \\ if we are to store \\n\\nmedia files on our custom media server or not.\\n\\n\\\n        ------------------------\\n\\n\\\"POST\\\":\\n\\nReturns {\\\"secure_url\\\":\\\"url of\\\n        \\ uploaded file\\\"}\\n\\nRequest body format:\\n\\n    {\\n\\n        file: \u003cmedia\\\n        \\ file\u003e,\\n\\n        key: \u003cfile storage path str\u003e\\n\\n    }\"\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - api\n    post:\n      operationId: createUploadFileToLocal\n      description: \"Upload File To Storage backend.\\n\\n\\nRequires Authentication.\\n\\\n        \\n------------------------\\n\\n\\\"GET\\\":\\n\\nReturns {\\\"local\\\":True|False} indicating\\\n        \\ if we are to store \\n\\nmedia files on our custom media server or not.\\n\\n\\\n        ------------------------\\n\\n\\\"POST\\\":\\n\\nReturns {\\\"secure_url\\\":\\\"url of\\\n        \\ uploaded file\\\"}\\n\\nRequest body format:\\n\\n    {\\n\\n        file: \u003cmedia\\\n        \\ file\u003e,\\n\\n        key: \u003cfile storage path str\u003e\\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/hero/:\n    get:\n      operationId: retrieveHero\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Hero'\n          description: ''\n      tags:\n      - api\n  /api/help/:\n    get:\n      operationId: retrieveHelp\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Help'\n          description: ''\n      tags:\n      - api\n  /api/privacy/:\n    get:\n      operationId: retrievePrivacy\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Privacy'\n          description: ''\n      tags:\n      - api\n  /api/faqs/:\n    get:\n      operationId: listFAQs\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FAQList'\n          description: ''\n      tags:\n      - api\n  /web-schema/:\n    get:\n      operationId: listWebSchemas\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - web-schema\n  /media-schema/:\n    get:\n      operationId: listMediaSchemas\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - media-schema\n  /markdown-to-html/:\n    get:\n      operationId: listMarkdownToHtmls\n      description: ''\n      parameters: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: array\n                items: {}\n          description: ''\n      tags:\n      - markdown-to-html\n  /api/rest-auth/password/reset/:\n    post:\n      operationId: createPasswordReset\n      description: 'Calls Django Auth PasswordResetForm save method.\n\n\n        Accepts the following POST parameters: email\n\n        Returns the success/fail message.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordReset'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PasswordReset'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PasswordReset'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordReset'\n          description: ''\n      tags:\n      - api\n  /api/rest-auth/password/reset/confirm/:\n    post:\n      operationId: createPasswordResetConfirm\n      description: \"Password reset e-mail link is confirmed, therefore\\nthis resets\\\n        \\ the user's password.\\n\\nAccepts the following POST parameters: token, uid,\\n\\\n        \\    new_password1, new_password2\\nReturns the success/fail message.\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordResetConfirm'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PasswordResetConfirm'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PasswordResetConfirm'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordResetConfirm'\n          description: ''\n      tags:\n      - api\n  /api/rest-auth/login/:\n    post:\n      operationId: createLogin\n      description: 'Check the credentials and return the REST Token\n\n        if the credentials are valid and authenticated.\n\n        Calls Django Auth login method to register User ID\n\n        in Django session framework\n\n\n        Accept the following POST parameters: username, password\n\n        Return the REST Framework Token Object''s key.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Login'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Login'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Login'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Login'\n          description: ''\n      tags:\n      - api\n  /api/rest-auth/password/change/:\n    post:\n      operationId: createPasswordChange\n      description: 'Calls Django Auth SetPasswordForm save method.\n\n\n        Accepts the following POST parameters: new_password1, new_password2\n\n        Returns the success/fail message.'\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PasswordChange'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PasswordChange'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PasswordChange'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PasswordChange'\n          description: ''\n      tags:\n      - api\n  /api/rest-auth/registration/:\n    post:\n      operationId: createCustomRegister\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomRegister'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomRegister'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomRegister'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRegister'\n          description: ''\n      tags:\n      - api\n  /api/rest-auth/registration/verify-email/:\n    post:\n      operationId: createVerifyEmail\n      description: ''\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/VerifyEmail'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/VerifyEmail'\n          description: ''\n      tags:\n      - api\n  /api/creators/register/:\n    post:\n      operationId: createCustomRegister\n      description: \"Register a user.\\n\\n\\nReturns basic user profile.\\n\\nrequest body\\\n        \\ format:\\n\\n    {\\n\\n        \\\"username\\\": \\\"string\\\",\\n\\n        \\\"email\\\"\\\n        : \\\"\\\",\\n\\n        \\\"password1\\\": \\\"string\\\",\\n\\n        \\\"password2\\\": \\\"\\\n        string\\\",\\n\\n        \\\"phone\\\": \\\"\\\",\\n\\n        \\\"dateOfBirth\\\": \\\"2022-02-20\\\"\\\n        ,\\n\\n        \\\"location\\\": \\\"string\\\",\\n\\n        \\\"bio\\\": \\\"\\\",\\n\\n     \\\n        \\   \\\"subscribe\\\": false\\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CustomRegister'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CustomRegister'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CustomRegister'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CustomRegister'\n          description: ''\n      tags:\n      - api\n  /api/creators/verify-phone/:\n    post:\n      operationId: createVerifyPhone\n      description: \"Verify user's phone number.\\n\\n\\nReturns {\\\"details\\\": \\\"ok\\\"\\\n        }.\\n\\nrequest body format:\\n\\n    {\\n\\n        key: \\\"dksledfjklskdjlskdjlsjkdlkslekdjsldk\\\"\\\n        \\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/creators/confirm-group-invite/:\n    post:\n      operationId: createConfirmGroupInvite\n      description: \"Confirms user's group invite.\\n\\n\\nRequires verification key.\\\n        \\ Returns {\\\"details\\\": \\\"ok\\\"}.\\n\\nrequest body format:\\n\\n    {\\n\\n    \\\n        \\    key: \\\"dksledfjklskdjlskdjlsjkdlkslekdjsldk\\\"\\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/creators/add-members/:\n    post:\n      operationId: createAddGroupMembers\n      description: \"Add new members to group.\\n\\nRequires authentication.\\n\\nRequires\\\n        \\ body of group_members and/or csv string.\\n\\nReturns group profile.\\n\\ncontenttype\\\n        \\ might need to be set to false.\\n\\nrequest body format:\\n\\n    {\\n\\n    \\\n        \\    group_members: [\\\"username1\\\",\\\"username2\\\"],\\n\\n        csv: \\\"stringified\\\n        \\ csv\\\"\\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AddGroupMembers'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AddGroupMembers'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AddGroupMembers'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AddGroupMembers'\n          description: ''\n      tags:\n      - api\n  /api/creators/{id}/add-comment/:\n    post:\n      operationId: createComment\n      description: \"Comment on user's profile.\\n\\nRequires authentication.\\n\\nRequires\\\n        \\ user id.\\n\\nReturns user profile.\\n\\nrequest body format:\\n\\n    {\\n\\n \\\n        \\       text: \\\"comment text\\\",\\n\\n        parent_id: \\\"id of parent comment\\\n        \\ or None\\\"\\n\\n    }\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n      tags:\n      - api\n  /api/projects/create/:\n    post:\n      operationId: createProject\n      description: \"Create new Project.\\n\\n\\nRequires authentication. Returns project\\\n        \\ details.\\n\\nRequest body format:\\n\\n    {\\n\\n        \\\"title\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"description\\\": \\\"string\\\",\\n\\n        \\\"images\\\": [\\n\\n   \\\n        \\         {\\n\\n            \\\"image_url\\\": \\\"string\\\",\\n\\n            \\\"public_id\\\"\\\n        : \\\"string\\\"\\n\\n            }\\n\\n        ],\\n\\n        \\\"video\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"materials_used\\\": \\\"string\\\",\\n\\n        \\\"category\\\": \\\"string\\\"\\\n        \\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Project'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/add-comment/:\n    post:\n      operationId: createComment\n      description: \"Comment on project.\\n\\nRequires authentication.\\n\\nRequires project\\\n        \\ id.\\n\\nReturns project details.\\n\\nrequest body format:\\n\\n    {\\n\\n   \\\n        \\     text: \\\"comment text\\\",\\n\\n        parent_id: \\\"id of parent comment\\\n        \\ or None\\\"\\n\\n    }\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: ''\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n      tags:\n      - api\n  /api/upload-file/:\n    post:\n      operationId: createUploadFile\n      description: \"Upload Image To Storage Backend.\\n\\n\\nRequires Authentication.\\n\\\n        \\nReturns {\\\"image_url\\\":\\\"url of uploaded image\\\"}\\n\\nRequest body format:\\n\\\n        \\n    {\\n\\n        file: \u003cimage\u003e,\\n\\n        folder: \u003cstorage folder\u003e\\n\\n\\\n        \\    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/delete-file/:\n    post:\n      operationId: createDeleteFile\n      description: \"Delete File from Storage Backend.\\n\\n\\nRequires authentication.\\n\\\n        \\nrequest body format:\\n\\n    {\\n\\n        url: \u003curl of file to delete\u003e\\n\\n\\\n        \\    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/signature/:\n    post:\n      operationId: createSigGen\n      description: \"Generate Cloudinary Upload Signature\\nRequires Authentication.\\n\\\n        request body format:\\n{\\n    \\\"username\\\":\\\"\\\",\\n    \\\"filename\\\":\\\"\\\",\\n\\\n        \\    \\\"upload_preset\\\":\\\"\\\"\\n}\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema: {}\n          application/x-www-form-urlencoded:\n            schema: {}\n          multipart/form-data:\n            schema: {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema: {}\n          description: ''\n      tags:\n      - api\n  /api/creators/edit-creator/:\n    put:\n      operationId: updateCreator\n      description: \"Edit user profile.\\n\\n\\nRequires authentication.\\n\\nReturns user\\\n        \\ profile\\n\\nrequest body format:\\n\\n    {\\n\\n        \\\"username\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"email\\\": \\\"\\\",\\n\\n        \\\"phone\\\": \\\"\\\",\\n\\n        \\\"avatar\\\"\\\n        : \\\"string\\\",\\n\\n        \\\"location\\\": \\\"string\\\",\\n\\n        \\\"bio\\\": \\\"\\\n        string\\\"\\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Creator'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Creator'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Creator'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateCreator\n      description: \"Edit user profile.\\n\\n\\nRequires authentication.\\n\\nReturns user\\\n        \\ profile\\n\\nrequest body format:\\n\\n    {\\n\\n        \\\"username\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"email\\\": \\\"\\\",\\n\\n        \\\"phone\\\": \\\"\\\",\\n\\n        \\\"avatar\\\"\\\n        : \\\"string\\\",\\n\\n        \\\"location\\\": \\\"string\\\",\\n\\n        \\\"bio\\\": \\\"\\\n        string\\\"\\n\\n    }\"\n      parameters: []\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Creator'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Creator'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Creator'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Creator'\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/update/:\n    put:\n      operationId: updateProject\n      description: \"Update project.\\n\\nRequires authentication.\\n\\nRequires project\\\n        \\ id.\\n\\nReturns project details.\\n\\nrequest body format:\\n\\n    {\\n\\n   \\\n        \\     \\\"title\\\": \\\"string\\\",\\n\\n        \\\"description\\\": \\\"string\\\",\\n\\n \\\n        \\       \\\"images\\\": [\\n\\n            {\\n\\n            \\\"image_url\\\": \\\"string\\\"\\\n        ,\\n\\n            \\\"public_id\\\": \\\"string\\\"\\n\\n            }\\n\\n        ],\\n\\\n        \\n        \\\"video\\\": \\\"string\\\",\\n\\n        \\\"materials_used\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"category\\\": \\\"string\\\"\\n\\n    }\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this project.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Project'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateProject\n      description: \"Update project.\\n\\nRequires authentication.\\n\\nRequires project\\\n        \\ id.\\n\\nReturns project details.\\n\\nrequest body format:\\n\\n    {\\n\\n   \\\n        \\     \\\"title\\\": \\\"string\\\",\\n\\n        \\\"description\\\": \\\"string\\\",\\n\\n \\\n        \\       \\\"images\\\": [\\n\\n            {\\n\\n            \\\"image_url\\\": \\\"string\\\"\\\n        ,\\n\\n            \\\"public_id\\\": \\\"string\\\"\\n\\n            }\\n\\n        ],\\n\\\n        \\n        \\\"video\\\": \\\"string\\\",\\n\\n        \\\"materials_used\\\": \\\"string\\\"\\\n        ,\\n\\n        \\\"category\\\": \\\"string\\\"\\n\\n    }\"\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this project.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Project'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Project'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Project'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Project'\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/unpublish-comment/:\n    put:\n      operationId: updateComment\n      description: 'Unpublish a comment.\n\n\n        Requires comment id.\n\n        Returns unpublished comment.'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this comment.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n      tags:\n      - api\n    patch:\n      operationId: partialUpdateComment\n      description: 'Unpublish a comment.\n\n\n        Requires comment id.\n\n        Returns unpublished comment.'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this comment.\n        schema:\n          type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/Comment'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/Comment'\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Comment'\n          description: ''\n      tags:\n      - api\n  /api/creators/delete/:\n    delete:\n      operationId: destroyCreator\n      description: 'Delete user from database.\n\n\n\n        Requires authentication.\n\n\n        Returns {details: \"ok\"}'\n      parameters: []\n      responses:\n        '204':\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/delete/:\n    delete:\n      operationId: destroyProject\n      description: 'Delete a project from database.\n\n\n        Requires authentication.\n\n        Requires project id.\n\n        Returns {details: \"ok\"}'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A UUID string identifying this project.\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - api\n  /api/projects/{id}/delete-comment/:\n    delete:\n      operationId: destroyComment\n      description: 'Delete a comment from database.\n\n\n        Requires authentication.\n\n        Requires comment id.\n\n        Returns {details: \"ok\"}'\n      parameters:\n      - name: id\n        in: path\n        required: true\n        description: A unique integer value identifying this comment.\n        schema:\n          type: string\n      responses:\n        '204':\n          description: ''\n      tags:\n      - api\ncomponents:\n  schemas:\n    UserDetails:\n      type: object\n      properties:\n        pk:\n          type: string\n          format: uuid\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+\\z\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          readOnly: true\n        first_name:\n          type: string\n          maxLength: 150\n        last_name:\n          type: string\n          maxLength: 150\n      required:\n      - username\n    Creator:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        username:\n          type: string\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\n            only.\n          pattern: ^[\\w.@+-]+\\z\n          maxLength: 150\n        email:\n          type: string\n          format: email\n          default: ''\n        phone:\n          type: string\n          default: ''\n        avatar:\n          type: string\n          format: uri\n          nullable: true\n          maxLength: 1000\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n        location:\n          type: string\n        comments:\n          type: string\n          readOnly: true\n        dateOfBirth:\n          type: string\n          format: date\n          readOnly: true\n        bio:\n          type: string\n          nullable: true\n          maxLength: 255\n        followers:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        following_count:\n          type: integer\n          readOnly: true\n        projects_count:\n          type: string\n          readOnly: true\n        members_count:\n          type: string\n          readOnly: true\n        role:\n          type: string\n          readOnly: true\n      required:\n      - username\n      - location\n    Location:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 100\n      required:\n      - name\n    ProjectList:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        creator:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              readOnly: true\n            username:\n              type: string\n              description: Required. 150 characters or fewer. Letters, digits and\n                @/./+/-/_ only.\n              pattern: ^[\\w.@+-]+\\z\n              maxLength: 150\n            email:\n              type: string\n              format: email\n              default: ''\n            phone:\n              type: string\n              default: ''\n            avatar:\n              type: string\n              format: uri\n              nullable: true\n              maxLength: 1000\n              pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n                d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n                ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF\\\n                0-9])?(?:\\\\.(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1\\\n                -\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\.?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\\\\n                s]*)?\\\\z\"\n            location:\n              type: string\n            comments:\n              type: string\n              readOnly: true\n            dateOfBirth:\n              type: string\n              format: date\n              readOnly: true\n            bio:\n              type: string\n              nullable: true\n              maxLength: 255\n            followers:\n              type: array\n              items:\n                type: string\n              readOnly: true\n            following_count:\n              type: integer\n              readOnly: true\n            projects_count:\n              type: string\n              readOnly: true\n            members_count:\n              type: string\n              readOnly: true\n            role:\n              type: string\n              readOnly: true\n          required:\n          - username\n          - location\n          readOnly: true\n        title:\n          type: string\n          maxLength: 1000\n        description:\n          type: string\n          nullable: true\n          maxLength: 10000\n        video:\n          type: string\n          format: uri\n          nullable: true\n          maxLength: 1000\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n        images:\n          type: array\n          items:\n            type: object\n            properties:\n              image_url:\n                type: string\n                format: uri\n                maxLength: 1000\n                pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n                  d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\\\\n                  [[0-9a-f:.]+\\\\]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1\\\n                  -\\uFFFF0-9])?(?:\\\\.(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1\\\n                  -\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\.?|localhost))(?::\\\\\\\n                  d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n              public_id:\n                type: string\n                nullable: true\n                maxLength: 1000\n            required:\n            - image_url\n        views_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        likes:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        saved_by:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        comments_count:\n          type: integer\n          maximum: 2147483647\n          minimum: -2147483648\n        created_on:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - title\n      - images\n    Tag:\n      type: object\n      properties:\n        name:\n          type: string\n          maxLength: 100\n      required:\n      - name\n    Project:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        creator:\n          type: object\n          properties:\n            id:\n              type: string\n              format: uuid\n              readOnly: true\n            username:\n              type: string\n              description: Required. 150 characters or fewer. Letters, digits and\n                @/./+/-/_ only.\n              pattern: ^[\\w.@+-]+\\z\n              maxLength: 150\n            email:\n              type: string\n              format: email\n              default: ''\n            phone:\n              type: string\n              default: ''\n            avatar:\n              type: string\n              format: uri\n              nullable: true\n              maxLength: 1000\n              pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n                d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n                ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF\\\n                0-9])?(?:\\\\.(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1\\\n                -\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\.?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\\\\n                s]*)?\\\\z\"\n            location:\n              type: string\n            comments:\n              type: string\n              readOnly: true\n            dateOfBirth:\n              type: string\n              format: date\n              readOnly: true\n            bio:\n              type: string\n              nullable: true\n              maxLength: 255\n            followers:\n              type: array\n              items:\n                type: string\n              readOnly: true\n            following_count:\n              type: integer\n              readOnly: true\n            projects_count:\n              type: string\n              readOnly: true\n            members_count:\n              type: string\n              readOnly: true\n            role:\n              type: string\n              readOnly: true\n          required:\n          - username\n          - location\n          readOnly: true\n        title:\n          type: string\n          maxLength: 1000\n        description:\n          type: string\n          nullable: true\n          maxLength: 10000\n        images:\n          type: array\n          items:\n            type: object\n            properties:\n              image_url:\n                type: string\n                format: uri\n                maxLength: 1000\n                pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n                  d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\\\\n                  [[0-9a-f:.]+\\\\]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1\\\n                  -\\uFFFF0-9])?(?:\\\\.(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1\\\n                  -\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\.?|localhost))(?::\\\\\\\n                  d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n              public_id:\n                type: string\n                nullable: true\n                maxLength: 1000\n            required:\n            - image_url\n        video:\n          type: string\n          format: uri\n          nullable: true\n          maxLength: 1000\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n        materials_used:\n          type: string\n          maxLength: 5000\n        tags:\n          type: array\n          items:\n            type: object\n            properties:\n              name:\n                type: string\n                maxLength: 100\n            required:\n            - name\n          readOnly: true\n        category:\n          type: string\n        likes:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        saved_by:\n          type: array\n          items:\n            type: string\n          readOnly: true\n        views_count:\n          type: integer\n          readOnly: true\n        comments:\n          type: string\n          readOnly: true\n        created_on:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - title\n      - materials_used\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        name:\n          type: string\n          maxLength: 100\n      required:\n      - name\n    StaffPick:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        title:\n          type: string\n          maxLength: 1000\n        description:\n          type: string\n          maxLength: 1000\n        projects:\n          type: string\n          readOnly: true\n        created_on:\n          type: string\n          format: date-time\n      required:\n      - title\n      - description\n    Hero:\n      type: object\n      properties:\n        title:\n          type: string\n          maxLength: 50\n        description:\n          type: string\n          nullable: true\n          maxLength: 100\n        image_url:\n          type: string\n          format: uri\n          maxLength: 1000\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n        activity_url:\n          type: string\n          format: uri\n          nullable: true\n          maxLength: 1000\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n        explore_ideas_url:\n          type: string\n          format: uri\n          nullable: true\n          maxLength: 1000\n          pattern: \"^(?:[a-z0-9.+-]*)://(?:[^\\\\s:@/]+(?::[^\\\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\\\\\n            d|[0-1]?\\\\d?\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|[0-1]?\\\\d?\\\\d)){3}|\\\\[[0-9a-f:.]+\\\\\\\n            ]|([a-z\\xA1-\\uFFFF0-9](?:[a-z\\xA1-\\uFFFF0-9-]{0,61}[a-z\\xA1-\\uFFFF0-9])?(?:\\\\\\\n            .(?!-)[a-z\\xA1-\\uFFFF0-9-]{1,63}(?\u003c!-))*\\\\.(?!-)(?:[a-z\\xA1-\\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?\u003c!-)\\\\\\\n            .?|localhost))(?::\\\\d{2,5})?(?:[/?#][^\\\\s]*)?\\\\z\"\n      required:\n      - title\n    Help:\n      type: object\n      properties:\n        about:\n          type: string\n          nullable: true\n    Privacy:\n      type: object\n      properties:\n        privacy_policy:\n          type: string\n          nullable: true\n        terms_of_use:\n          type: string\n          nullable: true\n        edited_on:\n          type: string\n          format: date-time\n          nullable: true\n    FAQList:\n      type: object\n      properties:\n        question:\n          type: string\n          nullable: true\n        answer:\n          type: string\n          nullable: true\n    PasswordReset:\n      type: object\n      properties:\n        email:\n          type: string\n          format: email\n      required:\n      - email\n    PasswordResetConfirm:\n      type: object\n      properties:\n        new_password1:\n          type: string\n          maxLength: 128\n        new_password2:\n          type: string\n          maxLength: 128\n        uid:\n          type: string\n        token:\n          type: string\n      required:\n      - new_password1\n      - new_password2\n      - uid\n      - token\n    Login:\n      type: object\n      properties:\n        username:\n          type: string\n        email:\n          type: string\n          format: email\n        password:\n          type: string\n      required:\n      - password\n    PasswordChange:\n      type: object\n      properties:\n        new_password1:\n          type: string\n          maxLength: 128\n        new_password2:\n          type: string\n          maxLength: 128\n      required:\n      - new_password1\n      - new_password2\n    CustomRegister:\n      type: object\n      properties:\n        username:\n          type: string\n          maxLength: 150\n          minLength: 1\n        email:\n          type: string\n          format: email\n          default: ''\n        password1:\n          type: string\n          writeOnly: true\n        password2:\n          type: string\n          writeOnly: true\n        phone:\n          type: string\n          default: ''\n        dateOfBirth:\n          type: string\n          format: date\n        location:\n          type: string\n        bio:\n          type: string\n          default: ''\n          maxLength: 255\n        subscribe:\n          type: boolean\n          default: false\n      required:\n      - username\n      - password1\n      - password2\n      - dateOfBirth\n      - location\n    VerifyEmail:\n      type: object\n      properties:\n        key:\n          type: string\n      required:\n      - key\n    AddGroupMembers:\n      type: object\n      properties:\n        group_members:\n          type: object\n          nullable: true\n        csv:\n          type: string\n          format: binary\n          nullable: true\n    Comment:\n      type: object\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        creator:\n          type: string\n          readOnly: true\n        text:\n          type: string\n          maxLength: 10000\n        created_on:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - text\n"
		}
	},
	"Error": "parse: parse spec: paths: /api/creators/{id}/toggle-follow/: get: duplicate operationId: \"retrieveCreator\""
}