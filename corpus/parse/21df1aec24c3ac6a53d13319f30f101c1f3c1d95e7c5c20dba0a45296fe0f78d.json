{
	"File": {
		"__typename": "FileMatch",
		"repository": {
			"name": "github.com/NCATS-Tangerine/translator-api-registry"
		},
		"file": {
			"name": "smartapi.yaml",
			"size": 0,
			"path": "pfocr/smartapi.yaml",
			"byteSize": 21097,
			"content": "openapi: 3.0.3\ninfo:\n  contact:\n    email: help@biothings.io\n    name: BioThings Team\n    x-id: https://github.com/biothings\n    x-role: responsible developers\n  description: \u003e-\n    Documentation of the BioThings [Pathway Figure OCR (pfocr)](https://github.com/wikipathways/pathway-figure-ocr) \n    query web services.\n  termsOfService: https://biothings.io/about\n  title: BioThings pfocr API\n  version: '2022-04-05'\n  x-translator:\n    infores: \"infores:biothings-pfocr\"\n    component: KP\n    team:\n      - Service Provider\n    biolink-version: \"2.2.13\"\nservers:\n- description: Encrypted Production server\n  url: https://biothings.ncats.io/pfocr\n  x-maturity: production\n- description: Production server\n  url: http://biothings.ncats.io/pfocr\n  x-maturity: production\ntags:\n- name: geneset\n- name: gene\n- name: annotation\n- name: query\n- name: translator\n- name: biothings\npaths:\n  \"/geneset/{id}\":\n    get:\n      parameters:\n      - name: id\n        in: path\n        required: true\n        example: \"PMC6063820__10815_2018_1180_Fig4_HTML.jpg\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: \"Success\"\n      #     content:\n      #       application/json:\n      #         schema:\n      #           $ref: '#/components/schemas/pfocr_figure'\n      #   '404':\n      #     description: A response indicating an unknown Figure ID\n      summary: \u003e-\n        Retrieve figure information based on ID. The endpoint name is misleading; \n        genes, diseases, and chemicals that are mentioned in the figure are returned. \n        Figure information also includes the figure title, name, and url. \n      tags:\n      - geneset\n  \"/geneset\":\n    post:\n      parameters:\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              ids:\n              - \"PMC6063820__10815_2018_1180_Fig4_HTML.jpg\"\n              - \"PMC6057828__nihms944638f9.jpg\"\n            schema:\n              type: object\n              properties:\n                ids:\n                  description: 'multiple Figure IDs separated by comma. Note that\n                    currently we only take the input ids up to 1000 maximum, the rest\n                    will be omitted. Type: string (list). Max: 1000.'\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: \"Success\"\n      summary: \u003e-\n        Retrieve multiple figures' information based on ID. The endpoint name is misleading; \n        genes, diseases, and chemicals that are mentioned in the figures are returned. \n        Figure information also includes the figure title, name, and url. \n      tags:\n      - geneset\n  \"/metadata\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/dev\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data available from the API\n      tags:\n      - metadata\n  \"/metadata/fields\":\n    get:\n      parameters:\n      - \"$ref\": \"#/components/parameters/format\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/search\"\n      - \"$ref\": \"#/components/parameters/prefix\"\n      responses:\n        '200':\n          description: Success\n      summary: Get metadata about the data fields available from a record\n      tags:\n      - metadata\n  \"/query\":\n    get:\n      parameters:\n      - name: q\n        description: Query string.\n        in: query\n        required: true\n        example: \"associatedWith.mentions.genes.ncbigene:8740\"\n        schema:\n          type: string\n      - \"$ref\": \"#/components/parameters/aggs\"\n      - \"$ref\": \"#/components/parameters/facet_size\"\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/userquery\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/explain\"\n      - \"$ref\": \"#/components/parameters/fetch_all\"\n      - \"$ref\": \"#/components/parameters/scroll_id\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make queries and return matching gene hits. Supports JSONP and CORS\n      #   as well.\n      tags:\n      - query\n    post:\n      parameters:\n      - name: q\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n      - name: scopes\n        in: query\n        required: false\n        schema:\n          type: array\n          items:\n            type: string\n            default:\n            - _id\n      - \"$ref\": \"#/components/parameters/from\"\n      - \"$ref\": \"#/components/parameters/sort\"\n      - \"$ref\": \"#/components/parameters/raw\"\n      - \"$ref\": \"#/components/parameters/rawquery\"\n      - \"$ref\": \"#/components/parameters/_source\"\n      - \"$ref\": \"#/components/parameters/size\"\n      - \"$ref\": \"#/components/parameters/dotfield\"\n      - \"$ref\": \"#/components/parameters/_sorted\"\n      - \"$ref\": \"#/components/parameters/always_list\"\n      - \"$ref\": \"#/components/parameters/allow_null\"\n      - \"$ref\": \"#/components/parameters/format\"\n      requestBody:\n        content:\n          application/json:\n            example:\n              q:\n              - \"8740\"\n              - \"9771\"\n              scopes:\n              - \"associatedWith.mentions.genes.ncbigene\"\n            schema:\n              type: object\n              properties:\n                q:\n                  type: array\n                  items:\n                    type: string\n                scopes:\n                  type: array\n                  items:\n                    type: string\n                from:\n                  type: integer\n                sort:\n                  type: array\n                  items:\n                    type: string\n      responses:\n        '200':\n          description: Success\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/QueryPOSTResult\"\n      #   '400':\n      #     content:\n      #       application/json:\n      #         schema:\n      #           \"$ref\": \"#/components/schemas/ErrorResult\"\n      #     description: A response indicating an improperly formatted query\n      # summary: Make batch gene queries and return matching gene hits\n      tags:\n      - query\n      ## 6 operations\n      x-bte-kgs-operations:\n      - $ref: '#/components/x-bte-kgs-operations/gene-chem'\n      - $ref: '#/components/x-bte-kgs-operations/chem-gene'\n      - $ref: '#/components/x-bte-kgs-operations/disease-chem'\n      - $ref: '#/components/x-bte-kgs-operations/chem-disease'\n      - $ref: '#/components/x-bte-kgs-operations/disease-gene'\n      - $ref: '#/components/x-bte-kgs-operations/gene-disease'\ncomponents:\n  parameters:\n    _sorted:\n      name: _sorted\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: true\n    _source:\n      name: _source\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    aggs:\n      name: aggs\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    allow_null:\n      name: allow_null\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    always_list:\n      name: always_list\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    dev:\n      name: dev\n      in: query\n      required: false\n      schema:\n        type: boolean\n    dotfield:\n      name: dotfield\n      in: query\n      required: false\n      schema:\n        type: boolean\n    explain:\n      name: explain\n      in: query\n      required: false\n      schema:\n        type: boolean\n    facet_size:\n      name: facet_size\n      in: query\n      required: false\n      schema:\n        type: integer\n        default: 10\n    fetch_all:\n      name: fetch_all\n      in: query\n      required: false\n      schema:\n        type: boolean\n    format:\n      name: format\n      description: 'controls output format of server response, currently supports:\n        \"json\", \"jsonld\", \"html\". Type: string. Default: json.'\n      in: query\n      required: false\n      schema:\n        type: string\n        default: json\n    from:\n      name: from\n      in: query\n      required: false\n      schema:\n        type: integer\n    prefix:\n      name: prefix\n      in: query\n      required: false\n      schema:\n        type: string\n    raw:\n      name: raw\n      in: query\n      required: false\n      schema:\n        type: boolean\n    rawquery:\n      name: rawquery\n      in: query\n      required: false\n      schema:\n        type: boolean\n    scroll_id:\n      name: scroll_id\n      in: query\n      required: false\n      schema:\n        type: string\n    search:\n      name: search\n      in: query\n      required: false\n      schema:\n        type: string\n    size:\n      name: size\n      description: \"default: 10 objects/records in response\"\n      in: query\n      required: false\n      schema:\n        type: integer\n    sort:\n      name: sort\n      in: query\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n    userquery:\n      name: userquery\n      in: query\n      required: false\n      schema:\n        type: string\n  # schemas:\n  #   pfocr_figure:\n  #     properties:\n  #       _id:\n  #         type: string\n  #     required:\n  #     - _id\n  #     type: object\n  #   ErrorResult:\n  #     properties:\n  #       message:\n  #         type: string\n  #       success:\n  #         type: boolean\n  #     type: object\n  #   QueryPOSTResult:\n  #     items:\n  #       allOf:\n  #       - $ref: '#/components/schemas/pfocr_figure'\n  #       - properties:\n  #           _score:\n  #             format: float\n  #             type: number\n  #           query:\n  #             type: string\n  #         type: object\n  #     type: array\n  #   QueryResult:\n  #     properties:\n  #       hits:\n  #         items:\n  #           $ref: '#/components/schemas/pfocr_figure'\n  #         type: array\n  #       max_score:\n  #         format: float\n  #         type: number\n  #       took:\n  #         type: integer\n  #       total:\n  #         type: integer\n  #     type: object\n  #   int64_or_array:\n  #     oneOf:\n  #     - items:\n  #         format: int64\n  #         type: integer\n  #       type: array\n  #     - format: int64\n  #       type: integer\n  #   string_or_array:\n  #     oneOf:\n  #     - items:\n  #         type: string\n  #       type: array\n  #     - type: string\n  x-bte-kgs-operations:\n  ## 3 potential types: Disease, Gene, SmallMolecule (chem)\n  ## - Pathways don't have formal IDs that can be used\n    gene-chem:\n    ## https://pending.biothings.io/pfocr/query?q=_exists_:associatedWith.mentions.chemicals%20AND%20_exists_:associatedWith.mentions.genes\n    ## 44081 documents. not clear how many gene-chem pairs there are. \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: associatedWith.mentions.genes.ncbigene\n        outputs:\n          - id: MESH\n            semantic: SmallMolecule\n        parameters:\n          fields: \u003e-\n            associatedWith.mentions.chemicals.mesh,\n            associatedWith.figureUrl,associatedWith.pmc,associatedWith.title\n          size: 1000\n        predicate: occurs_together_in_literature_with\n        source: \"infores:pfocr\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/chem\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:3620\"      ## IDO1\n        #     oneOutput: \"MESH:D004958\"    ## Estradiol\n        ## should have 2 figures: https://pending.biothings.io/pfocr/query?q=associatedWith.mentions.chemicals.mesh:D004958%20AND%20associatedWith.mentions.genes.ncbigene:3620\n    chem-gene:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MESH\n            semantic: SmallMolecule\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: associatedWith.mentions.chemicals.mesh\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        parameters:\n          fields: \u003e-\n            associatedWith.mentions.genes.ncbigene,\n            associatedWith.figureUrl,associatedWith.pmc,associatedWith.title\n          size: 1000\n        predicate: occurs_together_in_literature_with\n        source: \"infores:pfocr\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/gene\"\n        # testExamples:\n        #   - qInput: \"MESH:C000541\"       ## cyclopamine \n        #     oneOutput: \"NCBIGene:208\"    ## AKT2\n        ## should have 9 figures: https://pending.biothings.io/pfocr/query?q=associatedWith.mentions.chemicals.mesh:C000541%20AND%20associatedWith.mentions.genes.ncbigene:208\n    disease-chem:\n    ## https://pending.biothings.io/pfocr/query?q=_exists_:associatedWith.mentions.diseases%20AND%20_exists_:associatedWith.mentions.chemicals\n    ## 9232 documents. not clear how many disease-chem pairs there are. \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MESH\n            semantic: Disease\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: associatedWith.mentions.diseases.mesh\n        outputs:\n          - id: MESH\n            semantic: SmallMolecule\n        parameters:\n          fields: \u003e-\n            associatedWith.mentions.chemicals.mesh,\n            associatedWith.figureUrl,associatedWith.pmc,associatedWith.title\n          size: 1000\n        predicate: occurs_together_in_literature_with\n        source: \"infores:pfocr\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/chem\"\n        # testExamples:\n        #   - qInput: \"MESH:D006623\"       ## von Hippel-Lindau Disease\n        #     oneOutput: \"MESH:C516667\"    ## pazopanib\n        ## should have 9 figures: https://pending.biothings.io/pfocr/query?q=associatedWith.mentions.chemicals.mesh:C516667%20AND%20associatedWith.mentions.diseases.mesh:D006623\n    chem-disease:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MESH\n            semantic: SmallMolecule\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: associatedWith.mentions.chemicals.mesh\n        outputs:\n          - id: MESH\n            semantic: Disease\n        parameters:\n          fields: \u003e-\n            associatedWith.mentions.diseases.mesh,\n            associatedWith.figureUrl,associatedWith.pmc,associatedWith.title\n          size: 1000\n        predicate: occurs_together_in_literature_with\n        source: \"infores:pfocr\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/disease\"\n        # testExamples:\n        #   - qInput: \"MESH:D002945\"       ## Cisplatin \n        #     oneOutput: \"MESH:D009369\"    ## Neoplasms\n        ## should have 18 figures: https://pending.biothings.io/pfocr/query?q=associatedWith.mentions.chemicals.mesh:D002945%20AND%20associatedWith.mentions.diseases.mesh:D009369\n    disease-gene:\n    ## https://pending.biothings.io/pfocr/query?q=_exists_:associatedWith.mentions.diseases%20AND%20_exists_:associatedWith.mentions.genes\n    ## 13354 documents. not clear how many disease-gene pairs there are. \n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: MESH\n            semantic: Disease\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: associatedWith.mentions.diseases.mesh\n        outputs:\n          - id: NCBIGene\n            semantic: Gene\n        parameters:\n          fields: \u003e-\n            associatedWith.mentions.genes.ncbigene,\n            associatedWith.figureUrl,associatedWith.pmc,associatedWith.title\n          size: 1000\n        predicate: occurs_together_in_literature_with\n        source: \"infores:pfocr\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/gene\"\n        # testExamples:\n        #   - qInput: \"MESH:D005199\"       ## Fanconi Anemia\n        #     oneOutput: \"NCBIGene:672\"    ## BRCA1\n        ## should have 7 figures: https://pending.biothings.io/pfocr/query?q=associatedWith.mentions.genes.ncbigene:672%20AND%20associatedWith.mentions.diseases.mesh:D005199\n    gene-disease:\n      - supportBatch: true\n        useTemplating: true ## flag to say templating is being used below\n        inputs:\n          - id: NCBIGene\n            semantic: Gene\n        requestBody:\n          body:\n            ## API data has no prefix\n            ## joinSafe is only needed if the delimiter isn't a comma\n            q: \"{{ queryInputs }}\"\n            scopes: associatedWith.mentions.genes.ncbigene\n        outputs:\n          - id: MESH\n            semantic: Disease\n        parameters:\n          fields: \u003e-\n            associatedWith.mentions.diseases.mesh,\n            associatedWith.figureUrl,associatedWith.pmc,associatedWith.title\n          size: 1000\n        predicate: occurs_together_in_literature_with\n        source: \"infores:pfocr\"\n        response_mapping:\n          \"$ref\": \"#/components/x-bte-response-mapping/disease\"\n        # testExamples:\n        #   - qInput: \"NCBIGene:3791\"      ## KDR \n        #     oneOutput: \"MESH:D002318\"    ## Cardiovascular Diseases\n        ## should have 1 figure: https://pending.biothings.io/pfocr/query?q=associatedWith.mentions.genes.ncbigene:3791%20AND%20associatedWith.mentions.diseases.mesh:D002318\n  x-bte-response-mapping:\n    ## pmc_reference kinda matches \"biolink:publication\". However, it doesn't have a PMC prefix so it doesn't quite have the right value...\n    ## not easy to make it clear with biolink-model terms: the publication (PMC ID) vs the figure (title and url)\n    chem:\n      MESH: associatedWith.mentions.chemicals.mesh   ## no prefix\n      figure_url: associatedWith.figureUrl\n      figure_title: associatedWith.title\n      pmc_reference: associatedWith.pmc\n    gene:\n      NCBIGene: associatedWith.mentions.genes.ncbigene   ## no prefix\n      figure_url: associatedWith.figureUrl\n      figure_title: associatedWith.title\n      pmc_reference: associatedWith.pmc\n    disease:\n      MESH: associatedWith.mentions.diseases.mesh   ## no prefix\n      figure_url: associatedWith.figureUrl\n      figure_title: associatedWith.title\n      pmc_reference: associatedWith.pmc\n",
			"canonicalURL": "/github.com/NCATS-Tangerine/translator-api-registry@0a08c4e9b343d1657b7630a734e71640723eaac6/-/blob/pfocr/smartapi.yaml",
			"externalURLs": [
				{
					"url": "https://github.com/NCATS-Tangerine/translator-api-registry/blob/0a08c4e9b343d1657b7630a734e71640723eaac6/pfocr/smartapi.yaml",
					"serviceKind": "GITHUB"
				}
			]
		}
	},
	"Error": "parse: parse spec: parse operations: path \"/query\": post: parameters: parse parameter \"scopes\": schema: parse schema: at 1:10311: parse default: expected type \"string\", got \"array\""
}